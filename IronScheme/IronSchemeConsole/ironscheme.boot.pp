;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$4819$1c1CVa
     g$caar$5012$1c1CVa
     (case-lambda ((g$x$4874$1c1CVa) (car (car g$x$4874$1c1CVa)))))
   (g$cadr$4820$1c1CVa
     g$cadr$5013$1c1CVa
     (case-lambda ((g$x$4875$1c1CVa) (car (cdr g$x$4875$1c1CVa)))))
   (g$cdar$4821$1c1CVa
     g$cdar$5014$1c1CVa
     (case-lambda ((g$x$4876$1c1CVa) (cdr (car g$x$4876$1c1CVa)))))
   (g$cddr$4822$1c1CVa
     g$cddr$5015$1c1CVa
     (case-lambda ((g$x$4877$1c1CVa) (cdr (cdr g$x$4877$1c1CVa)))))
   (g$caaar$4823$1c1CVa
     g$caaar$5016$1c1CVa
     (case-lambda
       ((g$x$4878$1c1CVa) (g$caar$4819$1c1CVa (car g$x$4878$1c1CVa)))))
   (g$caadr$4824$1c1CVa
     g$caadr$5017$1c1CVa
     (case-lambda
       ((g$x$4879$1c1CVa) (g$caar$4819$1c1CVa (cdr g$x$4879$1c1CVa)))))
   (g$cadar$4825$1c1CVa
     g$cadar$5018$1c1CVa
     (case-lambda
       ((g$x$4880$1c1CVa) (g$cadr$4820$1c1CVa (car g$x$4880$1c1CVa)))))
   (g$caddr$4826$1c1CVa
     g$caddr$5019$1c1CVa
     (case-lambda
       ((g$x$4881$1c1CVa) (g$cadr$4820$1c1CVa (cdr g$x$4881$1c1CVa)))))
   (g$cdaar$4827$1c1CVa
     g$cdaar$5020$1c1CVa
     (case-lambda
       ((g$x$4882$1c1CVa) (g$cdar$4821$1c1CVa (car g$x$4882$1c1CVa)))))
   (g$cdadr$4828$1c1CVa
     g$cdadr$5021$1c1CVa
     (case-lambda
       ((g$x$4883$1c1CVa) (g$cdar$4821$1c1CVa (cdr g$x$4883$1c1CVa)))))
   (g$cddar$4829$1c1CVa
     g$cddar$5022$1c1CVa
     (case-lambda
       ((g$x$4884$1c1CVa) (g$cddr$4822$1c1CVa (car g$x$4884$1c1CVa)))))
   (g$cdddr$4830$1c1CVa
     g$cdddr$5023$1c1CVa
     (case-lambda
       ((g$x$4885$1c1CVa) (g$cddr$4822$1c1CVa (cdr g$x$4885$1c1CVa)))))
   (g$caaaar$4831$1c1CVa
     g$caaaar$5024$1c1CVa
     (case-lambda
       ((g$x$4886$1c1CVa) (g$caaar$4823$1c1CVa (car g$x$4886$1c1CVa)))))
   (g$caaadr$4832$1c1CVa
     g$caaadr$5025$1c1CVa
     (case-lambda
       ((g$x$4887$1c1CVa) (g$caaar$4823$1c1CVa (cdr g$x$4887$1c1CVa)))))
   (g$caadar$4833$1c1CVa
     g$caadar$5026$1c1CVa
     (case-lambda
       ((g$x$4888$1c1CVa) (g$caadr$4824$1c1CVa (car g$x$4888$1c1CVa)))))
   (g$caaddr$4834$1c1CVa
     g$caaddr$5027$1c1CVa
     (case-lambda
       ((g$x$4889$1c1CVa) (g$caadr$4824$1c1CVa (cdr g$x$4889$1c1CVa)))))
   (g$cadaar$4835$1c1CVa
     g$cadaar$5028$1c1CVa
     (case-lambda
       ((g$x$4890$1c1CVa) (g$cadar$4825$1c1CVa (car g$x$4890$1c1CVa)))))
   (g$cadadr$4836$1c1CVa
     g$cadadr$5029$1c1CVa
     (case-lambda
       ((g$x$4891$1c1CVa) (g$cadar$4825$1c1CVa (cdr g$x$4891$1c1CVa)))))
   (g$caddar$4837$1c1CVa
     g$caddar$5030$1c1CVa
     (case-lambda
       ((g$x$4892$1c1CVa) (g$caddr$4826$1c1CVa (car g$x$4892$1c1CVa)))))
   (g$cadddr$4838$1c1CVa
     g$cadddr$5031$1c1CVa
     (case-lambda
       ((g$x$4893$1c1CVa) (g$caddr$4826$1c1CVa (cdr g$x$4893$1c1CVa)))))
   (g$cdaaar$4839$1c1CVa
     g$cdaaar$5032$1c1CVa
     (case-lambda
       ((g$x$4894$1c1CVa) (g$cdaar$4827$1c1CVa (car g$x$4894$1c1CVa)))))
   (g$cdaadr$4840$1c1CVa
     g$cdaadr$5033$1c1CVa
     (case-lambda
       ((g$x$4895$1c1CVa) (g$cdaar$4827$1c1CVa (cdr g$x$4895$1c1CVa)))))
   (g$cdadar$4841$1c1CVa
     g$cdadar$5034$1c1CVa
     (case-lambda
       ((g$x$4896$1c1CVa) (g$cdadr$4828$1c1CVa (car g$x$4896$1c1CVa)))))
   (g$cdaddr$4842$1c1CVa
     g$cdaddr$5035$1c1CVa
     (case-lambda
       ((g$x$4897$1c1CVa) (g$cdadr$4828$1c1CVa (cdr g$x$4897$1c1CVa)))))
   (g$cddaar$4843$1c1CVa
     g$cddaar$5036$1c1CVa
     (case-lambda
       ((g$x$4898$1c1CVa) (g$cddar$4829$1c1CVa (car g$x$4898$1c1CVa)))))
   (g$cddadr$4844$1c1CVa
     g$cddadr$5037$1c1CVa
     (case-lambda
       ((g$x$4899$1c1CVa) (g$cddar$4829$1c1CVa (cdr g$x$4899$1c1CVa)))))
   (g$cdddar$4845$1c1CVa
     g$cdddar$5038$1c1CVa
     (case-lambda
       ((g$x$4900$1c1CVa) (g$cdddr$4830$1c1CVa (car g$x$4900$1c1CVa)))))
   (g$cddddr$4846$1c1CVa
     g$cddddr$5039$1c1CVa
     (case-lambda
       ((g$x$4901$1c1CVa) (g$cdddr$4830$1c1CVa (cdr g$x$4901$1c1CVa)))))
   (g$string=?$4853$1c1CVa
     g$string=?$5040$1c1CVa
     (case-lambda
       ((g$a$4902$1c1CVa g$b$4903$1c1CVa . g$rest$4904$1c1CVa)
        (begin
          (if (not (string? g$a$4902$1c1CVa))
            (assertion-violation 'string=? '"not a string" g$a$4902$1c1CVa)
            (void))
          (if (not (string? g$b$4903$1c1CVa))
            (assertion-violation 'string=? '"not a string" g$b$4903$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$4905$1c1CVa)
               (if (not (string? g$x$4905$1c1CVa))
                 (assertion-violation 'string=? '"not a string" g$x$4905$1c1CVa)
                 (void))))
            g$rest$4904$1c1CVa)
          ((letrec ((g$f$4906$1c1CVa
                      (case-lambda
                        ((g$a$4907$1c1CVa g$b$4908$1c1CVa g$rest$4909$1c1CVa)
                         (if (null? g$rest$4909$1c1CVa)
                           (= (string-compare g$a$4907$1c1CVa g$b$4908$1c1CVa)
                              '0)
                           (if (= (string-compare
                                    g$a$4907$1c1CVa
                                    g$b$4908$1c1CVa)
                                  '0)
                             (begin
                               '#f
                               (g$f$4906$1c1CVa
                                 g$b$4908$1c1CVa
                                 (car g$rest$4909$1c1CVa)
                                 (cdr g$rest$4909$1c1CVa)))
                             '#f))))))
             g$f$4906$1c1CVa)
           g$a$4902$1c1CVa
           g$b$4903$1c1CVa
           g$rest$4904$1c1CVa)))))
   (g$string<?$4854$1c1CVa
     g$string<?$5041$1c1CVa
     (case-lambda
       ((g$a$4910$1c1CVa g$b$4911$1c1CVa . g$rest$4912$1c1CVa)
        (begin
          (if (not (string? g$a$4910$1c1CVa))
            (assertion-violation 'string<? '"not a string" g$a$4910$1c1CVa)
            (void))
          (if (not (string? g$b$4911$1c1CVa))
            (assertion-violation 'string<? '"not a string" g$b$4911$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$4913$1c1CVa)
               (if (not (string? g$x$4913$1c1CVa))
                 (assertion-violation 'string<? '"not a string" g$x$4913$1c1CVa)
                 (void))))
            g$rest$4912$1c1CVa)
          ((letrec ((g$f$4914$1c1CVa
                      (case-lambda
                        ((g$a$4915$1c1CVa g$b$4916$1c1CVa g$rest$4917$1c1CVa)
                         (if (null? g$rest$4917$1c1CVa)
                           (< (string-compare g$a$4915$1c1CVa g$b$4916$1c1CVa)
                              '0)
                           (if (< (string-compare
                                    g$a$4915$1c1CVa
                                    g$b$4916$1c1CVa)
                                  '0)
                             (begin
                               '#f
                               (g$f$4914$1c1CVa
                                 g$b$4916$1c1CVa
                                 (car g$rest$4917$1c1CVa)
                                 (cdr g$rest$4917$1c1CVa)))
                             '#f))))))
             g$f$4914$1c1CVa)
           g$a$4910$1c1CVa
           g$b$4911$1c1CVa
           g$rest$4912$1c1CVa)))))
   (g$string>?$4855$1c1CVa
     g$string>?$5042$1c1CVa
     (case-lambda
       ((g$a$4918$1c1CVa g$b$4919$1c1CVa . g$rest$4920$1c1CVa)
        (begin
          (if (not (string? g$a$4918$1c1CVa))
            (assertion-violation 'string>? '"not a string" g$a$4918$1c1CVa)
            (void))
          (if (not (string? g$b$4919$1c1CVa))
            (assertion-violation 'string>? '"not a string" g$b$4919$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$4921$1c1CVa)
               (if (not (string? g$x$4921$1c1CVa))
                 (assertion-violation 'string>? '"not a string" g$x$4921$1c1CVa)
                 (void))))
            g$rest$4920$1c1CVa)
          ((letrec ((g$f$4922$1c1CVa
                      (case-lambda
                        ((g$a$4923$1c1CVa g$b$4924$1c1CVa g$rest$4925$1c1CVa)
                         (if (null? g$rest$4925$1c1CVa)
                           (> (string-compare g$a$4923$1c1CVa g$b$4924$1c1CVa)
                              '0)
                           (if (> (string-compare
                                    g$a$4923$1c1CVa
                                    g$b$4924$1c1CVa)
                                  '0)
                             (begin
                               '#f
                               (g$f$4922$1c1CVa
                                 g$b$4924$1c1CVa
                                 (car g$rest$4925$1c1CVa)
                                 (cdr g$rest$4925$1c1CVa)))
                             '#f))))))
             g$f$4922$1c1CVa)
           g$a$4918$1c1CVa
           g$b$4919$1c1CVa
           g$rest$4920$1c1CVa)))))
   (g$string<=?$4856$1c1CVa
     g$string<=?$5043$1c1CVa
     (case-lambda
       ((g$a$4926$1c1CVa g$b$4927$1c1CVa . g$rest$4928$1c1CVa)
        (begin
          (if (not (string? g$a$4926$1c1CVa))
            (assertion-violation 'string<=? '"not a string" g$a$4926$1c1CVa)
            (void))
          (if (not (string? g$b$4927$1c1CVa))
            (assertion-violation 'string<=? '"not a string" g$b$4927$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$4929$1c1CVa)
               (if (not (string? g$x$4929$1c1CVa))
                 (assertion-violation
                   'string<=?
                   '"not a string"
                   g$x$4929$1c1CVa)
                 (void))))
            g$rest$4928$1c1CVa)
          ((letrec ((g$f$4930$1c1CVa
                      (case-lambda
                        ((g$a$4931$1c1CVa g$b$4932$1c1CVa g$rest$4933$1c1CVa)
                         (if (null? g$rest$4933$1c1CVa)
                           (<= (string-compare g$a$4931$1c1CVa g$b$4932$1c1CVa)
                               '0)
                           (if (<= (string-compare
                                     g$a$4931$1c1CVa
                                     g$b$4932$1c1CVa)
                                   '0)
                             (begin
                               '#f
                               (g$f$4930$1c1CVa
                                 g$b$4932$1c1CVa
                                 (car g$rest$4933$1c1CVa)
                                 (cdr g$rest$4933$1c1CVa)))
                             '#f))))))
             g$f$4930$1c1CVa)
           g$a$4926$1c1CVa
           g$b$4927$1c1CVa
           g$rest$4928$1c1CVa)))))
   (g$string>=?$4857$1c1CVa
     g$string>=?$5044$1c1CVa
     (case-lambda
       ((g$a$4934$1c1CVa g$b$4935$1c1CVa . g$rest$4936$1c1CVa)
        (begin
          (if (not (string? g$a$4934$1c1CVa))
            (assertion-violation 'string>=? '"not a string" g$a$4934$1c1CVa)
            (void))
          (if (not (string? g$b$4935$1c1CVa))
            (assertion-violation 'string>=? '"not a string" g$b$4935$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$4937$1c1CVa)
               (if (not (string? g$x$4937$1c1CVa))
                 (assertion-violation
                   'string>=?
                   '"not a string"
                   g$x$4937$1c1CVa)
                 (void))))
            g$rest$4936$1c1CVa)
          ((letrec ((g$f$4938$1c1CVa
                      (case-lambda
                        ((g$a$4939$1c1CVa g$b$4940$1c1CVa g$rest$4941$1c1CVa)
                         (if (null? g$rest$4941$1c1CVa)
                           (>= (string-compare g$a$4939$1c1CVa g$b$4940$1c1CVa)
                               '0)
                           (if (>= (string-compare
                                     g$a$4939$1c1CVa
                                     g$b$4940$1c1CVa)
                                   '0)
                             (begin
                               '#f
                               (g$f$4938$1c1CVa
                                 g$b$4940$1c1CVa
                                 (car g$rest$4941$1c1CVa)
                                 (cdr g$rest$4941$1c1CVa)))
                             '#f))))))
             g$f$4938$1c1CVa)
           g$a$4934$1c1CVa
           g$b$4935$1c1CVa
           g$rest$4936$1c1CVa)))))
   (g$symbol=?$4858$1c1CVa
     g$symbol=?$5045$1c1CVa
     (case-lambda
       ((g$a$4942$1c1CVa g$b$4943$1c1CVa . g$rest$4944$1c1CVa)
        (begin
          (if (not (symbol? g$a$4942$1c1CVa))
            (assertion-violation 'symbol=? '"not a symbol" g$a$4942$1c1CVa)
            (void))
          (if (not (symbol? g$b$4943$1c1CVa))
            (assertion-violation 'symbol=? '"not a symbol" g$b$4943$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$4945$1c1CVa)
               (if (not (symbol? g$x$4945$1c1CVa))
                 (assertion-violation 'symbol=? '"not a symbol" g$x$4945$1c1CVa)
                 (void))))
            g$rest$4944$1c1CVa)
          ((letrec ((g$f$4946$1c1CVa
                      (case-lambda
                        ((g$a$4947$1c1CVa g$b$4948$1c1CVa g$rest$4949$1c1CVa)
                         (if (null? g$rest$4949$1c1CVa)
                           (eq? g$a$4947$1c1CVa g$b$4948$1c1CVa)
                           (if (eq? g$a$4947$1c1CVa g$b$4948$1c1CVa)
                             (begin
                               '#f
                               (g$f$4946$1c1CVa
                                 g$b$4948$1c1CVa
                                 (car g$rest$4949$1c1CVa)
                                 (cdr g$rest$4949$1c1CVa)))
                             '#f))))))
             g$f$4946$1c1CVa)
           g$a$4942$1c1CVa
           g$b$4943$1c1CVa
           g$rest$4944$1c1CVa)))))
   (g$boolean=?$4859$1c1CVa
     g$boolean=?$5046$1c1CVa
     (case-lambda
       ((g$a$4950$1c1CVa g$b$4951$1c1CVa . g$rest$4952$1c1CVa)
        (begin
          (if (not (boolean? g$a$4950$1c1CVa))
            (assertion-violation 'boolean=? '"not a boolean" g$a$4950$1c1CVa)
            (void))
          (if (not (boolean? g$b$4951$1c1CVa))
            (assertion-violation 'boolean=? '"not a boolean" g$b$4951$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$4953$1c1CVa)
               (if (not (boolean? g$x$4953$1c1CVa))
                 (assertion-violation
                   'boolean=?
                   '"not a boolean"
                   g$x$4953$1c1CVa)
                 (void))))
            g$rest$4952$1c1CVa)
          ((letrec ((g$f$4954$1c1CVa
                      (case-lambda
                        ((g$a$4955$1c1CVa g$b$4956$1c1CVa g$rest$4957$1c1CVa)
                         (if (null? g$rest$4957$1c1CVa)
                           (eq? g$a$4955$1c1CVa g$b$4956$1c1CVa)
                           (if (eq? g$a$4955$1c1CVa g$b$4956$1c1CVa)
                             (begin
                               '#f
                               (g$f$4954$1c1CVa
                                 g$b$4956$1c1CVa
                                 (car g$rest$4957$1c1CVa)
                                 (cdr g$rest$4957$1c1CVa)))
                             '#f))))))
             g$f$4954$1c1CVa)
           g$a$4950$1c1CVa
           g$b$4951$1c1CVa
           g$rest$4952$1c1CVa)))))
   (g$char=?$4866$1c1CVa
     g$char=?$5047$1c1CVa
     (case-lambda
       ((g$a$4958$1c1CVa g$b$4959$1c1CVa . g$rest$4960$1c1CVa)
        (begin
          (if (not (char? g$a$4958$1c1CVa))
            (assertion-violation 'char=? '"not a char" g$a$4958$1c1CVa)
            (void))
          (if (not (char? g$b$4959$1c1CVa))
            (assertion-violation 'char=? '"not a char" g$b$4959$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$4961$1c1CVa)
               (if (not (char? g$x$4961$1c1CVa))
                 (assertion-violation 'char=? '"not a char" g$x$4961$1c1CVa)
                 (void))))
            g$rest$4960$1c1CVa)
          ((letrec ((g$f$4962$1c1CVa
                      (case-lambda
                        ((g$a$4963$1c1CVa g$b$4964$1c1CVa g$rest$4965$1c1CVa)
                         (if (null? g$rest$4965$1c1CVa)
                           (= (char->integer g$a$4963$1c1CVa)
                              (char->integer g$b$4964$1c1CVa))
                           (if (= (char->integer g$a$4963$1c1CVa)
                                  (char->integer g$b$4964$1c1CVa))
                             (begin
                               '#f
                               (g$f$4962$1c1CVa
                                 g$b$4964$1c1CVa
                                 (car g$rest$4965$1c1CVa)
                                 (cdr g$rest$4965$1c1CVa)))
                             '#f))))))
             g$f$4962$1c1CVa)
           g$a$4958$1c1CVa
           g$b$4959$1c1CVa
           g$rest$4960$1c1CVa)))))
   (g$char<?$4867$1c1CVa
     g$char<?$5048$1c1CVa
     (case-lambda
       ((g$a$4966$1c1CVa g$b$4967$1c1CVa . g$rest$4968$1c1CVa)
        (begin
          (if (not (char? g$a$4966$1c1CVa))
            (assertion-violation 'char<? '"not a char" g$a$4966$1c1CVa)
            (void))
          (if (not (char? g$b$4967$1c1CVa))
            (assertion-violation 'char<? '"not a char" g$b$4967$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$4969$1c1CVa)
               (if (not (char? g$x$4969$1c1CVa))
                 (assertion-violation 'char<? '"not a char" g$x$4969$1c1CVa)
                 (void))))
            g$rest$4968$1c1CVa)
          ((letrec ((g$f$4970$1c1CVa
                      (case-lambda
                        ((g$a$4971$1c1CVa g$b$4972$1c1CVa g$rest$4973$1c1CVa)
                         (if (null? g$rest$4973$1c1CVa)
                           (< (char->integer g$a$4971$1c1CVa)
                              (char->integer g$b$4972$1c1CVa))
                           (if (< (char->integer g$a$4971$1c1CVa)
                                  (char->integer g$b$4972$1c1CVa))
                             (begin
                               '#f
                               (g$f$4970$1c1CVa
                                 g$b$4972$1c1CVa
                                 (car g$rest$4973$1c1CVa)
                                 (cdr g$rest$4973$1c1CVa)))
                             '#f))))))
             g$f$4970$1c1CVa)
           g$a$4966$1c1CVa
           g$b$4967$1c1CVa
           g$rest$4968$1c1CVa)))))
   (g$char>?$4868$1c1CVa
     g$char>?$5049$1c1CVa
     (case-lambda
       ((g$a$4974$1c1CVa g$b$4975$1c1CVa . g$rest$4976$1c1CVa)
        (begin
          (if (not (char? g$a$4974$1c1CVa))
            (assertion-violation 'char>? '"not a char" g$a$4974$1c1CVa)
            (void))
          (if (not (char? g$b$4975$1c1CVa))
            (assertion-violation 'char>? '"not a char" g$b$4975$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$4977$1c1CVa)
               (if (not (char? g$x$4977$1c1CVa))
                 (assertion-violation 'char>? '"not a char" g$x$4977$1c1CVa)
                 (void))))
            g$rest$4976$1c1CVa)
          ((letrec ((g$f$4978$1c1CVa
                      (case-lambda
                        ((g$a$4979$1c1CVa g$b$4980$1c1CVa g$rest$4981$1c1CVa)
                         (if (null? g$rest$4981$1c1CVa)
                           (> (char->integer g$a$4979$1c1CVa)
                              (char->integer g$b$4980$1c1CVa))
                           (if (> (char->integer g$a$4979$1c1CVa)
                                  (char->integer g$b$4980$1c1CVa))
                             (begin
                               '#f
                               (g$f$4978$1c1CVa
                                 g$b$4980$1c1CVa
                                 (car g$rest$4981$1c1CVa)
                                 (cdr g$rest$4981$1c1CVa)))
                             '#f))))))
             g$f$4978$1c1CVa)
           g$a$4974$1c1CVa
           g$b$4975$1c1CVa
           g$rest$4976$1c1CVa)))))
   (g$char<=?$4869$1c1CVa
     g$char<=?$5050$1c1CVa
     (case-lambda
       ((g$a$4982$1c1CVa g$b$4983$1c1CVa . g$rest$4984$1c1CVa)
        (begin
          (if (not (char? g$a$4982$1c1CVa))
            (assertion-violation 'char<=? '"not a char" g$a$4982$1c1CVa)
            (void))
          (if (not (char? g$b$4983$1c1CVa))
            (assertion-violation 'char<=? '"not a char" g$b$4983$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$4985$1c1CVa)
               (if (not (char? g$x$4985$1c1CVa))
                 (assertion-violation 'char<=? '"not a char" g$x$4985$1c1CVa)
                 (void))))
            g$rest$4984$1c1CVa)
          ((letrec ((g$f$4986$1c1CVa
                      (case-lambda
                        ((g$a$4987$1c1CVa g$b$4988$1c1CVa g$rest$4989$1c1CVa)
                         (if (null? g$rest$4989$1c1CVa)
                           (<= (char->integer g$a$4987$1c1CVa)
                               (char->integer g$b$4988$1c1CVa))
                           (if (<= (char->integer g$a$4987$1c1CVa)
                                   (char->integer g$b$4988$1c1CVa))
                             (begin
                               '#f
                               (g$f$4986$1c1CVa
                                 g$b$4988$1c1CVa
                                 (car g$rest$4989$1c1CVa)
                                 (cdr g$rest$4989$1c1CVa)))
                             '#f))))))
             g$f$4986$1c1CVa)
           g$a$4982$1c1CVa
           g$b$4983$1c1CVa
           g$rest$4984$1c1CVa)))))
   (g$char>=?$4870$1c1CVa
     g$char>=?$5051$1c1CVa
     (case-lambda
       ((g$a$4990$1c1CVa g$b$4991$1c1CVa . g$rest$4992$1c1CVa)
        (begin
          (if (not (char? g$a$4990$1c1CVa))
            (assertion-violation 'char>=? '"not a char" g$a$4990$1c1CVa)
            (void))
          (if (not (char? g$b$4991$1c1CVa))
            (assertion-violation 'char>=? '"not a char" g$b$4991$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$4993$1c1CVa)
               (if (not (char? g$x$4993$1c1CVa))
                 (assertion-violation 'char>=? '"not a char" g$x$4993$1c1CVa)
                 (void))))
            g$rest$4992$1c1CVa)
          ((letrec ((g$f$4994$1c1CVa
                      (case-lambda
                        ((g$a$4995$1c1CVa g$b$4996$1c1CVa g$rest$4997$1c1CVa)
                         (if (null? g$rest$4997$1c1CVa)
                           (>= (char->integer g$a$4995$1c1CVa)
                               (char->integer g$b$4996$1c1CVa))
                           (if (>= (char->integer g$a$4995$1c1CVa)
                                   (char->integer g$b$4996$1c1CVa))
                             (begin
                               '#f
                               (g$f$4994$1c1CVa
                                 g$b$4996$1c1CVa
                                 (car g$rest$4997$1c1CVa)
                                 (cdr g$rest$4997$1c1CVa)))
                             '#f))))))
             g$f$4994$1c1CVa)
           g$a$4990$1c1CVa
           g$b$4991$1c1CVa
           g$rest$4992$1c1CVa)))))
   (g$rationalize$4871$1c1CVa
     g$rationalize$5052$1c1CVa
     (case-lambda
       ((g$x$4998$1c1CVa g$e$4999$1c1CVa)
        (if (if (infinite? g$x$4998$1c1CVa)
              (begin '#f (infinite? g$e$4999$1c1CVa))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5000$1c1CVa)
              (if (if (exact? g$x$4998$1c1CVa)
                    (begin '#f (exact? g$e$4999$1c1CVa))
                    '#f)
                g$r$5000$1c1CVa
                (inexact g$r$5000$1c1CVa))))
           (apply
             /
             (g$find-ratio$4872$1c1CVa g$x$4998$1c1CVa g$e$4999$1c1CVa)))))))
   (g$find-ratio$4872$1c1CVa
     g$find-ratio$5053$1c1CVa
     (case-lambda
       ((g$x$5001$1c1CVa g$e$5002$1c1CVa)
        (g$find-ratio-between$4873$1c1CVa
          (- g$x$5001$1c1CVa g$e$5002$1c1CVa)
          (+ g$x$5001$1c1CVa g$e$5002$1c1CVa)))))
   (g$find-ratio-between$4873$1c1CVa
     g$find-ratio-between$5054$1c1CVa
     (case-lambda
       ((g$x$5003$1c1CVa g$y$5004$1c1CVa)
        (letrec* ((g$sr$5005$1c1CVa
                    (case-lambda
                      ((g$x$5007$1c1CVa g$y$5008$1c1CVa)
                       ((case-lambda
                          ((g$fx$5009$1c1CVa g$fy$5010$1c1CVa)
                           (if (>= g$fx$5009$1c1CVa g$x$5007$1c1CVa)
                             (list g$fx$5009$1c1CVa '1)
                             (if (= g$fx$5009$1c1CVa g$fy$5010$1c1CVa)
                               ((case-lambda
                                  ((g$rat$5011$1c1CVa)
                                   (list
                                     (+ (g$cadr$4820$1c1CVa g$rat$5011$1c1CVa)
                                        (* g$fx$5009$1c1CVa
                                           (car g$rat$5011$1c1CVa)))
                                     (car g$rat$5011$1c1CVa))))
                                (g$sr$5005$1c1CVa
                                  (/ (- g$y$5008$1c1CVa g$fy$5010$1c1CVa))
                                  (/ (- g$x$5007$1c1CVa g$fx$5009$1c1CVa))))
                               (list (+ '1 g$fx$5009$1c1CVa) '1)))))
                        (exact (floor g$x$5007$1c1CVa))
                        (exact (floor g$y$5008$1c1CVa)))))))
          (if (< g$y$5004$1c1CVa g$x$5003$1c1CVa)
            (g$find-ratio-between$4873$1c1CVa g$y$5004$1c1CVa g$x$5003$1c1CVa)
            (if (>= g$x$5003$1c1CVa g$y$5004$1c1CVa)
              (list g$x$5003$1c1CVa '1)
              (if (positive? g$x$5003$1c1CVa)
                (g$sr$5005$1c1CVa g$x$5003$1c1CVa g$y$5004$1c1CVa)
                (if (negative? g$y$5004$1c1CVa)
                  ((case-lambda
                     ((g$rat$5006$1c1CVa)
                      (list
                        (- (car g$rat$5006$1c1CVa))
                        (g$cadr$4820$1c1CVa g$rat$5006$1c1CVa))))
                   (g$sr$5005$1c1CVa (- g$y$5004$1c1CVa) (- g$x$5003$1c1CVa)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5250$1c1CVa g$using$5285$1c1CVa (clr-using-internal 'system))
   (g$using$5252$1c1CVa
     g$using$5286$1c1CVa
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5253$1c1CVa
     g$make-eq-hashtable$5287$1c1CVa
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5264$1c1CVa)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5264$1c1CVa)))))
   (g$make-eqv-hashtable$5254$1c1CVa
     g$make-eqv-hashtable$5288$1c1CVa
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5265$1c1CVa) (make-hashtable eqv-hash eqv? g$k$5265$1c1CVa))))
   (g$hashtable-size$5255$1c1CVa
     g$hashtable-size$5289$1c1CVa
     (case-lambda
       ((g$ht$5266$1c1CVa)
        (clr-call-internal 'hashtable 'get_count g$ht$5266$1c1CVa))))
   (g$hashtable-ref$5256$1c1CVa
     g$hashtable-ref$5290$1c1CVa
     (case-lambda
       ((g$ht$5267$1c1CVa g$key$5268$1c1CVa g$default$5269$1c1CVa)
        (letrec* ((g$r$5270$1c1CVa
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5267$1c1CVa
                      g$key$5268$1c1CVa)))
          (if (not (null? g$r$5270$1c1CVa))
            g$r$5270$1c1CVa
            g$default$5269$1c1CVa)))))
   (g$hashtable-set!$5257$1c1CVa
     g$hashtable-set!$5291$1c1CVa
     (case-lambda
       ((g$ht$5271$1c1CVa g$key$5272$1c1CVa g$obj$5273$1c1CVa)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5271$1c1CVa
          g$key$5272$1c1CVa
          g$obj$5273$1c1CVa))))
   (g$hashtable-delete!$5258$1c1CVa
     g$hashtable-delete!$5292$1c1CVa
     (case-lambda
       ((g$ht$5274$1c1CVa g$key$5275$1c1CVa)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5274$1c1CVa
          g$key$5275$1c1CVa))))
   (g$hashtable-contains?$5259$1c1CVa
     g$hashtable-contains?$5293$1c1CVa
     (case-lambda
       ((g$ht$5276$1c1CVa g$key$5277$1c1CVa)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5276$1c1CVa
          g$key$5277$1c1CVa))))
   (g$hashtable-update!$5260$1c1CVa
     g$hashtable-update!$5294$1c1CVa
     (case-lambda
       ((g$ht$5278$1c1CVa
          g$key$5279$1c1CVa
          g$proc$5280$1c1CVa
          g$default$5281$1c1CVa)
        (g$hashtable-set!$5257$1c1CVa
          g$ht$5278$1c1CVa
          g$key$5279$1c1CVa
          (g$proc$5280$1c1CVa
            (g$hashtable-ref$5256$1c1CVa
              g$ht$5278$1c1CVa
              g$key$5279$1c1CVa
              g$default$5281$1c1CVa))))))
   (g$hashtable-clear!$5261$1c1CVa
     g$hashtable-clear!$5295$1c1CVa
     (case-lambda
       ((g$ht$5282$1c1CVa)
        (clr-call-internal 'hashtable 'clear g$ht$5282$1c1CVa))
       ((g$ht$5283$1c1CVa g$k$5284$1c1CVa)
        (clr-call-internal 'hashtable 'clear g$ht$5283$1c1CVa))))
   (g$clear-usings$5263$1c1CVa
     g$clear-usings$5296$1c1CVa
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5298$1c1CVa
     g$using$5364$1c1CVa
     (clr-using-internal 'system.io))
   (g$file-exists?$5299$1c1CVa
     g$file-exists?$5365$1c1CVa
     (case-lambda
       ((g$fn$5327$1c1CVa)
        (clr-call-internal 'file 'exists '() g$fn$5327$1c1CVa))))
   (g$delete-file$5300$1c1CVa
     g$delete-file$5366$1c1CVa
     (case-lambda
       ((g$fn$5328$1c1CVa)
        (clr-call-internal 'file 'delete '() g$fn$5328$1c1CVa))))
   (g$file-copy$5301$1c1CVa
     g$file-copy$5367$1c1CVa
     (case-lambda
       ((g$from$5329$1c1CVa g$to$5330$1c1CVa)
        (g$file-copy$5301$1c1CVa g$from$5329$1c1CVa g$to$5330$1c1CVa '#f))
       ((g$from$5331$1c1CVa g$to$5332$1c1CVa g$overwrite?$5333$1c1CVa)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5331$1c1CVa
          g$to$5332$1c1CVa
          g$overwrite?$5333$1c1CVa))))
   (g$file-move$5302$1c1CVa
     g$file-move$5368$1c1CVa
     (case-lambda
       ((g$from$5334$1c1CVa g$to$5335$1c1CVa)
        (clr-call-internal
          'file
          'move
          '()
          g$from$5334$1c1CVa
          g$to$5335$1c1CVa))))
   (g$file-create-time$5303$1c1CVa
     g$file-create-time$5369$1c1CVa
     (case-lambda
       ((g$fn$5336$1c1CVa)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5336$1c1CVa))))
   (g$file-access-time$5304$1c1CVa
     g$file-access-time$5370$1c1CVa
     (case-lambda
       ((g$fn$5337$1c1CVa)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5337$1c1CVa))))
   (g$file-modified-time$5305$1c1CVa
     g$file-modified-time$5371$1c1CVa
     (case-lambda
       ((g$fn$5338$1c1CVa)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5338$1c1CVa))))
   (g$directory-exists?$5306$1c1CVa
     g$directory-exists?$5372$1c1CVa
     (case-lambda
       ((g$fn$5339$1c1CVa)
        (clr-call-internal 'directory 'exists '() g$fn$5339$1c1CVa))))
   (g$delete-directory$5307$1c1CVa
     g$delete-directory$5373$1c1CVa
     (case-lambda
       ((g$dir$5340$1c1CVa)
        (g$delete-directory$5307$1c1CVa g$dir$5340$1c1CVa '#f))
       ((g$dir$5341$1c1CVa g$recursive?$5342$1c1CVa)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5341$1c1CVa
          g$recursive?$5342$1c1CVa))))
   (g$directory-move$5308$1c1CVa
     g$directory-move$5374$1c1CVa
     (case-lambda
       ((g$from$5343$1c1CVa g$to$5344$1c1CVa)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5343$1c1CVa
          g$to$5344$1c1CVa))))
   (g$create-directory$5309$1c1CVa
     g$create-directory$5375$1c1CVa
     (case-lambda
       ((g$name$5345$1c1CVa)
        (clr-call-internal
          'directory
          'createdirectory
          '()
          g$name$5345$1c1CVa))))
   (g$get-files$5310$1c1CVa
     g$get-files$5376$1c1CVa
     (case-lambda
       ((g$dir$5346$1c1CVa) (g$get-files$5310$1c1CVa g$dir$5346$1c1CVa '"*"))
       ((g$dir$5347$1c1CVa g$pattern$5348$1c1CVa)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5347$1c1CVa
          g$pattern$5348$1c1CVa))))
   (g$get-directories$5311$1c1CVa
     g$get-directories$5377$1c1CVa
     (case-lambda
       ((g$dir$5349$1c1CVa)
        (g$get-directories$5311$1c1CVa g$dir$5349$1c1CVa '"*"))
       ((g$dir$5350$1c1CVa g$pattern$5351$1c1CVa)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5350$1c1CVa
          g$pattern$5351$1c1CVa))))
   (g$change-extension$5312$1c1CVa
     g$change-extension$5378$1c1CVa
     (case-lambda
       ((g$path$5352$1c1CVa g$extension$5353$1c1CVa)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5352$1c1CVa
          g$extension$5353$1c1CVa))))
   (g$path-combine$5313$1c1CVa
     g$path-combine$5379$1c1CVa
     (case-lambda
       ((g$path1$5354$1c1CVa g$path2$5355$1c1CVa)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5354$1c1CVa
          g$path2$5355$1c1CVa))))
   (g$get-directory-name$5314$1c1CVa
     g$get-directory-name$5380$1c1CVa
     (case-lambda
       ((g$path$5356$1c1CVa)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5356$1c1CVa))))
   (g$get-extension$5315$1c1CVa
     g$get-extension$5381$1c1CVa
     (case-lambda
       ((g$path$5357$1c1CVa)
        (clr-call-internal 'path 'getextension '() g$path$5357$1c1CVa))))
   (g$get-filename$5316$1c1CVa
     g$get-filename$5382$1c1CVa
     (case-lambda
       ((g$path$5358$1c1CVa)
        (clr-call-internal 'path 'getfilename '() g$path$5358$1c1CVa))))
   (g$get-filename-without-extension$5317$1c1CVa
     g$get-filename-without-extension$5383$1c1CVa
     (case-lambda
       ((g$path$5359$1c1CVa)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5359$1c1CVa))))
   (g$get-full-path$5318$1c1CVa
     g$get-full-path$5384$1c1CVa
     (case-lambda
       ((g$path$5360$1c1CVa)
        (clr-call-internal 'path 'getfullpath '() g$path$5360$1c1CVa))))
   (g$get-path-root$5319$1c1CVa
     g$get-path-root$5385$1c1CVa
     (case-lambda
       ((g$path$5361$1c1CVa)
        (clr-call-internal 'path 'getpathroot '() g$path$5361$1c1CVa))))
   (g$get-random-filename$5320$1c1CVa
     g$get-random-filename$5386$1c1CVa
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5321$1c1CVa
     g$get-temp-filename$5387$1c1CVa
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5322$1c1CVa
     g$get-temp-path$5388$1c1CVa
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5323$1c1CVa
     g$path-rooted?$5389$1c1CVa
     (case-lambda
       ((g$path$5362$1c1CVa)
        (clr-call-internal 'path 'ispathrooted '() g$path$5362$1c1CVa))))
   (g$path-has-extension?$5324$1c1CVa
     g$path-has-extension?$5390$1c1CVa
     (case-lambda
       ((g$path$5363$1c1CVa)
        (clr-call-internal 'path 'hasextension '() g$path$5363$1c1CVa))))
   (g$clear-usings$5326$1c1CVa
     g$clear-usings$5391$1c1CVa
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5392$1c1CVa
     g$find$5483$1c1CVa
     (case-lambda
       ((g$proc$5411$1c1CVa g$l$5412$1c1CVa)
        (if (null? g$l$5412$1c1CVa)
          '#f
          ((case-lambda
             ((g$e$5413$1c1CVa)
              (if (g$proc$5411$1c1CVa g$e$5413$1c1CVa)
                g$e$5413$1c1CVa
                (g$find$5392$1c1CVa g$proc$5411$1c1CVa (cdr g$l$5412$1c1CVa)))))
           (car g$l$5412$1c1CVa))))))
   (g$partition$5393$1c1CVa
     g$partition$5484$1c1CVa
     (case-lambda
       ((g$proc$5414$1c1CVa g$l$5415$1c1CVa)
        ((letrec ((g$f$5416$1c1CVa
                    (case-lambda
                      ((g$l$5417$1c1CVa g$a$5418$1c1CVa g$b$5419$1c1CVa)
                       (if (null? g$l$5417$1c1CVa)
                         (values
                           (reverse! g$a$5418$1c1CVa)
                           (reverse! g$b$5419$1c1CVa))
                         ((case-lambda
                            ((g$e$5420$1c1CVa)
                             (if (g$proc$5414$1c1CVa g$e$5420$1c1CVa)
                               (g$f$5416$1c1CVa
                                 (cdr g$l$5417$1c1CVa)
                                 (cons g$e$5420$1c1CVa g$a$5418$1c1CVa)
                                 g$b$5419$1c1CVa)
                               (g$f$5416$1c1CVa
                                 (cdr g$l$5417$1c1CVa)
                                 g$a$5418$1c1CVa
                                 (cons g$e$5420$1c1CVa g$b$5419$1c1CVa)))))
                          (car g$l$5417$1c1CVa)))))))
           g$f$5416$1c1CVa)
         g$l$5415$1c1CVa
         '()
         '()))))
   (g$remp$5394$1c1CVa
     g$remp$5485$1c1CVa
     (case-lambda
       ((g$proc$5421$1c1CVa g$l$5422$1c1CVa)
        ((letrec ((g$f$5423$1c1CVa
                    (case-lambda
                      ((g$l$5424$1c1CVa g$a$5425$1c1CVa)
                       (if (null? g$l$5424$1c1CVa)
                         (reverse! g$a$5425$1c1CVa)
                         ((case-lambda
                            ((g$e$5426$1c1CVa)
                             (if (g$proc$5421$1c1CVa g$e$5426$1c1CVa)
                               (g$f$5423$1c1CVa
                                 (cdr g$l$5424$1c1CVa)
                                 g$a$5425$1c1CVa)
                               (g$f$5423$1c1CVa
                                 (cdr g$l$5424$1c1CVa)
                                 (cons g$e$5426$1c1CVa g$a$5425$1c1CVa)))))
                          (car g$l$5424$1c1CVa)))))))
           g$f$5423$1c1CVa)
         g$l$5422$1c1CVa
         '()))))
   (g$filter$5395$1c1CVa
     g$filter$5486$1c1CVa
     (case-lambda
       ((g$proc$5427$1c1CVa g$l$5428$1c1CVa)
        ((letrec ((g$f$5429$1c1CVa
                    (case-lambda
                      ((g$l$5430$1c1CVa g$a$5431$1c1CVa)
                       (if (null? g$l$5430$1c1CVa)
                         (reverse! g$a$5431$1c1CVa)
                         ((case-lambda
                            ((g$e$5432$1c1CVa)
                             (if (g$proc$5427$1c1CVa g$e$5432$1c1CVa)
                               (g$f$5429$1c1CVa
                                 (cdr g$l$5430$1c1CVa)
                                 (cons g$e$5432$1c1CVa g$a$5431$1c1CVa))
                               (g$f$5429$1c1CVa
                                 (cdr g$l$5430$1c1CVa)
                                 g$a$5431$1c1CVa))))
                          (car g$l$5430$1c1CVa)))))))
           g$f$5429$1c1CVa)
         g$l$5428$1c1CVa
         '()))))
   (g$assv$5396$1c1CVa
     g$assv$5487$1c1CVa
     (case-lambda
       ((g$obj$5433$1c1CVa g$lst$5434$1c1CVa)
        (if (null? g$lst$5434$1c1CVa)
          '#f
          ((case-lambda
             ((g$c$5435$1c1CVa)
              (if (eqv? g$obj$5433$1c1CVa (car g$c$5435$1c1CVa))
                g$c$5435$1c1CVa
                (g$assv$5396$1c1CVa
                  g$obj$5433$1c1CVa
                  (cdr g$lst$5434$1c1CVa)))))
           (car g$lst$5434$1c1CVa))))))
   (g$assoc$5397$1c1CVa
     g$assoc$5488$1c1CVa
     (case-lambda
       ((g$obj$5436$1c1CVa g$lst$5437$1c1CVa)
        (if (null? g$lst$5437$1c1CVa)
          '#f
          ((case-lambda
             ((g$c$5438$1c1CVa)
              (if (equal? g$obj$5436$1c1CVa (car g$c$5438$1c1CVa))
                g$c$5438$1c1CVa
                (g$assoc$5397$1c1CVa
                  g$obj$5436$1c1CVa
                  (cdr g$lst$5437$1c1CVa)))))
           (car g$lst$5437$1c1CVa))))))
   (g$assp$5398$1c1CVa
     g$assp$5489$1c1CVa
     (case-lambda
       ((g$p?$5439$1c1CVa g$lst$5440$1c1CVa)
        (if (null? g$lst$5440$1c1CVa)
          '#f
          ((case-lambda
             ((g$c$5441$1c1CVa)
              (if (g$p?$5439$1c1CVa (car g$c$5441$1c1CVa))
                g$c$5441$1c1CVa
                (g$assp$5398$1c1CVa g$p?$5439$1c1CVa (cdr g$lst$5440$1c1CVa)))))
           (car g$lst$5440$1c1CVa))))))
   (g$member$5399$1c1CVa
     g$member$5490$1c1CVa
     (case-lambda
       ((g$obj$5442$1c1CVa g$lst$5443$1c1CVa)
        (if (null? g$lst$5443$1c1CVa)
          '#f
          (if (equal? g$obj$5442$1c1CVa (car g$lst$5443$1c1CVa))
            g$lst$5443$1c1CVa
            (g$member$5399$1c1CVa
              g$obj$5442$1c1CVa
              (cdr g$lst$5443$1c1CVa)))))))
   (g$memp$5400$1c1CVa
     g$memp$5491$1c1CVa
     (case-lambda
       ((g$p?$5444$1c1CVa g$lst$5445$1c1CVa)
        (if (null? g$lst$5445$1c1CVa)
          '#f
          (if (g$p?$5444$1c1CVa (car g$lst$5445$1c1CVa))
            g$lst$5445$1c1CVa
            (g$memp$5400$1c1CVa g$p?$5444$1c1CVa (cdr g$lst$5445$1c1CVa)))))))
   (g$all-empty?$5401$1c1CVa
     g$all-empty?$5492$1c1CVa
     (case-lambda
       ((g$ls$5446$1c1CVa)
        ((case-lambda
           ((g$t$5447$1c1CVa)
            (if g$t$5447$1c1CVa
              g$t$5447$1c1CVa
              (begin
                '#f
                (if (null? (car g$ls$5446$1c1CVa))
                  (begin '#f (g$all-empty?$5401$1c1CVa (cdr g$ls$5446$1c1CVa)))
                  '#f)))))
         (null? g$ls$5446$1c1CVa)))))
   (g$split$5402$1c1CVa
     g$split$5493$1c1CVa
     (case-lambda
       ((g$ls$5448$1c1CVa)
        (if (null? g$ls$5448$1c1CVa)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5402$1c1CVa (cdr g$ls$5448$1c1CVa))))
            (case-lambda
              ((g$cars$5449$1c1CVa g$cdrs$5450$1c1CVa)
               ((case-lambda
                  ((g$a$5451$1c1CVa)
                   (values
                     (cons (car g$a$5451$1c1CVa) g$cars$5449$1c1CVa)
                     (cons (cdr g$a$5451$1c1CVa) g$cdrs$5450$1c1CVa))))
                (car g$ls$5448$1c1CVa)))))))))
   (g$for-all$5403$1c1CVa
     g$for-all$5494$1c1CVa
     (case-lambda
       ((g$f$5452$1c1CVa . g$args$5453$1c1CVa)
        (if (g$all-empty?$5401$1c1CVa g$args$5453$1c1CVa)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5402$1c1CVa g$args$5453$1c1CVa)))
            (case-lambda
              ((g$cars$5454$1c1CVa g$cdrs$5455$1c1CVa)
               (if (g$all-empty?$5401$1c1CVa g$cdrs$5455$1c1CVa)
                 (apply g$f$5452$1c1CVa g$cars$5454$1c1CVa)
                 (if (apply g$f$5452$1c1CVa g$cars$5454$1c1CVa)
                   (begin
                     '#f
                     (apply
                       g$for-all$5403$1c1CVa
                       g$f$5452$1c1CVa
                       g$cdrs$5455$1c1CVa))
                   '#f)))))))))
   (g$exists$5404$1c1CVa
     g$exists$5495$1c1CVa
     (case-lambda
       ((g$f$5456$1c1CVa . g$args$5457$1c1CVa)
        (if (g$all-empty?$5401$1c1CVa g$args$5457$1c1CVa)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5402$1c1CVa g$args$5457$1c1CVa)))
            (case-lambda
              ((g$cars$5458$1c1CVa g$cdrs$5459$1c1CVa)
               ((case-lambda
                  ((g$t$5460$1c1CVa)
                   (if g$t$5460$1c1CVa
                     g$t$5460$1c1CVa
                     (begin
                       '#f
                       (apply
                         g$exists$5404$1c1CVa
                         g$f$5456$1c1CVa
                         g$cdrs$5459$1c1CVa)))))
                (apply g$f$5456$1c1CVa g$cars$5458$1c1CVa)))))))))
   (g$cons*$5405$1c1CVa
     g$cons*$5496$1c1CVa
     (case-lambda
       ((g$a$5461$1c1CVa . g$rest$5462$1c1CVa)
        ((letrec ((g$f$5463$1c1CVa
                    (case-lambda
                      ((g$a$5464$1c1CVa g$rest$5465$1c1CVa)
                       (if (null? g$rest$5465$1c1CVa)
                         g$a$5464$1c1CVa
                         (cons
                           g$a$5464$1c1CVa
                           (g$f$5463$1c1CVa
                             (car g$rest$5465$1c1CVa)
                             (cdr g$rest$5465$1c1CVa))))))))
           g$f$5463$1c1CVa)
         g$a$5461$1c1CVa
         g$rest$5462$1c1CVa))))
   (g$fold-left$5406$1c1CVa
     g$fold-left$5497$1c1CVa
     (case-lambda
       ((g$combine$5466$1c1CVa
          g$nil$5467$1c1CVa
          g$list1$5468$1c1CVa
          .
          g$lists$5469$1c1CVa)
        (if (null? g$list1$5468$1c1CVa)
          g$nil$5467$1c1CVa
          (apply
            g$fold-left$5406$1c1CVa
            (g$cons*$5405$1c1CVa
              g$combine$5466$1c1CVa
              (apply
                g$combine$5466$1c1CVa
                (g$cons*$5405$1c1CVa
                  g$nil$5467$1c1CVa
                  (car g$list1$5468$1c1CVa)
                  (map car g$lists$5469$1c1CVa)))
              (cdr g$list1$5468$1c1CVa)
              (map cdr g$lists$5469$1c1CVa)))))))
   (g$fold-right$5407$1c1CVa
     g$fold-right$5498$1c1CVa
     (case-lambda
       ((g$combine$5470$1c1CVa
          g$nil$5471$1c1CVa
          g$list1$5472$1c1CVa
          .
          g$lists$5473$1c1CVa)
        (if (null? g$list1$5472$1c1CVa)
          g$nil$5471$1c1CVa
          (apply
            g$combine$5470$1c1CVa
            (append
              (list (car g$list1$5472$1c1CVa))
              (map car g$lists$5473$1c1CVa)
              (list
                (apply
                  g$fold-right$5407$1c1CVa
                  (g$cons*$5405$1c1CVa
                    g$combine$5470$1c1CVa
                    g$nil$5471$1c1CVa
                    (cdr g$list1$5472$1c1CVa)
                    (map cdr g$lists$5473$1c1CVa))))))))))
   (g$remove$5408$1c1CVa
     g$remove$5499$1c1CVa
     (case-lambda
       ((g$obj$5474$1c1CVa g$list$5475$1c1CVa)
        (g$remp$5394$1c1CVa
          (case-lambda
            ((g$x$5476$1c1CVa) (equal? g$obj$5474$1c1CVa g$x$5476$1c1CVa)))
          g$list$5475$1c1CVa))))
   (g$remv$5409$1c1CVa
     g$remv$5500$1c1CVa
     (case-lambda
       ((g$obj$5477$1c1CVa g$list$5478$1c1CVa)
        (g$remp$5394$1c1CVa
          (case-lambda
            ((g$x$5479$1c1CVa) (eqv? g$obj$5477$1c1CVa g$x$5479$1c1CVa)))
          g$list$5478$1c1CVa))))
   (g$remq$5410$1c1CVa
     g$remq$5501$1c1CVa
     (case-lambda
       ((g$obj$5480$1c1CVa g$list$5481$1c1CVa)
        (g$remp$5394$1c1CVa
          (case-lambda
            ((g$x$5482$1c1CVa) (eq? g$obj$5480$1c1CVa g$x$5482$1c1CVa)))
          g$list$5481$1c1CVa)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5502$1c1CVa
     g$native-endianness$5613$1c1CVa
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5503$1c1CVa
     g$bytevector-u16-ref$5614$1c1CVa
     (case-lambda
       ((g$bytevector$5531$1c1CVa g$k$5532$1c1CVa g$endianness$5533$1c1CVa)
        (bytevector-uint-ref
          g$bytevector$5531$1c1CVa
          g$k$5532$1c1CVa
          g$endianness$5533$1c1CVa
          '2))))
   (g$bytevector-s16-ref$5504$1c1CVa
     g$bytevector-s16-ref$5615$1c1CVa
     (case-lambda
       ((g$bytevector$5534$1c1CVa g$k$5535$1c1CVa g$endianness$5536$1c1CVa)
        (bytevector-sint-ref
          g$bytevector$5534$1c1CVa
          g$k$5535$1c1CVa
          g$endianness$5536$1c1CVa
          '2))))
   (g$bytevector-u16-native-ref$5505$1c1CVa
     g$bytevector-u16-native-ref$5616$1c1CVa
     (case-lambda
       ((g$bytevector$5537$1c1CVa g$k$5538$1c1CVa)
        (bytevector-uint-ref
          g$bytevector$5537$1c1CVa
          g$k$5538$1c1CVa
          (g$native-endianness$5502$1c1CVa)
          '2))))
   (g$bytevector-s16-native-ref$5506$1c1CVa
     g$bytevector-s16-native-ref$5617$1c1CVa
     (case-lambda
       ((g$bytevector$5539$1c1CVa g$k$5540$1c1CVa)
        (bytevector-sint-ref
          g$bytevector$5539$1c1CVa
          g$k$5540$1c1CVa
          (g$native-endianness$5502$1c1CVa)
          '2))))
   (g$bytevector-u16-set!$5507$1c1CVa
     g$bytevector-u16-set!$5618$1c1CVa
     (case-lambda
       ((g$bytevector$5541$1c1CVa
          g$k$5542$1c1CVa
          g$n$5543$1c1CVa
          g$endianness$5544$1c1CVa)
        (bytevector-uint-set!
          g$bytevector$5541$1c1CVa
          g$k$5542$1c1CVa
          g$n$5543$1c1CVa
          g$endianness$5544$1c1CVa
          '2))))
   (g$bytevector-s16-set!$5508$1c1CVa
     g$bytevector-s16-set!$5619$1c1CVa
     (case-lambda
       ((g$bytevector$5545$1c1CVa
          g$k$5546$1c1CVa
          g$n$5547$1c1CVa
          g$endianness$5548$1c1CVa)
        (bytevector-sint-set!
          g$bytevector$5545$1c1CVa
          g$k$5546$1c1CVa
          g$n$5547$1c1CVa
          g$endianness$5548$1c1CVa
          '2))))
   (g$bytevector-u16-native-set!$5509$1c1CVa
     g$bytevector-u16-native-set!$5620$1c1CVa
     (case-lambda
       ((g$bytevector$5549$1c1CVa g$k$5550$1c1CVa g$n$5551$1c1CVa)
        (bytevector-uint-set!
          g$bytevector$5549$1c1CVa
          g$k$5550$1c1CVa
          g$n$5551$1c1CVa
          (g$native-endianness$5502$1c1CVa)
          '2))))
   (g$bytevector-s16-native-set!$5510$1c1CVa
     g$bytevector-s16-native-set!$5621$1c1CVa
     (case-lambda
       ((g$bytevector$5552$1c1CVa g$k$5553$1c1CVa g$n$5554$1c1CVa)
        (bytevector-sint-set!
          g$bytevector$5552$1c1CVa
          g$k$5553$1c1CVa
          g$n$5554$1c1CVa
          (g$native-endianness$5502$1c1CVa)
          '2))))
   (g$bytevector-u32-ref$5511$1c1CVa
     g$bytevector-u32-ref$5622$1c1CVa
     (case-lambda
       ((g$bytevector$5555$1c1CVa g$k$5556$1c1CVa g$endianness$5557$1c1CVa)
        (bytevector-uint-ref
          g$bytevector$5555$1c1CVa
          g$k$5556$1c1CVa
          g$endianness$5557$1c1CVa
          '4))))
   (g$bytevector-s32-ref$5512$1c1CVa
     g$bytevector-s32-ref$5623$1c1CVa
     (case-lambda
       ((g$bytevector$5558$1c1CVa g$k$5559$1c1CVa g$endianness$5560$1c1CVa)
        (bytevector-sint-ref
          g$bytevector$5558$1c1CVa
          g$k$5559$1c1CVa
          g$endianness$5560$1c1CVa
          '4))))
   (g$bytevector-u32-native-ref$5513$1c1CVa
     g$bytevector-u32-native-ref$5624$1c1CVa
     (case-lambda
       ((g$bytevector$5561$1c1CVa g$k$5562$1c1CVa)
        (bytevector-uint-ref
          g$bytevector$5561$1c1CVa
          g$k$5562$1c1CVa
          (g$native-endianness$5502$1c1CVa)
          '4))))
   (g$bytevector-s32-native-ref$5514$1c1CVa
     g$bytevector-s32-native-ref$5625$1c1CVa
     (case-lambda
       ((g$bytevector$5563$1c1CVa g$k$5564$1c1CVa)
        (bytevector-sint-ref
          g$bytevector$5563$1c1CVa
          g$k$5564$1c1CVa
          (g$native-endianness$5502$1c1CVa)
          '4))))
   (g$bytevector-u32-set!$5515$1c1CVa
     g$bytevector-u32-set!$5626$1c1CVa
     (case-lambda
       ((g$bytevector$5565$1c1CVa
          g$k$5566$1c1CVa
          g$n$5567$1c1CVa
          g$endianness$5568$1c1CVa)
        (bytevector-uint-set!
          g$bytevector$5565$1c1CVa
          g$k$5566$1c1CVa
          g$n$5567$1c1CVa
          g$endianness$5568$1c1CVa
          '4))))
   (g$bytevector-s32-set!$5516$1c1CVa
     g$bytevector-s32-set!$5627$1c1CVa
     (case-lambda
       ((g$bytevector$5569$1c1CVa
          g$k$5570$1c1CVa
          g$n$5571$1c1CVa
          g$endianness$5572$1c1CVa)
        (bytevector-sint-set!
          g$bytevector$5569$1c1CVa
          g$k$5570$1c1CVa
          g$n$5571$1c1CVa
          g$endianness$5572$1c1CVa
          '4))))
   (g$bytevector-u32-native-set!$5517$1c1CVa
     g$bytevector-u32-native-set!$5628$1c1CVa
     (case-lambda
       ((g$bytevector$5573$1c1CVa g$k$5574$1c1CVa g$n$5575$1c1CVa)
        (bytevector-uint-set!
          g$bytevector$5573$1c1CVa
          g$k$5574$1c1CVa
          g$n$5575$1c1CVa
          (g$native-endianness$5502$1c1CVa)
          '4))))
   (g$bytevector-s32-native-set!$5518$1c1CVa
     g$bytevector-s32-native-set!$5629$1c1CVa
     (case-lambda
       ((g$bytevector$5576$1c1CVa g$k$5577$1c1CVa g$n$5578$1c1CVa)
        (bytevector-sint-set!
          g$bytevector$5576$1c1CVa
          g$k$5577$1c1CVa
          g$n$5578$1c1CVa
          (g$native-endianness$5502$1c1CVa)
          '4))))
   (g$bytevector-u64-ref$5519$1c1CVa
     g$bytevector-u64-ref$5630$1c1CVa
     (case-lambda
       ((g$bytevector$5579$1c1CVa g$k$5580$1c1CVa g$endianness$5581$1c1CVa)
        (bytevector-uint-ref
          g$bytevector$5579$1c1CVa
          g$k$5580$1c1CVa
          g$endianness$5581$1c1CVa
          '8))))
   (g$bytevector-s64-ref$5520$1c1CVa
     g$bytevector-s64-ref$5631$1c1CVa
     (case-lambda
       ((g$bytevector$5582$1c1CVa g$k$5583$1c1CVa g$endianness$5584$1c1CVa)
        (bytevector-sint-ref
          g$bytevector$5582$1c1CVa
          g$k$5583$1c1CVa
          g$endianness$5584$1c1CVa
          '8))))
   (g$bytevector-u64-native-ref$5521$1c1CVa
     g$bytevector-u64-native-ref$5632$1c1CVa
     (case-lambda
       ((g$bytevector$5585$1c1CVa g$k$5586$1c1CVa)
        (bytevector-uint-ref
          g$bytevector$5585$1c1CVa
          g$k$5586$1c1CVa
          (g$native-endianness$5502$1c1CVa)
          '8))))
   (g$bytevector-s64-native-ref$5522$1c1CVa
     g$bytevector-s64-native-ref$5633$1c1CVa
     (case-lambda
       ((g$bytevector$5587$1c1CVa g$k$5588$1c1CVa)
        (bytevector-sint-ref
          g$bytevector$5587$1c1CVa
          g$k$5588$1c1CVa
          (g$native-endianness$5502$1c1CVa)
          '8))))
   (g$bytevector-u64-set!$5523$1c1CVa
     g$bytevector-u64-set!$5634$1c1CVa
     (case-lambda
       ((g$bytevector$5589$1c1CVa
          g$k$5590$1c1CVa
          g$n$5591$1c1CVa
          g$endianness$5592$1c1CVa)
        (bytevector-uint-set!
          g$bytevector$5589$1c1CVa
          g$k$5590$1c1CVa
          g$n$5591$1c1CVa
          g$endianness$5592$1c1CVa
          '8))))
   (g$bytevector-s64-set!$5524$1c1CVa
     g$bytevector-s64-set!$5635$1c1CVa
     (case-lambda
       ((g$bytevector$5593$1c1CVa
          g$k$5594$1c1CVa
          g$n$5595$1c1CVa
          g$endianness$5596$1c1CVa)
        (bytevector-sint-set!
          g$bytevector$5593$1c1CVa
          g$k$5594$1c1CVa
          g$n$5595$1c1CVa
          g$endianness$5596$1c1CVa
          '8))))
   (g$bytevector-u64-native-set!$5525$1c1CVa
     g$bytevector-u64-native-set!$5636$1c1CVa
     (case-lambda
       ((g$bytevector$5597$1c1CVa g$k$5598$1c1CVa g$n$5599$1c1CVa)
        (bytevector-uint-set!
          g$bytevector$5597$1c1CVa
          g$k$5598$1c1CVa
          g$n$5599$1c1CVa
          (g$native-endianness$5502$1c1CVa)
          '8))))
   (g$bytevector-s64-native-set!$5526$1c1CVa
     g$bytevector-s64-native-set!$5637$1c1CVa
     (case-lambda
       ((g$bytevector$5600$1c1CVa g$k$5601$1c1CVa g$n$5602$1c1CVa)
        (bytevector-sint-set!
          g$bytevector$5600$1c1CVa
          g$k$5601$1c1CVa
          g$n$5602$1c1CVa
          (g$native-endianness$5502$1c1CVa)
          '8))))
   (g$bytevector-ieee-single-native-ref$5527$1c1CVa
     g$bytevector-ieee-single-native-ref$5638$1c1CVa
     (case-lambda
       ((g$bytevector$5603$1c1CVa g$k$5604$1c1CVa)
        (if (not (zero? (mod g$k$5604$1c1CVa '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5604$1c1CVa)
          (bytevector-ieee-single-ref
            g$bytevector$5603$1c1CVa
            g$k$5604$1c1CVa
            (g$native-endianness$5502$1c1CVa))))))
   (g$bytevector-ieee-double-native-ref$5528$1c1CVa
     g$bytevector-ieee-double-native-ref$5639$1c1CVa
     (case-lambda
       ((g$bytevector$5605$1c1CVa g$k$5606$1c1CVa)
        (if (not (zero? (mod g$k$5606$1c1CVa '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5606$1c1CVa)
          (bytevector-ieee-double-ref
            g$bytevector$5605$1c1CVa
            g$k$5606$1c1CVa
            (g$native-endianness$5502$1c1CVa))))))
   (g$bytevector-ieee-single-native-set!$5529$1c1CVa
     g$bytevector-ieee-single-native-set!$5640$1c1CVa
     (case-lambda
       ((g$bytevector$5607$1c1CVa g$k$5608$1c1CVa g$x$5609$1c1CVa)
        (if (not (zero? (mod g$k$5608$1c1CVa '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5608$1c1CVa)
          (bytevector-ieee-single-set!
            g$bytevector$5607$1c1CVa
            g$k$5608$1c1CVa
            g$x$5609$1c1CVa
            (g$native-endianness$5502$1c1CVa))))))
   (g$bytevector-ieee-double-native-set!$5530$1c1CVa
     g$bytevector-ieee-double-native-set!$5641$1c1CVa
     (case-lambda
       ((g$bytevector$5610$1c1CVa g$k$5611$1c1CVa g$x$5612$1c1CVa)
        (if (not (zero? (mod g$k$5611$1c1CVa '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5611$1c1CVa)
          (bytevector-ieee-double-set!
            g$bytevector$5610$1c1CVa
            g$k$5611$1c1CVa
            g$x$5612$1c1CVa
            (g$native-endianness$5502$1c1CVa)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6650$5642$1c1CVa
     g$6650$5737$1c1CVa
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6653$1c1CVa
       '#f
       '#f
       '#()))
   (g$6652$5643$1c1CVa g$6652$5738$1c1CVa '#f)
   (g$6651$5644$1c1CVa
     g$6651$5739$1c1CVa
     (make-record-constructor-descriptor
       g$6650$5642$1c1CVa
       '#f
       g$6652$5643$1c1CVa))
   (g$&condition?$5645$1c1CVa
     g$&condition?$5740$1c1CVa
     (record-predicate g$6650$5642$1c1CVa))
   (g$make-&condition$5646$1c1CVa
     g$make-&condition$5741$1c1CVa
     (record-constructor g$6651$5644$1c1CVa))
   (g$&condition-rtd$5647$1c1CVa
     g$&condition-rtd$5742$1c1CVa
     g$6650$5642$1c1CVa)
   (g$&condition-rcd$5648$1c1CVa
     g$&condition-rcd$5743$1c1CVa
     g$6651$5644$1c1CVa)
   (g$6666$5649$1c1CVa
     g$6666$5744$1c1CVa
     (make-record-type-descriptor
       '&message
       g$6650$5642$1c1CVa
       'g$6669$1c1CVa
       '#f
       '#f
       '#((immutable message))))
   (g$6668$5650$1c1CVa g$6668$5745$1c1CVa '#f)
   (g$6667$5651$1c1CVa
     g$6667$5746$1c1CVa
     (make-record-constructor-descriptor
       g$6666$5649$1c1CVa
       g$6651$5644$1c1CVa
       g$6668$5650$1c1CVa))
   (g$6665$5652$1c1CVa
     g$6665$5747$1c1CVa
     (record-predicate g$6666$5649$1c1CVa))
   (g$make-message-condition$5653$1c1CVa
     g$make-message-condition$5748$1c1CVa
     (record-constructor g$6667$5651$1c1CVa))
   (g$6664$5654$1c1CVa
     g$6664$5749$1c1CVa
     (record-accessor g$6666$5649$1c1CVa '0))
   (g$message-condition?$5655$1c1CVa
     g$message-condition?$5750$1c1CVa
     (condition-predicate g$6666$5649$1c1CVa))
   (g$condition-message$5656$1c1CVa
     g$condition-message$5751$1c1CVa
     (condition-accessor g$6666$5649$1c1CVa g$6664$5654$1c1CVa))
   (g$6682$5657$1c1CVa
     g$6682$5752$1c1CVa
     (make-record-type-descriptor
       '&warning
       g$6650$5642$1c1CVa
       'g$6685$1c1CVa
       '#f
       '#f
       '#()))
   (g$6684$5658$1c1CVa g$6684$5753$1c1CVa '#f)
   (g$6683$5659$1c1CVa
     g$6683$5754$1c1CVa
     (make-record-constructor-descriptor
       g$6682$5657$1c1CVa
       g$6651$5644$1c1CVa
       g$6684$5658$1c1CVa))
   (g$6681$5660$1c1CVa
     g$6681$5755$1c1CVa
     (record-predicate g$6682$5657$1c1CVa))
   (g$make-warning$5661$1c1CVa
     g$make-warning$5756$1c1CVa
     (record-constructor g$6683$5659$1c1CVa))
   (g$warning?$5662$1c1CVa
     g$warning?$5757$1c1CVa
     (condition-predicate g$6682$5657$1c1CVa))
   (g$6696$5663$1c1CVa
     g$6696$5758$1c1CVa
     (make-record-type-descriptor
       '&serious
       g$6650$5642$1c1CVa
       'g$6699$1c1CVa
       '#f
       '#f
       '#()))
   (g$6698$5664$1c1CVa g$6698$5759$1c1CVa '#f)
   (g$6697$5665$1c1CVa
     g$6697$5760$1c1CVa
     (make-record-constructor-descriptor
       g$6696$5663$1c1CVa
       g$6651$5644$1c1CVa
       g$6698$5664$1c1CVa))
   (g$6695$5666$1c1CVa
     g$6695$5761$1c1CVa
     (record-predicate g$6696$5663$1c1CVa))
   (g$make-serious-condition$5667$1c1CVa
     g$make-serious-condition$5762$1c1CVa
     (record-constructor g$6697$5665$1c1CVa))
   (g$serious-condition?$5668$1c1CVa
     g$serious-condition?$5763$1c1CVa
     (condition-predicate g$6696$5663$1c1CVa))
   (g$6710$5669$1c1CVa
     g$6710$5764$1c1CVa
     (make-record-type-descriptor
       '&error
       g$6696$5663$1c1CVa
       'g$6713$1c1CVa
       '#f
       '#f
       '#()))
   (g$6712$5670$1c1CVa g$6712$5765$1c1CVa '#f)
   (g$6711$5671$1c1CVa
     g$6711$5766$1c1CVa
     (make-record-constructor-descriptor
       g$6710$5669$1c1CVa
       g$6697$5665$1c1CVa
       g$6712$5670$1c1CVa))
   (g$6709$5672$1c1CVa
     g$6709$5767$1c1CVa
     (record-predicate g$6710$5669$1c1CVa))
   (g$make-error$5673$1c1CVa
     g$make-error$5768$1c1CVa
     (record-constructor g$6711$5671$1c1CVa))
   (g$error?$5674$1c1CVa
     g$error?$5769$1c1CVa
     (condition-predicate g$6710$5669$1c1CVa))
   (g$6724$5675$1c1CVa
     g$6724$5770$1c1CVa
     (make-record-type-descriptor
       '&violation
       g$6696$5663$1c1CVa
       'g$6727$1c1CVa
       '#f
       '#f
       '#()))
   (g$6726$5676$1c1CVa g$6726$5771$1c1CVa '#f)
   (g$6725$5677$1c1CVa
     g$6725$5772$1c1CVa
     (make-record-constructor-descriptor
       g$6724$5675$1c1CVa
       g$6697$5665$1c1CVa
       g$6726$5676$1c1CVa))
   (g$6723$5678$1c1CVa
     g$6723$5773$1c1CVa
     (record-predicate g$6724$5675$1c1CVa))
   (g$make-violation$5679$1c1CVa
     g$make-violation$5774$1c1CVa
     (record-constructor g$6725$5677$1c1CVa))
   (g$violation?$5680$1c1CVa
     g$violation?$5775$1c1CVa
     (condition-predicate g$6724$5675$1c1CVa))
   (g$6738$5681$1c1CVa
     g$6738$5776$1c1CVa
     (make-record-type-descriptor
       '&assertion
       g$6724$5675$1c1CVa
       'g$6741$1c1CVa
       '#f
       '#f
       '#()))
   (g$6740$5682$1c1CVa g$6740$5777$1c1CVa '#f)
   (g$6739$5683$1c1CVa
     g$6739$5778$1c1CVa
     (make-record-constructor-descriptor
       g$6738$5681$1c1CVa
       g$6725$5677$1c1CVa
       g$6740$5682$1c1CVa))
   (g$6737$5684$1c1CVa
     g$6737$5779$1c1CVa
     (record-predicate g$6738$5681$1c1CVa))
   (g$make-assertion-violation$5685$1c1CVa
     g$make-assertion-violation$5780$1c1CVa
     (record-constructor g$6739$5683$1c1CVa))
   (g$assertion-violation?$5686$1c1CVa
     g$assertion-violation?$5781$1c1CVa
     (condition-predicate g$6738$5681$1c1CVa))
   (g$6753$5687$1c1CVa
     g$6753$5782$1c1CVa
     (make-record-type-descriptor
       '&irritants
       g$6650$5642$1c1CVa
       'g$6756$1c1CVa
       '#f
       '#f
       '#((immutable irritants))))
   (g$6755$5688$1c1CVa g$6755$5783$1c1CVa '#f)
   (g$6754$5689$1c1CVa
     g$6754$5784$1c1CVa
     (make-record-constructor-descriptor
       g$6753$5687$1c1CVa
       g$6651$5644$1c1CVa
       g$6755$5688$1c1CVa))
   (g$6752$5690$1c1CVa
     g$6752$5785$1c1CVa
     (record-predicate g$6753$5687$1c1CVa))
   (g$make-irritants-condition$5691$1c1CVa
     g$make-irritants-condition$5786$1c1CVa
     (record-constructor g$6754$5689$1c1CVa))
   (g$6751$5692$1c1CVa
     g$6751$5787$1c1CVa
     (record-accessor g$6753$5687$1c1CVa '0))
   (g$irritants-condition?$5693$1c1CVa
     g$irritants-condition?$5788$1c1CVa
     (condition-predicate g$6753$5687$1c1CVa))
   (g$condition-irritants$5694$1c1CVa
     g$condition-irritants$5789$1c1CVa
     (condition-accessor g$6753$5687$1c1CVa g$6751$5692$1c1CVa))
   (g$6770$5695$1c1CVa
     g$6770$5790$1c1CVa
     (make-record-type-descriptor
       '&who
       g$6650$5642$1c1CVa
       'g$6773$1c1CVa
       '#f
       '#f
       '#((immutable who))))
   (g$6772$5696$1c1CVa g$6772$5791$1c1CVa '#f)
   (g$6771$5697$1c1CVa
     g$6771$5792$1c1CVa
     (make-record-constructor-descriptor
       g$6770$5695$1c1CVa
       g$6651$5644$1c1CVa
       g$6772$5696$1c1CVa))
   (g$6769$5698$1c1CVa
     g$6769$5793$1c1CVa
     (record-predicate g$6770$5695$1c1CVa))
   (g$make-who-condition$5699$1c1CVa
     g$make-who-condition$5794$1c1CVa
     (record-constructor g$6771$5697$1c1CVa))
   (g$6768$5700$1c1CVa
     g$6768$5795$1c1CVa
     (record-accessor g$6770$5695$1c1CVa '0))
   (g$who-condition?$5701$1c1CVa
     g$who-condition?$5796$1c1CVa
     (condition-predicate g$6770$5695$1c1CVa))
   (g$condition-who$5702$1c1CVa
     g$condition-who$5797$1c1CVa
     (condition-accessor g$6770$5695$1c1CVa g$6768$5700$1c1CVa))
   (g$6786$5703$1c1CVa
     g$6786$5798$1c1CVa
     (make-record-type-descriptor
       '&non-continuable
       g$6724$5675$1c1CVa
       'g$6789$1c1CVa
       '#f
       '#f
       '#()))
   (g$6788$5704$1c1CVa g$6788$5799$1c1CVa '#f)
   (g$6787$5705$1c1CVa
     g$6787$5800$1c1CVa
     (make-record-constructor-descriptor
       g$6786$5703$1c1CVa
       g$6725$5677$1c1CVa
       g$6788$5704$1c1CVa))
   (g$6785$5706$1c1CVa
     g$6785$5801$1c1CVa
     (record-predicate g$6786$5703$1c1CVa))
   (g$make-non-continuable-violation$5707$1c1CVa
     g$make-non-continuable-violation$5802$1c1CVa
     (record-constructor g$6787$5705$1c1CVa))
   (g$non-continuable-violation?$5708$1c1CVa
     g$non-continuable-violation?$5803$1c1CVa
     (condition-predicate g$6786$5703$1c1CVa))
   (g$6800$5709$1c1CVa
     g$6800$5804$1c1CVa
     (make-record-type-descriptor
       '&implementation-restriction
       g$6724$5675$1c1CVa
       'g$6803$1c1CVa
       '#f
       '#f
       '#()))
   (g$6802$5710$1c1CVa g$6802$5805$1c1CVa '#f)
   (g$6801$5711$1c1CVa
     g$6801$5806$1c1CVa
     (make-record-constructor-descriptor
       g$6800$5709$1c1CVa
       g$6725$5677$1c1CVa
       g$6802$5710$1c1CVa))
   (g$6799$5712$1c1CVa
     g$6799$5807$1c1CVa
     (record-predicate g$6800$5709$1c1CVa))
   (g$make-implementation-restriction-violation$5713$1c1CVa
     g$make-implementation-restriction-violation$5808$1c1CVa
     (record-constructor g$6801$5711$1c1CVa))
   (g$implementation-restriction-violation?$5714$1c1CVa
     g$implementation-restriction-violation?$5809$1c1CVa
     (condition-predicate g$6800$5709$1c1CVa))
   (g$6814$5715$1c1CVa
     g$6814$5810$1c1CVa
     (make-record-type-descriptor
       '&lexical
       g$6724$5675$1c1CVa
       'g$6817$1c1CVa
       '#f
       '#f
       '#()))
   (g$6816$5716$1c1CVa g$6816$5811$1c1CVa '#f)
   (g$6815$5717$1c1CVa
     g$6815$5812$1c1CVa
     (make-record-constructor-descriptor
       g$6814$5715$1c1CVa
       g$6725$5677$1c1CVa
       g$6816$5716$1c1CVa))
   (g$6813$5718$1c1CVa
     g$6813$5813$1c1CVa
     (record-predicate g$6814$5715$1c1CVa))
   (g$make-lexical-violation$5719$1c1CVa
     g$make-lexical-violation$5814$1c1CVa
     (record-constructor g$6815$5717$1c1CVa))
   (g$lexical-violation?$5720$1c1CVa
     g$lexical-violation?$5815$1c1CVa
     (condition-predicate g$6814$5715$1c1CVa))
   (g$6830$5721$1c1CVa
     g$6830$5816$1c1CVa
     (make-record-type-descriptor
       '&syntax
       g$6724$5675$1c1CVa
       'g$6833$1c1CVa
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6832$5722$1c1CVa g$6832$5817$1c1CVa '#f)
   (g$6831$5723$1c1CVa
     g$6831$5818$1c1CVa
     (make-record-constructor-descriptor
       g$6830$5721$1c1CVa
       g$6725$5677$1c1CVa
       g$6832$5722$1c1CVa))
   (g$6829$5724$1c1CVa
     g$6829$5819$1c1CVa
     (record-predicate g$6830$5721$1c1CVa))
   (g$make-syntax-violation$5725$1c1CVa
     g$make-syntax-violation$5820$1c1CVa
     (record-constructor g$6831$5723$1c1CVa))
   (g$6827$5726$1c1CVa
     g$6827$5821$1c1CVa
     (record-accessor g$6830$5721$1c1CVa '0))
   (g$6828$5727$1c1CVa
     g$6828$5822$1c1CVa
     (record-accessor g$6830$5721$1c1CVa '1))
   (g$syntax-violation?$5728$1c1CVa
     g$syntax-violation?$5823$1c1CVa
     (condition-predicate g$6830$5721$1c1CVa))
   (g$syntax-violation-form$5729$1c1CVa
     g$syntax-violation-form$5824$1c1CVa
     (condition-accessor g$6830$5721$1c1CVa g$6827$5726$1c1CVa))
   (g$syntax-violation-subform$5730$1c1CVa
     g$syntax-violation-subform$5825$1c1CVa
     (condition-accessor g$6830$5721$1c1CVa g$6828$5727$1c1CVa))
   (g$6848$5731$1c1CVa
     g$6848$5826$1c1CVa
     (make-record-type-descriptor
       '&undefined
       g$6724$5675$1c1CVa
       'g$6851$1c1CVa
       '#f
       '#f
       '#()))
   (g$6850$5732$1c1CVa g$6850$5827$1c1CVa '#f)
   (g$6849$5733$1c1CVa
     g$6849$5828$1c1CVa
     (make-record-constructor-descriptor
       g$6848$5731$1c1CVa
       g$6725$5677$1c1CVa
       g$6850$5732$1c1CVa))
   (g$6847$5734$1c1CVa
     g$6847$5829$1c1CVa
     (record-predicate g$6848$5731$1c1CVa))
   (g$make-undefined-violation$5735$1c1CVa
     g$make-undefined-violation$5830$1c1CVa
     (record-constructor g$6849$5733$1c1CVa))
   (g$undefined-violation?$5736$1c1CVa
     g$undefined-violation?$5831$1c1CVa
     (condition-predicate g$6848$5731$1c1CVa)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5832$1c1CVa
     g$append!$5838$1c1CVa
     (case-lambda
       ((g$a$5833$1c1CVa . g$b$5834$1c1CVa)
        (if (null? g$a$5833$1c1CVa)
          g$b$5834$1c1CVa
          (if (null? g$b$5834$1c1CVa)
            g$a$5833$1c1CVa
            (begin
              ((letrec ((g$f$5835$1c1CVa
                          (case-lambda
                            ((g$a$5836$1c1CVa)
                             ((case-lambda
                                ((g$n$5837$1c1CVa)
                                 (if (null? g$n$5837$1c1CVa)
                                   (set-cdr! g$a$5836$1c1CVa g$b$5834$1c1CVa)
                                   (g$f$5835$1c1CVa g$n$5837$1c1CVa))))
                              (cdr g$a$5836$1c1CVa))))))
                 g$f$5835$1c1CVa)
               g$a$5833$1c1CVa)
              g$a$5833$1c1CVa)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5839$1c1CVa
     g$sign$5857$1c1CVa
     (case-lambda
       ((g$n$5845$1c1CVa)
        (if (> g$n$5845$1c1CVa '0) '1 (if (< g$n$5845$1c1CVa '0) '-1 '0)))))
   (g$quotient$5840$1c1CVa
     g$quotient$5858$1c1CVa
     (case-lambda
       ((g$n1$5846$1c1CVa g$n2$5847$1c1CVa)
        (begin
          (if (not (integer-valued? g$n1$5846$1c1CVa))
            (assertion-violation 'quotient '"not an integer" g$n1$5846$1c1CVa)
            (void))
          (if (not (integer-valued? g$n2$5847$1c1CVa))
            (assertion-violation 'quotient '"not an integer" g$n2$5847$1c1CVa)
            (void))
          (* (g$sign$5839$1c1CVa g$n1$5846$1c1CVa)
             (g$sign$5839$1c1CVa g$n2$5847$1c1CVa)
             (div (abs g$n1$5846$1c1CVa) (abs g$n2$5847$1c1CVa)))))))
   (g$remainder$5841$1c1CVa
     g$remainder$5859$1c1CVa
     (case-lambda
       ((g$n1$5848$1c1CVa g$n2$5849$1c1CVa)
        (begin
          (if (not (integer-valued? g$n1$5848$1c1CVa))
            (assertion-violation 'remainder '"not an integer" g$n1$5848$1c1CVa)
            (void))
          (if (not (integer-valued? g$n2$5849$1c1CVa))
            (assertion-violation 'remainder '"not an integer" g$n2$5849$1c1CVa)
            (void))
          (* (g$sign$5839$1c1CVa g$n1$5848$1c1CVa)
             (mod (abs g$n1$5848$1c1CVa) (abs g$n2$5849$1c1CVa)))))))
   (g$modulo$5842$1c1CVa
     g$modulo$5860$1c1CVa
     (case-lambda
       ((g$n1$5850$1c1CVa g$n2$5851$1c1CVa)
        (begin
          (if (not (integer-valued? g$n1$5850$1c1CVa))
            (assertion-violation 'modulo '"not an integer" g$n1$5850$1c1CVa)
            (void))
          (if (not (integer-valued? g$n2$5851$1c1CVa))
            (assertion-violation 'modulo '"not an integer" g$n2$5851$1c1CVa)
            (void))
          (* (g$sign$5839$1c1CVa g$n2$5851$1c1CVa)
             (mod (* (g$sign$5839$1c1CVa g$n2$5851$1c1CVa) g$n1$5850$1c1CVa)
                  (abs g$n2$5851$1c1CVa)))))))
   (g$make-promise$5843$1c1CVa
     g$make-promise$5861$1c1CVa
     (case-lambda
       ((g$proc$5852$1c1CVa)
        ((case-lambda
           ((g$result-ready?$5853$1c1CVa g$result$5854$1c1CVa)
            (case-lambda
              (()
               (if g$result-ready?$5853$1c1CVa
                 g$result$5854$1c1CVa
                 ((case-lambda
                    ((g$x$5855$1c1CVa)
                     (if g$result-ready?$5853$1c1CVa
                       g$result$5854$1c1CVa
                       (begin
                         (set! g$result-ready?$5853$1c1CVa '#t)
                         (set! g$result$5854$1c1CVa g$x$5855$1c1CVa)
                         g$result$5854$1c1CVa))))
                  (g$proc$5852$1c1CVa)))))))
         '#f
         '#f))))
   (g$force$5844$1c1CVa
     g$force$5862$1c1CVa
     (case-lambda ((g$object$5856$1c1CVa) (g$object$5856$1c1CVa)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5863$1c1CVa
     g$split$5889$1c1CVa
     (case-lambda
       ((g$ls$5866$1c1CVa)
        ((letrec ((g$loop$5867$1c1CVa
                    (case-lambda
                      ((g$rest$5868$1c1CVa
                         g$left$5869$1c1CVa
                         g$right$5870$1c1CVa)
                       (if (null? g$rest$5868$1c1CVa)
                         (cons g$left$5869$1c1CVa g$right$5870$1c1CVa)
                         (if (null? (cdr g$rest$5868$1c1CVa))
                           (cons
                             (cons (car g$rest$5868$1c1CVa) g$left$5869$1c1CVa)
                             g$right$5870$1c1CVa)
                           (g$loop$5867$1c1CVa
                             (g$cddr$5015$1c1CVa g$rest$5868$1c1CVa)
                             (cons (car g$rest$5868$1c1CVa) g$left$5869$1c1CVa)
                             (cons
                               (g$cadr$5013$1c1CVa g$rest$5868$1c1CVa)
                               g$right$5870$1c1CVa))))))))
           g$loop$5867$1c1CVa)
         g$ls$5866$1c1CVa
         '()
         '()))))
   (g$reverse-it$5864$1c1CVa
     g$reverse-it$5890$1c1CVa
     (case-lambda
       ((g$head$5871$1c1CVa g$tail$5872$1c1CVa)
        (if (null? g$head$5871$1c1CVa)
          g$tail$5872$1c1CVa
          ((case-lambda
             ((g$hd$5873$1c1CVa g$tl$5874$1c1CVa)
              (g$reverse-it$5864$1c1CVa
                g$tl$5874$1c1CVa
                (cons g$hd$5873$1c1CVa g$tail$5872$1c1CVa))))
           (car g$head$5871$1c1CVa)
           (cdr g$head$5871$1c1CVa))))))
   (g$list-sort$5865$1c1CVa
     g$list-sort$5891$1c1CVa
     (case-lambda
       ((g$precedes?$5875$1c1CVa g$ls$5876$1c1CVa)
        ((case-lambda
           ((g$merge$5877$1c1CVa)
            ((case-lambda
               (()
                (if (null? g$ls$5876$1c1CVa)
                  '()
                  ((letrec ((g$helper$5878$1c1CVa
                              (case-lambda
                                ((g$piece$5879$1c1CVa)
                                 (if (null? (cdr g$piece$5879$1c1CVa))
                                   g$piece$5879$1c1CVa
                                   ((case-lambda
                                      ((g$parts$5880$1c1CVa)
                                       (g$merge$5877$1c1CVa
                                         (g$helper$5878$1c1CVa
                                           (car g$parts$5880$1c1CVa))
                                         (g$helper$5878$1c1CVa
                                           (cdr g$parts$5880$1c1CVa)))))
                                    (g$split$5863$1c1CVa
                                      g$piece$5879$1c1CVa)))))))
                     g$helper$5878$1c1CVa)
                   g$ls$5876$1c1CVa)))))))
         (case-lambda
           ((g$list-1$5881$1c1CVa g$list-2$5882$1c1CVa)
            ((letrec ((g$loop$5883$1c1CVa
                        (case-lambda
                          ((g$source-1$5884$1c1CVa
                             g$source-2$5885$1c1CVa
                             g$so-far$5886$1c1CVa)
                           (if (null? g$source-1$5884$1c1CVa)
                             (g$reverse-it$5864$1c1CVa
                               g$so-far$5886$1c1CVa
                               g$source-2$5885$1c1CVa)
                             (if (null? g$source-2$5885$1c1CVa)
                               (g$reverse-it$5864$1c1CVa
                                 g$so-far$5886$1c1CVa
                                 g$source-1$5884$1c1CVa)
                               ((case-lambda
                                  ((g$car-1$5887$1c1CVa g$car-2$5888$1c1CVa)
                                   (if (g$precedes?$5875$1c1CVa
                                         g$car-2$5888$1c1CVa
                                         g$car-1$5887$1c1CVa)
                                     (g$loop$5883$1c1CVa
                                       g$source-1$5884$1c1CVa
                                       (cdr g$source-2$5885$1c1CVa)
                                       (cons
                                         g$car-2$5888$1c1CVa
                                         g$so-far$5886$1c1CVa))
                                     (g$loop$5883$1c1CVa
                                       g$source-2$5885$1c1CVa
                                       (cdr g$source-1$5884$1c1CVa)
                                       (cons
                                         g$car-1$5887$1c1CVa
                                         g$so-far$5886$1c1CVa)))))
                                (car g$source-1$5884$1c1CVa)
                                (car g$source-2$5885$1c1CVa))))))))
               g$loop$5883$1c1CVa)
             g$list-1$5881$1c1CVa
             g$list-2$5882$1c1CVa
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$5935$1c1CVa
     g$string-ci=?$6031$1c1CVa
     (case-lambda
       ((g$a$5951$1c1CVa g$b$5952$1c1CVa . g$rest$5953$1c1CVa)
        (begin
          (if (not (string? g$a$5951$1c1CVa))
            (assertion-violation 'string-ci=? '"not a string" g$a$5951$1c1CVa)
            (void))
          (if (not (string? g$b$5952$1c1CVa))
            (assertion-violation 'string-ci=? '"not a string" g$b$5952$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$5954$1c1CVa)
               (if (not (string? g$x$5954$1c1CVa))
                 (assertion-violation
                   'string-ci=?
                   '"not a string"
                   g$x$5954$1c1CVa)
                 (void))))
            g$rest$5953$1c1CVa)
          ((letrec ((g$f$5955$1c1CVa
                      (case-lambda
                        ((g$a$5956$1c1CVa g$b$5957$1c1CVa g$rest$5958$1c1CVa)
                         (if (null? g$rest$5958$1c1CVa)
                           (= (string-ci-compare
                                g$a$5956$1c1CVa
                                g$b$5957$1c1CVa)
                              '0)
                           (if (= (string-compare
                                    g$a$5956$1c1CVa
                                    g$b$5957$1c1CVa)
                                  '0)
                             (begin
                               '#f
                               (g$f$5955$1c1CVa
                                 g$b$5957$1c1CVa
                                 (car g$rest$5958$1c1CVa)
                                 (cdr g$rest$5958$1c1CVa)))
                             '#f))))))
             g$f$5955$1c1CVa)
           g$a$5951$1c1CVa
           g$b$5952$1c1CVa
           g$rest$5953$1c1CVa)))))
   (g$string-ci<?$5936$1c1CVa
     g$string-ci<?$6032$1c1CVa
     (case-lambda
       ((g$a$5959$1c1CVa g$b$5960$1c1CVa . g$rest$5961$1c1CVa)
        (begin
          (if (not (string? g$a$5959$1c1CVa))
            (assertion-violation 'string-ci<? '"not a string" g$a$5959$1c1CVa)
            (void))
          (if (not (string? g$b$5960$1c1CVa))
            (assertion-violation 'string-ci<? '"not a string" g$b$5960$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$5962$1c1CVa)
               (if (not (string? g$x$5962$1c1CVa))
                 (assertion-violation
                   'string-ci<?
                   '"not a string"
                   g$x$5962$1c1CVa)
                 (void))))
            g$rest$5961$1c1CVa)
          ((letrec ((g$f$5963$1c1CVa
                      (case-lambda
                        ((g$a$5964$1c1CVa g$b$5965$1c1CVa g$rest$5966$1c1CVa)
                         (if (null? g$rest$5966$1c1CVa)
                           (< (string-ci-compare
                                g$a$5964$1c1CVa
                                g$b$5965$1c1CVa)
                              '0)
                           (if (< (string-compare
                                    g$a$5964$1c1CVa
                                    g$b$5965$1c1CVa)
                                  '0)
                             (begin
                               '#f
                               (g$f$5963$1c1CVa
                                 g$b$5965$1c1CVa
                                 (car g$rest$5966$1c1CVa)
                                 (cdr g$rest$5966$1c1CVa)))
                             '#f))))))
             g$f$5963$1c1CVa)
           g$a$5959$1c1CVa
           g$b$5960$1c1CVa
           g$rest$5961$1c1CVa)))))
   (g$string-ci>?$5937$1c1CVa
     g$string-ci>?$6033$1c1CVa
     (case-lambda
       ((g$a$5967$1c1CVa g$b$5968$1c1CVa . g$rest$5969$1c1CVa)
        (begin
          (if (not (string? g$a$5967$1c1CVa))
            (assertion-violation 'string-ci>? '"not a string" g$a$5967$1c1CVa)
            (void))
          (if (not (string? g$b$5968$1c1CVa))
            (assertion-violation 'string-ci>? '"not a string" g$b$5968$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$5970$1c1CVa)
               (if (not (string? g$x$5970$1c1CVa))
                 (assertion-violation
                   'string-ci>?
                   '"not a string"
                   g$x$5970$1c1CVa)
                 (void))))
            g$rest$5969$1c1CVa)
          ((letrec ((g$f$5971$1c1CVa
                      (case-lambda
                        ((g$a$5972$1c1CVa g$b$5973$1c1CVa g$rest$5974$1c1CVa)
                         (if (null? g$rest$5974$1c1CVa)
                           (> (string-ci-compare
                                g$a$5972$1c1CVa
                                g$b$5973$1c1CVa)
                              '0)
                           (if (> (string-compare
                                    g$a$5972$1c1CVa
                                    g$b$5973$1c1CVa)
                                  '0)
                             (begin
                               '#f
                               (g$f$5971$1c1CVa
                                 g$b$5973$1c1CVa
                                 (car g$rest$5974$1c1CVa)
                                 (cdr g$rest$5974$1c1CVa)))
                             '#f))))))
             g$f$5971$1c1CVa)
           g$a$5967$1c1CVa
           g$b$5968$1c1CVa
           g$rest$5969$1c1CVa)))))
   (g$string-ci<=?$5938$1c1CVa
     g$string-ci<=?$6034$1c1CVa
     (case-lambda
       ((g$a$5975$1c1CVa g$b$5976$1c1CVa . g$rest$5977$1c1CVa)
        (begin
          (if (not (string? g$a$5975$1c1CVa))
            (assertion-violation 'string-ci<=? '"not a string" g$a$5975$1c1CVa)
            (void))
          (if (not (string? g$b$5976$1c1CVa))
            (assertion-violation 'string-ci<=? '"not a string" g$b$5976$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$5978$1c1CVa)
               (if (not (string? g$x$5978$1c1CVa))
                 (assertion-violation
                   'string-ci<=?
                   '"not a string"
                   g$x$5978$1c1CVa)
                 (void))))
            g$rest$5977$1c1CVa)
          ((letrec ((g$f$5979$1c1CVa
                      (case-lambda
                        ((g$a$5980$1c1CVa g$b$5981$1c1CVa g$rest$5982$1c1CVa)
                         (if (null? g$rest$5982$1c1CVa)
                           (<= (string-ci-compare
                                 g$a$5980$1c1CVa
                                 g$b$5981$1c1CVa)
                               '0)
                           (if (<= (string-compare
                                     g$a$5980$1c1CVa
                                     g$b$5981$1c1CVa)
                                   '0)
                             (begin
                               '#f
                               (g$f$5979$1c1CVa
                                 g$b$5981$1c1CVa
                                 (car g$rest$5982$1c1CVa)
                                 (cdr g$rest$5982$1c1CVa)))
                             '#f))))))
             g$f$5979$1c1CVa)
           g$a$5975$1c1CVa
           g$b$5976$1c1CVa
           g$rest$5977$1c1CVa)))))
   (g$string-ci>=?$5939$1c1CVa
     g$string-ci>=?$6035$1c1CVa
     (case-lambda
       ((g$a$5983$1c1CVa g$b$5984$1c1CVa . g$rest$5985$1c1CVa)
        (begin
          (if (not (string? g$a$5983$1c1CVa))
            (assertion-violation 'string-ci>=? '"not a string" g$a$5983$1c1CVa)
            (void))
          (if (not (string? g$b$5984$1c1CVa))
            (assertion-violation 'string-ci>=? '"not a string" g$b$5984$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$5986$1c1CVa)
               (if (not (string? g$x$5986$1c1CVa))
                 (assertion-violation
                   'string-ci>=?
                   '"not a string"
                   g$x$5986$1c1CVa)
                 (void))))
            g$rest$5985$1c1CVa)
          ((letrec ((g$f$5987$1c1CVa
                      (case-lambda
                        ((g$a$5988$1c1CVa g$b$5989$1c1CVa g$rest$5990$1c1CVa)
                         (if (null? g$rest$5990$1c1CVa)
                           (>= (string-ci-compare
                                 g$a$5988$1c1CVa
                                 g$b$5989$1c1CVa)
                               '0)
                           (if (>= (string-compare
                                     g$a$5988$1c1CVa
                                     g$b$5989$1c1CVa)
                                   '0)
                             (begin
                               '#f
                               (g$f$5987$1c1CVa
                                 g$b$5989$1c1CVa
                                 (car g$rest$5990$1c1CVa)
                                 (cdr g$rest$5990$1c1CVa)))
                             '#f))))))
             g$f$5987$1c1CVa)
           g$a$5983$1c1CVa
           g$b$5984$1c1CVa
           g$rest$5985$1c1CVa)))))
   (g$char-ci=?$5946$1c1CVa
     g$char-ci=?$6036$1c1CVa
     (case-lambda
       ((g$a$5991$1c1CVa g$b$5992$1c1CVa . g$rest$5993$1c1CVa)
        (begin
          (if (not (char? g$a$5991$1c1CVa))
            (assertion-violation 'char-ci=? '"not a char" g$a$5991$1c1CVa)
            (void))
          (if (not (char? g$b$5992$1c1CVa))
            (assertion-violation 'char-ci=? '"not a char" g$b$5992$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$5994$1c1CVa)
               (if (not (char? g$x$5994$1c1CVa))
                 (assertion-violation 'char-ci=? '"not a char" g$x$5994$1c1CVa)
                 (void))))
            g$rest$5993$1c1CVa)
          ((letrec ((g$f$5995$1c1CVa
                      (case-lambda
                        ((g$a$5996$1c1CVa g$b$5997$1c1CVa g$rest$5998$1c1CVa)
                         (if (null? g$rest$5998$1c1CVa)
                           (= (char->integer (char-upcase g$a$5996$1c1CVa))
                              (char->integer (char-upcase g$b$5997$1c1CVa)))
                           (if (= (char->integer (char-upcase g$a$5996$1c1CVa))
                                  (char->integer (char-upcase g$b$5997$1c1CVa)))
                             (begin
                               '#f
                               (g$f$5995$1c1CVa
                                 g$b$5997$1c1CVa
                                 (car g$rest$5998$1c1CVa)
                                 (cdr g$rest$5998$1c1CVa)))
                             '#f))))))
             g$f$5995$1c1CVa)
           g$a$5991$1c1CVa
           g$b$5992$1c1CVa
           g$rest$5993$1c1CVa)))))
   (g$char-ci<?$5947$1c1CVa
     g$char-ci<?$6037$1c1CVa
     (case-lambda
       ((g$a$5999$1c1CVa g$b$6000$1c1CVa . g$rest$6001$1c1CVa)
        (begin
          (if (not (char? g$a$5999$1c1CVa))
            (assertion-violation 'char-ci<? '"not a char" g$a$5999$1c1CVa)
            (void))
          (if (not (char? g$b$6000$1c1CVa))
            (assertion-violation 'char-ci<? '"not a char" g$b$6000$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$6002$1c1CVa)
               (if (not (char? g$x$6002$1c1CVa))
                 (assertion-violation 'char-ci<? '"not a char" g$x$6002$1c1CVa)
                 (void))))
            g$rest$6001$1c1CVa)
          ((letrec ((g$f$6003$1c1CVa
                      (case-lambda
                        ((g$a$6004$1c1CVa g$b$6005$1c1CVa g$rest$6006$1c1CVa)
                         (if (null? g$rest$6006$1c1CVa)
                           (< (char->integer (char-upcase g$a$6004$1c1CVa))
                              (char->integer (char-upcase g$b$6005$1c1CVa)))
                           (if (< (char->integer (char-upcase g$a$6004$1c1CVa))
                                  (char->integer (char-upcase g$b$6005$1c1CVa)))
                             (begin
                               '#f
                               (g$f$6003$1c1CVa
                                 g$b$6005$1c1CVa
                                 (car g$rest$6006$1c1CVa)
                                 (cdr g$rest$6006$1c1CVa)))
                             '#f))))))
             g$f$6003$1c1CVa)
           g$a$5999$1c1CVa
           g$b$6000$1c1CVa
           g$rest$6001$1c1CVa)))))
   (g$char-ci>?$5948$1c1CVa
     g$char-ci>?$6038$1c1CVa
     (case-lambda
       ((g$a$6007$1c1CVa g$b$6008$1c1CVa . g$rest$6009$1c1CVa)
        (begin
          (if (not (char? g$a$6007$1c1CVa))
            (assertion-violation 'char-ci>? '"not a char" g$a$6007$1c1CVa)
            (void))
          (if (not (char? g$b$6008$1c1CVa))
            (assertion-violation 'char-ci>? '"not a char" g$b$6008$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$6010$1c1CVa)
               (if (not (char? g$x$6010$1c1CVa))
                 (assertion-violation 'char-ci>? '"not a char" g$x$6010$1c1CVa)
                 (void))))
            g$rest$6009$1c1CVa)
          ((letrec ((g$f$6011$1c1CVa
                      (case-lambda
                        ((g$a$6012$1c1CVa g$b$6013$1c1CVa g$rest$6014$1c1CVa)
                         (if (null? g$rest$6014$1c1CVa)
                           (> (char->integer (char-upcase g$a$6012$1c1CVa))
                              (char->integer (char-upcase g$b$6013$1c1CVa)))
                           (if (> (char->integer (char-upcase g$a$6012$1c1CVa))
                                  (char->integer (char-upcase g$b$6013$1c1CVa)))
                             (begin
                               '#f
                               (g$f$6011$1c1CVa
                                 g$b$6013$1c1CVa
                                 (car g$rest$6014$1c1CVa)
                                 (cdr g$rest$6014$1c1CVa)))
                             '#f))))))
             g$f$6011$1c1CVa)
           g$a$6007$1c1CVa
           g$b$6008$1c1CVa
           g$rest$6009$1c1CVa)))))
   (g$char-ci<=?$5949$1c1CVa
     g$char-ci<=?$6039$1c1CVa
     (case-lambda
       ((g$a$6015$1c1CVa g$b$6016$1c1CVa . g$rest$6017$1c1CVa)
        (begin
          (if (not (char? g$a$6015$1c1CVa))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6015$1c1CVa)
            (void))
          (if (not (char? g$b$6016$1c1CVa))
            (assertion-violation 'char-ci<=? '"not a char" g$b$6016$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$6018$1c1CVa)
               (if (not (char? g$x$6018$1c1CVa))
                 (assertion-violation 'char-ci<=? '"not a char" g$x$6018$1c1CVa)
                 (void))))
            g$rest$6017$1c1CVa)
          ((letrec ((g$f$6019$1c1CVa
                      (case-lambda
                        ((g$a$6020$1c1CVa g$b$6021$1c1CVa g$rest$6022$1c1CVa)
                         (if (null? g$rest$6022$1c1CVa)
                           (<= (char->integer (char-upcase g$a$6020$1c1CVa))
                               (char->integer (char-upcase g$b$6021$1c1CVa)))
                           (if (<= (char->integer (char-upcase g$a$6020$1c1CVa))
                                   (char->integer
                                     (char-upcase g$b$6021$1c1CVa)))
                             (begin
                               '#f
                               (g$f$6019$1c1CVa
                                 g$b$6021$1c1CVa
                                 (car g$rest$6022$1c1CVa)
                                 (cdr g$rest$6022$1c1CVa)))
                             '#f))))))
             g$f$6019$1c1CVa)
           g$a$6015$1c1CVa
           g$b$6016$1c1CVa
           g$rest$6017$1c1CVa)))))
   (g$char-ci>=?$5950$1c1CVa
     g$char-ci>=?$6040$1c1CVa
     (case-lambda
       ((g$a$6023$1c1CVa g$b$6024$1c1CVa . g$rest$6025$1c1CVa)
        (begin
          (if (not (char? g$a$6023$1c1CVa))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6023$1c1CVa)
            (void))
          (if (not (char? g$b$6024$1c1CVa))
            (assertion-violation 'char-ci>=? '"not a char" g$b$6024$1c1CVa)
            (void))
          (for-each
            (case-lambda
              ((g$x$6026$1c1CVa)
               (if (not (char? g$x$6026$1c1CVa))
                 (assertion-violation 'char-ci>=? '"not a char" g$x$6026$1c1CVa)
                 (void))))
            g$rest$6025$1c1CVa)
          ((letrec ((g$f$6027$1c1CVa
                      (case-lambda
                        ((g$a$6028$1c1CVa g$b$6029$1c1CVa g$rest$6030$1c1CVa)
                         (if (null? g$rest$6030$1c1CVa)
                           (>= (char->integer (char-upcase g$a$6028$1c1CVa))
                               (char->integer (char-upcase g$b$6029$1c1CVa)))
                           (if (>= (char->integer (char-upcase g$a$6028$1c1CVa))
                                   (char->integer
                                     (char-upcase g$b$6029$1c1CVa)))
                             (begin
                               '#f
                               (g$f$6027$1c1CVa
                                 g$b$6029$1c1CVa
                                 (car g$rest$6030$1c1CVa)
                                 (cdr g$rest$6030$1c1CVa)))
                             '#f))))))
             g$f$6027$1c1CVa)
           g$a$6023$1c1CVa
           g$b$6024$1c1CVa
           g$rest$6025$1c1CVa))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6041$1c1CVa
     g$bitwise-if$6088$1c1CVa
     (case-lambda
       ((g$ei1$6048$1c1CVa g$ei2$6049$1c1CVa g$ei3$6050$1c1CVa)
        (bitwise-ior
          (bitwise-and g$ei1$6048$1c1CVa g$ei2$6049$1c1CVa)
          (bitwise-and (bitwise-not g$ei1$6048$1c1CVa) g$ei3$6050$1c1CVa)))))
   (g$bitwise-copy-bit$6042$1c1CVa
     g$bitwise-copy-bit$6089$1c1CVa
     (case-lambda
       ((g$ei1$6051$1c1CVa g$ei2$6052$1c1CVa g$ei3$6053$1c1CVa)
        ((case-lambda
           ((g$mask$6054$1c1CVa)
            ((case-lambda
               (()
                (g$bitwise-if$6041$1c1CVa
                  g$mask$6054$1c1CVa
                  (g$bitwise-arithmetic-shift-left$6045$1c1CVa
                    g$ei3$6053$1c1CVa
                    g$ei2$6052$1c1CVa)
                  g$ei1$6051$1c1CVa))))))
         (g$bitwise-arithmetic-shift-left$6045$1c1CVa '1 g$ei2$6052$1c1CVa)))))
   (g$bitwise-bit-field$6043$1c1CVa
     g$bitwise-bit-field$6090$1c1CVa
     (case-lambda
       ((g$ei1$6055$1c1CVa g$ei2$6056$1c1CVa g$ei3$6057$1c1CVa)
        ((case-lambda
           ((g$mask$6058$1c1CVa)
            (g$bitwise-arithmetic-shift-right$6046$1c1CVa
              (bitwise-and g$ei1$6055$1c1CVa g$mask$6058$1c1CVa)
              g$ei2$6056$1c1CVa)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$6045$1c1CVa
             '-1
             g$ei3$6057$1c1CVa))))))
   (g$bitwise-copy-bit-field$6044$1c1CVa
     g$bitwise-copy-bit-field$6091$1c1CVa
     (case-lambda
       ((g$ei1$6059$1c1CVa
          g$ei2$6060$1c1CVa
          g$ei3$6061$1c1CVa
          g$ei4$6062$1c1CVa)
        ((case-lambda
           ((g$to$6063$1c1CVa)
            ((case-lambda
               ((g$start$6064$1c1CVa)
                ((case-lambda
                   ((g$end$6065$1c1CVa)
                    ((case-lambda
                       ((g$from$6066$1c1CVa)
                        ((case-lambda
                           ((g$mask1$6067$1c1CVa)
                            ((case-lambda
                               ((g$mask2$6068$1c1CVa)
                                ((case-lambda
                                   ((g$mask$6069$1c1CVa)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$6041$1c1CVa
                                          g$mask$6069$1c1CVa
                                          (g$bitwise-arithmetic-shift-left$6045$1c1CVa
                                            g$from$6066$1c1CVa
                                            g$start$6064$1c1CVa)
                                          g$to$6063$1c1CVa))))))
                                 (bitwise-and
                                   g$mask1$6067$1c1CVa
                                   g$mask2$6068$1c1CVa))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$6045$1c1CVa
                                 '-1
                                 g$end$6065$1c1CVa)))))
                         (g$bitwise-arithmetic-shift-left$6045$1c1CVa
                           '-1
                           g$start$6064$1c1CVa))))
                     g$ei4$6062$1c1CVa)))
                 g$ei3$6061$1c1CVa)))
             g$ei2$6060$1c1CVa)))
         g$ei1$6059$1c1CVa))))
   (g$bitwise-arithmetic-shift-left$6045$1c1CVa
     g$bitwise-arithmetic-shift-left$6092$1c1CVa
     (case-lambda
       ((g$ei1$6070$1c1CVa g$ei2$6071$1c1CVa)
        (bitwise-arithmetic-shift g$ei1$6070$1c1CVa g$ei2$6071$1c1CVa))))
   (g$bitwise-arithmetic-shift-right$6046$1c1CVa
     g$bitwise-arithmetic-shift-right$6093$1c1CVa
     (case-lambda
       ((g$ei1$6072$1c1CVa g$ei2$6073$1c1CVa)
        (bitwise-arithmetic-shift g$ei1$6072$1c1CVa (- g$ei2$6073$1c1CVa)))))
   (g$bitwise-rotate-bit-field$6047$1c1CVa
     g$bitwise-rotate-bit-field$6094$1c1CVa
     (case-lambda
       ((g$ei1$6074$1c1CVa
          g$ei2$6075$1c1CVa
          g$ei3$6076$1c1CVa
          g$ei4$6077$1c1CVa)
        ((case-lambda
           ((g$n$6078$1c1CVa)
            ((case-lambda
               ((g$start$6079$1c1CVa)
                ((case-lambda
                   ((g$end$6080$1c1CVa)
                    ((case-lambda
                       ((g$count$6081$1c1CVa)
                        ((case-lambda
                           ((g$width$6082$1c1CVa)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6082$1c1CVa)
                                  ((case-lambda
                                     ((g$count$6083$1c1CVa)
                                      ((case-lambda
                                         ((g$field0$6084$1c1CVa)
                                          ((case-lambda
                                             ((g$field1$6085$1c1CVa)
                                              ((case-lambda
                                                 ((g$field2$6086$1c1CVa)
                                                  ((case-lambda
                                                     ((g$field$6087$1c1CVa)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$6044$1c1CVa
                                                            g$n$6078$1c1CVa
                                                            g$start$6079$1c1CVa
                                                            g$end$6080$1c1CVa
                                                            g$field$6087$1c1CVa))))))
                                                   (bitwise-ior
                                                     g$field1$6085$1c1CVa
                                                     g$field2$6086$1c1CVa))))
                                               (g$bitwise-arithmetic-shift-right$6046$1c1CVa
                                                 g$field0$6084$1c1CVa
                                                 (- g$width$6082$1c1CVa
                                                    g$count$6083$1c1CVa)))))
                                           (g$bitwise-arithmetic-shift-left$6045$1c1CVa
                                             g$field0$6084$1c1CVa
                                             g$count$6083$1c1CVa))))
                                       (g$bitwise-bit-field$6043$1c1CVa
                                         g$n$6078$1c1CVa
                                         g$start$6079$1c1CVa
                                         g$end$6080$1c1CVa))))
                                   (mod g$count$6081$1c1CVa
                                        g$width$6082$1c1CVa))
                                  g$n$6078$1c1CVa))))))
                         (- g$end$6080$1c1CVa g$start$6079$1c1CVa))))
                     g$ei4$6077$1c1CVa)))
                 g$ei3$6076$1c1CVa)))
             g$ei2$6075$1c1CVa)))
         g$ei1$6074$1c1CVa)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$6095$1c1CVa
     g$fxif$6142$1c1CVa
     (case-lambda
       ((g$fx1$6102$1c1CVa g$fx2$6103$1c1CVa g$fx3$6104$1c1CVa)
        (fxior
          (fxand g$fx1$6102$1c1CVa g$fx2$6103$1c1CVa)
          (fxand (fxnot g$fx1$6102$1c1CVa) g$fx3$6104$1c1CVa)))))
   (g$fxcopy-bit$6096$1c1CVa
     g$fxcopy-bit$6143$1c1CVa
     (case-lambda
       ((g$fx1$6105$1c1CVa g$fx2$6106$1c1CVa g$fx3$6107$1c1CVa)
        ((case-lambda
           ((g$mask$6108$1c1CVa)
            ((case-lambda
               (()
                (g$fxif$6095$1c1CVa
                  g$mask$6108$1c1CVa
                  (g$fxarithmetic-shift-left$6099$1c1CVa
                    g$fx3$6107$1c1CVa
                    g$fx2$6106$1c1CVa)
                  g$fx1$6105$1c1CVa))))))
         (g$fxarithmetic-shift-left$6099$1c1CVa '1 g$fx2$6106$1c1CVa)))))
   (g$fxbit-field$6097$1c1CVa
     g$fxbit-field$6144$1c1CVa
     (case-lambda
       ((g$fx1$6109$1c1CVa g$fx2$6110$1c1CVa g$fx3$6111$1c1CVa)
        ((case-lambda
           ((g$mask$6112$1c1CVa)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$6100$1c1CVa
                  (fxand g$fx1$6109$1c1CVa g$mask$6112$1c1CVa)
                  g$fx2$6110$1c1CVa))))))
         (fxnot
           (g$fxarithmetic-shift-left$6099$1c1CVa '-1 g$fx3$6111$1c1CVa))))))
   (g$fxcopy-bit-field$6098$1c1CVa
     g$fxcopy-bit-field$6145$1c1CVa
     (case-lambda
       ((g$fx1$6113$1c1CVa
          g$fx2$6114$1c1CVa
          g$fx3$6115$1c1CVa
          g$fx4$6116$1c1CVa)
        ((case-lambda
           ((g$to$6117$1c1CVa)
            ((case-lambda
               ((g$start$6118$1c1CVa)
                ((case-lambda
                   ((g$end$6119$1c1CVa)
                    ((case-lambda
                       ((g$from$6120$1c1CVa)
                        ((case-lambda
                           ((g$mask1$6121$1c1CVa)
                            ((case-lambda
                               ((g$mask2$6122$1c1CVa)
                                ((case-lambda
                                   ((g$mask$6123$1c1CVa)
                                    ((case-lambda
                                       (()
                                        (g$fxif$6095$1c1CVa
                                          g$mask$6123$1c1CVa
                                          (g$fxarithmetic-shift-left$6099$1c1CVa
                                            g$from$6120$1c1CVa
                                            g$start$6118$1c1CVa)
                                          g$to$6117$1c1CVa))))))
                                 (fxand
                                   g$mask1$6121$1c1CVa
                                   g$mask2$6122$1c1CVa))))
                             (fxnot
                               (g$fxarithmetic-shift-left$6099$1c1CVa
                                 '-1
                                 g$end$6119$1c1CVa)))))
                         (g$fxarithmetic-shift-left$6099$1c1CVa
                           '-1
                           g$start$6118$1c1CVa))))
                     g$fx4$6116$1c1CVa)))
                 g$fx3$6115$1c1CVa)))
             g$fx2$6114$1c1CVa)))
         g$fx1$6113$1c1CVa))))
   (g$fxarithmetic-shift-left$6099$1c1CVa
     g$fxarithmetic-shift-left$6146$1c1CVa
     (case-lambda
       ((g$fx1$6124$1c1CVa g$fx2$6125$1c1CVa)
        (fxarithmetic-shift g$fx1$6124$1c1CVa g$fx2$6125$1c1CVa))))
   (g$fxarithmetic-shift-right$6100$1c1CVa
     g$fxarithmetic-shift-right$6147$1c1CVa
     (case-lambda
       ((g$fx1$6126$1c1CVa g$fx2$6127$1c1CVa)
        (fxarithmetic-shift g$fx1$6126$1c1CVa (- g$fx2$6127$1c1CVa)))))
   (g$fxrotate-bit-field$6101$1c1CVa
     g$fxrotate-bit-field$6148$1c1CVa
     (case-lambda
       ((g$fx1$6128$1c1CVa
          g$fx2$6129$1c1CVa
          g$fx3$6130$1c1CVa
          g$fx4$6131$1c1CVa)
        ((case-lambda
           ((g$n$6132$1c1CVa)
            ((case-lambda
               ((g$start$6133$1c1CVa)
                ((case-lambda
                   ((g$end$6134$1c1CVa)
                    ((case-lambda
                       ((g$count$6135$1c1CVa)
                        ((case-lambda
                           ((g$width$6136$1c1CVa)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6136$1c1CVa)
                                  ((case-lambda
                                     ((g$count$6137$1c1CVa)
                                      ((case-lambda
                                         ((g$field0$6138$1c1CVa)
                                          ((case-lambda
                                             ((g$field1$6139$1c1CVa)
                                              ((case-lambda
                                                 ((g$field2$6140$1c1CVa)
                                                  ((case-lambda
                                                     ((g$field$6141$1c1CVa)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$6098$1c1CVa
                                                            g$n$6132$1c1CVa
                                                            g$start$6133$1c1CVa
                                                            g$end$6134$1c1CVa
                                                            g$field$6141$1c1CVa))))))
                                                   (fxior
                                                     g$field1$6139$1c1CVa
                                                     g$field2$6140$1c1CVa))))
                                               (g$fxarithmetic-shift-right$6100$1c1CVa
                                                 g$field0$6138$1c1CVa
                                                 (- g$width$6136$1c1CVa
                                                    g$count$6137$1c1CVa)))))
                                           (g$fxarithmetic-shift-left$6099$1c1CVa
                                             g$field0$6138$1c1CVa
                                             g$count$6137$1c1CVa))))
                                       (g$fxbit-field$6097$1c1CVa
                                         g$n$6132$1c1CVa
                                         g$start$6133$1c1CVa
                                         g$end$6134$1c1CVa))))
                                   (mod g$count$6135$1c1CVa
                                        g$width$6136$1c1CVa))
                                  g$n$6132$1c1CVa))))))
                         (- g$end$6134$1c1CVa g$start$6133$1c1CVa))))
                     g$fx4$6131$1c1CVa)))
                 g$fx3$6130$1c1CVa)))
             g$fx2$6129$1c1CVa)))
         g$fx1$6128$1c1CVa)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7252$6149$1c1CVa
     g$7252$6161$1c1CVa
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7255$1c1CVa
       '#f
       '#f
       '#()))
   (g$7254$6150$1c1CVa g$7254$6162$1c1CVa '#f)
   (g$7253$6151$1c1CVa
     g$7253$6163$1c1CVa
     (make-record-constructor-descriptor
       g$7252$6149$1c1CVa
       &implementation-restriction-rcd
       g$7254$6150$1c1CVa))
   (g$7251$6152$1c1CVa
     g$7251$6164$1c1CVa
     (record-predicate g$7252$6149$1c1CVa))
   (g$make-no-infinities-violation$6153$1c1CVa
     g$make-no-infinities-violation$6165$1c1CVa
     (record-constructor g$7253$6151$1c1CVa))
   (g$no-infinities-violation?$6154$1c1CVa
     g$no-infinities-violation?$6166$1c1CVa
     (condition-predicate g$7252$6149$1c1CVa))
   (g$7266$6155$1c1CVa
     g$7266$6167$1c1CVa
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7269$1c1CVa
       '#f
       '#f
       '#()))
   (g$7268$6156$1c1CVa g$7268$6168$1c1CVa '#f)
   (g$7267$6157$1c1CVa
     g$7267$6169$1c1CVa
     (make-record-constructor-descriptor
       g$7266$6155$1c1CVa
       &implementation-restriction-rcd
       g$7268$6156$1c1CVa))
   (g$7265$6158$1c1CVa
     g$7265$6170$1c1CVa
     (record-predicate g$7266$6155$1c1CVa))
   (g$make-no-nans-violation$6159$1c1CVa
     g$make-no-nans-violation$6171$1c1CVa
     (record-constructor g$7267$6157$1c1CVa))
   (g$no-nans-violation?$6160$1c1CVa
     g$no-nans-violation?$6172$1c1CVa
     (condition-predicate g$7266$6155$1c1CVa)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7281$6173$1c1CVa
     g$7281$6253$1c1CVa
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7284$1c1CVa
       '#f
       '#f
       '#()))
   (g$7283$6174$1c1CVa g$7283$6254$1c1CVa '#f)
   (g$7282$6175$1c1CVa
     g$7282$6255$1c1CVa
     (make-record-constructor-descriptor
       g$7281$6173$1c1CVa
       &error-rcd
       g$7283$6174$1c1CVa))
   (g$7280$6176$1c1CVa
     g$7280$6256$1c1CVa
     (record-predicate g$7281$6173$1c1CVa))
   (g$make-i/o-error$6177$1c1CVa
     g$make-i/o-error$6257$1c1CVa
     (record-constructor g$7282$6175$1c1CVa))
   (g$i/o-error?$6178$1c1CVa
     g$i/o-error?$6258$1c1CVa
     (condition-predicate g$7281$6173$1c1CVa))
   (g$7295$6179$1c1CVa
     g$7295$6259$1c1CVa
     (make-record-type-descriptor
       '&i/o-read
       g$7281$6173$1c1CVa
       'g$7298$1c1CVa
       '#f
       '#f
       '#()))
   (g$7297$6180$1c1CVa g$7297$6260$1c1CVa '#f)
   (g$7296$6181$1c1CVa
     g$7296$6261$1c1CVa
     (make-record-constructor-descriptor
       g$7295$6179$1c1CVa
       g$7282$6175$1c1CVa
       g$7297$6180$1c1CVa))
   (g$7294$6182$1c1CVa
     g$7294$6262$1c1CVa
     (record-predicate g$7295$6179$1c1CVa))
   (g$make-i/o-read-error$6183$1c1CVa
     g$make-i/o-read-error$6263$1c1CVa
     (record-constructor g$7296$6181$1c1CVa))
   (g$i/o-read-error?$6184$1c1CVa
     g$i/o-read-error?$6264$1c1CVa
     (condition-predicate g$7295$6179$1c1CVa))
   (g$7309$6185$1c1CVa
     g$7309$6265$1c1CVa
     (make-record-type-descriptor
       '&i/o-write
       g$7281$6173$1c1CVa
       'g$7312$1c1CVa
       '#f
       '#f
       '#()))
   (g$7311$6186$1c1CVa g$7311$6266$1c1CVa '#f)
   (g$7310$6187$1c1CVa
     g$7310$6267$1c1CVa
     (make-record-constructor-descriptor
       g$7309$6185$1c1CVa
       g$7282$6175$1c1CVa
       g$7311$6186$1c1CVa))
   (g$7308$6188$1c1CVa
     g$7308$6268$1c1CVa
     (record-predicate g$7309$6185$1c1CVa))
   (g$make-i/o-write-error$6189$1c1CVa
     g$make-i/o-write-error$6269$1c1CVa
     (record-constructor g$7310$6187$1c1CVa))
   (g$i/o-write-error?$6190$1c1CVa
     g$i/o-write-error?$6270$1c1CVa
     (condition-predicate g$7309$6185$1c1CVa))
   (g$7324$6191$1c1CVa
     g$7324$6271$1c1CVa
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7281$6173$1c1CVa
       'g$7327$1c1CVa
       '#f
       '#f
       '#((immutable position))))
   (g$7326$6192$1c1CVa g$7326$6272$1c1CVa '#f)
   (g$7325$6193$1c1CVa
     g$7325$6273$1c1CVa
     (make-record-constructor-descriptor
       g$7324$6191$1c1CVa
       g$7282$6175$1c1CVa
       g$7326$6192$1c1CVa))
   (g$7323$6194$1c1CVa
     g$7323$6274$1c1CVa
     (record-predicate g$7324$6191$1c1CVa))
   (g$make-i/o-invalid-position-error$6195$1c1CVa
     g$make-i/o-invalid-position-error$6275$1c1CVa
     (record-constructor g$7325$6193$1c1CVa))
   (g$7322$6196$1c1CVa
     g$7322$6276$1c1CVa
     (record-accessor g$7324$6191$1c1CVa '0))
   (g$i/o-invalid-position-error?$6197$1c1CVa
     g$i/o-invalid-position-error?$6277$1c1CVa
     (condition-predicate g$7324$6191$1c1CVa))
   (g$i/o-error-position$6198$1c1CVa
     g$i/o-error-position$6278$1c1CVa
     (condition-accessor g$7324$6191$1c1CVa g$7322$6196$1c1CVa))
   (g$7341$6199$1c1CVa
     g$7341$6279$1c1CVa
     (make-record-type-descriptor
       '&i/o-filename
       g$7281$6173$1c1CVa
       'g$7344$1c1CVa
       '#f
       '#f
       '#((immutable filename))))
   (g$7343$6200$1c1CVa g$7343$6280$1c1CVa '#f)
   (g$7342$6201$1c1CVa
     g$7342$6281$1c1CVa
     (make-record-constructor-descriptor
       g$7341$6199$1c1CVa
       g$7282$6175$1c1CVa
       g$7343$6200$1c1CVa))
   (g$7340$6202$1c1CVa
     g$7340$6282$1c1CVa
     (record-predicate g$7341$6199$1c1CVa))
   (g$make-i/o-filename-error$6203$1c1CVa
     g$make-i/o-filename-error$6283$1c1CVa
     (record-constructor g$7342$6201$1c1CVa))
   (g$7339$6204$1c1CVa
     g$7339$6284$1c1CVa
     (record-accessor g$7341$6199$1c1CVa '0))
   (g$i/o-filename-error?$6205$1c1CVa
     g$i/o-filename-error?$6285$1c1CVa
     (condition-predicate g$7341$6199$1c1CVa))
   (g$i/o-error-filename$6206$1c1CVa
     g$i/o-error-filename$6286$1c1CVa
     (condition-accessor g$7341$6199$1c1CVa g$7339$6204$1c1CVa))
   (g$7357$6207$1c1CVa
     g$7357$6287$1c1CVa
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7341$6199$1c1CVa
       'g$7360$1c1CVa
       '#f
       '#f
       '#()))
   (g$7359$6208$1c1CVa g$7359$6288$1c1CVa '#f)
   (g$7358$6209$1c1CVa
     g$7358$6289$1c1CVa
     (make-record-constructor-descriptor
       g$7357$6207$1c1CVa
       g$7342$6201$1c1CVa
       g$7359$6208$1c1CVa))
   (g$7356$6210$1c1CVa
     g$7356$6290$1c1CVa
     (record-predicate g$7357$6207$1c1CVa))
   (g$make-i/o-file-protection-error$6211$1c1CVa
     g$make-i/o-file-protection-error$6291$1c1CVa
     (record-constructor g$7358$6209$1c1CVa))
   (g$i/o-file-protection-error?$6212$1c1CVa
     g$i/o-file-protection-error?$6292$1c1CVa
     (condition-predicate g$7357$6207$1c1CVa))
   (g$7371$6213$1c1CVa
     g$7371$6293$1c1CVa
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7357$6207$1c1CVa
       'g$7374$1c1CVa
       '#f
       '#f
       '#()))
   (g$7373$6214$1c1CVa g$7373$6294$1c1CVa '#f)
   (g$7372$6215$1c1CVa
     g$7372$6295$1c1CVa
     (make-record-constructor-descriptor
       g$7371$6213$1c1CVa
       g$7358$6209$1c1CVa
       g$7373$6214$1c1CVa))
   (g$7370$6216$1c1CVa
     g$7370$6296$1c1CVa
     (record-predicate g$7371$6213$1c1CVa))
   (g$make-i/o-file-is-read-only-error$6217$1c1CVa
     g$make-i/o-file-is-read-only-error$6297$1c1CVa
     (record-constructor g$7372$6215$1c1CVa))
   (g$i/o-file-is-read-only-error?$6218$1c1CVa
     g$i/o-file-is-read-only-error?$6298$1c1CVa
     (condition-predicate g$7371$6213$1c1CVa))
   (g$7385$6219$1c1CVa
     g$7385$6299$1c1CVa
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7341$6199$1c1CVa
       'g$7388$1c1CVa
       '#f
       '#f
       '#()))
   (g$7387$6220$1c1CVa g$7387$6300$1c1CVa '#f)
   (g$7386$6221$1c1CVa
     g$7386$6301$1c1CVa
     (make-record-constructor-descriptor
       g$7385$6219$1c1CVa
       g$7342$6201$1c1CVa
       g$7387$6220$1c1CVa))
   (g$7384$6222$1c1CVa
     g$7384$6302$1c1CVa
     (record-predicate g$7385$6219$1c1CVa))
   (g$make-i/o-file-already-exists-error$6223$1c1CVa
     g$make-i/o-file-already-exists-error$6303$1c1CVa
     (record-constructor g$7386$6221$1c1CVa))
   (g$i/o-file-already-exists-error?$6224$1c1CVa
     g$i/o-file-already-exists-error?$6304$1c1CVa
     (condition-predicate g$7385$6219$1c1CVa))
   (g$7399$6225$1c1CVa
     g$7399$6305$1c1CVa
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7341$6199$1c1CVa
       'g$7402$1c1CVa
       '#f
       '#f
       '#()))
   (g$7401$6226$1c1CVa g$7401$6306$1c1CVa '#f)
   (g$7400$6227$1c1CVa
     g$7400$6307$1c1CVa
     (make-record-constructor-descriptor
       g$7399$6225$1c1CVa
       g$7342$6201$1c1CVa
       g$7401$6226$1c1CVa))
   (g$7398$6228$1c1CVa
     g$7398$6308$1c1CVa
     (record-predicate g$7399$6225$1c1CVa))
   (g$make-i/o-file-does-not-exist-error$6229$1c1CVa
     g$make-i/o-file-does-not-exist-error$6309$1c1CVa
     (record-constructor g$7400$6227$1c1CVa))
   (g$i/o-file-does-not-exist-error?$6230$1c1CVa
     g$i/o-file-does-not-exist-error?$6310$1c1CVa
     (condition-predicate g$7399$6225$1c1CVa))
   (g$7414$6231$1c1CVa
     g$7414$6311$1c1CVa
     (make-record-type-descriptor
       '&i/o-port
       g$7281$6173$1c1CVa
       'g$7417$1c1CVa
       '#f
       '#f
       '#((immutable port))))
   (g$7416$6232$1c1CVa g$7416$6312$1c1CVa '#f)
   (g$7415$6233$1c1CVa
     g$7415$6313$1c1CVa
     (make-record-constructor-descriptor
       g$7414$6231$1c1CVa
       g$7282$6175$1c1CVa
       g$7416$6232$1c1CVa))
   (g$7413$6234$1c1CVa
     g$7413$6314$1c1CVa
     (record-predicate g$7414$6231$1c1CVa))
   (g$make-i/o-port-error$6235$1c1CVa
     g$make-i/o-port-error$6315$1c1CVa
     (record-constructor g$7415$6233$1c1CVa))
   (g$7412$6236$1c1CVa
     g$7412$6316$1c1CVa
     (record-accessor g$7414$6231$1c1CVa '0))
   (g$i/o-port-error?$6237$1c1CVa
     g$i/o-port-error?$6317$1c1CVa
     (condition-predicate g$7414$6231$1c1CVa))
   (g$i/o-error-port$6238$1c1CVa
     g$i/o-error-port$6318$1c1CVa
     (condition-accessor g$7414$6231$1c1CVa g$7412$6236$1c1CVa))
   (g$7430$6239$1c1CVa
     g$7430$6319$1c1CVa
     (make-record-type-descriptor
       '&i/o-decoding
       g$7414$6231$1c1CVa
       'g$7433$1c1CVa
       '#f
       '#f
       '#()))
   (g$7432$6240$1c1CVa g$7432$6320$1c1CVa '#f)
   (g$7431$6241$1c1CVa
     g$7431$6321$1c1CVa
     (make-record-constructor-descriptor
       g$7430$6239$1c1CVa
       g$7415$6233$1c1CVa
       g$7432$6240$1c1CVa))
   (g$7429$6242$1c1CVa
     g$7429$6322$1c1CVa
     (record-predicate g$7430$6239$1c1CVa))
   (g$make-i/o-decoding-error$6243$1c1CVa
     g$make-i/o-decoding-error$6323$1c1CVa
     (record-constructor g$7431$6241$1c1CVa))
   (g$i/o-decoding-error?$6244$1c1CVa
     g$i/o-decoding-error?$6324$1c1CVa
     (condition-predicate g$7430$6239$1c1CVa))
   (g$7445$6245$1c1CVa
     g$7445$6325$1c1CVa
     (make-record-type-descriptor
       '&i/o-encoding
       g$7414$6231$1c1CVa
       'g$7448$1c1CVa
       '#f
       '#f
       '#((immutable char))))
   (g$7447$6246$1c1CVa g$7447$6326$1c1CVa '#f)
   (g$7446$6247$1c1CVa
     g$7446$6327$1c1CVa
     (make-record-constructor-descriptor
       g$7445$6245$1c1CVa
       g$7415$6233$1c1CVa
       g$7447$6246$1c1CVa))
   (g$7444$6248$1c1CVa
     g$7444$6328$1c1CVa
     (record-predicate g$7445$6245$1c1CVa))
   (g$make-i/o-encoding-error$6249$1c1CVa
     g$make-i/o-encoding-error$6329$1c1CVa
     (record-constructor g$7446$6247$1c1CVa))
   (g$7443$6250$1c1CVa
     g$7443$6330$1c1CVa
     (record-accessor g$7445$6245$1c1CVa '0))
   (g$i/o-encoding-error?$6251$1c1CVa
     g$i/o-encoding-error?$6331$1c1CVa
     (condition-predicate g$7445$6245$1c1CVa))
   (g$i/o-encoding-error-char$6252$1c1CVa
     g$i/o-encoding-error-char$6332$1c1CVa
     (condition-accessor g$7445$6245$1c1CVa g$7443$6250$1c1CVa)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6333$1c1CVa
     g$get-output-string$6341$1c1CVa
     (case-lambda
       ((g$port$6337$1c1CVa)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6337$1c1CVa))))
   (g$open-output-string$6334$1c1CVa
     g$open-output-string$6342$1c1CVa
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6335$1c1CVa
     g$open-string-output-port$6343$1c1CVa
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6338$1c1CVa)
            (values
              g$p$6338$1c1CVa
              (case-lambda
                (() (g$get-output-string$6333$1c1CVa g$p$6338$1c1CVa))))))
         (g$open-output-string$6334$1c1CVa)))))
   (g$port?$6336$1c1CVa
     g$port?$6344$1c1CVa
     (case-lambda
       ((g$obj$6339$1c1CVa)
        ((case-lambda
           ((g$t$6340$1c1CVa)
            (if g$t$6340$1c1CVa
              g$t$6340$1c1CVa
              (begin '#f (binary-port? g$obj$6339$1c1CVa)))))
         (textual-port? g$obj$6339$1c1CVa))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6351$1c1CVa
     g$with-input-from-file$6377$1c1CVa
     (case-lambda
       ((g$filename$6355$1c1CVa g$thunk$6356$1c1CVa)
        ((case-lambda
           ((g$current-input-port$6359$1c1CVa g$t$6360$1c1CVa)
            ((case-lambda
               ((g$swap$6361$1c1CVa)
                (dynamic-wind
                  g$swap$6361$1c1CVa
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6356$1c1CVa)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6361$1c1CVa)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6362$1c1CVa)
                    (begin
                      (g$current-input-port$6359$1c1CVa g$t$6360$1c1CVa)
                      (set! g$t$6360$1c1CVa g$t$6362$1c1CVa))))
                 (g$current-input-port$6359$1c1CVa)))))))
         current-input-port
         (open-input-file g$filename$6355$1c1CVa)))))
   (g$with-output-to-file$6352$1c1CVa
     g$with-output-to-file$6378$1c1CVa
     (case-lambda
       ((g$filename$6363$1c1CVa g$thunk$6364$1c1CVa)
        ((case-lambda
           ((g$current-output-port$6367$1c1CVa g$t$6368$1c1CVa)
            ((case-lambda
               ((g$swap$6369$1c1CVa)
                (dynamic-wind
                  g$swap$6369$1c1CVa
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6364$1c1CVa)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6369$1c1CVa)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6370$1c1CVa)
                    (begin
                      (g$current-output-port$6367$1c1CVa g$t$6368$1c1CVa)
                      (set! g$t$6368$1c1CVa g$t$6370$1c1CVa))))
                 (g$current-output-port$6367$1c1CVa)))))))
         current-output-port
         (open-output-file g$filename$6363$1c1CVa)))))
   (g$call-with-input-file$6353$1c1CVa
     g$call-with-input-file$6379$1c1CVa
     (case-lambda
       ((g$filename$6371$1c1CVa g$proc$6372$1c1CVa)
        ((case-lambda
           ((g$p$6373$1c1CVa)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6372$1c1CVa g$p$6373$1c1CVa)))
              (case-lambda (() (close-input-port g$p$6373$1c1CVa))))))
         (open-input-file g$filename$6371$1c1CVa)))))
   (g$call-with-output-file$6354$1c1CVa
     g$call-with-output-file$6380$1c1CVa
     (case-lambda
       ((g$filename$6374$1c1CVa g$proc$6375$1c1CVa)
        ((case-lambda
           ((g$p$6376$1c1CVa)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6375$1c1CVa g$p$6376$1c1CVa)))
              (case-lambda (() (close-output-port g$p$6376$1c1CVa))))))
         (open-output-file g$filename$6374$1c1CVa))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7512$6381$1c1CVa
     g$7512$6487$1c1CVa
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7514$6382$1c1CVa g$7514$6488$1c1CVa '#f)
   (g$7513$6383$1c1CVa
     g$7513$6489$1c1CVa
     (make-record-constructor-descriptor
       g$7512$6381$1c1CVa
       '#f
       g$7514$6382$1c1CVa))
   (g$enum?$6384$1c1CVa
     g$enum?$6490$1c1CVa
     (record-predicate g$7512$6381$1c1CVa))
   (g$make-enum$6385$1c1CVa
     g$make-enum$6491$1c1CVa
     (record-constructor g$7513$6383$1c1CVa))
   (g$enum-value$6386$1c1CVa
     g$enum-value$6492$1c1CVa
     (record-accessor g$7512$6381$1c1CVa '0))
   (g$enum-info$6387$1c1CVa
     g$enum-info$6493$1c1CVa
     (record-accessor g$7512$6381$1c1CVa '1))
   (g$7525$6388$1c1CVa
     g$7525$6494$1c1CVa
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7527$6389$1c1CVa g$7527$6495$1c1CVa '#f)
   (g$7526$6390$1c1CVa
     g$7526$6496$1c1CVa
     (make-record-constructor-descriptor
       g$7525$6388$1c1CVa
       '#f
       g$7527$6389$1c1CVa))
   (g$enum-universe?$6391$1c1CVa
     g$enum-universe?$6497$1c1CVa
     (record-predicate g$7525$6388$1c1CVa))
   (g$make-enum-universe$6392$1c1CVa
     g$make-enum-universe$6498$1c1CVa
     (record-constructor g$7526$6390$1c1CVa))
   (g$enum-universe-id$6393$1c1CVa
     g$enum-universe-id$6499$1c1CVa
     (record-accessor g$7525$6388$1c1CVa '0))
   (g$enum-universe-symbols$6394$1c1CVa
     g$enum-universe-symbols$6500$1c1CVa
     (record-accessor g$7525$6388$1c1CVa '1))
   (g$enum-universe-mapping$6395$1c1CVa
     g$enum-universe-mapping$6501$1c1CVa
     (record-accessor g$7525$6388$1c1CVa '2))
   (g$enum-universe-value$6396$1c1CVa
     g$enum-universe-value$6502$1c1CVa
     (record-accessor g$7525$6388$1c1CVa '3))
   (g$enum-type=?$6397$1c1CVa
     g$enum-type=?$6503$1c1CVa
     (case-lambda
       ((g$enumset1$6417$1c1CVa g$enumset2$6418$1c1CVa)
        (eq? (g$enum-universe-id$6393$1c1CVa
               (g$enum-info$6387$1c1CVa g$enumset1$6417$1c1CVa))
             (g$enum-universe-id$6393$1c1CVa
               (g$enum-info$6387$1c1CVa g$enumset2$6418$1c1CVa))))))
   (g$get-symbols$6398$1c1CVa
     g$get-symbols$6504$1c1CVa
     (case-lambda
       ((g$enumset$6419$1c1CVa)
        (g$enum-universe-symbols$6394$1c1CVa
          (g$enum-info$6387$1c1CVa g$enumset$6419$1c1CVa)))))
   (g$get-value$6399$1c1CVa
     g$get-value$6505$1c1CVa
     (case-lambda
       ((g$enumset$6420$1c1CVa g$s$6421$1c1CVa)
        (g$hashtable-ref$5290$1c1CVa
          (g$enum-universe-mapping$6395$1c1CVa
            (g$enum-info$6387$1c1CVa g$enumset$6420$1c1CVa))
          g$s$6421$1c1CVa
          '#f))))
   (g$assert-enum$6400$1c1CVa
     g$assert-enum$6506$1c1CVa
     (case-lambda
       ((g$who$6422$1c1CVa g$enumset$6423$1c1CVa)
        (if (not (g$enum?$6384$1c1CVa g$enumset$6423$1c1CVa))
          (assertion-violation
            g$who$6422$1c1CVa
            '"not an enumeration"
            g$enumset$6423$1c1CVa)
          (void)))))
   (g$make-info$6401$1c1CVa
     g$make-info$6507$1c1CVa
     (case-lambda
       ((g$symbols$6424$1c1CVa)
        ((case-lambda
           ((g$ht$6425$1c1CVa)
            ((letrec ((g$f$6426$1c1CVa
                        (case-lambda
                          ((g$s$6427$1c1CVa g$a$6428$1c1CVa g$mask$6429$1c1CVa)
                           (if (null? g$s$6427$1c1CVa)
                             (values
                               (reverse! g$a$6428$1c1CVa)
                               g$ht$6425$1c1CVa
                               (- g$mask$6429$1c1CVa '1))
                             ((case-lambda
                                ((g$n$6430$1c1CVa)
                                 (if (symbol? g$n$6430$1c1CVa)
                                   (if (g$hashtable-contains?$5293$1c1CVa
                                         g$ht$6425$1c1CVa
                                         g$n$6430$1c1CVa)
                                     (g$f$6426$1c1CVa
                                       (cdr g$s$6427$1c1CVa)
                                       g$a$6428$1c1CVa
                                       g$mask$6429$1c1CVa)
                                     (begin
                                       (g$hashtable-set!$5291$1c1CVa
                                         g$ht$6425$1c1CVa
                                         g$n$6430$1c1CVa
                                         g$mask$6429$1c1CVa)
                                       (g$f$6426$1c1CVa
                                         (cdr g$s$6427$1c1CVa)
                                         (cons g$n$6430$1c1CVa g$a$6428$1c1CVa)
                                         (g$bitwise-arithmetic-shift-left$6092$1c1CVa
                                           g$mask$6429$1c1CVa
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6430$1c1CVa))))
                              (car g$s$6427$1c1CVa)))))))
               g$f$6426$1c1CVa)
             g$symbols$6424$1c1CVa
             '()
             '1)))
         (g$make-eq-hashtable$5287$1c1CVa)))))
   (g$make-enumeration$6402$1c1CVa
     g$make-enumeration$6508$1c1CVa
     (case-lambda
       ((g$symbols$6431$1c1CVa)
        (call-with-values
          (case-lambda (() (g$make-info$6401$1c1CVa g$symbols$6431$1c1CVa)))
          (case-lambda
            ((g$s$6435$1c1CVa g$mapping$6436$1c1CVa g$mask$6437$1c1CVa)
             ((case-lambda
                ((g$mask$6438$1c1CVa g$mapping$6439$1c1CVa g$s$6440$1c1CVa)
                 (g$make-enum$6385$1c1CVa
                   g$mask$6438$1c1CVa
                   (g$make-enum-universe$6392$1c1CVa
                     (gensym)
                     g$s$6440$1c1CVa
                     g$mapping$6439$1c1CVa
                     g$mask$6438$1c1CVa))))
              g$mask$6437$1c1CVa
              g$mapping$6436$1c1CVa
              g$s$6435$1c1CVa)))))))
   (g$enum-set-universe$6403$1c1CVa
     g$enum-set-universe$6509$1c1CVa
     (case-lambda
       ((g$enumset$6441$1c1CVa)
        (begin
          (g$assert-enum$6400$1c1CVa 'enum-set-universe g$enumset$6441$1c1CVa)
          ((case-lambda
             ((g$ei$6442$1c1CVa)
              (g$make-enum$6385$1c1CVa
                (g$enum-universe-value$6396$1c1CVa g$ei$6442$1c1CVa)
                g$ei$6442$1c1CVa)))
           (g$enum-info$6387$1c1CVa g$enumset$6441$1c1CVa))))))
   (g$enum-set-indexer$6404$1c1CVa
     g$enum-set-indexer$6510$1c1CVa
     (case-lambda
       ((g$enumset$6443$1c1CVa)
        (begin
          (g$assert-enum$6400$1c1CVa 'enum-set-indexer g$enumset$6443$1c1CVa)
          (case-lambda
            ((g$symbol$6444$1c1CVa)
             (begin
               (if (not (symbol? g$symbol$6444$1c1CVa))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6444$1c1CVa)
                 (void))
               ((case-lambda
                  ((g$v$6445$1c1CVa)
                   (if g$v$6445$1c1CVa
                     (- (bitwise-length g$v$6445$1c1CVa) '1)
                     '#f)))
                (g$get-value$6399$1c1CVa
                  g$enumset$6443$1c1CVa
                  g$symbol$6444$1c1CVa)))))))))
   (g$enum-set-constructor$6405$1c1CVa
     g$enum-set-constructor$6511$1c1CVa
     (case-lambda
       ((g$enumset$6446$1c1CVa)
        (begin
          (g$assert-enum$6400$1c1CVa
            'enum-set-constructor
            g$enumset$6446$1c1CVa)
          (case-lambda
            ((g$symbols$6447$1c1CVa)
             ((letrec ((g$f$6448$1c1CVa
                         (case-lambda
                           ((g$v$6449$1c1CVa g$s$6450$1c1CVa)
                            (if (null? g$s$6450$1c1CVa)
                              (g$make-enum$6385$1c1CVa
                                g$v$6449$1c1CVa
                                (g$enum-info$6387$1c1CVa g$enumset$6446$1c1CVa))
                              ((case-lambda
                                 ((g$n$6451$1c1CVa)
                                  (if (symbol? g$n$6451$1c1CVa)
                                    ((case-lambda
                                       ((g$v*$6452$1c1CVa)
                                        (if g$v*$6452$1c1CVa
                                          (g$f$6448$1c1CVa
                                            (bitwise-ior
                                              g$v$6449$1c1CVa
                                              g$v*$6452$1c1CVa)
                                            (cdr g$s$6450$1c1CVa))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6451$1c1CVa))))
                                     (g$get-value$6399$1c1CVa
                                       g$enumset$6446$1c1CVa
                                       g$n$6451$1c1CVa))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6451$1c1CVa))))
                               (car g$s$6450$1c1CVa)))))))
                g$f$6448$1c1CVa)
              '0
              g$symbols$6447$1c1CVa)))))))
   (g$enum-set->list$6406$1c1CVa
     g$enum-set->list$6512$1c1CVa
     (case-lambda
       ((g$enumset$6453$1c1CVa)
        (begin
          (g$assert-enum$6400$1c1CVa 'enum-set->list g$enumset$6453$1c1CVa)
          ((case-lambda
             ((g$value$6454$1c1CVa)
              ((letrec ((g$f$6455$1c1CVa
                          (case-lambda
                            ((g$s$6456$1c1CVa g$l$6457$1c1CVa)
                             (if (null? g$s$6456$1c1CVa)
                               (reverse! g$l$6457$1c1CVa)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6399$1c1CVa
                                         g$enumset$6453$1c1CVa
                                         (car g$s$6456$1c1CVa))
                                       g$value$6454$1c1CVa))
                                 (g$f$6455$1c1CVa
                                   (cdr g$s$6456$1c1CVa)
                                   g$l$6457$1c1CVa)
                                 (g$f$6455$1c1CVa
                                   (cdr g$s$6456$1c1CVa)
                                   (cons
                                     (car g$s$6456$1c1CVa)
                                     g$l$6457$1c1CVa))))))))
                 g$f$6455$1c1CVa)
               (g$get-symbols$6398$1c1CVa g$enumset$6453$1c1CVa)
               '())))
           (g$enum-value$6386$1c1CVa g$enumset$6453$1c1CVa))))))
   (g$enum-set-member?$6407$1c1CVa
     g$enum-set-member?$6513$1c1CVa
     (case-lambda
       ((g$symbol$6458$1c1CVa g$enumset$6459$1c1CVa)
        (begin
          (if (not (symbol? g$symbol$6458$1c1CVa))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6458$1c1CVa)
            (void))
          (g$assert-enum$6400$1c1CVa 'enum-set-member? g$enumset$6459$1c1CVa)
          ((case-lambda
             ((g$v$6460$1c1CVa)
              (if g$v$6460$1c1CVa
                (not (zero?
                       (bitwise-and
                         g$v$6460$1c1CVa
                         (g$enum-value$6386$1c1CVa g$enumset$6459$1c1CVa))))
                '#f)))
           (g$get-value$6399$1c1CVa
             g$enumset$6459$1c1CVa
             g$symbol$6458$1c1CVa))))))
   (g$enum-set-subset?$6408$1c1CVa
     g$enum-set-subset?$6514$1c1CVa
     (case-lambda
       ((g$enumset1$6461$1c1CVa g$enumset2$6462$1c1CVa)
        (begin
          (g$assert-enum$6400$1c1CVa 'enum-set-subset? g$enumset1$6461$1c1CVa)
          (g$assert-enum$6400$1c1CVa 'enum-set-subset? g$enumset2$6462$1c1CVa)
          ((case-lambda
             ((g$v1$6463$1c1CVa g$v2$6464$1c1CVa)
              (if (g$enum-type=?$6397$1c1CVa
                    g$enumset1$6461$1c1CVa
                    g$enumset2$6462$1c1CVa)
                (= (bitwise-and g$v1$6463$1c1CVa g$v2$6464$1c1CVa)
                   g$v1$6463$1c1CVa)
                ((letrec ((g$f$6465$1c1CVa
                            (case-lambda
                              ((g$s$6466$1c1CVa)
                               (if (null? g$s$6466$1c1CVa)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6467$1c1CVa g$v2*$6468$1c1CVa)
                                     (if g$v2*$6468$1c1CVa
                                       ((case-lambda
                                          ((g$has1$6469$1c1CVa
                                             g$has2$6470$1c1CVa)
                                           (if (if g$has1$6469$1c1CVa
                                                 (begin
                                                   '#f
                                                   (not g$has2$6470$1c1CVa))
                                                 '#f)
                                             '#f
                                             (g$f$6465$1c1CVa
                                               (cdr g$s$6466$1c1CVa)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6463$1c1CVa
                                                 g$v1*$6467$1c1CVa)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6464$1c1CVa
                                                 g$v2*$6468$1c1CVa))))
                                       '#f)))
                                  (g$get-value$6399$1c1CVa
                                    g$enumset1$6461$1c1CVa
                                    (car g$s$6466$1c1CVa))
                                  (g$get-value$6399$1c1CVa
                                    g$enumset2$6462$1c1CVa
                                    (car g$s$6466$1c1CVa))))))))
                   g$f$6465$1c1CVa)
                 (g$get-symbols$6398$1c1CVa g$enumset1$6461$1c1CVa)))))
           (g$enum-value$6386$1c1CVa g$enumset1$6461$1c1CVa)
           (g$enum-value$6386$1c1CVa g$enumset2$6462$1c1CVa))))))
   (g$enum-set=?$6409$1c1CVa
     g$enum-set=?$6515$1c1CVa
     (case-lambda
       ((g$enumset1$6471$1c1CVa g$enumset2$6472$1c1CVa)
        (begin
          (g$assert-enum$6400$1c1CVa 'enum-set=? g$enumset1$6471$1c1CVa)
          (g$assert-enum$6400$1c1CVa 'enum-set=? g$enumset2$6472$1c1CVa)
          (if (g$enum-set-subset?$6408$1c1CVa
                g$enumset1$6471$1c1CVa
                g$enumset2$6472$1c1CVa)
            (begin
              '#f
              (g$enum-set-subset?$6408$1c1CVa
                g$enumset2$6472$1c1CVa
                g$enumset1$6471$1c1CVa))
            '#f)))))
   (g$enum-set-union$6410$1c1CVa
     g$enum-set-union$6516$1c1CVa
     (case-lambda
       ((g$enumset1$6473$1c1CVa g$enumset2$6474$1c1CVa)
        (begin
          (g$assert-enum$6400$1c1CVa 'enum-set-union g$enumset1$6473$1c1CVa)
          (g$assert-enum$6400$1c1CVa 'enum-set-union g$enumset2$6474$1c1CVa)
          (if (g$enum-type=?$6397$1c1CVa
                g$enumset1$6473$1c1CVa
                g$enumset2$6474$1c1CVa)
            (g$make-enum$6385$1c1CVa
              (bitwise-ior
                (g$enum-value$6386$1c1CVa g$enumset1$6473$1c1CVa)
                (g$enum-value$6386$1c1CVa g$enumset2$6474$1c1CVa))
              (g$enum-info$6387$1c1CVa g$enumset1$6473$1c1CVa))
            '#f)))))
   (g$enum-set-intersection$6411$1c1CVa
     g$enum-set-intersection$6517$1c1CVa
     (case-lambda
       ((g$enumset1$6475$1c1CVa g$enumset2$6476$1c1CVa)
        (begin
          (g$assert-enum$6400$1c1CVa
            'enum-set-intersection
            g$enumset1$6475$1c1CVa)
          (g$assert-enum$6400$1c1CVa
            'enum-set-intersection
            g$enumset2$6476$1c1CVa)
          (if (g$enum-type=?$6397$1c1CVa
                g$enumset1$6475$1c1CVa
                g$enumset2$6476$1c1CVa)
            (g$make-enum$6385$1c1CVa
              (bitwise-and
                (g$enum-value$6386$1c1CVa g$enumset1$6475$1c1CVa)
                (g$enum-value$6386$1c1CVa g$enumset2$6476$1c1CVa))
              (g$enum-info$6387$1c1CVa g$enumset1$6475$1c1CVa))
            '#f)))))
   (g$enum-set-difference$6412$1c1CVa
     g$enum-set-difference$6518$1c1CVa
     (case-lambda
       ((g$enumset1$6477$1c1CVa g$enumset2$6478$1c1CVa)
        (begin
          (g$assert-enum$6400$1c1CVa
            'enum-set-difference
            g$enumset1$6477$1c1CVa)
          (g$assert-enum$6400$1c1CVa
            'enum-set-difference
            g$enumset2$6478$1c1CVa)
          (if (g$enum-type=?$6397$1c1CVa
                g$enumset1$6477$1c1CVa
                g$enumset2$6478$1c1CVa)
            (g$make-enum$6385$1c1CVa
              (bitwise-and
                (g$enum-value$6386$1c1CVa g$enumset1$6477$1c1CVa)
                (bitwise-not (g$enum-value$6386$1c1CVa g$enumset2$6478$1c1CVa)))
              (g$enum-info$6387$1c1CVa g$enumset1$6477$1c1CVa))
            '#f)))))
   (g$enum-set-complement$6413$1c1CVa
     g$enum-set-complement$6519$1c1CVa
     (case-lambda
       ((g$enumset$6479$1c1CVa)
        (begin
          (g$assert-enum$6400$1c1CVa 'enum-set-complement g$enumset$6479$1c1CVa)
          (g$make-enum$6385$1c1CVa
            (bitwise-not (g$enum-value$6386$1c1CVa g$enumset$6479$1c1CVa))
            (g$enum-info$6387$1c1CVa g$enumset$6479$1c1CVa))))))
   (g$enum-set-projection$6414$1c1CVa
     g$enum-set-projection$6520$1c1CVa
     (case-lambda
       ((g$enumset1$6480$1c1CVa g$enumset2$6481$1c1CVa)
        (begin
          (g$assert-enum$6400$1c1CVa
            'enum-set-projection
            g$enumset1$6480$1c1CVa)
          (g$assert-enum$6400$1c1CVa
            'enum-set-projection
            g$enumset2$6481$1c1CVa)
          ((case-lambda
             ((g$v1$6482$1c1CVa)
              ((letrec ((g$f$6483$1c1CVa
                          (case-lambda
                            ((g$s$6484$1c1CVa g$v$6485$1c1CVa)
                             (if (null? g$s$6484$1c1CVa)
                               (g$make-enum$6385$1c1CVa
                                 g$v$6485$1c1CVa
                                 (g$enum-info$6387$1c1CVa
                                   g$enumset2$6481$1c1CVa))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6482$1c1CVa
                                       (g$get-value$6399$1c1CVa
                                         g$enumset1$6480$1c1CVa
                                         (car g$s$6484$1c1CVa))))
                                 (g$f$6483$1c1CVa
                                   (cdr g$s$6484$1c1CVa)
                                   g$v$6485$1c1CVa)
                                 ((case-lambda
                                    ((g$v2$6486$1c1CVa)
                                     (if g$v2$6486$1c1CVa
                                       (g$f$6483$1c1CVa
                                         (cdr g$s$6484$1c1CVa)
                                         (bitwise-ior
                                           g$v$6485$1c1CVa
                                           g$v2$6486$1c1CVa))
                                       (g$f$6483$1c1CVa
                                         (cdr g$s$6484$1c1CVa)
                                         g$v$6485$1c1CVa))))
                                  (g$get-value$6399$1c1CVa
                                    g$enumset2$6481$1c1CVa
                                    (car g$s$6484$1c1CVa)))))))))
                 g$f$6483$1c1CVa)
               (g$get-symbols$6398$1c1CVa g$enumset1$6480$1c1CVa)
               '0)))
           (g$enum-value$6386$1c1CVa g$enumset1$6480$1c1CVa)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6415$1c1CVa g$p$6416$1c1CVa)
       (g$fprintf$6545$1c1CVa
         g$p$6416$1c1CVa
         '"#[enum-set ~a]"
         (g$enum-set->list$6406$1c1CVa g$x$6415$1c1CVa))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6521$1c1CVa
     g$dofmt$6543$1c1CVa
     (case-lambda
       ((g$p$6525$1c1CVa g$cntl$6526$1c1CVa g$args$6527$1c1CVa)
        ((case-lambda
           ((g$nmax$6528$1c1CVa)
            ((letrec ((g$loop$6529$1c1CVa
                        (case-lambda
                          ((g$n$6530$1c1CVa g$a$6531$1c1CVa)
                           (if (fx<=? g$n$6530$1c1CVa g$nmax$6528$1c1CVa)
                             ((case-lambda
                                ((g$c$6532$1c1CVa)
                                 (if (if (g$char=?$5047$1c1CVa
                                           g$c$6532$1c1CVa
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6530$1c1CVa
                                           g$nmax$6528$1c1CVa))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6533$1c1CVa)
                                       (if (memv g$t$6533$1c1CVa '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6531$1c1CVa)
                                             g$p$6525$1c1CVa)
                                           (g$loop$6529$1c1CVa
                                             (fx+ g$n$6530$1c1CVa '2)
                                             (cdr g$a$6531$1c1CVa)))
                                         (if (memv g$t$6533$1c1CVa '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6531$1c1CVa)
                                               g$p$6525$1c1CVa)
                                             (g$loop$6529$1c1CVa
                                               (fx+ g$n$6530$1c1CVa '2)
                                               (cdr g$a$6531$1c1CVa)))
                                           (if (memv g$t$6533$1c1CVa '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6531$1c1CVa)
                                                   '2)
                                                 g$p$6525$1c1CVa)
                                               (g$loop$6529$1c1CVa
                                                 (fx+ g$n$6530$1c1CVa '2)
                                                 (cdr g$a$6531$1c1CVa)))
                                             (if (memv g$t$6533$1c1CVa '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6531$1c1CVa)
                                                     '8)
                                                   g$p$6525$1c1CVa)
                                                 (g$loop$6529$1c1CVa
                                                   (fx+ g$n$6530$1c1CVa '2)
                                                   (cdr g$a$6531$1c1CVa)))
                                               (if (memv g$t$6533$1c1CVa '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6531$1c1CVa)
                                                       '16)
                                                     g$p$6525$1c1CVa)
                                                   (g$loop$6529$1c1CVa
                                                     (fx+ g$n$6530$1c1CVa '2)
                                                     (cdr g$a$6531$1c1CVa)))
                                                 (if (memv
                                                       g$t$6533$1c1CVa
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6531$1c1CVa)
                                                         '10)
                                                       g$p$6525$1c1CVa)
                                                     (g$loop$6529$1c1CVa
                                                       (fx+ g$n$6530$1c1CVa '2)
                                                       (cdr g$a$6531$1c1CVa)))
                                                   (if (memv
                                                         g$t$6533$1c1CVa
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6525$1c1CVa)
                                                       (g$loop$6529$1c1CVa
                                                         (fx+ g$n$6530$1c1CVa
                                                              '2)
                                                         g$a$6531$1c1CVa))
                                                     (begin
                                                       (write-char
                                                         g$c$6532$1c1CVa
                                                         g$p$6525$1c1CVa)
                                                       (g$loop$6529$1c1CVa
                                                         (fx+ g$n$6530$1c1CVa
                                                              '1)
                                                         g$a$6531$1c1CVa)))))))))))
                                    (string-ref
                                      g$cntl$6526$1c1CVa
                                      (fx+ g$n$6530$1c1CVa '1)))
                                   (begin
                                     (write-char
                                       g$c$6532$1c1CVa
                                       g$p$6525$1c1CVa)
                                     (g$loop$6529$1c1CVa
                                       (fx+ g$n$6530$1c1CVa '1)
                                       g$a$6531$1c1CVa)))))
                              (string-ref g$cntl$6526$1c1CVa g$n$6530$1c1CVa))
                             (void))))))
               g$loop$6529$1c1CVa)
             '0
             g$args$6527$1c1CVa)))
         (fx- (string-length g$cntl$6526$1c1CVa) '1)))))
   (g$printf$6522$1c1CVa
     g$printf$6544$1c1CVa
     (case-lambda
       ((g$control$6534$1c1CVa . g$args$6535$1c1CVa)
        (g$dofmt$6521$1c1CVa
          (current-output-port)
          g$control$6534$1c1CVa
          g$args$6535$1c1CVa))))
   (g$fprintf$6523$1c1CVa
     g$fprintf$6545$1c1CVa
     (case-lambda
       ((g$p$6536$1c1CVa g$control$6537$1c1CVa . g$args$6538$1c1CVa)
        (g$dofmt$6521$1c1CVa
          g$p$6536$1c1CVa
          g$control$6537$1c1CVa
          g$args$6538$1c1CVa))))
   (g$format$6524$1c1CVa
     g$format$6546$1c1CVa
     (case-lambda
       ((g$control$6539$1c1CVa . g$args$6540$1c1CVa)
        (call-with-values
          g$open-string-output-port$6343$1c1CVa
          (case-lambda
            ((g$p$6541$1c1CVa g$c$6542$1c1CVa)
             (begin
               (g$dofmt$6521$1c1CVa
                 g$p$6541$1c1CVa
                 g$control$6539$1c1CVa
                 g$args$6540$1c1CVa)
               (g$c$6542$1c1CVa)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6547$1c1CVa
     g$make-traced-macro$6550$1c1CVa
     (case-lambda
       ((g$name$6548$1c1CVa g$x$6549$1c1CVa)
        (if (procedure? g$x$6549$1c1CVa)
          (make-traced-procedure
            g$name$6548$1c1CVa
            g$x$6549$1c1CVa
            g$syntax->datum$11193$1c1CVa)
          (if (g$variable-transformer?$11018$1c1CVa g$x$6549$1c1CVa)
            (g$make-variable-transformer$11017$1c1CVa
              (make-traced-procedure
                g$name$6548$1c1CVa
                (g$variable-transformer-procedure$11019$1c1CVa g$x$6549$1c1CVa)
                g$syntax->datum$11193$1c1CVa))
            g$x$6549$1c1CVa))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6551$1c1CVa
     g$read-library-source-file$6630$1c1CVa
     (case-lambda
       ((g$file-name$6622$1c1CVa)
        (g$with-input-from-file$6377$1c1CVa
          g$file-name$6622$1c1CVa
          read-annotated))))
   (g$make-parameter$6552$1c1CVa
     g$make-parameter$6631$1c1CVa
     (case-lambda
       ((g$x$6623$1c1CVa)
        (g$make-parameter$6552$1c1CVa
          g$x$6623$1c1CVa
          (case-lambda ((g$x$6624$1c1CVa) g$x$6624$1c1CVa))))
       ((g$x$6625$1c1CVa g$fender$6626$1c1CVa)
        (begin
          (if (not (procedure? g$fender$6626$1c1CVa))
            (g$assertion-error$11186$1c1CVa
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(51,8) - (51,36)"))
            (void))
          ((case-lambda
             ((g$x$6627$1c1CVa)
              (case-lambda
                (() g$x$6627$1c1CVa)
                ((g$v$6628$1c1CVa)
                 (set! g$x$6627$1c1CVa
                   (g$fender$6626$1c1CVa g$v$6628$1c1CVa))))))
           (g$fender$6626$1c1CVa g$x$6625$1c1CVa))))))
   (g$file-options-constructor$6620$1c1CVa
     g$file-options-constructor$6632$1c1CVa
     (g$make-parameter$6552$1c1CVa '#f))
   (g$file-options-spec$6621$1c1CVa
     g$file-options-spec$6633$1c1CVa
     (case-lambda
       ((g$x$6629$1c1CVa)
        ((g$file-options-constructor$6620$1c1CVa) g$x$6629$1c1CVa)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6830$1c1CVa
     g$current-primitive-locations$6875$1c1CVa
     (g$make-parameter$6631$1c1CVa
       (case-lambda ((g$x$6836$1c1CVa) '#f))
       (case-lambda
         ((g$p$6837$1c1CVa)
          (begin
            (if (not (procedure? g$p$6837$1c1CVa))
              (g$assertion-error$11186$1c1CVa
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$6837$1c1CVa)))))
   (g$mutable?$6831$1c1CVa
     g$mutable?$6876$1c1CVa
     (case-lambda
       ((g$x$6838$1c1CVa)
        (letrec* ((g$simple?$6839$1c1CVa
                    (case-lambda
                      ((g$x$6840$1c1CVa)
                       ((case-lambda
                          ((g$t$6841$1c1CVa)
                           (if g$t$6841$1c1CVa
                             g$t$6841$1c1CVa
                             ((case-lambda
                                ((g$t$6842$1c1CVa)
                                 (if g$t$6842$1c1CVa
                                   g$t$6842$1c1CVa
                                   ((case-lambda
                                      ((g$t$6843$1c1CVa)
                                       (if g$t$6843$1c1CVa
                                         g$t$6843$1c1CVa
                                         ((case-lambda
                                            ((g$t$6844$1c1CVa)
                                             (if g$t$6844$1c1CVa
                                               g$t$6844$1c1CVa
                                               ((case-lambda
                                                  ((g$t$6845$1c1CVa)
                                                   (if g$t$6845$1c1CVa
                                                     g$t$6845$1c1CVa
                                                     ((case-lambda
                                                        ((g$t$6846$1c1CVa)
                                                         (if g$t$6846$1c1CVa
                                                           g$t$6846$1c1CVa
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6840$1c1CVa)))))
                                                      (bytevector?
                                                        g$x$6840$1c1CVa)))))
                                                (string? g$x$6840$1c1CVa)))))
                                          (boolean? g$x$6840$1c1CVa)))))
                                    (symbol? g$x$6840$1c1CVa)))))
                              (char? g$x$6840$1c1CVa)))))
                        (null? g$x$6840$1c1CVa))))))
          (not (g$simple?$6839$1c1CVa g$x$6838$1c1CVa))))))
   (g$rewriter$6832$1c1CVa
     g$rewriter$6877$1c1CVa
     (case-lambda
       ((g$quote-hack?$6847$1c1CVa)
        (letrec* ((g$f$6848$1c1CVa
                    (case-lambda
                      ((g$x$6849$1c1CVa)
                       (if (pair? g$x$6849$1c1CVa)
                         ((case-lambda
                            ((g$t$6850$1c1CVa)
                             (if (memv g$t$6850$1c1CVa '(quote))
                               (if (if g$quote-hack?$6847$1c1CVa
                                     (begin
                                       '#f
                                       (g$mutable?$6831$1c1CVa
                                         (g$cadr$5013$1c1CVa g$x$6849$1c1CVa)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6851$1c1CVa)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6851$1c1CVa
                                         (g$cadr$5013$1c1CVa g$x$6849$1c1CVa))
                                       g$g$6851$1c1CVa)))
                                  (gensym))
                                 g$x$6849$1c1CVa)
                               (if (memv g$t$6850$1c1CVa '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6852$1c1CVa)
                                           (cons
                                             (car g$x$6852$1c1CVa)
                                             (map g$f$6848$1c1CVa
                                                  (cdr g$x$6852$1c1CVa)))))
                                        (cdr g$x$6849$1c1CVa)))
                                 (if (memv g$t$6850$1c1CVa '(lambda))
                                   (g$cons*$5496$1c1CVa
                                     'lambda
                                     (g$cadr$5013$1c1CVa g$x$6849$1c1CVa)
                                     (map g$f$6848$1c1CVa
                                          (g$cddr$5015$1c1CVa g$x$6849$1c1CVa)))
                                   (if (memv g$t$6850$1c1CVa '(letrec))
                                     ((case-lambda
                                        ((g$bindings$6853$1c1CVa
                                           g$body*$6854$1c1CVa)
                                         ((case-lambda
                                            ((g$lhs*$6855$1c1CVa
                                               g$rhs*$6856$1c1CVa)
                                             (g$cons*$5496$1c1CVa
                                               'letrec
                                               (map list
                                                    g$lhs*$6855$1c1CVa
                                                    (map g$f$6848$1c1CVa
                                                         g$rhs*$6856$1c1CVa))
                                               (map g$f$6848$1c1CVa
                                                    g$body*$6854$1c1CVa))))
                                          (map car g$bindings$6853$1c1CVa)
                                          (map g$cadr$5013$1c1CVa
                                               g$bindings$6853$1c1CVa))))
                                      (g$cadr$5013$1c1CVa g$x$6849$1c1CVa)
                                      (g$cddr$5015$1c1CVa g$x$6849$1c1CVa))
                                     (if (memv g$t$6850$1c1CVa '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$6857$1c1CVa
                                             g$body*$6858$1c1CVa)
                                           ((case-lambda
                                              ((g$lhs*$6859$1c1CVa
                                                 g$rhs*$6860$1c1CVa)
                                               (g$cons*$5496$1c1CVa
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6859$1c1CVa
                                                      (map g$f$6848$1c1CVa
                                                           g$rhs*$6860$1c1CVa))
                                                 (map g$f$6848$1c1CVa
                                                      g$body*$6858$1c1CVa))))
                                            (map car g$bindings$6857$1c1CVa)
                                            (map g$cadr$5013$1c1CVa
                                                 g$bindings$6857$1c1CVa))))
                                        (g$cadr$5013$1c1CVa g$x$6849$1c1CVa)
                                        (g$cddr$5015$1c1CVa g$x$6849$1c1CVa))
                                       (if (memv
                                             g$t$6850$1c1CVa
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$6861$1c1CVa
                                               g$x$6862$1c1CVa)
                                             ((case-lambda
                                                ((g$bindings$6863$1c1CVa
                                                   g$body*$6864$1c1CVa)
                                                 ((case-lambda
                                                    ((g$lhs*$6865$1c1CVa
                                                       g$lhs**$6866$1c1CVa
                                                       g$rhs*$6867$1c1CVa)
                                                     (g$cons*$5496$1c1CVa
                                                       'library-letrec*
                                                       g$name$6861$1c1CVa
                                                       (map list
                                                            g$lhs*$6865$1c1CVa
                                                            g$lhs**$6866$1c1CVa
                                                            (map g$f$6848$1c1CVa
                                                                 g$rhs*$6867$1c1CVa))
                                                       (map g$f$6848$1c1CVa
                                                            g$body*$6864$1c1CVa))))
                                                  (map car
                                                       g$bindings$6863$1c1CVa)
                                                  (map g$cadr$5013$1c1CVa
                                                       g$bindings$6863$1c1CVa)
                                                  (map g$caddr$5019$1c1CVa
                                                       g$bindings$6863$1c1CVa))))
                                              (g$cadr$5013$1c1CVa
                                                g$x$6862$1c1CVa)
                                              (g$cddr$5015$1c1CVa
                                                g$x$6862$1c1CVa))))
                                          (g$cadr$5013$1c1CVa g$x$6849$1c1CVa)
                                          (cdr g$x$6849$1c1CVa))
                                         (if (memv g$t$6850$1c1CVa '(begin))
                                           (cons
                                             'begin
                                             (map g$f$6848$1c1CVa
                                                  (cdr g$x$6849$1c1CVa)))
                                           (if (memv g$t$6850$1c1CVa '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5013$1c1CVa
                                                 g$x$6849$1c1CVa)
                                               (g$f$6848$1c1CVa
                                                 (g$caddr$5019$1c1CVa
                                                   g$x$6849$1c1CVa)))
                                             (if (memv
                                                   g$t$6850$1c1CVa
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$6868$1c1CVa)
                                                   ((case-lambda
                                                      ((g$t$6869$1c1CVa)
                                                       (if g$t$6869$1c1CVa
                                                         ((case-lambda
                                                            ((g$loc$6870$1c1CVa)
                                                             g$loc$6870$1c1CVa))
                                                          g$t$6869$1c1CVa)
                                                         g$op$6868$1c1CVa)))
                                                    ((g$current-primitive-locations$6830$1c1CVa)
                                                     g$op$6868$1c1CVa))))
                                                (g$cadr$5013$1c1CVa
                                                  g$x$6849$1c1CVa))
                                               (if (memv
                                                     g$t$6850$1c1CVa
                                                     '(define))
                                                 g$x$6849$1c1CVa
                                                 (if (list? g$x$6849$1c1CVa)
                                                   (map g$f$6848$1c1CVa
                                                        g$x$6849$1c1CVa)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6849$1c1CVa
                                                     (list?
                                                       g$x$6849$1c1CVa)))))))))))))))
                          (car g$x$6849$1c1CVa))
                         g$x$6849$1c1CVa)))))
          g$f$6848$1c1CVa))))
   (g$expanded->core$6833$1c1CVa
     g$expanded->core$6878$1c1CVa
     (case-lambda
       ((g$x$6871$1c1CVa) ((g$rewriter$6832$1c1CVa '#t) g$x$6871$1c1CVa))))
   (g$compile-core-expr$6834$1c1CVa
     g$compile-core-expr$6879$1c1CVa
     (case-lambda
       ((g$x$6872$1c1CVa) ((g$rewriter$6832$1c1CVa '#f) g$x$6872$1c1CVa))))
   (g$compile-core-expr-to-port$6835$1c1CVa
     g$compile-core-expr-to-port$6880$1c1CVa
     (case-lambda
       ((g$x$6873$1c1CVa g$p$6874$1c1CVa)
        (g$pretty-print$6829$1c1CVa
          ((g$rewriter$6832$1c1CVa '#f) g$x$6873$1c1CVa)
          g$p$6874$1c1CVa)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6919$1c1CVa
     g$make-collection$7123$1c1CVa
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6980$1c1CVa)
            (letrec* ((g$set-cons$6981$1c1CVa
                        (case-lambda
                          ((g$x$6983$1c1CVa g$ls$6984$1c1CVa)
                           (if (memq g$x$6983$1c1CVa g$ls$6984$1c1CVa)
                             g$ls$6984$1c1CVa
                             (cons g$x$6983$1c1CVa g$ls$6984$1c1CVa))))))
              (case-lambda
                (() g$set$6980$1c1CVa)
                ((g$x$6982$1c1CVa)
                 (set! g$set$6980$1c1CVa
                   (g$set-cons$6981$1c1CVa
                     g$x$6982$1c1CVa
                     g$set$6980$1c1CVa)))))))
         '()))))
   (g$current-library-collection$6920$1c1CVa
     g$current-library-collection$7124$1c1CVa
     (g$make-parameter$6631$1c1CVa
       (g$make-collection$6919$1c1CVa)
       (case-lambda
         ((g$x$6985$1c1CVa)
          (begin
            (if (not (procedure? g$x$6985$1c1CVa))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6985$1c1CVa)
              (void))
            g$x$6985$1c1CVa)))))
   (g$8044$6921$1c1CVa
     g$8044$7125$1c1CVa
     (make-record-type-descriptor
       'library
       '#f
       'g$8047$1c1CVa
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8046$6922$1c1CVa g$8046$7126$1c1CVa '#f)
   (g$8045$6923$1c1CVa
     g$8045$7127$1c1CVa
     (make-record-constructor-descriptor
       g$8044$6921$1c1CVa
       '#f
       g$8046$6922$1c1CVa))
   (g$library?$6924$1c1CVa
     g$library?$7128$1c1CVa
     (record-predicate g$8044$6921$1c1CVa))
   (g$make-library$6925$1c1CVa
     g$make-library$7129$1c1CVa
     (record-constructor g$8045$6923$1c1CVa))
   (g$library-id$6926$1c1CVa
     g$library-id$7130$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '0))
   (g$library-name$6927$1c1CVa
     g$library-name$7131$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '1))
   (g$library-version$6928$1c1CVa
     g$library-version$7132$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '2))
   (g$library-imp*$6929$1c1CVa
     g$library-imp*$7133$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '3))
   (g$library-vis*$6930$1c1CVa
     g$library-vis*$7134$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '4))
   (g$library-inv*$6931$1c1CVa
     g$library-inv*$7135$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '5))
   (g$library-subst$6932$1c1CVa
     g$library-subst$7136$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '6))
   (g$library-env$6933$1c1CVa
     g$library-env$7137$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '7))
   (g$library-visit-state$6934$1c1CVa
     g$library-visit-state$7138$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '8))
   (g$library-invoke-state$6935$1c1CVa
     g$library-invoke-state$7139$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '9))
   (g$library-visit-code$6936$1c1CVa
     g$library-visit-code$7140$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '10))
   (g$library-invoke-code$6937$1c1CVa
     g$library-invoke-code$7141$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '11))
   (g$library-visible?$6938$1c1CVa
     g$library-visible?$7142$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '12))
   (g$library-source-file-name$6939$1c1CVa
     g$library-source-file-name$7143$1c1CVa
     (record-accessor g$8044$6921$1c1CVa '13))
   (g$set-library-id!$6940$1c1CVa
     g$set-library-id!$7144$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '0))
   (g$set-library-name!$6941$1c1CVa
     g$set-library-name!$7145$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '1))
   (g$set-library-version!$6942$1c1CVa
     g$set-library-version!$7146$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '2))
   (g$set-library-imp*!$6943$1c1CVa
     g$set-library-imp*!$7147$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '3))
   (g$set-library-vis*!$6944$1c1CVa
     g$set-library-vis*!$7148$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '4))
   (g$set-library-inv*!$6945$1c1CVa
     g$set-library-inv*!$7149$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '5))
   (g$set-library-subst!$6946$1c1CVa
     g$set-library-subst!$7150$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '6))
   (g$set-library-env!$6947$1c1CVa
     g$set-library-env!$7151$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '7))
   (g$set-library-visit-state!$6948$1c1CVa
     g$set-library-visit-state!$7152$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '8))
   (g$set-library-invoke-state!$6949$1c1CVa
     g$set-library-invoke-state!$7153$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '9))
   (g$set-library-visit-code!$6950$1c1CVa
     g$set-library-visit-code!$7154$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '10))
   (g$set-library-invoke-code!$6951$1c1CVa
     g$set-library-invoke-code!$7155$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '11))
   (g$set-library-visible?!$6952$1c1CVa
     g$set-library-visible?!$7156$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '12))
   (g$set-library-source-file-name!$6953$1c1CVa
     g$set-library-source-file-name!$7157$1c1CVa
     (record-mutator g$8044$6921$1c1CVa '13))
   (g$rp$6954$1c1CVa
     g$rp$7158$1c1CVa
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6986$1c1CVa g$p$6987$1c1CVa)
          (begin
            (if (not (g$library?$6924$1c1CVa g$x$6986$1c1CVa))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6546$1c1CVa
                '"#<library ~s>"
                (if (null? (g$library-version$6928$1c1CVa g$x$6986$1c1CVa))
                  (g$library-name$6927$1c1CVa g$x$6986$1c1CVa)
                  (append
                    (g$library-name$6927$1c1CVa g$x$6986$1c1CVa)
                    (list (g$library-version$6928$1c1CVa g$x$6986$1c1CVa)))))
              g$p$6987$1c1CVa))))))
   (g$find-dependencies$6955$1c1CVa
     g$find-dependencies$7159$1c1CVa
     (case-lambda
       ((g$ls$6988$1c1CVa)
        (if (null? g$ls$6988$1c1CVa)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6956$1c1CVa
     g$find-library-by$7160$1c1CVa
     (case-lambda
       ((g$pred$6989$1c1CVa)
        ((letrec ((g$f$6990$1c1CVa
                    (case-lambda
                      ((g$ls$6991$1c1CVa)
                       (if (null? g$ls$6991$1c1CVa)
                         '#f
                         (if (g$pred$6989$1c1CVa (car g$ls$6991$1c1CVa))
                           (car g$ls$6991$1c1CVa)
                           (g$f$6990$1c1CVa (cdr g$ls$6991$1c1CVa))))))))
           g$f$6990$1c1CVa)
         ((g$current-library-collection$6920$1c1CVa))))))
   (g$library-path$6957$1c1CVa
     g$library-path$7161$1c1CVa
     (g$make-parameter$6631$1c1CVa
       '(".")
       (case-lambda
         ((g$x$6992$1c1CVa)
          (if (if (list? g$x$6992$1c1CVa)
                (begin '#f (g$for-all$5494$1c1CVa string? g$x$6992$1c1CVa))
                '#f)
            (map (case-lambda ((g$x$6993$1c1CVa) g$x$6993$1c1CVa))
                 g$x$6992$1c1CVa)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6992$1c1CVa))))))
   (g$library-extensions$6958$1c1CVa
     g$library-extensions$7162$1c1CVa
     (g$make-parameter$6631$1c1CVa
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6994$1c1CVa)
          (if (if (list? g$x$6994$1c1CVa)
                (begin '#f (g$for-all$5494$1c1CVa string? g$x$6994$1c1CVa))
                '#f)
            (map (case-lambda ((g$x$6995$1c1CVa) g$x$6995$1c1CVa))
                 g$x$6994$1c1CVa)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6994$1c1CVa))))))
   (g$library-name->file-name$6959$1c1CVa
     g$library-name->file-name$7163$1c1CVa
     (case-lambda
       ((g$x$6996$1c1CVa)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6343$1c1CVa)))
          (case-lambda
            ((g$p$6999$1c1CVa g$extract$7000$1c1CVa)
             ((case-lambda
                ((g$extract$7001$1c1CVa g$p$7002$1c1CVa)
                 (letrec* ((g$display-hex$7003$1c1CVa
                             (case-lambda
                               ((g$n$7011$1c1CVa)
                                (if (<= '0 g$n$7011$1c1CVa '9)
                                  (display g$n$7011$1c1CVa g$p$7002$1c1CVa)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7011$1c1CVa '10)))
                                    g$p$7002$1c1CVa))))))
                   (begin
                     ((letrec ((g$f$7004$1c1CVa
                                 (case-lambda
                                   ((g$ls$7005$1c1CVa)
                                    (if (not (null? g$ls$7005$1c1CVa))
                                      (begin
                                        (display '"/" g$p$7002$1c1CVa)
                                        (for-each
                                          (case-lambda
                                            ((g$c$7006$1c1CVa)
                                             (if ((case-lambda
                                                    ((g$t$7007$1c1CVa)
                                                     (if g$t$7007$1c1CVa
                                                       g$t$7007$1c1CVa
                                                       ((case-lambda
                                                          ((g$t$7008$1c1CVa)
                                                           (if g$t$7008$1c1CVa
                                                             g$t$7008$1c1CVa
                                                             ((case-lambda
                                                                ((g$t$7009$1c1CVa)
                                                                 (if g$t$7009$1c1CVa
                                                                   g$t$7009$1c1CVa
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$7006$1c1CVa
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5050$1c1CVa
                                                                '#\0
                                                                g$c$7006$1c1CVa
                                                                '#\9)))))
                                                        (g$char<=?$5050$1c1CVa
                                                          '#\A
                                                          g$c$7006$1c1CVa
                                                          '#\Z)))))
                                                  (g$char<=?$5050$1c1CVa
                                                    '#\a
                                                    g$c$7006$1c1CVa
                                                    '#\z))
                                               (display
                                                 g$c$7006$1c1CVa
                                                 g$p$7002$1c1CVa)
                                               (begin
                                                 (display '"%" g$p$7002$1c1CVa)
                                                 ((case-lambda
                                                    ((g$n$7010$1c1CVa)
                                                     (begin
                                                       (g$display-hex$7003$1c1CVa
                                                         (g$quotient$5858$1c1CVa
                                                           g$n$7010$1c1CVa
                                                           '16))
                                                       (g$display-hex$7003$1c1CVa
                                                         (g$remainder$5859$1c1CVa
                                                           g$n$7010$1c1CVa
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7006$1c1CVa))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7005$1c1CVa))))
                                        (g$f$7004$1c1CVa
                                          (cdr g$ls$7005$1c1CVa)))
                                      (void))))))
                        g$f$7004$1c1CVa)
                      g$x$6996$1c1CVa)
                     (g$extract$7001$1c1CVa)))))
              g$extract$7000$1c1CVa
              g$p$6999$1c1CVa)))))))
   (g$file-locator$6960$1c1CVa
     g$file-locator$7164$1c1CVa
     (g$make-parameter$6631$1c1CVa
       (case-lambda
         ((g$x$7012$1c1CVa)
          ((case-lambda
             ((g$str$7013$1c1CVa)
              ((letrec ((g$f$7014$1c1CVa
                          (case-lambda
                            ((g$ls$7015$1c1CVa
                               g$exts$7016$1c1CVa
                               g$failed-list$7017$1c1CVa)
                             (if (null? g$ls$7015$1c1CVa)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8149$7018$1c1CVa
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8152$1c1CVa
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8151$7019$1c1CVa '#f)
                                             (g$8150$7020$1c1CVa
                                               (make-record-constructor-descriptor
                                                 g$8149$7018$1c1CVa
                                                 &condition-rcd
                                                 g$8151$7019$1c1CVa))
                                             (g$8148$7021$1c1CVa
                                               (record-predicate
                                                 g$8149$7018$1c1CVa))
                                             (g$make-library-resolution-condition$7022$1c1CVa
                                               (record-constructor
                                                 g$8150$7020$1c1CVa))
                                             (g$8146$7023$1c1CVa
                                               (record-accessor
                                                 g$8149$7018$1c1CVa
                                                 '0))
                                             (g$8147$7024$1c1CVa
                                               (record-accessor
                                                 g$8149$7018$1c1CVa
                                                 '1))
                                             (g$library-resolution-condition?$7025$1c1CVa
                                               (condition-predicate
                                                 g$8149$7018$1c1CVa))
                                             (g$condition-library$7026$1c1CVa
                                               (condition-accessor
                                                 g$8149$7018$1c1CVa
                                                 g$8146$7023$1c1CVa))
                                             (g$condition-files$7027$1c1CVa
                                               (condition-accessor
                                                 g$8149$7018$1c1CVa
                                                 g$8147$7024$1c1CVa)))
                                     (raise
                                       (condition
                                         (g$make-error$5768$1c1CVa)
                                         (g$make-who-condition$5794$1c1CVa
                                           'expander)
                                         (g$make-message-condition$5748$1c1CVa
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$7022$1c1CVa
                                           g$x$7012$1c1CVa
                                           (reverse
                                             g$failed-list$7017$1c1CVa))))))))
                               (if (null? g$exts$7016$1c1CVa)
                                 (g$f$7014$1c1CVa
                                   (cdr g$ls$7015$1c1CVa)
                                   (g$library-extensions$6958$1c1CVa)
                                   g$failed-list$7017$1c1CVa)
                                 ((case-lambda
                                    ((g$name$7028$1c1CVa)
                                     (if (g$file-exists?$5365$1c1CVa
                                           g$name$7028$1c1CVa)
                                       g$name$7028$1c1CVa
                                       (g$f$7014$1c1CVa
                                         g$ls$7015$1c1CVa
                                         (cdr g$exts$7016$1c1CVa)
                                         (cons
                                           g$name$7028$1c1CVa
                                           g$failed-list$7017$1c1CVa)))))
                                  (string-append
                                    (car g$ls$7015$1c1CVa)
                                    g$str$7013$1c1CVa
                                    (car g$exts$7016$1c1CVa)))))))))
                 g$f$7014$1c1CVa)
               (g$library-path$6957$1c1CVa)
               (g$library-extensions$6958$1c1CVa)
               '())))
           (g$library-name->file-name$6959$1c1CVa g$x$7012$1c1CVa))))
       (case-lambda
         ((g$f$7029$1c1CVa)
          (if (procedure? g$f$7029$1c1CVa)
            g$f$7029$1c1CVa
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7029$1c1CVa))))))
   (g$serialize-all$6961$1c1CVa
     g$serialize-all$7165$1c1CVa
     (case-lambda
       ((g$serialize$7030$1c1CVa g$compile$7031$1c1CVa)
        (letrec* ((g$library-desc$7032$1c1CVa
                    (case-lambda
                      ((g$x$7034$1c1CVa)
                       (list
                         (g$library-id$6926$1c1CVa g$x$7034$1c1CVa)
                         (g$library-name$6927$1c1CVa g$x$7034$1c1CVa))))))
          (for-each
            (case-lambda
              ((g$x$7033$1c1CVa)
               (if (g$library-source-file-name$6939$1c1CVa g$x$7033$1c1CVa)
                 (g$serialize$7030$1c1CVa
                   (g$library-source-file-name$6939$1c1CVa g$x$7033$1c1CVa)
                   (list
                     (g$library-id$6926$1c1CVa g$x$7033$1c1CVa)
                     (g$library-name$6927$1c1CVa g$x$7033$1c1CVa)
                     (g$library-version$6928$1c1CVa g$x$7033$1c1CVa)
                     (map g$library-desc$7032$1c1CVa
                          (g$library-imp*$6929$1c1CVa g$x$7033$1c1CVa))
                     (map g$library-desc$7032$1c1CVa
                          (g$library-vis*$6930$1c1CVa g$x$7033$1c1CVa))
                     (map g$library-desc$7032$1c1CVa
                          (g$library-inv*$6931$1c1CVa g$x$7033$1c1CVa))
                     (g$library-subst$6932$1c1CVa g$x$7033$1c1CVa)
                     (g$library-env$6933$1c1CVa g$x$7033$1c1CVa)
                     (g$compile$7031$1c1CVa
                       (g$library-visit-code$6936$1c1CVa g$x$7033$1c1CVa))
                     (g$compile$7031$1c1CVa
                       (g$library-invoke-code$6937$1c1CVa g$x$7033$1c1CVa))
                     (g$library-visible?$6938$1c1CVa g$x$7033$1c1CVa)))
                 (void))))
            ((g$current-library-collection$6920$1c1CVa)))))))
   (g$current-precompiled-library-loader$6962$1c1CVa
     g$current-precompiled-library-loader$7166$1c1CVa
     (g$make-parameter$6631$1c1CVa
       (case-lambda ((g$filename$7035$1c1CVa g$sk$7036$1c1CVa) '#f))))
   (g$try-load-from-file$6963$1c1CVa
     g$try-load-from-file$7167$1c1CVa
     (case-lambda
       ((g$filename$7037$1c1CVa)
        ((g$current-precompiled-library-loader$6962$1c1CVa)
         g$filename$7037$1c1CVa
         (case-lambda
           ((g$id$7038$1c1CVa
              g$name$7039$1c1CVa
              g$ver$7040$1c1CVa
              g$imp*$7041$1c1CVa
              g$vis*$7042$1c1CVa
              g$inv*$7043$1c1CVa
              g$exp-subst$7044$1c1CVa
              g$exp-env$7045$1c1CVa
              g$visit-proc$7046$1c1CVa
              g$invoke-proc$7047$1c1CVa
              g$visible?$7048$1c1CVa)
            ((letrec ((g$f$7049$1c1CVa
                        (case-lambda
                          ((g$deps$7050$1c1CVa)
                           (if (null? g$deps$7050$1c1CVa)
                             (begin
                               (g$install-library$6973$1c1CVa
                                 g$id$7038$1c1CVa
                                 g$name$7039$1c1CVa
                                 g$ver$7040$1c1CVa
                                 g$imp*$7041$1c1CVa
                                 g$vis*$7042$1c1CVa
                                 g$inv*$7043$1c1CVa
                                 g$exp-subst$7044$1c1CVa
                                 g$exp-env$7045$1c1CVa
                                 g$visit-proc$7046$1c1CVa
                                 g$invoke-proc$7047$1c1CVa
                                 '#f
                                 '#f
                                 g$visible?$7048$1c1CVa
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7051$1c1CVa)
                                 ((case-lambda
                                    ((g$label$7052$1c1CVa g$dname$7053$1c1CVa)
                                     ((case-lambda
                                        ((g$l$7054$1c1CVa)
                                         (if (if (g$library?$6924$1c1CVa
                                                   g$l$7054$1c1CVa)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7052$1c1CVa
                                                      (g$library-id$6926$1c1CVa
                                                        g$l$7054$1c1CVa)))
                                               '#f)
                                           (g$f$7049$1c1CVa
                                             (cdr g$deps$7050$1c1CVa))
                                           (begin
                                             (g$fprintf$6545$1c1CVa
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
                                               g$name$7039$1c1CVa
                                               g$dname$7053$1c1CVa
                                               g$filename$7037$1c1CVa)
                                             '#f))))
                                      (g$find-library-by-name$6968$1c1CVa
                                        g$dname$7053$1c1CVa))))
                                  (car g$d$7051$1c1CVa)
                                  (g$cadr$5013$1c1CVa g$d$7051$1c1CVa))))
                              (car g$deps$7050$1c1CVa)))))))
               g$f$7049$1c1CVa)
             (append g$imp*$7041$1c1CVa g$vis*$7042$1c1CVa g$inv*$7043$1c1CVa)))
           (g$others$7055$1c1CVa '#f))))))
   (g$library-loader$6964$1c1CVa
     g$library-loader$7168$1c1CVa
     (g$make-parameter$6631$1c1CVa
       (case-lambda
         ((g$x$7056$1c1CVa)
          ((case-lambda
             ((g$file-name$7057$1c1CVa)
              (if (not g$file-name$7057$1c1CVa)
                (assertion-violation '#f '"cannot file library" g$x$7056$1c1CVa)
                ((case-lambda
                   ((g$t$7058$1c1CVa)
                    (if g$t$7058$1c1CVa
                      g$t$7058$1c1CVa
                      (begin
                        '#f
                        ((g$current-library-expander$6965$1c1CVa)
                         (g$read-library-source-file$6630$1c1CVa
                           g$file-name$7057$1c1CVa)
                         g$file-name$7057$1c1CVa
                         (case-lambda
                           ((g$name$7059$1c1CVa)
                            (if (not (equal?
                                       g$name$7059$1c1CVa
                                       g$x$7056$1c1CVa))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6343$1c1CVa)))
                                  (case-lambda
                                    ((g$p$7062$1c1CVa g$e$7063$1c1CVa)
                                     ((case-lambda
                                        ((g$e$7064$1c1CVa g$p$7065$1c1CVa)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7065$1c1CVa)
                                           (write
                                             g$x$7056$1c1CVa
                                             g$p$7065$1c1CVa)
                                           (display
                                             '" in file "
                                             g$p$7065$1c1CVa)
                                           (display
                                             g$file-name$7057$1c1CVa
                                             g$p$7065$1c1CVa)
                                           (display '", found " g$p$7065$1c1CVa)
                                           (write
                                             g$name$7059$1c1CVa
                                             g$p$7065$1c1CVa)
                                           (display '" instead" g$p$7065$1c1CVa)
                                           (g$e$7064$1c1CVa))))
                                      g$e$7063$1c1CVa
                                      g$p$7062$1c1CVa)))))
                              (void)))))))))
                 (g$try-load-from-file$6963$1c1CVa g$file-name$7057$1c1CVa)))))
           ((g$file-locator$6960$1c1CVa) g$x$7056$1c1CVa))))
       (case-lambda
         ((g$f$7066$1c1CVa)
          (if (procedure? g$f$7066$1c1CVa)
            g$f$7066$1c1CVa
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7066$1c1CVa))))))
   (g$current-library-expander$6965$1c1CVa
     g$current-library-expander$7169$1c1CVa
     (g$make-parameter$6631$1c1CVa
       (case-lambda
         ((g$x$7067$1c1CVa)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7068$1c1CVa)
          (if (procedure? g$f$7068$1c1CVa)
            g$f$7068$1c1CVa
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7068$1c1CVa))))))
   (g$external-pending-libraries$6966$1c1CVa
     g$external-pending-libraries$7170$1c1CVa
     (g$make-parameter$6631$1c1CVa '()))
   (g$find-external-library$6967$1c1CVa
     g$find-external-library$7171$1c1CVa
     (case-lambda
       ((g$name$7069$1c1CVa)
        (begin
          (if (g$member$5490$1c1CVa
                g$name$7069$1c1CVa
                (g$external-pending-libraries$6966$1c1CVa))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7069$1c1CVa)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7072$1c1CVa
                g$external-pending-libraries$7073$1c1CVa)
              ((case-lambda
                 ((g$swap$7074$1c1CVa)
                  (dynamic-wind
                    g$swap$7074$1c1CVa
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6964$1c1CVa) g$name$7069$1c1CVa)
                         ((case-lambda
                            ((g$t$7075$1c1CVa)
                             (if g$t$7075$1c1CVa
                               g$t$7075$1c1CVa
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7069$1c1CVa)))))
                          (g$find-library-by$6956$1c1CVa
                            (case-lambda
                              ((g$x$7076$1c1CVa)
                               (equal?
                                 (g$library-name$6927$1c1CVa g$x$7076$1c1CVa)
                                 g$name$7069$1c1CVa))))))))
                    g$swap$7074$1c1CVa)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7077$1c1CVa)
                      (begin
                        (g$external-pending-libraries$7072$1c1CVa
                          g$external-pending-libraries$7073$1c1CVa)
                        (set! g$external-pending-libraries$7073$1c1CVa
                          g$t$7077$1c1CVa))))
                   (g$external-pending-libraries$7072$1c1CVa)))))))
           g$external-pending-libraries$6966$1c1CVa
           (cons
             g$name$7069$1c1CVa
             (g$external-pending-libraries$6966$1c1CVa)))))))
   (g$find-library-by-name$6968$1c1CVa
     g$find-library-by-name$7172$1c1CVa
     (case-lambda
       ((g$name$7078$1c1CVa)
        ((case-lambda
           ((g$t$7079$1c1CVa)
            (if g$t$7079$1c1CVa
              g$t$7079$1c1CVa
              (begin
                '#f
                (g$find-external-library$6967$1c1CVa g$name$7078$1c1CVa)))))
         (g$find-library-by$6956$1c1CVa
           (case-lambda
             ((g$x$7080$1c1CVa)
              (equal?
                (g$library-name$6927$1c1CVa g$x$7080$1c1CVa)
                g$name$7078$1c1CVa))))))))
   (g$library-exists?$6969$1c1CVa
     g$library-exists?$7173$1c1CVa
     (case-lambda
       ((g$name$7081$1c1CVa)
        (if (g$find-library-by$6956$1c1CVa
              (case-lambda
                ((g$x$7082$1c1CVa)
                 (equal?
                   (g$library-name$6927$1c1CVa g$x$7082$1c1CVa)
                   g$name$7081$1c1CVa))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6970$1c1CVa
     g$find-library-by-spec/die$7174$1c1CVa
     (case-lambda
       ((g$spec$7083$1c1CVa)
        ((case-lambda
           ((g$id$7084$1c1CVa)
            ((case-lambda
               ((g$t$7085$1c1CVa)
                (if g$t$7085$1c1CVa
                  g$t$7085$1c1CVa
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7083$1c1CVa)))))
             (g$find-library-by$6956$1c1CVa
               (case-lambda
                 ((g$x$7086$1c1CVa)
                  (eq? g$id$7084$1c1CVa
                       (g$library-id$6926$1c1CVa g$x$7086$1c1CVa))))))))
         (car g$spec$7083$1c1CVa)))))
   (g$label->binding-table$6971$1c1CVa
     g$label->binding-table$7175$1c1CVa
     (g$make-eq-hashtable$5287$1c1CVa))
   (g$install-library-record$6972$1c1CVa
     g$install-library-record$7176$1c1CVa
     (case-lambda
       ((g$lib$7087$1c1CVa)
        (begin
          ((case-lambda
             ((g$exp-env$7088$1c1CVa)
              (for-each
                (case-lambda
                  ((g$x$7089$1c1CVa)
                   ((case-lambda
                      ((g$label$7090$1c1CVa g$binding$7091$1c1CVa)
                       ((case-lambda
                          ((g$binding$7092$1c1CVa)
                           (g$hashtable-set!$5291$1c1CVa
                             g$label->binding-table$6971$1c1CVa
                             g$label$7090$1c1CVa
                             g$binding$7092$1c1CVa)))
                        ((case-lambda
                           ((g$t$7093$1c1CVa)
                            (if (memv g$t$7093$1c1CVa '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7087$1c1CVa
                                  (cdr g$binding$7091$1c1CVa)))
                              (if (memv g$t$7093$1c1CVa '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7087$1c1CVa
                                    (cdr g$binding$7091$1c1CVa)))
                                (if (memv g$t$7093$1c1CVa '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7087$1c1CVa
                                      (cdr g$binding$7091$1c1CVa)))
                                  g$binding$7091$1c1CVa)))))
                         (car g$binding$7091$1c1CVa)))))
                    (car g$x$7089$1c1CVa)
                    (cdr g$x$7089$1c1CVa))))
                g$exp-env$7088$1c1CVa)))
           (g$library-env$6933$1c1CVa g$lib$7087$1c1CVa))
          ((g$current-library-collection$6920$1c1CVa) g$lib$7087$1c1CVa)))))
   (g$install-library$6973$1c1CVa
     g$install-library$7177$1c1CVa
     (case-lambda
       ((g$id$7094$1c1CVa
          g$name$7095$1c1CVa
          g$ver$7096$1c1CVa
          g$imp*$7097$1c1CVa
          g$vis*$7098$1c1CVa
          g$inv*$7099$1c1CVa
          g$exp-subst$7100$1c1CVa
          g$exp-env$7101$1c1CVa
          g$visit-proc$7102$1c1CVa
          g$invoke-proc$7103$1c1CVa
          g$visit-code$7104$1c1CVa
          g$invoke-code$7105$1c1CVa
          g$visible?$7106$1c1CVa
          g$source-file-name$7107$1c1CVa)
        ((case-lambda
           ((g$imp-lib*$7108$1c1CVa
              g$vis-lib*$7109$1c1CVa
              g$inv-lib*$7110$1c1CVa)
            (begin
              (if (not (if (symbol? g$id$7094$1c1CVa)
                         (if (list? g$name$7095$1c1CVa)
                           (begin '#f (list? g$ver$7096$1c1CVa))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7094$1c1CVa
                  g$name$7095$1c1CVa
                  g$ver$7096$1c1CVa)
                (void))
              (if (g$library-exists?$6969$1c1CVa g$name$7095$1c1CVa)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7095$1c1CVa)
                (void))
              ((case-lambda
                 ((g$lib$7111$1c1CVa)
                  (g$install-library-record$6972$1c1CVa g$lib$7111$1c1CVa)))
               (g$make-library$6925$1c1CVa
                 g$id$7094$1c1CVa
                 g$name$7095$1c1CVa
                 g$ver$7096$1c1CVa
                 g$imp-lib*$7108$1c1CVa
                 g$vis-lib*$7109$1c1CVa
                 g$inv-lib*$7110$1c1CVa
                 g$exp-subst$7100$1c1CVa
                 g$exp-env$7101$1c1CVa
                 g$visit-proc$7102$1c1CVa
                 g$invoke-proc$7103$1c1CVa
                 g$visit-code$7104$1c1CVa
                 g$invoke-code$7105$1c1CVa
                 g$visible?$7106$1c1CVa
                 g$source-file-name$7107$1c1CVa)))))
         (map g$find-library-by-spec/die$6970$1c1CVa g$imp*$7097$1c1CVa)
         (map g$find-library-by-spec/die$6970$1c1CVa g$vis*$7098$1c1CVa)
         (map g$find-library-by-spec/die$6970$1c1CVa g$inv*$7099$1c1CVa)))))
   (g$imported-label->binding$6974$1c1CVa
     g$imported-label->binding$7178$1c1CVa
     (case-lambda
       ((g$lab$7112$1c1CVa)
        (g$hashtable-ref$5290$1c1CVa
          g$label->binding-table$6971$1c1CVa
          g$lab$7112$1c1CVa
          '#f))))
   (g$invoke-library$6975$1c1CVa
     g$invoke-library$7179$1c1CVa
     (case-lambda
       ((g$lib$7113$1c1CVa)
        ((case-lambda
           ((g$invoke$7114$1c1CVa)
            (if (procedure? g$invoke$7114$1c1CVa)
              (begin
                (g$set-library-invoke-state!$6949$1c1CVa
                  g$lib$7113$1c1CVa
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7113$1c1CVa))))
                (for-each
                  g$invoke-library$6975$1c1CVa
                  (g$library-inv*$6931$1c1CVa g$lib$7113$1c1CVa))
                (g$set-library-invoke-state!$6949$1c1CVa
                  g$lib$7113$1c1CVa
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7113$1c1CVa))))
                (g$invoke$7114$1c1CVa)
                (g$set-library-invoke-state!$6949$1c1CVa g$lib$7113$1c1CVa '#t))
              (void))))
         (g$library-invoke-state$6935$1c1CVa g$lib$7113$1c1CVa)))))
   (g$visit-library$6976$1c1CVa
     g$visit-library$7180$1c1CVa
     (case-lambda
       ((g$lib$7115$1c1CVa)
        ((case-lambda
           ((g$visit$7116$1c1CVa)
            (if (procedure? g$visit$7116$1c1CVa)
              (begin
                (g$set-library-visit-state!$6948$1c1CVa
                  g$lib$7115$1c1CVa
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7115$1c1CVa))))
                (for-each
                  g$invoke-library$6975$1c1CVa
                  (g$library-vis*$6930$1c1CVa g$lib$7115$1c1CVa))
                (g$set-library-visit-state!$6948$1c1CVa
                  g$lib$7115$1c1CVa
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7115$1c1CVa))))
                (g$visit$7116$1c1CVa)
                (g$set-library-visit-state!$6948$1c1CVa g$lib$7115$1c1CVa '#t))
              (void))))
         (g$library-visit-state$6934$1c1CVa g$lib$7115$1c1CVa)))))
   (g$invoke-library-by-spec$6977$1c1CVa
     g$invoke-library-by-spec$7181$1c1CVa
     (case-lambda
       ((g$spec$7117$1c1CVa)
        (g$invoke-library$6975$1c1CVa
          (g$find-library-by-spec/die$6970$1c1CVa g$spec$7117$1c1CVa)))))
   (g$installed-libraries$6978$1c1CVa
     g$installed-libraries$7182$1c1CVa
     (case-lambda
       ((g$all?$7118$1c1CVa)
        ((letrec ((g$f$7119$1c1CVa
                    (case-lambda
                      ((g$ls$7120$1c1CVa)
                       (if (null? g$ls$7120$1c1CVa)
                         '()
                         (if ((case-lambda
                                ((g$t$7121$1c1CVa)
                                 (if g$t$7121$1c1CVa
                                   g$t$7121$1c1CVa
                                   (begin
                                     '#f
                                     (g$library-visible?$6938$1c1CVa
                                       (car g$ls$7120$1c1CVa))))))
                              g$all?$7118$1c1CVa)
                           (cons
                             (car g$ls$7120$1c1CVa)
                             (g$f$7119$1c1CVa (cdr g$ls$7120$1c1CVa)))
                           (g$f$7119$1c1CVa (cdr g$ls$7120$1c1CVa))))))))
           g$f$7119$1c1CVa)
         ((g$current-library-collection$6920$1c1CVa))))
       (() (g$installed-libraries$6978$1c1CVa '#f))))
   (g$library-spec$6979$1c1CVa
     g$library-spec$7183$1c1CVa
     (case-lambda
       ((g$x$7122$1c1CVa)
        (begin
          (if (not (g$library?$6924$1c1CVa g$x$7122$1c1CVa))
            (assertion-violation 'library-spec '"not a library" g$x$7122$1c1CVa)
            (void))
          (list
            (g$library-id$6926$1c1CVa g$x$7122$1c1CVa)
            (g$library-name$6927$1c1CVa g$x$7122$1c1CVa)
            (g$library-version$6928$1c1CVa g$x$7122$1c1CVa)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7184$1c1CVa
     g$build-global-define$7294$1c1CVa
     (case-lambda ((g$x$7265$1c1CVa) (g$build-void$7261$1c1CVa))))
   (g$build-lambda$7233$1c1CVa
     g$build-lambda$7295$1c1CVa
     (case-lambda
       ((g$ae$7266$1c1CVa g$vars$7267$1c1CVa g$exp$7268$1c1CVa)
        (list 'case-lambda (list g$vars$7267$1c1CVa g$exp$7268$1c1CVa)))))
   (g$build-case-lambda$7234$1c1CVa
     g$build-case-lambda$7296$1c1CVa
     (case-lambda
       ((g$ae$7269$1c1CVa g$vars*$7270$1c1CVa g$exp*$7271$1c1CVa)
        (cons 'case-lambda (map list g$vars*$7270$1c1CVa g$exp*$7271$1c1CVa)))))
   (g$build-let$7235$1c1CVa
     g$build-let$7297$1c1CVa
     (case-lambda
       ((g$ae$7272$1c1CVa
          g$lhs*$7273$1c1CVa
          g$rhs*$7274$1c1CVa
          g$body$7275$1c1CVa)
        (cons
          (g$build-lambda$7233$1c1CVa
            g$ae$7272$1c1CVa
            g$lhs*$7273$1c1CVa
            g$body$7275$1c1CVa)
          g$rhs*$7274$1c1CVa))))
   (g$build-sequence$7260$1c1CVa
     g$build-sequence$7298$1c1CVa
     (case-lambda
       ((g$ae$7276$1c1CVa g$exps$7277$1c1CVa)
        ((letrec ((g$loop$7278$1c1CVa
                    (case-lambda
                      ((g$exps$7279$1c1CVa)
                       (if (null? (cdr g$exps$7279$1c1CVa))
                         (car g$exps$7279$1c1CVa)
                         (if (equal?
                               (car g$exps$7279$1c1CVa)
                               (g$build-void$7261$1c1CVa))
                           (g$loop$7278$1c1CVa (cdr g$exps$7279$1c1CVa))
                           (cons 'begin g$exps$7279$1c1CVa)))))))
           g$loop$7278$1c1CVa)
         g$exps$7277$1c1CVa))))
   (g$build-void$7261$1c1CVa
     g$build-void$7299$1c1CVa
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7262$1c1CVa
     g$build-letrec$7300$1c1CVa
     (case-lambda
       ((g$ae$7280$1c1CVa
          g$vars$7281$1c1CVa
          g$val-exps$7282$1c1CVa
          g$body-exp$7283$1c1CVa)
        (if (null? g$vars$7281$1c1CVa)
          g$body-exp$7283$1c1CVa
          (list
            'letrec
            (map list g$vars$7281$1c1CVa g$val-exps$7282$1c1CVa)
            g$body-exp$7283$1c1CVa)))))
   (g$build-letrec*$7263$1c1CVa
     g$build-letrec*$7301$1c1CVa
     (case-lambda
       ((g$ae$7284$1c1CVa
          g$vars$7285$1c1CVa
          g$val-exps$7286$1c1CVa
          g$body-exp$7287$1c1CVa)
        (if (null? g$vars$7285$1c1CVa)
          g$body-exp$7287$1c1CVa
          (list
            'letrec*
            (map list g$vars$7285$1c1CVa g$val-exps$7286$1c1CVa)
            g$body-exp$7287$1c1CVa)))))
   (g$build-library-letrec*$7264$1c1CVa
     g$build-library-letrec*$7302$1c1CVa
     (case-lambda
       ((g$ae$7288$1c1CVa
          g$name$7289$1c1CVa
          g$vars$7290$1c1CVa
          g$locs$7291$1c1CVa
          g$val-exps$7292$1c1CVa
          g$body-exp$7293$1c1CVa)
        (list
          'library-letrec*
          g$name$7289$1c1CVa
          (map list
               g$vars$7290$1c1CVa
               g$locs$7291$1c1CVa
               g$val-exps$7292$1c1CVa)
          g$body-exp$7293$1c1CVa)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7303$1c1CVa
     g$set-cons$10935$1c1CVa
     (case-lambda
       ((g$x$7759$1c1CVa g$ls$7760$1c1CVa)
        (if (memq g$x$7759$1c1CVa g$ls$7760$1c1CVa)
          g$ls$7760$1c1CVa
          (cons g$x$7759$1c1CVa g$ls$7760$1c1CVa)))))
   (g$set-union$7304$1c1CVa
     g$set-union$10936$1c1CVa
     (case-lambda
       ((g$ls1$7761$1c1CVa g$ls2$7762$1c1CVa)
        (if (null? g$ls1$7761$1c1CVa)
          g$ls2$7762$1c1CVa
          (if (memq (car g$ls1$7761$1c1CVa) g$ls2$7762$1c1CVa)
            (g$set-union$7304$1c1CVa (cdr g$ls1$7761$1c1CVa) g$ls2$7762$1c1CVa)
            (cons
              (car g$ls1$7761$1c1CVa)
              (g$set-union$7304$1c1CVa
                (cdr g$ls1$7761$1c1CVa)
                g$ls2$7762$1c1CVa)))))))
   (g$top-mark*$7306$1c1CVa g$top-mark*$10937$1c1CVa '(top))
   (g$top-marked?$7307$1c1CVa
     g$top-marked?$10938$1c1CVa
     (case-lambda ((g$m*$7763$1c1CVa) (memq 'top g$m*$7763$1c1CVa))))
   (g$gen-lexical$7308$1c1CVa
     g$gen-lexical$10939$1c1CVa
     (case-lambda
       ((g$sym$7764$1c1CVa)
        (if (symbol? g$sym$7764$1c1CVa)
          (gensym g$sym$7764$1c1CVa)
          (if (g$stx?$7336$1c1CVa g$sym$7764$1c1CVa)
            (g$gen-lexical$7308$1c1CVa
              (g$id->sym$7365$1c1CVa g$sym$7764$1c1CVa))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7764$1c1CVa))))))
   (g$gen-global$7309$1c1CVa
     g$gen-global$10940$1c1CVa
     (case-lambda
       ((g$x$7765$1c1CVa) (g$gen-lexical$7308$1c1CVa g$x$7765$1c1CVa))))
   (g$gen-label$7310$1c1CVa
     g$gen-label$10941$1c1CVa
     (case-lambda ((g$_$7766$1c1CVa) (gensym))))
   (g$gen-top-level-label$7311$1c1CVa
     g$gen-top-level-label$10942$1c1CVa
     (case-lambda
       ((g$id$7767$1c1CVa g$rib$7768$1c1CVa)
        (letrec* ((g$find$7769$1c1CVa
                    (case-lambda
                      ((g$sym$7775$1c1CVa
                         g$mark*$7776$1c1CVa
                         g$sym*$7777$1c1CVa
                         g$mark**$7778$1c1CVa
                         g$label*$7779$1c1CVa)
                       (if (pair? g$sym*$7777$1c1CVa)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7775$1c1CVa
                                        (car g$sym*$7777$1c1CVa))
                                 (begin
                                   '#f
                                   (g$same-marks?$7366$1c1CVa
                                     g$mark*$7776$1c1CVa
                                     (car g$mark**$7778$1c1CVa)))
                                 '#f)
                             (car g$label*$7779$1c1CVa)
                             (g$find$7769$1c1CVa
                               g$sym$7775$1c1CVa
                               g$mark*$7776$1c1CVa
                               (cdr g$sym*$7777$1c1CVa)
                               (cdr g$mark**$7778$1c1CVa)
                               (cdr g$label*$7779$1c1CVa))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7770$1c1CVa g$mark*$7771$1c1CVa)
              ((case-lambda
                 ((g$sym*$7772$1c1CVa)
                  ((case-lambda
                     ((g$t$7773$1c1CVa)
                      (if g$t$7773$1c1CVa
                        ((case-lambda
                           ((g$label$7774$1c1CVa)
                            (if (g$imported-label->binding$7178$1c1CVa
                                  g$label$7774$1c1CVa)
                              (gensym)
                              g$label$7774$1c1CVa)))
                         g$t$7773$1c1CVa)
                        (gensym))))
                   (if (memq
                         g$sym$7770$1c1CVa
                         (g$rib-sym*$7319$1c1CVa g$rib$7768$1c1CVa))
                     (begin
                       '#f
                       (g$find$7769$1c1CVa
                         g$sym$7770$1c1CVa
                         g$mark*$7771$1c1CVa
                         g$sym*$7772$1c1CVa
                         (g$rib-mark**$7320$1c1CVa g$rib$7768$1c1CVa)
                         (g$rib-label*$7321$1c1CVa g$rib$7768$1c1CVa)))
                     '#f))))
               (g$rib-sym*$7319$1c1CVa g$rib$7768$1c1CVa))))
           (g$id->sym$7365$1c1CVa g$id$7767$1c1CVa)
           (g$stx-mark*$7339$1c1CVa g$id$7767$1c1CVa))))))
   (g$gen-define-label+loc$7312$1c1CVa
     g$gen-define-label+loc$10943$1c1CVa
     (case-lambda
       ((g$id$7780$1c1CVa g$rib$7781$1c1CVa)
        ((case-lambda
           ((g$t$7782$1c1CVa)
            (if g$t$7782$1c1CVa
              ((case-lambda
                 ((g$env$7783$1c1CVa)
                  ((case-lambda
                     ((g$label$7784$1c1CVa g$locs$7785$1c1CVa)
                      (values
                        g$label$7784$1c1CVa
                        ((case-lambda
                           ((g$t$7786$1c1CVa)
                            (if g$t$7786$1c1CVa
                              (cdr g$t$7786$1c1CVa)
                              ((case-lambda
                                 ((g$loc$7787$1c1CVa)
                                  (begin
                                    (g$set-interaction-env-locs!$7725$1c1CVa
                                      g$env$7783$1c1CVa
                                      (cons
                                        (cons
                                          g$label$7784$1c1CVa
                                          g$loc$7787$1c1CVa)
                                        g$locs$7785$1c1CVa))
                                    g$loc$7787$1c1CVa)))
                               (g$gen-lexical$7308$1c1CVa g$id$7780$1c1CVa)))))
                         (assq g$label$7784$1c1CVa g$locs$7785$1c1CVa)))))
                   (g$gen-top-level-label$7311$1c1CVa
                     g$id$7780$1c1CVa
                     g$rib$7781$1c1CVa)
                   (g$interaction-env-locs$7722$1c1CVa g$env$7783$1c1CVa))))
               g$t$7782$1c1CVa)
              (values (gensym) (g$gen-lexical$7308$1c1CVa g$id$7780$1c1CVa)))))
         (g$top-level-context$7758$1c1CVa)))))
   (g$gen-define-label$7313$1c1CVa
     g$gen-define-label$10944$1c1CVa
     (case-lambda
       ((g$id$7788$1c1CVa g$rib$7789$1c1CVa)
        (if (g$top-level-context$7758$1c1CVa)
          (g$gen-top-level-label$7311$1c1CVa g$id$7788$1c1CVa g$rib$7789$1c1CVa)
          (gensym)))))
   (g$8447$7314$1c1CVa
     g$8447$10945$1c1CVa
     (make-record-type-descriptor
       'rib
       '#f
       'g$8450$1c1CVa
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8449$7315$1c1CVa g$8449$10946$1c1CVa '#f)
   (g$8448$7316$1c1CVa
     g$8448$10947$1c1CVa
     (make-record-constructor-descriptor
       g$8447$7314$1c1CVa
       '#f
       g$8449$7315$1c1CVa))
   (g$rib?$7317$1c1CVa
     g$rib?$10948$1c1CVa
     (record-predicate g$8447$7314$1c1CVa))
   (g$make-rib$7318$1c1CVa
     g$make-rib$10949$1c1CVa
     (record-constructor g$8448$7316$1c1CVa))
   (g$rib-sym*$7319$1c1CVa
     g$rib-sym*$10950$1c1CVa
     (record-accessor g$8447$7314$1c1CVa '0))
   (g$rib-mark**$7320$1c1CVa
     g$rib-mark**$10951$1c1CVa
     (record-accessor g$8447$7314$1c1CVa '1))
   (g$rib-label*$7321$1c1CVa
     g$rib-label*$10952$1c1CVa
     (record-accessor g$8447$7314$1c1CVa '2))
   (g$rib-sealed/freq$7322$1c1CVa
     g$rib-sealed/freq$10953$1c1CVa
     (record-accessor g$8447$7314$1c1CVa '3))
   (g$set-rib-sym*!$7323$1c1CVa
     g$set-rib-sym*!$10954$1c1CVa
     (record-mutator g$8447$7314$1c1CVa '0))
   (g$set-rib-mark**!$7324$1c1CVa
     g$set-rib-mark**!$10955$1c1CVa
     (record-mutator g$8447$7314$1c1CVa '1))
   (g$set-rib-label*!$7325$1c1CVa
     g$set-rib-label*!$10956$1c1CVa
     (record-mutator g$8447$7314$1c1CVa '2))
   (g$set-rib-sealed/freq!$7326$1c1CVa
     g$set-rib-sealed/freq!$10957$1c1CVa
     (record-mutator g$8447$7314$1c1CVa '3))
   (g$make-empty-rib$7327$1c1CVa
     g$make-empty-rib$10958$1c1CVa
     (case-lambda (() (g$make-rib$7318$1c1CVa '() '() '() '#f))))
   (g$extend-rib!$7328$1c1CVa
     g$extend-rib!$10959$1c1CVa
     (case-lambda
       ((g$rib$7790$1c1CVa g$id$7791$1c1CVa g$label$7792$1c1CVa)
        (letrec* ((g$find$7793$1c1CVa
                    (case-lambda
                      ((g$sym$7799$1c1CVa
                         g$mark*$7800$1c1CVa
                         g$sym*$7801$1c1CVa
                         g$mark**$7802$1c1CVa
                         g$label*$7803$1c1CVa)
                       (if (pair? g$sym*$7801$1c1CVa)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7799$1c1CVa
                                        (car g$sym*$7801$1c1CVa))
                                 (begin
                                   '#f
                                   (g$same-marks?$7366$1c1CVa
                                     g$mark*$7800$1c1CVa
                                     (car g$mark**$7802$1c1CVa)))
                                 '#f)
                             g$label*$7803$1c1CVa
                             (g$find$7793$1c1CVa
                               g$sym$7799$1c1CVa
                               g$mark*$7800$1c1CVa
                               (cdr g$sym*$7801$1c1CVa)
                               (cdr g$mark**$7802$1c1CVa)
                               (cdr g$label*$7803$1c1CVa))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7322$1c1CVa g$rib$7790$1c1CVa)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7790$1c1CVa)
              (void))
            ((case-lambda
               ((g$sym$7794$1c1CVa g$mark*$7795$1c1CVa)
                ((case-lambda
                   ((g$sym*$7796$1c1CVa)
                    ((case-lambda
                       ((g$t$7797$1c1CVa)
                        (if g$t$7797$1c1CVa
                          ((case-lambda
                             ((g$p$7798$1c1CVa)
                              (if (not (eq? g$label$7792$1c1CVa
                                            (car g$p$7798$1c1CVa)))
                                (if (g$top-level-context$7758$1c1CVa)
                                  (set-car! g$p$7798$1c1CVa g$label$7792$1c1CVa)
                                  (g$syntax-violation$7751$1c1CVa
                                    '#f
                                    '"cannot redefine"
                                    g$id$7791$1c1CVa))
                                (void))))
                           g$t$7797$1c1CVa)
                          (begin
                            (g$set-rib-sym*!$7323$1c1CVa
                              g$rib$7790$1c1CVa
                              (cons g$sym$7794$1c1CVa g$sym*$7796$1c1CVa))
                            (g$set-rib-mark**!$7324$1c1CVa
                              g$rib$7790$1c1CVa
                              (cons
                                g$mark*$7795$1c1CVa
                                (g$rib-mark**$7320$1c1CVa g$rib$7790$1c1CVa)))
                            (g$set-rib-label*!$7325$1c1CVa
                              g$rib$7790$1c1CVa
                              (cons
                                g$label$7792$1c1CVa
                                (g$rib-label*$7321$1c1CVa
                                  g$rib$7790$1c1CVa)))))))
                     (if (memq
                           g$sym$7794$1c1CVa
                           (g$rib-sym*$7319$1c1CVa g$rib$7790$1c1CVa))
                       (begin
                         '#f
                         (g$find$7793$1c1CVa
                           g$sym$7794$1c1CVa
                           g$mark*$7795$1c1CVa
                           g$sym*$7796$1c1CVa
                           (g$rib-mark**$7320$1c1CVa g$rib$7790$1c1CVa)
                           (g$rib-label*$7321$1c1CVa g$rib$7790$1c1CVa)))
                       '#f))))
                 (g$rib-sym*$7319$1c1CVa g$rib$7790$1c1CVa))))
             (g$id->sym$7365$1c1CVa g$id$7791$1c1CVa)
             (g$stx-mark*$7339$1c1CVa g$id$7791$1c1CVa)))))))
   (g$make-rib-map$7329$1c1CVa
     g$make-rib-map$10960$1c1CVa
     (case-lambda
       ((g$sym*$7804$1c1CVa)
        ((case-lambda
           ((g$ht$7805$1c1CVa)
            ((letrec ((g$f$7806$1c1CVa
                        (case-lambda
                          ((g$i$7807$1c1CVa g$sym*$7808$1c1CVa)
                           (if (null? g$sym*$7808$1c1CVa)
                             g$ht$7805$1c1CVa
                             (begin
                               (g$hashtable-update!$5294$1c1CVa
                                 g$ht$7805$1c1CVa
                                 (car g$sym*$7808$1c1CVa)
                                 (case-lambda
                                   ((g$x$7809$1c1CVa)
                                    (cons g$i$7807$1c1CVa g$x$7809$1c1CVa)))
                                 '())
                               (g$f$7806$1c1CVa
                                 (+ g$i$7807$1c1CVa '1)
                                 (cdr g$sym*$7808$1c1CVa))))))))
               g$f$7806$1c1CVa)
             '0
             g$sym*$7804$1c1CVa)))
         (g$make-eq-hashtable$5287$1c1CVa)))))
   (g$seal-rib!$7330$1c1CVa
     g$seal-rib!$10961$1c1CVa
     (case-lambda
       ((g$rib$7810$1c1CVa)
        ((case-lambda
           ((g$sym*$7811$1c1CVa)
            (if (not (null? g$sym*$7811$1c1CVa))
              (begin
                (g$set-rib-sym*!$7323$1c1CVa
                  g$rib$7810$1c1CVa
                  (list->vector g$sym*$7811$1c1CVa))
                (g$set-rib-mark**!$7324$1c1CVa
                  g$rib$7810$1c1CVa
                  (list->vector (g$rib-mark**$7320$1c1CVa g$rib$7810$1c1CVa)))
                (g$set-rib-label*!$7325$1c1CVa
                  g$rib$7810$1c1CVa
                  (list->vector (g$rib-label*$7321$1c1CVa g$rib$7810$1c1CVa)))
                (g$set-rib-sealed/freq!$7326$1c1CVa
                  g$rib$7810$1c1CVa
                  (g$make-rib-map$7329$1c1CVa g$sym*$7811$1c1CVa)))
              (void))))
         (g$rib-sym*$7319$1c1CVa g$rib$7810$1c1CVa)))))
   (g$unseal-rib!$7331$1c1CVa
     g$unseal-rib!$10962$1c1CVa
     (case-lambda
       ((g$rib$7812$1c1CVa)
        (if (g$rib-sealed/freq$7322$1c1CVa g$rib$7812$1c1CVa)
          (begin
            (g$set-rib-sealed/freq!$7326$1c1CVa g$rib$7812$1c1CVa '#f)
            (g$set-rib-sym*!$7323$1c1CVa
              g$rib$7812$1c1CVa
              (vector->list (g$rib-sym*$7319$1c1CVa g$rib$7812$1c1CVa)))
            (g$set-rib-mark**!$7324$1c1CVa
              g$rib$7812$1c1CVa
              (vector->list (g$rib-mark**$7320$1c1CVa g$rib$7812$1c1CVa)))
            (g$set-rib-label*!$7325$1c1CVa
              g$rib$7812$1c1CVa
              (vector->list (g$rib-label*$7321$1c1CVa g$rib$7812$1c1CVa))))
          (void)))))
   (g$make-full-rib$7332$1c1CVa
     g$make-full-rib$10963$1c1CVa
     (case-lambda
       ((g$id*$7813$1c1CVa g$label*$7814$1c1CVa)
        ((case-lambda
           ((g$r$7815$1c1CVa)
            (begin (g$seal-rib!$7330$1c1CVa g$r$7815$1c1CVa) g$r$7815$1c1CVa)))
         (g$make-rib$7318$1c1CVa
           (map g$id->sym$7365$1c1CVa g$id*$7813$1c1CVa)
           (map g$stx-mark*$7339$1c1CVa g$id*$7813$1c1CVa)
           g$label*$7814$1c1CVa
           '#f)))))
   (g$8473$7333$1c1CVa
     g$8473$10964$1c1CVa
     (make-record-type-descriptor
       'stx
       '#f
       'g$8476$1c1CVa
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8475$7334$1c1CVa g$8475$10965$1c1CVa '#f)
   (g$8474$7335$1c1CVa
     g$8474$10966$1c1CVa
     (make-record-constructor-descriptor
       g$8473$7333$1c1CVa
       '#f
       g$8475$7334$1c1CVa))
   (g$stx?$7336$1c1CVa
     g$stx?$10967$1c1CVa
     (record-predicate g$8473$7333$1c1CVa))
   (g$make-stx$7337$1c1CVa
     g$make-stx$10968$1c1CVa
     (record-constructor g$8474$7335$1c1CVa))
   (g$stx-expr$7338$1c1CVa
     g$stx-expr$10969$1c1CVa
     (record-accessor g$8473$7333$1c1CVa '0))
   (g$stx-mark*$7339$1c1CVa
     g$stx-mark*$10970$1c1CVa
     (record-accessor g$8473$7333$1c1CVa '1))
   (g$stx-subst*$7340$1c1CVa
     g$stx-subst*$10971$1c1CVa
     (record-accessor g$8473$7333$1c1CVa '2))
   (g$stx-ae*$7341$1c1CVa
     g$stx-ae*$10972$1c1CVa
     (record-accessor g$8473$7333$1c1CVa '3))
   (g$set-stx-expr!$7342$1c1CVa
     g$set-stx-expr!$10973$1c1CVa
     (record-mutator g$8473$7333$1c1CVa '0))
   (g$set-stx-mark*!$7343$1c1CVa
     g$set-stx-mark*!$10974$1c1CVa
     (record-mutator g$8473$7333$1c1CVa '1))
   (g$set-stx-subst*!$7344$1c1CVa
     g$set-stx-subst*!$10975$1c1CVa
     (record-mutator g$8473$7333$1c1CVa '2))
   (g$set-stx-ae*!$7345$1c1CVa
     g$set-stx-ae*!$10976$1c1CVa
     (record-mutator g$8473$7333$1c1CVa '3))
   (g$rp$7346$1c1CVa
     g$rp$10977$1c1CVa
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7816$1c1CVa g$p$7817$1c1CVa)
          (begin
            (display '"#<syntax " g$p$7817$1c1CVa)
            (write (g$stx->datum$7375$1c1CVa g$x$7816$1c1CVa) g$p$7817$1c1CVa)
            ((case-lambda
               ((g$expr$7818$1c1CVa)
                (if (annotation? g$expr$7818$1c1CVa)
                  ((case-lambda
                     ((g$src$7819$1c1CVa)
                      (if (pair? g$src$7819$1c1CVa)
                        (begin
                          (display '" [" g$p$7817$1c1CVa)
                          (display (cdr g$src$7819$1c1CVa) g$p$7817$1c1CVa)
                          (display '" of " g$p$7817$1c1CVa)
                          (display (car g$src$7819$1c1CVa) g$p$7817$1c1CVa)
                          (display '"]" g$p$7817$1c1CVa))
                        (void))))
                   (annotation-source g$expr$7818$1c1CVa))
                  (void))))
             (g$stx-expr$7338$1c1CVa g$x$7816$1c1CVa))
            (display '">" g$p$7817$1c1CVa))))))
   (g$datum->stx$7347$1c1CVa
     g$datum->stx$10978$1c1CVa
     (case-lambda
       ((g$id$7820$1c1CVa g$datum$7821$1c1CVa)
        (g$make-stx$7337$1c1CVa
          g$datum$7821$1c1CVa
          (g$stx-mark*$7339$1c1CVa g$id$7820$1c1CVa)
          (g$stx-subst*$7340$1c1CVa g$id$7820$1c1CVa)
          (g$stx-ae*$7341$1c1CVa g$id$7820$1c1CVa)))))
   (g$gen-mark$7348$1c1CVa
     g$gen-mark$10979$1c1CVa
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7349$1c1CVa g$anti-mark$10980$1c1CVa '#f)
   (g$anti-mark?$7350$1c1CVa g$anti-mark?$10981$1c1CVa not)
   (g$join-wraps$7351$1c1CVa
     g$join-wraps$10982$1c1CVa
     (case-lambda
       ((g$m1*$7822$1c1CVa
          g$s1*$7823$1c1CVa
          g$ae1*$7824$1c1CVa
          g$e$7825$1c1CVa)
        (letrec* ((g$cancel$7826$1c1CVa
                    (case-lambda
                      ((g$ls1$7830$1c1CVa g$ls2$7831$1c1CVa)
                       ((letrec ((g$f$7832$1c1CVa
                                   (case-lambda
                                     ((g$x$7833$1c1CVa g$ls1$7834$1c1CVa)
                                      (if (null? g$ls1$7834$1c1CVa)
                                        (cdr g$ls2$7831$1c1CVa)
                                        (cons
                                          g$x$7833$1c1CVa
                                          (g$f$7832$1c1CVa
                                            (car g$ls1$7834$1c1CVa)
                                            (cdr g$ls1$7834$1c1CVa))))))))
                          g$f$7832$1c1CVa)
                        (car g$ls1$7830$1c1CVa)
                        (cdr g$ls1$7830$1c1CVa))))))
          ((case-lambda
             ((g$m2*$7827$1c1CVa g$s2*$7828$1c1CVa g$ae2*$7829$1c1CVa)
              (if (if (not (null? g$m1*$7822$1c1CVa))
                    (if (not (null? g$m2*$7827$1c1CVa))
                      (begin
                        '#f
                        (g$anti-mark?$7350$1c1CVa (car g$m2*$7827$1c1CVa)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7826$1c1CVa g$m1*$7822$1c1CVa g$m2*$7827$1c1CVa)
                  (g$cancel$7826$1c1CVa g$s1*$7823$1c1CVa g$s2*$7828$1c1CVa)
                  (g$cancel$7826$1c1CVa g$ae1*$7824$1c1CVa g$ae2*$7829$1c1CVa))
                (values
                  (append g$m1*$7822$1c1CVa g$m2*$7827$1c1CVa)
                  (append g$s1*$7823$1c1CVa g$s2*$7828$1c1CVa)
                  (append g$ae1*$7824$1c1CVa g$ae2*$7829$1c1CVa)))))
           (g$stx-mark*$7339$1c1CVa g$e$7825$1c1CVa)
           (g$stx-subst*$7340$1c1CVa g$e$7825$1c1CVa)
           (g$stx-ae*$7341$1c1CVa g$e$7825$1c1CVa))))))
   (g$mkstx$7352$1c1CVa
     g$mkstx$10983$1c1CVa
     (case-lambda
       ((g$e$7835$1c1CVa g$m*$7836$1c1CVa g$s*$7837$1c1CVa g$ae*$7838$1c1CVa)
        (if (if (g$stx?$7336$1c1CVa g$e$7835$1c1CVa)
              (begin '#f (not (g$top-marked?$7307$1c1CVa g$m*$7836$1c1CVa)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7351$1c1CVa
                 g$m*$7836$1c1CVa
                 g$s*$7837$1c1CVa
                 g$ae*$7838$1c1CVa
                 g$e$7835$1c1CVa)))
            (case-lambda
              ((g$m*$7842$1c1CVa g$s*$7843$1c1CVa g$ae*$7844$1c1CVa)
               ((case-lambda
                  ((g$ae*$7845$1c1CVa g$s*$7846$1c1CVa g$m*$7847$1c1CVa)
                   (g$make-stx$7337$1c1CVa
                     (g$stx-expr$7338$1c1CVa g$e$7835$1c1CVa)
                     g$m*$7847$1c1CVa
                     g$s*$7846$1c1CVa
                     g$ae*$7845$1c1CVa)))
                g$ae*$7844$1c1CVa
                g$s*$7843$1c1CVa
                g$m*$7842$1c1CVa))))
          (g$make-stx$7337$1c1CVa
            g$e$7835$1c1CVa
            g$m*$7836$1c1CVa
            g$s*$7837$1c1CVa
            g$ae*$7838$1c1CVa)))))
   (g$add-mark$7353$1c1CVa
     g$add-mark$10984$1c1CVa
     (case-lambda
       ((g$m$7848$1c1CVa g$e$7849$1c1CVa g$ae$7850$1c1CVa)
        (g$mkstx$7352$1c1CVa
          g$e$7849$1c1CVa
          (list g$m$7848$1c1CVa)
          '(shift)
          (list g$ae$7850$1c1CVa)))))
   (g$add-subst$7354$1c1CVa
     g$add-subst$10985$1c1CVa
     (case-lambda
       ((g$subst$7851$1c1CVa g$e$7852$1c1CVa)
        (g$mkstx$7352$1c1CVa
          g$e$7852$1c1CVa
          '()
          (list g$subst$7851$1c1CVa)
          '()))))
   (g$syntax-kind?$7355$1c1CVa
     g$syntax-kind?$10986$1c1CVa
     (case-lambda
       ((g$x$7853$1c1CVa g$p?$7854$1c1CVa)
        (if (g$stx?$7336$1c1CVa g$x$7853$1c1CVa)
          (g$syntax-kind?$7355$1c1CVa
            (g$stx-expr$7338$1c1CVa g$x$7853$1c1CVa)
            g$p?$7854$1c1CVa)
          (if (annotation? g$x$7853$1c1CVa)
            (g$syntax-kind?$7355$1c1CVa
              (annotation-expression g$x$7853$1c1CVa)
              g$p?$7854$1c1CVa)
            (g$p?$7854$1c1CVa g$x$7853$1c1CVa))))))
   (g$syntax-vector->list$7356$1c1CVa
     g$syntax-vector->list$10987$1c1CVa
     (case-lambda
       ((g$x$7855$1c1CVa)
        (if (g$stx?$7336$1c1CVa g$x$7855$1c1CVa)
          ((case-lambda
             ((g$ls$7856$1c1CVa
                g$m*$7857$1c1CVa
                g$s*$7858$1c1CVa
                g$ae*$7859$1c1CVa)
              (map (case-lambda
                     ((g$x$7860$1c1CVa)
                      (g$mkstx$7352$1c1CVa
                        g$x$7860$1c1CVa
                        g$m*$7857$1c1CVa
                        g$s*$7858$1c1CVa
                        g$ae*$7859$1c1CVa)))
                   g$ls$7856$1c1CVa)))
           (g$syntax-vector->list$7356$1c1CVa
             (g$stx-expr$7338$1c1CVa g$x$7855$1c1CVa))
           (g$stx-mark*$7339$1c1CVa g$x$7855$1c1CVa)
           (g$stx-subst*$7340$1c1CVa g$x$7855$1c1CVa)
           (g$stx-ae*$7341$1c1CVa g$x$7855$1c1CVa))
          (if (annotation? g$x$7855$1c1CVa)
            (g$syntax-vector->list$7356$1c1CVa
              (annotation-expression g$x$7855$1c1CVa))
            (if (vector? g$x$7855$1c1CVa)
              (vector->list g$x$7855$1c1CVa)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7855$1c1CVa)))))))
   (g$syntax-pair?$7357$1c1CVa
     g$syntax-pair?$10988$1c1CVa
     (case-lambda
       ((g$x$7861$1c1CVa) (g$syntax-kind?$7355$1c1CVa g$x$7861$1c1CVa pair?))))
   (g$syntax-vector?$7358$1c1CVa
     g$syntax-vector?$10989$1c1CVa
     (case-lambda
       ((g$x$7862$1c1CVa)
        (g$syntax-kind?$7355$1c1CVa g$x$7862$1c1CVa vector?))))
   (g$syntax-null?$7359$1c1CVa
     g$syntax-null?$10990$1c1CVa
     (case-lambda
       ((g$x$7863$1c1CVa) (g$syntax-kind?$7355$1c1CVa g$x$7863$1c1CVa null?))))
   (g$syntax-list?$7360$1c1CVa
     g$syntax-list?$10991$1c1CVa
     (case-lambda
       ((g$x$7864$1c1CVa)
        ((case-lambda
           ((g$t$7865$1c1CVa)
            (if g$t$7865$1c1CVa
              g$t$7865$1c1CVa
              (begin
                '#f
                (if (g$syntax-pair?$7357$1c1CVa g$x$7864$1c1CVa)
                  (begin
                    '#f
                    (g$syntax-list?$7360$1c1CVa
                      (g$syntax-cdr$7362$1c1CVa g$x$7864$1c1CVa)))
                  '#f)))))
         (g$syntax-null?$7359$1c1CVa g$x$7864$1c1CVa)))))
   (g$syntax-car$7361$1c1CVa
     g$syntax-car$10992$1c1CVa
     (case-lambda
       ((g$x$7866$1c1CVa)
        (if (g$stx?$7336$1c1CVa g$x$7866$1c1CVa)
          (g$mkstx$7352$1c1CVa
            (g$syntax-car$7361$1c1CVa (g$stx-expr$7338$1c1CVa g$x$7866$1c1CVa))
            (g$stx-mark*$7339$1c1CVa g$x$7866$1c1CVa)
            (g$stx-subst*$7340$1c1CVa g$x$7866$1c1CVa)
            (g$stx-ae*$7341$1c1CVa g$x$7866$1c1CVa))
          (if (annotation? g$x$7866$1c1CVa)
            (g$syntax-car$7361$1c1CVa (annotation-expression g$x$7866$1c1CVa))
            (if (pair? g$x$7866$1c1CVa)
              (car g$x$7866$1c1CVa)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7866$1c1CVa)))))))
   (g$syntax-cdr$7362$1c1CVa
     g$syntax-cdr$10993$1c1CVa
     (case-lambda
       ((g$x$7867$1c1CVa)
        (if (g$stx?$7336$1c1CVa g$x$7867$1c1CVa)
          (g$mkstx$7352$1c1CVa
            (g$syntax-cdr$7362$1c1CVa (g$stx-expr$7338$1c1CVa g$x$7867$1c1CVa))
            (g$stx-mark*$7339$1c1CVa g$x$7867$1c1CVa)
            (g$stx-subst*$7340$1c1CVa g$x$7867$1c1CVa)
            (g$stx-ae*$7341$1c1CVa g$x$7867$1c1CVa))
          (if (annotation? g$x$7867$1c1CVa)
            (g$syntax-cdr$7362$1c1CVa (annotation-expression g$x$7867$1c1CVa))
            (if (pair? g$x$7867$1c1CVa)
              (cdr g$x$7867$1c1CVa)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7867$1c1CVa)))))))
   (g$syntax->list$7363$1c1CVa
     g$syntax->list$10994$1c1CVa
     (case-lambda
       ((g$x$7868$1c1CVa)
        (if (g$syntax-pair?$7357$1c1CVa g$x$7868$1c1CVa)
          (cons
            (g$syntax-car$7361$1c1CVa g$x$7868$1c1CVa)
            (g$syntax->list$7363$1c1CVa
              (g$syntax-cdr$7362$1c1CVa g$x$7868$1c1CVa)))
          (if (g$syntax-null?$7359$1c1CVa g$x$7868$1c1CVa)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7868$1c1CVa))))))
   (g$id?$7364$1c1CVa
     g$id?$10995$1c1CVa
     (case-lambda
       ((g$x$7869$1c1CVa)
        (if (g$stx?$7336$1c1CVa g$x$7869$1c1CVa)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7870$1c1CVa)
                (symbol?
                  (if (annotation? g$expr$7870$1c1CVa)
                    (annotation-stripped g$expr$7870$1c1CVa)
                    g$expr$7870$1c1CVa))))
             (g$stx-expr$7338$1c1CVa g$x$7869$1c1CVa)))
          '#f))))
   (g$id->sym$7365$1c1CVa
     g$id->sym$10996$1c1CVa
     (case-lambda
       ((g$x$7871$1c1CVa)
        (begin
          (if (not (g$stx?$7336$1c1CVa g$x$7871$1c1CVa))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7871$1c1CVa)
            (void))
          ((case-lambda
             ((g$expr$7872$1c1CVa)
              ((case-lambda
                 ((g$sym$7873$1c1CVa)
                  (if (symbol? g$sym$7873$1c1CVa)
                    g$sym$7873$1c1CVa
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7871$1c1CVa))))
               (if (annotation? g$expr$7872$1c1CVa)
                 (annotation-stripped g$expr$7872$1c1CVa)
                 g$expr$7872$1c1CVa))))
           (g$stx-expr$7338$1c1CVa g$x$7871$1c1CVa))))))
   (g$same-marks?$7366$1c1CVa
     g$same-marks?$10997$1c1CVa
     (case-lambda
       ((g$x$7874$1c1CVa g$y$7875$1c1CVa)
        ((case-lambda
           ((g$t$7876$1c1CVa)
            (if g$t$7876$1c1CVa
              g$t$7876$1c1CVa
              (begin
                '#f
                (if (pair? g$x$7874$1c1CVa)
                  (if (pair? g$y$7875$1c1CVa)
                    (if (eq? (car g$x$7874$1c1CVa) (car g$y$7875$1c1CVa))
                      (begin
                        '#f
                        (g$same-marks?$7366$1c1CVa
                          (cdr g$x$7874$1c1CVa)
                          (cdr g$y$7875$1c1CVa)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7874$1c1CVa)
           (begin '#f (null? g$y$7875$1c1CVa))
           '#f)))))
   (g$bound-id=?$7367$1c1CVa
     g$bound-id=?$10998$1c1CVa
     (case-lambda
       ((g$x$7877$1c1CVa g$y$7878$1c1CVa)
        (if (eq? (g$id->sym$7365$1c1CVa g$x$7877$1c1CVa)
                 (g$id->sym$7365$1c1CVa g$y$7878$1c1CVa))
          (begin
            '#f
            (g$same-marks?$7366$1c1CVa
              (g$stx-mark*$7339$1c1CVa g$x$7877$1c1CVa)
              (g$stx-mark*$7339$1c1CVa g$y$7878$1c1CVa)))
          '#f))))
   (g$free-id=?$7368$1c1CVa
     g$free-id=?$10999$1c1CVa
     (case-lambda
       ((g$i$7879$1c1CVa g$j$7880$1c1CVa)
        ((case-lambda
           ((g$t0$7881$1c1CVa g$t1$7882$1c1CVa)
            (if ((case-lambda
                   ((g$t$7883$1c1CVa)
                    (if g$t$7883$1c1CVa
                      g$t$7883$1c1CVa
                      (begin '#f g$t1$7882$1c1CVa))))
                 g$t0$7881$1c1CVa)
              (eq? g$t0$7881$1c1CVa g$t1$7882$1c1CVa)
              (eq? (g$id->sym$7365$1c1CVa g$i$7879$1c1CVa)
                   (g$id->sym$7365$1c1CVa g$j$7880$1c1CVa)))))
         (g$id->real-label$7378$1c1CVa g$i$7879$1c1CVa)
         (g$id->real-label$7378$1c1CVa g$j$7880$1c1CVa)))))
   (g$valid-bound-ids?$7369$1c1CVa
     g$valid-bound-ids?$11000$1c1CVa
     (case-lambda
       ((g$id*$7884$1c1CVa)
        (if (g$for-all$5494$1c1CVa g$id?$7364$1c1CVa g$id*$7884$1c1CVa)
          (begin '#f (g$distinct-bound-ids?$7370$1c1CVa g$id*$7884$1c1CVa))
          '#f))))
   (g$distinct-bound-ids?$7370$1c1CVa
     g$distinct-bound-ids?$11001$1c1CVa
     (case-lambda
       ((g$id*$7885$1c1CVa)
        ((case-lambda
           ((g$t$7886$1c1CVa)
            (if g$t$7886$1c1CVa
              g$t$7886$1c1CVa
              (begin
                '#f
                (if (not (g$bound-id-member?$7371$1c1CVa
                           (car g$id*$7885$1c1CVa)
                           (cdr g$id*$7885$1c1CVa)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7370$1c1CVa (cdr g$id*$7885$1c1CVa)))
                  '#f)))))
         (null? g$id*$7885$1c1CVa)))))
   (g$bound-id-member?$7371$1c1CVa
     g$bound-id-member?$11002$1c1CVa
     (case-lambda
       ((g$id$7887$1c1CVa g$id*$7888$1c1CVa)
        (if (pair? g$id*$7888$1c1CVa)
          (begin
            '#f
            ((case-lambda
               ((g$t$7889$1c1CVa)
                (if g$t$7889$1c1CVa
                  g$t$7889$1c1CVa
                  (begin
                    '#f
                    (g$bound-id-member?$7371$1c1CVa
                      g$id$7887$1c1CVa
                      (cdr g$id*$7888$1c1CVa))))))
             (g$bound-id=?$7367$1c1CVa
               g$id$7887$1c1CVa
               (car g$id*$7888$1c1CVa))))
          '#f))))
   (g$self-evaluating?$7372$1c1CVa
     g$self-evaluating?$11003$1c1CVa
     (case-lambda
       ((g$x$7890$1c1CVa)
        ((case-lambda
           ((g$t$7891$1c1CVa)
            (if g$t$7891$1c1CVa
              g$t$7891$1c1CVa
              ((case-lambda
                 ((g$t$7892$1c1CVa)
                  (if g$t$7892$1c1CVa
                    g$t$7892$1c1CVa
                    ((case-lambda
                       ((g$t$7893$1c1CVa)
                        (if g$t$7893$1c1CVa
                          g$t$7893$1c1CVa
                          ((case-lambda
                             ((g$t$7894$1c1CVa)
                              (if g$t$7894$1c1CVa
                                g$t$7894$1c1CVa
                                (begin '#f (bytevector? g$x$7890$1c1CVa)))))
                           (boolean? g$x$7890$1c1CVa)))))
                     (char? g$x$7890$1c1CVa)))))
               (string? g$x$7890$1c1CVa)))))
         (number? g$x$7890$1c1CVa)))))
   (g$strip-annotations$7373$1c1CVa
     g$strip-annotations$11004$1c1CVa
     (case-lambda
       ((g$x$7895$1c1CVa)
        (if (pair? g$x$7895$1c1CVa)
          (cons
            (g$strip-annotations$7373$1c1CVa (car g$x$7895$1c1CVa))
            (g$strip-annotations$7373$1c1CVa (cdr g$x$7895$1c1CVa)))
          (if (vector? g$x$7895$1c1CVa)
            (vector-map g$strip-annotations$7373$1c1CVa g$x$7895$1c1CVa)
            (if (annotation? g$x$7895$1c1CVa)
              (annotation-stripped g$x$7895$1c1CVa)
              g$x$7895$1c1CVa))))))
   (g$strip$7374$1c1CVa
     g$strip$11005$1c1CVa
     (case-lambda
       ((g$x$7896$1c1CVa g$m*$7897$1c1CVa)
        (if (g$top-marked?$7307$1c1CVa g$m*$7897$1c1CVa)
          (if ((case-lambda
                 ((g$t$7898$1c1CVa)
                  (if g$t$7898$1c1CVa
                    g$t$7898$1c1CVa
                    ((case-lambda
                       ((g$t$7899$1c1CVa)
                        (if g$t$7899$1c1CVa
                          g$t$7899$1c1CVa
                          (begin
                            '#f
                            (if (vector? g$x$7896$1c1CVa)
                              (if (> (vector-length g$x$7896$1c1CVa) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7896$1c1CVa '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7896$1c1CVa)
                       (begin '#f (annotation? (car g$x$7896$1c1CVa)))
                       '#f)))))
               (annotation? g$x$7896$1c1CVa))
            (g$strip-annotations$7373$1c1CVa g$x$7896$1c1CVa)
            g$x$7896$1c1CVa)
          ((letrec ((g$f$7900$1c1CVa
                      (case-lambda
                        ((g$x$7901$1c1CVa)
                         (if (g$stx?$7336$1c1CVa g$x$7901$1c1CVa)
                           (g$strip$7374$1c1CVa
                             (g$stx-expr$7338$1c1CVa g$x$7901$1c1CVa)
                             (g$stx-mark*$7339$1c1CVa g$x$7901$1c1CVa))
                           (if (annotation? g$x$7901$1c1CVa)
                             (annotation-stripped g$x$7901$1c1CVa)
                             (if (pair? g$x$7901$1c1CVa)
                               ((case-lambda
                                  ((g$a$7902$1c1CVa g$d$7903$1c1CVa)
                                   (if (if (eq? g$a$7902$1c1CVa
                                                (car g$x$7901$1c1CVa))
                                         (begin
                                           '#f
                                           (eq? g$d$7903$1c1CVa
                                                (cdr g$x$7901$1c1CVa)))
                                         '#f)
                                     g$x$7901$1c1CVa
                                     (cons g$a$7902$1c1CVa g$d$7903$1c1CVa))))
                                (g$f$7900$1c1CVa (car g$x$7901$1c1CVa))
                                (g$f$7900$1c1CVa (cdr g$x$7901$1c1CVa)))
                               (if (vector? g$x$7901$1c1CVa)
                                 ((case-lambda
                                    ((g$old$7904$1c1CVa)
                                     ((case-lambda
                                        ((g$new$7905$1c1CVa)
                                         (if (g$for-all$5494$1c1CVa
                                               eq?
                                               g$old$7904$1c1CVa
                                               g$new$7905$1c1CVa)
                                           g$x$7901$1c1CVa
                                           (list->vector g$new$7905$1c1CVa))))
                                      (map g$f$7900$1c1CVa g$old$7904$1c1CVa))))
                                  (vector->list g$x$7901$1c1CVa))
                                 g$x$7901$1c1CVa))))))))
             g$f$7900$1c1CVa)
           g$x$7896$1c1CVa)))))
   (g$stx->datum$7375$1c1CVa
     g$stx->datum$11006$1c1CVa
     (case-lambda
       ((g$x$7906$1c1CVa) (g$strip$7374$1c1CVa g$x$7906$1c1CVa '()))))
   (g$same-marks*?$7376$1c1CVa
     g$same-marks*?$11007$1c1CVa
     (case-lambda
       ((g$mark*$7907$1c1CVa g$mark**$7908$1c1CVa g$si$7909$1c1CVa)
        (if (null? g$si$7909$1c1CVa)
          '#f
          (if (g$same-marks?$7366$1c1CVa
                g$mark*$7907$1c1CVa
                (vector-ref g$mark**$7908$1c1CVa (car g$si$7909$1c1CVa)))
            (car g$si$7909$1c1CVa)
            (g$same-marks*?$7376$1c1CVa
              g$mark*$7907$1c1CVa
              g$mark**$7908$1c1CVa
              (cdr g$si$7909$1c1CVa)))))))
   (g$id->label$7377$1c1CVa
     g$id->label$11008$1c1CVa
     (case-lambda
       ((g$id$7910$1c1CVa)
        ((case-lambda
           ((g$t$7911$1c1CVa)
            (if g$t$7911$1c1CVa
              g$t$7911$1c1CVa
              (begin
                '#f
                ((case-lambda
                   ((g$t$7912$1c1CVa)
                    (if g$t$7912$1c1CVa
                      ((case-lambda
                         ((g$env$7913$1c1CVa)
                          ((case-lambda
                             ((g$rib$7914$1c1CVa)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7312$1c1CVa
                                     g$id$7910$1c1CVa
                                     g$rib$7914$1c1CVa)))
                                (case-lambda
                                  ((g$lab$7917$1c1CVa g$loc_$7918$1c1CVa)
                                   ((case-lambda
                                      ((g$loc_$7919$1c1CVa g$lab$7920$1c1CVa)
                                       (begin
                                         (g$extend-rib!$7328$1c1CVa
                                           g$rib$7914$1c1CVa
                                           g$id$7910$1c1CVa
                                           g$lab$7920$1c1CVa)
                                         g$lab$7920$1c1CVa)))
                                    g$loc_$7918$1c1CVa
                                    g$lab$7917$1c1CVa))))))
                           (g$interaction-env-rib$7720$1c1CVa
                             g$env$7913$1c1CVa))))
                       g$t$7912$1c1CVa)
                      '#f)))
                 (g$top-level-context$7758$1c1CVa))))))
         (g$id->real-label$7378$1c1CVa g$id$7910$1c1CVa)))))
   (g$id->real-label$7378$1c1CVa
     g$id->real-label$11009$1c1CVa
     (case-lambda
       ((g$id$7921$1c1CVa)
        ((case-lambda
           ((g$sym$7922$1c1CVa)
            ((letrec ((g$search$7923$1c1CVa
                        (case-lambda
                          ((g$subst*$7924$1c1CVa g$mark*$7925$1c1CVa)
                           (if (null? g$subst*$7924$1c1CVa)
                             '#f
                             (if (eq? (car g$subst*$7924$1c1CVa) 'shift)
                               (g$search$7923$1c1CVa
                                 (cdr g$subst*$7924$1c1CVa)
                                 (cdr g$mark*$7925$1c1CVa))
                               ((case-lambda
                                  ((g$rib$7926$1c1CVa)
                                   ((case-lambda
                                      ((g$t$7927$1c1CVa)
                                       (if g$t$7927$1c1CVa
                                         ((case-lambda
                                            ((g$ht$7928$1c1CVa)
                                             ((case-lambda
                                                ((g$si$7929$1c1CVa)
                                                 ((case-lambda
                                                    ((g$i$7930$1c1CVa)
                                                     (if g$i$7930$1c1CVa
                                                       (vector-ref
                                                         (g$rib-label*$7321$1c1CVa
                                                           g$rib$7926$1c1CVa)
                                                         g$i$7930$1c1CVa)
                                                       (g$search$7923$1c1CVa
                                                         (cdr g$subst*$7924$1c1CVa)
                                                         g$mark*$7925$1c1CVa))))
                                                  (if g$si$7929$1c1CVa
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7376$1c1CVa
                                                        g$mark*$7925$1c1CVa
                                                        (g$rib-mark**$7320$1c1CVa
                                                          g$rib$7926$1c1CVa)
                                                        (reverse
                                                          g$si$7929$1c1CVa)))
                                                    '#f))))
                                              (g$hashtable-ref$5290$1c1CVa
                                                g$ht$7928$1c1CVa
                                                g$sym$7922$1c1CVa
                                                '#f))))
                                          g$t$7927$1c1CVa)
                                         ((letrec ((g$f$7931$1c1CVa
                                                     (case-lambda
                                                       ((g$sym*$7932$1c1CVa
                                                          g$mark**$7933$1c1CVa
                                                          g$label*$7934$1c1CVa)
                                                        (if (null?
                                                              g$sym*$7932$1c1CVa)
                                                          (g$search$7923$1c1CVa
                                                            (cdr g$subst*$7924$1c1CVa)
                                                            g$mark*$7925$1c1CVa)
                                                          (if (if (eq? (car g$sym*$7932$1c1CVa)
                                                                       g$sym$7922$1c1CVa)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7366$1c1CVa
                                                                    (car g$mark**$7933$1c1CVa)
                                                                    g$mark*$7925$1c1CVa))
                                                                '#f)
                                                            (car g$label*$7934$1c1CVa)
                                                            (g$f$7931$1c1CVa
                                                              (cdr g$sym*$7932$1c1CVa)
                                                              (cdr g$mark**$7933$1c1CVa)
                                                              (cdr g$label*$7934$1c1CVa))))))))
                                            g$f$7931$1c1CVa)
                                          (g$rib-sym*$7319$1c1CVa
                                            g$rib$7926$1c1CVa)
                                          (g$rib-mark**$7320$1c1CVa
                                            g$rib$7926$1c1CVa)
                                          (g$rib-label*$7321$1c1CVa
                                            g$rib$7926$1c1CVa)))))
                                    (g$rib-sealed/freq$7322$1c1CVa
                                      g$rib$7926$1c1CVa))))
                                (car g$subst*$7924$1c1CVa))))))))
               g$search$7923$1c1CVa)
             (g$stx-subst*$7340$1c1CVa g$id$7921$1c1CVa)
             (g$stx-mark*$7339$1c1CVa g$id$7921$1c1CVa))))
         (g$id->sym$7365$1c1CVa g$id$7921$1c1CVa)))))
   (g$label->binding$7379$1c1CVa
     g$label->binding$11010$1c1CVa
     (case-lambda
       ((g$x$7935$1c1CVa g$r$7936$1c1CVa)
        ((case-lambda
           ((g$t$7937$1c1CVa)
            (if g$t$7937$1c1CVa
              ((case-lambda
                 ((g$b$7938$1c1CVa)
                  (if (if (pair? g$b$7938$1c1CVa)
                        (begin '#f (eq? (car g$b$7938$1c1CVa) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7605$1c1CVa (cdr g$b$7938$1c1CVa)))
                    (if (if (pair? g$b$7938$1c1CVa)
                          (begin '#f (eq? (car g$b$7938$1c1CVa) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7939$1c1CVa g$loc$7940$1c1CVa)
                          (cons '$rtd (symbol-value g$loc$7940$1c1CVa))))
                       (g$cadr$5013$1c1CVa g$b$7938$1c1CVa)
                       (g$cddr$5015$1c1CVa g$b$7938$1c1CVa))
                      g$b$7938$1c1CVa))))
               g$t$7937$1c1CVa)
              ((case-lambda
                 ((g$t$7941$1c1CVa)
                  (if g$t$7941$1c1CVa
                    (cdr g$t$7941$1c1CVa)
                    ((case-lambda
                       ((g$t$7942$1c1CVa)
                        (if g$t$7942$1c1CVa
                          ((case-lambda
                             ((g$env$7943$1c1CVa)
                              ((case-lambda
                                 ((g$t$7944$1c1CVa)
                                  (if g$t$7944$1c1CVa
                                    ((case-lambda
                                       ((g$p$7945$1c1CVa)
                                        (g$cons*$5496$1c1CVa
                                          'lexical
                                          (cdr g$p$7945$1c1CVa)
                                          '#f)))
                                     g$t$7944$1c1CVa)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$7935$1c1CVa
                                 (g$interaction-env-locs$7722$1c1CVa
                                   g$env$7943$1c1CVa)))))
                           g$t$7942$1c1CVa)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7758$1c1CVa)))))
               (assq g$x$7935$1c1CVa g$r$7936$1c1CVa)))))
         (g$imported-label->binding$7178$1c1CVa g$x$7935$1c1CVa)))))
   (g$make-binding$7380$1c1CVa g$make-binding$11011$1c1CVa cons)
   (g$binding-type$7381$1c1CVa g$binding-type$11012$1c1CVa car)
   (g$binding-value$7382$1c1CVa g$binding-value$11013$1c1CVa cdr)
   (g$raise-unbound-error$7383$1c1CVa
     g$raise-unbound-error$11014$1c1CVa
     (case-lambda
       ((g$id$7946$1c1CVa)
        (g$syntax-violation*$7750$1c1CVa
          '#f
          '"unbound identifier"
          g$id$7946$1c1CVa
          (g$make-undefined-violation$5830$1c1CVa)))))
   (g$syntax-type$7384$1c1CVa
     g$syntax-type$11015$1c1CVa
     (case-lambda
       ((g$e$7947$1c1CVa g$r$7948$1c1CVa)
        (if (g$id?$7364$1c1CVa g$e$7947$1c1CVa)
          ((case-lambda
             ((g$id$7949$1c1CVa)
              ((case-lambda
                 ((g$label$7950$1c1CVa)
                  ((case-lambda
                     ((g$b$7951$1c1CVa)
                      ((case-lambda
                         ((g$type$7952$1c1CVa)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$7950$1c1CVa)
                                  (g$raise-unbound-error$7383$1c1CVa
                                    g$id$7949$1c1CVa)
                                  (void))
                                ((case-lambda
                                   ((g$t$7953$1c1CVa)
                                    (if (memv
                                          g$t$7953$1c1CVa
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7952$1c1CVa
                                        (g$binding-value$7382$1c1CVa
                                          g$b$7951$1c1CVa)
                                        g$id$7949$1c1CVa)
                                      (values 'other '#f '#f))))
                                 g$type$7952$1c1CVa)))))))
                       (g$binding-type$7381$1c1CVa g$b$7951$1c1CVa))))
                   (g$label->binding$7379$1c1CVa
                     g$label$7950$1c1CVa
                     g$r$7948$1c1CVa))))
               (g$id->label$7377$1c1CVa g$id$7949$1c1CVa))))
           g$e$7947$1c1CVa)
          (if (g$syntax-pair?$7357$1c1CVa g$e$7947$1c1CVa)
            ((case-lambda
               ((g$id$7954$1c1CVa)
                (if (g$id?$7364$1c1CVa g$id$7954$1c1CVa)
                  ((case-lambda
                     ((g$label$7955$1c1CVa)
                      ((case-lambda
                         ((g$b$7956$1c1CVa)
                          ((case-lambda
                             ((g$type$7957$1c1CVa)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$7955$1c1CVa)
                                      (g$raise-unbound-error$7383$1c1CVa
                                        g$id$7954$1c1CVa)
                                      (void))
                                    ((case-lambda
                                       ((g$t$7958$1c1CVa)
                                        (if (memv
                                              g$t$7958$1c1CVa
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$7957$1c1CVa
                                            (g$binding-value$7382$1c1CVa
                                              g$b$7956$1c1CVa)
                                            g$id$7954$1c1CVa)
                                          (values 'call '#f '#f))))
                                     g$type$7957$1c1CVa)))))))
                           (g$binding-type$7381$1c1CVa g$b$7956$1c1CVa))))
                       (g$label->binding$7379$1c1CVa
                         g$label$7955$1c1CVa
                         g$r$7948$1c1CVa))))
                   (g$id->label$7377$1c1CVa g$id$7954$1c1CVa))
                  (values 'call '#f '#f))))
             (g$syntax-car$7361$1c1CVa g$e$7947$1c1CVa))
            ((case-lambda
               ((g$d$7959$1c1CVa)
                (if (g$self-evaluating?$7372$1c1CVa g$d$7959$1c1CVa)
                  (values 'constant g$d$7959$1c1CVa '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7375$1c1CVa g$e$7947$1c1CVa)))))))
   (g$sanitize-binding$7392$1c1CVa
     g$sanitize-binding$11016$1c1CVa
     (case-lambda
       ((g$x$7960$1c1CVa g$src$7961$1c1CVa)
        (if (procedure? g$x$7960$1c1CVa)
          (g$cons*$5496$1c1CVa 'local-macro g$x$7960$1c1CVa g$src$7961$1c1CVa)
          (if (if (pair? g$x$7960$1c1CVa)
                (if (eq? (car g$x$7960$1c1CVa) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7960$1c1CVa)))
                  '#f)
                '#f)
            (g$cons*$5496$1c1CVa
              'local-macro!
              (cdr g$x$7960$1c1CVa)
              g$src$7961$1c1CVa)
            (if (if (pair? g$x$7960$1c1CVa)
                  (begin '#f (eq? (car g$x$7960$1c1CVa) '$rtd))
                  '#f)
              g$x$7960$1c1CVa
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7960$1c1CVa)))))))
   (g$make-variable-transformer$7393$1c1CVa
     g$make-variable-transformer$11017$1c1CVa
     (case-lambda
       ((g$x$7962$1c1CVa)
        (if (procedure? g$x$7962$1c1CVa)
          (cons 'macro! g$x$7962$1c1CVa)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7962$1c1CVa)))))
   (g$variable-transformer?$7394$1c1CVa
     g$variable-transformer?$11018$1c1CVa
     (case-lambda
       ((g$x$7963$1c1CVa)
        (if (pair? g$x$7963$1c1CVa)
          (if (eq? (car g$x$7963$1c1CVa) 'macro!)
            (begin '#f (procedure? (cdr g$x$7963$1c1CVa)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7395$1c1CVa
     g$variable-transformer-procedure$11019$1c1CVa
     (case-lambda
       ((g$x$7964$1c1CVa)
        (if (g$variable-transformer?$7394$1c1CVa g$x$7964$1c1CVa)
          (cdr g$x$7964$1c1CVa)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7964$1c1CVa)))))
   (g$make-eval-transformer$7396$1c1CVa
     g$make-eval-transformer$11020$1c1CVa
     (case-lambda
       ((g$x$7965$1c1CVa)
        (g$sanitize-binding$7392$1c1CVa
          (eval-core (g$expanded->core$6878$1c1CVa g$x$7965$1c1CVa))
          g$x$7965$1c1CVa))))
   (g$parse-define$7582$1c1CVa
     g$parse-define$11021$1c1CVa
     (case-lambda
       ((g$x$7966$1c1CVa)
        ((case-lambda
           ((g$t$7967$1c1CVa)
            ((case-lambda
               ((g$ls/false$7968$1c1CVa)
                (if (if g$ls/false$7968$1c1CVa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7969$1c1CVa
                               g$fmls$7970$1c1CVa
                               g$b$7971$1c1CVa
                               g$b*$7972$1c1CVa)
                             (g$id?$7364$1c1CVa g$id$7969$1c1CVa)))
                          g$ls/false$7968$1c1CVa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7973$1c1CVa
                         g$fmls$7974$1c1CVa
                         g$b$7975$1c1CVa
                         g$b*$7976$1c1CVa)
                       (begin
                         (g$verify-formals$7662$1c1CVa
                           g$fmls$7974$1c1CVa
                           g$x$7966$1c1CVa)
                         (values
                           g$id$7973$1c1CVa
                           (cons
                             'defun
                             (cons
                               g$fmls$7974$1c1CVa
                               (cons g$b$7975$1c1CVa g$b*$7976$1c1CVa)))))))
                    g$ls/false$7968$1c1CVa)
                  ((case-lambda
                     ((g$t$7977$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$7978$1c1CVa)
                          (if (if g$ls/false$7978$1c1CVa
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7979$1c1CVa g$val$7980$1c1CVa)
                                       (g$id?$7364$1c1CVa g$id$7979$1c1CVa)))
                                    g$ls/false$7978$1c1CVa))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7981$1c1CVa g$val$7982$1c1CVa)
                                 (values
                                   g$id$7981$1c1CVa
                                   (cons 'expr g$val$7982$1c1CVa))))
                              g$ls/false$7978$1c1CVa)
                            ((case-lambda
                               ((g$t$7983$1c1CVa)
                                ((case-lambda
                                   ((g$ls/false$7984$1c1CVa)
                                    (if (if g$ls/false$7984$1c1CVa
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7985$1c1CVa)
                                                 (g$id?$7364$1c1CVa
                                                   g$id$7985$1c1CVa)))
                                              g$ls/false$7984$1c1CVa))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7986$1c1CVa)
                                           (values
                                             g$id$7986$1c1CVa
                                             (cons
                                               'expr
                                               (g$bless$7605$1c1CVa '(void))))))
                                        g$ls/false$7984$1c1CVa)
                                      (g$syntax-violation$7751$1c1CVa
                                        '#f
                                        '"invalid syntax"
                                        g$t$7983$1c1CVa))))
                                 (g$syntax-dispatch$7642$1c1CVa
                                   g$t$7983$1c1CVa
                                   '(_ any)))))
                             g$t$7977$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$7977$1c1CVa
                         '(_ any any)))))
                   g$t$7967$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$7967$1c1CVa
               '(_ (any . any) any . each-any)))))
         g$x$7966$1c1CVa))))
   (g$parse-define-syntax$7583$1c1CVa
     g$parse-define-syntax$11022$1c1CVa
     (case-lambda
       ((g$x$7987$1c1CVa)
        ((case-lambda
           ((g$t$7988$1c1CVa)
            ((case-lambda
               ((g$ls/false$7989$1c1CVa)
                (if (if g$ls/false$7989$1c1CVa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7990$1c1CVa g$val$7991$1c1CVa)
                             (g$id?$7364$1c1CVa g$id$7990$1c1CVa)))
                          g$ls/false$7989$1c1CVa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7992$1c1CVa g$val$7993$1c1CVa)
                       (values g$id$7992$1c1CVa g$val$7993$1c1CVa)))
                    g$ls/false$7989$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$7988$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$7988$1c1CVa '(_ any any)))))
         g$x$7987$1c1CVa))))
   (g$scheme-stx-hashtable$7584$1c1CVa
     g$scheme-stx-hashtable$11023$1c1CVa
     (g$make-eq-hashtable$5287$1c1CVa))
   (g$scheme-stx$7585$1c1CVa
     g$scheme-stx$11024$1c1CVa
     (case-lambda
       ((g$sym$7994$1c1CVa)
        ((case-lambda
           ((g$t$7995$1c1CVa)
            (if g$t$7995$1c1CVa
              g$t$7995$1c1CVa
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7996$1c1CVa)
                    ((case-lambda
                       ((g$stx$7997$1c1CVa)
                        ((case-lambda
                           ((g$stx$7998$1c1CVa)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5291$1c1CVa
                                    g$scheme-stx-hashtable$7584$1c1CVa
                                    g$sym$7994$1c1CVa
                                    g$stx$7998$1c1CVa)
                                  g$stx$7998$1c1CVa))))))
                         ((case-lambda
                            ((g$t$7999$1c1CVa)
                             (if g$t$7999$1c1CVa
                               ((case-lambda
                                  ((g$x$8000$1c1CVa)
                                   ((case-lambda
                                      ((g$name$8001$1c1CVa g$label$8002$1c1CVa)
                                       (g$add-subst$7354$1c1CVa
                                         (g$make-rib$7318$1c1CVa
                                           (list g$name$8001$1c1CVa)
                                           (list g$top-mark*$7306$1c1CVa)
                                           (list g$label$8002$1c1CVa)
                                           '#f)
                                         g$stx$7997$1c1CVa)))
                                    (car g$x$8000$1c1CVa)
                                    (cdr g$x$8000$1c1CVa))))
                                g$t$7999$1c1CVa)
                               g$stx$7997$1c1CVa)))
                          (assq g$sym$7994$1c1CVa g$subst$7996$1c1CVa)))))
                     (g$make-stx$7337$1c1CVa
                       g$sym$7994$1c1CVa
                       g$top-mark*$7306$1c1CVa
                       '()
                       '()))))
                 (g$library-subst$7136$1c1CVa
                   (g$find-library-by-name$7172$1c1CVa
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5290$1c1CVa
           g$scheme-stx-hashtable$7584$1c1CVa
           g$sym$7994$1c1CVa
           '#f)))))
   (g$lexical-var$7586$1c1CVa g$lexical-var$11025$1c1CVa car)
   (g$lexical-mutable?$7587$1c1CVa g$lexical-mutable?$11026$1c1CVa cdr)
   (g$set-lexical-mutable!$7588$1c1CVa
     g$set-lexical-mutable!$11027$1c1CVa
     set-cdr!)
   (g$add-lexical$7589$1c1CVa
     g$add-lexical$11028$1c1CVa
     (case-lambda
       ((g$lab$8003$1c1CVa g$lex$8004$1c1CVa g$r$8005$1c1CVa)
        (cons
          (g$cons*$5496$1c1CVa g$lab$8003$1c1CVa 'lexical g$lex$8004$1c1CVa '#f)
          g$r$8005$1c1CVa))))
   (g$add-lexicals$7590$1c1CVa
     g$add-lexicals$11029$1c1CVa
     (case-lambda
       ((g$lab*$8006$1c1CVa g$lex*$8007$1c1CVa g$r$8008$1c1CVa)
        (if (null? g$lab*$8006$1c1CVa)
          g$r$8008$1c1CVa
          (g$add-lexicals$7590$1c1CVa
            (cdr g$lab*$8006$1c1CVa)
            (cdr g$lex*$8007$1c1CVa)
            (g$add-lexical$7589$1c1CVa
              (car g$lab*$8006$1c1CVa)
              (car g$lex*$8007$1c1CVa)
              g$r$8008$1c1CVa))))))
   (g$letrec-helper$7591$1c1CVa
     g$letrec-helper$11030$1c1CVa
     (case-lambda
       ((g$e$8009$1c1CVa g$r$8010$1c1CVa g$mr$8011$1c1CVa g$build$8012$1c1CVa)
        ((case-lambda
           ((g$t$8013$1c1CVa)
            ((case-lambda
               ((g$ls/false$8014$1c1CVa)
                (if g$ls/false$8014$1c1CVa
                  (apply
                    (case-lambda
                      ((g$lhs*$8015$1c1CVa
                         g$rhs*$8016$1c1CVa
                         g$b$8017$1c1CVa
                         g$b*$8018$1c1CVa)
                       (if (not (g$valid-bound-ids?$7369$1c1CVa
                                  g$lhs*$8015$1c1CVa))
                         (g$invalid-fmls-error$7607$1c1CVa
                           g$e$8009$1c1CVa
                           g$lhs*$8015$1c1CVa)
                         ((case-lambda
                            ((g$lex*$8019$1c1CVa g$lab*$8020$1c1CVa)
                             ((case-lambda
                                ((g$rib$8021$1c1CVa g$r$8022$1c1CVa)
                                 ((case-lambda
                                    ((g$body$8023$1c1CVa g$rhs*$8024$1c1CVa)
                                     (g$build$8012$1c1CVa
                                       '#f
                                       g$lex*$8019$1c1CVa
                                       g$rhs*$8024$1c1CVa
                                       g$body$8023$1c1CVa)))
                                  (g$chi-internal$7671$1c1CVa
                                    (g$add-subst$7354$1c1CVa
                                      g$rib$8021$1c1CVa
                                      (cons g$b$8017$1c1CVa g$b*$8018$1c1CVa))
                                    g$r$8022$1c1CVa
                                    g$mr$8011$1c1CVa)
                                  (g$chi-expr*$7658$1c1CVa
                                    (map (case-lambda
                                           ((g$x$8025$1c1CVa)
                                            (g$add-subst$7354$1c1CVa
                                              g$rib$8021$1c1CVa
                                              g$x$8025$1c1CVa)))
                                         g$rhs*$8016$1c1CVa)
                                    g$r$8022$1c1CVa
                                    g$mr$8011$1c1CVa))))
                              (g$make-full-rib$7332$1c1CVa
                                g$lhs*$8015$1c1CVa
                                g$lab*$8020$1c1CVa)
                              (g$add-lexicals$7590$1c1CVa
                                g$lab*$8020$1c1CVa
                                g$lex*$8019$1c1CVa
                                g$r$8010$1c1CVa))))
                          (map g$gen-lexical$7308$1c1CVa g$lhs*$8015$1c1CVa)
                          (map g$gen-label$7310$1c1CVa g$lhs*$8015$1c1CVa)))))
                    g$ls/false$8014$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8013$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8013$1c1CVa
               '(_ #(each (any any)) any . each-any)))))
         g$e$8009$1c1CVa))))
   (g$letrec-transformer$7592$1c1CVa
     g$letrec-transformer$11031$1c1CVa
     (case-lambda
       ((g$e$8026$1c1CVa g$r$8027$1c1CVa g$mr$8028$1c1CVa)
        (g$letrec-helper$7591$1c1CVa
          g$e$8026$1c1CVa
          g$r$8027$1c1CVa
          g$mr$8028$1c1CVa
          g$build-letrec$7300$1c1CVa))))
   (g$letrec*-transformer$7593$1c1CVa
     g$letrec*-transformer$11032$1c1CVa
     (case-lambda
       ((g$e$8029$1c1CVa g$r$8030$1c1CVa g$mr$8031$1c1CVa)
        (g$letrec-helper$7591$1c1CVa
          g$e$8029$1c1CVa
          g$r$8030$1c1CVa
          g$mr$8031$1c1CVa
          g$build-letrec*$7301$1c1CVa))))
   (g$fluid-let-syntax-transformer$7594$1c1CVa
     g$fluid-let-syntax-transformer$11033$1c1CVa
     (case-lambda
       ((g$e$8032$1c1CVa g$r$8033$1c1CVa g$mr$8034$1c1CVa)
        (letrec* ((g$lookup$8035$1c1CVa
                    (case-lambda
                      ((g$x$8045$1c1CVa)
                       ((case-lambda
                          ((g$t$8046$1c1CVa)
                           (if g$t$8046$1c1CVa
                             g$t$8046$1c1CVa
                             (begin
                               '#f
                               (g$syntax-violation$7751$1c1CVa
                                 '#f
                                 '"unbound identifier"
                                 g$e$8032$1c1CVa
                                 g$x$8045$1c1CVa)))))
                        (g$id->label$7377$1c1CVa g$x$8045$1c1CVa))))))
          ((case-lambda
             ((g$t$8036$1c1CVa)
              ((case-lambda
                 ((g$ls/false$8037$1c1CVa)
                  (if g$ls/false$8037$1c1CVa
                    (apply
                      (case-lambda
                        ((g$lhs*$8038$1c1CVa
                           g$rhs*$8039$1c1CVa
                           g$b$8040$1c1CVa
                           g$b*$8041$1c1CVa)
                         (if (not (g$valid-bound-ids?$7369$1c1CVa
                                    g$lhs*$8038$1c1CVa))
                           (g$invalid-fmls-error$7607$1c1CVa
                             g$e$8032$1c1CVa
                             g$lhs*$8038$1c1CVa)
                           ((case-lambda
                              ((g$lab*$8042$1c1CVa g$rhs*$8043$1c1CVa)
                               (g$chi-internal$7671$1c1CVa
                                 (cons g$b$8040$1c1CVa g$b*$8041$1c1CVa)
                                 (append
                                   (map cons
                                        g$lab*$8042$1c1CVa
                                        g$rhs*$8043$1c1CVa)
                                   g$r$8033$1c1CVa)
                                 (append
                                   (map cons
                                        g$lab*$8042$1c1CVa
                                        g$rhs*$8043$1c1CVa)
                                   g$mr$8034$1c1CVa))))
                            (map g$lookup$8035$1c1CVa g$lhs*$8038$1c1CVa)
                            (map (case-lambda
                                   ((g$x$8044$1c1CVa)
                                    (g$make-eval-transformer$7396$1c1CVa
                                      (g$expand-transformer$7687$1c1CVa
                                        g$x$8044$1c1CVa
                                        g$mr$8034$1c1CVa))))
                                 g$rhs*$8039$1c1CVa)))))
                      g$ls/false$8037$1c1CVa)
                    (g$syntax-violation$7751$1c1CVa
                      '#f
                      '"invalid syntax"
                      g$t$8036$1c1CVa))))
               (g$syntax-dispatch$7642$1c1CVa
                 g$t$8036$1c1CVa
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8032$1c1CVa)))))
   (g$type-descriptor-transformer$7595$1c1CVa
     g$type-descriptor-transformer$11034$1c1CVa
     (case-lambda
       ((g$e$8047$1c1CVa g$r$8048$1c1CVa g$mr$8049$1c1CVa)
        ((case-lambda
           ((g$t$8050$1c1CVa)
            ((case-lambda
               ((g$ls/false$8051$1c1CVa)
                (if (if g$ls/false$8051$1c1CVa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8052$1c1CVa)
                             (g$id?$7364$1c1CVa g$id$8052$1c1CVa)))
                          g$ls/false$8051$1c1CVa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8053$1c1CVa)
                       ((case-lambda
                          ((g$lab$8054$1c1CVa)
                           ((case-lambda
                              ((g$b$8055$1c1CVa)
                               ((case-lambda
                                  ((g$type$8056$1c1CVa)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8054$1c1CVa)
                                           (g$raise-unbound-error$7383$1c1CVa
                                             g$id$8053$1c1CVa)
                                           (void))
                                         (if (not (if (eq? g$type$8056$1c1CVa
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$7382$1c1CVa
                                                               g$b$8055$1c1CVa))))
                                                    '#f))
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"not a record type"
                                             g$e$8047$1c1CVa)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$7382$1c1CVa
                                             g$b$8055$1c1CVa))))))))
                                (g$binding-type$7381$1c1CVa g$b$8055$1c1CVa))))
                            (g$label->binding$7379$1c1CVa
                              g$lab$8054$1c1CVa
                              g$r$8048$1c1CVa))))
                        (g$id->label$7377$1c1CVa g$id$8053$1c1CVa))))
                    g$ls/false$8051$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8050$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8050$1c1CVa '(_ any)))))
         g$e$8047$1c1CVa))))
   (g$record-type-descriptor-transformer$7596$1c1CVa
     g$record-type-descriptor-transformer$11035$1c1CVa
     (case-lambda
       ((g$e$8057$1c1CVa g$r$8058$1c1CVa g$mr$8059$1c1CVa)
        ((case-lambda
           ((g$t$8060$1c1CVa)
            ((case-lambda
               ((g$ls/false$8061$1c1CVa)
                (if (if g$ls/false$8061$1c1CVa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8062$1c1CVa)
                             (g$id?$7364$1c1CVa g$id$8062$1c1CVa)))
                          g$ls/false$8061$1c1CVa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8063$1c1CVa)
                       ((case-lambda
                          ((g$lab$8064$1c1CVa)
                           ((case-lambda
                              ((g$b$8065$1c1CVa)
                               ((case-lambda
                                  ((g$type$8066$1c1CVa)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8064$1c1CVa)
                                           (g$raise-unbound-error$7383$1c1CVa
                                             g$id$8063$1c1CVa)
                                           (void))
                                         (if (not (if (eq? g$type$8066$1c1CVa
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7382$1c1CVa
                                                          g$b$8065$1c1CVa)))
                                                    '#f))
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"not a record type"
                                             g$e$8057$1c1CVa)
                                           (void))
                                         (g$chi-expr$7660$1c1CVa
                                           (car (g$binding-value$7382$1c1CVa
                                                  g$b$8065$1c1CVa))
                                           g$r$8058$1c1CVa
                                           g$mr$8059$1c1CVa)))))))
                                (g$binding-type$7381$1c1CVa g$b$8065$1c1CVa))))
                            (g$label->binding$7379$1c1CVa
                              g$lab$8064$1c1CVa
                              g$r$8058$1c1CVa))))
                        (g$id->label$7377$1c1CVa g$id$8063$1c1CVa))))
                    g$ls/false$8061$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8060$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8060$1c1CVa '(_ any)))))
         g$e$8057$1c1CVa))))
   (g$record-constructor-descriptor-transformer$7597$1c1CVa
     g$record-constructor-descriptor-transformer$11036$1c1CVa
     (case-lambda
       ((g$e$8067$1c1CVa g$r$8068$1c1CVa g$mr$8069$1c1CVa)
        ((case-lambda
           ((g$t$8070$1c1CVa)
            ((case-lambda
               ((g$ls/false$8071$1c1CVa)
                (if (if g$ls/false$8071$1c1CVa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8072$1c1CVa)
                             (g$id?$7364$1c1CVa g$id$8072$1c1CVa)))
                          g$ls/false$8071$1c1CVa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8073$1c1CVa)
                       ((case-lambda
                          ((g$lab$8074$1c1CVa)
                           ((case-lambda
                              ((g$b$8075$1c1CVa)
                               ((case-lambda
                                  ((g$type$8076$1c1CVa)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8074$1c1CVa)
                                           (g$raise-unbound-error$7383$1c1CVa
                                             g$id$8073$1c1CVa)
                                           (void))
                                         (if (not (if (eq? g$type$8076$1c1CVa
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7382$1c1CVa
                                                          g$b$8075$1c1CVa)))
                                                    '#f))
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"invalid type"
                                             g$e$8067$1c1CVa)
                                           (void))
                                         (g$chi-expr$7660$1c1CVa
                                           (g$cadr$5013$1c1CVa
                                             (g$binding-value$7382$1c1CVa
                                               g$b$8075$1c1CVa))
                                           g$r$8068$1c1CVa
                                           g$mr$8069$1c1CVa)))))))
                                (g$binding-type$7381$1c1CVa g$b$8075$1c1CVa))))
                            (g$label->binding$7379$1c1CVa
                              g$lab$8074$1c1CVa
                              g$r$8068$1c1CVa))))
                        (g$id->label$7377$1c1CVa g$id$8073$1c1CVa))))
                    g$ls/false$8071$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8070$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8070$1c1CVa '(_ any)))))
         g$e$8067$1c1CVa))))
   (g$when-macro$7598$1c1CVa
     g$when-macro$11037$1c1CVa
     (case-lambda
       ((g$e$8077$1c1CVa)
        ((case-lambda
           ((g$t$8078$1c1CVa)
            ((case-lambda
               ((g$ls/false$8079$1c1CVa)
                (if g$ls/false$8079$1c1CVa
                  (apply
                    (case-lambda
                      ((g$test$8080$1c1CVa g$e$8081$1c1CVa g$e*$8082$1c1CVa)
                       (g$bless$7605$1c1CVa
                         (list
                           'if
                           g$test$8080$1c1CVa
                           (cons
                             'begin
                             (cons g$e$8081$1c1CVa g$e*$8082$1c1CVa))))))
                    g$ls/false$8079$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8078$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8078$1c1CVa
               '(_ any any . each-any)))))
         g$e$8077$1c1CVa))))
   (g$unless-macro$7599$1c1CVa
     g$unless-macro$11038$1c1CVa
     (case-lambda
       ((g$e$8083$1c1CVa)
        ((case-lambda
           ((g$t$8084$1c1CVa)
            ((case-lambda
               ((g$ls/false$8085$1c1CVa)
                (if g$ls/false$8085$1c1CVa
                  (apply
                    (case-lambda
                      ((g$test$8086$1c1CVa g$e$8087$1c1CVa g$e*$8088$1c1CVa)
                       (g$bless$7605$1c1CVa
                         (list
                           'if
                           (list 'not g$test$8086$1c1CVa)
                           (cons
                             'begin
                             (cons g$e$8087$1c1CVa g$e*$8088$1c1CVa))))))
                    g$ls/false$8085$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8084$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8084$1c1CVa
               '(_ any any . each-any)))))
         g$e$8083$1c1CVa))))
   (g$if-transformer$7600$1c1CVa
     g$if-transformer$11039$1c1CVa
     (case-lambda
       ((g$e$8089$1c1CVa g$r$8090$1c1CVa g$mr$8091$1c1CVa)
        ((case-lambda
           ((g$t$8092$1c1CVa)
            ((case-lambda
               ((g$ls/false$8093$1c1CVa)
                (if g$ls/false$8093$1c1CVa
                  (apply
                    (case-lambda
                      ((g$e0$8094$1c1CVa g$e1$8095$1c1CVa g$e2$8096$1c1CVa)
                       (list
                         'if
                         (g$chi-expr$7660$1c1CVa
                           g$e0$8094$1c1CVa
                           g$r$8090$1c1CVa
                           g$mr$8091$1c1CVa)
                         (g$chi-expr$7660$1c1CVa
                           g$e1$8095$1c1CVa
                           g$r$8090$1c1CVa
                           g$mr$8091$1c1CVa)
                         (g$chi-expr$7660$1c1CVa
                           g$e2$8096$1c1CVa
                           g$r$8090$1c1CVa
                           g$mr$8091$1c1CVa))))
                    g$ls/false$8093$1c1CVa)
                  ((case-lambda
                     ((g$t$8097$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$8098$1c1CVa)
                          (if g$ls/false$8098$1c1CVa
                            (apply
                              (case-lambda
                                ((g$e0$8099$1c1CVa g$e1$8100$1c1CVa)
                                 (list
                                   'if
                                   (g$chi-expr$7660$1c1CVa
                                     g$e0$8099$1c1CVa
                                     g$r$8090$1c1CVa
                                     g$mr$8091$1c1CVa)
                                   (g$chi-expr$7660$1c1CVa
                                     g$e1$8100$1c1CVa
                                     g$r$8090$1c1CVa
                                     g$mr$8091$1c1CVa)
                                   (g$build-void$7299$1c1CVa))))
                              g$ls/false$8098$1c1CVa)
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"invalid syntax"
                              g$t$8097$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$8097$1c1CVa
                         '(_ any any)))))
                   g$t$8092$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8092$1c1CVa '(_ any any any)))))
         g$e$8089$1c1CVa))))
   (g$case-macro$7601$1c1CVa
     g$case-macro$11040$1c1CVa
     (case-lambda
       ((g$e$8101$1c1CVa)
        (letrec* ((g$build-last$8102$1c1CVa
                    (case-lambda
                      ((g$cls$8122$1c1CVa)
                       ((case-lambda
                          ((g$t$8123$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$8124$1c1CVa)
                               (if g$ls/false$8124$1c1CVa
                                 (apply
                                   (case-lambda
                                     ((g$e$8125$1c1CVa g$e*$8126$1c1CVa)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$8125$1c1CVa
                                          g$e*$8126$1c1CVa))))
                                   g$ls/false$8124$1c1CVa)
                                 ((case-lambda
                                    ((g$t$8127$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$8128$1c1CVa)
                                         (if g$ls/false$8128$1c1CVa
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8103$1c1CVa
                                                  g$cls$8122$1c1CVa
                                                  '(if #f #f))))
                                             g$ls/false$8128$1c1CVa)
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"invalid syntax"
                                             g$t$8127$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$8127$1c1CVa
                                        '_))))
                                  g$t$8123$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$8123$1c1CVa
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8122$1c1CVa))))
                  (g$build-one$8103$1c1CVa
                    (case-lambda
                      ((g$cls$8115$1c1CVa g$k$8116$1c1CVa)
                       ((case-lambda
                          ((g$t$8117$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$8118$1c1CVa)
                               (if g$ls/false$8118$1c1CVa
                                 (apply
                                   (case-lambda
                                     ((g$d*$8119$1c1CVa
                                        g$e$8120$1c1CVa
                                        g$e*$8121$1c1CVa)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8119$1c1CVa))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$8120$1c1CVa
                                            g$e*$8121$1c1CVa))
                                        g$k$8116$1c1CVa)))
                                   g$ls/false$8118$1c1CVa)
                                 (g$syntax-violation$7751$1c1CVa
                                   '#f
                                   '"invalid syntax"
                                   g$t$8117$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$8117$1c1CVa
                              '(each-any any . each-any)))))
                        g$cls$8115$1c1CVa)))))
          ((case-lambda
             ((g$t$8104$1c1CVa)
              ((case-lambda
                 ((g$ls/false$8105$1c1CVa)
                  (if g$ls/false$8105$1c1CVa
                    (apply
                      (case-lambda
                        ((g$expr$8106$1c1CVa)
                         (g$bless$7605$1c1CVa
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8106$1c1CVa))
                               '((if #f #f)))))))
                      g$ls/false$8105$1c1CVa)
                    ((case-lambda
                       ((g$t$8107$1c1CVa)
                        ((case-lambda
                           ((g$ls/false$8108$1c1CVa)
                            (if g$ls/false$8108$1c1CVa
                              (apply
                                (case-lambda
                                  ((g$expr$8109$1c1CVa
                                     g$cls$8110$1c1CVa
                                     g$cls*$8111$1c1CVa)
                                   (g$bless$7605$1c1CVa
                                     (list
                                       'let
                                       (list (list 't g$expr$8109$1c1CVa))
                                       ((letrec ((g$f$8112$1c1CVa
                                                   (case-lambda
                                                     ((g$cls$8113$1c1CVa
                                                        g$cls*$8114$1c1CVa)
                                                      (if (null?
                                                            g$cls*$8114$1c1CVa)
                                                        (g$build-last$8102$1c1CVa
                                                          g$cls$8113$1c1CVa)
                                                        (g$build-one$8103$1c1CVa
                                                          g$cls$8113$1c1CVa
                                                          (g$f$8112$1c1CVa
                                                            (car g$cls*$8114$1c1CVa)
                                                            (cdr g$cls*$8114$1c1CVa))))))))
                                          g$f$8112$1c1CVa)
                                        g$cls$8110$1c1CVa
                                        g$cls*$8111$1c1CVa)))))
                                g$ls/false$8108$1c1CVa)
                              (g$syntax-violation$7751$1c1CVa
                                '#f
                                '"invalid syntax"
                                g$t$8107$1c1CVa))))
                         (g$syntax-dispatch$7642$1c1CVa
                           g$t$8107$1c1CVa
                           '(_ any any . each-any)))))
                     g$t$8104$1c1CVa))))
               (g$syntax-dispatch$7642$1c1CVa g$t$8104$1c1CVa '(_ any)))))
           g$e$8101$1c1CVa)))))
   (g$quote-transformer$7602$1c1CVa
     g$quote-transformer$11041$1c1CVa
     (case-lambda
       ((g$e$8129$1c1CVa g$r$8130$1c1CVa g$mr$8131$1c1CVa)
        ((case-lambda
           ((g$t$8132$1c1CVa)
            ((case-lambda
               ((g$ls/false$8133$1c1CVa)
                (if g$ls/false$8133$1c1CVa
                  (apply
                    (case-lambda
                      ((g$datum$8134$1c1CVa)
                       (list
                         'quote
                         (g$stx->datum$7375$1c1CVa g$datum$8134$1c1CVa))))
                    g$ls/false$8133$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8132$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8132$1c1CVa '(_ any)))))
         g$e$8129$1c1CVa))))
   (g$case-lambda-transformer$7603$1c1CVa
     g$case-lambda-transformer$11042$1c1CVa
     (case-lambda
       ((g$e$8135$1c1CVa g$r$8136$1c1CVa g$mr$8137$1c1CVa)
        ((case-lambda
           ((g$t$8138$1c1CVa)
            ((case-lambda
               ((g$ls/false$8139$1c1CVa)
                (if g$ls/false$8139$1c1CVa
                  (apply
                    (case-lambda
                      ((g$fmls*$8140$1c1CVa g$b*$8141$1c1CVa g$b**$8142$1c1CVa)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7664$1c1CVa
                              g$e$8135$1c1CVa
                              g$fmls*$8140$1c1CVa
                              (map cons g$b*$8141$1c1CVa g$b**$8142$1c1CVa)
                              g$r$8136$1c1CVa
                              g$mr$8137$1c1CVa)))
                         (case-lambda
                           ((g$fmls*$8145$1c1CVa g$body*$8146$1c1CVa)
                            ((case-lambda
                               ((g$body*$8147$1c1CVa g$fmls*$8148$1c1CVa)
                                (g$build-case-lambda$7296$1c1CVa
                                  '#f
                                  g$fmls*$8148$1c1CVa
                                  g$body*$8147$1c1CVa)))
                             g$body*$8146$1c1CVa
                             g$fmls*$8145$1c1CVa))))))
                    g$ls/false$8139$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8138$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8138$1c1CVa
               '(_ . #(each (any any . each-any)))))))
         g$e$8135$1c1CVa))))
   (g$lambda-transformer$7604$1c1CVa
     g$lambda-transformer$11043$1c1CVa
     (case-lambda
       ((g$e$8149$1c1CVa g$r$8150$1c1CVa g$mr$8151$1c1CVa)
        ((case-lambda
           ((g$t$8152$1c1CVa)
            ((case-lambda
               ((g$ls/false$8153$1c1CVa)
                (if g$ls/false$8153$1c1CVa
                  (apply
                    (case-lambda
                      ((g$fmls$8154$1c1CVa g$b$8155$1c1CVa g$b*$8156$1c1CVa)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7663$1c1CVa
                              g$e$8149$1c1CVa
                              g$fmls$8154$1c1CVa
                              (cons g$b$8155$1c1CVa g$b*$8156$1c1CVa)
                              g$r$8150$1c1CVa
                              g$mr$8151$1c1CVa)))
                         (case-lambda
                           ((g$fmls$8159$1c1CVa g$body$8160$1c1CVa)
                            ((case-lambda
                               ((g$body$8161$1c1CVa g$fmls$8162$1c1CVa)
                                (g$build-lambda$7295$1c1CVa
                                  '#f
                                  g$fmls$8162$1c1CVa
                                  g$body$8161$1c1CVa)))
                             g$body$8160$1c1CVa
                             g$fmls$8159$1c1CVa))))))
                    g$ls/false$8153$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8152$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8152$1c1CVa
               '(_ any any . each-any)))))
         g$e$8149$1c1CVa))))
   (g$bless$7605$1c1CVa
     g$bless$11044$1c1CVa
     (case-lambda
       ((g$x$8163$1c1CVa)
        (g$mkstx$7352$1c1CVa
          ((letrec ((g$f$8164$1c1CVa
                      (case-lambda
                        ((g$x$8165$1c1CVa)
                         (if (g$stx?$7336$1c1CVa g$x$8165$1c1CVa)
                           g$x$8165$1c1CVa
                           (if (pair? g$x$8165$1c1CVa)
                             (cons
                               (g$f$8164$1c1CVa (car g$x$8165$1c1CVa))
                               (g$f$8164$1c1CVa (cdr g$x$8165$1c1CVa)))
                             (if (symbol? g$x$8165$1c1CVa)
                               (g$scheme-stx$7585$1c1CVa g$x$8165$1c1CVa)
                               (if (vector? g$x$8165$1c1CVa)
                                 (vector-map g$f$8164$1c1CVa g$x$8165$1c1CVa)
                                 g$x$8165$1c1CVa))))))))
             g$f$8164$1c1CVa)
           g$x$8163$1c1CVa)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7606$1c1CVa
     g$with-syntax-macro$11045$1c1CVa
     (case-lambda
       ((g$e$8166$1c1CVa)
        ((case-lambda
           ((g$t$8167$1c1CVa)
            ((case-lambda
               ((g$ls/false$8168$1c1CVa)
                (if g$ls/false$8168$1c1CVa
                  (apply
                    (case-lambda
                      ((g$pat*$8169$1c1CVa
                         g$expr*$8170$1c1CVa
                         g$b$8171$1c1CVa
                         g$b*$8172$1c1CVa)
                       ((case-lambda
                          ((g$idn*$8173$1c1CVa)
                           (begin
                             (g$verify-formals$7662$1c1CVa
                               (map car g$idn*$8173$1c1CVa)
                               g$e$8166$1c1CVa)
                             ((case-lambda
                                ((g$t*$8174$1c1CVa)
                                 (g$bless$7605$1c1CVa
                                   (list
                                     'let
                                     (map list
                                          g$t*$8174$1c1CVa
                                          g$expr*$8170$1c1CVa)
                                     ((letrec ((g$f$8175$1c1CVa
                                                 (case-lambda
                                                   ((g$pat*$8176$1c1CVa
                                                      g$t*$8177$1c1CVa)
                                                    (if (null?
                                                          g$pat*$8176$1c1CVa)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8171$1c1CVa
                                                            g$b*$8172$1c1CVa)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8177$1c1CVa)
                                                        '()
                                                        (list
                                                          (car g$pat*$8176$1c1CVa)
                                                          (g$f$8175$1c1CVa
                                                            (cdr g$pat*$8176$1c1CVa)
                                                            (cdr g$t*$8177$1c1CVa)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8176$1c1CVa))
                                                            (car g$t*$8177$1c1CVa)))))))))
                                        g$f$8175$1c1CVa)
                                      g$pat*$8169$1c1CVa
                                      g$t*$8174$1c1CVa)))))
                              (g$generate-temporaries$7741$1c1CVa
                                g$expr*$8170$1c1CVa)))))
                        ((letrec ((g$f$8178$1c1CVa
                                    (case-lambda
                                      ((g$pat*$8179$1c1CVa)
                                       (if (null? g$pat*$8179$1c1CVa)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7641$1c1CVa
                                                (car g$pat*$8179$1c1CVa)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8182$1c1CVa
                                                g$idn*$8183$1c1CVa)
                                              ((case-lambda
                                                 ((g$idn*$8184$1c1CVa
                                                    g$pat$8185$1c1CVa)
                                                  (append
                                                    g$idn*$8184$1c1CVa
                                                    (g$f$8178$1c1CVa
                                                      (cdr g$pat*$8179$1c1CVa)))))
                                               g$idn*$8183$1c1CVa
                                               g$pat$8182$1c1CVa)))))))))
                           g$f$8178$1c1CVa)
                         g$pat*$8169$1c1CVa))))
                    g$ls/false$8168$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8167$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8167$1c1CVa
               '(_ #(each (any any)) any . each-any)))))
         g$e$8166$1c1CVa))))
   (g$invalid-fmls-error$7607$1c1CVa
     g$invalid-fmls-error$11046$1c1CVa
     (case-lambda
       ((g$stx$8186$1c1CVa g$fmls$8187$1c1CVa)
        ((case-lambda
           ((g$t$8188$1c1CVa)
            ((case-lambda
               ((g$ls/false$8189$1c1CVa)
                (if g$ls/false$8189$1c1CVa
                  (apply
                    (case-lambda
                      ((g$id*$8190$1c1CVa g$last$8191$1c1CVa)
                       ((letrec ((g$f$8192$1c1CVa
                                   (case-lambda
                                     ((g$id*$8193$1c1CVa)
                                      (if (null? g$id*$8193$1c1CVa)
                                        (values)
                                        (if (not (g$id?$7364$1c1CVa
                                                   (car g$id*$8193$1c1CVa)))
                                          (g$syntax-violation$7751$1c1CVa
                                            '#f
                                            '"not an identifier"
                                            g$stx$8186$1c1CVa
                                            (car g$id*$8193$1c1CVa))
                                          (begin
                                            (g$f$8192$1c1CVa
                                              (cdr g$id*$8193$1c1CVa))
                                            (if (g$bound-id-member?$7371$1c1CVa
                                                  (car g$id*$8193$1c1CVa)
                                                  (cdr g$id*$8193$1c1CVa))
                                              (g$syntax-violation$7751$1c1CVa
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8186$1c1CVa
                                                (car g$id*$8193$1c1CVa))
                                              (void)))))))))
                          g$f$8192$1c1CVa)
                        (if (g$id?$7364$1c1CVa g$last$8191$1c1CVa)
                          (cons g$last$8191$1c1CVa g$id*$8190$1c1CVa)
                          (if (g$syntax-null?$7359$1c1CVa g$last$8191$1c1CVa)
                            g$id*$8190$1c1CVa
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"not an identifier"
                              g$stx$8186$1c1CVa
                              g$last$8191$1c1CVa))))))
                    g$ls/false$8189$1c1CVa)
                  ((case-lambda
                     ((g$t$8194$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$8195$1c1CVa)
                          (if g$ls/false$8195$1c1CVa
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7751$1c1CVa
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8186$1c1CVa
                                   g$fmls$8187$1c1CVa)))
                              g$ls/false$8195$1c1CVa)
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"invalid syntax"
                              g$t$8194$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa g$t$8194$1c1CVa '_))))
                   g$t$8188$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8188$1c1CVa
               '#(each+ any () any)))))
         g$fmls$8187$1c1CVa))))
   (g$let-macro$7608$1c1CVa
     g$let-macro$11047$1c1CVa
     (case-lambda
       ((g$stx$8196$1c1CVa)
        ((case-lambda
           ((g$t$8197$1c1CVa)
            ((case-lambda
               ((g$ls/false$8198$1c1CVa)
                (if g$ls/false$8198$1c1CVa
                  (apply
                    (case-lambda
                      ((g$lhs*$8199$1c1CVa
                         g$rhs*$8200$1c1CVa
                         g$b$8201$1c1CVa
                         g$b*$8202$1c1CVa)
                       (if (g$valid-bound-ids?$7369$1c1CVa g$lhs*$8199$1c1CVa)
                         (g$bless$7605$1c1CVa
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8199$1c1CVa
                                 (cons g$b$8201$1c1CVa g$b*$8202$1c1CVa)))
                             g$rhs*$8200$1c1CVa))
                         (g$invalid-fmls-error$7607$1c1CVa
                           g$stx$8196$1c1CVa
                           g$lhs*$8199$1c1CVa))))
                    g$ls/false$8198$1c1CVa)
                  ((case-lambda
                     ((g$t$8203$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$8204$1c1CVa)
                          (if (if g$ls/false$8204$1c1CVa
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8205$1c1CVa
                                         g$lhs*$8206$1c1CVa
                                         g$rhs*$8207$1c1CVa
                                         g$b$8208$1c1CVa
                                         g$b*$8209$1c1CVa)
                                       (g$id?$7364$1c1CVa g$f$8205$1c1CVa)))
                                    g$ls/false$8204$1c1CVa))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8210$1c1CVa
                                   g$lhs*$8211$1c1CVa
                                   g$rhs*$8212$1c1CVa
                                   g$b$8213$1c1CVa
                                   g$b*$8214$1c1CVa)
                                 (if (g$valid-bound-ids?$7369$1c1CVa
                                       g$lhs*$8211$1c1CVa)
                                   (g$bless$7605$1c1CVa
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8210$1c1CVa
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8211$1c1CVa
                                                 (cons
                                                   g$b$8213$1c1CVa
                                                   g$b*$8214$1c1CVa)))))
                                         g$f$8210$1c1CVa)
                                       g$rhs*$8212$1c1CVa))
                                   (g$invalid-fmls-error$7607$1c1CVa
                                     g$stx$8196$1c1CVa
                                     g$lhs*$8211$1c1CVa))))
                              g$ls/false$8204$1c1CVa)
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"invalid syntax"
                              g$t$8203$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$8203$1c1CVa
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8197$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8197$1c1CVa
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8196$1c1CVa))))
   (g$let-values-macro$7609$1c1CVa
     g$let-values-macro$11048$1c1CVa
     (case-lambda
       ((g$stx$8215$1c1CVa)
        (letrec* ((g$rename$8216$1c1CVa
                    (case-lambda
                      ((g$x$8267$1c1CVa g$old*$8268$1c1CVa g$new*$8269$1c1CVa)
                       (begin
                         (if (not (g$id?$7364$1c1CVa g$x$8267$1c1CVa))
                           (g$syntax-violation$7751$1c1CVa
                             '#f
                             '"not an indentifier"
                             g$stx$8215$1c1CVa
                             g$x$8267$1c1CVa)
                           (void))
                         (if (g$bound-id-member?$7371$1c1CVa
                               g$x$8267$1c1CVa
                               g$old*$8268$1c1CVa)
                           (g$syntax-violation$7751$1c1CVa
                             '#f
                             '"duplicate binding"
                             g$stx$8215$1c1CVa
                             g$x$8267$1c1CVa)
                           (void))
                         ((case-lambda
                            ((g$y$8270$1c1CVa)
                             (values
                               g$y$8270$1c1CVa
                               (cons g$x$8267$1c1CVa g$old*$8268$1c1CVa)
                               (cons g$y$8270$1c1CVa g$new*$8269$1c1CVa))))
                          (gensym
                            (g$syntax->datum$7754$1c1CVa g$x$8267$1c1CVa)))))))
                  (g$rename*$8217$1c1CVa
                    (case-lambda
                      ((g$x*$8258$1c1CVa g$old*$8259$1c1CVa g$new*$8260$1c1CVa)
                       (if (null? g$x*$8258$1c1CVa)
                         (values '() g$old*$8259$1c1CVa g$new*$8260$1c1CVa)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8216$1c1CVa
                                (car g$x*$8258$1c1CVa)
                                g$old*$8259$1c1CVa
                                g$new*$8260$1c1CVa)))
                           (case-lambda
                             ((g$x$8261$1c1CVa
                                g$old*$8262$1c1CVa
                                g$new*$8263$1c1CVa)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8217$1c1CVa
                                     (cdr g$x*$8258$1c1CVa)
                                     g$old*$8262$1c1CVa
                                     g$new*$8263$1c1CVa)))
                                (case-lambda
                                  ((g$x*$8264$1c1CVa
                                     g$old*$8265$1c1CVa
                                     g$new*$8266$1c1CVa)
                                   (values
                                     (cons g$x$8261$1c1CVa g$x*$8264$1c1CVa)
                                     g$old*$8265$1c1CVa
                                     g$new*$8266$1c1CVa))))))))))))
          ((case-lambda
             ((g$t$8218$1c1CVa)
              ((case-lambda
                 ((g$ls/false$8219$1c1CVa)
                  (if g$ls/false$8219$1c1CVa
                    (apply
                      (case-lambda
                        ((g$b$8220$1c1CVa g$b*$8221$1c1CVa)
                         (g$cons*$5496$1c1CVa
                           (g$bless$7605$1c1CVa 'let)
                           '()
                           g$b$8220$1c1CVa
                           g$b*$8221$1c1CVa)))
                      g$ls/false$8219$1c1CVa)
                    ((case-lambda
                       ((g$t$8222$1c1CVa)
                        ((case-lambda
                           ((g$ls/false$8223$1c1CVa)
                            (if g$ls/false$8223$1c1CVa
                              (apply
                                (case-lambda
                                  ((g$lhs*$8224$1c1CVa
                                     g$rhs*$8225$1c1CVa
                                     g$b$8226$1c1CVa
                                     g$b*$8227$1c1CVa)
                                   (g$bless$7605$1c1CVa
                                     ((letrec ((g$f$8228$1c1CVa
                                                 (case-lambda
                                                   ((g$lhs*$8229$1c1CVa
                                                      g$rhs*$8230$1c1CVa
                                                      g$old*$8231$1c1CVa
                                                      g$new*$8232$1c1CVa)
                                                    (if (null?
                                                          g$lhs*$8229$1c1CVa)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8231$1c1CVa
                                                               g$new*$8232$1c1CVa)
                                                          (cons
                                                            g$b$8226$1c1CVa
                                                            g$b*$8227$1c1CVa)))
                                                      ((case-lambda
                                                         ((g$t$8233$1c1CVa)
                                                          ((case-lambda
                                                             ((g$ls/false$8234$1c1CVa)
                                                              (if g$ls/false$8234$1c1CVa
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8235$1c1CVa)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8217$1c1CVa
                                                                            g$x*$8235$1c1CVa
                                                                            g$old*$8231$1c1CVa
                                                                            g$new*$8232$1c1CVa)))
                                                                       (case-lambda
                                                                         ((g$y*$8239$1c1CVa
                                                                            g$old*$8240$1c1CVa
                                                                            g$new*$8241$1c1CVa)
                                                                          ((case-lambda
                                                                             ((g$new*$8242$1c1CVa
                                                                                g$old*$8243$1c1CVa
                                                                                g$y*$8244$1c1CVa)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8230$1c1CVa))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8244$1c1CVa
                                                                                  (g$f$8228$1c1CVa
                                                                                    (cdr g$lhs*$8229$1c1CVa)
                                                                                    (cdr g$rhs*$8230$1c1CVa)
                                                                                    g$old*$8243$1c1CVa
                                                                                    g$new*$8242$1c1CVa)))))
                                                                           g$new*$8241$1c1CVa
                                                                           g$old*$8240$1c1CVa
                                                                           g$y*$8239$1c1CVa))))))
                                                                  g$ls/false$8234$1c1CVa)
                                                                ((case-lambda
                                                                   ((g$t$8245$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8246$1c1CVa)
                                                                        (if g$ls/false$8246$1c1CVa
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8247$1c1CVa
                                                                                 g$x$8248$1c1CVa)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8216$1c1CVa
                                                                                      g$x$8248$1c1CVa
                                                                                      g$old*$8231$1c1CVa
                                                                                      g$new*$8232$1c1CVa)))
                                                                                 (case-lambda
                                                                                   ((g$y$8249$1c1CVa
                                                                                      g$old*$8250$1c1CVa
                                                                                      g$new*$8251$1c1CVa)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8217$1c1CVa
                                                                                           g$x*$8247$1c1CVa
                                                                                           g$old*$8250$1c1CVa
                                                                                           g$new*$8251$1c1CVa)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8252$1c1CVa
                                                                                           g$old*$8253$1c1CVa
                                                                                           g$new*$8254$1c1CVa)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8230$1c1CVa))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8252$1c1CVa
                                                                                               g$y$8249$1c1CVa)
                                                                                             (g$f$8228$1c1CVa
                                                                                               (cdr g$lhs*$8229$1c1CVa)
                                                                                               (cdr g$rhs*$8230$1c1CVa)
                                                                                               g$old*$8253$1c1CVa
                                                                                               g$new*$8254$1c1CVa)))))))))))
                                                                            g$ls/false$8246$1c1CVa)
                                                                          ((case-lambda
                                                                             ((g$t$8255$1c1CVa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8256$1c1CVa)
                                                                                  (if g$ls/false$8256$1c1CVa
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8257$1c1CVa)
                                                                                         (g$syntax-violation$7751$1c1CVa
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8215$1c1CVa
                                                                                           g$others$8257$1c1CVa)))
                                                                                      g$ls/false$8256$1c1CVa)
                                                                                    (g$syntax-violation$7751$1c1CVa
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8255$1c1CVa))))
                                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                                 g$t$8255$1c1CVa
                                                                                 'any))))
                                                                           g$t$8245$1c1CVa))))
                                                                     (g$syntax-dispatch$7642$1c1CVa
                                                                       g$t$8245$1c1CVa
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8233$1c1CVa))))
                                                           (g$syntax-dispatch$7642$1c1CVa
                                                             g$t$8233$1c1CVa
                                                             'each-any))))
                                                       (car g$lhs*$8229$1c1CVa)))))))
                                        g$f$8228$1c1CVa)
                                      g$lhs*$8224$1c1CVa
                                      g$rhs*$8225$1c1CVa
                                      '()
                                      '()))))
                                g$ls/false$8223$1c1CVa)
                              (g$syntax-violation$7751$1c1CVa
                                '#f
                                '"invalid syntax"
                                g$t$8222$1c1CVa))))
                         (g$syntax-dispatch$7642$1c1CVa
                           g$t$8222$1c1CVa
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8218$1c1CVa))))
               (g$syntax-dispatch$7642$1c1CVa
                 g$t$8218$1c1CVa
                 '(_ () any . each-any)))))
           g$stx$8215$1c1CVa)))))
   (g$let*-values-macro$7610$1c1CVa
     g$let*-values-macro$11049$1c1CVa
     (case-lambda
       ((g$stx$8271$1c1CVa)
        (letrec* ((g$check$8272$1c1CVa
                    (case-lambda
                      ((g$x*$8296$1c1CVa)
                       (if (not (null? g$x*$8296$1c1CVa))
                         ((case-lambda
                            ((g$x$8297$1c1CVa)
                             (begin
                               (if (not (g$id?$7364$1c1CVa g$x$8297$1c1CVa))
                                 (g$syntax-violation$7751$1c1CVa
                                   '#f
                                   '"not an identifier"
                                   g$stx$8271$1c1CVa
                                   g$x$8297$1c1CVa)
                                 (void))
                               (g$check$8272$1c1CVa (cdr g$x*$8296$1c1CVa))
                               (if (g$bound-id-member?$7371$1c1CVa
                                     g$x$8297$1c1CVa
                                     (cdr g$x*$8296$1c1CVa))
                                 (g$syntax-violation$7751$1c1CVa
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8271$1c1CVa
                                   g$x$8297$1c1CVa)
                                 (void)))))
                          (car g$x*$8296$1c1CVa))
                         (void))))))
          ((case-lambda
             ((g$t$8273$1c1CVa)
              ((case-lambda
                 ((g$ls/false$8274$1c1CVa)
                  (if g$ls/false$8274$1c1CVa
                    (apply
                      (case-lambda
                        ((g$b$8275$1c1CVa g$b*$8276$1c1CVa)
                         (g$cons*$5496$1c1CVa
                           (g$bless$7605$1c1CVa 'let)
                           '()
                           g$b$8275$1c1CVa
                           g$b*$8276$1c1CVa)))
                      g$ls/false$8274$1c1CVa)
                    ((case-lambda
                       ((g$t$8277$1c1CVa)
                        ((case-lambda
                           ((g$ls/false$8278$1c1CVa)
                            (if g$ls/false$8278$1c1CVa
                              (apply
                                (case-lambda
                                  ((g$lhs*$8279$1c1CVa
                                     g$rhs*$8280$1c1CVa
                                     g$b$8281$1c1CVa
                                     g$b*$8282$1c1CVa)
                                   (g$bless$7605$1c1CVa
                                     ((letrec ((g$f$8283$1c1CVa
                                                 (case-lambda
                                                   ((g$lhs*$8284$1c1CVa
                                                      g$rhs*$8285$1c1CVa)
                                                    (if (null?
                                                          g$lhs*$8284$1c1CVa)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8281$1c1CVa
                                                          g$b*$8282$1c1CVa))
                                                      ((case-lambda
                                                         ((g$t$8286$1c1CVa)
                                                          ((case-lambda
                                                             ((g$ls/false$8287$1c1CVa)
                                                              (if g$ls/false$8287$1c1CVa
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8288$1c1CVa)
                                                                     (begin
                                                                       (g$check$8272$1c1CVa
                                                                         g$x*$8288$1c1CVa)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8285$1c1CVa))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8288$1c1CVa
                                                                           (g$f$8283$1c1CVa
                                                                             (cdr g$lhs*$8284$1c1CVa)
                                                                             (cdr g$rhs*$8285$1c1CVa)))))))
                                                                  g$ls/false$8287$1c1CVa)
                                                                ((case-lambda
                                                                   ((g$t$8289$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8290$1c1CVa)
                                                                        (if g$ls/false$8290$1c1CVa
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8291$1c1CVa
                                                                                 g$x$8292$1c1CVa)
                                                                               (begin
                                                                                 (g$check$8272$1c1CVa
                                                                                   (cons
                                                                                     g$x$8292$1c1CVa
                                                                                     g$x*$8291$1c1CVa))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8285$1c1CVa))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8291$1c1CVa
                                                                                       g$x$8292$1c1CVa)
                                                                                     (g$f$8283$1c1CVa
                                                                                       (cdr g$lhs*$8284$1c1CVa)
                                                                                       (cdr g$rhs*$8285$1c1CVa)))))))
                                                                            g$ls/false$8290$1c1CVa)
                                                                          ((case-lambda
                                                                             ((g$t$8293$1c1CVa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8294$1c1CVa)
                                                                                  (if g$ls/false$8294$1c1CVa
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8295$1c1CVa)
                                                                                         (g$syntax-violation$7751$1c1CVa
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8271$1c1CVa
                                                                                           g$others$8295$1c1CVa)))
                                                                                      g$ls/false$8294$1c1CVa)
                                                                                    (g$syntax-violation$7751$1c1CVa
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8293$1c1CVa))))
                                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                                 g$t$8293$1c1CVa
                                                                                 'any))))
                                                                           g$t$8289$1c1CVa))))
                                                                     (g$syntax-dispatch$7642$1c1CVa
                                                                       g$t$8289$1c1CVa
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8286$1c1CVa))))
                                                           (g$syntax-dispatch$7642$1c1CVa
                                                             g$t$8286$1c1CVa
                                                             'each-any))))
                                                       (car g$lhs*$8284$1c1CVa)))))))
                                        g$f$8283$1c1CVa)
                                      g$lhs*$8279$1c1CVa
                                      g$rhs*$8280$1c1CVa))))
                                g$ls/false$8278$1c1CVa)
                              (g$syntax-violation$7751$1c1CVa
                                '#f
                                '"invalid syntax"
                                g$t$8277$1c1CVa))))
                         (g$syntax-dispatch$7642$1c1CVa
                           g$t$8277$1c1CVa
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8273$1c1CVa))))
               (g$syntax-dispatch$7642$1c1CVa
                 g$t$8273$1c1CVa
                 '(_ () any . each-any)))))
           g$stx$8271$1c1CVa)))))
   (g$trace-lambda-macro$7611$1c1CVa
     g$trace-lambda-macro$11050$1c1CVa
     (case-lambda
       ((g$stx$8298$1c1CVa)
        ((case-lambda
           ((g$t$8299$1c1CVa)
            ((case-lambda
               ((g$ls/false$8300$1c1CVa)
                (if g$ls/false$8300$1c1CVa
                  (apply
                    (case-lambda
                      ((g$who$8301$1c1CVa
                         g$fmls$8302$1c1CVa
                         g$b$8303$1c1CVa
                         g$b*$8304$1c1CVa)
                       (if (g$valid-bound-ids?$7369$1c1CVa g$fmls$8302$1c1CVa)
                         (g$bless$7605$1c1CVa
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8301$1c1CVa)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8302$1c1CVa
                                 (cons g$b$8303$1c1CVa g$b*$8304$1c1CVa)))))
                         (g$invalid-fmls-error$7607$1c1CVa
                           g$stx$8298$1c1CVa
                           g$fmls$8302$1c1CVa))))
                    g$ls/false$8300$1c1CVa)
                  ((case-lambda
                     ((g$t$8305$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$8306$1c1CVa)
                          (if g$ls/false$8306$1c1CVa
                            (apply
                              (case-lambda
                                ((g$who$8307$1c1CVa
                                   g$fmls$8308$1c1CVa
                                   g$last$8309$1c1CVa
                                   g$b$8310$1c1CVa
                                   g$b*$8311$1c1CVa)
                                 (if (g$valid-bound-ids?$7369$1c1CVa
                                       (cons
                                         g$last$8309$1c1CVa
                                         g$fmls$8308$1c1CVa))
                                   (g$bless$7605$1c1CVa
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8307$1c1CVa)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8308$1c1CVa
                                             g$last$8309$1c1CVa)
                                           (cons
                                             g$b$8310$1c1CVa
                                             g$b*$8311$1c1CVa)))))
                                   (g$invalid-fmls-error$7607$1c1CVa
                                     g$stx$8298$1c1CVa
                                     (append
                                       g$fmls$8308$1c1CVa
                                       g$last$8309$1c1CVa)))))
                              g$ls/false$8306$1c1CVa)
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"invalid syntax"
                              g$t$8305$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$8305$1c1CVa
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8299$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8299$1c1CVa
               '(_ any each-any any . each-any)))))
         g$stx$8298$1c1CVa))))
   (g$trace-define-macro$7612$1c1CVa
     g$trace-define-macro$11051$1c1CVa
     (case-lambda
       ((g$stx$8312$1c1CVa)
        ((case-lambda
           ((g$t$8313$1c1CVa)
            ((case-lambda
               ((g$ls/false$8314$1c1CVa)
                (if g$ls/false$8314$1c1CVa
                  (apply
                    (case-lambda
                      ((g$who$8315$1c1CVa
                         g$fmls$8316$1c1CVa
                         g$b$8317$1c1CVa
                         g$b*$8318$1c1CVa)
                       (if (g$valid-bound-ids?$7369$1c1CVa g$fmls$8316$1c1CVa)
                         (g$bless$7605$1c1CVa
                           (list
                             'define
                             g$who$8315$1c1CVa
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8315$1c1CVa)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8316$1c1CVa
                                   (cons g$b$8317$1c1CVa g$b*$8318$1c1CVa))))))
                         (g$invalid-fmls-error$7607$1c1CVa
                           g$stx$8312$1c1CVa
                           g$fmls$8316$1c1CVa))))
                    g$ls/false$8314$1c1CVa)
                  ((case-lambda
                     ((g$t$8319$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$8320$1c1CVa)
                          (if g$ls/false$8320$1c1CVa
                            (apply
                              (case-lambda
                                ((g$who$8321$1c1CVa
                                   g$fmls$8322$1c1CVa
                                   g$last$8323$1c1CVa
                                   g$b$8324$1c1CVa
                                   g$b*$8325$1c1CVa)
                                 (if (g$valid-bound-ids?$7369$1c1CVa
                                       (cons
                                         g$last$8323$1c1CVa
                                         g$fmls$8322$1c1CVa))
                                   (g$bless$7605$1c1CVa
                                     (list
                                       'define
                                       g$who$8321$1c1CVa
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8321$1c1CVa)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8322$1c1CVa
                                               g$last$8323$1c1CVa)
                                             (cons
                                               g$b$8324$1c1CVa
                                               g$b*$8325$1c1CVa))))))
                                   (g$invalid-fmls-error$7607$1c1CVa
                                     g$stx$8312$1c1CVa
                                     (append
                                       g$fmls$8322$1c1CVa
                                       g$last$8323$1c1CVa)))))
                              g$ls/false$8320$1c1CVa)
                            ((case-lambda
                               ((g$t$8326$1c1CVa)
                                ((case-lambda
                                   ((g$ls/false$8327$1c1CVa)
                                    (if g$ls/false$8327$1c1CVa
                                      (apply
                                        (case-lambda
                                          ((g$who$8328$1c1CVa
                                             g$expr$8329$1c1CVa)
                                           (if (g$id?$7364$1c1CVa
                                                 g$who$8328$1c1CVa)
                                             (g$bless$7605$1c1CVa
                                               (list
                                                 'define
                                                 g$who$8328$1c1CVa
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8329$1c1CVa))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8328$1c1CVa)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7751$1c1CVa
                                               '#f
                                               '"invalid name"
                                               g$stx$8312$1c1CVa))))
                                        g$ls/false$8327$1c1CVa)
                                      (g$syntax-violation$7751$1c1CVa
                                        '#f
                                        '"invalid syntax"
                                        g$t$8326$1c1CVa))))
                                 (g$syntax-dispatch$7642$1c1CVa
                                   g$t$8326$1c1CVa
                                   '(_ any any)))))
                             g$t$8319$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$8319$1c1CVa
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8313$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8313$1c1CVa
               '(_ (any . each-any) any . each-any)))))
         g$stx$8312$1c1CVa))))
   (g$trace-define-syntax-macro$7613$1c1CVa
     g$trace-define-syntax-macro$11052$1c1CVa
     (case-lambda
       ((g$stx$8330$1c1CVa)
        ((case-lambda
           ((g$t$8331$1c1CVa)
            ((case-lambda
               ((g$ls/false$8332$1c1CVa)
                (if g$ls/false$8332$1c1CVa
                  (apply
                    (case-lambda
                      ((g$who$8333$1c1CVa g$expr$8334$1c1CVa)
                       (if (g$id?$7364$1c1CVa g$who$8333$1c1CVa)
                         (g$bless$7605$1c1CVa
                           (list
                             'define-syntax
                             g$who$8333$1c1CVa
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8333$1c1CVa)
                               g$expr$8334$1c1CVa)))
                         (g$syntax-violation$7751$1c1CVa
                           '#f
                           '"invalid name"
                           g$stx$8330$1c1CVa))))
                    g$ls/false$8332$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8331$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8331$1c1CVa '(_ any any)))))
         g$stx$8330$1c1CVa))))
   (g$trace-let/rec-syntax$7614$1c1CVa
     g$trace-let/rec-syntax$11053$1c1CVa
     (case-lambda
       ((g$who$8335$1c1CVa)
        (case-lambda
          ((g$stx$8336$1c1CVa)
           ((case-lambda
              ((g$t$8337$1c1CVa)
               ((case-lambda
                  ((g$ls/false$8338$1c1CVa)
                   (if g$ls/false$8338$1c1CVa
                     (apply
                       (case-lambda
                         ((g$lhs*$8339$1c1CVa
                            g$rhs*$8340$1c1CVa
                            g$b$8341$1c1CVa
                            g$b*$8342$1c1CVa)
                          (if (g$valid-bound-ids?$7369$1c1CVa
                                g$lhs*$8339$1c1CVa)
                            ((case-lambda
                               ((g$rhs*$8343$1c1CVa)
                                (g$bless$7605$1c1CVa
                                  (cons
                                    g$who$8335$1c1CVa
                                    (cons
                                      (map list
                                           g$lhs*$8339$1c1CVa
                                           g$rhs*$8343$1c1CVa)
                                      (cons
                                        g$b$8341$1c1CVa
                                        g$b*$8342$1c1CVa))))))
                             (map (case-lambda
                                    ((g$lhs$8344$1c1CVa g$rhs$8345$1c1CVa)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8344$1c1CVa)
                                       g$rhs$8345$1c1CVa)))
                                  g$lhs*$8339$1c1CVa
                                  g$rhs*$8340$1c1CVa))
                            (g$invalid-fmls-error$7607$1c1CVa
                              g$stx$8336$1c1CVa
                              g$lhs*$8339$1c1CVa))))
                       g$ls/false$8338$1c1CVa)
                     (g$syntax-violation$7751$1c1CVa
                       '#f
                       '"invalid syntax"
                       g$t$8337$1c1CVa))))
                (g$syntax-dispatch$7642$1c1CVa
                  g$t$8337$1c1CVa
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8336$1c1CVa))))))
   (g$trace-let-syntax-macro$7615$1c1CVa
     g$trace-let-syntax-macro$11054$1c1CVa
     (g$trace-let/rec-syntax$7614$1c1CVa 'let-syntax))
   (g$trace-letrec-syntax-macro$7616$1c1CVa
     g$trace-letrec-syntax-macro$11055$1c1CVa
     (g$trace-let/rec-syntax$7614$1c1CVa 'letrec-syntax))
   (g$guard-macro$7617$1c1CVa
     g$guard-macro$11056$1c1CVa
     (case-lambda
       ((g$x$8346$1c1CVa)
        (letrec* ((g$gen-clauses$8347$1c1CVa
                    (case-lambda
                      ((g$con$8359$1c1CVa
                         g$outerk$8360$1c1CVa
                         g$clause*$8361$1c1CVa)
                       (letrec* ((g$f$8362$1c1CVa
                                   (case-lambda
                                     ((g$x$8390$1c1CVa g$k$8391$1c1CVa)
                                      ((case-lambda
                                         ((g$t$8392$1c1CVa)
                                          ((case-lambda
                                             ((g$ls/false$8393$1c1CVa)
                                              (if g$ls/false$8393$1c1CVa
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8394$1c1CVa
                                                       g$p$8395$1c1CVa)
                                                     ((case-lambda
                                                        ((g$t$8396$1c1CVa)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8396$1c1CVa
                                                               g$e$8394$1c1CVa))
                                                           (list
                                                             'if
                                                             g$t$8396$1c1CVa
                                                             (list
                                                               g$p$8395$1c1CVa
                                                               g$t$8396$1c1CVa)
                                                             g$k$8391$1c1CVa))))
                                                      (gensym))))
                                                  g$ls/false$8393$1c1CVa)
                                                ((case-lambda
                                                   ((g$t$8397$1c1CVa)
                                                    ((case-lambda
                                                       ((g$ls/false$8398$1c1CVa)
                                                        (if g$ls/false$8398$1c1CVa
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8399$1c1CVa)
                                                               ((case-lambda
                                                                  ((g$t$8400$1c1CVa)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8400$1c1CVa
                                                                         g$e$8399$1c1CVa))
                                                                     (list
                                                                       'if
                                                                       g$t$8400$1c1CVa
                                                                       g$t$8400$1c1CVa
                                                                       g$k$8391$1c1CVa))))
                                                                (gensym))))
                                                            g$ls/false$8398$1c1CVa)
                                                          ((case-lambda
                                                             ((g$t$8401$1c1CVa)
                                                              ((case-lambda
                                                                 ((g$ls/false$8402$1c1CVa)
                                                                  (if g$ls/false$8402$1c1CVa
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8403$1c1CVa
                                                                           g$v$8404$1c1CVa
                                                                           g$v*$8405$1c1CVa)
                                                                         (list
                                                                           'if
                                                                           g$e$8403$1c1CVa
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8404$1c1CVa
                                                                               g$v*$8405$1c1CVa))
                                                                           g$k$8391$1c1CVa)))
                                                                      g$ls/false$8402$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$t$8406$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8407$1c1CVa)
                                                                            (if g$ls/false$8407$1c1CVa
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7751$1c1CVa
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8390$1c1CVa)))
                                                                                g$ls/false$8407$1c1CVa)
                                                                              (g$syntax-violation$7751$1c1CVa
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8406$1c1CVa))))
                                                                         (g$syntax-dispatch$7642$1c1CVa
                                                                           g$t$8406$1c1CVa
                                                                           '_))))
                                                                     g$t$8401$1c1CVa))))
                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                 g$t$8401$1c1CVa
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8397$1c1CVa))))
                                                     (g$syntax-dispatch$7642$1c1CVa
                                                       g$t$8397$1c1CVa
                                                       '(any)))))
                                                 g$t$8392$1c1CVa))))
                                           (g$syntax-dispatch$7642$1c1CVa
                                             g$t$8392$1c1CVa
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8390$1c1CVa))))
                                 (g$f*$8363$1c1CVa
                                   (case-lambda
                                     ((g$x*$8370$1c1CVa)
                                      ((case-lambda
                                         ((g$t$8371$1c1CVa)
                                          ((case-lambda
                                             ((g$ls/false$8372$1c1CVa)
                                              (if g$ls/false$8372$1c1CVa
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8359$1c1CVa)
                                                       '#t)))
                                                  g$ls/false$8372$1c1CVa)
                                                ((case-lambda
                                                   ((g$t$8373$1c1CVa)
                                                    ((case-lambda
                                                       ((g$ls/false$8374$1c1CVa)
                                                        (if g$ls/false$8374$1c1CVa
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8375$1c1CVa
                                                                 g$e*$8376$1c1CVa)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8375$1c1CVa
                                                                     g$e*$8376$1c1CVa))
                                                                 '#f)))
                                                            g$ls/false$8374$1c1CVa)
                                                          ((case-lambda
                                                             ((g$t$8377$1c1CVa)
                                                              ((case-lambda
                                                                 ((g$ls/false$8378$1c1CVa)
                                                                  (if g$ls/false$8378$1c1CVa
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8379$1c1CVa
                                                                           g$cls*$8380$1c1CVa)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8363$1c1CVa
                                                                                g$cls*$8380$1c1CVa)))
                                                                           (case-lambda
                                                                             ((g$e$8383$1c1CVa
                                                                                g$g$8384$1c1CVa)
                                                                              ((case-lambda
                                                                                 ((g$g$8385$1c1CVa
                                                                                    g$e$8386$1c1CVa)
                                                                                  (values
                                                                                    (g$f$8362$1c1CVa
                                                                                      g$cls$8379$1c1CVa
                                                                                      g$e$8386$1c1CVa)
                                                                                    g$g$8385$1c1CVa)))
                                                                               g$g$8384$1c1CVa
                                                                               g$e$8383$1c1CVa))))))
                                                                      g$ls/false$8378$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$t$8387$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8388$1c1CVa)
                                                                            (if g$ls/false$8388$1c1CVa
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8389$1c1CVa)
                                                                                   (g$syntax-violation$7751$1c1CVa
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8389$1c1CVa)))
                                                                                g$ls/false$8388$1c1CVa)
                                                                              (g$syntax-violation$7751$1c1CVa
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8387$1c1CVa))))
                                                                         (g$syntax-dispatch$7642$1c1CVa
                                                                           g$t$8387$1c1CVa
                                                                           'any))))
                                                                     g$t$8377$1c1CVa))))
                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                 g$t$8377$1c1CVa
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8373$1c1CVa))))
                                                     (g$syntax-dispatch$7642$1c1CVa
                                                       g$t$8373$1c1CVa
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8371$1c1CVa))))
                                           (g$syntax-dispatch$7642$1c1CVa
                                             g$t$8371$1c1CVa
                                             '()))))
                                       g$x*$8370$1c1CVa)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8363$1c1CVa g$clause*$8361$1c1CVa)))
                           (case-lambda
                             ((g$code$8366$1c1CVa g$raisek$8367$1c1CVa)
                              ((case-lambda
                                 ((g$raisek$8368$1c1CVa g$code$8369$1c1CVa)
                                  (if g$raisek$8368$1c1CVa
                                    (list
                                      g$outerk$8360$1c1CVa
                                      g$code$8369$1c1CVa)
                                    g$code$8369$1c1CVa)))
                               g$raisek$8367$1c1CVa
                               g$code$8366$1c1CVa)))))))))
          ((case-lambda
             ((g$t$8348$1c1CVa)
              ((case-lambda
                 ((g$ls/false$8349$1c1CVa)
                  (if (if g$ls/false$8349$1c1CVa
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8350$1c1CVa
                                 g$clause*$8351$1c1CVa
                                 g$b$8352$1c1CVa
                                 g$b*$8353$1c1CVa)
                               (g$id?$7364$1c1CVa g$con$8350$1c1CVa)))
                            g$ls/false$8349$1c1CVa))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8354$1c1CVa
                           g$clause*$8355$1c1CVa
                           g$b$8356$1c1CVa
                           g$b*$8357$1c1CVa)
                         ((case-lambda
                            ((g$outerk$8358$1c1CVa)
                             (g$bless$7605$1c1CVa
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8358$1c1CVa)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8354$1c1CVa)
                                           (g$gen-clauses$8347$1c1CVa
                                             g$con$8354$1c1CVa
                                             g$outerk$8358$1c1CVa
                                             g$clause*$8355$1c1CVa))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8356$1c1CVa
                                                 g$b*$8357$1c1CVa))))))))))))
                          (gensym))))
                      g$ls/false$8349$1c1CVa)
                    (g$syntax-violation$7751$1c1CVa
                      '#f
                      '"invalid syntax"
                      g$t$8348$1c1CVa))))
               (g$syntax-dispatch$7642$1c1CVa
                 g$t$8348$1c1CVa
                 '(_ (any . each-any) any . each-any)))))
           g$x$8346$1c1CVa)))))
   (g$define-enumeration-macro$7618$1c1CVa
     g$define-enumeration-macro$11057$1c1CVa
     (case-lambda
       ((g$stx$8408$1c1CVa)
        (letrec* ((g$set?$8409$1c1CVa
                    (case-lambda
                      ((g$x$8422$1c1CVa)
                       ((case-lambda
                          ((g$t$8423$1c1CVa)
                           (if g$t$8423$1c1CVa
                             g$t$8423$1c1CVa
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8422$1c1CVa)
                                          (cdr g$x$8422$1c1CVa)))
                                 (begin
                                   '#f
                                   (g$set?$8409$1c1CVa (cdr g$x$8422$1c1CVa)))
                                 '#f)))))
                        (null? g$x$8422$1c1CVa)))))
                  (g$remove-dups$8410$1c1CVa
                    (case-lambda
                      ((g$ls$8421$1c1CVa)
                       (if (null? g$ls$8421$1c1CVa)
                         '()
                         (cons
                           (car g$ls$8421$1c1CVa)
                           (g$remove-dups$8410$1c1CVa
                             (g$remq$5501$1c1CVa
                               (car g$ls$8421$1c1CVa)
                               (cdr g$ls$8421$1c1CVa)))))))))
          ((case-lambda
             ((g$t$8411$1c1CVa)
              ((case-lambda
                 ((g$ls/false$8412$1c1CVa)
                  (if (if g$ls/false$8412$1c1CVa
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8413$1c1CVa
                                 g$id*$8414$1c1CVa
                                 g$maker$8415$1c1CVa)
                               (if (g$id?$7364$1c1CVa g$name$8413$1c1CVa)
                                 (if (g$id?$7364$1c1CVa g$maker$8415$1c1CVa)
                                   (begin
                                     '#f
                                     (g$for-all$5494$1c1CVa
                                       g$id?$7364$1c1CVa
                                       g$id*$8414$1c1CVa))
                                   '#f)
                                 '#f)))
                            g$ls/false$8412$1c1CVa))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8416$1c1CVa
                           g$id*$8417$1c1CVa
                           g$maker$8418$1c1CVa)
                         ((case-lambda
                            ((g$name*$8419$1c1CVa g$mk$8420$1c1CVa)
                             (g$bless$7605$1c1CVa
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8420$1c1CVa
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8419$1c1CVa))))
                                 (list
                                   'define-syntax
                                   g$name$8416$1c1CVa
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8419$1c1CVa))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8416$1c1CVa)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8418$1c1CVa
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8418$1c1CVa)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8419$1c1CVa))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8418$1c1CVa)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8420$1c1CVa
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8410$1c1CVa
                            (g$syntax->datum$7754$1c1CVa g$id*$8417$1c1CVa))
                          (gensym))))
                      g$ls/false$8412$1c1CVa)
                    (g$syntax-violation$7751$1c1CVa
                      '#f
                      '"invalid syntax"
                      g$t$8411$1c1CVa))))
               (g$syntax-dispatch$7642$1c1CVa
                 g$t$8411$1c1CVa
                 '(_ any each-any any)))))
           g$stx$8408$1c1CVa)))))
   (g$time-macro$7619$1c1CVa
     g$time-macro$11058$1c1CVa
     (case-lambda
       ((g$stx$8424$1c1CVa)
        ((case-lambda
           ((g$t$8425$1c1CVa)
            ((case-lambda
               ((g$ls/false$8426$1c1CVa)
                (if g$ls/false$8426$1c1CVa
                  (apply
                    (case-lambda
                      ((g$expr$8427$1c1CVa)
                       ((case-lambda
                          ((g$str$8428$1c1CVa)
                           (g$bless$7605$1c1CVa
                             (list
                               'time-it
                               g$str$8428$1c1CVa
                               (list 'lambda '() g$expr$8427$1c1CVa)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6343$1c1CVa)))
                          (case-lambda
                            ((g$p$8431$1c1CVa g$e$8432$1c1CVa)
                             ((case-lambda
                                ((g$e$8433$1c1CVa g$p$8434$1c1CVa)
                                 (begin
                                   (write
                                     (g$syntax->datum$7754$1c1CVa
                                       g$expr$8427$1c1CVa)
                                     g$p$8434$1c1CVa)
                                   (g$e$8433$1c1CVa))))
                              g$e$8432$1c1CVa
                              g$p$8431$1c1CVa)))))))
                    g$ls/false$8426$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8425$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8425$1c1CVa '(_ any)))))
         g$stx$8424$1c1CVa))))
   (g$delay-macro$7620$1c1CVa
     g$delay-macro$11059$1c1CVa
     (case-lambda
       ((g$stx$8435$1c1CVa)
        ((case-lambda
           ((g$t$8436$1c1CVa)
            ((case-lambda
               ((g$ls/false$8437$1c1CVa)
                (if g$ls/false$8437$1c1CVa
                  (apply
                    (case-lambda
                      ((g$expr$8438$1c1CVa)
                       (g$bless$7605$1c1CVa
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8438$1c1CVa)))))
                    g$ls/false$8437$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8436$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8436$1c1CVa '(_ any)))))
         g$stx$8435$1c1CVa))))
   (g$assert-macro$7621$1c1CVa
     g$assert-macro$11060$1c1CVa
     (case-lambda
       ((g$stx$8439$1c1CVa)
        ((case-lambda
           ((g$t$8440$1c1CVa)
            ((case-lambda
               ((g$ls/false$8441$1c1CVa)
                (if g$ls/false$8441$1c1CVa
                  (apply
                    (case-lambda
                      ((g$expr$8442$1c1CVa)
                       ((case-lambda
                          ((g$pos$8443$1c1CVa)
                           (g$bless$7605$1c1CVa
                             (list
                               'unless
                               g$expr$8442$1c1CVa
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8442$1c1CVa)
                                 (list 'quote g$pos$8443$1c1CVa))))))
                        ((case-lambda
                           ((g$t$8444$1c1CVa)
                            (if g$t$8444$1c1CVa
                              g$t$8444$1c1CVa
                              (begin
                                '#f
                                (g$expression-position$7746$1c1CVa
                                  g$expr$8442$1c1CVa)))))
                         (g$expression-position$7746$1c1CVa
                           g$stx$8439$1c1CVa)))))
                    g$ls/false$8441$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8440$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8440$1c1CVa '(_ any)))))
         g$stx$8439$1c1CVa))))
   (g$endianness-macro$7622$1c1CVa
     g$endianness-macro$11061$1c1CVa
     (case-lambda
       ((g$stx$8445$1c1CVa)
        ((case-lambda
           ((g$t$8446$1c1CVa)
            ((case-lambda
               ((g$ls/false$8447$1c1CVa)
                (if g$ls/false$8447$1c1CVa
                  (apply
                    (case-lambda
                      ((g$e$8448$1c1CVa)
                       ((case-lambda
                          ((g$t$8449$1c1CVa)
                           (if (memv g$t$8449$1c1CVa '(little))
                             (g$bless$7605$1c1CVa ''little)
                             (if (memv g$t$8449$1c1CVa '(big))
                               (g$bless$7605$1c1CVa ''big)
                               (g$syntax-violation$7751$1c1CVa
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8445$1c1CVa)))))
                        (g$syntax->datum$7754$1c1CVa g$e$8448$1c1CVa))))
                    g$ls/false$8447$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8446$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8446$1c1CVa '(_ any)))))
         g$stx$8445$1c1CVa))))
   (g$identifier-syntax-macro$7623$1c1CVa
     g$identifier-syntax-macro$11062$1c1CVa
     (case-lambda
       ((g$stx$8450$1c1CVa)
        ((case-lambda
           ((g$t$8451$1c1CVa)
            ((case-lambda
               ((g$ls/false$8452$1c1CVa)
                (if g$ls/false$8452$1c1CVa
                  (apply
                    (case-lambda
                      ((g$expr$8453$1c1CVa)
                       (g$bless$7605$1c1CVa
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8453$1c1CVa))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8453$1c1CVa)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8452$1c1CVa)
                  ((case-lambda
                     ((g$t$8454$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$8455$1c1CVa)
                          (if (if g$ls/false$8455$1c1CVa
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8456$1c1CVa
                                         g$expr1$8457$1c1CVa
                                         g$id2$8458$1c1CVa
                                         g$expr2$8459$1c1CVa
                                         g$expr3$8460$1c1CVa)
                                       (if (g$id?$7364$1c1CVa g$id1$8456$1c1CVa)
                                         (if (g$id?$7364$1c1CVa
                                               g$id2$8458$1c1CVa)
                                           (begin
                                             '#f
                                             (g$id?$7364$1c1CVa
                                               g$expr2$8459$1c1CVa))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8455$1c1CVa))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8461$1c1CVa
                                   g$expr1$8462$1c1CVa
                                   g$id2$8463$1c1CVa
                                   g$expr2$8464$1c1CVa
                                   g$expr3$8465$1c1CVa)
                                 (g$bless$7605$1c1CVa
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8462$1c1CVa))
                                         (list
                                           (list 'set! 'id g$expr2$8464$1c1CVa)
                                           (list 'syntax g$expr3$8465$1c1CVa))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8462$1c1CVa
                                               '(e* ...))))))))))
                              g$ls/false$8455$1c1CVa)
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"invalid syntax"
                              g$t$8454$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$8454$1c1CVa
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8451$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8451$1c1CVa '(_ any)))))
         g$stx$8450$1c1CVa))))
   (g$do-macro$7624$1c1CVa
     g$do-macro$11063$1c1CVa
     (case-lambda
       ((g$stx$8466$1c1CVa)
        (letrec* ((g$bind$8467$1c1CVa
                    (case-lambda
                      ((g$x$8479$1c1CVa)
                       ((case-lambda
                          ((g$t$8480$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$8481$1c1CVa)
                               (if g$ls/false$8481$1c1CVa
                                 (apply
                                   (case-lambda
                                     ((g$x$8482$1c1CVa g$init$8483$1c1CVa)
                                      (list
                                        g$x$8482$1c1CVa
                                        g$init$8483$1c1CVa
                                        g$x$8482$1c1CVa)))
                                   g$ls/false$8481$1c1CVa)
                                 ((case-lambda
                                    ((g$t$8484$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$8485$1c1CVa)
                                         (if g$ls/false$8485$1c1CVa
                                           (apply
                                             (case-lambda
                                               ((g$x$8486$1c1CVa
                                                  g$init$8487$1c1CVa
                                                  g$step$8488$1c1CVa)
                                                (list
                                                  g$x$8486$1c1CVa
                                                  g$init$8487$1c1CVa
                                                  g$step$8488$1c1CVa)))
                                             g$ls/false$8485$1c1CVa)
                                           ((case-lambda
                                              ((g$t$8489$1c1CVa)
                                               ((case-lambda
                                                  ((g$ls/false$8490$1c1CVa)
                                                   (if g$ls/false$8490$1c1CVa
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7751$1c1CVa
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8466$1c1CVa)))
                                                       g$ls/false$8490$1c1CVa)
                                                     (g$syntax-violation$7751$1c1CVa
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8489$1c1CVa))))
                                                (g$syntax-dispatch$7642$1c1CVa
                                                  g$t$8489$1c1CVa
                                                  '_))))
                                            g$t$8484$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$8484$1c1CVa
                                        '(any any any)))))
                                  g$t$8480$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$8480$1c1CVa
                              '(any any)))))
                        g$x$8479$1c1CVa)))))
          ((case-lambda
             ((g$t$8468$1c1CVa)
              ((case-lambda
                 ((g$ls/false$8469$1c1CVa)
                  (if g$ls/false$8469$1c1CVa
                    (apply
                      (case-lambda
                        ((g$binding*$8470$1c1CVa
                           g$test$8471$1c1CVa
                           g$expr*$8472$1c1CVa
                           g$command*$8473$1c1CVa)
                         ((case-lambda
                            ((g$t$8474$1c1CVa)
                             ((case-lambda
                                ((g$ls/false$8475$1c1CVa)
                                 (if g$ls/false$8475$1c1CVa
                                   (apply
                                     (case-lambda
                                       ((g$x*$8476$1c1CVa
                                          g$init*$8477$1c1CVa
                                          g$step*$8478$1c1CVa)
                                        (if (g$valid-bound-ids?$7369$1c1CVa
                                              g$x*$8476$1c1CVa)
                                          (g$bless$7605$1c1CVa
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8476$1c1CVa
                                                    (list
                                                      'if
                                                      g$test$8471$1c1CVa
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8472$1c1CVa))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8473$1c1CVa
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8478$1c1CVa))))))))
                                              (cons 'loop g$init*$8477$1c1CVa)))
                                          (g$syntax-violation$7751$1c1CVa
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8466$1c1CVa))))
                                     g$ls/false$8475$1c1CVa)
                                   (g$syntax-violation$7751$1c1CVa
                                     '#f
                                     '"invalid syntax"
                                     g$t$8474$1c1CVa))))
                              (g$syntax-dispatch$7642$1c1CVa
                                g$t$8474$1c1CVa
                                '#(each (any any any))))))
                          (map g$bind$8467$1c1CVa g$binding*$8470$1c1CVa))))
                      g$ls/false$8469$1c1CVa)
                    (g$syntax-violation$7751$1c1CVa
                      '#f
                      '"invalid syntax"
                      g$t$8468$1c1CVa))))
               (g$syntax-dispatch$7642$1c1CVa
                 g$t$8468$1c1CVa
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8466$1c1CVa)))))
   (g$let*-macro$7625$1c1CVa
     g$let*-macro$11064$1c1CVa
     (case-lambda
       ((g$stx$8491$1c1CVa)
        ((case-lambda
           ((g$t$8492$1c1CVa)
            ((case-lambda
               ((g$ls/false$8493$1c1CVa)
                (if (if g$ls/false$8493$1c1CVa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8494$1c1CVa
                               g$rhs*$8495$1c1CVa
                               g$b$8496$1c1CVa
                               g$b*$8497$1c1CVa)
                             (g$for-all$5494$1c1CVa
                               g$id?$7364$1c1CVa
                               g$lhs*$8494$1c1CVa)))
                          g$ls/false$8493$1c1CVa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8498$1c1CVa
                         g$rhs*$8499$1c1CVa
                         g$b$8500$1c1CVa
                         g$b*$8501$1c1CVa)
                       (g$bless$7605$1c1CVa
                         ((letrec ((g$f$8502$1c1CVa
                                     (case-lambda
                                       ((g$x*$8503$1c1CVa)
                                        (if (null? g$x*$8503$1c1CVa)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8500$1c1CVa
                                                g$b*$8501$1c1CVa)))
                                          (list
                                            'let
                                            (list (car g$x*$8503$1c1CVa))
                                            (g$f$8502$1c1CVa
                                              (cdr g$x*$8503$1c1CVa))))))))
                            g$f$8502$1c1CVa)
                          (map list g$lhs*$8498$1c1CVa g$rhs*$8499$1c1CVa)))))
                    g$ls/false$8493$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8492$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8492$1c1CVa
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8491$1c1CVa))))
   (g$or-macro$7626$1c1CVa
     g$or-macro$11065$1c1CVa
     (case-lambda
       ((g$stx$8504$1c1CVa)
        ((case-lambda
           ((g$t$8505$1c1CVa)
            ((case-lambda
               ((g$ls/false$8506$1c1CVa)
                (if g$ls/false$8506$1c1CVa
                  (apply (case-lambda (() '#f)) g$ls/false$8506$1c1CVa)
                  ((case-lambda
                     ((g$t$8507$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$8508$1c1CVa)
                          (if g$ls/false$8508$1c1CVa
                            (apply
                              (case-lambda
                                ((g$e$8509$1c1CVa g$e*$8510$1c1CVa)
                                 (g$bless$7605$1c1CVa
                                   ((letrec ((g$f$8511$1c1CVa
                                               (case-lambda
                                                 ((g$e$8512$1c1CVa
                                                    g$e*$8513$1c1CVa)
                                                  (if (null? g$e*$8513$1c1CVa)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8512$1c1CVa)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8512$1c1CVa))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8511$1c1CVa
                                                          (car g$e*$8513$1c1CVa)
                                                          (cdr g$e*$8513$1c1CVa)))))))))
                                      g$f$8511$1c1CVa)
                                    g$e$8509$1c1CVa
                                    g$e*$8510$1c1CVa))))
                              g$ls/false$8508$1c1CVa)
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"invalid syntax"
                              g$t$8507$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$8507$1c1CVa
                         '(_ any . each-any)))))
                   g$t$8505$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8505$1c1CVa '(_)))))
         g$stx$8504$1c1CVa))))
   (g$and-macro$7627$1c1CVa
     g$and-macro$11066$1c1CVa
     (case-lambda
       ((g$stx$8514$1c1CVa)
        ((case-lambda
           ((g$t$8515$1c1CVa)
            ((case-lambda
               ((g$ls/false$8516$1c1CVa)
                (if g$ls/false$8516$1c1CVa
                  (apply (case-lambda (() '#t)) g$ls/false$8516$1c1CVa)
                  ((case-lambda
                     ((g$t$8517$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$8518$1c1CVa)
                          (if g$ls/false$8518$1c1CVa
                            (apply
                              (case-lambda
                                ((g$e$8519$1c1CVa g$e*$8520$1c1CVa)
                                 (g$bless$7605$1c1CVa
                                   ((letrec ((g$f$8521$1c1CVa
                                               (case-lambda
                                                 ((g$e$8522$1c1CVa
                                                    g$e*$8523$1c1CVa)
                                                  (if (null? g$e*$8523$1c1CVa)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8522$1c1CVa)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8522$1c1CVa
                                                        (cons
                                                          (g$f$8521$1c1CVa
                                                            (car g$e*$8523$1c1CVa)
                                                            (cdr g$e*$8523$1c1CVa))
                                                          '(#f)))))))))
                                      g$f$8521$1c1CVa)
                                    g$e$8519$1c1CVa
                                    g$e*$8520$1c1CVa))))
                              g$ls/false$8518$1c1CVa)
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"invalid syntax"
                              g$t$8517$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$8517$1c1CVa
                         '(_ any . each-any)))))
                   g$t$8515$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8515$1c1CVa '(_)))))
         g$stx$8514$1c1CVa))))
   (g$cond-macro$7628$1c1CVa
     g$cond-macro$11067$1c1CVa
     (case-lambda
       ((g$stx$8524$1c1CVa)
        ((case-lambda
           ((g$t$8525$1c1CVa)
            ((case-lambda
               ((g$ls/false$8526$1c1CVa)
                (if g$ls/false$8526$1c1CVa
                  (apply
                    (case-lambda
                      ((g$cls$8527$1c1CVa g$cls*$8528$1c1CVa)
                       (g$bless$7605$1c1CVa
                         ((letrec ((g$f$8529$1c1CVa
                                     (case-lambda
                                       ((g$cls$8530$1c1CVa g$cls*$8531$1c1CVa)
                                        (if (null? g$cls*$8531$1c1CVa)
                                          ((case-lambda
                                             ((g$t$8532$1c1CVa)
                                              ((case-lambda
                                                 ((g$ls/false$8533$1c1CVa)
                                                  (if g$ls/false$8533$1c1CVa
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8534$1c1CVa
                                                           g$e*$8535$1c1CVa)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8534$1c1CVa
                                                             g$e*$8535$1c1CVa))))
                                                      g$ls/false$8533$1c1CVa)
                                                    ((case-lambda
                                                       ((g$t$8536$1c1CVa)
                                                        ((case-lambda
                                                           ((g$ls/false$8537$1c1CVa)
                                                            (if g$ls/false$8537$1c1CVa
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8538$1c1CVa
                                                                     g$p$8539$1c1CVa)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8538$1c1CVa))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8539$1c1CVa
                                                                         '(t))))))
                                                                g$ls/false$8537$1c1CVa)
                                                              ((case-lambda
                                                                 ((g$t$8540$1c1CVa)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8541$1c1CVa)
                                                                      (if g$ls/false$8541$1c1CVa
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8542$1c1CVa)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8542$1c1CVa
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8541$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$t$8543$1c1CVa)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8544$1c1CVa)
                                                                                (if g$ls/false$8544$1c1CVa
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8545$1c1CVa
                                                                                         g$e*$8546$1c1CVa)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8545$1c1CVa
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8546$1c1CVa))))
                                                                                    g$ls/false$8544$1c1CVa)
                                                                                  ((case-lambda
                                                                                     ((g$t$8547$1c1CVa)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8548$1c1CVa)
                                                                                          (if g$ls/false$8548$1c1CVa
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7751$1c1CVa
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8524$1c1CVa)))
                                                                                              g$ls/false$8548$1c1CVa)
                                                                                            (g$syntax-violation$7751$1c1CVa
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8547$1c1CVa))))
                                                                                       (g$syntax-dispatch$7642$1c1CVa
                                                                                         g$t$8547$1c1CVa
                                                                                         '_))))
                                                                                   g$t$8543$1c1CVa))))
                                                                             (g$syntax-dispatch$7642$1c1CVa
                                                                               g$t$8543$1c1CVa
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8540$1c1CVa))))
                                                                   (g$syntax-dispatch$7642$1c1CVa
                                                                     g$t$8540$1c1CVa
                                                                     '(any)))))
                                                               g$t$8536$1c1CVa))))
                                                         (g$syntax-dispatch$7642$1c1CVa
                                                           g$t$8536$1c1CVa
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8532$1c1CVa))))
                                               (g$syntax-dispatch$7642$1c1CVa
                                                 g$t$8532$1c1CVa
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8530$1c1CVa)
                                          ((case-lambda
                                             ((g$t$8549$1c1CVa)
                                              ((case-lambda
                                                 ((g$ls/false$8550$1c1CVa)
                                                  (if g$ls/false$8550$1c1CVa
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8551$1c1CVa
                                                           g$e*$8552$1c1CVa)
                                                         (g$syntax-violation$7751$1c1CVa
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8524$1c1CVa)))
                                                      g$ls/false$8550$1c1CVa)
                                                    ((case-lambda
                                                       ((g$t$8553$1c1CVa)
                                                        ((case-lambda
                                                           ((g$ls/false$8554$1c1CVa)
                                                            (if g$ls/false$8554$1c1CVa
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8555$1c1CVa
                                                                     g$p$8556$1c1CVa)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8555$1c1CVa))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8556$1c1CVa
                                                                         '(t))
                                                                       (g$f$8529$1c1CVa
                                                                         (car g$cls*$8531$1c1CVa)
                                                                         (cdr g$cls*$8531$1c1CVa))))))
                                                                g$ls/false$8554$1c1CVa)
                                                              ((case-lambda
                                                                 ((g$t$8557$1c1CVa)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8558$1c1CVa)
                                                                      (if g$ls/false$8558$1c1CVa
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8559$1c1CVa)
                                                                             (list
                                                                               'or
                                                                               g$e$8559$1c1CVa
                                                                               (g$f$8529$1c1CVa
                                                                                 (car g$cls*$8531$1c1CVa)
                                                                                 (cdr g$cls*$8531$1c1CVa)))))
                                                                          g$ls/false$8558$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$t$8560$1c1CVa)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8561$1c1CVa)
                                                                                (if g$ls/false$8561$1c1CVa
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8562$1c1CVa
                                                                                         g$e*$8563$1c1CVa)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8562$1c1CVa
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8563$1c1CVa)
                                                                                         (g$f$8529$1c1CVa
                                                                                           (car g$cls*$8531$1c1CVa)
                                                                                           (cdr g$cls*$8531$1c1CVa)))))
                                                                                    g$ls/false$8561$1c1CVa)
                                                                                  ((case-lambda
                                                                                     ((g$t$8564$1c1CVa)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8565$1c1CVa)
                                                                                          (if g$ls/false$8565$1c1CVa
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7751$1c1CVa
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8524$1c1CVa)))
                                                                                              g$ls/false$8565$1c1CVa)
                                                                                            (g$syntax-violation$7751$1c1CVa
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8564$1c1CVa))))
                                                                                       (g$syntax-dispatch$7642$1c1CVa
                                                                                         g$t$8564$1c1CVa
                                                                                         '_))))
                                                                                   g$t$8560$1c1CVa))))
                                                                             (g$syntax-dispatch$7642$1c1CVa
                                                                               g$t$8560$1c1CVa
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8557$1c1CVa))))
                                                                   (g$syntax-dispatch$7642$1c1CVa
                                                                     g$t$8557$1c1CVa
                                                                     '(any)))))
                                                               g$t$8553$1c1CVa))))
                                                         (g$syntax-dispatch$7642$1c1CVa
                                                           g$t$8553$1c1CVa
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8549$1c1CVa))))
                                               (g$syntax-dispatch$7642$1c1CVa
                                                 g$t$8549$1c1CVa
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8530$1c1CVa))))))
                            g$f$8529$1c1CVa)
                          g$cls$8527$1c1CVa
                          g$cls*$8528$1c1CVa))))
                    g$ls/false$8526$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8525$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8525$1c1CVa
               '(_ any . each-any)))))
         g$stx$8524$1c1CVa))))
   (g$do-include$7629$1c1CVa
     g$do-include$11068$1c1CVa
     (case-lambda
       ((g$stx$8566$1c1CVa g$id$8567$1c1CVa g$filename$8568$1c1CVa)
        ((case-lambda
           ((g$filename$8569$1c1CVa)
            (begin
              (if (not (if (string? g$filename$8569$1c1CVa)
                         (begin '#f (g$id?$7364$1c1CVa g$id$8567$1c1CVa))
                         '#f))
                (g$syntax-violation$7751$1c1CVa
                  '#f
                  '"invalid syntax"
                  g$stx$8566$1c1CVa)
                (void))
              (cons
                (g$bless$7605$1c1CVa 'begin)
                (g$with-input-from-file$6377$1c1CVa
                  g$filename$8569$1c1CVa
                  (case-lambda
                    (()
                     ((letrec ((g$f$8570$1c1CVa
                                 (case-lambda
                                   ((g$ls$8571$1c1CVa)
                                    ((case-lambda
                                       ((g$x$8572$1c1CVa)
                                        (if (eof-object? g$x$8572$1c1CVa)
                                          (reverse g$ls$8571$1c1CVa)
                                          (g$f$8570$1c1CVa
                                            (cons
                                              (g$datum->stx$7347$1c1CVa
                                                g$id$8567$1c1CVa
                                                g$x$8572$1c1CVa)
                                              g$ls$8571$1c1CVa)))))
                                     (read-annotated))))))
                        g$f$8570$1c1CVa)
                      '()))))))))
         (g$stx->datum$7375$1c1CVa g$filename$8568$1c1CVa)))))
   (g$include-macro$7630$1c1CVa
     g$include-macro$11069$1c1CVa
     (case-lambda
       ((g$e$8573$1c1CVa)
        ((case-lambda
           ((g$t$8574$1c1CVa)
            ((case-lambda
               ((g$ls/false$8575$1c1CVa)
                (if g$ls/false$8575$1c1CVa
                  (apply
                    (case-lambda
                      ((g$id$8576$1c1CVa g$filename$8577$1c1CVa)
                       (g$do-include$7629$1c1CVa
                         g$e$8573$1c1CVa
                         g$id$8576$1c1CVa
                         g$filename$8577$1c1CVa)))
                    g$ls/false$8575$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8574$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8574$1c1CVa '(any any)))))
         g$e$8573$1c1CVa))))
   (g$include-into-macro$7631$1c1CVa
     g$include-into-macro$11070$1c1CVa
     (case-lambda
       ((g$e$8578$1c1CVa)
        ((case-lambda
           ((g$t$8579$1c1CVa)
            ((case-lambda
               ((g$ls/false$8580$1c1CVa)
                (if g$ls/false$8580$1c1CVa
                  (apply
                    (case-lambda
                      ((g$id$8581$1c1CVa g$filename$8582$1c1CVa)
                       (g$do-include$7629$1c1CVa
                         g$e$8578$1c1CVa
                         g$id$8581$1c1CVa
                         g$filename$8582$1c1CVa)))
                    g$ls/false$8580$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8579$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$8579$1c1CVa '(_ any any)))))
         g$e$8578$1c1CVa))))
   (g$syntax-rules-macro$7632$1c1CVa
     g$syntax-rules-macro$11071$1c1CVa
     (case-lambda
       ((g$e$8583$1c1CVa)
        ((case-lambda
           ((g$t$8584$1c1CVa)
            ((case-lambda
               ((g$ls/false$8585$1c1CVa)
                (if g$ls/false$8585$1c1CVa
                  (apply
                    (case-lambda
                      ((g$lits$8586$1c1CVa
                         g$pat*$8587$1c1CVa
                         g$tmp*$8588$1c1CVa)
                       (begin
                         (g$verify-literals$7645$1c1CVa
                           g$lits$8586$1c1CVa
                           g$e$8583$1c1CVa)
                         (g$bless$7605$1c1CVa
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8586$1c1CVa
                                   (map (case-lambda
                                          ((g$pat$8589$1c1CVa g$tmp$8590$1c1CVa)
                                           ((case-lambda
                                              ((g$t$8591$1c1CVa)
                                               ((case-lambda
                                                  ((g$ls/false$8592$1c1CVa)
                                                   (if g$ls/false$8592$1c1CVa
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8593$1c1CVa)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8593$1c1CVa)
                                                            (list
                                                              'syntax
                                                              g$tmp$8590$1c1CVa))))
                                                       g$ls/false$8592$1c1CVa)
                                                     ((case-lambda
                                                        ((g$t$8594$1c1CVa)
                                                         ((case-lambda
                                                            ((g$ls/false$8595$1c1CVa)
                                                             (if g$ls/false$8595$1c1CVa
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7751$1c1CVa
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8583$1c1CVa
                                                                      g$pat$8589$1c1CVa)))
                                                                 g$ls/false$8595$1c1CVa)
                                                               (g$syntax-violation$7751$1c1CVa
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8594$1c1CVa))))
                                                          (g$syntax-dispatch$7642$1c1CVa
                                                            g$t$8594$1c1CVa
                                                            '_))))
                                                      g$t$8591$1c1CVa))))
                                                (g$syntax-dispatch$7642$1c1CVa
                                                  g$t$8591$1c1CVa
                                                  '(_ . any)))))
                                            g$pat$8589$1c1CVa)))
                                        g$pat*$8587$1c1CVa
                                        g$tmp*$8588$1c1CVa)))))))))
                    g$ls/false$8585$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$8584$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$8584$1c1CVa
               '(_ each-any . #(each (any any)))))))
         g$e$8583$1c1CVa))))
   (g$quasiquote-macro$7633$1c1CVa
     g$quasiquote-macro$11072$1c1CVa
     ((case-lambda
        (()
         (letrec* ((g$datum$8596$1c1CVa
                     (case-lambda
                       ((g$x$8727$1c1CVa)
                        (list
                          (g$scheme-stx$7585$1c1CVa 'quote)
                          (g$mkstx$7352$1c1CVa g$x$8727$1c1CVa '() '() '())))))
                   (g$quasicons*$8612$1c1CVa
                     (case-lambda
                       ((g$x$8723$1c1CVa g$y$8724$1c1CVa)
                        ((letrec ((g$f$8725$1c1CVa
                                    (case-lambda
                                      ((g$x$8726$1c1CVa)
                                       (if (null? g$x$8726$1c1CVa)
                                         g$y$8724$1c1CVa
                                         (g$quasicons$8613$1c1CVa
                                           (car g$x$8726$1c1CVa)
                                           (g$f$8725$1c1CVa
                                             (cdr g$x$8726$1c1CVa))))))))
                           g$f$8725$1c1CVa)
                         g$x$8723$1c1CVa))))
                   (g$quasicons$8613$1c1CVa
                     (case-lambda
                       ((g$x$8704$1c1CVa g$y$8705$1c1CVa)
                        ((case-lambda
                           ((g$t$8706$1c1CVa)
                            ((case-lambda
                               ((g$ls/false$8707$1c1CVa)
                                (if g$ls/false$8707$1c1CVa
                                  (apply
                                    (case-lambda
                                      ((g$dy$8708$1c1CVa)
                                       ((case-lambda
                                          ((g$t$8709$1c1CVa)
                                           ((case-lambda
                                              ((g$ls/false$8710$1c1CVa)
                                               (if g$ls/false$8710$1c1CVa
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8711$1c1CVa)
                                                      (list
                                                        (g$scheme-stx$7585$1c1CVa
                                                          'quote)
                                                        (cons
                                                          g$dx$8711$1c1CVa
                                                          g$dy$8708$1c1CVa))))
                                                   g$ls/false$8710$1c1CVa)
                                                 ((case-lambda
                                                    ((g$t$8712$1c1CVa)
                                                     ((case-lambda
                                                        ((g$ls/false$8713$1c1CVa)
                                                         (if g$ls/false$8713$1c1CVa
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8714$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8715$1c1CVa)
                                                                        (if g$ls/false$8715$1c1CVa
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7585$1c1CVa
                                                                                   'list)
                                                                                 g$x$8704$1c1CVa)))
                                                                            g$ls/false$8715$1c1CVa)
                                                                          ((case-lambda
                                                                             ((g$t$8716$1c1CVa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8717$1c1CVa)
                                                                                  (if g$ls/false$8717$1c1CVa
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7585$1c1CVa
                                                                                             'cons)
                                                                                           g$x$8704$1c1CVa
                                                                                           g$y$8705$1c1CVa)))
                                                                                      g$ls/false$8717$1c1CVa)
                                                                                    (g$syntax-violation$7751$1c1CVa
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8716$1c1CVa))))
                                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                                 g$t$8716$1c1CVa
                                                                                 '_))))
                                                                           g$t$8714$1c1CVa))))
                                                                     (g$syntax-dispatch$7642$1c1CVa
                                                                       g$t$8714$1c1CVa
                                                                       '()))))
                                                                 g$dy$8708$1c1CVa)))
                                                             g$ls/false$8713$1c1CVa)
                                                           (g$syntax-violation$7751$1c1CVa
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8712$1c1CVa))))
                                                      (g$syntax-dispatch$7642$1c1CVa
                                                        g$t$8712$1c1CVa
                                                        '_))))
                                                  g$t$8709$1c1CVa))))
                                            (g$syntax-dispatch$7642$1c1CVa
                                              g$t$8709$1c1CVa
                                              '(#(scheme-id quote) any)))))
                                        g$x$8704$1c1CVa)))
                                    g$ls/false$8707$1c1CVa)
                                  ((case-lambda
                                     ((g$t$8718$1c1CVa)
                                      ((case-lambda
                                         ((g$ls/false$8719$1c1CVa)
                                          (if g$ls/false$8719$1c1CVa
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8720$1c1CVa)
                                                 (g$cons*$5496$1c1CVa
                                                   (g$scheme-stx$7585$1c1CVa
                                                     'list)
                                                   g$x$8704$1c1CVa
                                                   g$stuff$8720$1c1CVa)))
                                              g$ls/false$8719$1c1CVa)
                                            ((case-lambda
                                               ((g$t$8721$1c1CVa)
                                                ((case-lambda
                                                   ((g$ls/false$8722$1c1CVa)
                                                    (if g$ls/false$8722$1c1CVa
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7585$1c1CVa
                                                               'cons)
                                                             g$x$8704$1c1CVa
                                                             g$y$8705$1c1CVa)))
                                                        g$ls/false$8722$1c1CVa)
                                                      (g$syntax-violation$7751$1c1CVa
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8721$1c1CVa))))
                                                 (g$syntax-dispatch$7642$1c1CVa
                                                   g$t$8721$1c1CVa
                                                   '_))))
                                             g$t$8718$1c1CVa))))
                                       (g$syntax-dispatch$7642$1c1CVa
                                         g$t$8718$1c1CVa
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8706$1c1CVa))))
                             (g$syntax-dispatch$7642$1c1CVa
                               g$t$8706$1c1CVa
                               '(#(scheme-id quote) any)))))
                         g$y$8705$1c1CVa))))
                   (g$quasiappend$8614$1c1CVa
                     (case-lambda
                       ((g$x$8691$1c1CVa g$y$8692$1c1CVa)
                        ((case-lambda
                           ((g$ls$8693$1c1CVa)
                            (if (null? g$ls$8693$1c1CVa)
                              (list (g$scheme-stx$7585$1c1CVa 'quote) '())
                              (if (null? (cdr g$ls$8693$1c1CVa))
                                (car g$ls$8693$1c1CVa)
                                (g$cons*$5496$1c1CVa
                                  (g$scheme-stx$7585$1c1CVa 'append)
                                  g$ls$8693$1c1CVa)))))
                         ((letrec ((g$f$8694$1c1CVa
                                     (case-lambda
                                       ((g$x$8695$1c1CVa)
                                        (if (null? g$x$8695$1c1CVa)
                                          ((case-lambda
                                             ((g$t$8696$1c1CVa)
                                              ((case-lambda
                                                 ((g$ls/false$8697$1c1CVa)
                                                  (if g$ls/false$8697$1c1CVa
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8697$1c1CVa)
                                                    ((case-lambda
                                                       ((g$t$8698$1c1CVa)
                                                        ((case-lambda
                                                           ((g$ls/false$8699$1c1CVa)
                                                            (if g$ls/false$8699$1c1CVa
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8692$1c1CVa)))
                                                                g$ls/false$8699$1c1CVa)
                                                              (g$syntax-violation$7751$1c1CVa
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8698$1c1CVa))))
                                                         (g$syntax-dispatch$7642$1c1CVa
                                                           g$t$8698$1c1CVa
                                                           '_))))
                                                     g$t$8696$1c1CVa))))
                                               (g$syntax-dispatch$7642$1c1CVa
                                                 g$t$8696$1c1CVa
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8692$1c1CVa)
                                          ((case-lambda
                                             ((g$t$8700$1c1CVa)
                                              ((case-lambda
                                                 ((g$ls/false$8701$1c1CVa)
                                                  (if g$ls/false$8701$1c1CVa
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8694$1c1CVa
                                                           (cdr g$x$8695$1c1CVa))))
                                                      g$ls/false$8701$1c1CVa)
                                                    ((case-lambda
                                                       ((g$t$8702$1c1CVa)
                                                        ((case-lambda
                                                           ((g$ls/false$8703$1c1CVa)
                                                            (if g$ls/false$8703$1c1CVa
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8695$1c1CVa)
                                                                     (g$f$8694$1c1CVa
                                                                       (cdr g$x$8695$1c1CVa)))))
                                                                g$ls/false$8703$1c1CVa)
                                                              (g$syntax-violation$7751$1c1CVa
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8702$1c1CVa))))
                                                         (g$syntax-dispatch$7642$1c1CVa
                                                           g$t$8702$1c1CVa
                                                           '_))))
                                                     g$t$8700$1c1CVa))))
                                               (g$syntax-dispatch$7642$1c1CVa
                                                 g$t$8700$1c1CVa
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8695$1c1CVa)))))))
                            g$f$8694$1c1CVa)
                          g$x$8691$1c1CVa)))))
                   (g$quasivector$8615$1c1CVa
                     (case-lambda
                       ((g$x$8666$1c1CVa)
                        ((case-lambda
                           ((g$pat-x$8667$1c1CVa)
                            ((case-lambda
                               ((g$t$8668$1c1CVa)
                                ((case-lambda
                                   ((g$ls/false$8669$1c1CVa)
                                    (if g$ls/false$8669$1c1CVa
                                      (apply
                                        (case-lambda
                                          ((g$x*$8670$1c1CVa)
                                           (list
                                             (g$scheme-stx$7585$1c1CVa 'quote)
                                             (list->vector g$x*$8670$1c1CVa))))
                                        g$ls/false$8669$1c1CVa)
                                      ((case-lambda
                                         ((g$t$8671$1c1CVa)
                                          ((case-lambda
                                             ((g$ls/false$8672$1c1CVa)
                                              (if g$ls/false$8672$1c1CVa
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8673$1c1CVa
                                                                 (case-lambda
                                                                   ((g$x$8674$1c1CVa
                                                                      g$k$8675$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$t$8676$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8677$1c1CVa)
                                                                            (if g$ls/false$8677$1c1CVa
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8678$1c1CVa)
                                                                                   (g$k$8675$1c1CVa
                                                                                     (map (case-lambda
                                                                                            ((g$x$8679$1c1CVa)
                                                                                             (list
                                                                                               (g$scheme-stx$7585$1c1CVa
                                                                                                 'quote)
                                                                                               g$x$8679$1c1CVa)))
                                                                                          g$x*$8678$1c1CVa))))
                                                                                g$ls/false$8677$1c1CVa)
                                                                              ((case-lambda
                                                                                 ((g$t$8680$1c1CVa)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8681$1c1CVa)
                                                                                      (if g$ls/false$8681$1c1CVa
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8682$1c1CVa)
                                                                                             (g$k$8675$1c1CVa
                                                                                               g$x*$8682$1c1CVa)))
                                                                                          g$ls/false$8681$1c1CVa)
                                                                                        ((case-lambda
                                                                                           ((g$t$8683$1c1CVa)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8684$1c1CVa)
                                                                                                (if g$ls/false$8684$1c1CVa
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8685$1c1CVa
                                                                                                         g$y$8686$1c1CVa)
                                                                                                       (g$f$8673$1c1CVa
                                                                                                         g$y$8686$1c1CVa
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8687$1c1CVa)
                                                                                                            (g$k$8675$1c1CVa
                                                                                                              (cons
                                                                                                                g$x$8685$1c1CVa
                                                                                                                g$ls$8687$1c1CVa)))))))
                                                                                                    g$ls/false$8684$1c1CVa)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8688$1c1CVa)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8689$1c1CVa)
                                                                                                          (if g$ls/false$8689$1c1CVa
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7585$1c1CVa
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8667$1c1CVa)))
                                                                                                              g$ls/false$8689$1c1CVa)
                                                                                                            (g$syntax-violation$7751$1c1CVa
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8688$1c1CVa))))
                                                                                                       (g$syntax-dispatch$7642$1c1CVa
                                                                                                         g$t$8688$1c1CVa
                                                                                                         '_))))
                                                                                                   g$t$8683$1c1CVa))))
                                                                                             (g$syntax-dispatch$7642$1c1CVa
                                                                                               g$t$8683$1c1CVa
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8680$1c1CVa))))
                                                                                   (g$syntax-dispatch$7642$1c1CVa
                                                                                     g$t$8680$1c1CVa
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8676$1c1CVa))))
                                                                         (g$syntax-dispatch$7642$1c1CVa
                                                                           g$t$8676$1c1CVa
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8674$1c1CVa)))))
                                                        g$f$8673$1c1CVa)
                                                      g$x$8666$1c1CVa
                                                      (case-lambda
                                                        ((g$ls$8690$1c1CVa)
                                                         (g$cons*$5496$1c1CVa
                                                           (g$scheme-stx$7585$1c1CVa
                                                             'vector)
                                                           g$ls$8690$1c1CVa))))))
                                                  g$ls/false$8672$1c1CVa)
                                                (g$syntax-violation$7751$1c1CVa
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8671$1c1CVa))))
                                           (g$syntax-dispatch$7642$1c1CVa
                                             g$t$8671$1c1CVa
                                             '_))))
                                       g$t$8668$1c1CVa))))
                                 (g$syntax-dispatch$7642$1c1CVa
                                   g$t$8668$1c1CVa
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8667$1c1CVa)))
                         g$x$8666$1c1CVa))))
                   (g$vquasi$8616$1c1CVa
                     (case-lambda
                       ((g$p$8649$1c1CVa g$lev$8650$1c1CVa)
                        ((case-lambda
                           ((g$t$8651$1c1CVa)
                            ((case-lambda
                               ((g$ls/false$8652$1c1CVa)
                                (if g$ls/false$8652$1c1CVa
                                  (apply
                                    (case-lambda
                                      ((g$p$8653$1c1CVa g$q$8654$1c1CVa)
                                       ((case-lambda
                                          ((g$t$8655$1c1CVa)
                                           ((case-lambda
                                              ((g$ls/false$8656$1c1CVa)
                                               (if g$ls/false$8656$1c1CVa
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8657$1c1CVa)
                                                      (if (= g$lev$8650$1c1CVa
                                                             '0)
                                                        (g$quasicons*$8612$1c1CVa
                                                          g$p$8657$1c1CVa
                                                          (g$vquasi$8616$1c1CVa
                                                            g$q$8654$1c1CVa
                                                            g$lev$8650$1c1CVa))
                                                        (g$quasicons$8613$1c1CVa
                                                          (g$quasicons$8613$1c1CVa
                                                            (g$datum$8596$1c1CVa
                                                              'unquote)
                                                            (g$quasi$8617$1c1CVa
                                                              g$p$8657$1c1CVa
                                                              (- g$lev$8650$1c1CVa
                                                                 '1)))
                                                          (g$vquasi$8616$1c1CVa
                                                            g$q$8654$1c1CVa
                                                            g$lev$8650$1c1CVa)))))
                                                   g$ls/false$8656$1c1CVa)
                                                 ((case-lambda
                                                    ((g$t$8658$1c1CVa)
                                                     ((case-lambda
                                                        ((g$ls/false$8659$1c1CVa)
                                                         (if g$ls/false$8659$1c1CVa
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8660$1c1CVa)
                                                                (if (= g$lev$8650$1c1CVa
                                                                       '0)
                                                                  (g$quasiappend$8614$1c1CVa
                                                                    g$p$8660$1c1CVa
                                                                    (g$vquasi$8616$1c1CVa
                                                                      g$q$8654$1c1CVa
                                                                      g$lev$8650$1c1CVa))
                                                                  (g$quasicons$8613$1c1CVa
                                                                    (g$quasicons$8613$1c1CVa
                                                                      (g$datum$8596$1c1CVa
                                                                        'unquote-splicing)
                                                                      (g$quasi$8617$1c1CVa
                                                                        g$p$8660$1c1CVa
                                                                        (- g$lev$8650$1c1CVa
                                                                           '1)))
                                                                    (g$vquasi$8616$1c1CVa
                                                                      g$q$8654$1c1CVa
                                                                      g$lev$8650$1c1CVa)))))
                                                             g$ls/false$8659$1c1CVa)
                                                           ((case-lambda
                                                              ((g$t$8661$1c1CVa)
                                                               ((case-lambda
                                                                  ((g$ls/false$8662$1c1CVa)
                                                                   (if g$ls/false$8662$1c1CVa
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8663$1c1CVa)
                                                                          (g$quasicons$8613$1c1CVa
                                                                            (g$quasi$8617$1c1CVa
                                                                              g$p$8663$1c1CVa
                                                                              g$lev$8650$1c1CVa)
                                                                            (g$vquasi$8616$1c1CVa
                                                                              g$q$8654$1c1CVa
                                                                              g$lev$8650$1c1CVa))))
                                                                       g$ls/false$8662$1c1CVa)
                                                                     (g$syntax-violation$7751$1c1CVa
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8661$1c1CVa))))
                                                                (g$syntax-dispatch$7642$1c1CVa
                                                                  g$t$8661$1c1CVa
                                                                  'any))))
                                                            g$t$8658$1c1CVa))))
                                                      (g$syntax-dispatch$7642$1c1CVa
                                                        g$t$8658$1c1CVa
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8655$1c1CVa))))
                                            (g$syntax-dispatch$7642$1c1CVa
                                              g$t$8655$1c1CVa
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8653$1c1CVa)))
                                    g$ls/false$8652$1c1CVa)
                                  ((case-lambda
                                     ((g$t$8664$1c1CVa)
                                      ((case-lambda
                                         ((g$ls/false$8665$1c1CVa)
                                          (if g$ls/false$8665$1c1CVa
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7585$1c1CVa
                                                     'quote)
                                                   '())))
                                              g$ls/false$8665$1c1CVa)
                                            (g$syntax-violation$7751$1c1CVa
                                              '#f
                                              '"invalid syntax"
                                              g$t$8664$1c1CVa))))
                                       (g$syntax-dispatch$7642$1c1CVa
                                         g$t$8664$1c1CVa
                                         '()))))
                                   g$t$8651$1c1CVa))))
                             (g$syntax-dispatch$7642$1c1CVa
                               g$t$8651$1c1CVa
                               '(any . any)))))
                         g$p$8649$1c1CVa))))
                   (g$quasi$8617$1c1CVa
                     (case-lambda
                       ((g$p$8622$1c1CVa g$lev$8623$1c1CVa)
                        ((case-lambda
                           ((g$t$8624$1c1CVa)
                            ((case-lambda
                               ((g$ls/false$8625$1c1CVa)
                                (if g$ls/false$8625$1c1CVa
                                  (apply
                                    (case-lambda
                                      ((g$p$8626$1c1CVa)
                                       (if (= g$lev$8623$1c1CVa '0)
                                         g$p$8626$1c1CVa
                                         (g$quasicons$8613$1c1CVa
                                           (g$datum$8596$1c1CVa 'unquote)
                                           (g$quasi$8617$1c1CVa
                                             (list g$p$8626$1c1CVa)
                                             (- g$lev$8623$1c1CVa '1))))))
                                    g$ls/false$8625$1c1CVa)
                                  ((case-lambda
                                     ((g$t$8627$1c1CVa)
                                      ((case-lambda
                                         ((g$ls/false$8628$1c1CVa)
                                          (if g$ls/false$8628$1c1CVa
                                            (apply
                                              (case-lambda
                                                ((g$p$8629$1c1CVa
                                                   g$q$8630$1c1CVa)
                                                 (if (= g$lev$8623$1c1CVa '0)
                                                   (g$quasicons*$8612$1c1CVa
                                                     g$p$8629$1c1CVa
                                                     (g$quasi$8617$1c1CVa
                                                       g$q$8630$1c1CVa
                                                       g$lev$8623$1c1CVa))
                                                   (g$quasicons$8613$1c1CVa
                                                     (g$quasicons$8613$1c1CVa
                                                       (g$datum$8596$1c1CVa
                                                         'unquote)
                                                       (g$quasi$8617$1c1CVa
                                                         g$p$8629$1c1CVa
                                                         (- g$lev$8623$1c1CVa
                                                            '1)))
                                                     (g$quasi$8617$1c1CVa
                                                       g$q$8630$1c1CVa
                                                       g$lev$8623$1c1CVa)))))
                                              g$ls/false$8628$1c1CVa)
                                            ((case-lambda
                                               ((g$t$8631$1c1CVa)
                                                ((case-lambda
                                                   ((g$ls/false$8632$1c1CVa)
                                                    (if g$ls/false$8632$1c1CVa
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8633$1c1CVa
                                                             g$q$8634$1c1CVa)
                                                           (if (= g$lev$8623$1c1CVa
                                                                  '0)
                                                             (g$quasiappend$8614$1c1CVa
                                                               g$p$8633$1c1CVa
                                                               (g$quasi$8617$1c1CVa
                                                                 g$q$8634$1c1CVa
                                                                 g$lev$8623$1c1CVa))
                                                             (g$quasicons$8613$1c1CVa
                                                               (g$quasicons$8613$1c1CVa
                                                                 (g$datum$8596$1c1CVa
                                                                   'unquote-splicing)
                                                                 (g$quasi$8617$1c1CVa
                                                                   g$p$8633$1c1CVa
                                                                   (- g$lev$8623$1c1CVa
                                                                      '1)))
                                                               (g$quasi$8617$1c1CVa
                                                                 g$q$8634$1c1CVa
                                                                 g$lev$8623$1c1CVa)))))
                                                        g$ls/false$8632$1c1CVa)
                                                      ((case-lambda
                                                         ((g$t$8635$1c1CVa)
                                                          ((case-lambda
                                                             ((g$ls/false$8636$1c1CVa)
                                                              (if g$ls/false$8636$1c1CVa
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8637$1c1CVa)
                                                                     (g$quasicons$8613$1c1CVa
                                                                       (g$datum$8596$1c1CVa
                                                                         'quasiquote)
                                                                       (g$quasi$8617$1c1CVa
                                                                         (list
                                                                           g$p$8637$1c1CVa)
                                                                         (+ g$lev$8623$1c1CVa
                                                                            '1)))))
                                                                  g$ls/false$8636$1c1CVa)
                                                                ((case-lambda
                                                                   ((g$t$8638$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8639$1c1CVa)
                                                                        (if g$ls/false$8639$1c1CVa
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8640$1c1CVa
                                                                                 g$q$8641$1c1CVa)
                                                                               (g$quasicons$8613$1c1CVa
                                                                                 (g$quasi$8617$1c1CVa
                                                                                   g$p$8640$1c1CVa
                                                                                   g$lev$8623$1c1CVa)
                                                                                 (g$quasi$8617$1c1CVa
                                                                                   g$q$8641$1c1CVa
                                                                                   g$lev$8623$1c1CVa))))
                                                                            g$ls/false$8639$1c1CVa)
                                                                          ((case-lambda
                                                                             ((g$t$8642$1c1CVa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8643$1c1CVa)
                                                                                  (if (if g$ls/false$8643$1c1CVa
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8644$1c1CVa)
                                                                                               (not (g$stx?$7336$1c1CVa
                                                                                                      g$x$8644$1c1CVa))))
                                                                                            g$ls/false$8643$1c1CVa))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8645$1c1CVa)
                                                                                         (g$quasivector$8615$1c1CVa
                                                                                           (g$vquasi$8616$1c1CVa
                                                                                             g$x$8645$1c1CVa
                                                                                             g$lev$8623$1c1CVa))))
                                                                                      g$ls/false$8643$1c1CVa)
                                                                                    ((case-lambda
                                                                                       ((g$t$8646$1c1CVa)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8647$1c1CVa)
                                                                                            (if g$ls/false$8647$1c1CVa
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8648$1c1CVa)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7585$1c1CVa
                                                                                                       'quote)
                                                                                                     g$p$8648$1c1CVa)))
                                                                                                g$ls/false$8647$1c1CVa)
                                                                                              (g$syntax-violation$7751$1c1CVa
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8646$1c1CVa))))
                                                                                         (g$syntax-dispatch$7642$1c1CVa
                                                                                           g$t$8646$1c1CVa
                                                                                           'any))))
                                                                                     g$t$8642$1c1CVa))))
                                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                                 g$t$8642$1c1CVa
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8638$1c1CVa))))
                                                                     (g$syntax-dispatch$7642$1c1CVa
                                                                       g$t$8638$1c1CVa
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8635$1c1CVa))))
                                                           (g$syntax-dispatch$7642$1c1CVa
                                                             g$t$8635$1c1CVa
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8631$1c1CVa))))
                                                 (g$syntax-dispatch$7642$1c1CVa
                                                   g$t$8631$1c1CVa
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8627$1c1CVa))))
                                       (g$syntax-dispatch$7642$1c1CVa
                                         g$t$8627$1c1CVa
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8624$1c1CVa))))
                             (g$syntax-dispatch$7642$1c1CVa
                               g$t$8624$1c1CVa
                               '(#(scheme-id unquote) any)))))
                         g$p$8622$1c1CVa)))))
           (case-lambda
             ((g$x$8618$1c1CVa)
              ((case-lambda
                 ((g$t$8619$1c1CVa)
                  ((case-lambda
                     ((g$ls/false$8620$1c1CVa)
                      (if g$ls/false$8620$1c1CVa
                        (apply
                          (case-lambda
                            ((g$e$8621$1c1CVa)
                             (g$quasi$8617$1c1CVa g$e$8621$1c1CVa '0)))
                          g$ls/false$8620$1c1CVa)
                        (g$syntax-violation$7751$1c1CVa
                          '#f
                          '"invalid syntax"
                          g$t$8619$1c1CVa))))
                   (g$syntax-dispatch$7642$1c1CVa g$t$8619$1c1CVa '(_ any)))))
               g$x$8618$1c1CVa))))))))
   (g$quasisyntax-macro$7634$1c1CVa
     g$quasisyntax-macro$11073$1c1CVa
     ((case-lambda
        (()
         (letrec* ((g$quasi$8728$1c1CVa
                     (case-lambda
                       ((g$p$8742$1c1CVa g$lev$8743$1c1CVa)
                        ((case-lambda
                           ((g$t$8744$1c1CVa)
                            ((case-lambda
                               ((g$ls/false$8745$1c1CVa)
                                (if g$ls/false$8745$1c1CVa
                                  (apply
                                    (case-lambda
                                      ((g$p$8746$1c1CVa)
                                       (if (= g$lev$8743$1c1CVa '0)
                                         ((case-lambda
                                            ((g$g$8747$1c1CVa)
                                             (values
                                               (list g$g$8747$1c1CVa)
                                               (list g$p$8746$1c1CVa)
                                               g$g$8747$1c1CVa)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8728$1c1CVa
                                                g$p$8746$1c1CVa
                                                (- g$lev$8743$1c1CVa '1))))
                                           (case-lambda
                                             ((g$lhs*$8751$1c1CVa
                                                g$rhs*$8752$1c1CVa
                                                g$p$8753$1c1CVa)
                                              ((case-lambda
                                                 ((g$p$8754$1c1CVa
                                                    g$rhs*$8755$1c1CVa
                                                    g$lhs*$8756$1c1CVa)
                                                  (values
                                                    g$lhs*$8756$1c1CVa
                                                    g$rhs*$8755$1c1CVa
                                                    (list
                                                      'unsyntax
                                                      g$p$8754$1c1CVa))))
                                               g$p$8753$1c1CVa
                                               g$rhs*$8752$1c1CVa
                                               g$lhs*$8751$1c1CVa)))))))
                                    g$ls/false$8745$1c1CVa)
                                  ((case-lambda
                                     ((g$t$8757$1c1CVa)
                                      ((case-lambda
                                         ((g$ls/false$8758$1c1CVa)
                                          (if (if g$ls/false$8758$1c1CVa
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8743$1c1CVa
                                                          '0)))
                                                    g$ls/false$8758$1c1CVa))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7751$1c1CVa
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8742$1c1CVa)))
                                              g$ls/false$8758$1c1CVa)
                                            ((case-lambda
                                               ((g$t$8759$1c1CVa)
                                                ((case-lambda
                                                   ((g$ls/false$8760$1c1CVa)
                                                    (if g$ls/false$8760$1c1CVa
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$8761$1c1CVa
                                                             g$q$8762$1c1CVa)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8728$1c1CVa
                                                                  g$q$8762$1c1CVa
                                                                  g$lev$8743$1c1CVa)))
                                                             (case-lambda
                                                               ((g$lhs*$8766$1c1CVa
                                                                  g$rhs*$8767$1c1CVa
                                                                  g$q$8768$1c1CVa)
                                                                ((case-lambda
                                                                   ((g$q$8769$1c1CVa
                                                                      g$rhs*$8770$1c1CVa
                                                                      g$lhs*$8771$1c1CVa)
                                                                    (if (= g$lev$8743$1c1CVa
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$8772$1c1CVa)
                                                                          (values
                                                                            (append
                                                                              g$g*$8772$1c1CVa
                                                                              g$lhs*$8771$1c1CVa)
                                                                            (append
                                                                              g$p*$8761$1c1CVa
                                                                              g$rhs*$8770$1c1CVa)
                                                                            (append
                                                                              g$g*$8772$1c1CVa
                                                                              g$q$8769$1c1CVa))))
                                                                       (map (case-lambda
                                                                              ((g$x$8773$1c1CVa)
                                                                               (gensym)))
                                                                            g$p*$8761$1c1CVa))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8728$1c1CVa
                                                                             g$p*$8761$1c1CVa
                                                                             (- g$lev$8743$1c1CVa
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8777$1c1CVa
                                                                             g$rhs2*$8778$1c1CVa
                                                                             g$p*$8779$1c1CVa)
                                                                           ((case-lambda
                                                                              ((g$p*$8780$1c1CVa
                                                                                 g$rhs2*$8781$1c1CVa
                                                                                 g$lhs2*$8782$1c1CVa)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8782$1c1CVa
                                                                                   g$lhs*$8771$1c1CVa)
                                                                                 (append
                                                                                   g$rhs2*$8781$1c1CVa
                                                                                   g$rhs*$8770$1c1CVa)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$8780$1c1CVa)
                                                                                   g$q$8769$1c1CVa))))
                                                                            g$p*$8779$1c1CVa
                                                                            g$rhs2*$8778$1c1CVa
                                                                            g$lhs2*$8777$1c1CVa)))))))
                                                                 g$q$8768$1c1CVa
                                                                 g$rhs*$8767$1c1CVa
                                                                 g$lhs*$8766$1c1CVa))))))
                                                        g$ls/false$8760$1c1CVa)
                                                      ((case-lambda
                                                         ((g$t$8783$1c1CVa)
                                                          ((case-lambda
                                                             ((g$ls/false$8784$1c1CVa)
                                                              (if g$ls/false$8784$1c1CVa
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$8785$1c1CVa
                                                                       g$q$8786$1c1CVa)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$8728$1c1CVa
                                                                            g$q$8786$1c1CVa
                                                                            g$lev$8743$1c1CVa)))
                                                                       (case-lambda
                                                                         ((g$lhs*$8790$1c1CVa
                                                                            g$rhs*$8791$1c1CVa
                                                                            g$q$8792$1c1CVa)
                                                                          ((case-lambda
                                                                             ((g$q$8793$1c1CVa
                                                                                g$rhs*$8794$1c1CVa
                                                                                g$lhs*$8795$1c1CVa)
                                                                              (if (= g$lev$8743$1c1CVa
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$8796$1c1CVa)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$8797$1c1CVa)
                                                                                                (cons
                                                                                                  g$g$8797$1c1CVa
                                                                                                  '(...))))
                                                                                             g$g*$8796$1c1CVa)
                                                                                        g$lhs*$8795$1c1CVa)
                                                                                      (append
                                                                                        g$p*$8785$1c1CVa
                                                                                        g$rhs*$8794$1c1CVa)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$8798$1c1CVa)
                                                                                                  (cons
                                                                                                    g$g$8798$1c1CVa
                                                                                                    '(...))))
                                                                                               g$g*$8796$1c1CVa))
                                                                                        g$q$8793$1c1CVa))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$8799$1c1CVa)
                                                                                         (gensym)))
                                                                                      g$p*$8785$1c1CVa))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$8728$1c1CVa
                                                                                       g$p*$8785$1c1CVa
                                                                                       (- g$lev$8743$1c1CVa
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$8803$1c1CVa
                                                                                       g$rhs2*$8804$1c1CVa
                                                                                       g$p*$8805$1c1CVa)
                                                                                     ((case-lambda
                                                                                        ((g$p*$8806$1c1CVa
                                                                                           g$rhs2*$8807$1c1CVa
                                                                                           g$lhs2*$8808$1c1CVa)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$8808$1c1CVa
                                                                                             g$lhs*$8795$1c1CVa)
                                                                                           (append
                                                                                             g$rhs2*$8807$1c1CVa
                                                                                             g$rhs*$8794$1c1CVa)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$8806$1c1CVa)
                                                                                             g$q$8793$1c1CVa))))
                                                                                      g$p*$8805$1c1CVa
                                                                                      g$rhs2*$8804$1c1CVa
                                                                                      g$lhs2*$8803$1c1CVa)))))))
                                                                           g$q$8792$1c1CVa
                                                                           g$rhs*$8791$1c1CVa
                                                                           g$lhs*$8790$1c1CVa))))))
                                                                  g$ls/false$8784$1c1CVa)
                                                                ((case-lambda
                                                                   ((g$t$8809$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8810$1c1CVa)
                                                                        (if (if g$ls/false$8810$1c1CVa
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$8743$1c1CVa
                                                                                        '0)))
                                                                                  g$ls/false$8810$1c1CVa))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$7751$1c1CVa
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$8742$1c1CVa)))
                                                                            g$ls/false$8810$1c1CVa)
                                                                          ((case-lambda
                                                                             ((g$t$8811$1c1CVa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8812$1c1CVa)
                                                                                  (if g$ls/false$8812$1c1CVa
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8813$1c1CVa)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8728$1c1CVa
                                                                                                g$p$8813$1c1CVa
                                                                                                (+ g$lev$8743$1c1CVa
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8817$1c1CVa
                                                                                                g$rhs*$8818$1c1CVa
                                                                                                g$p$8819$1c1CVa)
                                                                                              ((case-lambda
                                                                                                 ((g$p$8820$1c1CVa
                                                                                                    g$rhs*$8821$1c1CVa
                                                                                                    g$lhs*$8822$1c1CVa)
                                                                                                  (values
                                                                                                    g$lhs*$8822$1c1CVa
                                                                                                    g$rhs*$8821$1c1CVa
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$8820$1c1CVa))))
                                                                                               g$p$8819$1c1CVa
                                                                                               g$rhs*$8818$1c1CVa
                                                                                               g$lhs*$8817$1c1CVa))))))
                                                                                      g$ls/false$8812$1c1CVa)
                                                                                    ((case-lambda
                                                                                       ((g$t$8823$1c1CVa)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8824$1c1CVa)
                                                                                            (if g$ls/false$8824$1c1CVa
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8825$1c1CVa
                                                                                                     g$q$8826$1c1CVa)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$8728$1c1CVa
                                                                                                          g$p$8825$1c1CVa
                                                                                                          g$lev$8743$1c1CVa)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8833$1c1CVa
                                                                                                          g$rhs*$8834$1c1CVa
                                                                                                          g$p$8835$1c1CVa)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$8728$1c1CVa
                                                                                                               g$q$8826$1c1CVa
                                                                                                               g$lev$8743$1c1CVa)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$8836$1c1CVa
                                                                                                               g$rhs2*$8837$1c1CVa
                                                                                                               g$q$8838$1c1CVa)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$8839$1c1CVa
                                                                                                                   g$rhs2*$8840$1c1CVa
                                                                                                                   g$lhs2*$8841$1c1CVa
                                                                                                                   g$p$8842$1c1CVa
                                                                                                                   g$rhs*$8843$1c1CVa
                                                                                                                   g$lhs*$8844$1c1CVa)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$8841$1c1CVa
                                                                                                                     g$lhs*$8844$1c1CVa)
                                                                                                                   (append
                                                                                                                     g$rhs2*$8840$1c1CVa
                                                                                                                     g$rhs*$8843$1c1CVa)
                                                                                                                   (cons
                                                                                                                     g$p$8842$1c1CVa
                                                                                                                     g$q$8839$1c1CVa))))
                                                                                                              g$q$8838$1c1CVa
                                                                                                              g$rhs2*$8837$1c1CVa
                                                                                                              g$lhs2*$8836$1c1CVa
                                                                                                              g$p$8835$1c1CVa
                                                                                                              g$rhs*$8834$1c1CVa
                                                                                                              g$lhs*$8833$1c1CVa)))))))))
                                                                                                g$ls/false$8824$1c1CVa)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8845$1c1CVa)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8846$1c1CVa)
                                                                                                      (if g$ls/false$8846$1c1CVa
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$8847$1c1CVa)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$8728$1c1CVa
                                                                                                                    g$x*$8847$1c1CVa
                                                                                                                    g$lev$8743$1c1CVa)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$8851$1c1CVa
                                                                                                                    g$rhs*$8852$1c1CVa
                                                                                                                    g$x*$8853$1c1CVa)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$8854$1c1CVa
                                                                                                                        g$rhs*$8855$1c1CVa
                                                                                                                        g$lhs*$8856$1c1CVa)
                                                                                                                      (values
                                                                                                                        g$lhs*$8856$1c1CVa
                                                                                                                        g$rhs*$8855$1c1CVa
                                                                                                                        (list->vector
                                                                                                                          g$x*$8854$1c1CVa))))
                                                                                                                   g$x*$8853$1c1CVa
                                                                                                                   g$rhs*$8852$1c1CVa
                                                                                                                   g$lhs*$8851$1c1CVa))))))
                                                                                                          g$ls/false$8846$1c1CVa)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$8857$1c1CVa)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$8858$1c1CVa)
                                                                                                                (if g$ls/false$8858$1c1CVa
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$8742$1c1CVa)))
                                                                                                                    g$ls/false$8858$1c1CVa)
                                                                                                                  (g$syntax-violation$7751$1c1CVa
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$8857$1c1CVa))))
                                                                                                             (g$syntax-dispatch$7642$1c1CVa
                                                                                                               g$t$8857$1c1CVa
                                                                                                               '_))))
                                                                                                         g$t$8845$1c1CVa))))
                                                                                                   (g$syntax-dispatch$7642$1c1CVa
                                                                                                     g$t$8845$1c1CVa
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$8823$1c1CVa))))
                                                                                         (g$syntax-dispatch$7642$1c1CVa
                                                                                           g$t$8823$1c1CVa
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$8811$1c1CVa))))
                                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                                 g$t$8811$1c1CVa
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$8809$1c1CVa))))
                                                                     (g$syntax-dispatch$7642$1c1CVa
                                                                       g$t$8809$1c1CVa
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$8783$1c1CVa))))
                                                           (g$syntax-dispatch$7642$1c1CVa
                                                             g$t$8783$1c1CVa
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$8759$1c1CVa))))
                                                 (g$syntax-dispatch$7642$1c1CVa
                                                   g$t$8759$1c1CVa
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8757$1c1CVa))))
                                       (g$syntax-dispatch$7642$1c1CVa
                                         g$t$8757$1c1CVa
                                         '#(scheme-id unsyntax)))))
                                   g$t$8744$1c1CVa))))
                             (g$syntax-dispatch$7642$1c1CVa
                               g$t$8744$1c1CVa
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8742$1c1CVa)))))
           (case-lambda
             ((g$x$8729$1c1CVa)
              ((case-lambda
                 ((g$t$8730$1c1CVa)
                  ((case-lambda
                     ((g$ls/false$8731$1c1CVa)
                      (if g$ls/false$8731$1c1CVa
                        (apply
                          (case-lambda
                            ((g$e$8732$1c1CVa)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8728$1c1CVa g$e$8732$1c1CVa '0)))
                               (case-lambda
                                 ((g$lhs*$8736$1c1CVa
                                    g$rhs*$8737$1c1CVa
                                    g$v$8738$1c1CVa)
                                  ((case-lambda
                                     ((g$v$8739$1c1CVa
                                        g$rhs*$8740$1c1CVa
                                        g$lhs*$8741$1c1CVa)
                                      (g$bless$7605$1c1CVa
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8740$1c1CVa)
                                          '()
                                          (list
                                            g$lhs*$8741$1c1CVa
                                            (list 'syntax g$v$8739$1c1CVa))))))
                                   g$v$8738$1c1CVa
                                   g$rhs*$8737$1c1CVa
                                   g$lhs*$8736$1c1CVa))))))
                          g$ls/false$8731$1c1CVa)
                        (g$syntax-violation$7751$1c1CVa
                          '#f
                          '"invalid syntax"
                          g$t$8730$1c1CVa))))
                   (g$syntax-dispatch$7642$1c1CVa g$t$8730$1c1CVa '(_ any)))))
               g$x$8729$1c1CVa))))))))
   (g$define-struct-macro$7635$1c1CVa
     g$define-struct-macro$11074$1c1CVa
     (case-lambda
       ((g$stx$8859$1c1CVa)
        (g$syntax-violation$7751$1c1CVa
          '#f
          '"define-struct not supported"
          g$stx$8859$1c1CVa))))
   (g$define-record-type-macro$7636$1c1CVa
     g$define-record-type-macro$11075$1c1CVa
     (case-lambda
       ((g$x$8860$1c1CVa)
        (letrec* ((g$id$8861$1c1CVa
                    (case-lambda
                      ((g$ctxt$9113$1c1CVa . g$str*$9114$1c1CVa)
                       (g$datum->syntax$7753$1c1CVa
                         g$ctxt$9113$1c1CVa
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9115$1c1CVa)
                                     (if (symbol? g$x$9115$1c1CVa)
                                       (symbol->string g$x$9115$1c1CVa)
                                       (if (string? g$x$9115$1c1CVa)
                                         g$x$9115$1c1CVa
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9114$1c1CVa)))))))
                  (g$get-record-name$8862$1c1CVa
                    (case-lambda
                      ((g$spec$9104$1c1CVa)
                       ((case-lambda
                          ((g$t$9105$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$9106$1c1CVa)
                               (if g$ls/false$9106$1c1CVa
                                 (apply
                                   (case-lambda
                                     ((g$foo$9107$1c1CVa
                                        g$make-foo$9108$1c1CVa
                                        g$foo?$9109$1c1CVa)
                                      g$foo$9107$1c1CVa))
                                   g$ls/false$9106$1c1CVa)
                                 ((case-lambda
                                    ((g$t$9110$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$9111$1c1CVa)
                                         (if g$ls/false$9111$1c1CVa
                                           (apply
                                             (case-lambda
                                               ((g$foo$9112$1c1CVa)
                                                g$foo$9112$1c1CVa))
                                             g$ls/false$9111$1c1CVa)
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"invalid syntax"
                                             g$t$9110$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$9110$1c1CVa
                                        'any))))
                                  g$t$9105$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$9105$1c1CVa
                              '(any any any)))))
                        g$spec$9104$1c1CVa))))
                  (g$get-record-constructor-name$8863$1c1CVa
                    (case-lambda
                      ((g$spec$9094$1c1CVa)
                       ((case-lambda
                          ((g$t$9095$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$9096$1c1CVa)
                               (if g$ls/false$9096$1c1CVa
                                 (apply
                                   (case-lambda
                                     ((g$foo$9097$1c1CVa
                                        g$make-foo$9098$1c1CVa
                                        g$foo?$9099$1c1CVa)
                                      g$make-foo$9098$1c1CVa))
                                   g$ls/false$9096$1c1CVa)
                                 ((case-lambda
                                    ((g$t$9100$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$9101$1c1CVa)
                                         (if (if g$ls/false$9101$1c1CVa
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9102$1c1CVa)
                                                      (g$id?$7364$1c1CVa
                                                        g$foo$9102$1c1CVa)))
                                                   g$ls/false$9101$1c1CVa))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9103$1c1CVa)
                                                (g$id$8861$1c1CVa
                                                  g$foo$9103$1c1CVa
                                                  '"make-"
                                                  (g$stx->datum$7375$1c1CVa
                                                    g$foo$9103$1c1CVa))))
                                             g$ls/false$9101$1c1CVa)
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"invalid syntax"
                                             g$t$9100$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$9100$1c1CVa
                                        'any))))
                                  g$t$9095$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$9095$1c1CVa
                              '(any any any)))))
                        g$spec$9094$1c1CVa))))
                  (g$get-record-predicate-name$8864$1c1CVa
                    (case-lambda
                      ((g$spec$9084$1c1CVa)
                       ((case-lambda
                          ((g$t$9085$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$9086$1c1CVa)
                               (if g$ls/false$9086$1c1CVa
                                 (apply
                                   (case-lambda
                                     ((g$foo$9087$1c1CVa
                                        g$make-foo$9088$1c1CVa
                                        g$foo?$9089$1c1CVa)
                                      g$foo?$9089$1c1CVa))
                                   g$ls/false$9086$1c1CVa)
                                 ((case-lambda
                                    ((g$t$9090$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$9091$1c1CVa)
                                         (if (if g$ls/false$9091$1c1CVa
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9092$1c1CVa)
                                                      (g$id?$7364$1c1CVa
                                                        g$foo$9092$1c1CVa)))
                                                   g$ls/false$9091$1c1CVa))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9093$1c1CVa)
                                                (g$id$8861$1c1CVa
                                                  g$foo$9093$1c1CVa
                                                  (g$stx->datum$7375$1c1CVa
                                                    g$foo$9093$1c1CVa)
                                                  '"?")))
                                             g$ls/false$9091$1c1CVa)
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"invalid syntax"
                                             g$t$9090$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$9090$1c1CVa
                                        'any))))
                                  g$t$9085$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$9085$1c1CVa
                              '(any any any)))))
                        g$spec$9084$1c1CVa))))
                  (g$get-clause$8865$1c1CVa
                    (case-lambda
                      ((g$id$9075$1c1CVa g$ls$9076$1c1CVa)
                       ((case-lambda
                          ((g$t$9077$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$9078$1c1CVa)
                               (if g$ls/false$9078$1c1CVa
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9078$1c1CVa)
                                 ((case-lambda
                                    ((g$t$9079$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$9080$1c1CVa)
                                         (if g$ls/false$9080$1c1CVa
                                           (apply
                                             (case-lambda
                                               ((g$x$9081$1c1CVa
                                                  g$rest$9082$1c1CVa
                                                  g$ls$9083$1c1CVa)
                                                (if (g$free-id=?$7368$1c1CVa
                                                      (g$bless$7605$1c1CVa
                                                        g$id$9075$1c1CVa)
                                                      g$x$9081$1c1CVa)
                                                  (cons
                                                    g$x$9081$1c1CVa
                                                    g$rest$9082$1c1CVa)
                                                  (g$get-clause$8865$1c1CVa
                                                    g$id$9075$1c1CVa
                                                    g$ls$9083$1c1CVa))))
                                             g$ls/false$9080$1c1CVa)
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"invalid syntax"
                                             g$t$9079$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$9079$1c1CVa
                                        '((any . any) . any)))))
                                  g$t$9077$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$9077$1c1CVa
                              '()))))
                        g$ls$9076$1c1CVa))))
                  (g$foo-rtd-code$8866$1c1CVa
                    (case-lambda
                      ((g$name$9034$1c1CVa
                         g$clause*$9035$1c1CVa
                         g$parent-rtd-code$9036$1c1CVa)
                       (letrec* ((g$convert-field-spec*$9037$1c1CVa
                                   (case-lambda
                                     ((g$ls$9062$1c1CVa)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$9063$1c1CVa)
                                                ((case-lambda
                                                   ((g$t$9064$1c1CVa)
                                                    ((case-lambda
                                                       ((g$ls/false$9065$1c1CVa)
                                                        (if g$ls/false$9065$1c1CVa
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$9066$1c1CVa
                                                                 g$rest$9067$1c1CVa)
                                                               (list
                                                                 'mutable
                                                                 g$name$9066$1c1CVa)))
                                                            g$ls/false$9065$1c1CVa)
                                                          ((case-lambda
                                                             ((g$t$9068$1c1CVa)
                                                              ((case-lambda
                                                                 ((g$ls/false$9069$1c1CVa)
                                                                  (if g$ls/false$9069$1c1CVa
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$9070$1c1CVa
                                                                           g$rest$9071$1c1CVa)
                                                                         (list
                                                                           'immutable
                                                                           g$name$9070$1c1CVa)))
                                                                      g$ls/false$9069$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$t$9072$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9073$1c1CVa)
                                                                            (if g$ls/false$9073$1c1CVa
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$9074$1c1CVa)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$9074$1c1CVa)))
                                                                                g$ls/false$9073$1c1CVa)
                                                                              (g$syntax-violation$7751$1c1CVa
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9072$1c1CVa))))
                                                                         (g$syntax-dispatch$7642$1c1CVa
                                                                           g$t$9072$1c1CVa
                                                                           'any))))
                                                                     g$t$9068$1c1CVa))))
                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                 g$t$9068$1c1CVa
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$9064$1c1CVa))))
                                                     (g$syntax-dispatch$7642$1c1CVa
                                                       g$t$9064$1c1CVa
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$9063$1c1CVa)))
                                             g$ls$9062$1c1CVa))))))
                         ((case-lambda
                            ((g$uid-code$9038$1c1CVa
                               g$sealed?$9039$1c1CVa
                               g$opaque?$9040$1c1CVa
                               g$fields$9041$1c1CVa)
                             (g$bless$7605$1c1CVa
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9034$1c1CVa)
                                 g$parent-rtd-code$9036$1c1CVa
                                 g$uid-code$9038$1c1CVa
                                 g$sealed?$9039$1c1CVa
                                 g$opaque?$9040$1c1CVa
                                 g$fields$9041$1c1CVa))))
                          ((case-lambda
                             ((g$t$9042$1c1CVa)
                              ((case-lambda
                                 ((g$ls/false$9043$1c1CVa)
                                  (if g$ls/false$9043$1c1CVa
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9043$1c1CVa)
                                    ((case-lambda
                                       ((g$t$9044$1c1CVa)
                                        ((case-lambda
                                           ((g$ls/false$9045$1c1CVa)
                                            (if g$ls/false$9045$1c1CVa
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9046$1c1CVa)
                                                   (list
                                                     'quote
                                                     g$uid$9046$1c1CVa)))
                                                g$ls/false$9045$1c1CVa)
                                              ((case-lambda
                                                 ((g$t$9047$1c1CVa)
                                                  ((case-lambda
                                                     ((g$ls/false$9048$1c1CVa)
                                                      (if g$ls/false$9048$1c1CVa
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9048$1c1CVa)
                                                        (g$syntax-violation$7751$1c1CVa
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9047$1c1CVa))))
                                                   (g$syntax-dispatch$7642$1c1CVa
                                                     g$t$9047$1c1CVa
                                                     '_))))
                                               g$t$9044$1c1CVa))))
                                         (g$syntax-dispatch$7642$1c1CVa
                                           g$t$9044$1c1CVa
                                           '(_ any)))))
                                     g$t$9042$1c1CVa))))
                               (g$syntax-dispatch$7642$1c1CVa
                                 g$t$9042$1c1CVa
                                 '(_)))))
                           (g$get-clause$8865$1c1CVa
                             'nongenerative
                             g$clause*$9035$1c1CVa))
                          ((case-lambda
                             ((g$t$9049$1c1CVa)
                              ((case-lambda
                                 ((g$ls/false$9050$1c1CVa)
                                  (if g$ls/false$9050$1c1CVa
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9050$1c1CVa)
                                    ((case-lambda
                                       ((g$t$9051$1c1CVa)
                                        ((case-lambda
                                           ((g$ls/false$9052$1c1CVa)
                                            (if g$ls/false$9052$1c1CVa
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9052$1c1CVa)
                                              (g$syntax-violation$7751$1c1CVa
                                                '#f
                                                '"invalid syntax"
                                                g$t$9051$1c1CVa))))
                                         (g$syntax-dispatch$7642$1c1CVa
                                           g$t$9051$1c1CVa
                                           '_))))
                                     g$t$9049$1c1CVa))))
                               (g$syntax-dispatch$7642$1c1CVa
                                 g$t$9049$1c1CVa
                                 '(_ #(atom #t))))))
                           (g$get-clause$8865$1c1CVa
                             'sealed
                             g$clause*$9035$1c1CVa))
                          ((case-lambda
                             ((g$t$9053$1c1CVa)
                              ((case-lambda
                                 ((g$ls/false$9054$1c1CVa)
                                  (if g$ls/false$9054$1c1CVa
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9054$1c1CVa)
                                    ((case-lambda
                                       ((g$t$9055$1c1CVa)
                                        ((case-lambda
                                           ((g$ls/false$9056$1c1CVa)
                                            (if g$ls/false$9056$1c1CVa
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9056$1c1CVa)
                                              (g$syntax-violation$7751$1c1CVa
                                                '#f
                                                '"invalid syntax"
                                                g$t$9055$1c1CVa))))
                                         (g$syntax-dispatch$7642$1c1CVa
                                           g$t$9055$1c1CVa
                                           '_))))
                                     g$t$9053$1c1CVa))))
                               (g$syntax-dispatch$7642$1c1CVa
                                 g$t$9053$1c1CVa
                                 '(_ #(atom #t))))))
                           (g$get-clause$8865$1c1CVa
                             'opaque
                             g$clause*$9035$1c1CVa))
                          ((case-lambda
                             ((g$t$9057$1c1CVa)
                              ((case-lambda
                                 ((g$ls/false$9058$1c1CVa)
                                  (if g$ls/false$9058$1c1CVa
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9059$1c1CVa)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9037$1c1CVa
                                             g$field-spec*$9059$1c1CVa))))
                                      g$ls/false$9058$1c1CVa)
                                    ((case-lambda
                                       ((g$t$9060$1c1CVa)
                                        ((case-lambda
                                           ((g$ls/false$9061$1c1CVa)
                                            (if g$ls/false$9061$1c1CVa
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9061$1c1CVa)
                                              (g$syntax-violation$7751$1c1CVa
                                                '#f
                                                '"invalid syntax"
                                                g$t$9060$1c1CVa))))
                                         (g$syntax-dispatch$7642$1c1CVa
                                           g$t$9060$1c1CVa
                                           '_))))
                                     g$t$9057$1c1CVa))))
                               (g$syntax-dispatch$7642$1c1CVa
                                 g$t$9057$1c1CVa
                                 '(_ . each-any)))))
                           (g$get-clause$8865$1c1CVa
                             'fields
                             g$clause*$9035$1c1CVa)))))))
                  (g$parent-rtd-code$8867$1c1CVa
                    (case-lambda
                      ((g$clause*$9022$1c1CVa)
                       ((case-lambda
                          ((g$t$9023$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$9024$1c1CVa)
                               (if g$ls/false$9024$1c1CVa
                                 (apply
                                   (case-lambda
                                     ((g$name$9025$1c1CVa)
                                      (list
                                        'record-type-descriptor
                                        g$name$9025$1c1CVa)))
                                   g$ls/false$9024$1c1CVa)
                                 ((case-lambda
                                    ((g$t$9026$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$9027$1c1CVa)
                                         (if g$ls/false$9027$1c1CVa
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9028$1c1CVa)
                                                    ((case-lambda
                                                       ((g$ls/false$9029$1c1CVa)
                                                        (if g$ls/false$9029$1c1CVa
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9030$1c1CVa
                                                                 g$rcd$9031$1c1CVa)
                                                               g$rtd$9030$1c1CVa))
                                                            g$ls/false$9029$1c1CVa)
                                                          ((case-lambda
                                                             ((g$t$9032$1c1CVa)
                                                              ((case-lambda
                                                                 ((g$ls/false$9033$1c1CVa)
                                                                  (if g$ls/false$9033$1c1CVa
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9033$1c1CVa)
                                                                    (g$syntax-violation$7751$1c1CVa
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9032$1c1CVa))))
                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                 g$t$9032$1c1CVa
                                                                 '#(atom #f)))))
                                                           g$t$9028$1c1CVa))))
                                                     (g$syntax-dispatch$7642$1c1CVa
                                                       g$t$9028$1c1CVa
                                                       '(_ any any)))))
                                                 (g$get-clause$8865$1c1CVa
                                                   'parent-rtd
                                                   g$clause*$9022$1c1CVa))))
                                             g$ls/false$9027$1c1CVa)
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"invalid syntax"
                                             g$t$9026$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$9026$1c1CVa
                                        '#(atom #f)))))
                                  g$t$9023$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$9023$1c1CVa
                              '(_ any)))))
                        (g$get-clause$8865$1c1CVa
                          'parent
                          g$clause*$9022$1c1CVa)))))
                  (g$parent-rcd-code$8868$1c1CVa
                    (case-lambda
                      ((g$clause*$9010$1c1CVa)
                       ((case-lambda
                          ((g$t$9011$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$9012$1c1CVa)
                               (if g$ls/false$9012$1c1CVa
                                 (apply
                                   (case-lambda
                                     ((g$name$9013$1c1CVa)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9013$1c1CVa)))
                                   g$ls/false$9012$1c1CVa)
                                 ((case-lambda
                                    ((g$t$9014$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$9015$1c1CVa)
                                         (if g$ls/false$9015$1c1CVa
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9016$1c1CVa)
                                                    ((case-lambda
                                                       ((g$ls/false$9017$1c1CVa)
                                                        (if g$ls/false$9017$1c1CVa
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9018$1c1CVa
                                                                 g$rcd$9019$1c1CVa)
                                                               g$rcd$9019$1c1CVa))
                                                            g$ls/false$9017$1c1CVa)
                                                          ((case-lambda
                                                             ((g$t$9020$1c1CVa)
                                                              ((case-lambda
                                                                 ((g$ls/false$9021$1c1CVa)
                                                                  (if g$ls/false$9021$1c1CVa
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9021$1c1CVa)
                                                                    (g$syntax-violation$7751$1c1CVa
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9020$1c1CVa))))
                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                 g$t$9020$1c1CVa
                                                                 '#(atom #f)))))
                                                           g$t$9016$1c1CVa))))
                                                     (g$syntax-dispatch$7642$1c1CVa
                                                       g$t$9016$1c1CVa
                                                       '(_ any any)))))
                                                 (g$get-clause$8865$1c1CVa
                                                   'parent-rtd
                                                   g$clause*$9010$1c1CVa))))
                                             g$ls/false$9015$1c1CVa)
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"invalid syntax"
                                             g$t$9014$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$9014$1c1CVa
                                        '#(atom #f)))))
                                  g$t$9011$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$9011$1c1CVa
                              '(_ any)))))
                        (g$get-clause$8865$1c1CVa
                          'parent
                          g$clause*$9010$1c1CVa)))))
                  (g$foo-rcd-code$8869$1c1CVa
                    (case-lambda
                      ((g$clause*$9006$1c1CVa
                         g$foo-rtd$9007$1c1CVa
                         g$protocol$9008$1c1CVa
                         g$parent-rcd-code$9009$1c1CVa)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9007$1c1CVa
                         g$parent-rcd-code$9009$1c1CVa
                         g$protocol$9008$1c1CVa))))
                  (g$get-protocol-code$8870$1c1CVa
                    (case-lambda
                      ((g$clause*$9000$1c1CVa)
                       ((case-lambda
                          ((g$t$9001$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$9002$1c1CVa)
                               (if g$ls/false$9002$1c1CVa
                                 (apply
                                   (case-lambda
                                     ((g$expr$9003$1c1CVa) g$expr$9003$1c1CVa))
                                   g$ls/false$9002$1c1CVa)
                                 ((case-lambda
                                    ((g$t$9004$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$9005$1c1CVa)
                                         (if g$ls/false$9005$1c1CVa
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9005$1c1CVa)
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"invalid syntax"
                                             g$t$9004$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$9004$1c1CVa
                                        '_))))
                                  g$t$9001$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$9001$1c1CVa
                              '(_ any)))))
                        (g$get-clause$8865$1c1CVa
                          'protocol
                          g$clause*$9000$1c1CVa)))))
                  (g$get-fields$8871$1c1CVa
                    (case-lambda
                      ((g$clause*$8991$1c1CVa)
                       ((case-lambda
                          ((g$t$8992$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$8993$1c1CVa)
                               (if g$ls/false$8993$1c1CVa
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8993$1c1CVa)
                                 ((case-lambda
                                    ((g$t$8994$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$8995$1c1CVa)
                                         (if g$ls/false$8995$1c1CVa
                                           (apply
                                             (case-lambda
                                               ((g$f*$8996$1c1CVa)
                                                g$f*$8996$1c1CVa))
                                             g$ls/false$8995$1c1CVa)
                                           ((case-lambda
                                              ((g$t$8997$1c1CVa)
                                               ((case-lambda
                                                  ((g$ls/false$8998$1c1CVa)
                                                   (if g$ls/false$8998$1c1CVa
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8999$1c1CVa)
                                                          (g$get-fields$8871$1c1CVa
                                                            g$rest$8999$1c1CVa)))
                                                       g$ls/false$8998$1c1CVa)
                                                     (g$syntax-violation$7751$1c1CVa
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8997$1c1CVa))))
                                                (g$syntax-dispatch$7642$1c1CVa
                                                  g$t$8997$1c1CVa
                                                  '(_ . any)))))
                                            g$t$8994$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$8994$1c1CVa
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8992$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$8992$1c1CVa
                              '()))))
                        g$clause*$8991$1c1CVa))))
                  (g$get-mutator-indices$8872$1c1CVa
                    (case-lambda
                      ((g$fields$8979$1c1CVa)
                       ((letrec ((g$f$8980$1c1CVa
                                   (case-lambda
                                     ((g$fields$8981$1c1CVa g$i$8982$1c1CVa)
                                      ((case-lambda
                                         ((g$t$8983$1c1CVa)
                                          ((case-lambda
                                             ((g$ls/false$8984$1c1CVa)
                                              (if g$ls/false$8984$1c1CVa
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8984$1c1CVa)
                                                ((case-lambda
                                                   ((g$t$8985$1c1CVa)
                                                    ((case-lambda
                                                       ((g$ls/false$8986$1c1CVa)
                                                        (if g$ls/false$8986$1c1CVa
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8987$1c1CVa)
                                                               (cons
                                                                 g$i$8982$1c1CVa
                                                                 (g$f$8980$1c1CVa
                                                                   g$rest$8987$1c1CVa
                                                                   (+ g$i$8982$1c1CVa
                                                                      '1)))))
                                                            g$ls/false$8986$1c1CVa)
                                                          ((case-lambda
                                                             ((g$t$8988$1c1CVa)
                                                              ((case-lambda
                                                                 ((g$ls/false$8989$1c1CVa)
                                                                  (if g$ls/false$8989$1c1CVa
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8990$1c1CVa)
                                                                         (g$f$8980$1c1CVa
                                                                           g$rest$8990$1c1CVa
                                                                           (+ g$i$8982$1c1CVa
                                                                              '1))))
                                                                      g$ls/false$8989$1c1CVa)
                                                                    (g$syntax-violation$7751$1c1CVa
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8988$1c1CVa))))
                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                 g$t$8988$1c1CVa
                                                                 '(_ . any)))))
                                                           g$t$8985$1c1CVa))))
                                                     (g$syntax-dispatch$7642$1c1CVa
                                                       g$t$8985$1c1CVa
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8983$1c1CVa))))
                                           (g$syntax-dispatch$7642$1c1CVa
                                             g$t$8983$1c1CVa
                                             '()))))
                                       g$fields$8981$1c1CVa)))))
                          g$f$8980$1c1CVa)
                        g$fields$8979$1c1CVa
                        '0))))
                  (g$get-mutators$8873$1c1CVa
                    (case-lambda
                      ((g$foo$8958$1c1CVa g$fields$8959$1c1CVa)
                       (letrec* ((g$gen-name$8960$1c1CVa
                                   (case-lambda
                                     ((g$x$8978$1c1CVa)
                                      (g$datum->syntax$7753$1c1CVa
                                        g$foo$8958$1c1CVa
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7754$1c1CVa
                                                g$foo$8958$1c1CVa))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7754$1c1CVa
                                                g$x$8978$1c1CVa))
                                            '"-set!")))))))
                         ((letrec ((g$f$8961$1c1CVa
                                     (case-lambda
                                       ((g$fields$8962$1c1CVa)
                                        ((case-lambda
                                           ((g$t$8963$1c1CVa)
                                            ((case-lambda
                                               ((g$ls/false$8964$1c1CVa)
                                                (if g$ls/false$8964$1c1CVa
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8964$1c1CVa)
                                                  ((case-lambda
                                                     ((g$t$8965$1c1CVa)
                                                      ((case-lambda
                                                         ((g$ls/false$8966$1c1CVa)
                                                          (if g$ls/false$8966$1c1CVa
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8967$1c1CVa
                                                                   g$accessor$8968$1c1CVa
                                                                   g$mutator$8969$1c1CVa
                                                                   g$rest$8970$1c1CVa)
                                                                 (cons
                                                                   g$mutator$8969$1c1CVa
                                                                   (g$f$8961$1c1CVa
                                                                     g$rest$8970$1c1CVa))))
                                                              g$ls/false$8966$1c1CVa)
                                                            ((case-lambda
                                                               ((g$t$8971$1c1CVa)
                                                                ((case-lambda
                                                                   ((g$ls/false$8972$1c1CVa)
                                                                    (if g$ls/false$8972$1c1CVa
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8973$1c1CVa
                                                                             g$rest$8974$1c1CVa)
                                                                           (cons
                                                                             (g$gen-name$8960$1c1CVa
                                                                               g$name$8973$1c1CVa)
                                                                             (g$f$8961$1c1CVa
                                                                               g$rest$8974$1c1CVa))))
                                                                        g$ls/false$8972$1c1CVa)
                                                                      ((case-lambda
                                                                         ((g$t$8975$1c1CVa)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8976$1c1CVa)
                                                                              (if g$ls/false$8976$1c1CVa
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8977$1c1CVa)
                                                                                     (g$f$8961$1c1CVa
                                                                                       g$rest$8977$1c1CVa)))
                                                                                  g$ls/false$8976$1c1CVa)
                                                                                (g$syntax-violation$7751$1c1CVa
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8975$1c1CVa))))
                                                                           (g$syntax-dispatch$7642$1c1CVa
                                                                             g$t$8975$1c1CVa
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8971$1c1CVa))))
                                                                 (g$syntax-dispatch$7642$1c1CVa
                                                                   g$t$8971$1c1CVa
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8965$1c1CVa))))
                                                       (g$syntax-dispatch$7642$1c1CVa
                                                         g$t$8965$1c1CVa
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8963$1c1CVa))))
                                             (g$syntax-dispatch$7642$1c1CVa
                                               g$t$8963$1c1CVa
                                               '()))))
                                         g$fields$8962$1c1CVa)))))
                            g$f$8961$1c1CVa)
                          g$fields$8959$1c1CVa)))))
                  (g$get-accessors$8874$1c1CVa
                    (case-lambda
                      ((g$foo$8924$1c1CVa g$fields$8925$1c1CVa)
                       (letrec* ((g$gen-name$8926$1c1CVa
                                   (case-lambda
                                     ((g$x$8957$1c1CVa)
                                      (g$datum->syntax$7753$1c1CVa
                                        g$foo$8924$1c1CVa
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7754$1c1CVa
                                                g$foo$8924$1c1CVa))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7754$1c1CVa
                                                g$x$8957$1c1CVa)))))))))
                         (map (case-lambda
                                ((g$field$8927$1c1CVa)
                                 ((case-lambda
                                    ((g$t$8928$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$8929$1c1CVa)
                                         (if (if g$ls/false$8929$1c1CVa
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8930$1c1CVa
                                                        g$accessor$8931$1c1CVa
                                                        g$mutator$8932$1c1CVa)
                                                      (g$id?$7364$1c1CVa
                                                        g$accessor$8931$1c1CVa)))
                                                   g$ls/false$8929$1c1CVa))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8933$1c1CVa
                                                  g$accessor$8934$1c1CVa
                                                  g$mutator$8935$1c1CVa)
                                                g$accessor$8934$1c1CVa))
                                             g$ls/false$8929$1c1CVa)
                                           ((case-lambda
                                              ((g$t$8936$1c1CVa)
                                               ((case-lambda
                                                  ((g$ls/false$8937$1c1CVa)
                                                   (if (if g$ls/false$8937$1c1CVa
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8938$1c1CVa
                                                                  g$accessor$8939$1c1CVa)
                                                                (g$id?$7364$1c1CVa
                                                                  g$accessor$8939$1c1CVa)))
                                                             g$ls/false$8937$1c1CVa))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8940$1c1CVa
                                                            g$accessor$8941$1c1CVa)
                                                          g$accessor$8941$1c1CVa))
                                                       g$ls/false$8937$1c1CVa)
                                                     ((case-lambda
                                                        ((g$t$8942$1c1CVa)
                                                         ((case-lambda
                                                            ((g$ls/false$8943$1c1CVa)
                                                             (if (if g$ls/false$8943$1c1CVa
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8944$1c1CVa)
                                                                          (g$id?$7364$1c1CVa
                                                                            g$name$8944$1c1CVa)))
                                                                       g$ls/false$8943$1c1CVa))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8945$1c1CVa)
                                                                    (g$gen-name$8926$1c1CVa
                                                                      g$name$8945$1c1CVa)))
                                                                 g$ls/false$8943$1c1CVa)
                                                               ((case-lambda
                                                                  ((g$t$8946$1c1CVa)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8947$1c1CVa)
                                                                       (if (if g$ls/false$8947$1c1CVa
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8948$1c1CVa)
                                                                                    (g$id?$7364$1c1CVa
                                                                                      g$name$8948$1c1CVa)))
                                                                                 g$ls/false$8947$1c1CVa))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8949$1c1CVa)
                                                                              (g$gen-name$8926$1c1CVa
                                                                                g$name$8949$1c1CVa)))
                                                                           g$ls/false$8947$1c1CVa)
                                                                         ((case-lambda
                                                                            ((g$t$8950$1c1CVa)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8951$1c1CVa)
                                                                                 (if (if g$ls/false$8951$1c1CVa
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8952$1c1CVa)
                                                                                              (g$id?$7364$1c1CVa
                                                                                                g$name$8952$1c1CVa)))
                                                                                           g$ls/false$8951$1c1CVa))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8953$1c1CVa)
                                                                                        (g$gen-name$8926$1c1CVa
                                                                                          g$name$8953$1c1CVa)))
                                                                                     g$ls/false$8951$1c1CVa)
                                                                                   ((case-lambda
                                                                                      ((g$t$8954$1c1CVa)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8955$1c1CVa)
                                                                                           (if g$ls/false$8955$1c1CVa
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8956$1c1CVa)
                                                                                                  (g$syntax-violation$7751$1c1CVa
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8927$1c1CVa)))
                                                                                               g$ls/false$8955$1c1CVa)
                                                                                             (g$syntax-violation$7751$1c1CVa
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8954$1c1CVa))))
                                                                                        (g$syntax-dispatch$7642$1c1CVa
                                                                                          g$t$8954$1c1CVa
                                                                                          'any))))
                                                                                    g$t$8950$1c1CVa))))
                                                                              (g$syntax-dispatch$7642$1c1CVa
                                                                                g$t$8950$1c1CVa
                                                                                'any))))
                                                                          g$t$8946$1c1CVa))))
                                                                    (g$syntax-dispatch$7642$1c1CVa
                                                                      g$t$8946$1c1CVa
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8942$1c1CVa))))
                                                          (g$syntax-dispatch$7642$1c1CVa
                                                            g$t$8942$1c1CVa
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8936$1c1CVa))))
                                                (g$syntax-dispatch$7642$1c1CVa
                                                  g$t$8936$1c1CVa
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8928$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$8928$1c1CVa
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8927$1c1CVa)))
                              g$fields$8925$1c1CVa)))))
                  (g$enumerate$8875$1c1CVa
                    (case-lambda
                      ((g$ls$8920$1c1CVa)
                       ((letrec ((g$f$8921$1c1CVa
                                   (case-lambda
                                     ((g$ls$8922$1c1CVa g$i$8923$1c1CVa)
                                      (if (null? g$ls$8922$1c1CVa)
                                        '()
                                        (cons
                                          g$i$8923$1c1CVa
                                          (g$f$8921$1c1CVa
                                            (cdr g$ls$8922$1c1CVa)
                                            (+ g$i$8923$1c1CVa '1))))))))
                          g$f$8921$1c1CVa)
                        g$ls$8920$1c1CVa
                        '0))))
                  (g$do-define-record$8876$1c1CVa
                    (case-lambda
                      ((g$namespec$8900$1c1CVa g$clause*$8901$1c1CVa)
                       ((case-lambda
                          ((g$foo$8902$1c1CVa)
                           ((case-lambda
                              ((g$foo-rtd$8903$1c1CVa)
                               ((case-lambda
                                  ((g$foo-rcd$8904$1c1CVa)
                                   ((case-lambda
                                      ((g$protocol$8905$1c1CVa)
                                       ((case-lambda
                                          ((g$make-foo$8906$1c1CVa)
                                           ((case-lambda
                                              ((g$fields$8907$1c1CVa)
                                               ((case-lambda
                                                  ((g$idx*$8908$1c1CVa)
                                                   ((case-lambda
                                                      ((g$foo-x*$8909$1c1CVa)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8910$1c1CVa)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8911$1c1CVa)
                                                               ((case-lambda
                                                                  ((g$foo?$8912$1c1CVa)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8913$1c1CVa)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8914$1c1CVa)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8915$1c1CVa)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7605$1c1CVa
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8903$1c1CVa
                                                                                           g$foo-rtd-code$8913$1c1CVa)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8905$1c1CVa
                                                                                             g$protocol-code$8915$1c1CVa)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8904$1c1CVa
                                                                                               g$foo-rcd-code$8914$1c1CVa)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8902$1c1CVa
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8903$1c1CVa)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8904$1c1CVa)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8912$1c1CVa
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8903$1c1CVa))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8906$1c1CVa
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8904$1c1CVa))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8916$1c1CVa
                                                                                                               g$idx$8917$1c1CVa)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8916$1c1CVa
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8903$1c1CVa
                                                                                                                 g$idx$8917$1c1CVa))))
                                                                                                          g$foo-x*$8909$1c1CVa
                                                                                                          g$idx*$8908$1c1CVa)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8918$1c1CVa
                                                                                                               g$idx$8919$1c1CVa)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8918$1c1CVa
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8903$1c1CVa
                                                                                                                 g$idx$8919$1c1CVa))))
                                                                                                          g$set-foo-x!*$8910$1c1CVa
                                                                                                          g$set-foo-idx*$8911$1c1CVa)))))))))))))))
                                                                            (g$get-protocol-code$8870$1c1CVa
                                                                              g$clause*$8901$1c1CVa))))
                                                                        (g$foo-rcd-code$8869$1c1CVa
                                                                          g$clause*$8901$1c1CVa
                                                                          g$foo-rtd$8903$1c1CVa
                                                                          g$protocol$8905$1c1CVa
                                                                          (g$parent-rcd-code$8868$1c1CVa
                                                                            g$clause*$8901$1c1CVa)))))
                                                                    (g$foo-rtd-code$8866$1c1CVa
                                                                      g$foo$8902$1c1CVa
                                                                      g$clause*$8901$1c1CVa
                                                                      (g$parent-rtd-code$8867$1c1CVa
                                                                        g$clause*$8901$1c1CVa)))))
                                                                (g$get-record-predicate-name$8864$1c1CVa
                                                                  g$namespec$8900$1c1CVa))))
                                                            (g$get-mutator-indices$8872$1c1CVa
                                                              g$fields$8907$1c1CVa))))
                                                        (g$get-mutators$8873$1c1CVa
                                                          g$foo$8902$1c1CVa
                                                          g$fields$8907$1c1CVa))))
                                                    (g$get-accessors$8874$1c1CVa
                                                      g$foo$8902$1c1CVa
                                                      g$fields$8907$1c1CVa))))
                                                (g$enumerate$8875$1c1CVa
                                                  g$fields$8907$1c1CVa))))
                                            (g$get-fields$8871$1c1CVa
                                              g$clause*$8901$1c1CVa))))
                                        (g$get-record-constructor-name$8863$1c1CVa
                                          g$namespec$8900$1c1CVa))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8862$1c1CVa
                          g$namespec$8900$1c1CVa)))))
                  (g$verify-clauses$8877$1c1CVa
                    (case-lambda
                      ((g$x$8882$1c1CVa g$cls*$8883$1c1CVa)
                       (letrec* ((g$valid-kwds$8884$1c1CVa
                                   (map g$bless$7605$1c1CVa
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8885$1c1CVa
                                   (case-lambda
                                     ((g$x$8897$1c1CVa g$ls$8898$1c1CVa)
                                      (if (pair? g$ls$8898$1c1CVa)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8899$1c1CVa)
                                              (if g$t$8899$1c1CVa
                                                g$t$8899$1c1CVa
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8885$1c1CVa
                                                    g$x$8897$1c1CVa
                                                    (cdr g$ls$8898$1c1CVa))))))
                                           (g$free-id=?$7368$1c1CVa
                                             g$x$8897$1c1CVa
                                             (car g$ls$8898$1c1CVa))))
                                        '#f)))))
                         ((letrec ((g$f$8886$1c1CVa
                                     (case-lambda
                                       ((g$cls*$8887$1c1CVa g$seen*$8888$1c1CVa)
                                        (if (not (null? g$cls*$8887$1c1CVa))
                                          ((case-lambda
                                             ((g$t$8889$1c1CVa)
                                              ((case-lambda
                                                 ((g$ls/false$8890$1c1CVa)
                                                  (if g$ls/false$8890$1c1CVa
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8891$1c1CVa
                                                           g$rest$8892$1c1CVa)
                                                         (if ((case-lambda
                                                                ((g$t$8893$1c1CVa)
                                                                 (if g$t$8893$1c1CVa
                                                                   g$t$8893$1c1CVa
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8885$1c1CVa
                                                                            g$kwd$8891$1c1CVa
                                                                            g$valid-kwds$8884$1c1CVa))))))
                                                              (not (g$id?$7364$1c1CVa
                                                                     g$kwd$8891$1c1CVa)))
                                                           (g$syntax-violation$7751$1c1CVa
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8891$1c1CVa)
                                                           (if (g$bound-id-member?$7371$1c1CVa
                                                                 g$kwd$8891$1c1CVa
                                                                 g$seen*$8888$1c1CVa)
                                                             (g$syntax-violation$7751$1c1CVa
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8882$1c1CVa
                                                               g$kwd$8891$1c1CVa)
                                                             (g$f$8886$1c1CVa
                                                               (cdr g$cls*$8887$1c1CVa)
                                                               (cons
                                                                 g$kwd$8891$1c1CVa
                                                                 g$seen*$8888$1c1CVa))))))
                                                      g$ls/false$8890$1c1CVa)
                                                    ((case-lambda
                                                       ((g$t$8894$1c1CVa)
                                                        ((case-lambda
                                                           ((g$ls/false$8895$1c1CVa)
                                                            (if g$ls/false$8895$1c1CVa
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8896$1c1CVa)
                                                                   (g$syntax-violation$7751$1c1CVa
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8896$1c1CVa)))
                                                                g$ls/false$8895$1c1CVa)
                                                              (g$syntax-violation$7751$1c1CVa
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8894$1c1CVa))))
                                                         (g$syntax-dispatch$7642$1c1CVa
                                                           g$t$8894$1c1CVa
                                                           'any))))
                                                     g$t$8889$1c1CVa))))
                                               (g$syntax-dispatch$7642$1c1CVa
                                                 g$t$8889$1c1CVa
                                                 '(any . any)))))
                                           (car g$cls*$8887$1c1CVa))
                                          (void))))))
                            g$f$8886$1c1CVa)
                          g$cls*$8883$1c1CVa
                          '()))))))
          ((case-lambda
             ((g$t$8878$1c1CVa)
              ((case-lambda
                 ((g$ls/false$8879$1c1CVa)
                  (if g$ls/false$8879$1c1CVa
                    (apply
                      (case-lambda
                        ((g$namespec$8880$1c1CVa g$clause*$8881$1c1CVa)
                         (begin
                           (g$verify-clauses$8877$1c1CVa
                             g$x$8860$1c1CVa
                             g$clause*$8881$1c1CVa)
                           (g$do-define-record$8876$1c1CVa
                             g$namespec$8880$1c1CVa
                             g$clause*$8881$1c1CVa))))
                      g$ls/false$8879$1c1CVa)
                    (g$syntax-violation$7751$1c1CVa
                      '#f
                      '"invalid syntax"
                      g$t$8878$1c1CVa))))
               (g$syntax-dispatch$7642$1c1CVa
                 g$t$8878$1c1CVa
                 '(_ any . each-any)))))
           g$x$8860$1c1CVa)))))
   (g$define-condition-type-macro$7637$1c1CVa
     g$define-condition-type-macro$11076$1c1CVa
     (case-lambda
       ((g$x$9116$1c1CVa)
        (letrec* ((g$mkname$9117$1c1CVa
                    (case-lambda
                      ((g$name$9140$1c1CVa g$suffix$9141$1c1CVa)
                       (g$datum->syntax$7753$1c1CVa
                         g$name$9140$1c1CVa
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7754$1c1CVa g$name$9140$1c1CVa))
                             g$suffix$9141$1c1CVa)))))))
          ((case-lambda
             ((g$t$9118$1c1CVa)
              ((case-lambda
                 ((g$ls/false$9119$1c1CVa)
                  (if (if g$ls/false$9119$1c1CVa
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9120$1c1CVa
                                 g$name$9121$1c1CVa
                                 g$super$9122$1c1CVa
                                 g$constructor$9123$1c1CVa
                                 g$predicate$9124$1c1CVa
                                 g$field*$9125$1c1CVa
                                 g$accessor*$9126$1c1CVa)
                               (if (g$id?$7364$1c1CVa g$name$9121$1c1CVa)
                                 (if (g$id?$7364$1c1CVa g$super$9122$1c1CVa)
                                   (if (g$id?$7364$1c1CVa
                                         g$constructor$9123$1c1CVa)
                                     (if (g$id?$7364$1c1CVa
                                           g$predicate$9124$1c1CVa)
                                       (if (g$for-all$5494$1c1CVa
                                             g$id?$7364$1c1CVa
                                             g$field*$9125$1c1CVa)
                                         (begin
                                           '#f
                                           (g$for-all$5494$1c1CVa
                                             g$id?$7364$1c1CVa
                                             g$accessor*$9126$1c1CVa))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9119$1c1CVa))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9127$1c1CVa
                           g$name$9128$1c1CVa
                           g$super$9129$1c1CVa
                           g$constructor$9130$1c1CVa
                           g$predicate$9131$1c1CVa
                           g$field*$9132$1c1CVa
                           g$accessor*$9133$1c1CVa)
                         ((case-lambda
                            ((g$aux-accessor*$9134$1c1CVa)
                             (g$bless$7605$1c1CVa
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9128$1c1CVa
                                         g$constructor$9130$1c1CVa
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9129$1c1CVa)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9135$1c1CVa
                                                       g$aux$9136$1c1CVa)
                                                     (list
                                                       'immutable
                                                       g$field$9135$1c1CVa
                                                       g$aux$9136$1c1CVa)))
                                                  g$field*$9132$1c1CVa
                                                  g$aux-accessor*$9134$1c1CVa))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9131$1c1CVa
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9128$1c1CVa)))
                                     (map (case-lambda
                                            ((g$accessor$9137$1c1CVa
                                               g$aux$9138$1c1CVa)
                                             (list
                                               'define
                                               g$accessor$9137$1c1CVa
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9128$1c1CVa)
                                                 g$aux$9138$1c1CVa))))
                                          g$accessor*$9133$1c1CVa
                                          g$aux-accessor*$9134$1c1CVa)))))))
                          (map (case-lambda ((g$x$9139$1c1CVa) (gensym)))
                               g$accessor*$9133$1c1CVa))))
                      g$ls/false$9119$1c1CVa)
                    (g$syntax-violation$7751$1c1CVa
                      '#f
                      '"invalid syntax"
                      g$t$9118$1c1CVa))))
               (g$syntax-dispatch$7642$1c1CVa
                 g$t$9118$1c1CVa
                 '(any any any any any . #(each (any any)))))))
           g$x$9116$1c1CVa)))))
   (g$incorrect-usage-macro$7638$1c1CVa
     g$incorrect-usage-macro$11077$1c1CVa
     (case-lambda
       ((g$e$9142$1c1CVa)
        (g$syntax-violation$7751$1c1CVa
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9142$1c1CVa))))
   (g$parameterize-macro$7639$1c1CVa
     g$parameterize-macro$11078$1c1CVa
     (case-lambda
       ((g$e$9143$1c1CVa)
        ((case-lambda
           ((g$t$9144$1c1CVa)
            ((case-lambda
               ((g$ls/false$9145$1c1CVa)
                (if g$ls/false$9145$1c1CVa
                  (apply
                    (case-lambda
                      ((g$b$9146$1c1CVa g$b*$9147$1c1CVa)
                       (g$bless$7605$1c1CVa
                         (cons
                           'begin
                           (cons g$b$9146$1c1CVa g$b*$9147$1c1CVa)))))
                    g$ls/false$9145$1c1CVa)
                  ((case-lambda
                     ((g$t$9148$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$9149$1c1CVa)
                          (if g$ls/false$9149$1c1CVa
                            (apply
                              (case-lambda
                                ((g$olhs*$9150$1c1CVa
                                   g$orhs*$9151$1c1CVa
                                   g$b$9152$1c1CVa
                                   g$b*$9153$1c1CVa)
                                 ((case-lambda
                                    ((g$lhs*$9154$1c1CVa g$rhs*$9155$1c1CVa)
                                     (g$bless$7605$1c1CVa
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9154$1c1CVa
                                             g$rhs*$9155$1c1CVa)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$9156$1c1CVa
                                                               g$rhs$9157$1c1CVa)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$9156$1c1CVa)))
                                                               (list
                                                                 g$lhs$9156$1c1CVa
                                                                 g$rhs$9157$1c1CVa)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$9157$1c1CVa
                                                                   '(t))))))
                                                          g$lhs*$9154$1c1CVa
                                                          g$rhs*$9155$1c1CVa)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9152$1c1CVa
                                                         g$b*$9153$1c1CVa)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9150$1c1CVa
                                           g$orhs*$9151$1c1CVa)))))
                                  (g$generate-temporaries$7741$1c1CVa
                                    g$olhs*$9150$1c1CVa)
                                  (g$generate-temporaries$7741$1c1CVa
                                    g$orhs*$9151$1c1CVa))))
                              g$ls/false$9149$1c1CVa)
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"invalid syntax"
                              g$t$9148$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$9148$1c1CVa
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9144$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$9144$1c1CVa
               '(_ () any . each-any)))))
         g$e$9143$1c1CVa))))
   (g$foreign-call-transformer$7640$1c1CVa
     g$foreign-call-transformer$11079$1c1CVa
     (case-lambda
       ((g$e$9158$1c1CVa g$r$9159$1c1CVa g$mr$9160$1c1CVa)
        ((case-lambda
           ((g$t$9161$1c1CVa)
            ((case-lambda
               ((g$ls/false$9162$1c1CVa)
                (if g$ls/false$9162$1c1CVa
                  (apply
                    (case-lambda
                      ((g$name$9163$1c1CVa g$arg*$9164$1c1CVa)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7660$1c1CVa
                             g$name$9163$1c1CVa
                             g$r$9159$1c1CVa
                             g$mr$9160$1c1CVa)
                           (g$chi-expr*$7658$1c1CVa
                             g$arg*$9164$1c1CVa
                             g$r$9159$1c1CVa
                             g$mr$9160$1c1CVa)))))
                    g$ls/false$9162$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$9161$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$9161$1c1CVa
               '(_ any . each-any)))))
         g$e$9158$1c1CVa))))
   (g$convert-pattern$7641$1c1CVa
     g$convert-pattern$11080$1c1CVa
     (case-lambda
       ((g$pattern$9165$1c1CVa g$keys$9166$1c1CVa)
        (letrec* ((g$cvt*$9167$1c1CVa
                    (case-lambda
                      ((g$p*$9247$1c1CVa g$n$9248$1c1CVa g$ids$9249$1c1CVa)
                       (if (null? g$p*$9247$1c1CVa)
                         (values '() g$ids$9249$1c1CVa)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9167$1c1CVa
                                (cdr g$p*$9247$1c1CVa)
                                g$n$9248$1c1CVa
                                g$ids$9249$1c1CVa)))
                           (case-lambda
                             ((g$y$9252$1c1CVa g$ids$9253$1c1CVa)
                              ((case-lambda
                                 ((g$ids$9254$1c1CVa g$y$9255$1c1CVa)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9168$1c1CVa
                                         (car g$p*$9247$1c1CVa)
                                         g$n$9248$1c1CVa
                                         g$ids$9254$1c1CVa)))
                                    (case-lambda
                                      ((g$x$9258$1c1CVa g$ids$9259$1c1CVa)
                                       ((case-lambda
                                          ((g$ids$9260$1c1CVa g$x$9261$1c1CVa)
                                           (values
                                             (cons
                                               g$x$9261$1c1CVa
                                               g$y$9255$1c1CVa)
                                             g$ids$9260$1c1CVa)))
                                        g$ids$9259$1c1CVa
                                        g$x$9258$1c1CVa))))))
                               g$ids$9253$1c1CVa
                               g$y$9252$1c1CVa))))))))
                  (g$cvt$9168$1c1CVa
                    (case-lambda
                      ((g$p$9169$1c1CVa g$n$9170$1c1CVa g$ids$9171$1c1CVa)
                       ((case-lambda
                          ((g$t$9172$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$9173$1c1CVa)
                               (if (if g$ls/false$9173$1c1CVa
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9174$1c1CVa)
                                            (g$id?$7364$1c1CVa
                                              g$id$9174$1c1CVa)))
                                         g$ls/false$9173$1c1CVa))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9175$1c1CVa)
                                      (if (g$bound-id-member?$7371$1c1CVa
                                            g$p$9169$1c1CVa
                                            g$keys$9166$1c1CVa)
                                        (values
                                          (vector 'free-id g$p$9169$1c1CVa)
                                          g$ids$9171$1c1CVa)
                                        (if (g$free-id=?$7368$1c1CVa
                                              g$p$9169$1c1CVa
                                              (g$scheme-stx$7585$1c1CVa '_))
                                          (values '_ g$ids$9171$1c1CVa)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9169$1c1CVa
                                                g$n$9170$1c1CVa)
                                              g$ids$9171$1c1CVa))))))
                                   g$ls/false$9173$1c1CVa)
                                 ((case-lambda
                                    ((g$t$9176$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$9177$1c1CVa)
                                         (if (if g$ls/false$9177$1c1CVa
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9178$1c1CVa
                                                        g$dots$9179$1c1CVa)
                                                      (g$ellipsis?$7643$1c1CVa
                                                        g$dots$9179$1c1CVa)))
                                                   g$ls/false$9177$1c1CVa))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9180$1c1CVa
                                                  g$dots$9181$1c1CVa)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9168$1c1CVa
                                                       g$p$9180$1c1CVa
                                                       (+ g$n$9170$1c1CVa '1)
                                                       g$ids$9171$1c1CVa)))
                                                  (case-lambda
                                                    ((g$p$9184$1c1CVa
                                                       g$ids$9185$1c1CVa)
                                                     ((case-lambda
                                                        ((g$ids$9186$1c1CVa
                                                           g$p$9187$1c1CVa)
                                                         (values
                                                           (if (eq? g$p$9187$1c1CVa
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9187$1c1CVa))
                                                           g$ids$9186$1c1CVa)))
                                                      g$ids$9185$1c1CVa
                                                      g$p$9184$1c1CVa))))))
                                             g$ls/false$9177$1c1CVa)
                                           ((case-lambda
                                              ((g$t$9188$1c1CVa)
                                               ((case-lambda
                                                  ((g$ls/false$9189$1c1CVa)
                                                   (if (if g$ls/false$9189$1c1CVa
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9190$1c1CVa
                                                                  g$dots$9191$1c1CVa
                                                                  g$ys$9192$1c1CVa
                                                                  g$z$9193$1c1CVa)
                                                                (g$ellipsis?$7643$1c1CVa
                                                                  g$dots$9191$1c1CVa)))
                                                             g$ls/false$9189$1c1CVa))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9194$1c1CVa
                                                            g$dots$9195$1c1CVa
                                                            g$ys$9196$1c1CVa
                                                            g$z$9197$1c1CVa)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9168$1c1CVa
                                                                 g$z$9197$1c1CVa
                                                                 g$n$9170$1c1CVa
                                                                 g$ids$9171$1c1CVa)))
                                                            (case-lambda
                                                              ((g$z$9200$1c1CVa
                                                                 g$ids$9201$1c1CVa)
                                                               ((case-lambda
                                                                  ((g$ids$9202$1c1CVa
                                                                     g$z$9203$1c1CVa)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9167$1c1CVa
                                                                          g$ys$9196$1c1CVa
                                                                          g$n$9170$1c1CVa
                                                                          g$ids$9202$1c1CVa)))
                                                                     (case-lambda
                                                                       ((g$ys$9206$1c1CVa
                                                                          g$ids$9207$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$ids$9208$1c1CVa
                                                                              g$ys$9209$1c1CVa)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9168$1c1CVa
                                                                                   g$x$9194$1c1CVa
                                                                                   (+ g$n$9170$1c1CVa
                                                                                      '1)
                                                                                   g$ids$9208$1c1CVa)))
                                                                              (case-lambda
                                                                                ((g$x$9212$1c1CVa
                                                                                   g$ids$9213$1c1CVa)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9214$1c1CVa
                                                                                       g$x$9215$1c1CVa)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9215$1c1CVa
                                                                                         (reverse
                                                                                           g$ys$9209$1c1CVa)
                                                                                         g$z$9203$1c1CVa)
                                                                                       g$ids$9214$1c1CVa)))
                                                                                  g$ids$9213$1c1CVa
                                                                                  g$x$9212$1c1CVa))))))
                                                                         g$ids$9207$1c1CVa
                                                                         g$ys$9206$1c1CVa))))))
                                                                g$ids$9201$1c1CVa
                                                                g$z$9200$1c1CVa))))))
                                                       g$ls/false$9189$1c1CVa)
                                                     ((case-lambda
                                                        ((g$t$9216$1c1CVa)
                                                         ((case-lambda
                                                            ((g$ls/false$9217$1c1CVa)
                                                             (if g$ls/false$9217$1c1CVa
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9218$1c1CVa
                                                                      g$y$9219$1c1CVa)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9168$1c1CVa
                                                                           g$y$9219$1c1CVa
                                                                           g$n$9170$1c1CVa
                                                                           g$ids$9171$1c1CVa)))
                                                                      (case-lambda
                                                                        ((g$y$9222$1c1CVa
                                                                           g$ids$9223$1c1CVa)
                                                                         ((case-lambda
                                                                            ((g$ids$9224$1c1CVa
                                                                               g$y$9225$1c1CVa)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9168$1c1CVa
                                                                                    g$x$9218$1c1CVa
                                                                                    g$n$9170$1c1CVa
                                                                                    g$ids$9224$1c1CVa)))
                                                                               (case-lambda
                                                                                 ((g$x$9228$1c1CVa
                                                                                    g$ids$9229$1c1CVa)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9230$1c1CVa
                                                                                        g$x$9231$1c1CVa)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9231$1c1CVa
                                                                                          g$y$9225$1c1CVa)
                                                                                        g$ids$9230$1c1CVa)))
                                                                                   g$ids$9229$1c1CVa
                                                                                   g$x$9228$1c1CVa))))))
                                                                          g$ids$9223$1c1CVa
                                                                          g$y$9222$1c1CVa))))))
                                                                 g$ls/false$9217$1c1CVa)
                                                               ((case-lambda
                                                                  ((g$t$9232$1c1CVa)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9233$1c1CVa)
                                                                       (if g$ls/false$9233$1c1CVa
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9171$1c1CVa)))
                                                                           g$ls/false$9233$1c1CVa)
                                                                         ((case-lambda
                                                                            ((g$t$9234$1c1CVa)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9235$1c1CVa)
                                                                                 (if (if g$ls/false$9235$1c1CVa
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9236$1c1CVa)
                                                                                              (not (g$stx?$7336$1c1CVa
                                                                                                     g$p$9236$1c1CVa))))
                                                                                           g$ls/false$9235$1c1CVa))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9237$1c1CVa)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9168$1c1CVa
                                                                                               g$p$9237$1c1CVa
                                                                                               g$n$9170$1c1CVa
                                                                                               g$ids$9171$1c1CVa)))
                                                                                          (case-lambda
                                                                                            ((g$p$9240$1c1CVa
                                                                                               g$ids$9241$1c1CVa)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9242$1c1CVa
                                                                                                   g$p$9243$1c1CVa)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9243$1c1CVa)
                                                                                                   g$ids$9242$1c1CVa)))
                                                                                              g$ids$9241$1c1CVa
                                                                                              g$p$9240$1c1CVa))))))
                                                                                     g$ls/false$9235$1c1CVa)
                                                                                   ((case-lambda
                                                                                      ((g$t$9244$1c1CVa)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9245$1c1CVa)
                                                                                           (if g$ls/false$9245$1c1CVa
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9246$1c1CVa)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7375$1c1CVa
                                                                                                        g$datum$9246$1c1CVa))
                                                                                                    g$ids$9171$1c1CVa)))
                                                                                               g$ls/false$9245$1c1CVa)
                                                                                             (g$syntax-violation$7751$1c1CVa
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9244$1c1CVa))))
                                                                                        (g$syntax-dispatch$7642$1c1CVa
                                                                                          g$t$9244$1c1CVa
                                                                                          'any))))
                                                                                    g$t$9234$1c1CVa))))
                                                                              (g$syntax-dispatch$7642$1c1CVa
                                                                                g$t$9234$1c1CVa
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9232$1c1CVa))))
                                                                    (g$syntax-dispatch$7642$1c1CVa
                                                                      g$t$9232$1c1CVa
                                                                      '()))))
                                                                g$t$9216$1c1CVa))))
                                                          (g$syntax-dispatch$7642$1c1CVa
                                                            g$t$9216$1c1CVa
                                                            '(any . any)))))
                                                      g$t$9188$1c1CVa))))
                                                (g$syntax-dispatch$7642$1c1CVa
                                                  g$t$9188$1c1CVa
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9176$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$9176$1c1CVa
                                        '(any any)))))
                                  g$t$9172$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$9172$1c1CVa
                              'any))))
                        g$p$9169$1c1CVa)))))
          (g$cvt$9168$1c1CVa g$pattern$9165$1c1CVa '0 '())))))
   (g$syntax-dispatch$7642$1c1CVa
     g$syntax-dispatch$11081$1c1CVa
     (case-lambda
       ((g$e$9262$1c1CVa g$p$9263$1c1CVa)
        (letrec* ((g$stx^$9264$1c1CVa
                    (case-lambda
                      ((g$e$9372$1c1CVa
                         g$m*$9373$1c1CVa
                         g$s*$9374$1c1CVa
                         g$ae*$9375$1c1CVa)
                       (if (if (null? g$m*$9373$1c1CVa)
                             (if (null? g$s*$9374$1c1CVa)
                               (begin '#f (null? g$ae*$9375$1c1CVa))
                               '#f)
                             '#f)
                         g$e$9372$1c1CVa
                         (g$mkstx$7352$1c1CVa
                           g$e$9372$1c1CVa
                           g$m*$9373$1c1CVa
                           g$s*$9374$1c1CVa
                           g$ae*$9375$1c1CVa)))))
                  (g$match-each$9265$1c1CVa
                    (case-lambda
                      ((g$e$9356$1c1CVa
                         g$p$9357$1c1CVa
                         g$m*$9358$1c1CVa
                         g$s*$9359$1c1CVa
                         g$ae*$9360$1c1CVa)
                       (if (pair? g$e$9356$1c1CVa)
                         ((case-lambda
                            ((g$first$9361$1c1CVa)
                             (if g$first$9361$1c1CVa
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9362$1c1CVa)
                                     (if g$rest$9362$1c1CVa
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9361$1c1CVa
                                           g$rest$9362$1c1CVa))
                                       '#f)))
                                  (g$match-each$9265$1c1CVa
                                    (cdr g$e$9356$1c1CVa)
                                    g$p$9357$1c1CVa
                                    g$m*$9358$1c1CVa
                                    g$s*$9359$1c1CVa
                                    g$ae*$9360$1c1CVa)))
                               '#f)))
                          (g$match$9271$1c1CVa
                            (car g$e$9356$1c1CVa)
                            g$p$9357$1c1CVa
                            g$m*$9358$1c1CVa
                            g$s*$9359$1c1CVa
                            g$ae*$9360$1c1CVa
                            '()))
                         (if (null? g$e$9356$1c1CVa)
                           '()
                           (if (g$stx?$7336$1c1CVa g$e$9356$1c1CVa)
                             (if (not (g$top-marked?$7307$1c1CVa
                                        g$m*$9358$1c1CVa))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7351$1c1CVa
                                        g$m*$9358$1c1CVa
                                        g$s*$9359$1c1CVa
                                        g$ae*$9360$1c1CVa
                                        g$e$9356$1c1CVa)))
                                   (case-lambda
                                     ((g$m*$9366$1c1CVa
                                        g$s*$9367$1c1CVa
                                        g$ae*$9368$1c1CVa)
                                      ((case-lambda
                                         ((g$ae*$9369$1c1CVa
                                            g$s*$9370$1c1CVa
                                            g$m*$9371$1c1CVa)
                                          (g$match-each$9265$1c1CVa
                                            (g$stx-expr$7338$1c1CVa
                                              g$e$9356$1c1CVa)
                                            g$p$9357$1c1CVa
                                            g$m*$9371$1c1CVa
                                            g$s*$9370$1c1CVa
                                            g$ae*$9369$1c1CVa)))
                                       g$ae*$9368$1c1CVa
                                       g$s*$9367$1c1CVa
                                       g$m*$9366$1c1CVa)))))
                               '#f)
                             (if (annotation? g$e$9356$1c1CVa)
                               (g$match-each$9265$1c1CVa
                                 (annotation-expression g$e$9356$1c1CVa)
                                 g$p$9357$1c1CVa
                                 g$m*$9358$1c1CVa
                                 g$s*$9359$1c1CVa
                                 g$ae*$9360$1c1CVa)
                               '#f)))))))
                  (g$match-each+$9266$1c1CVa
                    (case-lambda
                      ((g$e$9324$1c1CVa
                         g$x-pat$9325$1c1CVa
                         g$y-pat$9326$1c1CVa
                         g$z-pat$9327$1c1CVa
                         g$m*$9328$1c1CVa
                         g$s*$9329$1c1CVa
                         g$ae*$9330$1c1CVa
                         g$r$9331$1c1CVa)
                       ((letrec ((g$f$9332$1c1CVa
                                   (case-lambda
                                     ((g$e$9333$1c1CVa
                                        g$m*$9334$1c1CVa
                                        g$s*$9335$1c1CVa
                                        g$ae*$9336$1c1CVa)
                                      (if (pair? g$e$9333$1c1CVa)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9332$1c1CVa
                                               (cdr g$e$9333$1c1CVa)
                                               g$m*$9334$1c1CVa
                                               g$s*$9335$1c1CVa
                                               g$ae*$9336$1c1CVa)))
                                          (case-lambda
                                            ((g$xr*$9340$1c1CVa
                                               g$y-pat$9341$1c1CVa
                                               g$r$9342$1c1CVa)
                                             ((case-lambda
                                                ((g$r$9343$1c1CVa
                                                   g$y-pat$9344$1c1CVa
                                                   g$xr*$9345$1c1CVa)
                                                 (if g$r$9343$1c1CVa
                                                   (if (null?
                                                         g$y-pat$9344$1c1CVa)
                                                     ((case-lambda
                                                        ((g$xr$9346$1c1CVa)
                                                         (if g$xr$9346$1c1CVa
                                                           (values
                                                             (cons
                                                               g$xr$9346$1c1CVa
                                                               g$xr*$9345$1c1CVa)
                                                             g$y-pat$9344$1c1CVa
                                                             g$r$9343$1c1CVa)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9271$1c1CVa
                                                        (car g$e$9333$1c1CVa)
                                                        g$x-pat$9325$1c1CVa
                                                        g$m*$9334$1c1CVa
                                                        g$s*$9335$1c1CVa
                                                        g$ae*$9336$1c1CVa
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9344$1c1CVa)
                                                       (g$match$9271$1c1CVa
                                                         (car g$e$9333$1c1CVa)
                                                         (car g$y-pat$9344$1c1CVa)
                                                         g$m*$9334$1c1CVa
                                                         g$s*$9335$1c1CVa
                                                         g$ae*$9336$1c1CVa
                                                         g$r$9343$1c1CVa)))
                                                   (values '#f '#f '#f))))
                                              g$r$9342$1c1CVa
                                              g$y-pat$9341$1c1CVa
                                              g$xr*$9340$1c1CVa))))
                                        (if (g$stx?$7336$1c1CVa g$e$9333$1c1CVa)
                                          (if (g$top-marked?$7307$1c1CVa
                                                g$m*$9334$1c1CVa)
                                            (values
                                              '()
                                              g$y-pat$9326$1c1CVa
                                              (g$match$9271$1c1CVa
                                                g$e$9333$1c1CVa
                                                g$z-pat$9327$1c1CVa
                                                g$m*$9334$1c1CVa
                                                g$s*$9335$1c1CVa
                                                g$ae*$9336$1c1CVa
                                                g$r$9331$1c1CVa))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7351$1c1CVa
                                                   g$m*$9334$1c1CVa
                                                   g$s*$9335$1c1CVa
                                                   g$ae*$9336$1c1CVa
                                                   g$e$9333$1c1CVa)))
                                              (case-lambda
                                                ((g$m*$9350$1c1CVa
                                                   g$s*$9351$1c1CVa
                                                   g$ae*$9352$1c1CVa)
                                                 ((case-lambda
                                                    ((g$ae*$9353$1c1CVa
                                                       g$s*$9354$1c1CVa
                                                       g$m*$9355$1c1CVa)
                                                     (g$f$9332$1c1CVa
                                                       (g$stx-expr$7338$1c1CVa
                                                         g$e$9333$1c1CVa)
                                                       g$m*$9355$1c1CVa
                                                       g$s*$9354$1c1CVa
                                                       g$ae*$9353$1c1CVa)))
                                                  g$ae*$9352$1c1CVa
                                                  g$s*$9351$1c1CVa
                                                  g$m*$9350$1c1CVa)))))
                                          (if (annotation? g$e$9333$1c1CVa)
                                            (g$f$9332$1c1CVa
                                              (annotation-expression
                                                g$e$9333$1c1CVa)
                                              g$m*$9334$1c1CVa
                                              g$s*$9335$1c1CVa
                                              g$ae*$9336$1c1CVa)
                                            (values
                                              '()
                                              g$y-pat$9326$1c1CVa
                                              (g$match$9271$1c1CVa
                                                g$e$9333$1c1CVa
                                                g$z-pat$9327$1c1CVa
                                                g$m*$9334$1c1CVa
                                                g$s*$9335$1c1CVa
                                                g$ae*$9336$1c1CVa
                                                g$r$9331$1c1CVa)))))))))
                          g$f$9332$1c1CVa)
                        g$e$9324$1c1CVa
                        g$m*$9328$1c1CVa
                        g$s*$9329$1c1CVa
                        g$ae*$9330$1c1CVa))))
                  (g$match-each-any$9267$1c1CVa
                    (case-lambda
                      ((g$e$9310$1c1CVa
                         g$m*$9311$1c1CVa
                         g$s*$9312$1c1CVa
                         g$ae*$9313$1c1CVa)
                       (if (pair? g$e$9310$1c1CVa)
                         ((case-lambda
                            ((g$l$9314$1c1CVa)
                             (if g$l$9314$1c1CVa
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9264$1c1CVa
                                     (car g$e$9310$1c1CVa)
                                     g$m*$9311$1c1CVa
                                     g$s*$9312$1c1CVa
                                     g$ae*$9313$1c1CVa)
                                   g$l$9314$1c1CVa))
                               '#f)))
                          (g$match-each-any$9267$1c1CVa
                            (cdr g$e$9310$1c1CVa)
                            g$m*$9311$1c1CVa
                            g$s*$9312$1c1CVa
                            g$ae*$9313$1c1CVa))
                         (if (null? g$e$9310$1c1CVa)
                           '()
                           (if (g$stx?$7336$1c1CVa g$e$9310$1c1CVa)
                             (if (not (g$top-marked?$7307$1c1CVa
                                        g$m*$9311$1c1CVa))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7351$1c1CVa
                                        g$m*$9311$1c1CVa
                                        g$s*$9312$1c1CVa
                                        g$ae*$9313$1c1CVa
                                        g$e$9310$1c1CVa)))
                                   (case-lambda
                                     ((g$m*$9318$1c1CVa
                                        g$s*$9319$1c1CVa
                                        g$ae*$9320$1c1CVa)
                                      ((case-lambda
                                         ((g$ae*$9321$1c1CVa
                                            g$s*$9322$1c1CVa
                                            g$m*$9323$1c1CVa)
                                          (g$match-each-any$9267$1c1CVa
                                            (g$stx-expr$7338$1c1CVa
                                              g$e$9310$1c1CVa)
                                            g$m*$9323$1c1CVa
                                            g$s*$9322$1c1CVa
                                            g$ae*$9321$1c1CVa)))
                                       g$ae*$9320$1c1CVa
                                       g$s*$9319$1c1CVa
                                       g$m*$9318$1c1CVa)))))
                               '#f)
                             (if (annotation? g$e$9310$1c1CVa)
                               (g$match-each-any$9267$1c1CVa
                                 (annotation-expression g$e$9310$1c1CVa)
                                 g$m*$9311$1c1CVa
                                 g$s*$9312$1c1CVa
                                 g$ae*$9313$1c1CVa)
                               '#f)))))))
                  (g$match-empty$9268$1c1CVa
                    (case-lambda
                      ((g$p$9307$1c1CVa g$r$9308$1c1CVa)
                       (if (null? g$p$9307$1c1CVa)
                         g$r$9308$1c1CVa
                         (if (eq? g$p$9307$1c1CVa '_)
                           g$r$9308$1c1CVa
                           (if (eq? g$p$9307$1c1CVa 'any)
                             (cons '() g$r$9308$1c1CVa)
                             (if (pair? g$p$9307$1c1CVa)
                               (g$match-empty$9268$1c1CVa
                                 (car g$p$9307$1c1CVa)
                                 (g$match-empty$9268$1c1CVa
                                   (cdr g$p$9307$1c1CVa)
                                   g$r$9308$1c1CVa))
                               (if (eq? g$p$9307$1c1CVa 'each-any)
                                 (cons '() g$r$9308$1c1CVa)
                                 ((case-lambda
                                    ((g$t$9309$1c1CVa)
                                     (if (memv g$t$9309$1c1CVa '(each))
                                       (g$match-empty$9268$1c1CVa
                                         (vector-ref g$p$9307$1c1CVa '1)
                                         g$r$9308$1c1CVa)
                                       (if (memv g$t$9309$1c1CVa '(each+))
                                         (g$match-empty$9268$1c1CVa
                                           (vector-ref g$p$9307$1c1CVa '1)
                                           (g$match-empty$9268$1c1CVa
                                             (reverse
                                               (vector-ref g$p$9307$1c1CVa '2))
                                             (g$match-empty$9268$1c1CVa
                                               (vector-ref g$p$9307$1c1CVa '3)
                                               g$r$9308$1c1CVa)))
                                         (if (memv
                                               g$t$9309$1c1CVa
                                               '(free-id atom))
                                           g$r$9308$1c1CVa
                                           (if (memv
                                                 g$t$9309$1c1CVa
                                                 '(scheme-id atom))
                                             g$r$9308$1c1CVa
                                             (if (memv
                                                   g$t$9309$1c1CVa
                                                   '(vector))
                                               (g$match-empty$9268$1c1CVa
                                                 (vector-ref g$p$9307$1c1CVa '1)
                                                 g$r$9308$1c1CVa)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9307$1c1CVa))))))))
                                  (vector-ref g$p$9307$1c1CVa '0))))))))))
                  (g$combine$9269$1c1CVa
                    (case-lambda
                      ((g$r*$9305$1c1CVa g$r$9306$1c1CVa)
                       (if (null? (car g$r*$9305$1c1CVa))
                         g$r$9306$1c1CVa
                         (cons
                           (map car g$r*$9305$1c1CVa)
                           (g$combine$9269$1c1CVa
                             (map cdr g$r*$9305$1c1CVa)
                             g$r$9306$1c1CVa))))))
                  (g$match*$9270$1c1CVa
                    (case-lambda
                      ((g$e$9287$1c1CVa
                         g$p$9288$1c1CVa
                         g$m*$9289$1c1CVa
                         g$s*$9290$1c1CVa
                         g$ae*$9291$1c1CVa
                         g$r$9292$1c1CVa)
                       (if (null? g$p$9288$1c1CVa)
                         (if (null? g$e$9287$1c1CVa)
                           (begin '#f g$r$9292$1c1CVa)
                           '#f)
                         (if (pair? g$p$9288$1c1CVa)
                           (if (pair? g$e$9287$1c1CVa)
                             (begin
                               '#f
                               (g$match$9271$1c1CVa
                                 (car g$e$9287$1c1CVa)
                                 (car g$p$9288$1c1CVa)
                                 g$m*$9289$1c1CVa
                                 g$s*$9290$1c1CVa
                                 g$ae*$9291$1c1CVa
                                 (g$match$9271$1c1CVa
                                   (cdr g$e$9287$1c1CVa)
                                   (cdr g$p$9288$1c1CVa)
                                   g$m*$9289$1c1CVa
                                   g$s*$9290$1c1CVa
                                   g$ae*$9291$1c1CVa
                                   g$r$9292$1c1CVa)))
                             '#f)
                           (if (eq? g$p$9288$1c1CVa 'each-any)
                             ((case-lambda
                                ((g$l$9293$1c1CVa)
                                 (if g$l$9293$1c1CVa
                                   (begin
                                     '#f
                                     (cons g$l$9293$1c1CVa g$r$9292$1c1CVa))
                                   '#f)))
                              (g$match-each-any$9267$1c1CVa
                                g$e$9287$1c1CVa
                                g$m*$9289$1c1CVa
                                g$s*$9290$1c1CVa
                                g$ae*$9291$1c1CVa))
                             ((case-lambda
                                ((g$t$9294$1c1CVa)
                                 (if (memv g$t$9294$1c1CVa '(each))
                                   (if (null? g$e$9287$1c1CVa)
                                     (g$match-empty$9268$1c1CVa
                                       (vector-ref g$p$9288$1c1CVa '1)
                                       g$r$9292$1c1CVa)
                                     ((case-lambda
                                        ((g$r*$9295$1c1CVa)
                                         (if g$r*$9295$1c1CVa
                                           (begin
                                             '#f
                                             (g$combine$9269$1c1CVa
                                               g$r*$9295$1c1CVa
                                               g$r$9292$1c1CVa))
                                           '#f)))
                                      (g$match-each$9265$1c1CVa
                                        g$e$9287$1c1CVa
                                        (vector-ref g$p$9288$1c1CVa '1)
                                        g$m*$9289$1c1CVa
                                        g$s*$9290$1c1CVa
                                        g$ae*$9291$1c1CVa)))
                                   (if (memv g$t$9294$1c1CVa '(free-id))
                                     (if (symbol? g$e$9287$1c1CVa)
                                       (if (g$top-marked?$7307$1c1CVa
                                             g$m*$9289$1c1CVa)
                                         (if (g$free-id=?$7368$1c1CVa
                                               (g$stx^$9264$1c1CVa
                                                 g$e$9287$1c1CVa
                                                 g$m*$9289$1c1CVa
                                                 g$s*$9290$1c1CVa
                                                 g$ae*$9291$1c1CVa)
                                               (vector-ref g$p$9288$1c1CVa '1))
                                           (begin '#f g$r$9292$1c1CVa)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (memv g$t$9294$1c1CVa '(scheme-id))
                                       (if (symbol? g$e$9287$1c1CVa)
                                         (if (g$top-marked?$7307$1c1CVa
                                               g$m*$9289$1c1CVa)
                                           (if (g$free-id=?$7368$1c1CVa
                                                 (g$stx^$9264$1c1CVa
                                                   g$e$9287$1c1CVa
                                                   g$m*$9289$1c1CVa
                                                   g$s*$9290$1c1CVa
                                                   g$ae*$9291$1c1CVa)
                                                 (g$scheme-stx$7585$1c1CVa
                                                   (vector-ref
                                                     g$p$9288$1c1CVa
                                                     '1)))
                                             (begin '#f g$r$9292$1c1CVa)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (memv g$t$9294$1c1CVa '(each+))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9266$1c1CVa
                                                g$e$9287$1c1CVa
                                                (vector-ref g$p$9288$1c1CVa '1)
                                                (vector-ref g$p$9288$1c1CVa '2)
                                                (vector-ref g$p$9288$1c1CVa '3)
                                                g$m*$9289$1c1CVa
                                                g$s*$9290$1c1CVa
                                                g$ae*$9291$1c1CVa
                                                g$r$9292$1c1CVa)))
                                           (case-lambda
                                             ((g$xr*$9299$1c1CVa
                                                g$y-pat$9300$1c1CVa
                                                g$r$9301$1c1CVa)
                                              ((case-lambda
                                                 ((g$r$9302$1c1CVa
                                                    g$y-pat$9303$1c1CVa
                                                    g$xr*$9304$1c1CVa)
                                                  (if g$r$9302$1c1CVa
                                                    (if (null?
                                                          g$y-pat$9303$1c1CVa)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9304$1c1CVa)
                                                          (g$match-empty$9268$1c1CVa
                                                            (vector-ref
                                                              g$p$9288$1c1CVa
                                                              '1)
                                                            g$r$9302$1c1CVa)
                                                          (g$combine$9269$1c1CVa
                                                            g$xr*$9304$1c1CVa
                                                            g$r$9302$1c1CVa)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9301$1c1CVa
                                               g$y-pat$9300$1c1CVa
                                               g$xr*$9299$1c1CVa))))
                                         (if (memv g$t$9294$1c1CVa '(atom))
                                           (if (equal?
                                                 (vector-ref g$p$9288$1c1CVa '1)
                                                 (g$strip$7374$1c1CVa
                                                   g$e$9287$1c1CVa
                                                   g$m*$9289$1c1CVa))
                                             (begin '#f g$r$9292$1c1CVa)
                                             '#f)
                                           (if (memv g$t$9294$1c1CVa '(vector))
                                             (if (vector? g$e$9287$1c1CVa)
                                               (begin
                                                 '#f
                                                 (g$match$9271$1c1CVa
                                                   (vector->list
                                                     g$e$9287$1c1CVa)
                                                   (vector-ref
                                                     g$p$9288$1c1CVa
                                                     '1)
                                                   g$m*$9289$1c1CVa
                                                   g$s*$9290$1c1CVa
                                                   g$ae*$9291$1c1CVa
                                                   g$r$9292$1c1CVa))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9288$1c1CVa)))))))))
                              (vector-ref g$p$9288$1c1CVa '0))))))))
                  (g$match$9271$1c1CVa
                    (case-lambda
                      ((g$e$9272$1c1CVa
                         g$p$9273$1c1CVa
                         g$m*$9274$1c1CVa
                         g$s*$9275$1c1CVa
                         g$ae*$9276$1c1CVa
                         g$r$9277$1c1CVa)
                       (if (not g$r$9277$1c1CVa)
                         '#f
                         (if (eq? g$p$9273$1c1CVa '_)
                           g$r$9277$1c1CVa
                           (if (eq? g$p$9273$1c1CVa 'any)
                             (cons
                               (g$stx^$9264$1c1CVa
                                 g$e$9272$1c1CVa
                                 g$m*$9274$1c1CVa
                                 g$s*$9275$1c1CVa
                                 g$ae*$9276$1c1CVa)
                               g$r$9277$1c1CVa)
                             (if (g$stx?$7336$1c1CVa g$e$9272$1c1CVa)
                               (if (not (g$top-marked?$7307$1c1CVa
                                          g$m*$9274$1c1CVa))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7351$1c1CVa
                                          g$m*$9274$1c1CVa
                                          g$s*$9275$1c1CVa
                                          g$ae*$9276$1c1CVa
                                          g$e$9272$1c1CVa)))
                                     (case-lambda
                                       ((g$m*$9281$1c1CVa
                                          g$s*$9282$1c1CVa
                                          g$ae*$9283$1c1CVa)
                                        ((case-lambda
                                           ((g$ae*$9284$1c1CVa
                                              g$s*$9285$1c1CVa
                                              g$m*$9286$1c1CVa)
                                            (g$match$9271$1c1CVa
                                              (g$stx-expr$7338$1c1CVa
                                                g$e$9272$1c1CVa)
                                              g$p$9273$1c1CVa
                                              g$m*$9286$1c1CVa
                                              g$s*$9285$1c1CVa
                                              g$ae*$9284$1c1CVa
                                              g$r$9277$1c1CVa)))
                                         g$ae*$9283$1c1CVa
                                         g$s*$9282$1c1CVa
                                         g$m*$9281$1c1CVa)))))
                                 '#f)
                               (if (annotation? g$e$9272$1c1CVa)
                                 (g$match$9271$1c1CVa
                                   (annotation-expression g$e$9272$1c1CVa)
                                   g$p$9273$1c1CVa
                                   g$m*$9274$1c1CVa
                                   g$s*$9275$1c1CVa
                                   g$ae*$9276$1c1CVa
                                   g$r$9277$1c1CVa)
                                 (g$match*$9270$1c1CVa
                                   g$e$9272$1c1CVa
                                   g$p$9273$1c1CVa
                                   g$m*$9274$1c1CVa
                                   g$s*$9275$1c1CVa
                                   g$ae*$9276$1c1CVa
                                   g$r$9277$1c1CVa))))))))))
          (g$match$9271$1c1CVa
            g$e$9262$1c1CVa
            g$p$9263$1c1CVa
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$7643$1c1CVa
     g$ellipsis?$11082$1c1CVa
     (case-lambda
       ((g$x$9376$1c1CVa)
        (if (g$id?$7364$1c1CVa g$x$9376$1c1CVa)
          (begin
            '#f
            (g$free-id=?$7368$1c1CVa
              g$x$9376$1c1CVa
              (g$scheme-stx$7585$1c1CVa '...)))
          '#f))))
   (g$underscore?$7644$1c1CVa
     g$underscore?$11083$1c1CVa
     (case-lambda
       ((g$x$9377$1c1CVa)
        (if (g$id?$7364$1c1CVa g$x$9377$1c1CVa)
          (begin
            '#f
            (g$free-id=?$7368$1c1CVa
              g$x$9377$1c1CVa
              (g$scheme-stx$7585$1c1CVa '_)))
          '#f))))
   (g$verify-literals$7645$1c1CVa
     g$verify-literals$11084$1c1CVa
     (case-lambda
       ((g$lits$9378$1c1CVa g$expr$9379$1c1CVa)
        (for-each
          (case-lambda
            ((g$x$9380$1c1CVa)
             (if ((case-lambda
                    ((g$t$9381$1c1CVa)
                     (if g$t$9381$1c1CVa
                       g$t$9381$1c1CVa
                       ((case-lambda
                          ((g$t$9382$1c1CVa)
                           (if g$t$9382$1c1CVa
                             g$t$9382$1c1CVa
                             (begin
                               '#f
                               (g$underscore?$7644$1c1CVa g$x$9380$1c1CVa)))))
                        (g$ellipsis?$7643$1c1CVa g$x$9380$1c1CVa)))))
                  (not (g$id?$7364$1c1CVa g$x$9380$1c1CVa)))
               (g$syntax-violation$7751$1c1CVa
                 '#f
                 '"invalid literal"
                 g$expr$9379$1c1CVa
                 g$x$9380$1c1CVa)
               (void))))
          g$lits$9378$1c1CVa))))
   (g$syntax-case-transformer$7646$1c1CVa
     g$syntax-case-transformer$11085$1c1CVa
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9383$1c1CVa
                     (case-lambda
                       ((g$pvars$9440$1c1CVa
                          g$expr$9441$1c1CVa
                          g$y$9442$1c1CVa
                          g$r$9443$1c1CVa
                          g$mr$9444$1c1CVa)
                        ((case-lambda
                           ((g$ids$9445$1c1CVa g$levels$9446$1c1CVa)
                            ((case-lambda
                               ((g$labels$9447$1c1CVa g$new-vars$9448$1c1CVa)
                                ((case-lambda
                                   ((g$body$9449$1c1CVa)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7295$1c1CVa
                                        '#f
                                        g$new-vars$9448$1c1CVa
                                        g$body$9449$1c1CVa)
                                      g$y$9442$1c1CVa)))
                                 (g$chi-expr$7660$1c1CVa
                                   (g$add-subst$7354$1c1CVa
                                     (g$make-full-rib$7332$1c1CVa
                                       g$ids$9445$1c1CVa
                                       g$labels$9447$1c1CVa)
                                     g$expr$9441$1c1CVa)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9450$1c1CVa
                                               g$var$9451$1c1CVa
                                               g$level$9452$1c1CVa)
                                             (cons
                                               g$label$9450$1c1CVa
                                               (g$make-binding$7380$1c1CVa
                                                 'syntax
                                                 (cons
                                                   g$var$9451$1c1CVa
                                                   g$level$9452$1c1CVa)))))
                                          g$labels$9447$1c1CVa
                                          g$new-vars$9448$1c1CVa
                                          (map cdr g$pvars$9440$1c1CVa))
                                     g$r$9443$1c1CVa)
                                   g$mr$9444$1c1CVa))))
                             (map g$gen-label$7310$1c1CVa g$ids$9445$1c1CVa)
                             (map g$gen-lexical$7308$1c1CVa
                                  g$ids$9445$1c1CVa))))
                         (map car g$pvars$9440$1c1CVa)
                         (map cdr g$pvars$9440$1c1CVa)))))
                   (g$invalid-ids-error$9384$1c1CVa
                     (case-lambda
                       ((g$id*$9434$1c1CVa g$e$9435$1c1CVa g$class$9436$1c1CVa)
                        ((letrec ((g$find$9437$1c1CVa
                                    (case-lambda
                                      ((g$id*$9438$1c1CVa g$ok*$9439$1c1CVa)
                                       (if (null? g$id*$9438$1c1CVa)
                                         (g$syntax-violation$7751$1c1CVa
                                           '#f
                                           '"invalid syntax"
                                           g$e$9435$1c1CVa)
                                         (if (g$id?$7364$1c1CVa
                                               (car g$id*$9438$1c1CVa))
                                           (if (g$bound-id-member?$7371$1c1CVa
                                                 (car g$id*$9438$1c1CVa)
                                                 g$ok*$9439$1c1CVa)
                                             (g$syntax-error$7748$1c1CVa
                                               (car g$id*$9438$1c1CVa)
                                               '"duplicate "
                                               g$class$9436$1c1CVa)
                                             (g$find$9437$1c1CVa
                                               (cdr g$id*$9438$1c1CVa)
                                               (cons
                                                 (car g$id*$9438$1c1CVa)
                                                 g$ok*$9439$1c1CVa)))
                                           (g$syntax-error$7748$1c1CVa
                                             (car g$id*$9438$1c1CVa)
                                             '"invalid "
                                             g$class$9436$1c1CVa)))))))
                           g$find$9437$1c1CVa)
                         g$id*$9434$1c1CVa
                         '()))))
                   (g$gen-clause$9385$1c1CVa
                     (case-lambda
                       ((g$x$9414$1c1CVa
                          g$keys$9415$1c1CVa
                          g$clauses$9416$1c1CVa
                          g$r$9417$1c1CVa
                          g$mr$9418$1c1CVa
                          g$pat$9419$1c1CVa
                          g$fender$9420$1c1CVa
                          g$expr$9421$1c1CVa)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7641$1c1CVa
                               g$pat$9419$1c1CVa
                               g$keys$9415$1c1CVa)))
                          (case-lambda
                            ((g$p$9424$1c1CVa g$pvars$9425$1c1CVa)
                             ((case-lambda
                                ((g$pvars$9426$1c1CVa g$p$9427$1c1CVa)
                                 (if (not (g$distinct-bound-ids?$7370$1c1CVa
                                            (map car g$pvars$9426$1c1CVa)))
                                   (g$invalid-ids-error$9384$1c1CVa
                                     (map car g$pvars$9426$1c1CVa)
                                     g$pat$9419$1c1CVa
                                     '"pattern variable")
                                   (if (not (g$for-all$5494$1c1CVa
                                              (case-lambda
                                                ((g$x$9428$1c1CVa)
                                                 (not (g$ellipsis?$7643$1c1CVa
                                                        (car g$x$9428$1c1CVa)))))
                                              g$pvars$9426$1c1CVa))
                                     (g$syntax-violation$7751$1c1CVa
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9419$1c1CVa)
                                     ((case-lambda
                                        ((g$y$9429$1c1CVa)
                                         ((case-lambda
                                            ((g$test$9430$1c1CVa)
                                             ((case-lambda
                                                ((g$conseq$9431$1c1CVa)
                                                 ((case-lambda
                                                    ((g$altern$9432$1c1CVa)
                                                     (list
                                                       (g$build-lambda$7295$1c1CVa
                                                         '#f
                                                         (list g$y$9429$1c1CVa)
                                                         (list
                                                           'if
                                                           g$test$9430$1c1CVa
                                                           g$conseq$9431$1c1CVa
                                                           g$altern$9432$1c1CVa))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9414$1c1CVa
                                                         (list
                                                           'quote
                                                           g$p$9427$1c1CVa)))))
                                                  (g$gen-syntax-case$9386$1c1CVa
                                                    g$x$9414$1c1CVa
                                                    g$keys$9415$1c1CVa
                                                    g$clauses$9416$1c1CVa
                                                    g$r$9417$1c1CVa
                                                    g$mr$9418$1c1CVa))))
                                              (g$build-dispatch-call$9383$1c1CVa
                                                g$pvars$9426$1c1CVa
                                                g$expr$9421$1c1CVa
                                                g$y$9429$1c1CVa
                                                g$r$9417$1c1CVa
                                                g$mr$9418$1c1CVa))))
                                          (if (eq? g$fender$9420$1c1CVa '#t)
                                            g$y$9429$1c1CVa
                                            ((case-lambda
                                               ((g$call$9433$1c1CVa)
                                                (list
                                                  'if
                                                  g$y$9429$1c1CVa
                                                  g$call$9433$1c1CVa
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9383$1c1CVa
                                               g$pvars$9426$1c1CVa
                                               g$fender$9420$1c1CVa
                                               g$y$9429$1c1CVa
                                               g$r$9417$1c1CVa
                                               g$mr$9418$1c1CVa))))))
                                      (g$gen-lexical$7308$1c1CVa 'tmp))))))
                              g$pvars$9425$1c1CVa
                              g$p$9424$1c1CVa)))))))
                   (g$gen-syntax-case$9386$1c1CVa
                     (case-lambda
                       ((g$x$9397$1c1CVa
                          g$keys$9398$1c1CVa
                          g$clauses$9399$1c1CVa
                          g$r$9400$1c1CVa
                          g$mr$9401$1c1CVa)
                        (if (null? g$clauses$9399$1c1CVa)
                          (list '(primitive syntax-error) g$x$9397$1c1CVa)
                          ((case-lambda
                             ((g$t$9402$1c1CVa)
                              ((case-lambda
                                 ((g$ls/false$9403$1c1CVa)
                                  (if g$ls/false$9403$1c1CVa
                                    (apply
                                      (case-lambda
                                        ((g$pat$9404$1c1CVa g$expr$9405$1c1CVa)
                                         (if (if (g$id?$7364$1c1CVa
                                                   g$pat$9404$1c1CVa)
                                               (if (not (g$bound-id-member?$7371$1c1CVa
                                                          g$pat$9404$1c1CVa
                                                          g$keys$9398$1c1CVa))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7643$1c1CVa
                                                          g$pat$9404$1c1CVa)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7368$1c1CVa
                                                 g$pat$9404$1c1CVa
                                                 (g$scheme-stx$7585$1c1CVa '_))
                                             (g$chi-expr$7660$1c1CVa
                                               g$expr$9405$1c1CVa
                                               g$r$9400$1c1CVa
                                               g$mr$9401$1c1CVa)
                                             ((case-lambda
                                                ((g$lab$9406$1c1CVa
                                                   g$lex$9407$1c1CVa)
                                                 ((case-lambda
                                                    ((g$body$9408$1c1CVa)
                                                     (list
                                                       (g$build-lambda$7295$1c1CVa
                                                         '#f
                                                         (list
                                                           g$lex$9407$1c1CVa)
                                                         g$body$9408$1c1CVa)
                                                       g$x$9397$1c1CVa)))
                                                  (g$chi-expr$7660$1c1CVa
                                                    (g$add-subst$7354$1c1CVa
                                                      (g$make-full-rib$7332$1c1CVa
                                                        (list g$pat$9404$1c1CVa)
                                                        (list
                                                          g$lab$9406$1c1CVa))
                                                      g$expr$9405$1c1CVa)
                                                    (cons
                                                      (cons
                                                        g$lab$9406$1c1CVa
                                                        (g$make-binding$7380$1c1CVa
                                                          'syntax
                                                          (cons
                                                            g$lex$9407$1c1CVa
                                                            '0)))
                                                      g$r$9400$1c1CVa)
                                                    g$mr$9401$1c1CVa))))
                                              (g$gen-label$7310$1c1CVa
                                                g$pat$9404$1c1CVa)
                                              (g$gen-lexical$7308$1c1CVa
                                                g$pat$9404$1c1CVa)))
                                           (g$gen-clause$9385$1c1CVa
                                             g$x$9397$1c1CVa
                                             g$keys$9398$1c1CVa
                                             (cdr g$clauses$9399$1c1CVa)
                                             g$r$9400$1c1CVa
                                             g$mr$9401$1c1CVa
                                             g$pat$9404$1c1CVa
                                             '#t
                                             g$expr$9405$1c1CVa))))
                                      g$ls/false$9403$1c1CVa)
                                    ((case-lambda
                                       ((g$t$9409$1c1CVa)
                                        ((case-lambda
                                           ((g$ls/false$9410$1c1CVa)
                                            (if g$ls/false$9410$1c1CVa
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9411$1c1CVa
                                                     g$fender$9412$1c1CVa
                                                     g$expr$9413$1c1CVa)
                                                   (g$gen-clause$9385$1c1CVa
                                                     g$x$9397$1c1CVa
                                                     g$keys$9398$1c1CVa
                                                     (cdr g$clauses$9399$1c1CVa)
                                                     g$r$9400$1c1CVa
                                                     g$mr$9401$1c1CVa
                                                     g$pat$9411$1c1CVa
                                                     g$fender$9412$1c1CVa
                                                     g$expr$9413$1c1CVa)))
                                                g$ls/false$9410$1c1CVa)
                                              (g$syntax-violation$7751$1c1CVa
                                                '#f
                                                '"invalid syntax"
                                                g$t$9409$1c1CVa))))
                                         (g$syntax-dispatch$7642$1c1CVa
                                           g$t$9409$1c1CVa
                                           '(any any any)))))
                                     g$t$9402$1c1CVa))))
                               (g$syntax-dispatch$7642$1c1CVa
                                 g$t$9402$1c1CVa
                                 '(any any)))))
                           (car g$clauses$9399$1c1CVa)))))))
           (case-lambda
             ((g$e$9387$1c1CVa g$r$9388$1c1CVa g$mr$9389$1c1CVa)
              ((case-lambda
                 ((g$t$9390$1c1CVa)
                  ((case-lambda
                     ((g$ls/false$9391$1c1CVa)
                      (if g$ls/false$9391$1c1CVa
                        (apply
                          (case-lambda
                            ((g$expr$9392$1c1CVa
                               g$keys$9393$1c1CVa
                               g$clauses$9394$1c1CVa)
                             (begin
                               (g$verify-literals$7645$1c1CVa
                                 g$keys$9393$1c1CVa
                                 g$e$9387$1c1CVa)
                               ((case-lambda
                                  ((g$x$9395$1c1CVa)
                                   ((case-lambda
                                      ((g$body$9396$1c1CVa)
                                       (list
                                         (g$build-lambda$7295$1c1CVa
                                           '#f
                                           (list g$x$9395$1c1CVa)
                                           g$body$9396$1c1CVa)
                                         (g$chi-expr$7660$1c1CVa
                                           g$expr$9392$1c1CVa
                                           g$r$9388$1c1CVa
                                           g$mr$9389$1c1CVa))))
                                    (g$gen-syntax-case$9386$1c1CVa
                                      g$x$9395$1c1CVa
                                      g$keys$9393$1c1CVa
                                      g$clauses$9394$1c1CVa
                                      g$r$9388$1c1CVa
                                      g$mr$9389$1c1CVa))))
                                (g$gen-lexical$7308$1c1CVa 'tmp)))))
                          g$ls/false$9391$1c1CVa)
                        (g$syntax-violation$7751$1c1CVa
                          '#f
                          '"invalid syntax"
                          g$t$9390$1c1CVa))))
                   (g$syntax-dispatch$7642$1c1CVa
                     g$t$9390$1c1CVa
                     '(_ any each-any . each-any)))))
               g$e$9387$1c1CVa))))))))
   (g$ellipsis-map$7647$1c1CVa
     g$ellipsis-map$11086$1c1CVa
     (case-lambda
       ((g$proc$9453$1c1CVa g$ls$9454$1c1CVa . g$ls*$9455$1c1CVa)
        (letrec* ((g$who$9456$1c1CVa '...))
          (begin
            (if (not (list? g$ls$9454$1c1CVa))
              (assertion-violation
                g$who$9456$1c1CVa
                '"not a list"
                g$ls$9454$1c1CVa)
              (void))
            (if (not (null? g$ls*$9455$1c1CVa))
              ((case-lambda
                 ((g$n$9457$1c1CVa)
                  (for-each
                    (case-lambda
                      ((g$x$9458$1c1CVa)
                       (begin
                         (if (not (list? g$x$9458$1c1CVa))
                           (assertion-violation
                             g$who$9456$1c1CVa
                             '"not a list"
                             g$x$9458$1c1CVa)
                           (void))
                         (if (not (= (length g$x$9458$1c1CVa) g$n$9457$1c1CVa))
                           (assertion-violation
                             g$who$9456$1c1CVa
                             '"length mismatch"
                             g$ls$9454$1c1CVa
                             g$x$9458$1c1CVa)
                           (void)))))
                    g$ls*$9455$1c1CVa)))
               (length g$ls$9454$1c1CVa))
              (void))
            (apply
              map
              g$proc$9453$1c1CVa
              g$ls$9454$1c1CVa
              g$ls*$9455$1c1CVa))))))
   (g$syntax-transformer$7648$1c1CVa
     g$syntax-transformer$11087$1c1CVa
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9459$1c1CVa
                     (case-lambda
                       ((g$src$9519$1c1CVa
                          g$e$9520$1c1CVa
                          g$r$9521$1c1CVa
                          g$maps$9522$1c1CVa
                          g$ellipsis?$9523$1c1CVa
                          g$vec?$9524$1c1CVa)
                        ((case-lambda
                           ((g$t$9525$1c1CVa)
                            ((case-lambda
                               ((g$ls/false$9526$1c1CVa)
                                (if (if g$ls/false$9526$1c1CVa
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9527$1c1CVa)
                                             (g$ellipsis?$9523$1c1CVa
                                               g$dots$9527$1c1CVa)))
                                          g$ls/false$9526$1c1CVa))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9528$1c1CVa)
                                       (g$syntax-violation$7751$1c1CVa
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9519$1c1CVa)))
                                    g$ls/false$9526$1c1CVa)
                                  ((case-lambda
                                     ((g$t$9529$1c1CVa)
                                      ((case-lambda
                                         ((g$ls/false$9530$1c1CVa)
                                          (if (if g$ls/false$9530$1c1CVa
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9531$1c1CVa)
                                                       (g$id?$7364$1c1CVa
                                                         g$id$9531$1c1CVa)))
                                                    g$ls/false$9530$1c1CVa))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9532$1c1CVa)
                                                 ((case-lambda
                                                    ((g$label$9533$1c1CVa)
                                                     ((case-lambda
                                                        ((g$b$9534$1c1CVa)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7381$1c1CVa
                                                                        g$b$9534$1c1CVa)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9537$1c1CVa)
                                                                        (g$gen-ref$9460$1c1CVa
                                                                          g$src$9519$1c1CVa
                                                                          (car g$var.lev$9537$1c1CVa)
                                                                          (cdr g$var.lev$9537$1c1CVa)
                                                                          g$maps$9522$1c1CVa)))
                                                                     (g$binding-value$7382$1c1CVa
                                                                       g$b$9534$1c1CVa))))
                                                                 (case-lambda
                                                                   ((g$var$9538$1c1CVa
                                                                      g$maps$9539$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$maps$9540$1c1CVa
                                                                          g$var$9541$1c1CVa)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9541$1c1CVa)
                                                                          g$maps$9540$1c1CVa)))
                                                                     g$maps$9539$1c1CVa
                                                                     g$var$9538$1c1CVa))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9520$1c1CVa)
                                                                 g$maps$9522$1c1CVa)))))))
                                                      (g$label->binding$7379$1c1CVa
                                                        g$label$9533$1c1CVa
                                                        g$r$9521$1c1CVa))))
                                                  (g$id->label$7377$1c1CVa
                                                    g$e$9520$1c1CVa))))
                                              g$ls/false$9530$1c1CVa)
                                            ((case-lambda
                                               ((g$t$9542$1c1CVa)
                                                ((case-lambda
                                                   ((g$ls/false$9543$1c1CVa)
                                                    (if (if g$ls/false$9543$1c1CVa
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9544$1c1CVa
                                                                   g$e$9545$1c1CVa)
                                                                 (g$ellipsis?$9523$1c1CVa
                                                                   g$dots$9544$1c1CVa)))
                                                              g$ls/false$9543$1c1CVa))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9546$1c1CVa
                                                             g$e$9547$1c1CVa)
                                                           (if g$vec?$9524$1c1CVa
                                                             (g$syntax-violation$7751$1c1CVa
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9519$1c1CVa)
                                                             (g$gen-syntax$9459$1c1CVa
                                                               g$src$9519$1c1CVa
                                                               g$e$9547$1c1CVa
                                                               g$r$9521$1c1CVa
                                                               g$maps$9522$1c1CVa
                                                               (case-lambda
                                                                 ((g$x$9548$1c1CVa)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9543$1c1CVa)
                                                      ((case-lambda
                                                         ((g$t$9549$1c1CVa)
                                                          ((case-lambda
                                                             ((g$ls/false$9550$1c1CVa)
                                                              (if (if g$ls/false$9550$1c1CVa
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9551$1c1CVa
                                                                             g$dots$9552$1c1CVa
                                                                             g$y$9553$1c1CVa)
                                                                           (g$ellipsis?$9523$1c1CVa
                                                                             g$dots$9552$1c1CVa)))
                                                                        g$ls/false$9550$1c1CVa))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9554$1c1CVa
                                                                       g$dots$9555$1c1CVa
                                                                       g$y$9556$1c1CVa)
                                                                     ((letrec ((g$f$9557$1c1CVa
                                                                                 (case-lambda
                                                                                   ((g$y$9558$1c1CVa
                                                                                      g$k$9559$1c1CVa)
                                                                                    ((case-lambda
                                                                                       ((g$t$9560$1c1CVa)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9561$1c1CVa)
                                                                                            (if g$ls/false$9561$1c1CVa
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9559$1c1CVa
                                                                                                     g$maps$9522$1c1CVa)))
                                                                                                g$ls/false$9561$1c1CVa)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9562$1c1CVa)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9563$1c1CVa)
                                                                                                      (if (if g$ls/false$9563$1c1CVa
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9564$1c1CVa
                                                                                                                     g$y$9565$1c1CVa)
                                                                                                                   (g$ellipsis?$9523$1c1CVa
                                                                                                                     g$dots$9564$1c1CVa)))
                                                                                                                g$ls/false$9563$1c1CVa))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9566$1c1CVa
                                                                                                               g$y$9567$1c1CVa)
                                                                                                             (g$f$9557$1c1CVa
                                                                                                               g$y$9567$1c1CVa
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9568$1c1CVa)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9559$1c1CVa
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9568$1c1CVa))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9571$1c1CVa
                                                                                                                         g$maps$9572$1c1CVa)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9573$1c1CVa
                                                                                                                             g$x$9574$1c1CVa)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9573$1c1CVa))
                                                                                                                             (g$syntax-violation$7751$1c1CVa
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9519$1c1CVa)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9462$1c1CVa
                                                                                                                                 g$x$9574$1c1CVa
                                                                                                                                 (car g$maps$9573$1c1CVa))
                                                                                                                               (cdr g$maps$9573$1c1CVa)))))
                                                                                                                        g$maps$9572$1c1CVa
                                                                                                                        g$x$9571$1c1CVa)))))))))
                                                                                                          g$ls/false$9563$1c1CVa)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9575$1c1CVa)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9576$1c1CVa)
                                                                                                                (if g$ls/false$9576$1c1CVa
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9459$1c1CVa
                                                                                                                              g$src$9519$1c1CVa
                                                                                                                              g$y$9558$1c1CVa
                                                                                                                              g$r$9521$1c1CVa
                                                                                                                              g$maps$9522$1c1CVa
                                                                                                                              g$ellipsis?$9523$1c1CVa
                                                                                                                              g$vec?$9524$1c1CVa)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9579$1c1CVa
                                                                                                                              g$maps$9580$1c1CVa)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9581$1c1CVa
                                                                                                                                  g$y$9582$1c1CVa)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9559$1c1CVa
                                                                                                                                       g$maps$9581$1c1CVa)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9585$1c1CVa
                                                                                                                                       g$maps$9586$1c1CVa)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9587$1c1CVa
                                                                                                                                           g$x$9588$1c1CVa)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9461$1c1CVa
                                                                                                                                             g$x$9588$1c1CVa
                                                                                                                                             g$y$9582$1c1CVa)
                                                                                                                                           g$maps$9587$1c1CVa)))
                                                                                                                                      g$maps$9586$1c1CVa
                                                                                                                                      g$x$9585$1c1CVa))))))
                                                                                                                             g$maps$9580$1c1CVa
                                                                                                                             g$y$9579$1c1CVa))))))
                                                                                                                    g$ls/false$9576$1c1CVa)
                                                                                                                  (g$syntax-violation$7751$1c1CVa
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9575$1c1CVa))))
                                                                                                             (g$syntax-dispatch$7642$1c1CVa
                                                                                                               g$t$9575$1c1CVa
                                                                                                               '_))))
                                                                                                         g$t$9562$1c1CVa))))
                                                                                                   (g$syntax-dispatch$7642$1c1CVa
                                                                                                     g$t$9562$1c1CVa
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9560$1c1CVa))))
                                                                                         (g$syntax-dispatch$7642$1c1CVa
                                                                                           g$t$9560$1c1CVa
                                                                                           '()))))
                                                                                     g$y$9558$1c1CVa)))))
                                                                        g$f$9557$1c1CVa)
                                                                      g$y$9556$1c1CVa
                                                                      (case-lambda
                                                                        ((g$maps$9589$1c1CVa)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9459$1c1CVa
                                                                                g$src$9519$1c1CVa
                                                                                g$x$9554$1c1CVa
                                                                                g$r$9521$1c1CVa
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9589$1c1CVa)
                                                                                g$ellipsis?$9523$1c1CVa
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9592$1c1CVa
                                                                                g$maps$9593$1c1CVa)
                                                                              ((case-lambda
                                                                                 ((g$maps$9594$1c1CVa
                                                                                    g$x$9595$1c1CVa)
                                                                                  (if (null?
                                                                                        (car g$maps$9594$1c1CVa))
                                                                                    (g$syntax-violation$7751$1c1CVa
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9519$1c1CVa)
                                                                                    (values
                                                                                      (g$gen-map$9463$1c1CVa
                                                                                        g$x$9595$1c1CVa
                                                                                        (car g$maps$9594$1c1CVa))
                                                                                      (cdr g$maps$9594$1c1CVa)))))
                                                                               g$maps$9593$1c1CVa
                                                                               g$x$9592$1c1CVa)))))))))
                                                                  g$ls/false$9550$1c1CVa)
                                                                ((case-lambda
                                                                   ((g$t$9596$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9597$1c1CVa)
                                                                        (if g$ls/false$9597$1c1CVa
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9598$1c1CVa
                                                                                 g$y$9599$1c1CVa)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9459$1c1CVa
                                                                                      g$src$9519$1c1CVa
                                                                                      g$x$9598$1c1CVa
                                                                                      g$r$9521$1c1CVa
                                                                                      g$maps$9522$1c1CVa
                                                                                      g$ellipsis?$9523$1c1CVa
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9602$1c1CVa
                                                                                      g$maps$9603$1c1CVa)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9604$1c1CVa
                                                                                          g$xnew$9605$1c1CVa)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9459$1c1CVa
                                                                                               g$src$9519$1c1CVa
                                                                                               g$y$9599$1c1CVa
                                                                                               g$r$9521$1c1CVa
                                                                                               g$maps$9604$1c1CVa
                                                                                               g$ellipsis?$9523$1c1CVa
                                                                                               g$vec?$9524$1c1CVa)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9608$1c1CVa
                                                                                               g$maps$9609$1c1CVa)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9610$1c1CVa
                                                                                                   g$ynew$9611$1c1CVa)
                                                                                                 (values
                                                                                                   (g$gen-cons$9464$1c1CVa
                                                                                                     g$e$9520$1c1CVa
                                                                                                     g$x$9598$1c1CVa
                                                                                                     g$y$9599$1c1CVa
                                                                                                     g$xnew$9605$1c1CVa
                                                                                                     g$ynew$9611$1c1CVa)
                                                                                                   g$maps$9610$1c1CVa)))
                                                                                              g$maps$9609$1c1CVa
                                                                                              g$ynew$9608$1c1CVa))))))
                                                                                     g$maps$9603$1c1CVa
                                                                                     g$xnew$9602$1c1CVa))))))
                                                                            g$ls/false$9597$1c1CVa)
                                                                          ((case-lambda
                                                                             ((g$t$9612$1c1CVa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9613$1c1CVa)
                                                                                  (if g$ls/false$9613$1c1CVa
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9614$1c1CVa)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9459$1c1CVa
                                                                                                g$src$9519$1c1CVa
                                                                                                g$ls$9614$1c1CVa
                                                                                                g$r$9521$1c1CVa
                                                                                                g$maps$9522$1c1CVa
                                                                                                g$ellipsis?$9523$1c1CVa
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9617$1c1CVa
                                                                                                g$maps$9618$1c1CVa)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9619$1c1CVa
                                                                                                    g$lsnew$9620$1c1CVa)
                                                                                                  (values
                                                                                                    (g$gen-vector$9465$1c1CVa
                                                                                                      g$e$9520$1c1CVa
                                                                                                      g$ls$9614$1c1CVa
                                                                                                      g$lsnew$9620$1c1CVa)
                                                                                                    g$maps$9619$1c1CVa)))
                                                                                               g$maps$9618$1c1CVa
                                                                                               g$lsnew$9617$1c1CVa))))))
                                                                                      g$ls/false$9613$1c1CVa)
                                                                                    ((case-lambda
                                                                                       ((g$t$9621$1c1CVa)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9622$1c1CVa)
                                                                                            (if g$ls/false$9622$1c1CVa
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9520$1c1CVa)
                                                                                                     g$maps$9522$1c1CVa)))
                                                                                                g$ls/false$9622$1c1CVa)
                                                                                              (g$syntax-violation$7751$1c1CVa
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9621$1c1CVa))))
                                                                                         (g$syntax-dispatch$7642$1c1CVa
                                                                                           g$t$9621$1c1CVa
                                                                                           '_))))
                                                                                     g$t$9612$1c1CVa))))
                                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                                 g$t$9612$1c1CVa
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9596$1c1CVa))))
                                                                     (g$syntax-dispatch$7642$1c1CVa
                                                                       g$t$9596$1c1CVa
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9549$1c1CVa))))
                                                           (g$syntax-dispatch$7642$1c1CVa
                                                             g$t$9549$1c1CVa
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9542$1c1CVa))))
                                                 (g$syntax-dispatch$7642$1c1CVa
                                                   g$t$9542$1c1CVa
                                                   '(any any)))))
                                             g$t$9529$1c1CVa))))
                                       (g$syntax-dispatch$7642$1c1CVa
                                         g$t$9529$1c1CVa
                                         'any))))
                                   g$t$9525$1c1CVa))))
                             (g$syntax-dispatch$7642$1c1CVa
                               g$t$9525$1c1CVa
                               'any))))
                         g$e$9520$1c1CVa))))
                   (g$gen-ref$9460$1c1CVa
                     (case-lambda
                       ((g$src$9506$1c1CVa
                          g$var$9507$1c1CVa
                          g$level$9508$1c1CVa
                          g$maps$9509$1c1CVa)
                        (if (= g$level$9508$1c1CVa '0)
                          (values g$var$9507$1c1CVa g$maps$9509$1c1CVa)
                          (if (null? g$maps$9509$1c1CVa)
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9506$1c1CVa)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9460$1c1CVa
                                   g$src$9506$1c1CVa
                                   g$var$9507$1c1CVa
                                   (- g$level$9508$1c1CVa '1)
                                   (cdr g$maps$9509$1c1CVa))))
                              (case-lambda
                                ((g$outer-var$9512$1c1CVa
                                   g$outer-maps$9513$1c1CVa)
                                 ((case-lambda
                                    ((g$outer-maps$9514$1c1CVa
                                       g$outer-var$9515$1c1CVa)
                                     ((case-lambda
                                        ((g$t$9516$1c1CVa)
                                         (if g$t$9516$1c1CVa
                                           ((case-lambda
                                              ((g$b$9517$1c1CVa)
                                               (values
                                                 (cdr g$b$9517$1c1CVa)
                                                 g$maps$9509$1c1CVa)))
                                            g$t$9516$1c1CVa)
                                           ((case-lambda
                                              ((g$inner-var$9518$1c1CVa)
                                               (values
                                                 g$inner-var$9518$1c1CVa
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9515$1c1CVa
                                                       g$inner-var$9518$1c1CVa)
                                                     (car g$maps$9509$1c1CVa))
                                                   g$outer-maps$9514$1c1CVa))))
                                            (g$gen-lexical$7308$1c1CVa 'tmp)))))
                                      (assq
                                        g$outer-var$9515$1c1CVa
                                        (car g$maps$9509$1c1CVa)))))
                                  g$outer-maps$9513$1c1CVa
                                  g$outer-var$9512$1c1CVa)))))))))
                   (g$gen-append$9461$1c1CVa
                     (case-lambda
                       ((g$x$9504$1c1CVa g$y$9505$1c1CVa)
                        (if (equal? g$y$9505$1c1CVa ''())
                          g$x$9504$1c1CVa
                          (list 'append g$x$9504$1c1CVa g$y$9505$1c1CVa)))))
                   (g$gen-mappend$9462$1c1CVa
                     (case-lambda
                       ((g$e$9502$1c1CVa g$map-env$9503$1c1CVa)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9463$1c1CVa
                            g$e$9502$1c1CVa
                            g$map-env$9503$1c1CVa)))))
                   (g$gen-map$9463$1c1CVa
                     (case-lambda
                       ((g$e$9493$1c1CVa g$map-env$9494$1c1CVa)
                        ((case-lambda
                           ((g$formals$9495$1c1CVa g$actuals$9496$1c1CVa)
                            (if (eq? (car g$e$9493$1c1CVa) 'ref)
                              (car g$actuals$9496$1c1CVa)
                              (if (g$for-all$5494$1c1CVa
                                    (case-lambda
                                      ((g$x$9497$1c1CVa)
                                       (if (eq? (car g$x$9497$1c1CVa) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$5013$1c1CVa
                                               g$x$9497$1c1CVa)
                                             g$formals$9495$1c1CVa))
                                         '#f)))
                                    (cdr g$e$9493$1c1CVa))
                                ((case-lambda
                                   ((g$args$9498$1c1CVa)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9493$1c1CVa))
                                        g$args$9498$1c1CVa))))
                                 (map ((case-lambda
                                         ((g$r$9499$1c1CVa)
                                          (case-lambda
                                            ((g$x$9500$1c1CVa)
                                             (cdr (assq
                                                    (g$cadr$5013$1c1CVa
                                                      g$x$9500$1c1CVa)
                                                    g$r$9499$1c1CVa))))))
                                       (map cons
                                            g$formals$9495$1c1CVa
                                            g$actuals$9496$1c1CVa))
                                      (cdr g$e$9493$1c1CVa)))
                                (g$cons*$5496$1c1CVa
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9495$1c1CVa
                                    g$e$9493$1c1CVa)
                                  g$actuals$9496$1c1CVa)))))
                         (map cdr g$map-env$9494$1c1CVa)
                         (map (case-lambda
                                ((g$x$9501$1c1CVa)
                                 (list 'ref (car g$x$9501$1c1CVa))))
                              g$map-env$9494$1c1CVa)))))
                   (g$gen-cons$9464$1c1CVa
                     (case-lambda
                       ((g$e$9485$1c1CVa
                          g$x$9486$1c1CVa
                          g$y$9487$1c1CVa
                          g$xnew$9488$1c1CVa
                          g$ynew$9489$1c1CVa)
                        ((case-lambda
                           ((g$t$9490$1c1CVa)
                            (if (memv g$t$9490$1c1CVa '(quote))
                              (if (eq? (car g$xnew$9488$1c1CVa) 'quote)
                                ((case-lambda
                                   ((g$xnew$9491$1c1CVa g$ynew$9492$1c1CVa)
                                    (if (if (eq? g$xnew$9491$1c1CVa
                                                 g$x$9486$1c1CVa)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9492$1c1CVa
                                                 g$y$9487$1c1CVa))
                                          '#f)
                                      (list 'quote g$e$9485$1c1CVa)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9491$1c1CVa
                                          g$ynew$9492$1c1CVa)))))
                                 (g$cadr$5013$1c1CVa g$xnew$9488$1c1CVa)
                                 (g$cadr$5013$1c1CVa g$ynew$9489$1c1CVa))
                                (if (null?
                                      (g$cadr$5013$1c1CVa g$ynew$9489$1c1CVa))
                                  (list 'list g$xnew$9488$1c1CVa)
                                  (list
                                    'cons
                                    g$xnew$9488$1c1CVa
                                    g$ynew$9489$1c1CVa)))
                              (if (memv g$t$9490$1c1CVa '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9488$1c1CVa
                                    (cdr g$ynew$9489$1c1CVa)))
                                (list
                                  'cons
                                  g$xnew$9488$1c1CVa
                                  g$ynew$9489$1c1CVa)))))
                         (car g$ynew$9489$1c1CVa)))))
                   (g$gen-vector$9465$1c1CVa
                     (case-lambda
                       ((g$e$9482$1c1CVa g$ls$9483$1c1CVa g$lsnew$9484$1c1CVa)
                        (if (eq? (car g$lsnew$9484$1c1CVa) 'quote)
                          (if (eq? (g$cadr$5013$1c1CVa g$lsnew$9484$1c1CVa)
                                   g$ls$9483$1c1CVa)
                            (list 'quote g$e$9482$1c1CVa)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5013$1c1CVa g$lsnew$9484$1c1CVa))))
                          (if (eq? (car g$lsnew$9484$1c1CVa) 'list)
                            (cons 'vector (cdr g$lsnew$9484$1c1CVa))
                            (list 'list->vector g$lsnew$9484$1c1CVa))))))
                   (g$regen$9466$1c1CVa
                     (case-lambda
                       ((g$x$9479$1c1CVa)
                        ((case-lambda
                           ((g$t$9480$1c1CVa)
                            (if (memv g$t$9480$1c1CVa '(ref))
                              (g$cadr$5013$1c1CVa g$x$9479$1c1CVa)
                              (if (memv g$t$9480$1c1CVa '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5013$1c1CVa g$x$9479$1c1CVa))
                                (if (memv g$t$9480$1c1CVa '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5013$1c1CVa g$x$9479$1c1CVa))
                                  (if (memv g$t$9480$1c1CVa '(lambda))
                                    (g$build-lambda$7295$1c1CVa
                                      '#f
                                      (g$cadr$5013$1c1CVa g$x$9479$1c1CVa)
                                      (g$regen$9466$1c1CVa
                                        (g$caddr$5019$1c1CVa g$x$9479$1c1CVa)))
                                    (if (memv g$t$9480$1c1CVa '(map))
                                      ((case-lambda
                                         ((g$ls$9481$1c1CVa)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9481$1c1CVa)))
                                       (map g$regen$9466$1c1CVa
                                            (cdr g$x$9479$1c1CVa)))
                                      (cons
                                        (list 'primitive (car g$x$9479$1c1CVa))
                                        (map g$regen$9466$1c1CVa
                                             (cdr g$x$9479$1c1CVa))))))))))
                         (car g$x$9479$1c1CVa))))))
           (case-lambda
             ((g$e$9467$1c1CVa g$r$9468$1c1CVa g$mr$9469$1c1CVa)
              ((case-lambda
                 ((g$t$9470$1c1CVa)
                  ((case-lambda
                     ((g$ls/false$9471$1c1CVa)
                      (if g$ls/false$9471$1c1CVa
                        (apply
                          (case-lambda
                            ((g$x$9472$1c1CVa)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9459$1c1CVa
                                    g$e$9467$1c1CVa
                                    g$x$9472$1c1CVa
                                    g$r$9468$1c1CVa
                                    '()
                                    g$ellipsis?$7643$1c1CVa
                                    '#f)))
                               (case-lambda
                                 ((g$e$9475$1c1CVa g$maps$9476$1c1CVa)
                                  ((case-lambda
                                     ((g$maps$9477$1c1CVa g$e$9478$1c1CVa)
                                      (g$regen$9466$1c1CVa g$e$9478$1c1CVa)))
                                   g$maps$9476$1c1CVa
                                   g$e$9475$1c1CVa))))))
                          g$ls/false$9471$1c1CVa)
                        (g$syntax-violation$7751$1c1CVa
                          '#f
                          '"invalid syntax"
                          g$t$9470$1c1CVa))))
                   (g$syntax-dispatch$7642$1c1CVa g$t$9470$1c1CVa '(_ any)))))
               g$e$9467$1c1CVa))))))))
   (g$core-macro-transformer$7649$1c1CVa
     g$core-macro-transformer$11088$1c1CVa
     (case-lambda
       ((g$name$9623$1c1CVa)
        ((case-lambda
           ((g$t$9624$1c1CVa)
            (if (memv g$t$9624$1c1CVa '(quote))
              g$quote-transformer$7602$1c1CVa
              (if (memv g$t$9624$1c1CVa '(lambda))
                g$lambda-transformer$7604$1c1CVa
                (if (memv g$t$9624$1c1CVa '(case-lambda))
                  g$case-lambda-transformer$7603$1c1CVa
                  (if (memv g$t$9624$1c1CVa '(letrec))
                    g$letrec-transformer$7592$1c1CVa
                    (if (memv g$t$9624$1c1CVa '(letrec*))
                      g$letrec*-transformer$7593$1c1CVa
                      (if (memv g$t$9624$1c1CVa '(if))
                        g$if-transformer$7600$1c1CVa
                        (if (memv g$t$9624$1c1CVa '(foreign-call))
                          g$foreign-call-transformer$7640$1c1CVa
                          (if (memv g$t$9624$1c1CVa '(syntax-case))
                            g$syntax-case-transformer$7646$1c1CVa
                            (if (memv g$t$9624$1c1CVa '(syntax))
                              g$syntax-transformer$7648$1c1CVa
                              (if (memv g$t$9624$1c1CVa '(type-descriptor))
                                g$type-descriptor-transformer$7595$1c1CVa
                                (if (memv
                                      g$t$9624$1c1CVa
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7596$1c1CVa
                                  (if (memv
                                        g$t$9624$1c1CVa
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7597$1c1CVa
                                    (if (memv
                                          g$t$9624$1c1CVa
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7594$1c1CVa
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9623$1c1CVa))))))))))))))))
         g$name$9623$1c1CVa))))
   (g$file-options-macro$7650$1c1CVa
     g$file-options-macro$11089$1c1CVa
     (case-lambda
       ((g$x$9625$1c1CVa)
        (letrec* ((g$valid-option?$9626$1c1CVa
                    (case-lambda
                      ((g$x$9631$1c1CVa)
                       (if (g$id?$7364$1c1CVa g$x$9631$1c1CVa)
                         (begin
                           '#f
                           (memq
                             (g$id->sym$7365$1c1CVa g$x$9631$1c1CVa)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$9627$1c1CVa)
              ((case-lambda
                 ((g$ls/false$9628$1c1CVa)
                  (if (if g$ls/false$9628$1c1CVa
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$9629$1c1CVa)
                               (if (g$for-all$5494$1c1CVa
                                     g$valid-option?$9626$1c1CVa
                                     g$opt*$9629$1c1CVa)
                                 (begin
                                   '#f
                                   (g$file-options-spec$6633$1c1CVa
                                     (map g$id->sym$7365$1c1CVa
                                          g$opt*$9629$1c1CVa)))
                                 '#f)))
                            g$ls/false$9628$1c1CVa))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$9630$1c1CVa)
                         (g$bless$7605$1c1CVa
                           (list
                             'quote
                             (g$file-options-spec$6633$1c1CVa
                               (map g$id->sym$7365$1c1CVa
                                    g$opt*$9630$1c1CVa))))))
                      g$ls/false$9628$1c1CVa)
                    (g$syntax-violation$7751$1c1CVa
                      '#f
                      '"invalid syntax"
                      g$t$9627$1c1CVa))))
               (g$syntax-dispatch$7642$1c1CVa
                 g$t$9627$1c1CVa
                 '(_ . each-any)))))
           g$x$9625$1c1CVa)))))
   (g$symbol-macro$7651$1c1CVa
     g$symbol-macro$11090$1c1CVa
     (case-lambda
       ((g$x$9632$1c1CVa g$set$9633$1c1CVa)
        ((case-lambda
           ((g$t$9634$1c1CVa)
            ((case-lambda
               ((g$ls/false$9635$1c1CVa)
                (if (if g$ls/false$9635$1c1CVa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9636$1c1CVa)
                             (if (g$id?$7364$1c1CVa g$name$9636$1c1CVa)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7365$1c1CVa g$name$9636$1c1CVa)
                                   g$set$9633$1c1CVa))
                               '#f)))
                          g$ls/false$9635$1c1CVa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9637$1c1CVa)
                       (g$bless$7605$1c1CVa (list 'quote g$name$9637$1c1CVa))))
                    g$ls/false$9635$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$9634$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$9634$1c1CVa '(_ any)))))
         g$x$9632$1c1CVa))))
   (g$macro-transformer$7652$1c1CVa
     g$macro-transformer$11091$1c1CVa
     (case-lambda
       ((g$x$9638$1c1CVa)
        (if (procedure? g$x$9638$1c1CVa)
          g$x$9638$1c1CVa
          (if (symbol? g$x$9638$1c1CVa)
            ((case-lambda
               ((g$t$9639$1c1CVa)
                (if (memv g$t$9639$1c1CVa '(define-record-type))
                  g$define-record-type-macro$7636$1c1CVa
                  (if (memv g$t$9639$1c1CVa '(define-struct))
                    g$define-struct-macro$7635$1c1CVa
                    (if (memv g$t$9639$1c1CVa '(include))
                      g$include-macro$7630$1c1CVa
                      (if (memv g$t$9639$1c1CVa '(cond))
                        g$cond-macro$7628$1c1CVa
                        (if (memv g$t$9639$1c1CVa '(let))
                          g$let-macro$7608$1c1CVa
                          (if (memv g$t$9639$1c1CVa '(do))
                            g$do-macro$7624$1c1CVa
                            (if (memv g$t$9639$1c1CVa '(or))
                              g$or-macro$7626$1c1CVa
                              (if (memv g$t$9639$1c1CVa '(and))
                                g$and-macro$7627$1c1CVa
                                (if (memv g$t$9639$1c1CVa '(let*))
                                  g$let*-macro$7625$1c1CVa
                                  (if (memv g$t$9639$1c1CVa '(let-values))
                                    g$let-values-macro$7609$1c1CVa
                                    (if (memv g$t$9639$1c1CVa '(let*-values))
                                      g$let*-values-macro$7610$1c1CVa
                                      (if (memv g$t$9639$1c1CVa '(syntax-rules))
                                        g$syntax-rules-macro$7632$1c1CVa
                                        (if (memv g$t$9639$1c1CVa '(quasiquote))
                                          g$quasiquote-macro$7633$1c1CVa
                                          (if (memv
                                                g$t$9639$1c1CVa
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7634$1c1CVa
                                            (if (memv
                                                  g$t$9639$1c1CVa
                                                  '(with-syntax))
                                              g$with-syntax-macro$7606$1c1CVa
                                              (if (memv g$t$9639$1c1CVa '(when))
                                                g$when-macro$7598$1c1CVa
                                                (if (memv
                                                      g$t$9639$1c1CVa
                                                      '(unless))
                                                  g$unless-macro$7599$1c1CVa
                                                  (if (memv
                                                        g$t$9639$1c1CVa
                                                        '(case))
                                                    g$case-macro$7601$1c1CVa
                                                    (if (memv
                                                          g$t$9639$1c1CVa
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7623$1c1CVa
                                                      (if (memv
                                                            g$t$9639$1c1CVa
                                                            '(time))
                                                        g$time-macro$7619$1c1CVa
                                                        (if (memv
                                                              g$t$9639$1c1CVa
                                                              '(delay))
                                                          g$delay-macro$7620$1c1CVa
                                                          (if (memv
                                                                g$t$9639$1c1CVa
                                                                '(assert))
                                                            g$assert-macro$7621$1c1CVa
                                                            (if (memv
                                                                  g$t$9639$1c1CVa
                                                                  '(endianness))
                                                              g$endianness-macro$7622$1c1CVa
                                                              (if (memv
                                                                    g$t$9639$1c1CVa
                                                                    '(guard))
                                                                g$guard-macro$7617$1c1CVa
                                                                (if (memv
                                                                      g$t$9639$1c1CVa
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7618$1c1CVa
                                                                  (if (memv
                                                                        g$t$9639$1c1CVa
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7611$1c1CVa
                                                                    (if (memv
                                                                          g$t$9639$1c1CVa
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7612$1c1CVa
                                                                      (if (memv
                                                                            g$t$9639$1c1CVa
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7613$1c1CVa
                                                                        (if (memv
                                                                              g$t$9639$1c1CVa
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7615$1c1CVa
                                                                          (if (memv
                                                                                g$t$9639$1c1CVa
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7616$1c1CVa
                                                                            (if (memv
                                                                                  g$t$9639$1c1CVa
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7637$1c1CVa
                                                                              (if (memv
                                                                                    g$t$9639$1c1CVa
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7639$1c1CVa
                                                                                (if (memv
                                                                                      g$t$9639$1c1CVa
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7631$1c1CVa
                                                                                  (if (memv
                                                                                        g$t$9639$1c1CVa
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$9640$1c1CVa)
                                                                                       (g$symbol-macro$7651$1c1CVa
                                                                                         g$x$9640$1c1CVa
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (memv
                                                                                          g$t$9639$1c1CVa
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$9641$1c1CVa)
                                                                                         (g$symbol-macro$7651$1c1CVa
                                                                                           g$x$9641$1c1CVa
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (memv
                                                                                            g$t$9639$1c1CVa
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$9642$1c1CVa)
                                                                                           (g$symbol-macro$7651$1c1CVa
                                                                                             g$x$9642$1c1CVa
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (memv
                                                                                              g$t$9639$1c1CVa
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7650$1c1CVa
                                                                                          (if (memv
                                                                                                g$t$9639$1c1CVa
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7638$1c1CVa
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$9638$1c1CVa)))))))))))))))))))))))))))))))))))))))))
             g$x$9638$1c1CVa)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9638$1c1CVa))))))
   (g$local-macro-transformer$7653$1c1CVa
     g$local-macro-transformer$11092$1c1CVa
     (case-lambda ((g$x$9643$1c1CVa) (car g$x$9643$1c1CVa))))
   (g$do-macro-call$7654$1c1CVa
     g$do-macro-call$11093$1c1CVa
     (case-lambda
       ((g$transformer$9644$1c1CVa g$expr$9645$1c1CVa)
        ((case-lambda
           ((g$out$9646$1c1CVa)
            (begin
              ((letrec ((g$f$9647$1c1CVa
                          (case-lambda
                            ((g$x$9648$1c1CVa)
                             (if (not (g$stx?$7336$1c1CVa g$x$9648$1c1CVa))
                               (if (pair? g$x$9648$1c1CVa)
                                 (begin
                                   (g$f$9647$1c1CVa (car g$x$9648$1c1CVa))
                                   (g$f$9647$1c1CVa (cdr g$x$9648$1c1CVa)))
                                 (if (vector? g$x$9648$1c1CVa)
                                   (vector-for-each
                                     g$f$9647$1c1CVa
                                     g$x$9648$1c1CVa)
                                   (if (symbol? g$x$9648$1c1CVa)
                                     (g$syntax-violation$7751$1c1CVa
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9645$1c1CVa
                                       g$x$9648$1c1CVa)
                                     (void))))
                               (void))))))
                 g$f$9647$1c1CVa)
               g$out$9646$1c1CVa)
              (g$add-mark$7353$1c1CVa
                (g$gen-mark$7348$1c1CVa)
                g$out$9646$1c1CVa
                g$expr$9645$1c1CVa))))
         (g$transformer$9644$1c1CVa
           (g$add-mark$7353$1c1CVa
             g$anti-mark$7349$1c1CVa
             g$expr$9645$1c1CVa
             '#f))))))
   (g$chi-macro$7655$1c1CVa
     g$chi-macro$11094$1c1CVa
     (case-lambda
       ((g$p$9649$1c1CVa g$e$9650$1c1CVa)
        (g$do-macro-call$7654$1c1CVa
          (g$macro-transformer$7652$1c1CVa g$p$9649$1c1CVa)
          g$e$9650$1c1CVa))))
   (g$chi-local-macro$7656$1c1CVa
     g$chi-local-macro$11095$1c1CVa
     (case-lambda
       ((g$p$9651$1c1CVa g$e$9652$1c1CVa)
        (g$do-macro-call$7654$1c1CVa
          (g$local-macro-transformer$7653$1c1CVa g$p$9651$1c1CVa)
          g$e$9652$1c1CVa))))
   (g$chi-global-macro$7657$1c1CVa
     g$chi-global-macro$11096$1c1CVa
     (case-lambda
       ((g$p$9653$1c1CVa g$e$9654$1c1CVa)
        ((case-lambda
           ((g$lib$9655$1c1CVa g$loc$9656$1c1CVa)
            (begin
              (g$visit-library$7180$1c1CVa g$lib$9655$1c1CVa)
              ((case-lambda
                 ((g$x$9657$1c1CVa)
                  ((case-lambda
                     ((g$transformer$9658$1c1CVa)
                      (g$do-macro-call$7654$1c1CVa
                        g$transformer$9658$1c1CVa
                        g$e$9654$1c1CVa)))
                   (if (procedure? g$x$9657$1c1CVa)
                     g$x$9657$1c1CVa
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9657$1c1CVa)))))
               (symbol-value g$loc$9656$1c1CVa)))))
         (car g$p$9653$1c1CVa)
         (cdr g$p$9653$1c1CVa)))))
   (g$chi-expr*$7658$1c1CVa
     g$chi-expr*$11097$1c1CVa
     (case-lambda
       ((g$e*$9659$1c1CVa g$r$9660$1c1CVa g$mr$9661$1c1CVa)
        (if (null? g$e*$9659$1c1CVa)
          '()
          ((case-lambda
             ((g$e$9662$1c1CVa)
              (cons
                g$e$9662$1c1CVa
                (g$chi-expr*$7658$1c1CVa
                  (cdr g$e*$9659$1c1CVa)
                  g$r$9660$1c1CVa
                  g$mr$9661$1c1CVa))))
           (g$chi-expr$7660$1c1CVa
             (car g$e*$9659$1c1CVa)
             g$r$9660$1c1CVa
             g$mr$9661$1c1CVa))))))
   (g$chi-application$7659$1c1CVa
     g$chi-application$11098$1c1CVa
     (case-lambda
       ((g$e$9663$1c1CVa g$r$9664$1c1CVa g$mr$9665$1c1CVa)
        ((case-lambda
           ((g$t$9666$1c1CVa)
            ((case-lambda
               ((g$ls/false$9667$1c1CVa)
                (if g$ls/false$9667$1c1CVa
                  (apply
                    (case-lambda
                      ((g$rator$9668$1c1CVa g$rands$9669$1c1CVa)
                       ((case-lambda
                          ((g$rator$9670$1c1CVa)
                           (cons
                             g$rator$9670$1c1CVa
                             (g$chi-expr*$7658$1c1CVa
                               g$rands$9669$1c1CVa
                               g$r$9664$1c1CVa
                               g$mr$9665$1c1CVa))))
                        (g$chi-expr$7660$1c1CVa
                          g$rator$9668$1c1CVa
                          g$r$9664$1c1CVa
                          g$mr$9665$1c1CVa))))
                    g$ls/false$9667$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$9666$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$9666$1c1CVa
               '(any . each-any)))))
         g$e$9663$1c1CVa))))
   (g$chi-expr$7660$1c1CVa
     g$chi-expr$11099$1c1CVa
     (case-lambda
       ((g$e$9671$1c1CVa g$r$9672$1c1CVa g$mr$9673$1c1CVa)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7384$1c1CVa g$e$9671$1c1CVa g$r$9672$1c1CVa)))
          (case-lambda
            ((g$type$9677$1c1CVa g$value$9678$1c1CVa g$kwd$9679$1c1CVa)
             ((case-lambda
                ((g$kwd$9680$1c1CVa g$value$9681$1c1CVa g$type$9682$1c1CVa)
                 ((case-lambda
                    ((g$t$9683$1c1CVa)
                     (if (memv g$t$9683$1c1CVa '(core-macro))
                       ((case-lambda
                          ((g$transformer$9684$1c1CVa)
                           (g$transformer$9684$1c1CVa
                             g$e$9671$1c1CVa
                             g$r$9672$1c1CVa
                             g$mr$9673$1c1CVa)))
                        (g$core-macro-transformer$7649$1c1CVa
                          g$value$9681$1c1CVa))
                       (if (memv g$t$9683$1c1CVa '(global))
                         ((case-lambda
                            ((g$lib$9685$1c1CVa)
                             ((case-lambda
                                ((g$loc$9686$1c1CVa)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7694$1c1CVa)
                                        g$lib$9685$1c1CVa)
                                       g$loc$9686$1c1CVa))))))
                              (cdr g$value$9681$1c1CVa))))
                          (car g$value$9681$1c1CVa))
                         (if (memv g$t$9683$1c1CVa '(core-prim))
                           ((case-lambda
                              ((g$name$9687$1c1CVa)
                               (list 'primitive g$name$9687$1c1CVa)))
                            g$value$9681$1c1CVa)
                           (if (memv g$t$9683$1c1CVa '(call))
                             (g$chi-application$7659$1c1CVa
                               g$e$9671$1c1CVa
                               g$r$9672$1c1CVa
                               g$mr$9673$1c1CVa)
                             (if (memv g$t$9683$1c1CVa '(lexical))
                               ((case-lambda
                                  ((g$lex$9688$1c1CVa) g$lex$9688$1c1CVa))
                                (g$lexical-var$7586$1c1CVa g$value$9681$1c1CVa))
                               (if (memv
                                     g$t$9683$1c1CVa
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7660$1c1CVa
                                   (g$chi-global-macro$7657$1c1CVa
                                     g$value$9681$1c1CVa
                                     g$e$9671$1c1CVa)
                                   g$r$9672$1c1CVa
                                   g$mr$9673$1c1CVa)
                                 (if (memv
                                       g$t$9683$1c1CVa
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7660$1c1CVa
                                     (g$chi-local-macro$7656$1c1CVa
                                       g$value$9681$1c1CVa
                                       g$e$9671$1c1CVa)
                                     g$r$9672$1c1CVa
                                     g$mr$9673$1c1CVa)
                                   (if (memv g$t$9683$1c1CVa '(macro macro!))
                                     (g$chi-expr$7660$1c1CVa
                                       (g$chi-macro$7655$1c1CVa
                                         g$value$9681$1c1CVa
                                         g$e$9671$1c1CVa)
                                       g$r$9672$1c1CVa
                                       g$mr$9673$1c1CVa)
                                     (if (memv g$t$9683$1c1CVa '(constant))
                                       ((case-lambda
                                          ((g$datum$9689$1c1CVa)
                                           (list 'quote g$datum$9689$1c1CVa)))
                                        g$value$9681$1c1CVa)
                                       (if (memv g$t$9683$1c1CVa '(set!))
                                         (g$chi-set!$7661$1c1CVa
                                           g$e$9671$1c1CVa
                                           g$r$9672$1c1CVa
                                           g$mr$9673$1c1CVa)
                                         (if (memv g$t$9683$1c1CVa '(begin))
                                           ((case-lambda
                                              ((g$t$9690$1c1CVa)
                                               ((case-lambda
                                                  ((g$ls/false$9691$1c1CVa)
                                                   (if g$ls/false$9691$1c1CVa
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9692$1c1CVa
                                                            g$x*$9693$1c1CVa)
                                                          (g$build-sequence$7298$1c1CVa
                                                            '#f
                                                            (g$chi-expr*$7658$1c1CVa
                                                              (cons
                                                                g$x$9692$1c1CVa
                                                                g$x*$9693$1c1CVa)
                                                              g$r$9672$1c1CVa
                                                              g$mr$9673$1c1CVa))))
                                                       g$ls/false$9691$1c1CVa)
                                                     (g$syntax-violation$7751$1c1CVa
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9690$1c1CVa))))
                                                (g$syntax-dispatch$7642$1c1CVa
                                                  g$t$9690$1c1CVa
                                                  '(_ any . each-any)))))
                                            g$e$9671$1c1CVa)
                                           (if (memv
                                                 g$t$9683$1c1CVa
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9694$1c1CVa)
                                                 ((case-lambda
                                                    ((g$ls/false$9695$1c1CVa)
                                                     (if (if g$ls/false$9695$1c1CVa
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9696$1c1CVa
                                                                    g$xrhs*$9697$1c1CVa
                                                                    g$xbody$9698$1c1CVa
                                                                    g$xbody*$9699$1c1CVa)
                                                                  (if (not (g$valid-bound-ids?$7369$1c1CVa
                                                                             g$xlhs*$9696$1c1CVa))
                                                                    (g$syntax-violation$7751$1c1CVa
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9671$1c1CVa)
                                                                    (void))))
                                                               g$ls/false$9695$1c1CVa))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9700$1c1CVa
                                                              g$xrhs*$9701$1c1CVa
                                                              g$xbody$9702$1c1CVa
                                                              g$xbody*$9703$1c1CVa)
                                                            ((case-lambda
                                                               ((g$xlab*$9704$1c1CVa)
                                                                ((case-lambda
                                                                   ((g$xrib$9705$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$xb*$9706$1c1CVa)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7298$1c1CVa
                                                                              '#f
                                                                              (g$chi-expr*$7658$1c1CVa
                                                                                (map (case-lambda
                                                                                       ((g$x$9707$1c1CVa)
                                                                                        (g$add-subst$7354$1c1CVa
                                                                                          g$xrib$9705$1c1CVa
                                                                                          g$x$9707$1c1CVa)))
                                                                                     (cons
                                                                                       g$xbody$9702$1c1CVa
                                                                                       g$xbody*$9703$1c1CVa))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9704$1c1CVa
                                                                                       g$xb*$9706$1c1CVa)
                                                                                  g$r$9672$1c1CVa)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9704$1c1CVa
                                                                                       g$xb*$9706$1c1CVa)
                                                                                  g$mr$9673$1c1CVa))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9708$1c1CVa)
                                                                             (g$make-eval-transformer$7396$1c1CVa
                                                                               (g$expand-transformer$7687$1c1CVa
                                                                                 (if (eq? g$type$9682$1c1CVa
                                                                                          'let-syntax)
                                                                                   g$x$9708$1c1CVa
                                                                                   (g$add-subst$7354$1c1CVa
                                                                                     g$xrib$9705$1c1CVa
                                                                                     g$x$9708$1c1CVa))
                                                                                 g$mr$9673$1c1CVa))))
                                                                          g$xrhs*$9701$1c1CVa))))
                                                                 (g$make-full-rib$7332$1c1CVa
                                                                   g$xlhs*$9700$1c1CVa
                                                                   g$xlab*$9704$1c1CVa))))
                                                             (map g$gen-label$7310$1c1CVa
                                                                  g$xlhs*$9700$1c1CVa))))
                                                         g$ls/false$9695$1c1CVa)
                                                       (g$syntax-violation$7751$1c1CVa
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9694$1c1CVa))))
                                                  (g$syntax-dispatch$7642$1c1CVa
                                                    g$t$9694$1c1CVa
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9671$1c1CVa)
                                             (if (memv
                                                   g$t$9683$1c1CVa
                                                   '(displaced-lexical))
                                               (g$syntax-violation$7751$1c1CVa
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9671$1c1CVa)
                                               (if (memv
                                                     g$t$9683$1c1CVa
                                                     '(syntax))
                                                 (g$syntax-violation$7751$1c1CVa
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9671$1c1CVa)
                                                 (if (memv
                                                       g$t$9683$1c1CVa
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7751$1c1CVa
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9709$1c1CVa)
                                                           (if (memv
                                                                 g$t$9709$1c1CVa
                                                                 '(define))
                                                             '"a definition"
                                                             (if (memv
                                                                   g$t$9709$1c1CVa
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (memv
                                                                     g$t$9709$1c1CVa
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (memv
                                                                       g$t$9709$1c1CVa
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (memv
                                                                         g$t$9709$1c1CVa
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9682$1c1CVa)
                                                       '" was found where an expression was expected")
                                                     g$e$9671$1c1CVa)
                                                   (if (memv
                                                         g$t$9683$1c1CVa
                                                         '(mutable))
                                                     (g$syntax-violation$7751$1c1CVa
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9671$1c1CVa)
                                                     (g$syntax-violation$7751$1c1CVa
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9671$1c1CVa)))))))))))))))))))
                  g$type$9682$1c1CVa)))
              g$kwd$9679$1c1CVa
              g$value$9678$1c1CVa
              g$type$9677$1c1CVa)))))))
   (g$chi-set!$7661$1c1CVa
     g$chi-set!$11100$1c1CVa
     (case-lambda
       ((g$e$9710$1c1CVa g$r$9711$1c1CVa g$mr$9712$1c1CVa)
        ((case-lambda
           ((g$t$9713$1c1CVa)
            ((case-lambda
               ((g$ls/false$9714$1c1CVa)
                (if (if g$ls/false$9714$1c1CVa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9715$1c1CVa g$v$9716$1c1CVa)
                             (g$id?$7364$1c1CVa g$x$9715$1c1CVa)))
                          g$ls/false$9714$1c1CVa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9717$1c1CVa g$v$9718$1c1CVa)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7384$1c1CVa
                              g$x$9717$1c1CVa
                              g$r$9711$1c1CVa)))
                         (case-lambda
                           ((g$type$9722$1c1CVa
                              g$value$9723$1c1CVa
                              g$kwd$9724$1c1CVa)
                            ((case-lambda
                               ((g$kwd$9725$1c1CVa
                                  g$value$9726$1c1CVa
                                  g$type$9727$1c1CVa)
                                ((case-lambda
                                   ((g$t$9728$1c1CVa)
                                    (if (memv g$t$9728$1c1CVa '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7588$1c1CVa
                                          g$value$9726$1c1CVa
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7586$1c1CVa
                                            g$value$9726$1c1CVa)
                                          (g$chi-expr$7660$1c1CVa
                                            g$v$9718$1c1CVa
                                            g$r$9711$1c1CVa
                                            g$mr$9712$1c1CVa)))
                                      (if (memv g$t$9728$1c1CVa '(core-prim))
                                        (g$syntax-violation$7751$1c1CVa
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9710$1c1CVa)
                                        (if (memv g$t$9728$1c1CVa '(global))
                                          (g$syntax-violation$7751$1c1CVa
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9710$1c1CVa)
                                          (if (memv
                                                g$t$9728$1c1CVa
                                                '(global-macro!))
                                            (g$chi-expr$7660$1c1CVa
                                              (g$chi-global-macro$7657$1c1CVa
                                                g$value$9726$1c1CVa
                                                g$e$9710$1c1CVa)
                                              g$r$9711$1c1CVa
                                              g$mr$9712$1c1CVa)
                                            (if (memv
                                                  g$t$9728$1c1CVa
                                                  '(local-macro!))
                                              (g$chi-expr$7660$1c1CVa
                                                (g$chi-local-macro$7656$1c1CVa
                                                  g$value$9726$1c1CVa
                                                  g$e$9710$1c1CVa)
                                                g$r$9711$1c1CVa
                                                g$mr$9712$1c1CVa)
                                              (if (memv
                                                    g$t$9728$1c1CVa
                                                    '(mutable))
                                                (g$syntax-violation$7751$1c1CVa
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9710$1c1CVa)
                                                (g$syntax-violation$7751$1c1CVa
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9710$1c1CVa)))))))))
                                 g$type$9727$1c1CVa)))
                             g$kwd$9724$1c1CVa
                             g$value$9723$1c1CVa
                             g$type$9722$1c1CVa))))))
                    g$ls/false$9714$1c1CVa)
                  (g$syntax-violation$7751$1c1CVa
                    '#f
                    '"invalid syntax"
                    g$t$9713$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$9713$1c1CVa '(_ any any)))))
         g$e$9710$1c1CVa))))
   (g$verify-formals$7662$1c1CVa
     g$verify-formals$11101$1c1CVa
     (case-lambda
       ((g$fmls$9729$1c1CVa g$stx$9730$1c1CVa)
        ((case-lambda
           ((g$t$9731$1c1CVa)
            ((case-lambda
               ((g$ls/false$9732$1c1CVa)
                (if g$ls/false$9732$1c1CVa
                  (apply
                    (case-lambda
                      ((g$x*$9733$1c1CVa)
                       (if (not (g$valid-bound-ids?$7369$1c1CVa
                                  g$x*$9733$1c1CVa))
                         (g$invalid-fmls-error$7607$1c1CVa
                           g$stx$9730$1c1CVa
                           g$fmls$9729$1c1CVa)
                         (void))))
                    g$ls/false$9732$1c1CVa)
                  ((case-lambda
                     ((g$t$9734$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$9735$1c1CVa)
                          (if g$ls/false$9735$1c1CVa
                            (apply
                              (case-lambda
                                ((g$x*$9736$1c1CVa g$x$9737$1c1CVa)
                                 (if (not (g$valid-bound-ids?$7369$1c1CVa
                                            (cons
                                              g$x$9737$1c1CVa
                                              g$x*$9736$1c1CVa)))
                                   (g$invalid-fmls-error$7607$1c1CVa
                                     g$stx$9730$1c1CVa
                                     g$fmls$9729$1c1CVa)
                                   (void))))
                              g$ls/false$9735$1c1CVa)
                            ((case-lambda
                               ((g$t$9738$1c1CVa)
                                ((case-lambda
                                   ((g$ls/false$9739$1c1CVa)
                                    (if g$ls/false$9739$1c1CVa
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9730$1c1CVa)))
                                        g$ls/false$9739$1c1CVa)
                                      (g$syntax-violation$7751$1c1CVa
                                        '#f
                                        '"invalid syntax"
                                        g$t$9738$1c1CVa))))
                                 (g$syntax-dispatch$7642$1c1CVa
                                   g$t$9738$1c1CVa
                                   '_))))
                             g$t$9734$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$9734$1c1CVa
                         '#(each+ any () any)))))
                   g$t$9731$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$9731$1c1CVa 'each-any))))
         g$fmls$9729$1c1CVa))))
   (g$chi-lambda-clause$7663$1c1CVa
     g$chi-lambda-clause$11102$1c1CVa
     (case-lambda
       ((g$stx$9740$1c1CVa
          g$fmls$9741$1c1CVa
          g$body*$9742$1c1CVa
          g$r$9743$1c1CVa
          g$mr$9744$1c1CVa)
        ((case-lambda
           ((g$t$9745$1c1CVa)
            ((case-lambda
               ((g$ls/false$9746$1c1CVa)
                (if g$ls/false$9746$1c1CVa
                  (apply
                    (case-lambda
                      ((g$x*$9747$1c1CVa)
                       (begin
                         (g$verify-formals$7662$1c1CVa
                           g$fmls$9741$1c1CVa
                           g$stx$9740$1c1CVa)
                         ((case-lambda
                            ((g$lex*$9748$1c1CVa g$lab*$9749$1c1CVa)
                             (values
                               g$lex*$9748$1c1CVa
                               (g$chi-internal$7671$1c1CVa
                                 (g$add-subst$7354$1c1CVa
                                   (g$make-full-rib$7332$1c1CVa
                                     g$x*$9747$1c1CVa
                                     g$lab*$9749$1c1CVa)
                                   g$body*$9742$1c1CVa)
                                 (g$add-lexicals$7590$1c1CVa
                                   g$lab*$9749$1c1CVa
                                   g$lex*$9748$1c1CVa
                                   g$r$9743$1c1CVa)
                                 g$mr$9744$1c1CVa))))
                          (map g$gen-lexical$7308$1c1CVa g$x*$9747$1c1CVa)
                          (map g$gen-label$7310$1c1CVa g$x*$9747$1c1CVa)))))
                    g$ls/false$9746$1c1CVa)
                  ((case-lambda
                     ((g$t$9750$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$9751$1c1CVa)
                          (if g$ls/false$9751$1c1CVa
                            (apply
                              (case-lambda
                                ((g$x*$9752$1c1CVa g$x$9753$1c1CVa)
                                 (begin
                                   (g$verify-formals$7662$1c1CVa
                                     g$fmls$9741$1c1CVa
                                     g$stx$9740$1c1CVa)
                                   ((case-lambda
                                      ((g$lex*$9754$1c1CVa
                                         g$lab*$9755$1c1CVa
                                         g$lex$9756$1c1CVa
                                         g$lab$9757$1c1CVa)
                                       (values
                                         (append
                                           g$lex*$9754$1c1CVa
                                           g$lex$9756$1c1CVa)
                                         (g$chi-internal$7671$1c1CVa
                                           (g$add-subst$7354$1c1CVa
                                             (g$make-full-rib$7332$1c1CVa
                                               (cons
                                                 g$x$9753$1c1CVa
                                                 g$x*$9752$1c1CVa)
                                               (cons
                                                 g$lab$9757$1c1CVa
                                                 g$lab*$9755$1c1CVa))
                                             g$body*$9742$1c1CVa)
                                           (g$add-lexicals$7590$1c1CVa
                                             (cons
                                               g$lab$9757$1c1CVa
                                               g$lab*$9755$1c1CVa)
                                             (cons
                                               g$lex$9756$1c1CVa
                                               g$lex*$9754$1c1CVa)
                                             g$r$9743$1c1CVa)
                                           g$mr$9744$1c1CVa))))
                                    (map g$gen-lexical$7308$1c1CVa
                                         g$x*$9752$1c1CVa)
                                    (map g$gen-label$7310$1c1CVa
                                         g$x*$9752$1c1CVa)
                                    (g$gen-lexical$7308$1c1CVa g$x$9753$1c1CVa)
                                    (g$gen-label$7310$1c1CVa
                                      g$x$9753$1c1CVa)))))
                              g$ls/false$9751$1c1CVa)
                            ((case-lambda
                               ((g$t$9758$1c1CVa)
                                ((case-lambda
                                   ((g$ls/false$9759$1c1CVa)
                                    (if g$ls/false$9759$1c1CVa
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7751$1c1CVa
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9741$1c1CVa)))
                                        g$ls/false$9759$1c1CVa)
                                      (g$syntax-violation$7751$1c1CVa
                                        '#f
                                        '"invalid syntax"
                                        g$t$9758$1c1CVa))))
                                 (g$syntax-dispatch$7642$1c1CVa
                                   g$t$9758$1c1CVa
                                   '_))))
                             g$t$9750$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$9750$1c1CVa
                         '#(each+ any () any)))))
                   g$t$9745$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$9745$1c1CVa 'each-any))))
         g$fmls$9741$1c1CVa))))
   (g$chi-lambda-clause*$7664$1c1CVa
     g$chi-lambda-clause*$11103$1c1CVa
     (case-lambda
       ((g$stx$9760$1c1CVa
          g$fmls*$9761$1c1CVa
          g$body**$9762$1c1CVa
          g$r$9763$1c1CVa
          g$mr$9764$1c1CVa)
        (if (null? g$fmls*$9761$1c1CVa)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7663$1c1CVa
                 g$stx$9760$1c1CVa
                 (car g$fmls*$9761$1c1CVa)
                 (car g$body**$9762$1c1CVa)
                 g$r$9763$1c1CVa
                 g$mr$9764$1c1CVa)))
            (case-lambda
              ((g$a$9767$1c1CVa g$b$9768$1c1CVa)
               ((case-lambda
                  ((g$b$9769$1c1CVa g$a$9770$1c1CVa)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7664$1c1CVa
                          g$stx$9760$1c1CVa
                          (cdr g$fmls*$9761$1c1CVa)
                          (cdr g$body**$9762$1c1CVa)
                          g$r$9763$1c1CVa
                          g$mr$9764$1c1CVa)))
                     (case-lambda
                       ((g$a*$9773$1c1CVa g$b*$9774$1c1CVa)
                        ((case-lambda
                           ((g$b*$9775$1c1CVa g$a*$9776$1c1CVa)
                            (values
                              (cons g$a$9770$1c1CVa g$a*$9776$1c1CVa)
                              (cons g$b$9769$1c1CVa g$b*$9775$1c1CVa))))
                         g$b*$9774$1c1CVa
                         g$a*$9773$1c1CVa))))))
                g$b$9768$1c1CVa
                g$a$9767$1c1CVa))))))))
   (g$chi-defun$7665$1c1CVa
     g$chi-defun$11104$1c1CVa
     (case-lambda
       ((g$x$9777$1c1CVa g$r$9778$1c1CVa g$mr$9779$1c1CVa)
        ((case-lambda
           ((g$fmls$9780$1c1CVa g$body*$9781$1c1CVa)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7663$1c1CVa
                   g$fmls$9780$1c1CVa
                   g$fmls$9780$1c1CVa
                   g$body*$9781$1c1CVa
                   g$r$9778$1c1CVa
                   g$mr$9779$1c1CVa)))
              (case-lambda
                ((g$fmls$9784$1c1CVa g$body$9785$1c1CVa)
                 ((case-lambda
                    ((g$body$9786$1c1CVa g$fmls$9787$1c1CVa)
                     (g$build-lambda$7295$1c1CVa
                       '#f
                       g$fmls$9787$1c1CVa
                       g$body$9786$1c1CVa)))
                  g$body$9785$1c1CVa
                  g$fmls$9784$1c1CVa))))))
         (car g$x$9777$1c1CVa)
         (cdr g$x$9777$1c1CVa)))))
   (g$chi-rhs$7666$1c1CVa
     g$chi-rhs$11105$1c1CVa
     (case-lambda
       ((g$rhs$9788$1c1CVa g$r$9789$1c1CVa g$mr$9790$1c1CVa)
        ((case-lambda
           ((g$t$9791$1c1CVa)
            (if (memv g$t$9791$1c1CVa '(defun))
              (g$chi-defun$7665$1c1CVa
                (cdr g$rhs$9788$1c1CVa)
                g$r$9789$1c1CVa
                g$mr$9790$1c1CVa)
              (if (memv g$t$9791$1c1CVa '(expr))
                ((case-lambda
                   ((g$expr$9792$1c1CVa)
                    (g$chi-expr$7660$1c1CVa
                      g$expr$9792$1c1CVa
                      g$r$9789$1c1CVa
                      g$mr$9790$1c1CVa)))
                 (cdr g$rhs$9788$1c1CVa))
                (if (memv g$t$9791$1c1CVa '(top-expr))
                  ((case-lambda
                     ((g$expr$9793$1c1CVa)
                      (g$build-sequence$7298$1c1CVa
                        '#f
                        (list
                          (g$chi-expr$7660$1c1CVa
                            g$expr$9793$1c1CVa
                            g$r$9789$1c1CVa
                            g$mr$9790$1c1CVa)
                          (g$build-void$7299$1c1CVa)))))
                   (cdr g$rhs$9788$1c1CVa))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9788$1c1CVa))))))
         (car g$rhs$9788$1c1CVa)))))
   (g$expand-interaction-rhs*/init*$7667$1c1CVa
     g$expand-interaction-rhs*/init*$11106$1c1CVa
     (case-lambda
       ((g$lhs*$9794$1c1CVa
          g$rhs*$9795$1c1CVa
          g$init*$9796$1c1CVa
          g$r$9797$1c1CVa
          g$mr$9798$1c1CVa)
        ((letrec ((g$f$9799$1c1CVa
                    (case-lambda
                      ((g$lhs*$9800$1c1CVa g$rhs*$9801$1c1CVa)
                       (if (null? g$lhs*$9800$1c1CVa)
                         (map (case-lambda
                                ((g$x$9802$1c1CVa)
                                 (g$chi-expr$7660$1c1CVa
                                   g$x$9802$1c1CVa
                                   g$r$9797$1c1CVa
                                   g$mr$9798$1c1CVa)))
                              g$init*$9796$1c1CVa)
                         ((case-lambda
                            ((g$lhs$9803$1c1CVa g$rhs$9804$1c1CVa)
                             ((case-lambda
                                ((g$t$9805$1c1CVa)
                                 (if (memv g$t$9805$1c1CVa '(defun))
                                   ((case-lambda
                                      ((g$rhs$9806$1c1CVa)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9803$1c1CVa
                                           g$rhs$9806$1c1CVa)
                                         (g$f$9799$1c1CVa
                                           (cdr g$lhs*$9800$1c1CVa)
                                           (cdr g$rhs*$9801$1c1CVa)))))
                                    (g$chi-defun$7665$1c1CVa
                                      (cdr g$rhs$9804$1c1CVa)
                                      g$r$9797$1c1CVa
                                      g$mr$9798$1c1CVa))
                                   (if (memv g$t$9805$1c1CVa '(expr))
                                     ((case-lambda
                                        ((g$rhs$9807$1c1CVa)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9803$1c1CVa
                                             g$rhs$9807$1c1CVa)
                                           (g$f$9799$1c1CVa
                                             (cdr g$lhs*$9800$1c1CVa)
                                             (cdr g$rhs*$9801$1c1CVa)))))
                                      (g$chi-expr$7660$1c1CVa
                                        (cdr g$rhs$9804$1c1CVa)
                                        g$r$9797$1c1CVa
                                        g$mr$9798$1c1CVa))
                                     (if (memv g$t$9805$1c1CVa '(top-expr))
                                       ((case-lambda
                                          ((g$e$9808$1c1CVa)
                                           (cons
                                             g$e$9808$1c1CVa
                                             (g$f$9799$1c1CVa
                                               (cdr g$lhs*$9800$1c1CVa)
                                               (cdr g$rhs*$9801$1c1CVa)))))
                                        (g$chi-expr$7660$1c1CVa
                                          (cdr g$rhs$9804$1c1CVa)
                                          g$r$9797$1c1CVa
                                          g$mr$9798$1c1CVa))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9804$1c1CVa))))))
                              (car g$rhs$9804$1c1CVa))))
                          (car g$lhs*$9800$1c1CVa)
                          (car g$rhs*$9801$1c1CVa)))))))
           g$f$9799$1c1CVa)
         g$lhs*$9794$1c1CVa
         g$rhs*$9795$1c1CVa))))
   (g$chi-rhs*$7668$1c1CVa
     g$chi-rhs*$11107$1c1CVa
     (case-lambda
       ((g$rhs*$9809$1c1CVa g$r$9810$1c1CVa g$mr$9811$1c1CVa)
        ((letrec ((g$f$9812$1c1CVa
                    (case-lambda
                      ((g$ls$9813$1c1CVa)
                       (if (null? g$ls$9813$1c1CVa)
                         '()
                         ((case-lambda
                            ((g$a$9814$1c1CVa)
                             (cons
                               g$a$9814$1c1CVa
                               (g$f$9812$1c1CVa (cdr g$ls$9813$1c1CVa)))))
                          (g$chi-rhs$7666$1c1CVa
                            (car g$ls$9813$1c1CVa)
                            g$r$9810$1c1CVa
                            g$mr$9811$1c1CVa)))))))
           g$f$9812$1c1CVa)
         g$rhs*$9809$1c1CVa))))
   (g$find-bound=?$7669$1c1CVa
     g$find-bound=?$11108$1c1CVa
     (case-lambda
       ((g$x$9815$1c1CVa g$lhs*$9816$1c1CVa g$rhs*$9817$1c1CVa)
        (if (null? g$lhs*$9816$1c1CVa)
          '#f
          (if (g$bound-id=?$7367$1c1CVa
                g$x$9815$1c1CVa
                (car g$lhs*$9816$1c1CVa))
            (car g$rhs*$9817$1c1CVa)
            (g$find-bound=?$7669$1c1CVa
              g$x$9815$1c1CVa
              (cdr g$lhs*$9816$1c1CVa)
              (cdr g$rhs*$9817$1c1CVa)))))))
   (g$find-dups$7670$1c1CVa
     g$find-dups$11109$1c1CVa
     (case-lambda
       ((g$ls$9818$1c1CVa)
        ((letrec ((g$f$9819$1c1CVa
                    (case-lambda
                      ((g$ls$9820$1c1CVa g$dups$9821$1c1CVa)
                       (if (null? g$ls$9820$1c1CVa)
                         g$dups$9821$1c1CVa
                         ((case-lambda
                            ((g$t$9822$1c1CVa)
                             (if g$t$9822$1c1CVa
                               ((case-lambda
                                  ((g$x$9823$1c1CVa)
                                   (g$f$9819$1c1CVa
                                     (cdr g$ls$9820$1c1CVa)
                                     (cons
                                       (list
                                         (car g$ls$9820$1c1CVa)
                                         g$x$9823$1c1CVa)
                                       g$dups$9821$1c1CVa))))
                                g$t$9822$1c1CVa)
                               (g$f$9819$1c1CVa
                                 (cdr g$ls$9820$1c1CVa)
                                 g$dups$9821$1c1CVa))))
                          (g$find-bound=?$7669$1c1CVa
                            (car g$ls$9820$1c1CVa)
                            (cdr g$ls$9820$1c1CVa)
                            (cdr g$ls$9820$1c1CVa))))))))
           g$f$9819$1c1CVa)
         g$ls$9818$1c1CVa
         '()))))
   (g$chi-internal$7671$1c1CVa
     g$chi-internal$11110$1c1CVa
     (case-lambda
       ((g$e*$9824$1c1CVa g$r$9825$1c1CVa g$mr$9826$1c1CVa)
        ((case-lambda
           ((g$rib$9827$1c1CVa)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7686$1c1CVa
                   (map (case-lambda
                          ((g$x$9835$1c1CVa)
                           (g$add-subst$7354$1c1CVa
                             g$rib$9827$1c1CVa
                             g$x$9835$1c1CVa)))
                        (g$syntax->list$7363$1c1CVa g$e*$9824$1c1CVa))
                   g$r$9825$1c1CVa
                   g$mr$9826$1c1CVa
                   '()
                   '()
                   '()
                   '()
                   g$rib$9827$1c1CVa
                   '#f)))
              (case-lambda
                ((g$e*$9836$1c1CVa
                   g$r$9837$1c1CVa
                   g$mr$9838$1c1CVa
                   g$lex*$9839$1c1CVa
                   g$rhs*$9840$1c1CVa
                   g$mod**$9841$1c1CVa
                   g$kwd*$9842$1c1CVa)
                 ((case-lambda
                    ((g$kwd*$9843$1c1CVa
                       g$mod**$9844$1c1CVa
                       g$rhs*$9845$1c1CVa
                       g$lex*$9846$1c1CVa
                       g$mr$9847$1c1CVa
                       g$r$9848$1c1CVa
                       g$e*$9849$1c1CVa)
                     (begin
                       (if (null? g$e*$9849$1c1CVa)
                         (g$syntax-violation$7751$1c1CVa
                           '#f
                           '"no expression in body"
                           g$e*$9849$1c1CVa)
                         (void))
                       ((case-lambda
                          ((g$init*$9850$1c1CVa)
                           ((case-lambda
                              ((g$rhs*$9851$1c1CVa)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7301$1c1CVa
                                     '#f
                                     (reverse g$lex*$9846$1c1CVa)
                                     (reverse g$rhs*$9851$1c1CVa)
                                     (g$build-sequence$7298$1c1CVa
                                       '#f
                                       g$init*$9850$1c1CVa)))))))
                            (g$chi-rhs*$7668$1c1CVa
                              g$rhs*$9845$1c1CVa
                              g$r$9848$1c1CVa
                              g$mr$9847$1c1CVa))))
                        (g$chi-expr*$7658$1c1CVa
                          (append
                            (apply append (reverse g$mod**$9844$1c1CVa))
                            g$e*$9849$1c1CVa)
                          g$r$9848$1c1CVa
                          g$mr$9847$1c1CVa)))))
                  g$kwd*$9842$1c1CVa
                  g$mod**$9841$1c1CVa
                  g$rhs*$9840$1c1CVa
                  g$lex*$9839$1c1CVa
                  g$mr$9838$1c1CVa
                  g$r$9837$1c1CVa
                  g$e*$9836$1c1CVa))))))
         (g$make-empty-rib$7327$1c1CVa)))))
   (g$parse-module$7672$1c1CVa
     g$parse-module$11111$1c1CVa
     (case-lambda
       ((g$e$9852$1c1CVa)
        ((case-lambda
           ((g$t$9853$1c1CVa)
            ((case-lambda
               ((g$ls/false$9854$1c1CVa)
                (if g$ls/false$9854$1c1CVa
                  (apply
                    (case-lambda
                      ((g$export*$9855$1c1CVa g$b*$9856$1c1CVa)
                       (begin
                         (if (not (g$for-all$5494$1c1CVa
                                    g$id?$7364$1c1CVa
                                    g$export*$9855$1c1CVa))
                           (g$syntax-violation$7751$1c1CVa
                             '#f
                             '"module exports must be identifiers"
                             g$e$9852$1c1CVa)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$9855$1c1CVa)
                           g$b*$9856$1c1CVa))))
                    g$ls/false$9854$1c1CVa)
                  ((case-lambda
                     ((g$t$9857$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$9858$1c1CVa)
                          (if g$ls/false$9858$1c1CVa
                            (apply
                              (case-lambda
                                ((g$name$9859$1c1CVa
                                   g$export*$9860$1c1CVa
                                   g$b*$9861$1c1CVa)
                                 (begin
                                   (if (not (g$id?$7364$1c1CVa
                                              g$name$9859$1c1CVa))
                                     (g$syntax-violation$7751$1c1CVa
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9852$1c1CVa)
                                     (void))
                                   (if (not (g$for-all$5494$1c1CVa
                                              g$id?$7364$1c1CVa
                                              g$export*$9860$1c1CVa))
                                     (g$syntax-violation$7751$1c1CVa
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9852$1c1CVa)
                                     (void))
                                   (values
                                     g$name$9859$1c1CVa
                                     (list->vector g$export*$9860$1c1CVa)
                                     g$b*$9861$1c1CVa))))
                              g$ls/false$9858$1c1CVa)
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"invalid syntax"
                              g$t$9857$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$9857$1c1CVa
                         '(_ any each-any . each-any)))))
                   g$t$9853$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$9853$1c1CVa
               '(_ each-any . each-any)))))
         g$e$9852$1c1CVa))))
   (g$8843$7673$1c1CVa
     g$8843$11112$1c1CVa
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8846$1c1CVa
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8845$7674$1c1CVa g$8845$11113$1c1CVa '#f)
   (g$8844$7675$1c1CVa
     g$8844$11114$1c1CVa
     (make-record-constructor-descriptor
       g$8843$7673$1c1CVa
       '#f
       g$8845$7674$1c1CVa))
   (g$module-interface?$7676$1c1CVa
     g$module-interface?$11115$1c1CVa
     (record-predicate g$8843$7673$1c1CVa))
   (g$make-module-interface$7677$1c1CVa
     g$make-module-interface$11116$1c1CVa
     (record-constructor g$8844$7675$1c1CVa))
   (g$module-interface-first-mark$7678$1c1CVa
     g$module-interface-first-mark$11117$1c1CVa
     (record-accessor g$8843$7673$1c1CVa '0))
   (g$module-interface-exp-id-vec$7679$1c1CVa
     g$module-interface-exp-id-vec$11118$1c1CVa
     (record-accessor g$8843$7673$1c1CVa '1))
   (g$module-interface-exp-lab-vec$7680$1c1CVa
     g$module-interface-exp-lab-vec$11119$1c1CVa
     (record-accessor g$8843$7673$1c1CVa '2))
   (g$set-module-interface-first-mark!$7681$1c1CVa
     g$set-module-interface-first-mark!$11120$1c1CVa
     (record-mutator g$8843$7673$1c1CVa '0))
   (g$set-module-interface-exp-id-vec!$7682$1c1CVa
     g$set-module-interface-exp-id-vec!$11121$1c1CVa
     (record-mutator g$8843$7673$1c1CVa '1))
   (g$set-module-interface-exp-lab-vec!$7683$1c1CVa
     g$set-module-interface-exp-lab-vec!$11122$1c1CVa
     (record-mutator g$8843$7673$1c1CVa '2))
   (g$module-interface-exp-id*$7684$1c1CVa
     g$module-interface-exp-id*$11123$1c1CVa
     (case-lambda
       ((g$iface$9862$1c1CVa g$id$9863$1c1CVa)
        (letrec* ((g$diff-marks$9864$1c1CVa
                    (case-lambda
                      ((g$ls$9868$1c1CVa g$x$9869$1c1CVa)
                       (begin
                         (if (null? g$ls$9868$1c1CVa)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9870$1c1CVa)
                             (if (eq? g$a$9870$1c1CVa g$x$9869$1c1CVa)
                               '()
                               (cons
                                 g$a$9870$1c1CVa
                                 (g$diff-marks$9864$1c1CVa
                                   (cdr g$ls$9868$1c1CVa)
                                   g$x$9869$1c1CVa)))))
                          (car g$ls$9868$1c1CVa)))))))
          ((case-lambda
             ((g$diff$9865$1c1CVa g$id-vec$9866$1c1CVa)
              (if (null? g$diff$9865$1c1CVa)
                g$id-vec$9866$1c1CVa
                (vector-map
                  (case-lambda
                    ((g$x$9867$1c1CVa)
                     (g$make-stx$7337$1c1CVa
                       (g$stx-expr$7338$1c1CVa g$x$9867$1c1CVa)
                       (append
                         g$diff$9865$1c1CVa
                         (g$stx-mark*$7339$1c1CVa g$x$9867$1c1CVa))
                       '()
                       '())))
                  g$id-vec$9866$1c1CVa))))
           (g$diff-marks$9864$1c1CVa
             (g$stx-mark*$7339$1c1CVa g$id$9863$1c1CVa)
             (g$module-interface-first-mark$7678$1c1CVa g$iface$9862$1c1CVa))
           (g$module-interface-exp-id-vec$7679$1c1CVa g$iface$9862$1c1CVa))))))
   (g$chi-internal-module$7685$1c1CVa
     g$chi-internal-module$11124$1c1CVa
     (case-lambda
       ((g$e$9871$1c1CVa
          g$r$9872$1c1CVa
          g$mr$9873$1c1CVa
          g$lex*$9874$1c1CVa
          g$rhs*$9875$1c1CVa
          g$mod**$9876$1c1CVa
          g$kwd*$9877$1c1CVa)
        (call-with-values
          (case-lambda (() (g$parse-module$7672$1c1CVa g$e$9871$1c1CVa)))
          (case-lambda
            ((g$name$9881$1c1CVa g$exp-id*$9882$1c1CVa g$e*$9883$1c1CVa)
             ((case-lambda
                ((g$e*$9884$1c1CVa g$exp-id*$9885$1c1CVa g$name$9886$1c1CVa)
                 ((case-lambda
                    ((g$rib$9887$1c1CVa)
                     ((case-lambda
                        ((g$e*$9888$1c1CVa)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7686$1c1CVa
                                    g$e*$9888$1c1CVa
                                    g$r$9872$1c1CVa
                                    g$mr$9873$1c1CVa
                                    g$lex*$9874$1c1CVa
                                    g$rhs*$9875$1c1CVa
                                    g$mod**$9876$1c1CVa
                                    g$kwd*$9877$1c1CVa
                                    g$rib$9887$1c1CVa
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9896$1c1CVa
                                    g$r$9897$1c1CVa
                                    g$mr$9898$1c1CVa
                                    g$lex*$9899$1c1CVa
                                    g$rhs*$9900$1c1CVa
                                    g$mod**$9901$1c1CVa
                                    g$kwd*$9902$1c1CVa)
                                  ((case-lambda
                                     ((g$kwd*$9903$1c1CVa
                                        g$mod**$9904$1c1CVa
                                        g$rhs*$9905$1c1CVa
                                        g$lex*$9906$1c1CVa
                                        g$mr$9907$1c1CVa
                                        g$r$9908$1c1CVa
                                        g$e*$9909$1c1CVa)
                                      ((case-lambda
                                         ((g$exp-lab*$9910$1c1CVa
                                            g$mod**$9911$1c1CVa)
                                          (if (not g$name$9886$1c1CVa)
                                            (values
                                              g$lex*$9906$1c1CVa
                                              g$rhs*$9905$1c1CVa
                                              g$exp-id*$9885$1c1CVa
                                              g$exp-lab*$9910$1c1CVa
                                              g$r$9908$1c1CVa
                                              g$mr$9907$1c1CVa
                                              g$mod**$9911$1c1CVa
                                              g$kwd*$9903$1c1CVa)
                                            ((case-lambda
                                               ((g$lab$9912$1c1CVa
                                                  g$iface$9913$1c1CVa)
                                                (values
                                                  g$lex*$9906$1c1CVa
                                                  g$rhs*$9905$1c1CVa
                                                  (vector g$name$9886$1c1CVa)
                                                  (vector g$lab$9912$1c1CVa)
                                                  (cons
                                                    (cons
                                                      g$lab$9912$1c1CVa
                                                      (cons
                                                        '$module
                                                        g$iface$9913$1c1CVa))
                                                    g$r$9908$1c1CVa)
                                                  (cons
                                                    (cons
                                                      g$lab$9912$1c1CVa
                                                      (cons
                                                        '$module
                                                        g$iface$9913$1c1CVa))
                                                    g$mr$9907$1c1CVa)
                                                  g$mod**$9911$1c1CVa
                                                  g$kwd*$9903$1c1CVa)))
                                             (g$gen-label$7310$1c1CVa 'module)
                                             (g$make-module-interface$7677$1c1CVa
                                               (car (g$stx-mark*$7339$1c1CVa
                                                      g$name$9886$1c1CVa))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9914$1c1CVa)
                                                    (g$make-stx$7337$1c1CVa
                                                      (g$stx-expr$7338$1c1CVa
                                                        g$x$9914$1c1CVa)
                                                      (g$stx-mark*$7339$1c1CVa
                                                        g$x$9914$1c1CVa)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9885$1c1CVa)
                                               g$exp-lab*$9910$1c1CVa)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9915$1c1CVa)
                                            ((case-lambda
                                               ((g$t$9916$1c1CVa)
                                                (if g$t$9916$1c1CVa
                                                  g$t$9916$1c1CVa
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7751$1c1CVa
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9915$1c1CVa)))))
                                             (g$id->label$7377$1c1CVa
                                               (g$make-stx$7337$1c1CVa
                                                 (g$id->sym$7365$1c1CVa
                                                   g$x$9915$1c1CVa)
                                                 (g$stx-mark*$7339$1c1CVa
                                                   g$x$9915$1c1CVa)
                                                 (list g$rib$9887$1c1CVa)
                                                 '())))))
                                         g$exp-id*$9885$1c1CVa)
                                       (cons
                                         g$e*$9909$1c1CVa
                                         g$mod**$9904$1c1CVa))))
                                   g$kwd*$9902$1c1CVa
                                   g$mod**$9901$1c1CVa
                                   g$rhs*$9900$1c1CVa
                                   g$lex*$9899$1c1CVa
                                   g$mr$9898$1c1CVa
                                   g$r$9897$1c1CVa
                                   g$e*$9896$1c1CVa)))))))))
                      (map (case-lambda
                             ((g$x$9917$1c1CVa)
                              (g$add-subst$7354$1c1CVa
                                g$rib$9887$1c1CVa
                                g$x$9917$1c1CVa)))
                           (g$syntax->list$7363$1c1CVa g$e*$9884$1c1CVa)))))
                  (g$make-empty-rib$7327$1c1CVa))))
              g$e*$9883$1c1CVa
              g$exp-id*$9882$1c1CVa
              g$name$9881$1c1CVa)))))))
   (g$chi-body*$7686$1c1CVa
     g$chi-body*$11125$1c1CVa
     (case-lambda
       ((g$e*$9918$1c1CVa
          g$r$9919$1c1CVa
          g$mr$9920$1c1CVa
          g$lex*$9921$1c1CVa
          g$rhs*$9922$1c1CVa
          g$mod**$9923$1c1CVa
          g$kwd*$9924$1c1CVa
          g$rib$9925$1c1CVa
          g$top?$9926$1c1CVa)
        (if (null? g$e*$9918$1c1CVa)
          (values
            g$e*$9918$1c1CVa
            g$r$9919$1c1CVa
            g$mr$9920$1c1CVa
            g$lex*$9921$1c1CVa
            g$rhs*$9922$1c1CVa
            g$mod**$9923$1c1CVa
            g$kwd*$9924$1c1CVa)
          ((case-lambda
             ((g$e$9927$1c1CVa)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7384$1c1CVa g$e$9927$1c1CVa g$r$9919$1c1CVa)))
                (case-lambda
                  ((g$type$9931$1c1CVa g$value$9932$1c1CVa g$kwd$9933$1c1CVa)
                   ((case-lambda
                      ((g$kwd$9934$1c1CVa
                         g$value$9935$1c1CVa
                         g$type$9936$1c1CVa)
                       ((case-lambda
                          ((g$kwd*$9937$1c1CVa)
                           ((case-lambda
                              ((g$t$9938$1c1CVa)
                               (if (memv g$t$9938$1c1CVa '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7582$1c1CVa
                                        g$e$9927$1c1CVa)))
                                   (case-lambda
                                     ((g$id$9941$1c1CVa g$rhs$9942$1c1CVa)
                                      ((case-lambda
                                         ((g$rhs$9943$1c1CVa g$id$9944$1c1CVa)
                                          (begin
                                            (if (g$bound-id-member?$7371$1c1CVa
                                                  g$id$9944$1c1CVa
                                                  g$kwd*$9937$1c1CVa)
                                              (g$syntax-violation$7751$1c1CVa
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9927$1c1CVa)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7312$1c1CVa
                                                   g$id$9944$1c1CVa
                                                   g$rib$9925$1c1CVa)))
                                              (case-lambda
                                                ((g$lab$9947$1c1CVa
                                                   g$lex$9948$1c1CVa)
                                                 ((case-lambda
                                                    ((g$lex$9949$1c1CVa
                                                       g$lab$9950$1c1CVa)
                                                     (begin
                                                       (g$extend-rib!$7328$1c1CVa
                                                         g$rib$9925$1c1CVa
                                                         g$id$9944$1c1CVa
                                                         g$lab$9950$1c1CVa)
                                                       (g$chi-body*$7686$1c1CVa
                                                         (cdr g$e*$9918$1c1CVa)
                                                         (g$add-lexical$7589$1c1CVa
                                                           g$lab$9950$1c1CVa
                                                           g$lex$9949$1c1CVa
                                                           g$r$9919$1c1CVa)
                                                         g$mr$9920$1c1CVa
                                                         (cons
                                                           g$lex$9949$1c1CVa
                                                           g$lex*$9921$1c1CVa)
                                                         (cons
                                                           g$rhs$9943$1c1CVa
                                                           g$rhs*$9922$1c1CVa)
                                                         g$mod**$9923$1c1CVa
                                                         g$kwd*$9937$1c1CVa
                                                         g$rib$9925$1c1CVa
                                                         g$top?$9926$1c1CVa))))
                                                  g$lex$9948$1c1CVa
                                                  g$lab$9947$1c1CVa)))))))
                                       g$rhs$9942$1c1CVa
                                       g$id$9941$1c1CVa))))
                                 (if (memv g$t$9938$1c1CVa '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7583$1c1CVa
                                          g$e$9927$1c1CVa)))
                                     (case-lambda
                                       ((g$id$9953$1c1CVa g$rhs$9954$1c1CVa)
                                        ((case-lambda
                                           ((g$rhs$9955$1c1CVa g$id$9956$1c1CVa)
                                            (begin
                                              (if (g$bound-id-member?$7371$1c1CVa
                                                    g$id$9956$1c1CVa
                                                    g$kwd*$9937$1c1CVa)
                                                (g$syntax-violation$7751$1c1CVa
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9927$1c1CVa)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9957$1c1CVa
                                                    g$expanded-rhs$9958$1c1CVa)
                                                  (begin
                                                    (g$extend-rib!$7328$1c1CVa
                                                      g$rib$9925$1c1CVa
                                                      g$id$9956$1c1CVa
                                                      g$lab$9957$1c1CVa)
                                                    ((case-lambda
                                                       ((g$b$9959$1c1CVa)
                                                        (g$chi-body*$7686$1c1CVa
                                                          (cdr g$e*$9918$1c1CVa)
                                                          (cons
                                                            (cons
                                                              g$lab$9957$1c1CVa
                                                              g$b$9959$1c1CVa)
                                                            g$r$9919$1c1CVa)
                                                          (cons
                                                            (cons
                                                              g$lab$9957$1c1CVa
                                                              g$b$9959$1c1CVa)
                                                            g$mr$9920$1c1CVa)
                                                          g$lex*$9921$1c1CVa
                                                          g$rhs*$9922$1c1CVa
                                                          g$mod**$9923$1c1CVa
                                                          g$kwd*$9937$1c1CVa
                                                          g$rib$9925$1c1CVa
                                                          g$top?$9926$1c1CVa)))
                                                     (g$make-eval-transformer$7396$1c1CVa
                                                       g$expanded-rhs$9958$1c1CVa)))))
                                               (g$gen-define-label$7313$1c1CVa
                                                 g$id$9956$1c1CVa
                                                 g$rib$9925$1c1CVa)
                                               (g$expand-transformer$7687$1c1CVa
                                                 g$rhs$9955$1c1CVa
                                                 g$mr$9920$1c1CVa)))))
                                         g$rhs$9954$1c1CVa
                                         g$id$9953$1c1CVa))))
                                   (if (memv
                                         g$t$9938$1c1CVa
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9960$1c1CVa)
                                         ((case-lambda
                                            ((g$ls/false$9961$1c1CVa)
                                             (if (if g$ls/false$9961$1c1CVa
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9962$1c1CVa
                                                            g$xrhs*$9963$1c1CVa
                                                            g$xbody*$9964$1c1CVa)
                                                          (if (not (g$valid-bound-ids?$7369$1c1CVa
                                                                     g$xlhs*$9962$1c1CVa))
                                                            (g$syntax-violation$7751$1c1CVa
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9927$1c1CVa)
                                                            (void))))
                                                       g$ls/false$9961$1c1CVa))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9965$1c1CVa
                                                      g$xrhs*$9966$1c1CVa
                                                      g$xbody*$9967$1c1CVa)
                                                    ((case-lambda
                                                       ((g$xlab*$9968$1c1CVa)
                                                        ((case-lambda
                                                           ((g$xrib$9969$1c1CVa)
                                                            ((case-lambda
                                                               ((g$xb*$9970$1c1CVa)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7686$1c1CVa
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9971$1c1CVa)
                                                                                (g$add-subst$7354$1c1CVa
                                                                                  g$xrib$9969$1c1CVa
                                                                                  g$x$9971$1c1CVa)))
                                                                             g$xbody*$9967$1c1CVa)
                                                                        (cdr g$e*$9918$1c1CVa))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9968$1c1CVa
                                                                             g$xb*$9970$1c1CVa)
                                                                        g$r$9919$1c1CVa)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9968$1c1CVa
                                                                             g$xb*$9970$1c1CVa)
                                                                        g$mr$9920$1c1CVa)
                                                                      g$lex*$9921$1c1CVa
                                                                      g$rhs*$9922$1c1CVa
                                                                      g$mod**$9923$1c1CVa
                                                                      g$kwd*$9937$1c1CVa
                                                                      g$rib$9925$1c1CVa
                                                                      g$top?$9926$1c1CVa))))))
                                                             (map (case-lambda
                                                                    ((g$x$9972$1c1CVa)
                                                                     (g$make-eval-transformer$7396$1c1CVa
                                                                       (g$expand-transformer$7687$1c1CVa
                                                                         (if (eq? g$type$9936$1c1CVa
                                                                                  'let-syntax)
                                                                           g$x$9972$1c1CVa
                                                                           (g$add-subst$7354$1c1CVa
                                                                             g$xrib$9969$1c1CVa
                                                                             g$x$9972$1c1CVa))
                                                                         g$mr$9920$1c1CVa))))
                                                                  g$xrhs*$9966$1c1CVa))))
                                                         (g$make-full-rib$7332$1c1CVa
                                                           g$xlhs*$9965$1c1CVa
                                                           g$xlab*$9968$1c1CVa))))
                                                     (map g$gen-label$7310$1c1CVa
                                                          g$xlhs*$9965$1c1CVa))))
                                                 g$ls/false$9961$1c1CVa)
                                               (g$syntax-violation$7751$1c1CVa
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9960$1c1CVa))))
                                          (g$syntax-dispatch$7642$1c1CVa
                                            g$t$9960$1c1CVa
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9927$1c1CVa)
                                     (if (memv g$t$9938$1c1CVa '(begin))
                                       ((case-lambda
                                          ((g$t$9973$1c1CVa)
                                           ((case-lambda
                                              ((g$ls/false$9974$1c1CVa)
                                               (if g$ls/false$9974$1c1CVa
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9975$1c1CVa)
                                                      (g$chi-body*$7686$1c1CVa
                                                        (append
                                                          g$x*$9975$1c1CVa
                                                          (cdr g$e*$9918$1c1CVa))
                                                        g$r$9919$1c1CVa
                                                        g$mr$9920$1c1CVa
                                                        g$lex*$9921$1c1CVa
                                                        g$rhs*$9922$1c1CVa
                                                        g$mod**$9923$1c1CVa
                                                        g$kwd*$9937$1c1CVa
                                                        g$rib$9925$1c1CVa
                                                        g$top?$9926$1c1CVa)))
                                                   g$ls/false$9974$1c1CVa)
                                                 (g$syntax-violation$7751$1c1CVa
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9973$1c1CVa))))
                                            (g$syntax-dispatch$7642$1c1CVa
                                              g$t$9973$1c1CVa
                                              '(_ . each-any)))))
                                        g$e$9927$1c1CVa)
                                       (if (memv
                                             g$t$9938$1c1CVa
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7686$1c1CVa
                                           (cons
                                             (g$add-subst$7354$1c1CVa
                                               g$rib$9925$1c1CVa
                                               (g$chi-global-macro$7657$1c1CVa
                                                 g$value$9935$1c1CVa
                                                 g$e$9927$1c1CVa))
                                             (cdr g$e*$9918$1c1CVa))
                                           g$r$9919$1c1CVa
                                           g$mr$9920$1c1CVa
                                           g$lex*$9921$1c1CVa
                                           g$rhs*$9922$1c1CVa
                                           g$mod**$9923$1c1CVa
                                           g$kwd*$9937$1c1CVa
                                           g$rib$9925$1c1CVa
                                           g$top?$9926$1c1CVa)
                                         (if (memv
                                               g$t$9938$1c1CVa
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7686$1c1CVa
                                             (cons
                                               (g$add-subst$7354$1c1CVa
                                                 g$rib$9925$1c1CVa
                                                 (g$chi-local-macro$7656$1c1CVa
                                                   g$value$9935$1c1CVa
                                                   g$e$9927$1c1CVa))
                                               (cdr g$e*$9918$1c1CVa))
                                             g$r$9919$1c1CVa
                                             g$mr$9920$1c1CVa
                                             g$lex*$9921$1c1CVa
                                             g$rhs*$9922$1c1CVa
                                             g$mod**$9923$1c1CVa
                                             g$kwd*$9937$1c1CVa
                                             g$rib$9925$1c1CVa
                                             g$top?$9926$1c1CVa)
                                           (if (memv
                                                 g$t$9938$1c1CVa
                                                 '(macro macro!))
                                             (g$chi-body*$7686$1c1CVa
                                               (cons
                                                 (g$add-subst$7354$1c1CVa
                                                   g$rib$9925$1c1CVa
                                                   (g$chi-macro$7655$1c1CVa
                                                     g$value$9935$1c1CVa
                                                     g$e$9927$1c1CVa))
                                                 (cdr g$e*$9918$1c1CVa))
                                               g$r$9919$1c1CVa
                                               g$mr$9920$1c1CVa
                                               g$lex*$9921$1c1CVa
                                               g$rhs*$9922$1c1CVa
                                               g$mod**$9923$1c1CVa
                                               g$kwd*$9937$1c1CVa
                                               g$rib$9925$1c1CVa
                                               g$top?$9926$1c1CVa)
                                             (if (memv
                                                   g$t$9938$1c1CVa
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7685$1c1CVa
                                                      g$e$9927$1c1CVa
                                                      g$r$9919$1c1CVa
                                                      g$mr$9920$1c1CVa
                                                      g$lex*$9921$1c1CVa
                                                      g$rhs*$9922$1c1CVa
                                                      g$mod**$9923$1c1CVa
                                                      g$kwd*$9937$1c1CVa)))
                                                 (case-lambda
                                                   ((g$lex*$9984$1c1CVa
                                                      g$rhs*$9985$1c1CVa
                                                      g$m-exp-id*$9986$1c1CVa
                                                      g$m-exp-lab*$9987$1c1CVa
                                                      g$r$9988$1c1CVa
                                                      g$mr$9989$1c1CVa
                                                      g$mod**$9990$1c1CVa
                                                      g$kwd*$9991$1c1CVa)
                                                    ((case-lambda
                                                       ((g$kwd*$9992$1c1CVa
                                                          g$mod**$9993$1c1CVa
                                                          g$mr$9994$1c1CVa
                                                          g$r$9995$1c1CVa
                                                          g$m-exp-lab*$9996$1c1CVa
                                                          g$m-exp-id*$9997$1c1CVa
                                                          g$rhs*$9998$1c1CVa
                                                          g$lex*$9999$1c1CVa)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10000$1c1CVa
                                                                 g$lab$10001$1c1CVa)
                                                               (g$extend-rib!$7328$1c1CVa
                                                                 g$rib$9925$1c1CVa
                                                                 g$id$10000$1c1CVa
                                                                 g$lab$10001$1c1CVa)))
                                                            g$m-exp-id*$9997$1c1CVa
                                                            g$m-exp-lab*$9996$1c1CVa)
                                                          (g$chi-body*$7686$1c1CVa
                                                            (cdr g$e*$9918$1c1CVa)
                                                            g$r$9995$1c1CVa
                                                            g$mr$9994$1c1CVa
                                                            g$lex*$9999$1c1CVa
                                                            g$rhs*$9998$1c1CVa
                                                            g$mod**$9993$1c1CVa
                                                            g$kwd*$9992$1c1CVa
                                                            g$rib$9925$1c1CVa
                                                            g$top?$9926$1c1CVa))))
                                                     g$kwd*$9991$1c1CVa
                                                     g$mod**$9990$1c1CVa
                                                     g$mr$9989$1c1CVa
                                                     g$r$9988$1c1CVa
                                                     g$m-exp-lab*$9987$1c1CVa
                                                     g$m-exp-id*$9986$1c1CVa
                                                     g$rhs*$9985$1c1CVa
                                                     g$lex*$9984$1c1CVa))))
                                               (if (memv
                                                     g$t$9938$1c1CVa
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$7735$1c1CVa
                                                     (g$stx->datum$7375$1c1CVa
                                                       g$e$9927$1c1CVa))
                                                   (g$chi-body*$7686$1c1CVa
                                                     (cdr g$e*$9918$1c1CVa)
                                                     g$r$9919$1c1CVa
                                                     g$mr$9920$1c1CVa
                                                     g$lex*$9921$1c1CVa
                                                     g$rhs*$9922$1c1CVa
                                                     g$mod**$9923$1c1CVa
                                                     g$kwd*$9937$1c1CVa
                                                     g$rib$9925$1c1CVa
                                                     g$top?$9926$1c1CVa))
                                                 (if (memv
                                                       g$t$9938$1c1CVa
                                                       '(import))
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10002$1c1CVa
                                                                     (case-lambda
                                                                       ((g$e$10044$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$t$10045$1c1CVa)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10046$1c1CVa)
                                                                                (if (if g$ls/false$10046$1c1CVa
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10047$1c1CVa)
                                                                                             (g$id?$7364$1c1CVa
                                                                                               g$id$10047$1c1CVa)))
                                                                                          g$ls/false$10046$1c1CVa))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10048$1c1CVa)
                                                                                       '#t))
                                                                                    g$ls/false$10046$1c1CVa)
                                                                                  ((case-lambda
                                                                                     ((g$t$10049$1c1CVa)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10050$1c1CVa)
                                                                                          (if g$ls/false$10050$1c1CVa
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10051$1c1CVa)
                                                                                                 '#f))
                                                                                              g$ls/false$10050$1c1CVa)
                                                                                            ((case-lambda
                                                                                               ((g$t$10052$1c1CVa)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10053$1c1CVa)
                                                                                                    (if g$ls/false$10053$1c1CVa
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7751$1c1CVa
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10044$1c1CVa)))
                                                                                                        g$ls/false$10053$1c1CVa)
                                                                                                      (g$syntax-violation$7751$1c1CVa
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10052$1c1CVa))))
                                                                                                 (g$syntax-dispatch$7642$1c1CVa
                                                                                                   g$t$10052$1c1CVa
                                                                                                   '_))))
                                                                                             g$t$10049$1c1CVa))))
                                                                                       (g$syntax-dispatch$7642$1c1CVa
                                                                                         g$t$10049$1c1CVa
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10045$1c1CVa))))
                                                                             (g$syntax-dispatch$7642$1c1CVa
                                                                               g$t$10045$1c1CVa
                                                                               '(_ any)))))
                                                                         g$e$10044$1c1CVa))))
                                                                   (g$module-import$10003$1c1CVa
                                                                     (case-lambda
                                                                       ((g$e$10027$1c1CVa
                                                                          g$r$10028$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$t$10029$1c1CVa)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10030$1c1CVa)
                                                                                (if (if g$ls/false$10030$1c1CVa
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10031$1c1CVa)
                                                                                             (g$id?$7364$1c1CVa
                                                                                               g$id$10031$1c1CVa)))
                                                                                          g$ls/false$10030$1c1CVa))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10032$1c1CVa)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7384$1c1CVa
                                                                                              g$id$10032$1c1CVa
                                                                                              g$r$10028$1c1CVa)))
                                                                                         (case-lambda
                                                                                           ((g$type$10036$1c1CVa
                                                                                              g$value$10037$1c1CVa
                                                                                              g$kwd$10038$1c1CVa)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10039$1c1CVa
                                                                                                  g$value$10040$1c1CVa
                                                                                                  g$type$10041$1c1CVa)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10042$1c1CVa)
                                                                                                    (if (memv
                                                                                                          g$t$10042$1c1CVa
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10043$1c1CVa)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7684$1c1CVa
                                                                                                              g$iface$10043$1c1CVa
                                                                                                              g$id$10032$1c1CVa)
                                                                                                            (g$module-interface-exp-lab-vec$7680$1c1CVa
                                                                                                              g$iface$10043$1c1CVa))))
                                                                                                       g$value$10040$1c1CVa)
                                                                                                      (g$syntax-violation$7751$1c1CVa
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10027$1c1CVa))))
                                                                                                 g$type$10041$1c1CVa)))
                                                                                             g$kwd$10038$1c1CVa
                                                                                             g$value$10037$1c1CVa
                                                                                             g$type$10036$1c1CVa))))))
                                                                                    g$ls/false$10030$1c1CVa)
                                                                                  (g$syntax-violation$7751$1c1CVa
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10029$1c1CVa))))
                                                                             (g$syntax-dispatch$7642$1c1CVa
                                                                               g$t$10029$1c1CVa
                                                                               '(_ any)))))
                                                                         g$e$10027$1c1CVa))))
                                                                   (g$library-import$10004$1c1CVa
                                                                     (case-lambda
                                                                       ((g$e$10013$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$t$10014$1c1CVa)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10015$1c1CVa)
                                                                                (if g$ls/false$10015$1c1CVa
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10016$1c1CVa
                                                                                         g$imp*$10017$1c1CVa)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7691$1c1CVa
                                                                                              (g$syntax->datum$7754$1c1CVa
                                                                                                g$imp*$10017$1c1CVa))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10020$1c1CVa
                                                                                              g$subst-labels$10021$1c1CVa)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10022$1c1CVa
                                                                                                  g$subst-names$10023$1c1CVa)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10024$1c1CVa)
                                                                                                       (g$datum->stx$7347$1c1CVa
                                                                                                         g$ctxt$10016$1c1CVa
                                                                                                         g$name$10024$1c1CVa)))
                                                                                                    g$subst-names$10023$1c1CVa)
                                                                                                  g$subst-labels$10022$1c1CVa)))
                                                                                             g$subst-labels$10021$1c1CVa
                                                                                             g$subst-names$10020$1c1CVa))))))
                                                                                    g$ls/false$10015$1c1CVa)
                                                                                  ((case-lambda
                                                                                     ((g$t$10025$1c1CVa)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10026$1c1CVa)
                                                                                          (if g$ls/false$10026$1c1CVa
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7751$1c1CVa
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10013$1c1CVa)))
                                                                                              g$ls/false$10026$1c1CVa)
                                                                                            (g$syntax-violation$7751$1c1CVa
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10025$1c1CVa))))
                                                                                       (g$syntax-dispatch$7642$1c1CVa
                                                                                         g$t$10025$1c1CVa
                                                                                         '_))))
                                                                                   g$t$10014$1c1CVa))))
                                                                             (g$syntax-dispatch$7642$1c1CVa
                                                                               g$t$10014$1c1CVa
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10013$1c1CVa)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$10002$1c1CVa
                                                                      g$e$9927$1c1CVa)
                                                                  (g$module-import$10003$1c1CVa
                                                                    g$e$9927$1c1CVa
                                                                    g$r$9919$1c1CVa)
                                                                  (g$library-import$10004$1c1CVa
                                                                    g$e$9927$1c1CVa))))
                                                             (case-lambda
                                                               ((g$id*$10007$1c1CVa
                                                                  g$lab*$10008$1c1CVa)
                                                                ((case-lambda
                                                                   ((g$lab*$10009$1c1CVa
                                                                      g$id*$10010$1c1CVa)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$10011$1c1CVa
                                                                           g$lab$10012$1c1CVa)
                                                                         (g$extend-rib!$7328$1c1CVa
                                                                           g$rib$9925$1c1CVa
                                                                           g$id$10011$1c1CVa
                                                                           g$lab$10012$1c1CVa)))
                                                                      g$id*$10010$1c1CVa
                                                                      g$lab*$10009$1c1CVa)))
                                                                 g$lab*$10008$1c1CVa
                                                                 g$id*$10007$1c1CVa))))))))
                                                     (g$chi-body*$7686$1c1CVa
                                                       (cdr g$e*$9918$1c1CVa)
                                                       g$r$9919$1c1CVa
                                                       g$mr$9920$1c1CVa
                                                       g$lex*$9921$1c1CVa
                                                       g$rhs*$9922$1c1CVa
                                                       g$mod**$9923$1c1CVa
                                                       g$kwd*$9937$1c1CVa
                                                       g$rib$9925$1c1CVa
                                                       g$top?$9926$1c1CVa))
                                                   (if g$top?$9926$1c1CVa
                                                     (g$chi-body*$7686$1c1CVa
                                                       (cdr g$e*$9918$1c1CVa)
                                                       g$r$9919$1c1CVa
                                                       g$mr$9920$1c1CVa
                                                       (cons
                                                         (g$gen-lexical$7308$1c1CVa
                                                           'dummy)
                                                         g$lex*$9921$1c1CVa)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$9927$1c1CVa)
                                                         g$rhs*$9922$1c1CVa)
                                                       g$mod**$9923$1c1CVa
                                                       g$kwd*$9937$1c1CVa
                                                       g$rib$9925$1c1CVa
                                                       g$top?$9926$1c1CVa)
                                                     (values
                                                       g$e*$9918$1c1CVa
                                                       g$r$9919$1c1CVa
                                                       g$mr$9920$1c1CVa
                                                       g$lex*$9921$1c1CVa
                                                       g$rhs*$9922$1c1CVa
                                                       g$mod**$9923$1c1CVa
                                                       g$kwd*$9937$1c1CVa))))))))))))))
                            g$type$9936$1c1CVa)))
                        (if (g$id?$7364$1c1CVa g$kwd$9934$1c1CVa)
                          (cons g$kwd$9934$1c1CVa g$kwd*$9924$1c1CVa)
                          g$kwd*$9924$1c1CVa))))
                    g$kwd$9933$1c1CVa
                    g$value$9932$1c1CVa
                    g$type$9931$1c1CVa))))))
           (car g$e*$9918$1c1CVa))))))
   (g$expand-transformer$7687$1c1CVa
     g$expand-transformer$11126$1c1CVa
     (case-lambda
       ((g$expr$10054$1c1CVa g$r$10055$1c1CVa)
        ((case-lambda
           ((g$rtc$10056$1c1CVa)
            ((case-lambda
               ((g$expanded-rhs$10057$1c1CVa)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$10058$1c1CVa)
                        (case-lambda
                          ((g$x$10059$1c1CVa)
                           (begin
                             (g$invoke-library$7179$1c1CVa g$x$10059$1c1CVa)
                             (g$mark-visit$10058$1c1CVa g$x$10059$1c1CVa))))))
                     (g$vis-collector$7695$1c1CVa))
                    (g$rtc$10056$1c1CVa))
                  g$expanded-rhs$10057$1c1CVa)))
             ((case-lambda
                ((g$inv-collector$10064$1c1CVa
                   g$vis-collector$10065$1c1CVa
                   g$inv-collector$10066$1c1CVa
                   g$vis-collector$10067$1c1CVa)
                 ((case-lambda
                    ((g$swap$10068$1c1CVa)
                     (dynamic-wind
                       g$swap$10068$1c1CVa
                       (case-lambda
                         (()
                          (g$chi-expr$7660$1c1CVa
                            g$expr$10054$1c1CVa
                            g$r$10055$1c1CVa
                            g$r$10055$1c1CVa)))
                       g$swap$10068$1c1CVa)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10069$1c1CVa)
                           (begin
                             (g$inv-collector$10064$1c1CVa
                               g$inv-collector$10066$1c1CVa)
                             (set! g$inv-collector$10066$1c1CVa
                               g$t$10069$1c1CVa))))
                        (g$inv-collector$10064$1c1CVa))
                       ((case-lambda
                          ((g$t$10070$1c1CVa)
                           (begin
                             (g$vis-collector$10065$1c1CVa
                               g$vis-collector$10067$1c1CVa)
                             (set! g$vis-collector$10067$1c1CVa
                               g$t$10070$1c1CVa))))
                        (g$vis-collector$10065$1c1CVa))))))))
              g$inv-collector$7694$1c1CVa
              g$vis-collector$7695$1c1CVa
              g$rtc$10056$1c1CVa
              (case-lambda ((g$x$10071$1c1CVa) (values)))))))
         (g$make-collector$7693$1c1CVa)))))
   (g$parse-exports$7688$1c1CVa
     g$parse-exports$11127$1c1CVa
     (case-lambda
       ((g$exp*$10072$1c1CVa)
        (letrec* ((g$idsyn?$10073$1c1CVa
                    (case-lambda
                      ((g$x$10088$1c1CVa)
                       (symbol?
                         (g$syntax->datum$7754$1c1CVa g$x$10088$1c1CVa))))))
          ((letrec ((g$f$10074$1c1CVa
                      (case-lambda
                        ((g$exp*$10075$1c1CVa
                           g$int*$10076$1c1CVa
                           g$ext*$10077$1c1CVa)
                         (if (null? g$exp*$10075$1c1CVa)
                           (begin
                             ((case-lambda
                                ((g$id*$10078$1c1CVa)
                                 (if (not (g$valid-bound-ids?$7369$1c1CVa
                                            g$id*$10078$1c1CVa))
                                   (g$syntax-violation$7751$1c1CVa
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7670$1c1CVa
                                       g$id*$10078$1c1CVa))
                                   (void))))
                              (map (case-lambda
                                     ((g$x$10079$1c1CVa)
                                      (g$make-stx$7337$1c1CVa
                                        g$x$10079$1c1CVa
                                        g$top-mark*$7306$1c1CVa
                                        '()
                                        '())))
                                   g$ext*$10077$1c1CVa))
                             (values
                               (map g$syntax->datum$7754$1c1CVa
                                    g$int*$10076$1c1CVa)
                               (map g$syntax->datum$7754$1c1CVa
                                    g$ext*$10077$1c1CVa)))
                           ((case-lambda
                              ((g$t$10080$1c1CVa)
                               ((case-lambda
                                  ((g$ls/false$10081$1c1CVa)
                                   (if g$ls/false$10081$1c1CVa
                                     (apply
                                       (case-lambda
                                         ((g$rename$10082$1c1CVa
                                            g$i*$10083$1c1CVa
                                            g$e*$10084$1c1CVa)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$7754$1c1CVa
                                                                g$rename$10082$1c1CVa)
                                                              'rename)
                                                       (if (g$for-all$5494$1c1CVa
                                                             g$idsyn?$10073$1c1CVa
                                                             g$i*$10083$1c1CVa)
                                                         (begin
                                                           '#f
                                                           (g$for-all$5494$1c1CVa
                                                             g$idsyn?$10073$1c1CVa
                                                             g$e*$10084$1c1CVa))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$7751$1c1CVa
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$10075$1c1CVa))
                                              (void))
                                            (g$f$10074$1c1CVa
                                              (cdr g$exp*$10075$1c1CVa)
                                              (append
                                                g$i*$10083$1c1CVa
                                                g$int*$10076$1c1CVa)
                                              (append
                                                g$e*$10084$1c1CVa
                                                g$ext*$10077$1c1CVa)))))
                                       g$ls/false$10081$1c1CVa)
                                     ((case-lambda
                                        ((g$t$10085$1c1CVa)
                                         ((case-lambda
                                            ((g$ls/false$10086$1c1CVa)
                                             (if g$ls/false$10086$1c1CVa
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$10087$1c1CVa)
                                                    (begin
                                                      (if (not (g$idsyn?$10073$1c1CVa
                                                                 g$ie$10087$1c1CVa))
                                                        (g$syntax-violation$7751$1c1CVa
                                                          'export
                                                          '"invalid export"
                                                          g$ie$10087$1c1CVa)
                                                        (void))
                                                      (g$f$10074$1c1CVa
                                                        (cdr g$exp*$10075$1c1CVa)
                                                        (cons
                                                          g$ie$10087$1c1CVa
                                                          g$int*$10076$1c1CVa)
                                                        (cons
                                                          g$ie$10087$1c1CVa
                                                          g$ext*$10077$1c1CVa)))))
                                                 g$ls/false$10086$1c1CVa)
                                               (g$syntax-violation$7751$1c1CVa
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10085$1c1CVa))))
                                          (g$syntax-dispatch$7642$1c1CVa
                                            g$t$10085$1c1CVa
                                            'any))))
                                      g$t$10080$1c1CVa))))
                                (g$syntax-dispatch$7642$1c1CVa
                                  g$t$10080$1c1CVa
                                  '(any . #(each (any any)))))))
                            (car g$exp*$10075$1c1CVa)))))))
             g$f$10074$1c1CVa)
           g$exp*$10072$1c1CVa
           '()
           '())))))
   (g$parse-library-name$7689$1c1CVa
     g$parse-library-name$11128$1c1CVa
     (case-lambda
       ((g$spec$10089$1c1CVa)
        (letrec* ((g$parse$10090$1c1CVa
                    (case-lambda
                      ((g$x$10097$1c1CVa)
                       ((case-lambda
                          ((g$t$10098$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$10099$1c1CVa)
                               (if (if g$ls/false$10099$1c1CVa
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10100$1c1CVa)
                                            (g$for-all$5494$1c1CVa
                                              (case-lambda
                                                ((g$x$10101$1c1CVa)
                                                 ((case-lambda
                                                    ((g$x$10102$1c1CVa)
                                                     (if (integer?
                                                           g$x$10102$1c1CVa)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10102$1c1CVa))
                                                       '#f)))
                                                  (g$syntax->datum$7754$1c1CVa
                                                    g$x$10101$1c1CVa))))
                                              g$v*$10100$1c1CVa)))
                                         g$ls/false$10099$1c1CVa))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10103$1c1CVa)
                                      (values
                                        '()
                                        (map g$syntax->datum$7754$1c1CVa
                                             g$v*$10103$1c1CVa))))
                                   g$ls/false$10099$1c1CVa)
                                 ((case-lambda
                                    ((g$t$10104$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$10105$1c1CVa)
                                         (if (if g$ls/false$10105$1c1CVa
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10106$1c1CVa
                                                        g$rest$10107$1c1CVa)
                                                      (symbol?
                                                        (g$syntax->datum$7754$1c1CVa
                                                          g$x$10106$1c1CVa))))
                                                   g$ls/false$10105$1c1CVa))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10108$1c1CVa
                                                  g$rest$10109$1c1CVa)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10090$1c1CVa
                                                       g$rest$10109$1c1CVa)))
                                                  (case-lambda
                                                    ((g$x*$10112$1c1CVa
                                                       g$v*$10113$1c1CVa)
                                                     ((case-lambda
                                                        ((g$v*$10114$1c1CVa
                                                           g$x*$10115$1c1CVa)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7754$1c1CVa
                                                               g$x$10108$1c1CVa)
                                                             g$x*$10115$1c1CVa)
                                                           g$v*$10114$1c1CVa)))
                                                      g$v*$10113$1c1CVa
                                                      g$x*$10112$1c1CVa))))))
                                             g$ls/false$10105$1c1CVa)
                                           ((case-lambda
                                              ((g$t$10116$1c1CVa)
                                               ((case-lambda
                                                  ((g$ls/false$10117$1c1CVa)
                                                   (if g$ls/false$10117$1c1CVa
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10117$1c1CVa)
                                                     ((case-lambda
                                                        ((g$t$10118$1c1CVa)
                                                         ((case-lambda
                                                            ((g$ls/false$10119$1c1CVa)
                                                             (if g$ls/false$10119$1c1CVa
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7751$1c1CVa
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10089$1c1CVa)))
                                                                 g$ls/false$10119$1c1CVa)
                                                               (g$syntax-violation$7751$1c1CVa
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10118$1c1CVa))))
                                                          (g$syntax-dispatch$7642$1c1CVa
                                                            g$t$10118$1c1CVa
                                                            '_))))
                                                      g$t$10116$1c1CVa))))
                                                (g$syntax-dispatch$7642$1c1CVa
                                                  g$t$10116$1c1CVa
                                                  '()))))
                                            g$t$10104$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$10104$1c1CVa
                                        '(any . any)))))
                                  g$t$10098$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$10098$1c1CVa
                              '(each-any)))))
                        g$x$10097$1c1CVa)))))
          (call-with-values
            (case-lambda (() (g$parse$10090$1c1CVa g$spec$10089$1c1CVa)))
            (case-lambda
              ((g$name*$10093$1c1CVa g$ver*$10094$1c1CVa)
               ((case-lambda
                  ((g$ver*$10095$1c1CVa g$name*$10096$1c1CVa)
                   (begin
                     (if (null? g$name*$10096$1c1CVa)
                       (g$syntax-violation$7751$1c1CVa
                         '#f
                         '"empty library name"
                         g$spec$10089$1c1CVa)
                       (void))
                     (values g$name*$10096$1c1CVa g$ver*$10095$1c1CVa))))
                g$ver*$10094$1c1CVa
                g$name*$10093$1c1CVa))))))))
   (g$parse-library$7690$1c1CVa
     g$parse-library$11129$1c1CVa
     (case-lambda
       ((g$e$10120$1c1CVa)
        ((case-lambda
           ((g$t$10121$1c1CVa)
            ((case-lambda
               ((g$ls/false$10122$1c1CVa)
                (if (if g$ls/false$10122$1c1CVa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10123$1c1CVa
                               g$name*$10124$1c1CVa
                               g$export$10125$1c1CVa
                               g$exp*$10126$1c1CVa
                               g$import$10127$1c1CVa
                               g$imp*$10128$1c1CVa
                               g$b*$10129$1c1CVa)
                             (if (eq? (g$syntax->datum$7754$1c1CVa
                                        g$export$10125$1c1CVa)
                                      'export)
                               (if (eq? (g$syntax->datum$7754$1c1CVa
                                          g$import$10127$1c1CVa)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7754$1c1CVa
                                          g$library$10123$1c1CVa)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10122$1c1CVa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10130$1c1CVa
                         g$name*$10131$1c1CVa
                         g$export$10132$1c1CVa
                         g$exp*$10133$1c1CVa
                         g$import$10134$1c1CVa
                         g$imp*$10135$1c1CVa
                         g$b*$10136$1c1CVa)
                       (values
                         g$name*$10131$1c1CVa
                         g$exp*$10133$1c1CVa
                         g$imp*$10135$1c1CVa
                         g$b*$10136$1c1CVa)))
                    g$ls/false$10122$1c1CVa)
                  ((case-lambda
                     ((g$t$10137$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$10138$1c1CVa)
                          (if g$ls/false$10138$1c1CVa
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7751$1c1CVa
                                   '#f
                                   '"malformed library"
                                   g$e$10120$1c1CVa)))
                              g$ls/false$10138$1c1CVa)
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"invalid syntax"
                              g$t$10137$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa g$t$10137$1c1CVa '_))))
                   g$t$10121$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$10121$1c1CVa
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10120$1c1CVa))))
   (g$parse-import-spec*$7691$1c1CVa
     g$parse-import-spec*$11130$1c1CVa
     (case-lambda
       ((g$imp*$10139$1c1CVa)
        (letrec* ((g$idsyn?$10140$1c1CVa
                    (case-lambda
                      ((g$x$10400$1c1CVa)
                       (symbol?
                         (g$syntax->datum$7754$1c1CVa g$x$10400$1c1CVa)))))
                  (g$dup-error$10141$1c1CVa
                    (case-lambda
                      ((g$name$10399$1c1CVa)
                       (g$syntax-violation$7751$1c1CVa
                         'import
                         '"two imports with different bindings"
                         g$name$10399$1c1CVa))))
                  (g$merge-substs$10142$1c1CVa
                    (case-lambda
                      ((g$s$10390$1c1CVa g$subst$10391$1c1CVa)
                       (letrec* ((g$insert-to-subst$10392$1c1CVa
                                   (case-lambda
                                     ((g$a$10393$1c1CVa g$subst$10394$1c1CVa)
                                      ((case-lambda
                                         ((g$name$10395$1c1CVa
                                            g$label$10396$1c1CVa)
                                          ((case-lambda
                                             ((g$t$10397$1c1CVa)
                                              (if g$t$10397$1c1CVa
                                                ((case-lambda
                                                   ((g$x$10398$1c1CVa)
                                                    (if (eq? (cdr g$x$10398$1c1CVa)
                                                             g$label$10396$1c1CVa)
                                                      g$subst$10394$1c1CVa
                                                      (g$dup-error$10141$1c1CVa
                                                        g$name$10395$1c1CVa))))
                                                 g$t$10397$1c1CVa)
                                                (cons
                                                  g$a$10393$1c1CVa
                                                  g$subst$10394$1c1CVa))))
                                           (assq
                                             g$name$10395$1c1CVa
                                             g$subst$10394$1c1CVa))))
                                       (car g$a$10393$1c1CVa)
                                       (cdr g$a$10393$1c1CVa))))))
                         (if (null? g$s$10390$1c1CVa)
                           g$subst$10391$1c1CVa
                           (g$insert-to-subst$10392$1c1CVa
                             (car g$s$10390$1c1CVa)
                             (g$merge-substs$10142$1c1CVa
                               (cdr g$s$10390$1c1CVa)
                               g$subst$10391$1c1CVa)))))))
                  (g$exclude*$10143$1c1CVa
                    (case-lambda
                      ((g$sym*$10366$1c1CVa g$subst$10367$1c1CVa)
                       (letrec* ((g$exclude$10368$1c1CVa
                                   (case-lambda
                                     ((g$sym$10381$1c1CVa g$subst$10382$1c1CVa)
                                      (if (null? g$subst$10382$1c1CVa)
                                        (g$syntax-violation$7751$1c1CVa
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10381$1c1CVa)
                                        (if (eq? g$sym$10381$1c1CVa
                                                 (g$caar$5012$1c1CVa
                                                   g$subst$10382$1c1CVa))
                                          (values
                                            (g$cdar$5014$1c1CVa
                                              g$subst$10382$1c1CVa)
                                            (cdr g$subst$10382$1c1CVa))
                                          ((case-lambda
                                             ((g$a$10383$1c1CVa)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10368$1c1CVa
                                                     g$sym$10381$1c1CVa
                                                     (cdr g$subst$10382$1c1CVa))))
                                                (case-lambda
                                                  ((g$old$10386$1c1CVa
                                                     g$subst$10387$1c1CVa)
                                                   ((case-lambda
                                                      ((g$subst$10388$1c1CVa
                                                         g$old$10389$1c1CVa)
                                                       (values
                                                         g$old$10389$1c1CVa
                                                         (cons
                                                           g$a$10383$1c1CVa
                                                           g$subst$10388$1c1CVa))))
                                                    g$subst$10387$1c1CVa
                                                    g$old$10386$1c1CVa))))))
                                           (car g$subst$10382$1c1CVa))))))))
                         (if (null? g$sym*$10366$1c1CVa)
                           (values '() g$subst$10367$1c1CVa)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10368$1c1CVa
                                  (car g$sym*$10366$1c1CVa)
                                  g$subst$10367$1c1CVa)))
                             (case-lambda
                               ((g$old$10371$1c1CVa g$subst$10372$1c1CVa)
                                ((case-lambda
                                   ((g$subst$10373$1c1CVa g$old$10374$1c1CVa)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10143$1c1CVa
                                           (cdr g$sym*$10366$1c1CVa)
                                           g$subst$10373$1c1CVa)))
                                      (case-lambda
                                        ((g$old*$10377$1c1CVa
                                           g$subst$10378$1c1CVa)
                                         ((case-lambda
                                            ((g$subst$10379$1c1CVa
                                               g$old*$10380$1c1CVa)
                                             (values
                                               (cons
                                                 g$old$10374$1c1CVa
                                                 g$old*$10380$1c1CVa)
                                               g$subst$10379$1c1CVa)))
                                          g$subst$10378$1c1CVa
                                          g$old*$10377$1c1CVa))))))
                                 g$subst$10372$1c1CVa
                                 g$old$10371$1c1CVa)))))))))
                  (g$find*$10144$1c1CVa
                    (case-lambda
                      ((g$sym*$10362$1c1CVa g$subst$10363$1c1CVa)
                       (map (case-lambda
                              ((g$x$10364$1c1CVa)
                               ((case-lambda
                                  ((g$t$10365$1c1CVa)
                                   (if g$t$10365$1c1CVa
                                     (cdr g$t$10365$1c1CVa)
                                     (g$syntax-violation$7751$1c1CVa
                                       'import
                                       '"cannot find identifier"
                                       g$x$10364$1c1CVa))))
                                (assq g$x$10364$1c1CVa g$subst$10363$1c1CVa))))
                            g$sym*$10362$1c1CVa))))
                  (g$rem*$10145$1c1CVa
                    (case-lambda
                      ((g$sym*$10358$1c1CVa g$subst$10359$1c1CVa)
                       ((letrec ((g$f$10360$1c1CVa
                                   (case-lambda
                                     ((g$subst$10361$1c1CVa)
                                      (if (null? g$subst$10361$1c1CVa)
                                        '()
                                        (if (memq
                                              (g$caar$5012$1c1CVa
                                                g$subst$10361$1c1CVa)
                                              g$sym*$10358$1c1CVa)
                                          (g$f$10360$1c1CVa
                                            (cdr g$subst$10361$1c1CVa))
                                          (cons
                                            (car g$subst$10361$1c1CVa)
                                            (g$f$10360$1c1CVa
                                              (cdr g$subst$10361$1c1CVa)))))))))
                          g$f$10360$1c1CVa)
                        g$subst$10359$1c1CVa))))
                  (g$remove-dups$10146$1c1CVa
                    (case-lambda
                      ((g$ls$10357$1c1CVa)
                       (if (null? g$ls$10357$1c1CVa)
                         '()
                         (if (memq
                               (car g$ls$10357$1c1CVa)
                               (cdr g$ls$10357$1c1CVa))
                           (g$remove-dups$10146$1c1CVa (cdr g$ls$10357$1c1CVa))
                           (cons
                             (car g$ls$10357$1c1CVa)
                             (g$remove-dups$10146$1c1CVa
                               (cdr g$ls$10357$1c1CVa))))))))
                  (g$parse-library-name$10147$1c1CVa
                    (case-lambda
                      ((g$spec$10241$1c1CVa)
                       (letrec* ((g$subversion?$10242$1c1CVa
                                   (case-lambda
                                     ((g$x$10355$1c1CVa)
                                      ((case-lambda
                                         ((g$x$10356$1c1CVa)
                                          (if (integer? g$x$10356$1c1CVa)
                                            (if (exact? g$x$10356$1c1CVa)
                                              (begin
                                                '#f
                                                (>= g$x$10356$1c1CVa '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$7754$1c1CVa
                                         g$x$10355$1c1CVa)))))
                                 (g$subversion-pred$10243$1c1CVa
                                   (case-lambda
                                     ((g$x*$10307$1c1CVa)
                                      ((case-lambda
                                         ((g$t$10308$1c1CVa)
                                          ((case-lambda
                                             ((g$ls/false$10309$1c1CVa)
                                              (if (if g$ls/false$10309$1c1CVa
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10310$1c1CVa)
                                                           (g$subversion?$10242$1c1CVa
                                                             g$n$10310$1c1CVa)))
                                                        g$ls/false$10309$1c1CVa))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10311$1c1CVa)
                                                     (case-lambda
                                                       ((g$x$10312$1c1CVa)
                                                        (= g$x$10312$1c1CVa
                                                           (g$syntax->datum$7754$1c1CVa
                                                             g$n$10311$1c1CVa))))))
                                                  g$ls/false$10309$1c1CVa)
                                                ((case-lambda
                                                   ((g$t$10313$1c1CVa)
                                                    ((case-lambda
                                                       ((g$ls/false$10314$1c1CVa)
                                                        (if (if g$ls/false$10314$1c1CVa
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10315$1c1CVa
                                                                       g$sub*$10316$1c1CVa)
                                                                     (eq? (g$syntax->datum$7754$1c1CVa
                                                                            g$p?$10315$1c1CVa)
                                                                          'and)))
                                                                  g$ls/false$10314$1c1CVa))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10317$1c1CVa
                                                                 g$sub*$10318$1c1CVa)
                                                               ((case-lambda
                                                                  ((g$p*$10319$1c1CVa)
                                                                   (case-lambda
                                                                     ((g$x$10320$1c1CVa)
                                                                      (g$for-all$5494$1c1CVa
                                                                        (case-lambda
                                                                          ((g$p$10321$1c1CVa)
                                                                           (g$p$10321$1c1CVa
                                                                             g$x$10320$1c1CVa)))
                                                                        g$p*$10319$1c1CVa)))))
                                                                (map g$subversion-pred$10243$1c1CVa
                                                                     g$sub*$10318$1c1CVa))))
                                                            g$ls/false$10314$1c1CVa)
                                                          ((case-lambda
                                                             ((g$t$10322$1c1CVa)
                                                              ((case-lambda
                                                                 ((g$ls/false$10323$1c1CVa)
                                                                  (if (if g$ls/false$10323$1c1CVa
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10324$1c1CVa
                                                                                 g$sub*$10325$1c1CVa)
                                                                               (eq? (g$syntax->datum$7754$1c1CVa
                                                                                      g$p?$10324$1c1CVa)
                                                                                    'or)))
                                                                            g$ls/false$10323$1c1CVa))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10326$1c1CVa
                                                                           g$sub*$10327$1c1CVa)
                                                                         ((case-lambda
                                                                            ((g$p*$10328$1c1CVa)
                                                                             (case-lambda
                                                                               ((g$x$10329$1c1CVa)
                                                                                (g$exists$5495$1c1CVa
                                                                                  (case-lambda
                                                                                    ((g$p$10330$1c1CVa)
                                                                                     (g$p$10330$1c1CVa
                                                                                       g$x$10329$1c1CVa)))
                                                                                  g$p*$10328$1c1CVa)))))
                                                                          (map g$subversion-pred$10243$1c1CVa
                                                                               g$sub*$10327$1c1CVa))))
                                                                      g$ls/false$10323$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$t$10331$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10332$1c1CVa)
                                                                            (if (if g$ls/false$10332$1c1CVa
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10333$1c1CVa
                                                                                           g$sub$10334$1c1CVa)
                                                                                         (eq? (g$syntax->datum$7754$1c1CVa
                                                                                                g$p?$10333$1c1CVa)
                                                                                              'not)))
                                                                                      g$ls/false$10332$1c1CVa))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10335$1c1CVa
                                                                                     g$sub$10336$1c1CVa)
                                                                                   ((case-lambda
                                                                                      ((g$p$10337$1c1CVa)
                                                                                       (case-lambda
                                                                                         ((g$x$10338$1c1CVa)
                                                                                          (not (g$p$10337$1c1CVa
                                                                                                 g$x$10338$1c1CVa))))))
                                                                                    (g$subversion-pred$10243$1c1CVa
                                                                                      g$sub$10336$1c1CVa))))
                                                                                g$ls/false$10332$1c1CVa)
                                                                              ((case-lambda
                                                                                 ((g$t$10339$1c1CVa)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10340$1c1CVa)
                                                                                      (if (if g$ls/false$10340$1c1CVa
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10341$1c1CVa
                                                                                                     g$n$10342$1c1CVa)
                                                                                                   (if (eq? (g$syntax->datum$7754$1c1CVa
                                                                                                              g$p?$10341$1c1CVa)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10242$1c1CVa
                                                                                                         g$n$10342$1c1CVa))
                                                                                                     '#f)))
                                                                                                g$ls/false$10340$1c1CVa))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10343$1c1CVa
                                                                                               g$n$10344$1c1CVa)
                                                                                             (case-lambda
                                                                                               ((g$x$10345$1c1CVa)
                                                                                                (<= g$x$10345$1c1CVa
                                                                                                    (g$syntax->datum$7754$1c1CVa
                                                                                                      g$n$10344$1c1CVa))))))
                                                                                          g$ls/false$10340$1c1CVa)
                                                                                        ((case-lambda
                                                                                           ((g$t$10346$1c1CVa)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10347$1c1CVa)
                                                                                                (if (if g$ls/false$10347$1c1CVa
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10348$1c1CVa
                                                                                                               g$n$10349$1c1CVa)
                                                                                                             (if (eq? (g$syntax->datum$7754$1c1CVa
                                                                                                                        g$p?$10348$1c1CVa)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10242$1c1CVa
                                                                                                                   g$n$10349$1c1CVa))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10347$1c1CVa))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10350$1c1CVa
                                                                                                         g$n$10351$1c1CVa)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10352$1c1CVa)
                                                                                                          (>= g$x$10352$1c1CVa
                                                                                                              (g$syntax->datum$7754$1c1CVa
                                                                                                                g$n$10351$1c1CVa))))))
                                                                                                    g$ls/false$10347$1c1CVa)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10353$1c1CVa)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10354$1c1CVa)
                                                                                                          (if g$ls/false$10354$1c1CVa
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7751$1c1CVa
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10241$1c1CVa
                                                                                                                   g$x*$10307$1c1CVa)))
                                                                                                              g$ls/false$10354$1c1CVa)
                                                                                                            (g$syntax-violation$7751$1c1CVa
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10353$1c1CVa))))
                                                                                                       (g$syntax-dispatch$7642$1c1CVa
                                                                                                         g$t$10353$1c1CVa
                                                                                                         '_))))
                                                                                                   g$t$10346$1c1CVa))))
                                                                                             (g$syntax-dispatch$7642$1c1CVa
                                                                                               g$t$10346$1c1CVa
                                                                                               '(any any)))))
                                                                                         g$t$10339$1c1CVa))))
                                                                                   (g$syntax-dispatch$7642$1c1CVa
                                                                                     g$t$10339$1c1CVa
                                                                                     '(any any)))))
                                                                               g$t$10331$1c1CVa))))
                                                                         (g$syntax-dispatch$7642$1c1CVa
                                                                           g$t$10331$1c1CVa
                                                                           '(any any)))))
                                                                     g$t$10322$1c1CVa))))
                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                 g$t$10322$1c1CVa
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10313$1c1CVa))))
                                                     (g$syntax-dispatch$7642$1c1CVa
                                                       g$t$10313$1c1CVa
                                                       '(any . each-any)))))
                                                 g$t$10308$1c1CVa))))
                                           (g$syntax-dispatch$7642$1c1CVa
                                             g$t$10308$1c1CVa
                                             'any))))
                                       g$x*$10307$1c1CVa))))
                                 (g$version-pred$10244$1c1CVa
                                   (case-lambda
                                     ((g$x*$10267$1c1CVa)
                                      ((case-lambda
                                         ((g$t$10268$1c1CVa)
                                          ((case-lambda
                                             ((g$ls/false$10269$1c1CVa)
                                              (if g$ls/false$10269$1c1CVa
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10270$1c1CVa)
                                                        '#t))))
                                                  g$ls/false$10269$1c1CVa)
                                                ((case-lambda
                                                   ((g$t$10271$1c1CVa)
                                                    ((case-lambda
                                                       ((g$ls/false$10272$1c1CVa)
                                                        (if (if g$ls/false$10272$1c1CVa
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10273$1c1CVa
                                                                       g$ver*$10274$1c1CVa)
                                                                     (eq? (g$syntax->datum$7754$1c1CVa
                                                                            g$c$10273$1c1CVa)
                                                                          'and)))
                                                                  g$ls/false$10272$1c1CVa))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10275$1c1CVa
                                                                 g$ver*$10276$1c1CVa)
                                                               ((case-lambda
                                                                  ((g$p*$10277$1c1CVa)
                                                                   (case-lambda
                                                                     ((g$x$10278$1c1CVa)
                                                                      (g$for-all$5494$1c1CVa
                                                                        (case-lambda
                                                                          ((g$p$10279$1c1CVa)
                                                                           (g$p$10279$1c1CVa
                                                                             g$x$10278$1c1CVa)))
                                                                        g$p*$10277$1c1CVa)))))
                                                                (map g$version-pred$10244$1c1CVa
                                                                     g$ver*$10276$1c1CVa))))
                                                            g$ls/false$10272$1c1CVa)
                                                          ((case-lambda
                                                             ((g$t$10280$1c1CVa)
                                                              ((case-lambda
                                                                 ((g$ls/false$10281$1c1CVa)
                                                                  (if (if g$ls/false$10281$1c1CVa
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10282$1c1CVa
                                                                                 g$ver*$10283$1c1CVa)
                                                                               (eq? (g$syntax->datum$7754$1c1CVa
                                                                                      g$c$10282$1c1CVa)
                                                                                    'or)))
                                                                            g$ls/false$10281$1c1CVa))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10284$1c1CVa
                                                                           g$ver*$10285$1c1CVa)
                                                                         ((case-lambda
                                                                            ((g$p*$10286$1c1CVa)
                                                                             (case-lambda
                                                                               ((g$x$10287$1c1CVa)
                                                                                (g$exists$5495$1c1CVa
                                                                                  (case-lambda
                                                                                    ((g$p$10288$1c1CVa)
                                                                                     (g$p$10288$1c1CVa
                                                                                       g$x$10287$1c1CVa)))
                                                                                  g$p*$10286$1c1CVa)))))
                                                                          (map g$version-pred$10244$1c1CVa
                                                                               g$ver*$10285$1c1CVa))))
                                                                      g$ls/false$10281$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$t$10289$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10290$1c1CVa)
                                                                            (if (if g$ls/false$10290$1c1CVa
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10291$1c1CVa
                                                                                           g$ver$10292$1c1CVa)
                                                                                         (eq? (g$syntax->datum$7754$1c1CVa
                                                                                                g$c$10291$1c1CVa)
                                                                                              'not)))
                                                                                      g$ls/false$10290$1c1CVa))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10293$1c1CVa
                                                                                     g$ver$10294$1c1CVa)
                                                                                   ((case-lambda
                                                                                      ((g$p$10295$1c1CVa)
                                                                                       (case-lambda
                                                                                         ((g$x$10296$1c1CVa)
                                                                                          (not (g$p$10295$1c1CVa
                                                                                                 g$x$10296$1c1CVa))))))
                                                                                    (g$version-pred$10244$1c1CVa
                                                                                      g$ver$10294$1c1CVa))))
                                                                                g$ls/false$10290$1c1CVa)
                                                                              ((case-lambda
                                                                                 ((g$t$10297$1c1CVa)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10298$1c1CVa)
                                                                                      (if g$ls/false$10298$1c1CVa
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10299$1c1CVa)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10300$1c1CVa)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10301$1c1CVa)
                                                                                                    ((letrec ((g$f$10302$1c1CVa
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10303$1c1CVa
                                                                                                                     g$x$10304$1c1CVa)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10303$1c1CVa)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10304$1c1CVa)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10303$1c1CVa)
                                                                                                                            (car g$x$10304$1c1CVa))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10302$1c1CVa
                                                                                                                             (cdr g$p*$10303$1c1CVa)
                                                                                                                             (cdr g$x$10304$1c1CVa)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10302$1c1CVa)
                                                                                                     g$p*$10300$1c1CVa
                                                                                                     g$x$10301$1c1CVa)))))
                                                                                              (map g$subversion-pred$10243$1c1CVa
                                                                                                   g$sub*$10299$1c1CVa))))
                                                                                          g$ls/false$10298$1c1CVa)
                                                                                        ((case-lambda
                                                                                           ((g$t$10305$1c1CVa)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10306$1c1CVa)
                                                                                                (if g$ls/false$10306$1c1CVa
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7751$1c1CVa
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10241$1c1CVa
                                                                                                         g$x*$10267$1c1CVa)))
                                                                                                    g$ls/false$10306$1c1CVa)
                                                                                                  (g$syntax-violation$7751$1c1CVa
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10305$1c1CVa))))
                                                                                             (g$syntax-dispatch$7642$1c1CVa
                                                                                               g$t$10305$1c1CVa
                                                                                               '_))))
                                                                                         g$t$10297$1c1CVa))))
                                                                                   (g$syntax-dispatch$7642$1c1CVa
                                                                                     g$t$10297$1c1CVa
                                                                                     'each-any))))
                                                                               g$t$10289$1c1CVa))))
                                                                         (g$syntax-dispatch$7642$1c1CVa
                                                                           g$t$10289$1c1CVa
                                                                           '(any any)))))
                                                                     g$t$10280$1c1CVa))))
                                                               (g$syntax-dispatch$7642$1c1CVa
                                                                 g$t$10280$1c1CVa
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10271$1c1CVa))))
                                                     (g$syntax-dispatch$7642$1c1CVa
                                                       g$t$10271$1c1CVa
                                                       '(any . each-any)))))
                                                 g$t$10268$1c1CVa))))
                                           (g$syntax-dispatch$7642$1c1CVa
                                             g$t$10268$1c1CVa
                                             '()))))
                                       g$x*$10267$1c1CVa)))))
                         ((letrec ((g$f$10245$1c1CVa
                                     (case-lambda
                                       ((g$x$10246$1c1CVa)
                                        ((case-lambda
                                           ((g$t$10247$1c1CVa)
                                            ((case-lambda
                                               ((g$ls/false$10248$1c1CVa)
                                                (if g$ls/false$10248$1c1CVa
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10249$1c1CVa)
                                                       (values
                                                         '()
                                                         (g$version-pred$10244$1c1CVa
                                                           g$version-spec*$10249$1c1CVa))))
                                                    g$ls/false$10248$1c1CVa)
                                                  ((case-lambda
                                                     ((g$t$10250$1c1CVa)
                                                      ((case-lambda
                                                         ((g$ls/false$10251$1c1CVa)
                                                          (if (if g$ls/false$10251$1c1CVa
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10252$1c1CVa
                                                                         g$x*$10253$1c1CVa)
                                                                       (g$idsyn?$10140$1c1CVa
                                                                         g$x$10252$1c1CVa)))
                                                                    g$ls/false$10251$1c1CVa))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10254$1c1CVa
                                                                   g$x*$10255$1c1CVa)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10245$1c1CVa
                                                                        g$x*$10255$1c1CVa)))
                                                                   (case-lambda
                                                                     ((g$name$10258$1c1CVa
                                                                        g$pred$10259$1c1CVa)
                                                                      ((case-lambda
                                                                         ((g$pred$10260$1c1CVa
                                                                            g$name$10261$1c1CVa)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7754$1c1CVa
                                                                                g$x$10254$1c1CVa)
                                                                              g$name$10261$1c1CVa)
                                                                            g$pred$10260$1c1CVa)))
                                                                       g$pred$10259$1c1CVa
                                                                       g$name$10258$1c1CVa))))))
                                                              g$ls/false$10251$1c1CVa)
                                                            ((case-lambda
                                                               ((g$t$10262$1c1CVa)
                                                                ((case-lambda
                                                                   ((g$ls/false$10263$1c1CVa)
                                                                    (if g$ls/false$10263$1c1CVa
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10264$1c1CVa)
                                                                                '#t)))))
                                                                        g$ls/false$10263$1c1CVa)
                                                                      ((case-lambda
                                                                         ((g$t$10265$1c1CVa)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10266$1c1CVa)
                                                                              (if g$ls/false$10266$1c1CVa
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7751$1c1CVa
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10241$1c1CVa)))
                                                                                  g$ls/false$10266$1c1CVa)
                                                                                (g$syntax-violation$7751$1c1CVa
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10265$1c1CVa))))
                                                                           (g$syntax-dispatch$7642$1c1CVa
                                                                             g$t$10265$1c1CVa
                                                                             '_))))
                                                                       g$t$10262$1c1CVa))))
                                                                 (g$syntax-dispatch$7642$1c1CVa
                                                                   g$t$10262$1c1CVa
                                                                   '()))))
                                                             g$t$10250$1c1CVa))))
                                                       (g$syntax-dispatch$7642$1c1CVa
                                                         g$t$10250$1c1CVa
                                                         '(any . any)))))
                                                   g$t$10247$1c1CVa))))
                                             (g$syntax-dispatch$7642$1c1CVa
                                               g$t$10247$1c1CVa
                                               '(each-any)))))
                                         g$x$10246$1c1CVa)))))
                            g$f$10245$1c1CVa)
                          g$spec$10241$1c1CVa)))))
                  (g$import-library$10148$1c1CVa
                    (case-lambda
                      ((g$spec*$10233$1c1CVa)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10147$1c1CVa
                              g$spec*$10233$1c1CVa)))
                         (case-lambda
                           ((g$name$10236$1c1CVa g$pred$10237$1c1CVa)
                            ((case-lambda
                               ((g$pred$10238$1c1CVa g$name$10239$1c1CVa)
                                (begin
                                  (if (null? g$name$10239$1c1CVa)
                                    (g$syntax-violation$7751$1c1CVa
                                      'import
                                      '"empty library name"
                                      g$spec*$10233$1c1CVa)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10240$1c1CVa)
                                      (begin
                                        (if (not g$lib$10240$1c1CVa)
                                          (g$syntax-violation$7751$1c1CVa
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10239$1c1CVa)
                                          (void))
                                        (if (not (g$pred$10238$1c1CVa
                                                   (g$library-version$7132$1c1CVa
                                                     g$lib$10240$1c1CVa)))
                                          (g$syntax-violation$7751$1c1CVa
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10233$1c1CVa
                                            g$lib$10240$1c1CVa)
                                          (void))
                                        ((g$imp-collector$7696$1c1CVa)
                                         g$lib$10240$1c1CVa)
                                        (g$library-subst$7136$1c1CVa
                                          g$lib$10240$1c1CVa))))
                                   (g$find-library-by-name$7172$1c1CVa
                                     g$name$10239$1c1CVa)))))
                             g$pred$10237$1c1CVa
                             g$name$10236$1c1CVa)))))))
                  (g$get-import$10149$1c1CVa
                    (case-lambda
                      ((g$spec$10162$1c1CVa)
                       ((case-lambda
                          ((g$t$10163$1c1CVa)
                           ((case-lambda
                              ((g$ls/false$10164$1c1CVa)
                               (if (if g$ls/false$10164$1c1CVa
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10165$1c1CVa g$x*$10166$1c1CVa)
                                            (not (memq
                                                   (g$syntax->datum$7754$1c1CVa
                                                     g$x$10165$1c1CVa)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10164$1c1CVa))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10167$1c1CVa g$x*$10168$1c1CVa)
                                      (g$import-library$10148$1c1CVa
                                        (cons
                                          g$x$10167$1c1CVa
                                          g$x*$10168$1c1CVa))))
                                   g$ls/false$10164$1c1CVa)
                                 ((case-lambda
                                    ((g$t$10169$1c1CVa)
                                     ((case-lambda
                                        ((g$ls/false$10170$1c1CVa)
                                         (if (if g$ls/false$10170$1c1CVa
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10171$1c1CVa
                                                        g$isp$10172$1c1CVa
                                                        g$old*$10173$1c1CVa
                                                        g$new*$10174$1c1CVa)
                                                      (if (eq? (g$syntax->datum$7754$1c1CVa
                                                                 g$rename$10171$1c1CVa)
                                                               'rename)
                                                        (if (g$for-all$5494$1c1CVa
                                                              g$idsyn?$10140$1c1CVa
                                                              g$old*$10173$1c1CVa)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5494$1c1CVa
                                                              g$idsyn?$10140$1c1CVa
                                                              g$new*$10174$1c1CVa))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10170$1c1CVa))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10175$1c1CVa
                                                  g$isp$10176$1c1CVa
                                                  g$old*$10177$1c1CVa
                                                  g$new*$10178$1c1CVa)
                                                ((case-lambda
                                                   ((g$subst$10179$1c1CVa
                                                      g$old*$10180$1c1CVa
                                                      g$new*$10181$1c1CVa)
                                                    ((case-lambda
                                                       ((g$old-label*$10182$1c1CVa)
                                                        ((case-lambda
                                                           ((g$subst$10183$1c1CVa)
                                                            (g$merge-substs$10142$1c1CVa
                                                              (map cons
                                                                   g$new*$10181$1c1CVa
                                                                   g$old-label*$10182$1c1CVa)
                                                              g$subst$10183$1c1CVa)))
                                                         (g$rem*$10145$1c1CVa
                                                           g$old*$10180$1c1CVa
                                                           g$subst$10179$1c1CVa))))
                                                     (g$find*$10144$1c1CVa
                                                       g$old*$10180$1c1CVa
                                                       g$subst$10179$1c1CVa))))
                                                 (g$get-import$10149$1c1CVa
                                                   g$isp$10176$1c1CVa)
                                                 (map g$syntax->datum$7754$1c1CVa
                                                      g$old*$10177$1c1CVa)
                                                 (map g$syntax->datum$7754$1c1CVa
                                                      g$new*$10178$1c1CVa))))
                                             g$ls/false$10170$1c1CVa)
                                           ((case-lambda
                                              ((g$t$10184$1c1CVa)
                                               ((case-lambda
                                                  ((g$ls/false$10185$1c1CVa)
                                                   (if (if g$ls/false$10185$1c1CVa
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10186$1c1CVa
                                                                  g$isp$10187$1c1CVa
                                                                  g$sym*$10188$1c1CVa)
                                                                (if (eq? (g$syntax->datum$7754$1c1CVa
                                                                           g$except$10186$1c1CVa)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5494$1c1CVa
                                                                      g$idsyn?$10140$1c1CVa
                                                                      g$sym*$10188$1c1CVa))
                                                                  '#f)))
                                                             g$ls/false$10185$1c1CVa))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10189$1c1CVa
                                                            g$isp$10190$1c1CVa
                                                            g$sym*$10191$1c1CVa)
                                                          ((case-lambda
                                                             ((g$subst$10192$1c1CVa)
                                                              (g$rem*$10145$1c1CVa
                                                                (map g$syntax->datum$7754$1c1CVa
                                                                     g$sym*$10191$1c1CVa)
                                                                g$subst$10192$1c1CVa)))
                                                           (g$get-import$10149$1c1CVa
                                                             g$isp$10190$1c1CVa))))
                                                       g$ls/false$10185$1c1CVa)
                                                     ((case-lambda
                                                        ((g$t$10193$1c1CVa)
                                                         ((case-lambda
                                                            ((g$ls/false$10194$1c1CVa)
                                                             (if (if g$ls/false$10194$1c1CVa
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10195$1c1CVa
                                                                            g$isp$10196$1c1CVa
                                                                            g$sym*$10197$1c1CVa)
                                                                          (if (eq? (g$syntax->datum$7754$1c1CVa
                                                                                     g$only$10195$1c1CVa)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5494$1c1CVa
                                                                                g$idsyn?$10140$1c1CVa
                                                                                g$sym*$10197$1c1CVa))
                                                                            '#f)))
                                                                       g$ls/false$10194$1c1CVa))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10198$1c1CVa
                                                                      g$isp$10199$1c1CVa
                                                                      g$sym*$10200$1c1CVa)
                                                                    ((case-lambda
                                                                       ((g$subst$10201$1c1CVa
                                                                          g$sym*$10202$1c1CVa)
                                                                        ((case-lambda
                                                                           ((g$sym*$10203$1c1CVa)
                                                                            ((case-lambda
                                                                               ((g$lab*$10204$1c1CVa)
                                                                                (map cons
                                                                                     g$sym*$10203$1c1CVa
                                                                                     g$lab*$10204$1c1CVa)))
                                                                             (g$find*$10144$1c1CVa
                                                                               g$sym*$10203$1c1CVa
                                                                               g$subst$10201$1c1CVa))))
                                                                         (g$remove-dups$10146$1c1CVa
                                                                           g$sym*$10202$1c1CVa))))
                                                                     (g$get-import$10149$1c1CVa
                                                                       g$isp$10199$1c1CVa)
                                                                     (map g$syntax->datum$7754$1c1CVa
                                                                          g$sym*$10200$1c1CVa))))
                                                                 g$ls/false$10194$1c1CVa)
                                                               ((case-lambda
                                                                  ((g$t$10205$1c1CVa)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10206$1c1CVa)
                                                                       (if (if g$ls/false$10206$1c1CVa
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10207$1c1CVa
                                                                                      g$isp$10208$1c1CVa
                                                                                      g$p$10209$1c1CVa)
                                                                                    (if (eq? (g$syntax->datum$7754$1c1CVa
                                                                                               g$prefix$10207$1c1CVa)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10140$1c1CVa
                                                                                          g$p$10209$1c1CVa))
                                                                                      '#f)))
                                                                                 g$ls/false$10206$1c1CVa))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10210$1c1CVa
                                                                                g$isp$10211$1c1CVa
                                                                                g$p$10212$1c1CVa)
                                                                              ((case-lambda
                                                                                 ((g$subst$10213$1c1CVa
                                                                                    g$prefix$10214$1c1CVa)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10215$1c1CVa)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10214$1c1CVa
                                                                                                (symbol->string
                                                                                                  (car g$x$10215$1c1CVa))))
                                                                                            (cdr g$x$10215$1c1CVa))))
                                                                                       g$subst$10213$1c1CVa)))
                                                                               (g$get-import$10149$1c1CVa
                                                                                 g$isp$10211$1c1CVa)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7754$1c1CVa
                                                                                   g$p$10212$1c1CVa)))))
                                                                           g$ls/false$10206$1c1CVa)
                                                                         ((case-lambda
                                                                            ((g$t$10216$1c1CVa)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10217$1c1CVa)
                                                                                 (if (if g$ls/false$10217$1c1CVa
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10218$1c1CVa
                                                                                                g$spec*$10219$1c1CVa)
                                                                                              (eq? (g$syntax->datum$7754$1c1CVa
                                                                                                     g$library$10218$1c1CVa)
                                                                                                   'library)))
                                                                                           g$ls/false$10217$1c1CVa))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10220$1c1CVa
                                                                                          g$spec*$10221$1c1CVa)
                                                                                        (g$import-library$10148$1c1CVa
                                                                                          g$spec*$10221$1c1CVa)))
                                                                                     g$ls/false$10217$1c1CVa)
                                                                                   ((case-lambda
                                                                                      ((g$t$10222$1c1CVa)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10223$1c1CVa)
                                                                                           (if (if g$ls/false$10223$1c1CVa
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10224$1c1CVa
                                                                                                          g$isp$10225$1c1CVa
                                                                                                          g$rest$10226$1c1CVa)
                                                                                                        (eq? (g$syntax->datum$7754$1c1CVa
                                                                                                               g$for$10224$1c1CVa)
                                                                                                             'for)))
                                                                                                     g$ls/false$10223$1c1CVa))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10227$1c1CVa
                                                                                                    g$isp$10228$1c1CVa
                                                                                                    g$rest$10229$1c1CVa)
                                                                                                  (g$get-import$10149$1c1CVa
                                                                                                    g$isp$10228$1c1CVa)))
                                                                                               g$ls/false$10223$1c1CVa)
                                                                                             ((case-lambda
                                                                                                ((g$t$10230$1c1CVa)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10231$1c1CVa)
                                                                                                     (if g$ls/false$10231$1c1CVa
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10232$1c1CVa)
                                                                                                            (g$syntax-violation$7751$1c1CVa
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10232$1c1CVa)))
                                                                                                         g$ls/false$10231$1c1CVa)
                                                                                                       (g$syntax-violation$7751$1c1CVa
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10230$1c1CVa))))
                                                                                                  (g$syntax-dispatch$7642$1c1CVa
                                                                                                    g$t$10230$1c1CVa
                                                                                                    'any))))
                                                                                              g$t$10222$1c1CVa))))
                                                                                        (g$syntax-dispatch$7642$1c1CVa
                                                                                          g$t$10222$1c1CVa
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10216$1c1CVa))))
                                                                              (g$syntax-dispatch$7642$1c1CVa
                                                                                g$t$10216$1c1CVa
                                                                                '(any each-any)))))
                                                                          g$t$10205$1c1CVa))))
                                                                    (g$syntax-dispatch$7642$1c1CVa
                                                                      g$t$10205$1c1CVa
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10193$1c1CVa))))
                                                          (g$syntax-dispatch$7642$1c1CVa
                                                            g$t$10193$1c1CVa
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10184$1c1CVa))))
                                                (g$syntax-dispatch$7642$1c1CVa
                                                  g$t$10184$1c1CVa
                                                  '(any any . each-any)))))
                                            g$t$10169$1c1CVa))))
                                      (g$syntax-dispatch$7642$1c1CVa
                                        g$t$10169$1c1CVa
                                        '(any any . #(each (any any)))))))
                                  g$t$10163$1c1CVa))))
                            (g$syntax-dispatch$7642$1c1CVa
                              g$t$10163$1c1CVa
                              '(any . each-any)))))
                        g$spec$10162$1c1CVa))))
                  (g$add-imports!$10150$1c1CVa
                    (case-lambda
                      ((g$imp$10154$1c1CVa g$h$10155$1c1CVa)
                       ((case-lambda
                          ((g$subst$10156$1c1CVa)
                           (for-each
                             (case-lambda
                               ((g$x$10157$1c1CVa)
                                ((case-lambda
                                   ((g$name$10158$1c1CVa g$label$10159$1c1CVa)
                                    ((case-lambda
                                       ((g$t$10160$1c1CVa)
                                        (if g$t$10160$1c1CVa
                                          ((case-lambda
                                             ((g$l$10161$1c1CVa)
                                              (if (not (eq? g$l$10161$1c1CVa
                                                            g$label$10159$1c1CVa))
                                                (g$dup-error$10141$1c1CVa
                                                  g$name$10158$1c1CVa)
                                                (void))))
                                           g$t$10160$1c1CVa)
                                          (g$hashtable-set!$5291$1c1CVa
                                            g$h$10155$1c1CVa
                                            g$name$10158$1c1CVa
                                            g$label$10159$1c1CVa))))
                                     (g$hashtable-ref$5290$1c1CVa
                                       g$h$10155$1c1CVa
                                       g$name$10158$1c1CVa
                                       '#f))))
                                 (car g$x$10157$1c1CVa)
                                 (cdr g$x$10157$1c1CVa))))
                             g$subst$10156$1c1CVa)))
                        (g$get-import$10149$1c1CVa g$imp$10154$1c1CVa))))))
          ((letrec ((g$f$10151$1c1CVa
                      (case-lambda
                        ((g$imp*$10152$1c1CVa g$h$10153$1c1CVa)
                         (if (null? g$imp*$10152$1c1CVa)
                           (hashtable-entries g$h$10153$1c1CVa)
                           (begin
                             (g$add-imports!$10150$1c1CVa
                               (car g$imp*$10152$1c1CVa)
                               g$h$10153$1c1CVa)
                             (g$f$10151$1c1CVa
                               (cdr g$imp*$10152$1c1CVa)
                               g$h$10153$1c1CVa)))))))
             g$f$10151$1c1CVa)
           g$imp*$10139$1c1CVa
           (g$make-eq-hashtable$5287$1c1CVa))))))
   (g$make-top-rib$7692$1c1CVa
     g$make-top-rib$11131$1c1CVa
     (case-lambda
       ((g$names$10401$1c1CVa g$labels$10402$1c1CVa)
        ((case-lambda
           ((g$rib$10403$1c1CVa)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10404$1c1CVa g$label$10405$1c1CVa)
                   (begin
                     (if (not (symbol? g$name$10404$1c1CVa))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10404$1c1CVa)
                       (void))
                     (g$extend-rib!$7328$1c1CVa
                       g$rib$10403$1c1CVa
                       (g$make-stx$7337$1c1CVa
                         g$name$10404$1c1CVa
                         g$top-mark*$7306$1c1CVa
                         '()
                         '())
                       g$label$10405$1c1CVa))))
                g$names$10401$1c1CVa
                g$labels$10402$1c1CVa)
              g$rib$10403$1c1CVa)))
         (g$make-empty-rib$7327$1c1CVa)))))
   (g$make-collector$7693$1c1CVa
     g$make-collector$11132$1c1CVa
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10406$1c1CVa)
            (case-lambda
              (() g$ls$10406$1c1CVa)
              ((g$x$10407$1c1CVa)
               (set! g$ls$10406$1c1CVa
                 (g$set-cons$7303$1c1CVa
                   g$x$10407$1c1CVa
                   g$ls$10406$1c1CVa))))))
         '()))))
   (g$inv-collector$7694$1c1CVa
     g$inv-collector$11133$1c1CVa
     (g$make-parameter$6631$1c1CVa
       (case-lambda
         (g$args$10408$1c1CVa
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10409$1c1CVa)
          (begin
            (if (not (procedure? g$x$10409$1c1CVa))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10409$1c1CVa)
              (void))
            g$x$10409$1c1CVa)))))
   (g$vis-collector$7695$1c1CVa
     g$vis-collector$11134$1c1CVa
     (g$make-parameter$6631$1c1CVa
       (case-lambda
         (g$args$10410$1c1CVa
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10411$1c1CVa)
          (begin
            (if (not (procedure? g$x$10411$1c1CVa))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10411$1c1CVa)
              (void))
            g$x$10411$1c1CVa)))))
   (g$imp-collector$7696$1c1CVa
     g$imp-collector$11135$1c1CVa
     (g$make-parameter$6631$1c1CVa
       (case-lambda
         (g$args$10412$1c1CVa
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10413$1c1CVa)
          (begin
            (if (not (procedure? g$x$10413$1c1CVa))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10413$1c1CVa)
              (void))
            g$x$10413$1c1CVa)))))
   (g$chi-library-internal$7697$1c1CVa
     g$chi-library-internal$11136$1c1CVa
     (case-lambda
       ((g$e*$10414$1c1CVa g$rib$10415$1c1CVa g$top?$10416$1c1CVa)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7686$1c1CVa
               g$e*$10414$1c1CVa
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10415$1c1CVa
               g$top?$10416$1c1CVa)))
          (case-lambda
            ((g$e*$10424$1c1CVa
               g$r$10425$1c1CVa
               g$mr$10426$1c1CVa
               g$lex*$10427$1c1CVa
               g$rhs*$10428$1c1CVa
               g$mod**$10429$1c1CVa
               g$_kwd*$10430$1c1CVa)
             ((case-lambda
                ((g$_kwd*$10431$1c1CVa
                   g$mod**$10432$1c1CVa
                   g$rhs*$10433$1c1CVa
                   g$lex*$10434$1c1CVa
                   g$mr$10435$1c1CVa
                   g$r$10436$1c1CVa
                   g$e*$10437$1c1CVa)
                 (values
                   (append
                     (apply append (reverse g$mod**$10432$1c1CVa))
                     g$e*$10437$1c1CVa)
                   g$r$10436$1c1CVa
                   g$mr$10435$1c1CVa
                   (reverse g$lex*$10434$1c1CVa)
                   (reverse g$rhs*$10433$1c1CVa))))
              g$_kwd*$10430$1c1CVa
              g$mod**$10429$1c1CVa
              g$rhs*$10428$1c1CVa
              g$lex*$10427$1c1CVa
              g$mr$10426$1c1CVa
              g$r$10425$1c1CVa
              g$e*$10424$1c1CVa)))))))
   (g$chi-interaction-expr$7698$1c1CVa
     g$chi-interaction-expr$11137$1c1CVa
     (case-lambda
       ((g$e$10438$1c1CVa g$rib$10439$1c1CVa g$r$10440$1c1CVa)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7686$1c1CVa
               (list g$e$10438$1c1CVa)
               g$r$10440$1c1CVa
               g$r$10440$1c1CVa
               '()
               '()
               '()
               '()
               g$rib$10439$1c1CVa
               '#t)))
          (case-lambda
            ((g$e*$10448$1c1CVa
               g$r$10449$1c1CVa
               g$mr$10450$1c1CVa
               g$lex*$10451$1c1CVa
               g$rhs*$10452$1c1CVa
               g$mod**$10453$1c1CVa
               g$_kwd*$10454$1c1CVa)
             ((case-lambda
                ((g$_kwd*$10455$1c1CVa
                   g$mod**$10456$1c1CVa
                   g$rhs*$10457$1c1CVa
                   g$lex*$10458$1c1CVa
                   g$mr$10459$1c1CVa
                   g$r$10460$1c1CVa
                   g$e*$10461$1c1CVa)
                 ((case-lambda
                    ((g$e*$10462$1c1CVa)
                     ((case-lambda
                        ((g$e$10463$1c1CVa)
                         (values g$e$10463$1c1CVa g$r$10460$1c1CVa)))
                      (if (null? g$e*$10462$1c1CVa)
                        (g$build-void$7299$1c1CVa)
                        (if (null? (cdr g$e*$10462$1c1CVa))
                          (car g$e*$10462$1c1CVa)
                          (g$build-sequence$7298$1c1CVa
                            '#f
                            g$e*$10462$1c1CVa))))))
                  (g$expand-interaction-rhs*/init*$7667$1c1CVa
                    (reverse g$lex*$10458$1c1CVa)
                    (reverse g$rhs*$10457$1c1CVa)
                    (append
                      (apply append (reverse g$mod**$10456$1c1CVa))
                      g$e*$10461$1c1CVa)
                    g$r$10460$1c1CVa
                    g$mr$10459$1c1CVa))))
              g$_kwd*$10454$1c1CVa
              g$mod**$10453$1c1CVa
              g$rhs*$10452$1c1CVa
              g$lex*$10451$1c1CVa
              g$mr$10450$1c1CVa
              g$r$10449$1c1CVa
              g$e*$10448$1c1CVa)))))))
   (g$library-body-expander$7699$1c1CVa
     g$library-body-expander$11138$1c1CVa
     (case-lambda
       ((g$name$10464$1c1CVa
          g$exp*$10465$1c1CVa
          g$imp*$10466$1c1CVa
          g$b*$10467$1c1CVa
          g$top?$10468$1c1CVa)
        (letrec* ((g$itc$10469$1c1CVa (g$make-collector$7693$1c1CVa)))
          ((case-lambda
             ((g$imp-collector$10474$1c1CVa
                g$top-level-context$10475$1c1CVa
                g$imp-collector$10476$1c1CVa
                g$top-level-context$10477$1c1CVa)
              ((case-lambda
                 ((g$swap$10478$1c1CVa)
                  (dynamic-wind
                    g$swap$10478$1c1CVa
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-exports$7688$1c1CVa g$exp*$10465$1c1CVa)))
                         (case-lambda
                           ((g$exp-int*$10481$1c1CVa g$exp-ext*$10482$1c1CVa)
                            ((case-lambda
                               ((g$exp-ext*$10483$1c1CVa
                                  g$exp-int*$10484$1c1CVa)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7691$1c1CVa
                                       g$imp*$10466$1c1CVa)))
                                  (case-lambda
                                    ((g$subst-names$10487$1c1CVa
                                       g$subst-labels$10488$1c1CVa)
                                     ((case-lambda
                                        ((g$subst-labels$10489$1c1CVa
                                           g$subst-names$10490$1c1CVa)
                                         ((case-lambda
                                            ((g$rib$10491$1c1CVa)
                                             ((case-lambda
                                                ((g$b*$10492$1c1CVa
                                                   g$rtc$10493$1c1CVa
                                                   g$vtc$10494$1c1CVa)
                                                 ((case-lambda
                                                    ((g$inv-collector$10499$1c1CVa
                                                       g$vis-collector$10500$1c1CVa
                                                       g$inv-collector$10501$1c1CVa
                                                       g$vis-collector$10502$1c1CVa)
                                                     ((case-lambda
                                                        ((g$swap$10503$1c1CVa)
                                                         (dynamic-wind
                                                           g$swap$10503$1c1CVa
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7697$1c1CVa
                                                                     g$b*$10492$1c1CVa
                                                                     g$rib$10491$1c1CVa
                                                                     g$top?$10468$1c1CVa)))
                                                                (case-lambda
                                                                  ((g$init*$10509$1c1CVa
                                                                     g$r$10510$1c1CVa
                                                                     g$mr$10511$1c1CVa
                                                                     g$lex*$10512$1c1CVa
                                                                     g$rhs*$10513$1c1CVa)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10514$1c1CVa
                                                                         g$lex*$10515$1c1CVa
                                                                         g$mr$10516$1c1CVa
                                                                         g$r$10517$1c1CVa
                                                                         g$init*$10518$1c1CVa)
                                                                       (begin
                                                                         (g$seal-rib!$7330$1c1CVa
                                                                           g$rib$10491$1c1CVa)
                                                                         ((case-lambda
                                                                            ((g$init*$10519$1c1CVa)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10520$1c1CVa)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7331$1c1CVa
                                                                                         g$rib$10491$1c1CVa)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10521$1c1CVa
                                                                                             g$export-subst$10522$1c1CVa)
                                                                                           (letrec* ((g$errstr$10523$1c1CVa
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7740$1c1CVa
                                                                                                    g$lex*$10515$1c1CVa
                                                                                                    g$loc*$10521$1c1CVa
                                                                                                    g$r$10517$1c1CVa)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10527$1c1CVa
                                                                                                    g$global*$10528$1c1CVa
                                                                                                    g$macro*$10529$1c1CVa)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10530$1c1CVa
                                                                                                        g$global*$10531$1c1CVa
                                                                                                        g$export-env$10532$1c1CVa)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10533$1c1CVa)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10534$1c1CVa
                                                                                                                   g$label$10535$1c1CVa)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10536$1c1CVa)
                                                                                                                     (if g$p$10536$1c1CVa
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10537$1c1CVa)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10538$1c1CVa)
                                                                                                                               (if (eq? g$type$10538$1c1CVa
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7751$1c1CVa
                                                                                                                                   'export
                                                                                                                                   g$errstr$10523$1c1CVa
                                                                                                                                   g$name$10534$1c1CVa)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10537$1c1CVa))))
                                                                                                                        (cdr g$p$10536$1c1CVa))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10535$1c1CVa
                                                                                                                    g$export-env$10532$1c1CVa))))
                                                                                                              (car g$s$10533$1c1CVa)
                                                                                                              (cdr g$s$10533$1c1CVa))))
                                                                                                          g$export-subst$10522$1c1CVa)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10539$1c1CVa
                                                                                                              g$invoke-definitions$10540$1c1CVa)
                                                                                                            (values
                                                                                                              (g$itc$10469$1c1CVa)
                                                                                                              (g$rtc$10493$1c1CVa)
                                                                                                              (g$vtc$10494$1c1CVa)
                                                                                                              (g$build-sequence$7298$1c1CVa
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10540$1c1CVa
                                                                                                                  (list
                                                                                                                    g$invoke-body$10539$1c1CVa)))
                                                                                                              g$macro*$10530$1c1CVa
                                                                                                              g$export-subst$10522$1c1CVa
                                                                                                              g$export-env$10532$1c1CVa)))
                                                                                                         (g$build-library-letrec*$7302$1c1CVa
                                                                                                           '#f
                                                                                                           g$name$10464$1c1CVa
                                                                                                           g$lex*$10515$1c1CVa
                                                                                                           g$loc*$10521$1c1CVa
                                                                                                           g$rhs*$10520$1c1CVa
                                                                                                           (if (null?
                                                                                                                 g$init*$10519$1c1CVa)
                                                                                                             (g$build-void$7299$1c1CVa)
                                                                                                             (g$build-sequence$7298$1c1CVa
                                                                                                               '#f
                                                                                                               g$init*$10519$1c1CVa)))
                                                                                                         (map g$build-global-define$7294$1c1CVa
                                                                                                              (map cdr
                                                                                                                   g$global*$10531$1c1CVa))))))
                                                                                                   g$macro*$10529$1c1CVa
                                                                                                   g$global*$10528$1c1CVa
                                                                                                   g$export-env$10527$1c1CVa)))))))
                                                                                        (map g$gen-global$7309$1c1CVa
                                                                                             g$lex*$10515$1c1CVa)
                                                                                        (g$make-export-subst$7739$1c1CVa
                                                                                          g$exp-int*$10484$1c1CVa
                                                                                          g$exp-ext*$10483$1c1CVa
                                                                                          g$rib$10491$1c1CVa))))))))
                                                                              (g$chi-rhs*$7668$1c1CVa
                                                                                g$rhs*$10514$1c1CVa
                                                                                g$r$10517$1c1CVa
                                                                                g$mr$10516$1c1CVa))))
                                                                          (g$chi-expr*$7658$1c1CVa
                                                                            g$init*$10518$1c1CVa
                                                                            g$r$10517$1c1CVa
                                                                            g$mr$10516$1c1CVa)))))
                                                                    g$rhs*$10513$1c1CVa
                                                                    g$lex*$10512$1c1CVa
                                                                    g$mr$10511$1c1CVa
                                                                    g$r$10510$1c1CVa
                                                                    g$init*$10509$1c1CVa))))))
                                                           g$swap$10503$1c1CVa)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10541$1c1CVa)
                                                               (begin
                                                                 (g$inv-collector$10499$1c1CVa
                                                                   g$inv-collector$10501$1c1CVa)
                                                                 (set! g$inv-collector$10501$1c1CVa
                                                                   g$t$10541$1c1CVa))))
                                                            (g$inv-collector$10499$1c1CVa))
                                                           ((case-lambda
                                                              ((g$t$10542$1c1CVa)
                                                               (begin
                                                                 (g$vis-collector$10500$1c1CVa
                                                                   g$vis-collector$10502$1c1CVa)
                                                                 (set! g$vis-collector$10502$1c1CVa
                                                                   g$t$10542$1c1CVa))))
                                                            (g$vis-collector$10500$1c1CVa))))))))
                                                  g$inv-collector$7694$1c1CVa
                                                  g$vis-collector$7695$1c1CVa
                                                  g$rtc$10493$1c1CVa
                                                  g$vtc$10494$1c1CVa)))
                                              (map (case-lambda
                                                     ((g$x$10543$1c1CVa)
                                                      (g$make-stx$7337$1c1CVa
                                                        g$x$10543$1c1CVa
                                                        g$top-mark*$7306$1c1CVa
                                                        (list
                                                          g$rib$10491$1c1CVa)
                                                        '())))
                                                   g$b*$10467$1c1CVa)
                                              (g$make-collector$7693$1c1CVa)
                                              (g$make-collector$7693$1c1CVa))))
                                          (g$make-top-rib$7692$1c1CVa
                                            g$subst-names$10490$1c1CVa
                                            g$subst-labels$10489$1c1CVa))))
                                      g$subst-labels$10488$1c1CVa
                                      g$subst-names$10487$1c1CVa))))))
                             g$exp-ext*$10482$1c1CVa
                             g$exp-int*$10481$1c1CVa))))))
                    g$swap$10478$1c1CVa)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10544$1c1CVa)
                        (begin
                          (g$imp-collector$10474$1c1CVa
                            g$imp-collector$10476$1c1CVa)
                          (set! g$imp-collector$10476$1c1CVa
                            g$t$10544$1c1CVa))))
                     (g$imp-collector$10474$1c1CVa))
                    ((case-lambda
                       ((g$t$10545$1c1CVa)
                        (begin
                          (g$top-level-context$10475$1c1CVa
                            g$top-level-context$10477$1c1CVa)
                          (set! g$top-level-context$10477$1c1CVa
                            g$t$10545$1c1CVa))))
                     (g$top-level-context$10475$1c1CVa))))))))
           g$imp-collector$7696$1c1CVa
           g$top-level-context$7758$1c1CVa
           g$itc$10469$1c1CVa
           '#f)))))
   (g$core-library-expander$7700$1c1CVa
     g$core-library-expander$11139$1c1CVa
     (case-lambda
       ((g$e$10546$1c1CVa g$verify-name$10547$1c1CVa)
        (call-with-values
          (case-lambda (() (g$parse-library$7690$1c1CVa g$e$10546$1c1CVa)))
          (case-lambda
            ((g$name*$10552$1c1CVa
               g$exp*$10553$1c1CVa
               g$imp*$10554$1c1CVa
               g$b*$10555$1c1CVa)
             ((case-lambda
                ((g$b*$10556$1c1CVa
                   g$imp*$10557$1c1CVa
                   g$exp*$10558$1c1CVa
                   g$name*$10559$1c1CVa)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$7689$1c1CVa g$name*$10559$1c1CVa)))
                   (case-lambda
                     ((g$name$10562$1c1CVa g$ver$10563$1c1CVa)
                      ((case-lambda
                         ((g$ver$10564$1c1CVa g$name$10565$1c1CVa)
                          (begin
                            (g$verify-name$10547$1c1CVa g$name$10565$1c1CVa)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7699$1c1CVa
                                   g$name$10565$1c1CVa
                                   g$exp*$10558$1c1CVa
                                   g$imp*$10557$1c1CVa
                                   g$b*$10556$1c1CVa
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10573$1c1CVa
                                   g$invoke-req*$10574$1c1CVa
                                   g$visit-req*$10575$1c1CVa
                                   g$invoke-code$10576$1c1CVa
                                   g$visit-code$10577$1c1CVa
                                   g$export-subst$10578$1c1CVa
                                   g$export-env$10579$1c1CVa)
                                 ((case-lambda
                                    ((g$export-env$10580$1c1CVa
                                       g$export-subst$10581$1c1CVa
                                       g$visit-code$10582$1c1CVa
                                       g$invoke-code$10583$1c1CVa
                                       g$visit-req*$10584$1c1CVa
                                       g$invoke-req*$10585$1c1CVa
                                       g$imp*$10586$1c1CVa)
                                     (values
                                       g$name$10565$1c1CVa
                                       g$ver$10564$1c1CVa
                                       g$imp*$10586$1c1CVa
                                       g$invoke-req*$10585$1c1CVa
                                       g$visit-req*$10584$1c1CVa
                                       g$invoke-code$10583$1c1CVa
                                       g$visit-code$10582$1c1CVa
                                       g$export-subst$10581$1c1CVa
                                       g$export-env$10580$1c1CVa)))
                                  g$export-env$10579$1c1CVa
                                  g$export-subst$10578$1c1CVa
                                  g$visit-code$10577$1c1CVa
                                  g$invoke-code$10576$1c1CVa
                                  g$visit-req*$10575$1c1CVa
                                  g$invoke-req*$10574$1c1CVa
                                  g$imp*$10573$1c1CVa)))))))
                       g$ver$10563$1c1CVa
                       g$name$10562$1c1CVa))))))
              g$b*$10555$1c1CVa
              g$imp*$10554$1c1CVa
              g$exp*$10553$1c1CVa
              g$name*$10552$1c1CVa)))))))
   (g$parse-top-level-program$7701$1c1CVa
     g$parse-top-level-program$11140$1c1CVa
     (case-lambda
       ((g$e*$10587$1c1CVa)
        ((case-lambda
           ((g$t$10588$1c1CVa)
            ((case-lambda
               ((g$ls/false$10589$1c1CVa)
                (if (if g$ls/false$10589$1c1CVa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10590$1c1CVa
                               g$imp*$10591$1c1CVa
                               g$b*$10592$1c1CVa)
                             (eq? (g$syntax->datum$7754$1c1CVa
                                    g$import$10590$1c1CVa)
                                  'import)))
                          g$ls/false$10589$1c1CVa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10593$1c1CVa
                         g$imp*$10594$1c1CVa
                         g$b*$10595$1c1CVa)
                       (values g$imp*$10594$1c1CVa g$b*$10595$1c1CVa)))
                    g$ls/false$10589$1c1CVa)
                  ((case-lambda
                     ((g$t$10596$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$10597$1c1CVa)
                          (if (if g$ls/false$10597$1c1CVa
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10598$1c1CVa
                                         g$x$10599$1c1CVa
                                         g$y$10600$1c1CVa)
                                       (eq? (g$syntax->datum$7754$1c1CVa
                                              g$import$10598$1c1CVa)
                                            'import)))
                                    g$ls/false$10597$1c1CVa))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10601$1c1CVa
                                   g$x$10602$1c1CVa
                                   g$y$10603$1c1CVa)
                                 (g$syntax-violation$7751$1c1CVa
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7361$1c1CVa
                                     g$e*$10587$1c1CVa))))
                              g$ls/false$10597$1c1CVa)
                            ((case-lambda
                               ((g$t$10604$1c1CVa)
                                ((case-lambda
                                   ((g$ls/false$10605$1c1CVa)
                                    (if g$ls/false$10605$1c1CVa
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10605$1c1CVa)
                                      (g$syntax-violation$7751$1c1CVa
                                        '#f
                                        '"invalid syntax"
                                        g$t$10604$1c1CVa))))
                                 (g$syntax-dispatch$7642$1c1CVa
                                   g$t$10604$1c1CVa
                                   '_))))
                             g$t$10596$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa
                         g$t$10596$1c1CVa
                         '((any . any) . any)))))
                   g$t$10588$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa
               g$t$10588$1c1CVa
               '((any . each-any) . each-any)))))
         g$e*$10587$1c1CVa))))
   (g$top-level-expander$7702$1c1CVa
     g$top-level-expander$11141$1c1CVa
     (case-lambda
       ((g$e*$10606$1c1CVa)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7701$1c1CVa g$e*$10606$1c1CVa)))
          (case-lambda
            ((g$imp*$10609$1c1CVa g$b*$10610$1c1CVa)
             ((case-lambda
                ((g$b*$10611$1c1CVa g$imp*$10612$1c1CVa)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7699$1c1CVa
                        '()
                        '()
                        g$imp*$10612$1c1CVa
                        g$b*$10611$1c1CVa
                        '#t)))
                   (case-lambda
                     ((g$imp*$10620$1c1CVa
                        g$invoke-req*$10621$1c1CVa
                        g$visit-req*$10622$1c1CVa
                        g$invoke-code$10623$1c1CVa
                        g$visit-code$10624$1c1CVa
                        g$export-subst$10625$1c1CVa
                        g$export-env$10626$1c1CVa)
                      ((case-lambda
                         ((g$export-env$10627$1c1CVa
                            g$export-subst$10628$1c1CVa
                            g$visit-code$10629$1c1CVa
                            g$invoke-code$10630$1c1CVa
                            g$visit-req*$10631$1c1CVa
                            g$invoke-req*$10632$1c1CVa
                            g$imp*$10633$1c1CVa)
                          (values
                            g$invoke-req*$10632$1c1CVa
                            g$invoke-code$10630$1c1CVa)))
                       g$export-env$10626$1c1CVa
                       g$export-subst$10625$1c1CVa
                       g$visit-code$10624$1c1CVa
                       g$invoke-code$10623$1c1CVa
                       g$visit-req*$10622$1c1CVa
                       g$invoke-req*$10621$1c1CVa
                       g$imp*$10620$1c1CVa))))))
              g$b*$10610$1c1CVa
              g$imp*$10609$1c1CVa)))))))
   (g$8880$7703$1c1CVa
     g$8880$11142$1c1CVa
     (make-record-type-descriptor
       'env
       '#f
       'g$8883$1c1CVa
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8882$7704$1c1CVa g$8882$11143$1c1CVa '#f)
   (g$8881$7705$1c1CVa
     g$8881$11144$1c1CVa
     (make-record-constructor-descriptor
       g$8880$7703$1c1CVa
       '#f
       g$8882$7704$1c1CVa))
   (g$env?$7706$1c1CVa
     g$env?$11145$1c1CVa
     (record-predicate g$8880$7703$1c1CVa))
   (g$make-env$7707$1c1CVa
     g$make-env$11146$1c1CVa
     (record-constructor g$8881$7705$1c1CVa))
   (g$env-names$7708$1c1CVa
     g$env-names$11147$1c1CVa
     (record-accessor g$8880$7703$1c1CVa '0))
   (g$env-labels$7709$1c1CVa
     g$env-labels$11148$1c1CVa
     (record-accessor g$8880$7703$1c1CVa '1))
   (g$env-itc$7710$1c1CVa
     g$env-itc$11149$1c1CVa
     (record-accessor g$8880$7703$1c1CVa '2))
   (g$set-env-names!$7711$1c1CVa
     g$set-env-names!$11150$1c1CVa
     (record-mutator g$8880$7703$1c1CVa '0))
   (g$set-env-labels!$7712$1c1CVa
     g$set-env-labels!$11151$1c1CVa
     (record-mutator g$8880$7703$1c1CVa '1))
   (g$set-env-itc!$7713$1c1CVa
     g$set-env-itc!$11152$1c1CVa
     (record-mutator g$8880$7703$1c1CVa '2))
   (g$rp$7714$1c1CVa
     g$rp$11153$1c1CVa
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10634$1c1CVa g$p$10635$1c1CVa)
          (display '"#<environment>" g$p$10635$1c1CVa)))))
   (g$8899$7715$1c1CVa
     g$8899$11154$1c1CVa
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8902$1c1CVa
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8901$7716$1c1CVa g$8901$11155$1c1CVa '#f)
   (g$8900$7717$1c1CVa
     g$8900$11156$1c1CVa
     (make-record-constructor-descriptor
       g$8899$7715$1c1CVa
       '#f
       g$8901$7716$1c1CVa))
   (g$interaction-env?$7718$1c1CVa
     g$interaction-env?$11157$1c1CVa
     (record-predicate g$8899$7715$1c1CVa))
   (g$make-interaction-env$7719$1c1CVa
     g$make-interaction-env$11158$1c1CVa
     (record-constructor g$8900$7717$1c1CVa))
   (g$interaction-env-rib$7720$1c1CVa
     g$interaction-env-rib$11159$1c1CVa
     (record-accessor g$8899$7715$1c1CVa '0))
   (g$interaction-env-r$7721$1c1CVa
     g$interaction-env-r$11160$1c1CVa
     (record-accessor g$8899$7715$1c1CVa '1))
   (g$interaction-env-locs$7722$1c1CVa
     g$interaction-env-locs$11161$1c1CVa
     (record-accessor g$8899$7715$1c1CVa '2))
   (g$set-interaction-env-rib!$7723$1c1CVa
     g$set-interaction-env-rib!$11162$1c1CVa
     (record-mutator g$8899$7715$1c1CVa '0))
   (g$set-interaction-env-r!$7724$1c1CVa
     g$set-interaction-env-r!$11163$1c1CVa
     (record-mutator g$8899$7715$1c1CVa '1))
   (g$set-interaction-env-locs!$7725$1c1CVa
     g$set-interaction-env-locs!$11164$1c1CVa
     (record-mutator g$8899$7715$1c1CVa '2))
   (g$rp$7726$1c1CVa
     g$rp$11165$1c1CVa
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10636$1c1CVa g$p$10637$1c1CVa)
          (display '"#<environment>" g$p$10637$1c1CVa)))))
   (g$interaction-environment-symbols$7727$1c1CVa
     g$interaction-environment-symbols$11166$1c1CVa
     (case-lambda
       (()
        (map (case-lambda ((g$x$10638$1c1CVa) g$x$10638$1c1CVa))
             (g$rib-sym*$7319$1c1CVa
               (g$interaction-env-rib$7720$1c1CVa
                 (g$interaction-environment$7757$1c1CVa)))))))
   (g$environment-symbols$7728$1c1CVa
     g$environment-symbols$11167$1c1CVa
     (case-lambda
       ((g$e$10639$1c1CVa)
        (vector->list (g$env-names$7708$1c1CVa g$e$10639$1c1CVa)))))
   (g$environment?$7729$1c1CVa
     g$environment?$11168$1c1CVa
     (case-lambda
       ((g$x$10640$1c1CVa)
        ((case-lambda
           ((g$t$10641$1c1CVa)
            (if g$t$10641$1c1CVa
              g$t$10641$1c1CVa
              (begin '#f (g$interaction-env?$7718$1c1CVa g$x$10640$1c1CVa)))))
         (g$env?$7706$1c1CVa g$x$10640$1c1CVa)))))
   (g$environment$7730$1c1CVa
     g$environment$11169$1c1CVa
     (case-lambda
       (g$imp*$10642$1c1CVa
        ((case-lambda
           ((g$itc$10643$1c1CVa)
            ((case-lambda
               ((g$imp-collector$10646$1c1CVa g$imp-collector$10647$1c1CVa)
                ((case-lambda
                   ((g$swap$10648$1c1CVa)
                    (dynamic-wind
                      g$swap$10648$1c1CVa
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7691$1c1CVa
                                g$imp*$10642$1c1CVa)))
                           (case-lambda
                             ((g$subst-names$10651$1c1CVa
                                g$subst-labels$10652$1c1CVa)
                              ((case-lambda
                                 ((g$subst-labels$10653$1c1CVa
                                    g$subst-names$10654$1c1CVa)
                                  (g$make-env$7707$1c1CVa
                                    g$subst-names$10654$1c1CVa
                                    g$subst-labels$10653$1c1CVa
                                    g$itc$10643$1c1CVa)))
                               g$subst-labels$10652$1c1CVa
                               g$subst-names$10651$1c1CVa))))))
                      g$swap$10648$1c1CVa)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10655$1c1CVa)
                        (begin
                          (g$imp-collector$10646$1c1CVa
                            g$imp-collector$10647$1c1CVa)
                          (set! g$imp-collector$10647$1c1CVa
                            g$t$10655$1c1CVa))))
                     (g$imp-collector$10646$1c1CVa)))))))
             g$imp-collector$7696$1c1CVa
             g$itc$10643$1c1CVa)))
         (g$make-collector$7693$1c1CVa)))))
   (g$null-environment$7731$1c1CVa
     g$null-environment$11170$1c1CVa
     (case-lambda
       ((g$n$10656$1c1CVa)
        (begin
          (if (not (eqv? g$n$10656$1c1CVa '5))
            (assertion-violation 'null-environment '"not 5" g$n$10656$1c1CVa)
            (void))
          (g$environment$7730$1c1CVa '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7732$1c1CVa
     g$scheme-report-environment$11171$1c1CVa
     (case-lambda
       ((g$n$10657$1c1CVa)
        (begin
          (if (not (eqv? g$n$10657$1c1CVa '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10657$1c1CVa)
            (void))
          (g$environment$7730$1c1CVa '(psyntax scheme-report-environment-5))))))
   (g$expand$7733$1c1CVa
     g$expand$11172$1c1CVa
     (case-lambda
       ((g$x$10658$1c1CVa g$env$10659$1c1CVa)
        (if (g$env?$7706$1c1CVa g$env$10659$1c1CVa)
          ((case-lambda
             ((g$rib$10660$1c1CVa)
              ((case-lambda
                 ((g$x$10661$1c1CVa
                    g$itc$10662$1c1CVa
                    g$rtc$10663$1c1CVa
                    g$vtc$10664$1c1CVa)
                  ((case-lambda
                     ((g$x$10665$1c1CVa)
                      (begin
                        (g$seal-rib!$7330$1c1CVa g$rib$10660$1c1CVa)
                        (values g$x$10665$1c1CVa (g$rtc$10663$1c1CVa)))))
                   ((case-lambda
                      ((g$inv-collector$10672$1c1CVa
                         g$vis-collector$10673$1c1CVa
                         g$imp-collector$10674$1c1CVa
                         g$inv-collector$10675$1c1CVa
                         g$vis-collector$10676$1c1CVa
                         g$imp-collector$10677$1c1CVa)
                       ((case-lambda
                          ((g$swap$10678$1c1CVa)
                           (dynamic-wind
                             g$swap$10678$1c1CVa
                             (case-lambda
                               (()
                                (g$chi-expr$7660$1c1CVa
                                  g$x$10661$1c1CVa
                                  '()
                                  '())))
                             g$swap$10678$1c1CVa)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10679$1c1CVa)
                                 (begin
                                   (g$inv-collector$10672$1c1CVa
                                     g$inv-collector$10675$1c1CVa)
                                   (set! g$inv-collector$10675$1c1CVa
                                     g$t$10679$1c1CVa))))
                              (g$inv-collector$10672$1c1CVa))
                             ((case-lambda
                                ((g$t$10680$1c1CVa)
                                 (begin
                                   (g$vis-collector$10673$1c1CVa
                                     g$vis-collector$10676$1c1CVa)
                                   (set! g$vis-collector$10676$1c1CVa
                                     g$t$10680$1c1CVa))))
                              (g$vis-collector$10673$1c1CVa))
                             ((case-lambda
                                ((g$t$10681$1c1CVa)
                                 (begin
                                   (g$imp-collector$10674$1c1CVa
                                     g$imp-collector$10677$1c1CVa)
                                   (set! g$imp-collector$10677$1c1CVa
                                     g$t$10681$1c1CVa))))
                              (g$imp-collector$10674$1c1CVa))))))))
                    g$inv-collector$7694$1c1CVa
                    g$vis-collector$7695$1c1CVa
                    g$imp-collector$7696$1c1CVa
                    g$rtc$10663$1c1CVa
                    g$vtc$10664$1c1CVa
                    g$itc$10662$1c1CVa))))
               (g$make-stx$7337$1c1CVa
                 g$x$10658$1c1CVa
                 g$top-mark*$7306$1c1CVa
                 (list g$rib$10660$1c1CVa)
                 '())
               (g$env-itc$7710$1c1CVa g$env$10659$1c1CVa)
               (g$make-collector$7693$1c1CVa)
               (g$make-collector$7693$1c1CVa))))
           (g$make-top-rib$7692$1c1CVa
             (g$env-names$7708$1c1CVa g$env$10659$1c1CVa)
             (g$env-labels$7709$1c1CVa g$env$10659$1c1CVa)))
          (if (g$interaction-env?$7718$1c1CVa g$env$10659$1c1CVa)
            ((case-lambda
               ((g$rib$10682$1c1CVa g$r$10683$1c1CVa g$rtc$10684$1c1CVa)
                ((case-lambda
                   ((g$x$10685$1c1CVa)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10696$1c1CVa
                               g$inv-collector$10697$1c1CVa
                               g$vis-collector$10698$1c1CVa
                               g$imp-collector$10699$1c1CVa
                               g$top-level-context$10700$1c1CVa
                               g$inv-collector$10701$1c1CVa
                               g$vis-collector$10702$1c1CVa
                               g$imp-collector$10703$1c1CVa)
                             ((case-lambda
                                ((g$swap$10704$1c1CVa)
                                 (dynamic-wind
                                   g$swap$10704$1c1CVa
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7698$1c1CVa
                                        g$x$10685$1c1CVa
                                        g$rib$10682$1c1CVa
                                        g$r$10683$1c1CVa)))
                                   g$swap$10704$1c1CVa)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10705$1c1CVa)
                                       (begin
                                         (g$top-level-context$10696$1c1CVa
                                           g$top-level-context$10700$1c1CVa)
                                         (set! g$top-level-context$10700$1c1CVa
                                           g$t$10705$1c1CVa))))
                                    (g$top-level-context$10696$1c1CVa))
                                   ((case-lambda
                                      ((g$t$10706$1c1CVa)
                                       (begin
                                         (g$inv-collector$10697$1c1CVa
                                           g$inv-collector$10701$1c1CVa)
                                         (set! g$inv-collector$10701$1c1CVa
                                           g$t$10706$1c1CVa))))
                                    (g$inv-collector$10697$1c1CVa))
                                   ((case-lambda
                                      ((g$t$10707$1c1CVa)
                                       (begin
                                         (g$vis-collector$10698$1c1CVa
                                           g$vis-collector$10702$1c1CVa)
                                         (set! g$vis-collector$10702$1c1CVa
                                           g$t$10707$1c1CVa))))
                                    (g$vis-collector$10698$1c1CVa))
                                   ((case-lambda
                                      ((g$t$10708$1c1CVa)
                                       (begin
                                         (g$imp-collector$10699$1c1CVa
                                           g$imp-collector$10703$1c1CVa)
                                         (set! g$imp-collector$10703$1c1CVa
                                           g$t$10708$1c1CVa))))
                                    (g$imp-collector$10699$1c1CVa))))))))
                          g$top-level-context$7758$1c1CVa
                          g$inv-collector$7694$1c1CVa
                          g$vis-collector$7695$1c1CVa
                          g$imp-collector$7696$1c1CVa
                          g$env$10659$1c1CVa
                          g$rtc$10684$1c1CVa
                          (g$make-collector$7693$1c1CVa)
                          (g$make-collector$7693$1c1CVa))))
                      (case-lambda
                        ((g$e$10709$1c1CVa g$r^$10710$1c1CVa)
                         ((case-lambda
                            ((g$r^$10711$1c1CVa g$e$10712$1c1CVa)
                             (begin
                               (g$set-interaction-env-r!$7724$1c1CVa
                                 g$env$10659$1c1CVa
                                 g$r^$10711$1c1CVa)
                               (values g$e$10712$1c1CVa (g$rtc$10684$1c1CVa)))))
                          g$r^$10710$1c1CVa
                          g$e$10709$1c1CVa))))))
                 (g$make-stx$7337$1c1CVa
                   g$x$10658$1c1CVa
                   g$top-mark*$7306$1c1CVa
                   (list g$rib$10682$1c1CVa)
                   '()))))
             (g$interaction-env-rib$7720$1c1CVa g$env$10659$1c1CVa)
             (g$interaction-env-r$7721$1c1CVa g$env$10659$1c1CVa)
             (g$make-collector$7693$1c1CVa))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10659$1c1CVa))))))
   (g$eval$7734$1c1CVa
     g$eval$11173$1c1CVa
     (case-lambda
       ((g$x$10713$1c1CVa g$env$10714$1c1CVa)
        (begin
          (if (not (g$environment?$7729$1c1CVa g$env$10714$1c1CVa))
            (error 'eval '"not an environment" g$env$10714$1c1CVa)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$7733$1c1CVa g$x$10713$1c1CVa g$env$10714$1c1CVa)))
            (case-lambda
              ((g$x$10717$1c1CVa g$invoke-req*$10718$1c1CVa)
               ((case-lambda
                  ((g$invoke-req*$10719$1c1CVa g$x$10720$1c1CVa)
                   (begin
                     (for-each
                       g$invoke-library$7179$1c1CVa
                       g$invoke-req*$10719$1c1CVa)
                     (eval-core
                       (g$expanded->core$6878$1c1CVa g$x$10720$1c1CVa)))))
                g$invoke-req*$10718$1c1CVa
                g$x$10717$1c1CVa))))))))
   (g$library-expander$7735$1c1CVa
     g$library-expander$11174$1c1CVa
     (case-lambda
       ((g$x$10721$1c1CVa g$filename$10722$1c1CVa g$verify-name$10723$1c1CVa)
        (letrec* ((g$build-visit-code$10724$1c1CVa
                    (case-lambda
                      ((g$macro*$10767$1c1CVa)
                       (if (null? g$macro*$10767$1c1CVa)
                         (g$build-void$7299$1c1CVa)
                         (g$build-sequence$7298$1c1CVa
                           '#f
                           (map (case-lambda
                                  ((g$x$10768$1c1CVa)
                                   ((case-lambda
                                      ((g$loc$10769$1c1CVa g$src$10770$1c1CVa)
                                       (list
                                         'set!
                                         g$loc$10769$1c1CVa
                                         g$src$10770$1c1CVa)))
                                    (car g$x$10768$1c1CVa)
                                    (g$cddr$5015$1c1CVa g$x$10768$1c1CVa))))
                                g$macro*$10767$1c1CVa))))))
                  (g$visit!$10725$1c1CVa
                    (case-lambda
                      ((g$macro*$10763$1c1CVa)
                       (for-each
                         (case-lambda
                           ((g$x$10764$1c1CVa)
                            ((case-lambda
                               ((g$loc$10765$1c1CVa g$proc$10766$1c1CVa)
                                (set-symbol-value!
                                  g$loc$10765$1c1CVa
                                  g$proc$10766$1c1CVa)))
                             (car g$x$10764$1c1CVa)
                             (g$cadr$5013$1c1CVa g$x$10764$1c1CVa))))
                         g$macro*$10763$1c1CVa)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7700$1c1CVa
                 g$x$10721$1c1CVa
                 g$verify-name$10723$1c1CVa)))
            (case-lambda
              ((g$name$10735$1c1CVa
                 g$ver$10736$1c1CVa
                 g$imp*$10737$1c1CVa
                 g$inv*$10738$1c1CVa
                 g$vis*$10739$1c1CVa
                 g$invoke-code$10740$1c1CVa
                 g$macro*$10741$1c1CVa
                 g$export-subst$10742$1c1CVa
                 g$export-env$10743$1c1CVa)
               ((case-lambda
                  ((g$export-env$10744$1c1CVa
                     g$export-subst$10745$1c1CVa
                     g$macro*$10746$1c1CVa
                     g$invoke-code$10747$1c1CVa
                     g$vis*$10748$1c1CVa
                     g$inv*$10749$1c1CVa
                     g$imp*$10750$1c1CVa
                     g$ver$10751$1c1CVa
                     g$name$10752$1c1CVa)
                   ((case-lambda
                      ((g$id$10753$1c1CVa
                         g$name$10754$1c1CVa
                         g$ver$10755$1c1CVa
                         g$imp*$10756$1c1CVa
                         g$vis*$10757$1c1CVa
                         g$inv*$10758$1c1CVa
                         g$visit-proc$10759$1c1CVa
                         g$invoke-proc$10760$1c1CVa
                         g$visit-code$10761$1c1CVa
                         g$invoke-code$10762$1c1CVa)
                       (begin
                         (g$install-library$7177$1c1CVa
                           g$id$10753$1c1CVa
                           g$name$10754$1c1CVa
                           g$ver$10755$1c1CVa
                           g$imp*$10756$1c1CVa
                           g$vis*$10757$1c1CVa
                           g$inv*$10758$1c1CVa
                           g$export-subst$10745$1c1CVa
                           g$export-env$10744$1c1CVa
                           g$visit-proc$10759$1c1CVa
                           g$invoke-proc$10760$1c1CVa
                           g$visit-code$10761$1c1CVa
                           g$invoke-code$10762$1c1CVa
                           '#t
                           g$filename$10722$1c1CVa)
                         (values
                           g$id$10753$1c1CVa
                           g$name$10754$1c1CVa
                           g$ver$10755$1c1CVa
                           g$imp*$10756$1c1CVa
                           g$vis*$10757$1c1CVa
                           g$inv*$10758$1c1CVa
                           g$invoke-code$10762$1c1CVa
                           g$visit-code$10761$1c1CVa
                           g$export-subst$10745$1c1CVa
                           g$export-env$10744$1c1CVa))))
                    (gensym)
                    g$name$10752$1c1CVa
                    g$ver$10751$1c1CVa
                    (map g$library-spec$7183$1c1CVa g$imp*$10750$1c1CVa)
                    (map g$library-spec$7183$1c1CVa g$vis*$10748$1c1CVa)
                    (map g$library-spec$7183$1c1CVa g$inv*$10749$1c1CVa)
                    (case-lambda
                      (() (g$visit!$10725$1c1CVa g$macro*$10746$1c1CVa)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6878$1c1CVa
                           g$invoke-code$10747$1c1CVa))))
                    (g$build-visit-code$10724$1c1CVa g$macro*$10746$1c1CVa)
                    g$invoke-code$10747$1c1CVa)))
                g$export-env$10743$1c1CVa
                g$export-subst$10742$1c1CVa
                g$macro*$10741$1c1CVa
                g$invoke-code$10740$1c1CVa
                g$vis*$10739$1c1CVa
                g$inv*$10738$1c1CVa
                g$imp*$10737$1c1CVa
                g$ver$10736$1c1CVa
                g$name$10735$1c1CVa))))))
       ((g$x$10771$1c1CVa g$filename$10772$1c1CVa)
        (g$library-expander$7735$1c1CVa
          g$x$10771$1c1CVa
          g$filename$10772$1c1CVa
          (case-lambda ((g$x$10773$1c1CVa) (values)))))
       ((g$x$10774$1c1CVa)
        (g$library-expander$7735$1c1CVa
          g$x$10774$1c1CVa
          '#f
          (case-lambda ((g$x$10775$1c1CVa) (values)))))))
   (g$boot-library-expand$7736$1c1CVa
     g$boot-library-expand$11175$1c1CVa
     (case-lambda
       ((g$x$10776$1c1CVa)
        (call-with-values
          (case-lambda (() (g$library-expander$7735$1c1CVa g$x$10776$1c1CVa)))
          (case-lambda
            ((g$id$10787$1c1CVa
               g$name$10788$1c1CVa
               g$ver$10789$1c1CVa
               g$imp*$10790$1c1CVa
               g$vis*$10791$1c1CVa
               g$inv*$10792$1c1CVa
               g$invoke-code$10793$1c1CVa
               g$visit-code$10794$1c1CVa
               g$export-subst$10795$1c1CVa
               g$export-env$10796$1c1CVa)
             ((case-lambda
                ((g$export-env$10797$1c1CVa
                   g$export-subst$10798$1c1CVa
                   g$visit-code$10799$1c1CVa
                   g$invoke-code$10800$1c1CVa
                   g$inv*$10801$1c1CVa
                   g$vis*$10802$1c1CVa
                   g$imp*$10803$1c1CVa
                   g$ver$10804$1c1CVa
                   g$name$10805$1c1CVa
                   g$id$10806$1c1CVa)
                 (values
                   g$name$10805$1c1CVa
                   g$invoke-code$10800$1c1CVa
                   g$export-subst$10798$1c1CVa
                   g$export-env$10797$1c1CVa)))
              g$export-env$10796$1c1CVa
              g$export-subst$10795$1c1CVa
              g$visit-code$10794$1c1CVa
              g$invoke-code$10793$1c1CVa
              g$inv*$10792$1c1CVa
              g$vis*$10791$1c1CVa
              g$imp*$10790$1c1CVa
              g$ver$10789$1c1CVa
              g$name$10788$1c1CVa
              g$id$10787$1c1CVa)))))))
   (g$rev-map-append$7737$1c1CVa
     g$rev-map-append$11176$1c1CVa
     (case-lambda
       ((g$f$10807$1c1CVa g$ls$10808$1c1CVa g$ac$10809$1c1CVa)
        (if (null? g$ls$10808$1c1CVa)
          g$ac$10809$1c1CVa
          (g$rev-map-append$7737$1c1CVa
            g$f$10807$1c1CVa
            (cdr g$ls$10808$1c1CVa)
            (cons
              (g$f$10807$1c1CVa (car g$ls$10808$1c1CVa))
              g$ac$10809$1c1CVa))))))
   (g$build-exports$7738$1c1CVa
     g$build-exports$11177$1c1CVa
     (case-lambda
       ((g$lex*+loc*$10810$1c1CVa g$init*$10811$1c1CVa)
        (g$build-sequence$7298$1c1CVa
          '#f
          (cons
            (g$build-void$7299$1c1CVa)
            (g$rev-map-append$7737$1c1CVa
              (case-lambda
                ((g$x$10812$1c1CVa)
                 (list 'set! (cdr g$x$10812$1c1CVa) (car g$x$10812$1c1CVa))))
              g$lex*+loc*$10810$1c1CVa
              g$init*$10811$1c1CVa))))))
   (g$make-export-subst$7739$1c1CVa
     g$make-export-subst$11178$1c1CVa
     (case-lambda
       ((g$int*$10813$1c1CVa g$ext*$10814$1c1CVa g$rib$10815$1c1CVa)
        (map (case-lambda
               ((g$int$10816$1c1CVa g$ext$10817$1c1CVa)
                ((case-lambda
                   ((g$id$10818$1c1CVa)
                    ((case-lambda
                       ((g$label$10819$1c1CVa)
                        ((case-lambda
                           (()
                            (begin
                              (if (not g$label$10819$1c1CVa)
                                (g$syntax-violation$7751$1c1CVa
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$10818$1c1CVa)
                                (void))
                              (cons
                                g$ext$10817$1c1CVa
                                g$label$10819$1c1CVa)))))))
                     (g$id->label$7377$1c1CVa g$id$10818$1c1CVa))))
                 (g$make-stx$7337$1c1CVa
                   g$int$10816$1c1CVa
                   g$top-mark*$7306$1c1CVa
                   (list g$rib$10815$1c1CVa)
                   '()))))
             g$int*$10813$1c1CVa
             g$ext*$10814$1c1CVa))))
   (g$make-export-env/macros$7740$1c1CVa
     g$make-export-env/macros$11179$1c1CVa
     (case-lambda
       ((g$lex*$10820$1c1CVa g$loc*$10821$1c1CVa g$r$10822$1c1CVa)
        (letrec* ((g$lookup$10823$1c1CVa
                    (case-lambda
                      ((g$x$10838$1c1CVa)
                       ((letrec ((g$f$10839$1c1CVa
                                   (case-lambda
                                     ((g$x$10840$1c1CVa
                                        g$lex*$10841$1c1CVa
                                        g$loc*$10842$1c1CVa)
                                      (if (pair? g$lex*$10841$1c1CVa)
                                        (if (eq? g$x$10840$1c1CVa
                                                 (car g$lex*$10841$1c1CVa))
                                          (car g$loc*$10842$1c1CVa)
                                          (g$f$10839$1c1CVa
                                            g$x$10840$1c1CVa
                                            (cdr g$lex*$10841$1c1CVa)
                                            (cdr g$loc*$10842$1c1CVa)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10839$1c1CVa)
                        g$x$10838$1c1CVa
                        g$lex*$10820$1c1CVa
                        g$loc*$10821$1c1CVa)))))
          ((letrec ((g$f$10824$1c1CVa
                      (case-lambda
                        ((g$r$10825$1c1CVa
                           g$env$10826$1c1CVa
                           g$global*$10827$1c1CVa
                           g$macro*$10828$1c1CVa)
                         (if (null? g$r$10825$1c1CVa)
                           (values
                             g$env$10826$1c1CVa
                             g$global*$10827$1c1CVa
                             g$macro*$10828$1c1CVa)
                           ((case-lambda
                              ((g$x$10829$1c1CVa)
                               ((case-lambda
                                  ((g$label$10830$1c1CVa g$b$10831$1c1CVa)
                                   ((case-lambda
                                      ((g$t$10832$1c1CVa)
                                       (if (memv g$t$10832$1c1CVa '(lexical))
                                         ((case-lambda
                                            ((g$v$10833$1c1CVa)
                                             ((case-lambda
                                                ((g$loc$10834$1c1CVa
                                                   g$type$10835$1c1CVa)
                                                 (g$f$10824$1c1CVa
                                                   (cdr g$r$10825$1c1CVa)
                                                   (cons
                                                     (g$cons*$5496$1c1CVa
                                                       g$label$10830$1c1CVa
                                                       g$type$10835$1c1CVa
                                                       g$loc$10834$1c1CVa)
                                                     g$env$10826$1c1CVa)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7586$1c1CVa
                                                         g$v$10833$1c1CVa)
                                                       g$loc$10834$1c1CVa)
                                                     g$global*$10827$1c1CVa)
                                                   g$macro*$10828$1c1CVa)))
                                              (g$lookup$10823$1c1CVa
                                                (g$lexical-var$7586$1c1CVa
                                                  g$v$10833$1c1CVa))
                                              (if (g$lexical-mutable?$7587$1c1CVa
                                                    g$v$10833$1c1CVa)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7382$1c1CVa
                                            g$b$10831$1c1CVa))
                                         (if (memv
                                               g$t$10832$1c1CVa
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$10836$1c1CVa)
                                               (g$f$10824$1c1CVa
                                                 (cdr g$r$10825$1c1CVa)
                                                 (cons
                                                   (g$cons*$5496$1c1CVa
                                                     g$label$10830$1c1CVa
                                                     'global-macro
                                                     g$loc$10836$1c1CVa)
                                                   g$env$10826$1c1CVa)
                                                 g$global*$10827$1c1CVa
                                                 (cons
                                                   (cons
                                                     g$loc$10836$1c1CVa
                                                     (g$binding-value$7382$1c1CVa
                                                       g$b$10831$1c1CVa))
                                                   g$macro*$10828$1c1CVa))))
                                            (gensym))
                                           (if (memv
                                                 g$t$10832$1c1CVa
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$10837$1c1CVa)
                                                 (g$f$10824$1c1CVa
                                                   (cdr g$r$10825$1c1CVa)
                                                   (cons
                                                     (g$cons*$5496$1c1CVa
                                                       g$label$10830$1c1CVa
                                                       'global-macro!
                                                       g$loc$10837$1c1CVa)
                                                     g$env$10826$1c1CVa)
                                                   g$global*$10827$1c1CVa
                                                   (cons
                                                     (cons
                                                       g$loc$10837$1c1CVa
                                                       (g$binding-value$7382$1c1CVa
                                                         g$b$10831$1c1CVa))
                                                     g$macro*$10828$1c1CVa))))
                                              (gensym))
                                             (if (memv
                                                   g$t$10832$1c1CVa
                                                   '($rtd $module))
                                               (g$f$10824$1c1CVa
                                                 (cdr g$r$10825$1c1CVa)
                                                 (cons
                                                   g$x$10829$1c1CVa
                                                   g$env$10826$1c1CVa)
                                                 g$global*$10827$1c1CVa
                                                 g$macro*$10828$1c1CVa)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7381$1c1CVa
                                                   g$b$10831$1c1CVa)
                                                 (g$binding-value$7382$1c1CVa
                                                   g$b$10831$1c1CVa))))))))
                                    (g$binding-type$7381$1c1CVa
                                      g$b$10831$1c1CVa))))
                                (car g$x$10829$1c1CVa)
                                (cdr g$x$10829$1c1CVa))))
                            (car g$r$10825$1c1CVa)))))))
             g$f$10824$1c1CVa)
           g$r$10822$1c1CVa
           '()
           '()
           '())))))
   (g$generate-temporaries$7741$1c1CVa
     g$generate-temporaries$11180$1c1CVa
     (case-lambda
       ((g$ls$10843$1c1CVa)
        ((case-lambda
           ((g$t$10844$1c1CVa)
            ((case-lambda
               ((g$ls/false$10845$1c1CVa)
                (if g$ls/false$10845$1c1CVa
                  (apply
                    (case-lambda
                      ((g$ls$10846$1c1CVa)
                       (map (case-lambda
                              ((g$x$10847$1c1CVa)
                               (g$make-stx$7337$1c1CVa
                                 ((case-lambda
                                    ((g$x$10848$1c1CVa)
                                     (if ((case-lambda
                                            ((g$t$10849$1c1CVa)
                                             (if g$t$10849$1c1CVa
                                               g$t$10849$1c1CVa
                                               (begin
                                                 '#f
                                                 (string? g$x$10848$1c1CVa)))))
                                          (symbol? g$x$10848$1c1CVa))
                                       (gensym g$x$10848$1c1CVa)
                                       (gensym 't))))
                                  (g$syntax->datum$7754$1c1CVa
                                    g$x$10847$1c1CVa))
                                 g$top-mark*$7306$1c1CVa
                                 '()
                                 '())))
                            g$ls$10846$1c1CVa)))
                    g$ls/false$10845$1c1CVa)
                  ((case-lambda
                     ((g$t$10850$1c1CVa)
                      ((case-lambda
                         ((g$ls/false$10851$1c1CVa)
                          (if g$ls/false$10851$1c1CVa
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10851$1c1CVa)
                            (g$syntax-violation$7751$1c1CVa
                              '#f
                              '"invalid syntax"
                              g$t$10850$1c1CVa))))
                       (g$syntax-dispatch$7642$1c1CVa g$t$10850$1c1CVa '_))))
                   g$t$10844$1c1CVa))))
             (g$syntax-dispatch$7642$1c1CVa g$t$10844$1c1CVa 'each-any))))
         g$ls$10843$1c1CVa))))
   (g$free-identifier=?$7742$1c1CVa
     g$free-identifier=?$11181$1c1CVa
     (case-lambda
       ((g$x$10852$1c1CVa g$y$10853$1c1CVa)
        (if (g$id?$7364$1c1CVa g$x$10852$1c1CVa)
          (if (g$id?$7364$1c1CVa g$y$10853$1c1CVa)
            (g$free-id=?$7368$1c1CVa g$x$10852$1c1CVa g$y$10853$1c1CVa)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10853$1c1CVa))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10852$1c1CVa)))))
   (g$bound-identifier=?$7743$1c1CVa
     g$bound-identifier=?$11182$1c1CVa
     (case-lambda
       ((g$x$10854$1c1CVa g$y$10855$1c1CVa)
        (if (g$id?$7364$1c1CVa g$x$10854$1c1CVa)
          (if (g$id?$7364$1c1CVa g$y$10855$1c1CVa)
            (g$bound-id=?$7367$1c1CVa g$x$10854$1c1CVa g$y$10855$1c1CVa)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10855$1c1CVa))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10854$1c1CVa)))))
   (g$make-source-condition$7744$1c1CVa
     g$make-source-condition$11183$1c1CVa
     (case-lambda
       ((g$x$10856$1c1CVa)
        (letrec* ((g$11784$10857$1c1CVa
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11787$1c1CVa
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11786$10858$1c1CVa '#f)
                  (g$11785$10859$1c1CVa
                    (make-record-constructor-descriptor
                      g$11784$10857$1c1CVa
                      &condition-rcd
                      g$11786$10858$1c1CVa))
                  (g$11783$10860$1c1CVa (record-predicate g$11784$10857$1c1CVa))
                  (g$make-source-condition$10861$1c1CVa
                    (record-constructor g$11785$10859$1c1CVa))
                  (g$11781$10862$1c1CVa
                    (record-accessor g$11784$10857$1c1CVa '0))
                  (g$11782$10863$1c1CVa
                    (record-accessor g$11784$10857$1c1CVa '1))
                  (g$source-condition?$10864$1c1CVa
                    (condition-predicate g$11784$10857$1c1CVa))
                  (g$source-filename$10865$1c1CVa
                    (condition-accessor
                      g$11784$10857$1c1CVa
                      g$11781$10862$1c1CVa))
                  (g$source-character$10866$1c1CVa
                    (condition-accessor
                      g$11784$10857$1c1CVa
                      g$11782$10863$1c1CVa)))
          (if (pair? g$x$10856$1c1CVa)
            (g$make-source-condition$10861$1c1CVa
              (car g$x$10856$1c1CVa)
              (cdr g$x$10856$1c1CVa))
            (condition))))))
   (g$extract-position-condition$7745$1c1CVa
     g$extract-position-condition$11184$1c1CVa
     (case-lambda
       ((g$x$10867$1c1CVa)
        (g$make-source-condition$7744$1c1CVa
          (g$expression-position$7746$1c1CVa g$x$10867$1c1CVa)))))
   (g$expression-position$7746$1c1CVa
     g$expression-position$11185$1c1CVa
     (case-lambda
       ((g$x$10868$1c1CVa)
        (if (g$stx?$7336$1c1CVa g$x$10868$1c1CVa)
          (begin
            '#f
            ((case-lambda
               ((g$x$10869$1c1CVa)
                (if (annotation? g$x$10869$1c1CVa)
                  (begin '#f (annotation-source g$x$10869$1c1CVa))
                  '#f)))
             (g$stx-expr$7338$1c1CVa g$x$10868$1c1CVa)))
          '#f))))
   (g$assertion-error$7747$1c1CVa
     g$assertion-error$11186$1c1CVa
     (case-lambda
       ((g$expr$10870$1c1CVa g$pos$10871$1c1CVa)
        (raise
          (condition
            (g$make-assertion-violation$5780$1c1CVa)
            (g$make-who-condition$5794$1c1CVa 'assert)
            (g$make-message-condition$5748$1c1CVa '"assertion failed")
            (g$make-irritants-condition$5786$1c1CVa (list g$expr$10870$1c1CVa))
            (g$make-source-condition$7744$1c1CVa g$pos$10871$1c1CVa))))))
   (g$syntax-error$7748$1c1CVa
     g$syntax-error$11187$1c1CVa
     (case-lambda
       ((g$x$10872$1c1CVa . g$args$10873$1c1CVa)
        (begin
          (if (not (g$for-all$5494$1c1CVa string? g$args$10873$1c1CVa))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10873$1c1CVa)
            (void))
          (raise
            (condition
              (g$make-message-condition$5748$1c1CVa
                (if (null? g$args$10873$1c1CVa)
                  '"invalid syntax"
                  (apply string-append g$args$10873$1c1CVa)))
              (g$make-syntax-violation$5820$1c1CVa
                (g$syntax->datum$7754$1c1CVa g$x$10872$1c1CVa)
                '#f)
              (g$extract-position-condition$7745$1c1CVa g$x$10872$1c1CVa)
              (g$extract-trace$7749$1c1CVa g$x$10872$1c1CVa)))))))
   (g$extract-trace$7749$1c1CVa
     g$extract-trace$11188$1c1CVa
     (case-lambda
       ((g$x$10874$1c1CVa)
        (letrec* ((g$11811$10875$1c1CVa
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11814$1c1CVa
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11813$10876$1c1CVa '#f)
                  (g$11812$10877$1c1CVa
                    (make-record-constructor-descriptor
                      g$11811$10875$1c1CVa
                      &condition-rcd
                      g$11813$10876$1c1CVa))
                  (g$11810$10878$1c1CVa (record-predicate g$11811$10875$1c1CVa))
                  (g$make-trace$10879$1c1CVa
                    (record-constructor g$11812$10877$1c1CVa))
                  (g$11809$10880$1c1CVa
                    (record-accessor g$11811$10875$1c1CVa '0))
                  (g$trace?$10881$1c1CVa
                    (condition-predicate g$11811$10875$1c1CVa))
                  (g$trace-form$10882$1c1CVa
                    (condition-accessor
                      g$11811$10875$1c1CVa
                      g$11809$10880$1c1CVa)))
          ((letrec ((g$f$10883$1c1CVa
                      (case-lambda
                        ((g$x$10884$1c1CVa)
                         (if (g$stx?$7336$1c1CVa g$x$10884$1c1CVa)
                           (apply
                             condition
                             (g$make-trace$10879$1c1CVa g$x$10884$1c1CVa)
                             (map g$f$10883$1c1CVa
                                  (g$stx-ae*$7341$1c1CVa g$x$10884$1c1CVa)))
                           (if (annotation? g$x$10884$1c1CVa)
                             (g$make-trace$10879$1c1CVa
                               (g$make-stx$7337$1c1CVa
                                 g$x$10884$1c1CVa
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10883$1c1CVa)
           g$x$10874$1c1CVa)))))
   (g$syntax-violation*$7750$1c1CVa
     g$syntax-violation*$11189$1c1CVa
     (case-lambda
       ((g$who$10885$1c1CVa
          g$msg$10886$1c1CVa
          g$form$10887$1c1CVa
          g$condition-object$10888$1c1CVa)
        (begin
          (if (not (string? g$msg$10886$1c1CVa))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10886$1c1CVa)
            (void))
          ((case-lambda
             ((g$who$10889$1c1CVa)
              (raise
                (condition
                  (if g$who$10889$1c1CVa
                    (g$make-who-condition$5794$1c1CVa g$who$10889$1c1CVa)
                    (condition))
                  (g$make-message-condition$5748$1c1CVa g$msg$10886$1c1CVa)
                  g$condition-object$10888$1c1CVa
                  (g$extract-position-condition$7745$1c1CVa g$form$10887$1c1CVa)
                  (g$extract-trace$7749$1c1CVa g$form$10887$1c1CVa)))))
           (if ((case-lambda
                  ((g$t$10890$1c1CVa)
                   (if g$t$10890$1c1CVa
                     g$t$10890$1c1CVa
                     (begin '#f (symbol? g$who$10885$1c1CVa)))))
                (string? g$who$10885$1c1CVa))
             g$who$10885$1c1CVa
             (if (not g$who$10885$1c1CVa)
               ((case-lambda
                  ((g$t$10891$1c1CVa)
                   ((case-lambda
                      ((g$ls/false$10892$1c1CVa)
                       (if (if g$ls/false$10892$1c1CVa
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10893$1c1CVa)
                                    (g$id?$7364$1c1CVa g$id$10893$1c1CVa)))
                                 g$ls/false$10892$1c1CVa))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10894$1c1CVa)
                              (g$syntax->datum$7754$1c1CVa g$id$10894$1c1CVa)))
                           g$ls/false$10892$1c1CVa)
                         ((case-lambda
                            ((g$t$10895$1c1CVa)
                             ((case-lambda
                                ((g$ls/false$10896$1c1CVa)
                                 (if (if g$ls/false$10896$1c1CVa
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10897$1c1CVa
                                                g$rest$10898$1c1CVa)
                                              (g$id?$7364$1c1CVa
                                                g$id$10897$1c1CVa)))
                                           g$ls/false$10896$1c1CVa))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10899$1c1CVa g$rest$10900$1c1CVa)
                                        (g$syntax->datum$7754$1c1CVa
                                          g$id$10899$1c1CVa)))
                                     g$ls/false$10896$1c1CVa)
                                   ((case-lambda
                                      ((g$t$10901$1c1CVa)
                                       ((case-lambda
                                          ((g$ls/false$10902$1c1CVa)
                                           (if g$ls/false$10902$1c1CVa
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10902$1c1CVa)
                                             (g$syntax-violation$7751$1c1CVa
                                               '#f
                                               '"invalid syntax"
                                               g$t$10901$1c1CVa))))
                                        (g$syntax-dispatch$7642$1c1CVa
                                          g$t$10901$1c1CVa
                                          '_))))
                                    g$t$10895$1c1CVa))))
                              (g$syntax-dispatch$7642$1c1CVa
                                g$t$10895$1c1CVa
                                '(any . any)))))
                          g$t$10891$1c1CVa))))
                    (g$syntax-dispatch$7642$1c1CVa g$t$10891$1c1CVa 'any))))
                g$form$10887$1c1CVa)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10885$1c1CVa))))))))
   (g$syntax-violation$7751$1c1CVa
     g$syntax-violation$11190$1c1CVa
     (case-lambda
       ((g$who$10903$1c1CVa g$msg$10904$1c1CVa g$form$10905$1c1CVa)
        (g$syntax-violation$7751$1c1CVa
          g$who$10903$1c1CVa
          g$msg$10904$1c1CVa
          g$form$10905$1c1CVa
          '#f))
       ((g$who$10906$1c1CVa
          g$msg$10907$1c1CVa
          g$form$10908$1c1CVa
          g$subform$10909$1c1CVa)
        (g$syntax-violation*$7750$1c1CVa
          g$who$10906$1c1CVa
          g$msg$10907$1c1CVa
          g$form$10908$1c1CVa
          (g$make-syntax-violation$5820$1c1CVa
            (g$syntax->datum$7754$1c1CVa g$form$10908$1c1CVa)
            (g$syntax->datum$7754$1c1CVa g$subform$10909$1c1CVa))))))
   (g$identifier?$7752$1c1CVa
     g$identifier?$11191$1c1CVa
     (case-lambda ((g$x$10910$1c1CVa) (g$id?$7364$1c1CVa g$x$10910$1c1CVa))))
   (g$datum->syntax$7753$1c1CVa
     g$datum->syntax$11192$1c1CVa
     (case-lambda
       ((g$id$10911$1c1CVa g$datum$10912$1c1CVa)
        (if (g$id?$7364$1c1CVa g$id$10911$1c1CVa)
          (g$datum->stx$7347$1c1CVa g$id$10911$1c1CVa g$datum$10912$1c1CVa)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10911$1c1CVa)))))
   (g$syntax->datum$7754$1c1CVa
     g$syntax->datum$11193$1c1CVa
     (case-lambda
       ((g$x$10913$1c1CVa) (g$stx->datum$7375$1c1CVa g$x$10913$1c1CVa))))
   (g$compile-r6rs-top-level$7755$1c1CVa
     g$compile-r6rs-top-level$11194$1c1CVa
     (case-lambda
       ((g$x*$10914$1c1CVa)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7702$1c1CVa g$x*$10914$1c1CVa)))
          (case-lambda
            ((g$lib*$10917$1c1CVa g$invoke-code$10918$1c1CVa)
             ((case-lambda
                ((g$invoke-code$10919$1c1CVa g$lib*$10920$1c1CVa)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$7179$1c1CVa
                        g$lib*$10920$1c1CVa)
                      (eval-core
                        (g$expanded->core$6878$1c1CVa
                          g$invoke-code$10919$1c1CVa)))))))
              g$invoke-code$10918$1c1CVa
              g$lib*$10917$1c1CVa)))))))
   (g$pre-compile-r6rs-top-level$7756$1c1CVa
     g$pre-compile-r6rs-top-level$11195$1c1CVa
     (case-lambda
       ((g$x*$10921$1c1CVa)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7702$1c1CVa g$x*$10921$1c1CVa)))
          (case-lambda
            ((g$lib*$10924$1c1CVa g$invoke-code$10925$1c1CVa)
             ((case-lambda
                ((g$invoke-code$10926$1c1CVa g$lib*$10927$1c1CVa)
                 (begin
                   (for-each g$invoke-library$7179$1c1CVa g$lib*$10927$1c1CVa)
                   (compile-core
                     (g$expanded->core$6878$1c1CVa
                       g$invoke-code$10926$1c1CVa)))))
              g$invoke-code$10925$1c1CVa
              g$lib*$10924$1c1CVa)))))))
   (g$interaction-environment$7757$1c1CVa
     g$interaction-environment$11196$1c1CVa
     ((case-lambda
        ((g$the-env$10928$1c1CVa)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10929$1c1CVa)
                (if g$t$10929$1c1CVa
                  g$t$10929$1c1CVa
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10930$1c1CVa g$rib$10931$1c1CVa)
                        (begin
                          ((case-lambda
                             ((g$subst$10932$1c1CVa)
                              (begin
                                (g$set-rib-sym*!$7323$1c1CVa
                                  g$rib$10931$1c1CVa
                                  (map car g$subst$10932$1c1CVa))
                                (g$set-rib-mark**!$7324$1c1CVa
                                  g$rib$10931$1c1CVa
                                  (map (case-lambda
                                         ((g$x$10933$1c1CVa)
                                          g$top-mark*$7306$1c1CVa))
                                       g$subst$10932$1c1CVa))
                                (g$set-rib-label*!$7325$1c1CVa
                                  g$rib$10931$1c1CVa
                                  (map cdr g$subst$10932$1c1CVa)))))
                           (g$library-subst$7136$1c1CVa g$lib$10930$1c1CVa))
                          ((case-lambda
                             ((g$env$10934$1c1CVa)
                              (begin
                                (set! g$the-env$10928$1c1CVa g$env$10934$1c1CVa)
                                g$env$10934$1c1CVa)))
                           (g$make-interaction-env$7719$1c1CVa
                             g$rib$10931$1c1CVa
                             '()
                             '())))))
                     (g$find-library-by-name$7172$1c1CVa '(ironscheme))
                     (g$make-empty-rib$7327$1c1CVa))))))
             g$the-env$10928$1c1CVa)))))
      '#f))
   (g$top-level-context$7758$1c1CVa
     g$top-level-context$11197$1c1CVa
     (g$make-parameter$6631$1c1CVa '#f)))
  (g$current-library-expander$7169$1c1CVa g$library-expander$7735$1c1CVa))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6875$1c1CVa
      (case-lambda
        ((g$x$11250$1c1CVa)
         ((case-lambda
            ((g$t$11251$1c1CVa)
             (if g$t$11251$1c1CVa (cdr g$t$11251$1c1CVa) '#f)))
          (assq
            g$x$11250$1c1CVa
            '((ellipsis-map . g$ellipsis-map$11086$1c1CVa)
              (ironscheme-build . g$ironscheme-build$11243$1c1CVa)
              (syntax-error . g$syntax-error$11187$1c1CVa)
              (syntax-dispatch . g$syntax-dispatch$11081$1c1CVa)
              (compile-system-libraries
                .
                g$compile-system-libraries$11245$1c1CVa)
              (compile->closure . g$compile->closure$11247$1c1CVa)
              (compile . g$compile$11246$1c1CVa)
              (load . g$load$11242$1c1CVa)
              (interaction-environment . g$interaction-environment$11196$1c1CVa)
              (string-ci>? . g$string-ci>?$6033$1c1CVa)
              (string-ci>=? . g$string-ci>=?$6035$1c1CVa)
              (string-ci=? . g$string-ci=?$6031$1c1CVa)
              (string-ci<? . g$string-ci<?$6032$1c1CVa)
              (string-ci<=? . g$string-ci<=?$6034$1c1CVa)
              (char-ci>? . g$char-ci>?$6038$1c1CVa)
              (char-ci>=? . g$char-ci>=?$6040$1c1CVa)
              (char-ci=? . g$char-ci=?$6036$1c1CVa)
              (char-ci<? . g$char-ci<?$6037$1c1CVa)
              (char-ci<=? . g$char-ci<=?$6039$1c1CVa)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11019$1c1CVa)
              (variable-transformer? . g$variable-transformer?$11018$1c1CVa)
              (make-variable-transformer
                .
                g$make-variable-transformer$11017$1c1CVa)
              (identifier? . g$identifier?$11191$1c1CVa)
              (generate-temporaries . g$generate-temporaries$11180$1c1CVa)
              (free-identifier=? . g$free-identifier=?$11181$1c1CVa)
              (syntax->datum . g$syntax->datum$11193$1c1CVa)
              (datum->syntax . g$datum->syntax$11192$1c1CVa)
              (bound-identifier=? . g$bound-identifier=?$11182$1c1CVa)
              (delete-file . g$delete-file$5366$1c1CVa)
              (file-exists? . g$file-exists?$5365$1c1CVa)
              (list-sort . g$list-sort$5891$1c1CVa)
              (make-eqv-hashtable . g$make-eqv-hashtable$5288$1c1CVa)
              (make-eq-hashtable . g$make-eq-hashtable$5287$1c1CVa)
              (hashtable-update! . g$hashtable-update!$5294$1c1CVa)
              (hashtable-size . g$hashtable-size$5289$1c1CVa)
              (hashtable-set! . g$hashtable-set!$5291$1c1CVa)
              (hashtable-ref . g$hashtable-ref$5290$1c1CVa)
              (hashtable-delete! . g$hashtable-delete!$5292$1c1CVa)
              (hashtable-contains? . g$hashtable-contains?$5293$1c1CVa)
              (hashtable-clear! . g$hashtable-clear!$5295$1c1CVa)
              (call-with-output-file . g$call-with-output-file$6380$1c1CVa)
              (call-with-input-file . g$call-with-input-file$6379$1c1CVa)
              (with-output-to-file . g$with-output-to-file$6378$1c1CVa)
              (with-input-from-file . g$with-input-from-file$6377$1c1CVa)
              (port? . g$port?$6344$1c1CVa)
              (open-string-output-port . g$open-string-output-port$6343$1c1CVa)
              (make-i/o-write-error . g$make-i/o-write-error$6269$1c1CVa)
              (make-i/o-read-error . g$make-i/o-read-error$6263$1c1CVa)
              (make-i/o-port-error . g$make-i/o-port-error$6315$1c1CVa)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6275$1c1CVa)
              (make-i/o-filename-error . g$make-i/o-filename-error$6283$1c1CVa)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6291$1c1CVa)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6297$1c1CVa)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6309$1c1CVa)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6303$1c1CVa)
              (make-i/o-error . g$make-i/o-error$6257$1c1CVa)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6329$1c1CVa)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6323$1c1CVa)
              (i/o-write-error? . g$i/o-write-error?$6270$1c1CVa)
              (i/o-read-error? . g$i/o-read-error?$6264$1c1CVa)
              (i/o-port-error? . g$i/o-port-error?$6317$1c1CVa)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6277$1c1CVa)
              (i/o-error-position . g$i/o-error-position$6278$1c1CVa)
              (i/o-filename-error? . g$i/o-filename-error?$6285$1c1CVa)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6292$1c1CVa)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6298$1c1CVa)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6310$1c1CVa)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6304$1c1CVa)
              (i/o-error? . g$i/o-error?$6258$1c1CVa)
              (i/o-error-port . g$i/o-error-port$6318$1c1CVa)
              (i/o-error-filename . g$i/o-error-filename$6286$1c1CVa)
              (i/o-encoding-error? . g$i/o-encoding-error?$6331$1c1CVa)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6332$1c1CVa)
              (i/o-decoding-error? . g$i/o-decoding-error?$6324$1c1CVa)
              (scheme-report-environment
                .
                g$scheme-report-environment$11171$1c1CVa)
              (quotient . g$quotient$5858$1c1CVa)
              (null-environment . g$null-environment$11170$1c1CVa)
              (remainder . g$remainder$5859$1c1CVa)
              (modulo . g$modulo$5860$1c1CVa)
              (force . g$force$5862$1c1CVa)
              (command-line . g$command-line$11239$1c1CVa)
              (remove . g$remove$5499$1c1CVa)
              (remv . g$remv$5500$1c1CVa)
              (remp . g$remp$5485$1c1CVa)
              (remq . g$remq$5501$1c1CVa)
              (partition . g$partition$5484$1c1CVa)
              (memp . g$memp$5491$1c1CVa)
              (member . g$member$5490$1c1CVa)
              (exists . g$exists$5495$1c1CVa)
              (for-all . g$for-all$5494$1c1CVa)
              (fold-right . g$fold-right$5498$1c1CVa)
              (fold-left . g$fold-left$5497$1c1CVa)
              (find . g$find$5483$1c1CVa)
              (filter . g$filter$5486$1c1CVa)
              (cons* . g$cons*$5496$1c1CVa)
              (assv . g$assv$5487$1c1CVa)
              (assp . g$assp$5489$1c1CVa)
              (assoc . g$assoc$5488$1c1CVa)
              (eval . g$eval$11173$1c1CVa)
              (environment . g$environment$11169$1c1CVa)
              (make-enumeration . g$make-enumeration$6508$1c1CVa)
              (enum-set=? . g$enum-set=?$6515$1c1CVa)
              (enum-set-universe . g$enum-set-universe$6509$1c1CVa)
              (enum-set-union . g$enum-set-union$6516$1c1CVa)
              (enum-set-subset? . g$enum-set-subset?$6514$1c1CVa)
              (enum-set-projection . g$enum-set-projection$6520$1c1CVa)
              (enum-set-member? . g$enum-set-member?$6513$1c1CVa)
              (enum-set-intersection . g$enum-set-intersection$6517$1c1CVa)
              (enum-set-indexer . g$enum-set-indexer$6510$1c1CVa)
              (enum-set-difference . g$enum-set-difference$6518$1c1CVa)
              (enum-set-constructor . g$enum-set-constructor$6511$1c1CVa)
              (enum-set-complement . g$enum-set-complement$6519$1c1CVa)
              (enum-set->list . g$enum-set->list$6512$1c1CVa)
              (who-condition? . g$who-condition?$5796$1c1CVa)
              (warning? . g$warning?$5757$1c1CVa)
              (violation? . g$violation?$5775$1c1CVa)
              (undefined-violation? . g$undefined-violation?$5831$1c1CVa)
              (syntax-violation? . g$syntax-violation?$5823$1c1CVa)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$5825$1c1CVa)
              (syntax-violation-form . g$syntax-violation-form$5824$1c1CVa)
              (syntax-violation . g$syntax-violation$11190$1c1CVa)
              (serious-condition? . g$serious-condition?$5763$1c1CVa)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5803$1c1CVa)
              (message-condition? . g$message-condition?$5750$1c1CVa)
              (make-who-condition . g$make-who-condition$5794$1c1CVa)
              (make-warning . g$make-warning$5756$1c1CVa)
              (make-violation . g$make-violation$5774$1c1CVa)
              (make-undefined-violation
                .
                g$make-undefined-violation$5830$1c1CVa)
              (make-syntax-violation . g$make-syntax-violation$5820$1c1CVa)
              (make-serious-condition . g$make-serious-condition$5762$1c1CVa)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5802$1c1CVa)
              (make-message-condition . g$make-message-condition$5748$1c1CVa)
              (make-lexical-violation . g$make-lexical-violation$5814$1c1CVa)
              (make-irritants-condition
                .
                g$make-irritants-condition$5786$1c1CVa)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5808$1c1CVa)
              (make-error . g$make-error$5768$1c1CVa)
              (make-assertion-violation
                .
                g$make-assertion-violation$5780$1c1CVa)
              (lexical-violation? . g$lexical-violation?$5815$1c1CVa)
              (irritants-condition? . g$irritants-condition?$5788$1c1CVa)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5809$1c1CVa)
              (error? . g$error?$5769$1c1CVa)
              (condition-who . g$condition-who$5797$1c1CVa)
              (condition-message . g$condition-message$5751$1c1CVa)
              (condition-irritants . g$condition-irritants$5789$1c1CVa)
              (assertion-violation? . g$assertion-violation?$5781$1c1CVa)
              (native-endianness . g$native-endianness$5613$1c1CVa)
              (bytevector-u64-set! . g$bytevector-u64-set!$5634$1c1CVa)
              (bytevector-u64-ref . g$bytevector-u64-ref$5630$1c1CVa)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5636$1c1CVa)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5632$1c1CVa)
              (bytevector-u32-set! . g$bytevector-u32-set!$5626$1c1CVa)
              (bytevector-u32-ref . g$bytevector-u32-ref$5622$1c1CVa)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5628$1c1CVa)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5624$1c1CVa)
              (bytevector-u16-set! . g$bytevector-u16-set!$5618$1c1CVa)
              (bytevector-u16-ref . g$bytevector-u16-ref$5614$1c1CVa)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5620$1c1CVa)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5616$1c1CVa)
              (bytevector-s64-set! . g$bytevector-s64-set!$5635$1c1CVa)
              (bytevector-s64-ref . g$bytevector-s64-ref$5631$1c1CVa)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5637$1c1CVa)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5633$1c1CVa)
              (bytevector-s32-set! . g$bytevector-s32-set!$5627$1c1CVa)
              (bytevector-s32-ref . g$bytevector-s32-ref$5623$1c1CVa)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5629$1c1CVa)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5625$1c1CVa)
              (bytevector-s16-set! . g$bytevector-s16-set!$5619$1c1CVa)
              (bytevector-s16-ref . g$bytevector-s16-ref$5615$1c1CVa)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5621$1c1CVa)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5617$1c1CVa)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5640$1c1CVa)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5638$1c1CVa)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5641$1c1CVa)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5639$1c1CVa)
              (no-nans-violation? . g$no-nans-violation?$6172$1c1CVa)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$6166$1c1CVa)
              (make-no-nans-violation . g$make-no-nans-violation$6171$1c1CVa)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6165$1c1CVa)
              (fxrotate-bit-field . g$fxrotate-bit-field$6148$1c1CVa)
              (fxif . g$fxif$6142$1c1CVa)
              (fxcopy-bit-field . g$fxcopy-bit-field$6145$1c1CVa)
              (fxcopy-bit . g$fxcopy-bit$6143$1c1CVa)
              (fxbit-field . g$fxbit-field$6144$1c1CVa)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$6147$1c1CVa)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6146$1c1CVa)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$6094$1c1CVa)
              (bitwise-if . g$bitwise-if$6088$1c1CVa)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6091$1c1CVa)
              (bitwise-copy-bit . g$bitwise-copy-bit$6089$1c1CVa)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6093$1c1CVa)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6092$1c1CVa)
              (symbol=? . g$symbol=?$5045$1c1CVa)
              (string>? . g$string>?$5042$1c1CVa)
              (string>=? . g$string>=?$5044$1c1CVa)
              (string=? . g$string=?$5040$1c1CVa)
              (string<? . g$string<?$5041$1c1CVa)
              (string<=? . g$string<=?$5043$1c1CVa)
              (rationalize . g$rationalize$5052$1c1CVa)
              (char>? . g$char>?$5049$1c1CVa)
              (char>=? . g$char>=?$5051$1c1CVa)
              (char=? . g$char=?$5047$1c1CVa)
              (char<? . g$char<?$5048$1c1CVa)
              (char<=? . g$char<=?$5050$1c1CVa)
              (cddddr . g$cddddr$5039$1c1CVa)
              (cdddar . g$cdddar$5038$1c1CVa)
              (cddadr . g$cddadr$5037$1c1CVa)
              (cddaar . g$cddaar$5036$1c1CVa)
              (cdaddr . g$cdaddr$5035$1c1CVa)
              (cdadar . g$cdadar$5034$1c1CVa)
              (cdaadr . g$cdaadr$5033$1c1CVa)
              (cdaaar . g$cdaaar$5032$1c1CVa)
              (cadddr . g$cadddr$5031$1c1CVa)
              (caddar . g$caddar$5030$1c1CVa)
              (cadadr . g$cadadr$5029$1c1CVa)
              (cadaar . g$cadaar$5028$1c1CVa)
              (caaddr . g$caaddr$5027$1c1CVa)
              (caadar . g$caadar$5026$1c1CVa)
              (caaadr . g$caaadr$5025$1c1CVa)
              (caaaar . g$caaaar$5024$1c1CVa)
              (cdddr . g$cdddr$5023$1c1CVa)
              (cddar . g$cddar$5022$1c1CVa)
              (cdadr . g$cdadr$5021$1c1CVa)
              (cdaar . g$cdaar$5020$1c1CVa)
              (caddr . g$caddr$5019$1c1CVa)
              (cadar . g$cadar$5018$1c1CVa)
              (caadr . g$caadr$5017$1c1CVa)
              (caaar . g$caaar$5016$1c1CVa)
              (cddr . g$cddr$5015$1c1CVa)
              (cdar . g$cdar$5014$1c1CVa)
              (cadr . g$cadr$5013$1c1CVa)
              (caar . g$caar$5012$1c1CVa)
              (boolean=? . g$boolean=?$5046$1c1CVa)
              (enum-set? . g$enum?$6490$1c1CVa)
              (make-promise . g$make-promise$5861$1c1CVa)
              (load/args . g$load/args$11241$1c1CVa)
              (printf . g$printf$6544$1c1CVa)
              (fprintf . g$fprintf$6545$1c1CVa)
              (format . g$format$6546$1c1CVa)
              (trace-printer . g$trace-printer$11238$1c1CVa)
              (make-traced-macro . g$make-traced-macro$6550$1c1CVa)
              (assertion-error . g$assertion-error$11186$1c1CVa)
              (make-parameter . g$make-parameter$6631$1c1CVa)
              (environment-symbols . g$environment-symbols$11167$1c1CVa)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11166$1c1CVa)
              (library-path . g$library-path$7161$1c1CVa)
              (library-extensions . g$library-extensions$7162$1c1CVa)
              (installed-libraries . g$installed-libraries$7182$1c1CVa)
              (expand . g$expand$11172$1c1CVa)))))))
    (g$install-library$7177$1c1CVa
      'g$12534$1c1CVa
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12471$1c1CVa)
        (cosh . g$12470$1c1CVa)
        (sinh . g$12469$1c1CVa)
        (make-guid . g$12468$1c1CVa)
        (unspecified? . g$12467$1c1CVa)
        (make-trace . g$12466$1c1CVa)
        (make-list . g$12465$1c1CVa)
        (last-pair . g$12464$1c1CVa)
        (load-r5rs . g$12463$1c1CVa)
        (license . g$12462$1c1CVa)
        (stacktrace . g$12461$1c1CVa)
        (ironscheme-build . g$11883$1c1CVa)
        (set-symbol-value! . g$12447$1c1CVa)
        (symbol-value . g$12446$1c1CVa)
        (ungensym . g$12445$1c1CVa)
        (gensym . g$12444$1c1CVa)
        (void . g$12443$1c1CVa)
        (compile-system-libraries . g$11885$1c1CVa)
        (compile->closure . g$11887$1c1CVa)
        (compile . g$11886$1c1CVa)
        (load . g$11882$1c1CVa)
        (interaction-environment . g$8948$1c1CVa)
        (string-upcase . g$12439$1c1CVa)
        (string-titlecase . g$12438$1c1CVa)
        (string-normalize-nfkd . g$12437$1c1CVa)
        (string-normalize-nfkc . g$12436$1c1CVa)
        (string-normalize-nfd . g$12435$1c1CVa)
        (string-normalize-nfc . g$12434$1c1CVa)
        (string-foldcase . g$12433$1c1CVa)
        (string-downcase . g$12432$1c1CVa)
        (string-ci>? . g$7018$1c1CVa)
        (string-ci>=? . g$7020$1c1CVa)
        (string-ci=? . g$7016$1c1CVa)
        (string-ci<? . g$7017$1c1CVa)
        (string-ci<=? . g$7019$1c1CVa)
        (char-whitespace? . g$12431$1c1CVa)
        (char-upper-case? . g$12430$1c1CVa)
        (char-title-case? . g$12429$1c1CVa)
        (char-numeric? . g$12428$1c1CVa)
        (char-lower-case? . g$12427$1c1CVa)
        (char-general-category . g$12426$1c1CVa)
        (char-upcase . g$12425$1c1CVa)
        (char-titlecase . g$12424$1c1CVa)
        (char-foldcase . g$12423$1c1CVa)
        (char-downcase . g$12422$1c1CVa)
        (char-ci>? . g$7069$1c1CVa)
        (char-ci>=? . g$7071$1c1CVa)
        (char-ci=? . g$7067$1c1CVa)
        (char-ci<? . g$7068$1c1CVa)
        (char-ci<=? . g$7070$1c1CVa)
        (char-alphabetic? . g$12421$1c1CVa)
        (variable-transformer-procedure . g$8549$1c1CVa)
        (variable-transformer? . g$8548$1c1CVa)
        (make-variable-transformer . g$8547$1c1CVa)
        (identifier? . g$8943$1c1CVa)
        (generate-temporaries . g$8932$1c1CVa)
        (free-identifier=? . g$8933$1c1CVa)
        (syntax->datum . g$8945$1c1CVa)
        (datum->syntax . g$8944$1c1CVa)
        (bound-identifier=? . g$8934$1c1CVa)
        (record-type-descriptor? . g$12420$1c1CVa)
        (record-predicate . g$12419$1c1CVa)
        (record-mutator . g$12418$1c1CVa)
        (record-constructor . g$12417$1c1CVa)
        (record-accessor . g$12416$1c1CVa)
        (make-record-type-descriptor . g$12415$1c1CVa)
        (make-record-constructor-descriptor . g$12414$1c1CVa)
        (record? . g$12413$1c1CVa)
        (record-type-uid . g$12412$1c1CVa)
        (record-type-sealed? . g$12411$1c1CVa)
        (record-type-parent . g$12410$1c1CVa)
        (record-type-opaque? . g$12409$1c1CVa)
        (record-type-name . g$12408$1c1CVa)
        (record-type-generative? . g$12407$1c1CVa)
        (record-type-field-names . g$12406$1c1CVa)
        (record-rtd . g$12405$1c1CVa)
        (record-field-mutable? . g$12404$1c1CVa)
        (delete-file . g$6379$1c1CVa)
        (file-exists? . g$6378$1c1CVa)
        (vector-sort! . g$12403$1c1CVa)
        (vector-sort . g$12402$1c1CVa)
        (list-sort . g$6892$1c1CVa)
        (symbol-hash . g$12401$1c1CVa)
        (string-ci-hash . g$12400$1c1CVa)
        (string-hash . g$12399$1c1CVa)
        (equal-hash . g$12398$1c1CVa)
        (hashtable-equivalence-function . g$12397$1c1CVa)
        (make-hashtable . g$12396$1c1CVa)
        (hashtable-hash-function . g$12395$1c1CVa)
        (make-eqv-hashtable . g$6346$1c1CVa)
        (make-eq-hashtable . g$6345$1c1CVa)
        (hashtable? . g$12394$1c1CVa)
        (hashtable-update! . g$6352$1c1CVa)
        (hashtable-size . g$6347$1c1CVa)
        (hashtable-set! . g$6349$1c1CVa)
        (hashtable-ref . g$6348$1c1CVa)
        (hashtable-mutable? . g$12393$1c1CVa)
        (hashtable-keys . g$12392$1c1CVa)
        (hashtable-entries . g$12391$1c1CVa)
        (hashtable-delete! . g$6350$1c1CVa)
        (hashtable-copy . g$12390$1c1CVa)
        (hashtable-contains? . g$6351$1c1CVa)
        (hashtable-clear! . g$6353$1c1CVa)
        (call-with-output-file . g$7488$1c1CVa)
        (call-with-input-file . g$7487$1c1CVa)
        (write-char . g$12389$1c1CVa)
        (write . g$12388$1c1CVa)
        (with-output-to-file . g$7486$1c1CVa)
        (with-input-from-file . g$7485$1c1CVa)
        (read-char . g$12387$1c1CVa)
        (read . g$12386$1c1CVa)
        (peek-char . g$12385$1c1CVa)
        (open-output-file . g$12384$1c1CVa)
        (open-input-file . g$12383$1c1CVa)
        (newline . g$12382$1c1CVa)
        (display . g$12381$1c1CVa)
        (close-output-port . g$12380$1c1CVa)
        (close-input-port . g$12379$1c1CVa)
        (eof-object? . g$12378$1c1CVa)
        (eof-object . g$12377$1c1CVa)
        (current-error-port . g$12376$1c1CVa)
        (current-output-port . g$12375$1c1CVa)
        (current-input-port . g$12374$1c1CVa)
        (output-port? . g$12373$1c1CVa)
        (input-port? . g$12372$1c1CVa)
        (utf-8-codec . g$12371$1c1CVa)
        (utf-16-codec . g$12370$1c1CVa)
        (transcoder-error-handling-mode . g$12369$1c1CVa)
        (transcoder-eol-style . g$12368$1c1CVa)
        (transcoder-codec . g$12367$1c1CVa)
        (transcoded-port . g$12366$1c1CVa)
        (textual-port? . g$12365$1c1CVa)
        (string->bytevector . g$12364$1c1CVa)
        (standard-output-port . g$12363$1c1CVa)
        (standard-input-port . g$12362$1c1CVa)
        (standard-error-port . g$12361$1c1CVa)
        (set-port-position! . g$12360$1c1CVa)
        (put-u8 . g$12359$1c1CVa)
        (put-string . g$12358$1c1CVa)
        (put-datum . g$12357$1c1CVa)
        (put-char . g$12356$1c1CVa)
        (put-bytevector . g$12355$1c1CVa)
        (port? . g$7464$1c1CVa)
        (port-transcoder . g$12354$1c1CVa)
        (port-position . g$12353$1c1CVa)
        (port-has-set-port-position!? . g$12352$1c1CVa)
        (port-has-port-position? . g$12351$1c1CVa)
        (port-eof? . g$12350$1c1CVa)
        (output-port-buffer-mode . g$12349$1c1CVa)
        (open-string-output-port . g$7463$1c1CVa)
        (open-string-input-port . g$12348$1c1CVa)
        (open-file-output-port . g$12347$1c1CVa)
        (open-file-input/output-port . g$12346$1c1CVa)
        (open-file-input-port . g$12345$1c1CVa)
        (open-bytevector-output-port . g$12344$1c1CVa)
        (open-bytevector-input-port . g$12343$1c1CVa)
        (native-transcoder . g$12342$1c1CVa)
        (native-eol-style . g$12341$1c1CVa)
        (make-transcoder . g$12340$1c1CVa)
        (latin-1-codec . g$12339$1c1CVa)
        (make-i/o-write-error . g$7320$1c1CVa)
        (make-i/o-read-error . g$7306$1c1CVa)
        (make-i/o-port-error . g$7425$1c1CVa)
        (make-i/o-invalid-position-error . g$7335$1c1CVa)
        (make-i/o-filename-error . g$7352$1c1CVa)
        (make-i/o-file-protection-error . g$7368$1c1CVa)
        (make-i/o-file-is-read-only-error . g$7382$1c1CVa)
        (make-i/o-file-does-not-exist-error . g$7410$1c1CVa)
        (make-i/o-file-already-exists-error . g$7396$1c1CVa)
        (make-i/o-error . g$7292$1c1CVa)
        (make-i/o-encoding-error . g$7456$1c1CVa)
        (make-i/o-decoding-error . g$7441$1c1CVa)
        (make-custom-textual-output-port . g$12338$1c1CVa)
        (make-custom-textual-input/output-port . g$12337$1c1CVa)
        (make-custom-textual-input-port . g$12336$1c1CVa)
        (make-custom-binary-output-port . g$12335$1c1CVa)
        (make-custom-binary-input/output-port . g$12334$1c1CVa)
        (make-custom-binary-input-port . g$12333$1c1CVa)
        (make-bytevector . g$12332$1c1CVa)
        (lookahead-u8 . g$12331$1c1CVa)
        (lookahead-char . g$12330$1c1CVa)
        (i/o-write-error? . g$7321$1c1CVa)
        (i/o-read-error? . g$7307$1c1CVa)
        (i/o-port-error? . g$7427$1c1CVa)
        (i/o-invalid-position-error? . g$7337$1c1CVa)
        (i/o-error-position . g$7338$1c1CVa)
        (i/o-filename-error? . g$7354$1c1CVa)
        (i/o-file-protection-error? . g$7369$1c1CVa)
        (i/o-file-is-read-only-error? . g$7383$1c1CVa)
        (i/o-file-does-not-exist-error? . g$7411$1c1CVa)
        (i/o-file-already-exists-error? . g$7397$1c1CVa)
        (i/o-error? . g$7293$1c1CVa)
        (i/o-error-port . g$7428$1c1CVa)
        (i/o-error-filename . g$7355$1c1CVa)
        (i/o-encoding-error? . g$7458$1c1CVa)
        (i/o-encoding-error-char . g$7459$1c1CVa)
        (i/o-decoding-error? . g$7442$1c1CVa)
        (get-u8 . g$12329$1c1CVa)
        (get-string-n! . g$12328$1c1CVa)
        (get-string-n . g$12327$1c1CVa)
        (get-string-all . g$12326$1c1CVa)
        (get-line . g$12325$1c1CVa)
        (get-datum . g$12324$1c1CVa)
        (get-char . g$12323$1c1CVa)
        (get-bytevector-some . g$12322$1c1CVa)
        (get-bytevector-n! . g$12321$1c1CVa)
        (get-bytevector-n . g$12320$1c1CVa)
        (get-bytevector-all . g$12319$1c1CVa)
        (flush-output-port . g$12318$1c1CVa)
        (close-port . g$12317$1c1CVa)
        (call-with-string-output-port . g$12316$1c1CVa)
        (call-with-port . g$12315$1c1CVa)
        (call-with-bytevector-output-port . g$12314$1c1CVa)
        (bytevector->string . g$12313$1c1CVa)
        (buffer-mode? . g$12312$1c1CVa)
        (binary-port? . g$12311$1c1CVa)
        (scheme-report-environment . g$8923$1c1CVa)
        (quotient . g$6872$1c1CVa)
        (null-environment . g$8922$1c1CVa)
        (remainder . g$6873$1c1CVa)
        (modulo . g$6874$1c1CVa)
        (inexact->exact . g$12310$1c1CVa)
        (force . g$6876$1c1CVa)
        (exact->inexact . g$12309$1c1CVa)
        (exit . g$12308$1c1CVa)
        (command-line . g$11879$1c1CVa)
        (string-fill! . g$12307$1c1CVa)
        (string-set! . g$12306$1c1CVa)
        (set-cdr! . g$12305$1c1CVa)
        (set-car! . g$12304$1c1CVa)
        (remove . g$6459$1c1CVa)
        (remv . g$6460$1c1CVa)
        (remp . g$6445$1c1CVa)
        (remq . g$6461$1c1CVa)
        (partition . g$6444$1c1CVa)
        (memv . g$12303$1c1CVa)
        (memq . g$12302$1c1CVa)
        (memp . g$6451$1c1CVa)
        (member . g$6450$1c1CVa)
        (exists . g$6455$1c1CVa)
        (for-all . g$6454$1c1CVa)
        (fold-right . g$6458$1c1CVa)
        (fold-left . g$6457$1c1CVa)
        (find . g$6443$1c1CVa)
        (filter . g$6446$1c1CVa)
        (cons* . g$6456$1c1CVa)
        (assv . g$6447$1c1CVa)
        (assq . g$12301$1c1CVa)
        (assp . g$6449$1c1CVa)
        (assoc . g$6448$1c1CVa)
        (with-exception-handler . g$12300$1c1CVa)
        (raise-continuable . g$12299$1c1CVa)
        (raise . g$12298$1c1CVa)
        (eval . g$8925$1c1CVa)
        (environment . g$8921$1c1CVa)
        (make-enumeration . g$7545$1c1CVa)
        (enum-set=? . g$7552$1c1CVa)
        (enum-set-universe . g$7546$1c1CVa)
        (enum-set-union . g$7553$1c1CVa)
        (enum-set-subset? . g$7551$1c1CVa)
        (enum-set-projection . g$7557$1c1CVa)
        (enum-set-member? . g$7550$1c1CVa)
        (enum-set-intersection . g$7554$1c1CVa)
        (enum-set-indexer . g$7547$1c1CVa)
        (enum-set-difference . g$7555$1c1CVa)
        (enum-set-constructor . g$7548$1c1CVa)
        (enum-set-complement . g$7556$1c1CVa)
        (enum-set->list . g$7549$1c1CVa)
        (who-condition? . g$6783$1c1CVa)
        (warning? . g$6694$1c1CVa)
        (violation? . g$6736$1c1CVa)
        (undefined-violation? . g$6860$1c1CVa)
        (syntax-violation? . g$6844$1c1CVa)
        (syntax-violation-subform . g$6846$1c1CVa)
        (syntax-violation-form . g$6845$1c1CVa)
        (syntax-violation . g$8942$1c1CVa)
        (simple-conditions . g$12297$1c1CVa)
        (serious-condition? . g$6708$1c1CVa)
        (non-continuable-violation? . g$6798$1c1CVa)
        (message-condition? . g$6679$1c1CVa)
        (make-who-condition . g$6781$1c1CVa)
        (make-warning . g$6693$1c1CVa)
        (make-violation . g$6735$1c1CVa)
        (make-undefined-violation . g$6859$1c1CVa)
        (make-syntax-violation . g$6841$1c1CVa)
        (make-serious-condition . g$6707$1c1CVa)
        (make-non-continuable-violation . g$6797$1c1CVa)
        (make-message-condition . g$6677$1c1CVa)
        (make-lexical-violation . g$6825$1c1CVa)
        (make-irritants-condition . g$6764$1c1CVa)
        (make-implementation-restriction-violation . g$6811$1c1CVa)
        (make-error . g$6721$1c1CVa)
        (make-assertion-violation . g$6749$1c1CVa)
        (lexical-violation? . g$6826$1c1CVa)
        (irritants-condition? . g$6766$1c1CVa)
        (implementation-restriction-violation? . g$6812$1c1CVa)
        (error? . g$6722$1c1CVa)
        (condition-who . g$6784$1c1CVa)
        (condition-predicate . g$12296$1c1CVa)
        (condition-message . g$6680$1c1CVa)
        (condition-irritants . g$6767$1c1CVa)
        (condition-accessor . g$12295$1c1CVa)
        (condition . g$12294$1c1CVa)
        (assertion-violation? . g$6750$1c1CVa)
        (condition? . g$12293$1c1CVa)
        (utf32->string . g$12292$1c1CVa)
        (utf16->string . g$12291$1c1CVa)
        (utf8->string . g$12290$1c1CVa)
        (uint-list->bytevector . g$12289$1c1CVa)
        (u8-list->bytevector . g$12288$1c1CVa)
        (string->utf8 . g$12287$1c1CVa)
        (string->utf32 . g$12286$1c1CVa)
        (string->utf16 . g$12285$1c1CVa)
        (sint-list->bytevector . g$12284$1c1CVa)
        (native-endianness . g$6535$1c1CVa)
        (bytevector? . g$12283$1c1CVa)
        (bytevector=? . g$12282$1c1CVa)
        (bytevector-uint-set! . g$12281$1c1CVa)
        (bytevector-uint-ref . g$12280$1c1CVa)
        (bytevector-u8-set! . g$12279$1c1CVa)
        (bytevector-u8-ref . g$12278$1c1CVa)
        (bytevector-u64-set! . g$6556$1c1CVa)
        (bytevector-u64-ref . g$6552$1c1CVa)
        (bytevector-u64-native-set! . g$6558$1c1CVa)
        (bytevector-u64-native-ref . g$6554$1c1CVa)
        (bytevector-u32-set! . g$6548$1c1CVa)
        (bytevector-u32-ref . g$6544$1c1CVa)
        (bytevector-u32-native-set! . g$6550$1c1CVa)
        (bytevector-u32-native-ref . g$6546$1c1CVa)
        (bytevector-u16-set! . g$6540$1c1CVa)
        (bytevector-u16-ref . g$6536$1c1CVa)
        (bytevector-u16-native-set! . g$6542$1c1CVa)
        (bytevector-u16-native-ref . g$6538$1c1CVa)
        (bytevector-sint-set! . g$12277$1c1CVa)
        (bytevector-sint-ref . g$12276$1c1CVa)
        (bytevector-s8-set! . g$12275$1c1CVa)
        (bytevector-s8-ref . g$12274$1c1CVa)
        (bytevector-s64-set! . g$6557$1c1CVa)
        (bytevector-s64-ref . g$6553$1c1CVa)
        (bytevector-s64-native-set! . g$6559$1c1CVa)
        (bytevector-s64-native-ref . g$6555$1c1CVa)
        (bytevector-s32-set! . g$6549$1c1CVa)
        (bytevector-s32-ref . g$6545$1c1CVa)
        (bytevector-s32-native-set! . g$6551$1c1CVa)
        (bytevector-s32-native-ref . g$6547$1c1CVa)
        (bytevector-s16-set! . g$6541$1c1CVa)
        (bytevector-s16-ref . g$6537$1c1CVa)
        (bytevector-s16-native-set! . g$6543$1c1CVa)
        (bytevector-s16-native-ref . g$6539$1c1CVa)
        (bytevector-length . g$12273$1c1CVa)
        (bytevector-ieee-single-set! . g$12272$1c1CVa)
        (bytevector-ieee-single-ref . g$12271$1c1CVa)
        (bytevector-ieee-single-native-set! . g$6562$1c1CVa)
        (bytevector-ieee-single-native-ref . g$6560$1c1CVa)
        (bytevector-ieee-double-set! . g$12270$1c1CVa)
        (bytevector-ieee-double-ref . g$12269$1c1CVa)
        (bytevector-ieee-double-native-set! . g$6563$1c1CVa)
        (bytevector-ieee-double-native-ref . g$6561$1c1CVa)
        (bytevector-fill! . g$12268$1c1CVa)
        (bytevector-copy! . g$12267$1c1CVa)
        (bytevector-copy . g$12266$1c1CVa)
        (bytevector->uint-list . g$12265$1c1CVa)
        (bytevector->u8-list . g$12264$1c1CVa)
        (bytevector->sint-list . g$12263$1c1CVa)
        (no-nans-violation? . g$7278$1c1CVa)
        (no-infinities-violation? . g$7264$1c1CVa)
        (make-no-nans-violation . g$7277$1c1CVa)
        (make-no-infinities-violation . g$7263$1c1CVa)
        (real->flonum . g$12262$1c1CVa)
        (flzero? . g$12261$1c1CVa)
        (fltruncate . g$12260$1c1CVa)
        (fltan . g$12259$1c1CVa)
        (flsqrt . g$12258$1c1CVa)
        (flsin . g$12257$1c1CVa)
        (flround . g$12256$1c1CVa)
        (flpositive? . g$12255$1c1CVa)
        (flonum? . g$12254$1c1CVa)
        (flodd? . g$12253$1c1CVa)
        (flnumerator . g$12252$1c1CVa)
        (flnegative? . g$12251$1c1CVa)
        (flnan? . g$12250$1c1CVa)
        (flmod0 . g$12249$1c1CVa)
        (flmod . g$12248$1c1CVa)
        (flmin . g$12247$1c1CVa)
        (flmax . g$12246$1c1CVa)
        (fllog . g$12245$1c1CVa)
        (flinteger? . g$12244$1c1CVa)
        (flinfinite? . g$12243$1c1CVa)
        (flfloor . g$12242$1c1CVa)
        (flfinite? . g$12241$1c1CVa)
        (flexpt . g$12240$1c1CVa)
        (flexp . g$12239$1c1CVa)
        (fleven? . g$12238$1c1CVa)
        (fldiv0-and-mod0 . g$12237$1c1CVa)
        (fldiv0 . g$12236$1c1CVa)
        (fldiv-and-mod . g$12235$1c1CVa)
        (fldiv . g$12234$1c1CVa)
        (fldenominator . g$12233$1c1CVa)
        (flcos . g$12232$1c1CVa)
        (flceiling . g$12231$1c1CVa)
        (flatan . g$12230$1c1CVa)
        (flasin . g$12229$1c1CVa)
        (flacos . g$12228$1c1CVa)
        (flabs . g$12227$1c1CVa)
        (fl>? . g$12226$1c1CVa)
        (fl>=? . g$12225$1c1CVa)
        (fl=? . g$12224$1c1CVa)
        (fl<? . g$12223$1c1CVa)
        (fl<=? . g$12222$1c1CVa)
        (fl/ . g$12221$1c1CVa)
        (fl- . g$12220$1c1CVa)
        (fl+ . g$12219$1c1CVa)
        (fl* . g$12218$1c1CVa)
        (fixnum->flonum . g$12217$1c1CVa)
        (fxzero? . g$12216$1c1CVa)
        (fxxor . g$12215$1c1CVa)
        (fxrotate-bit-field . g$7209$1c1CVa)
        (fxreverse-bit-field . g$12214$1c1CVa)
        (fxpositive? . g$12213$1c1CVa)
        (fxodd? . g$12212$1c1CVa)
        (fxnot . g$12211$1c1CVa)
        (fxnegative? . g$12210$1c1CVa)
        (fxmod0 . g$12209$1c1CVa)
        (fxmod . g$12208$1c1CVa)
        (fxmin . g$12207$1c1CVa)
        (fxmax . g$12206$1c1CVa)
        (fxlength . g$12205$1c1CVa)
        (fxior . g$12204$1c1CVa)
        (fxif . g$7203$1c1CVa)
        (fxfirst-bit-set . g$12203$1c1CVa)
        (fxeven? . g$12202$1c1CVa)
        (fxdiv0-and-mod0 . g$12201$1c1CVa)
        (fxdiv0 . g$12200$1c1CVa)
        (fxdiv-and-mod . g$12199$1c1CVa)
        (fxdiv . g$12198$1c1CVa)
        (fxcopy-bit-field . g$7206$1c1CVa)
        (fxcopy-bit . g$7204$1c1CVa)
        (fxbit-set? . g$12197$1c1CVa)
        (fxbit-field . g$7205$1c1CVa)
        (fxbit-count . g$12196$1c1CVa)
        (fxarithmetic-shift-right . g$7208$1c1CVa)
        (fxarithmetic-shift-left . g$7207$1c1CVa)
        (fxarithmetic-shift . g$12195$1c1CVa)
        (fxand . g$12194$1c1CVa)
        (fx>? . g$12193$1c1CVa)
        (fx>=? . g$12192$1c1CVa)
        (fx=? . g$12191$1c1CVa)
        (fx<? . g$12190$1c1CVa)
        (fx<=? . g$12189$1c1CVa)
        (fx-/carry . g$12188$1c1CVa)
        (fx- . g$12187$1c1CVa)
        (fx+/carry . g$12186$1c1CVa)
        (fx+ . g$12185$1c1CVa)
        (fx*/carry . g$12184$1c1CVa)
        (fx* . g$12183$1c1CVa)
        (greatest-fixnum . g$12182$1c1CVa)
        (least-fixnum . g$12181$1c1CVa)
        (fixnum-width . g$12180$1c1CVa)
        (fixnum? . g$12179$1c1CVa)
        (bitwise-rotate-bit-field . g$7161$1c1CVa)
        (bitwise-reverse-bit-field . g$12178$1c1CVa)
        (bitwise-length . g$12177$1c1CVa)
        (bitwise-if . g$7155$1c1CVa)
        (bitwise-first-bit-set . g$12176$1c1CVa)
        (bitwise-copy-bit-field . g$7158$1c1CVa)
        (bitwise-copy-bit . g$7156$1c1CVa)
        (bitwise-bit-set? . g$12175$1c1CVa)
        (bitwise-bit-field . g$12174$1c1CVa)
        (bitwise-bit-count . g$12173$1c1CVa)
        (bitwise-xor . g$12172$1c1CVa)
        (bitwise-ior . g$12171$1c1CVa)
        (bitwise-and . g$12170$1c1CVa)
        (bitwise-not . g$12169$1c1CVa)
        (bitwise-arithmetic-shift-right . g$7160$1c1CVa)
        (bitwise-arithmetic-shift-left . g$7159$1c1CVa)
        (bitwise-arithmetic-shift . g$12168$1c1CVa)
        (zero? . g$12167$1c1CVa)
        (vector? . g$12166$1c1CVa)
        (vector-set! . g$12165$1c1CVa)
        (vector-ref . g$12164$1c1CVa)
        (vector-map . g$12163$1c1CVa)
        (vector-length . g$12162$1c1CVa)
        (vector-for-each . g$12161$1c1CVa)
        (vector-fill! . g$12160$1c1CVa)
        (vector->list . g$12159$1c1CVa)
        (vector . g$12158$1c1CVa)
        (values . g$12157$1c1CVa)
        (truncate . g$12156$1c1CVa)
        (tan . g$12155$1c1CVa)
        (symbol? . g$12154$1c1CVa)
        (symbol=? . g$5844$1c1CVa)
        (symbol->string . g$12153$1c1CVa)
        (substring . g$12152$1c1CVa)
        (string? . g$12151$1c1CVa)
        (string>? . g$5841$1c1CVa)
        (string>=? . g$5843$1c1CVa)
        (string=? . g$5839$1c1CVa)
        (string<? . g$5840$1c1CVa)
        (string<=? . g$5842$1c1CVa)
        (string-ref . g$12150$1c1CVa)
        (string-length . g$12149$1c1CVa)
        (string-for-each . g$12148$1c1CVa)
        (string-copy . g$12147$1c1CVa)
        (string-append . g$12146$1c1CVa)
        (string->symbol . g$12145$1c1CVa)
        (string->number . g$12144$1c1CVa)
        (string->list . g$12143$1c1CVa)
        (string . g$12142$1c1CVa)
        (sqrt . g$12141$1c1CVa)
        (sin . g$12140$1c1CVa)
        (round . g$12139$1c1CVa)
        (reverse . g$12138$1c1CVa)
        (real? . g$12137$1c1CVa)
        (real-valued? . g$12136$1c1CVa)
        (real-part . g$12135$1c1CVa)
        (rationalize . g$5897$1c1CVa)
        (rational? . g$12134$1c1CVa)
        (rational-valued? . g$12133$1c1CVa)
        (procedure? . g$12132$1c1CVa)
        (positive? . g$12131$1c1CVa)
        (pair? . g$12130$1c1CVa)
        (odd? . g$12129$1c1CVa)
        (numerator . g$12128$1c1CVa)
        (number? . g$12127$1c1CVa)
        (number->string . g$12126$1c1CVa)
        (null? . g$12125$1c1CVa)
        (not . g$12124$1c1CVa)
        (negative? . g$12123$1c1CVa)
        (nan? . g$12122$1c1CVa)
        (min . g$12121$1c1CVa)
        (max . g$12120$1c1CVa)
        (map . g$12119$1c1CVa)
        (make-vector . g$12118$1c1CVa)
        (make-string . g$12117$1c1CVa)
        (make-rectangular . g$12116$1c1CVa)
        (make-polar . g$12115$1c1CVa)
        (magnitude . g$12114$1c1CVa)
        (log . g$12113$1c1CVa)
        (list? . g$12112$1c1CVa)
        (list-tail . g$12111$1c1CVa)
        (list-ref . g$12110$1c1CVa)
        (list->vector . g$12109$1c1CVa)
        (list->string . g$12108$1c1CVa)
        (list . g$12107$1c1CVa)
        (length . g$12106$1c1CVa)
        (lcm . g$12105$1c1CVa)
        (integer? . g$12104$1c1CVa)
        (integer-valued? . g$12103$1c1CVa)
        (integer->char . g$12102$1c1CVa)
        (infinite? . g$12101$1c1CVa)
        (inexact? . g$12100$1c1CVa)
        (inexact . g$12099$1c1CVa)
        (imag-part . g$12098$1c1CVa)
        (gcd . g$12097$1c1CVa)
        (for-each . g$12096$1c1CVa)
        (floor . g$12095$1c1CVa)
        (finite? . g$12094$1c1CVa)
        (expt . g$12093$1c1CVa)
        (exp . g$12092$1c1CVa)
        (exact? . g$12091$1c1CVa)
        (exact-integer-sqrt . g$12090$1c1CVa)
        (exact . g$12089$1c1CVa)
        (even? . g$12088$1c1CVa)
        (error . g$12087$1c1CVa)
        (eqv? . g$12086$1c1CVa)
        (equal? . g$12085$1c1CVa)
        (eq? . g$12084$1c1CVa)
        (dynamic-wind . g$12083$1c1CVa)
        (div0-and-mod0 . g$12082$1c1CVa)
        (mod0 . g$12081$1c1CVa)
        (div0 . g$12080$1c1CVa)
        (div-and-mod . g$12079$1c1CVa)
        (mod . g$12078$1c1CVa)
        (div . g$12077$1c1CVa)
        (denominator . g$12076$1c1CVa)
        (cos . g$12075$1c1CVa)
        (cons . g$12074$1c1CVa)
        (complex? . g$12073$1c1CVa)
        (char? . g$12072$1c1CVa)
        (char>? . g$5894$1c1CVa)
        (char>=? . g$5896$1c1CVa)
        (char=? . g$5892$1c1CVa)
        (char<? . g$5893$1c1CVa)
        (char<=? . g$5895$1c1CVa)
        (char->integer . g$12071$1c1CVa)
        (ceiling . g$12070$1c1CVa)
        (call-with-values . g$12069$1c1CVa)
        (call/cc . g$12068$1c1CVa)
        (call-with-current-continuation . g$12067$1c1CVa)
        (cddddr . g$5792$1c1CVa)
        (cdddar . g$5791$1c1CVa)
        (cddadr . g$5790$1c1CVa)
        (cddaar . g$5789$1c1CVa)
        (cdaddr . g$5788$1c1CVa)
        (cdadar . g$5787$1c1CVa)
        (cdaadr . g$5786$1c1CVa)
        (cdaaar . g$5785$1c1CVa)
        (cadddr . g$5784$1c1CVa)
        (caddar . g$5783$1c1CVa)
        (cadadr . g$5782$1c1CVa)
        (cadaar . g$5781$1c1CVa)
        (caaddr . g$5780$1c1CVa)
        (caadar . g$5779$1c1CVa)
        (caaadr . g$5778$1c1CVa)
        (caaaar . g$5777$1c1CVa)
        (cdddr . g$5776$1c1CVa)
        (cddar . g$5775$1c1CVa)
        (cdadr . g$5774$1c1CVa)
        (cdaar . g$5773$1c1CVa)
        (caddr . g$5772$1c1CVa)
        (cadar . g$5771$1c1CVa)
        (caadr . g$5770$1c1CVa)
        (caaar . g$5769$1c1CVa)
        (cddr . g$5768$1c1CVa)
        (cdar . g$5767$1c1CVa)
        (cadr . g$5766$1c1CVa)
        (caar . g$5765$1c1CVa)
        (cdr . g$12066$1c1CVa)
        (car . g$12065$1c1CVa)
        (boolean? . g$12064$1c1CVa)
        (boolean=? . g$5845$1c1CVa)
        (atan . g$12063$1c1CVa)
        (assertion-violation . g$12062$1c1CVa)
        (asin . g$12061$1c1CVa)
        (apply . g$12060$1c1CVa)
        (append . g$12059$1c1CVa)
        (angle . g$12058$1c1CVa)
        (acos . g$12057$1c1CVa)
        (abs . g$12056$1c1CVa)
        (/ . g$12055$1c1CVa)
        (* . g$12054$1c1CVa)
        (- . g$12053$1c1CVa)
        (+ . g$12052$1c1CVa)
        (>= . g$12051$1c1CVa)
        (> . g$12050$1c1CVa)
        (= . g$12049$1c1CVa)
        (<= . g$12048$1c1CVa)
        (< . g$12047$1c1CVa)
        (enum-set? . g$7521$1c1CVa)
        (make-promise . g$6875$1c1CVa)
        (load/args . g$11881$1c1CVa)
        (printf . g$7629$1c1CVa)
        (fprintf . g$7630$1c1CVa)
        (format . g$7631$1c1CVa)
        (get-arity . g$12042$1c1CVa)
        (gc-collect . g$12041$1c1CVa)
        (clr-type? . g$12040$1c1CVa)
        (get-clr-type . g$12039$1c1CVa)
        (vector-append . g$12037$1c1CVa)
        (vector-filter . g$12036$1c1CVa)
        (vector-reverse! . g$12035$1c1CVa)
        (vector-contains? . g$12034$1c1CVa)
        (vector-index-of . g$12033$1c1CVa)
        (vector-copy . g$12032$1c1CVa)
        (vector-binary-search . g$12031$1c1CVa)
        (get-output-string . g$12030$1c1CVa)
        (open-output-string . g$12029$1c1CVa)
        (open-input-string . g$12028$1c1CVa)
        (string-ci-compare . g$12027$1c1CVa)
        (string-compare . g$12026$1c1CVa)
        (string-format . g$12025$1c1CVa)
        (trace-printer . g$11878$1c1CVa)
        (make-traced-procedure . g$12024$1c1CVa)
        (make-traced-macro . g$7651$1c1CVa)
        (pmap . g$12023$1c1CVa)
        (time-it . g$12022$1c1CVa)
        (make-parameter . g$7656$1c1CVa)
        (library-locator . g$12021$1c1CVa)
        (get-library-paths . g$12020$1c1CVa)
        (environment-symbols . g$8919$1c1CVa)
        (interaction-environment-symbols . g$8918$1c1CVa)
        (library-path . g$8087$1c1CVa)
        (library-extensions . g$8088$1c1CVa)
        (installed-libraries . g$8108$1c1CVa)
        (expand . g$8924$1c1CVa)
        (&no-nans . g$12019$1c1CVa)
        (&no-infinities . g$12018$1c1CVa)
        (&i/o-encoding . g$12017$1c1CVa)
        (&i/o-decoding . g$12016$1c1CVa)
        (&i/o-port . g$12015$1c1CVa)
        (&i/o-file-does-not-exist . g$12014$1c1CVa)
        (&i/o-file-already-exists . g$12013$1c1CVa)
        (&i/o-file-is-read-only . g$12012$1c1CVa)
        (&i/o-file-protection . g$12011$1c1CVa)
        (&i/o-filename . g$12010$1c1CVa)
        (&i/o-invalid-position . g$12009$1c1CVa)
        (&i/o-write . g$12008$1c1CVa)
        (&i/o-read . g$12007$1c1CVa)
        (&i/o . g$12006$1c1CVa)
        (&non-continuable . g$12005$1c1CVa)
        (&undefined . g$12004$1c1CVa)
        (&syntax . g$12003$1c1CVa)
        (&lexical . g$12002$1c1CVa)
        (&implementation-restriction . g$12001$1c1CVa)
        (&who . g$11999$1c1CVa)
        (&irritants . g$11998$1c1CVa)
        (&assertion . g$11997$1c1CVa)
        (&violation . g$11996$1c1CVa)
        (&error . g$11995$1c1CVa)
        (&serious . g$11994$1c1CVa)
        (&warning . g$11993$1c1CVa)
        (&message . g$11992$1c1CVa)
        (&condition . g$11991$1c1CVa)
        (define-condition-type . g$11990$1c1CVa)
        (define-enumeration . g$11989$1c1CVa)
        (define-record-type . g$11988$1c1CVa)
        (parent-rtd . g$11987$1c1CVa)
        (nongenerative . g$11986$1c1CVa)
        (opaque . g$11985$1c1CVa)
        (sealed . g$11984$1c1CVa)
        (protocol . g$11983$1c1CVa)
        (parent . g$11982$1c1CVa)
        (immutable . g$11981$1c1CVa)
        (mutable . g$11980$1c1CVa)
        (fields . g$11979$1c1CVa)
        (error-handling-mode . g$11978$1c1CVa)
        (file-options . g$11977$1c1CVa)
        (buffer-mode . g$11976$1c1CVa)
        (eol-style . g$11975$1c1CVa)
        (guard . g$11974$1c1CVa)
        (trace-letrec-syntax . g$11973$1c1CVa)
        (trace-let-syntax . g$11972$1c1CVa)
        (trace-define-syntax . g$11971$1c1CVa)
        (trace-define . g$11970$1c1CVa)
        (trace-lambda . g$11969$1c1CVa)
        (unsyntax-splicing . g$11968$1c1CVa)
        (unsyntax . g$11967$1c1CVa)
        (unquote-splicing . g$11966$1c1CVa)
        (unquote . g$11965$1c1CVa)
        (_ . g$11964$1c1CVa)
        (else . g$11963$1c1CVa)
        (=> . g$11962$1c1CVa)
        (... . g$11961$1c1CVa)
        (assert . g$11960$1c1CVa)
        (endianness . g$11959$1c1CVa)
        (delay . g$11958$1c1CVa)
        (time . g$11957$1c1CVa)
        (or . g$11956$1c1CVa)
        (and . g$11955$1c1CVa)
        (do . g$11954$1c1CVa)
        (cond . g$11953$1c1CVa)
        (let* . g$11952$1c1CVa)
        (let . g$11951$1c1CVa)
        (identifier-syntax . g$11950$1c1CVa)
        (with-syntax . g$11949$1c1CVa)
        (quasisyntax . g$11948$1c1CVa)
        (quasiquote . g$11947$1c1CVa)
        (syntax-rules . g$11946$1c1CVa)
        (include-into . g$11945$1c1CVa)
        (include . g$11944$1c1CVa)
        (let-values . g$11942$1c1CVa)
        (let*-values . g$11941$1c1CVa)
        (record-constructor-descriptor . g$11940$1c1CVa)
        (record-type-descriptor . g$11939$1c1CVa)
        (fluid-let-syntax . g$11938$1c1CVa)
        (case . g$11937$1c1CVa)
        (parameterize . g$11936$1c1CVa)
        (unless . g$11935$1c1CVa)
        (when . g$11934$1c1CVa)
        (if . g$11933$1c1CVa)
        (letrec* . g$11932$1c1CVa)
        (letrec . g$11931$1c1CVa)
        (case-lambda . g$11929$1c1CVa)
        (lambda . g$11928$1c1CVa)
        (syntax . g$11927$1c1CVa)
        (syntax-case . g$11926$1c1CVa)
        (quote . g$11925$1c1CVa)
        (letrec-syntax . g$11923$1c1CVa)
        (let-syntax . g$11922$1c1CVa)
        (set! . g$11921$1c1CVa)
        (import . g$11920$1c1CVa)
        (library . g$11919$1c1CVa)
        (begin . g$11918$1c1CVa)
        (module . g$11917$1c1CVa)
        (define-syntax . g$11916$1c1CVa)
        (define . g$11915$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12535$1c1CVa
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12020$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12536$1c1CVa
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12476$1c1CVa)
        (annotation-source . g$12475$1c1CVa)
        (annotation-expression . g$12474$1c1CVa)
        (annotation? . g$12473$1c1CVa)
        (read-annotated . g$12472$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12537$1c1CVa
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12442$1c1CVa)
        (serialize-library . g$12441$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12538$1c1CVa
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8549$1c1CVa)
        (variable-transformer? . g$8548$1c1CVa)
        (eqv-hash . g$12045$1c1CVa)
        (eq-hash . g$12044$1c1CVa)
        (reverse! . g$12043$1c1CVa)
        (format . g$7631$1c1CVa)
        (get-command-line . g$12038$1c1CVa)
        (make-traced-procedure . g$12024$1c1CVa)
        (assertion-error . g$8938$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12539$1c1CVa
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12046$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12540$1c1CVa
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12460$1c1CVa)
        (clr-field-set!-internal . g$12459$1c1CVa)
        (clr-field-get-internal . g$12458$1c1CVa)
        (clr-cast-internal . g$12457$1c1CVa)
        (clr-call-internal . g$12456$1c1CVa)
        (clr-new-internal . g$12455$1c1CVa)
        (clr-new-array-internal . g$12454$1c1CVa)
        (clr-is-internal . g$12453$1c1CVa)
        (clr-reference-internal . g$12452$1c1CVa)
        (clr-using-internal . g$12451$1c1CVa)
        (clr-clear-usings-internal . g$12450$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12541$1c1CVa
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11966$1c1CVa)
        (unquote . g$11965$1c1CVa)
        (else . g$11963$1c1CVa)
        (=> . g$11962$1c1CVa)
        (delay . g$11958$1c1CVa)
        (or . g$11956$1c1CVa)
        (and . g$11955$1c1CVa)
        (do . g$11954$1c1CVa)
        (cond . g$11953$1c1CVa)
        (let* . g$11952$1c1CVa)
        (let . g$11951$1c1CVa)
        (quasiquote . g$11947$1c1CVa)
        (syntax-rules . g$11946$1c1CVa)
        (case . g$11937$1c1CVa)
        (if . g$11933$1c1CVa)
        (letrec . g$11931$1c1CVa)
        (lambda . g$11928$1c1CVa)
        (quote . g$11925$1c1CVa)
        (letrec-syntax . g$11923$1c1CVa)
        (let-syntax . g$11922$1c1CVa)
        (set! . g$11921$1c1CVa)
        (begin . g$11918$1c1CVa)
        (define-syntax . g$11916$1c1CVa)
        (define . g$11915$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12542$1c1CVa
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8948$1c1CVa)
        (char-ready? . g$12440$1c1CVa)
        (string-ci>? . g$7018$1c1CVa)
        (string-ci>=? . g$7020$1c1CVa)
        (string-ci=? . g$7016$1c1CVa)
        (string-ci<? . g$7017$1c1CVa)
        (string-ci<=? . g$7019$1c1CVa)
        (char-whitespace? . g$12431$1c1CVa)
        (char-upper-case? . g$12430$1c1CVa)
        (char-numeric? . g$12428$1c1CVa)
        (char-lower-case? . g$12427$1c1CVa)
        (char-upcase . g$12425$1c1CVa)
        (char-downcase . g$12422$1c1CVa)
        (char-ci>? . g$7069$1c1CVa)
        (char-ci>=? . g$7071$1c1CVa)
        (char-ci=? . g$7067$1c1CVa)
        (char-ci<? . g$7068$1c1CVa)
        (char-ci<=? . g$7070$1c1CVa)
        (char-alphabetic? . g$12421$1c1CVa)
        (call-with-output-file . g$7488$1c1CVa)
        (call-with-input-file . g$7487$1c1CVa)
        (write-char . g$12389$1c1CVa)
        (write . g$12388$1c1CVa)
        (with-output-to-file . g$7486$1c1CVa)
        (with-input-from-file . g$7485$1c1CVa)
        (read-char . g$12387$1c1CVa)
        (read . g$12386$1c1CVa)
        (peek-char . g$12385$1c1CVa)
        (open-output-file . g$12384$1c1CVa)
        (open-input-file . g$12383$1c1CVa)
        (newline . g$12382$1c1CVa)
        (display . g$12381$1c1CVa)
        (close-output-port . g$12380$1c1CVa)
        (close-input-port . g$12379$1c1CVa)
        (eof-object? . g$12378$1c1CVa)
        (eof-object . g$12377$1c1CVa)
        (current-error-port . g$12376$1c1CVa)
        (current-output-port . g$12375$1c1CVa)
        (current-input-port . g$12374$1c1CVa)
        (output-port? . g$12373$1c1CVa)
        (input-port? . g$12372$1c1CVa)
        (scheme-report-environment . g$8923$1c1CVa)
        (quotient . g$6872$1c1CVa)
        (null-environment . g$8922$1c1CVa)
        (remainder . g$6873$1c1CVa)
        (modulo . g$6874$1c1CVa)
        (inexact->exact . g$12310$1c1CVa)
        (force . g$6876$1c1CVa)
        (exact->inexact . g$12309$1c1CVa)
        (string-fill! . g$12307$1c1CVa)
        (string-set! . g$12306$1c1CVa)
        (set-cdr! . g$12305$1c1CVa)
        (set-car! . g$12304$1c1CVa)
        (memv . g$12303$1c1CVa)
        (memq . g$12302$1c1CVa)
        (member . g$6450$1c1CVa)
        (assv . g$6447$1c1CVa)
        (assq . g$12301$1c1CVa)
        (assoc . g$6448$1c1CVa)
        (eval . g$8925$1c1CVa)
        (zero? . g$12167$1c1CVa)
        (vector? . g$12166$1c1CVa)
        (vector-set! . g$12165$1c1CVa)
        (vector-ref . g$12164$1c1CVa)
        (vector-length . g$12162$1c1CVa)
        (vector-fill! . g$12160$1c1CVa)
        (vector->list . g$12159$1c1CVa)
        (vector . g$12158$1c1CVa)
        (values . g$12157$1c1CVa)
        (truncate . g$12156$1c1CVa)
        (tan . g$12155$1c1CVa)
        (symbol? . g$12154$1c1CVa)
        (symbol->string . g$12153$1c1CVa)
        (substring . g$12152$1c1CVa)
        (string? . g$12151$1c1CVa)
        (string>? . g$5841$1c1CVa)
        (string>=? . g$5843$1c1CVa)
        (string=? . g$5839$1c1CVa)
        (string<? . g$5840$1c1CVa)
        (string<=? . g$5842$1c1CVa)
        (string-ref . g$12150$1c1CVa)
        (string-length . g$12149$1c1CVa)
        (string-copy . g$12147$1c1CVa)
        (string-append . g$12146$1c1CVa)
        (string->symbol . g$12145$1c1CVa)
        (string->number . g$12144$1c1CVa)
        (string->list . g$12143$1c1CVa)
        (string . g$12142$1c1CVa)
        (sqrt . g$12141$1c1CVa)
        (sin . g$12140$1c1CVa)
        (round . g$12139$1c1CVa)
        (reverse . g$12138$1c1CVa)
        (real? . g$12137$1c1CVa)
        (real-part . g$12135$1c1CVa)
        (rationalize . g$5897$1c1CVa)
        (rational? . g$12134$1c1CVa)
        (procedure? . g$12132$1c1CVa)
        (positive? . g$12131$1c1CVa)
        (pair? . g$12130$1c1CVa)
        (odd? . g$12129$1c1CVa)
        (numerator . g$12128$1c1CVa)
        (number? . g$12127$1c1CVa)
        (number->string . g$12126$1c1CVa)
        (null? . g$12125$1c1CVa)
        (not . g$12124$1c1CVa)
        (negative? . g$12123$1c1CVa)
        (min . g$12121$1c1CVa)
        (max . g$12120$1c1CVa)
        (map . g$12119$1c1CVa)
        (make-vector . g$12118$1c1CVa)
        (make-string . g$12117$1c1CVa)
        (make-rectangular . g$12116$1c1CVa)
        (make-polar . g$12115$1c1CVa)
        (magnitude . g$12114$1c1CVa)
        (log . g$12113$1c1CVa)
        (list? . g$12112$1c1CVa)
        (list-tail . g$12111$1c1CVa)
        (list-ref . g$12110$1c1CVa)
        (list->vector . g$12109$1c1CVa)
        (list->string . g$12108$1c1CVa)
        (list . g$12107$1c1CVa)
        (length . g$12106$1c1CVa)
        (lcm . g$12105$1c1CVa)
        (integer? . g$12104$1c1CVa)
        (integer->char . g$12102$1c1CVa)
        (inexact? . g$12100$1c1CVa)
        (imag-part . g$12098$1c1CVa)
        (gcd . g$12097$1c1CVa)
        (for-each . g$12096$1c1CVa)
        (floor . g$12095$1c1CVa)
        (expt . g$12093$1c1CVa)
        (exp . g$12092$1c1CVa)
        (exact? . g$12091$1c1CVa)
        (even? . g$12088$1c1CVa)
        (eqv? . g$12086$1c1CVa)
        (equal? . g$12085$1c1CVa)
        (eq? . g$12084$1c1CVa)
        (dynamic-wind . g$12083$1c1CVa)
        (denominator . g$12076$1c1CVa)
        (cos . g$12075$1c1CVa)
        (cons . g$12074$1c1CVa)
        (complex? . g$12073$1c1CVa)
        (char? . g$12072$1c1CVa)
        (char>? . g$5894$1c1CVa)
        (char>=? . g$5896$1c1CVa)
        (char=? . g$5892$1c1CVa)
        (char<? . g$5893$1c1CVa)
        (char<=? . g$5895$1c1CVa)
        (char->integer . g$12071$1c1CVa)
        (ceiling . g$12070$1c1CVa)
        (call-with-values . g$12069$1c1CVa)
        (call-with-current-continuation . g$12067$1c1CVa)
        (cddddr . g$5792$1c1CVa)
        (cdddar . g$5791$1c1CVa)
        (cddadr . g$5790$1c1CVa)
        (cddaar . g$5789$1c1CVa)
        (cdaddr . g$5788$1c1CVa)
        (cdadar . g$5787$1c1CVa)
        (cdaadr . g$5786$1c1CVa)
        (cdaaar . g$5785$1c1CVa)
        (cadddr . g$5784$1c1CVa)
        (caddar . g$5783$1c1CVa)
        (cadadr . g$5782$1c1CVa)
        (cadaar . g$5781$1c1CVa)
        (caaddr . g$5780$1c1CVa)
        (caadar . g$5779$1c1CVa)
        (caaadr . g$5778$1c1CVa)
        (caaaar . g$5777$1c1CVa)
        (cdddr . g$5776$1c1CVa)
        (cddar . g$5775$1c1CVa)
        (cdadr . g$5774$1c1CVa)
        (cdaar . g$5773$1c1CVa)
        (caddr . g$5772$1c1CVa)
        (cadar . g$5771$1c1CVa)
        (caadr . g$5770$1c1CVa)
        (caaar . g$5769$1c1CVa)
        (cddr . g$5768$1c1CVa)
        (cdar . g$5767$1c1CVa)
        (cadr . g$5766$1c1CVa)
        (caar . g$5765$1c1CVa)
        (cdr . g$12066$1c1CVa)
        (car . g$12065$1c1CVa)
        (boolean? . g$12064$1c1CVa)
        (atan . g$12063$1c1CVa)
        (asin . g$12061$1c1CVa)
        (apply . g$12060$1c1CVa)
        (append . g$12059$1c1CVa)
        (angle . g$12058$1c1CVa)
        (acos . g$12057$1c1CVa)
        (abs . g$12056$1c1CVa)
        (/ . g$12055$1c1CVa)
        (* . g$12054$1c1CVa)
        (- . g$12053$1c1CVa)
        (+ . g$12052$1c1CVa)
        (>= . g$12051$1c1CVa)
        (> . g$12050$1c1CVa)
        (= . g$12049$1c1CVa)
        (<= . g$12048$1c1CVa)
        (< . g$12047$1c1CVa)
        (unquote-splicing . g$11966$1c1CVa)
        (unquote . g$11965$1c1CVa)
        (else . g$11963$1c1CVa)
        (=> . g$11962$1c1CVa)
        (... . g$11961$1c1CVa)
        (delay . g$11958$1c1CVa)
        (or . g$11956$1c1CVa)
        (and . g$11955$1c1CVa)
        (do . g$11954$1c1CVa)
        (cond . g$11953$1c1CVa)
        (let* . g$11952$1c1CVa)
        (let . g$11951$1c1CVa)
        (quasiquote . g$11947$1c1CVa)
        (syntax-rules . g$11946$1c1CVa)
        (case . g$11937$1c1CVa)
        (if . g$11933$1c1CVa)
        (letrec . g$11931$1c1CVa)
        (lambda . g$11928$1c1CVa)
        (quote . g$11925$1c1CVa)
        (letrec-syntax . g$11923$1c1CVa)
        (let-syntax . g$11922$1c1CVa)
        (set! . g$11921$1c1CVa)
        (begin . g$11918$1c1CVa)
        (define-syntax . g$11916$1c1CVa)
        (define . g$11915$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12543$1c1CVa
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12439$1c1CVa)
        (string-titlecase . g$12438$1c1CVa)
        (string-normalize-nfkd . g$12437$1c1CVa)
        (string-normalize-nfkc . g$12436$1c1CVa)
        (string-normalize-nfd . g$12435$1c1CVa)
        (string-normalize-nfc . g$12434$1c1CVa)
        (string-foldcase . g$12433$1c1CVa)
        (string-downcase . g$12432$1c1CVa)
        (string-ci>? . g$7018$1c1CVa)
        (string-ci>=? . g$7020$1c1CVa)
        (string-ci=? . g$7016$1c1CVa)
        (string-ci<? . g$7017$1c1CVa)
        (string-ci<=? . g$7019$1c1CVa)
        (char-whitespace? . g$12431$1c1CVa)
        (char-upper-case? . g$12430$1c1CVa)
        (char-title-case? . g$12429$1c1CVa)
        (char-numeric? . g$12428$1c1CVa)
        (char-lower-case? . g$12427$1c1CVa)
        (char-general-category . g$12426$1c1CVa)
        (char-upcase . g$12425$1c1CVa)
        (char-titlecase . g$12424$1c1CVa)
        (char-foldcase . g$12423$1c1CVa)
        (char-downcase . g$12422$1c1CVa)
        (char-ci>? . g$7069$1c1CVa)
        (char-ci>=? . g$7071$1c1CVa)
        (char-ci=? . g$7067$1c1CVa)
        (char-ci<? . g$7068$1c1CVa)
        (char-ci<=? . g$7070$1c1CVa)
        (char-alphabetic? . g$12421$1c1CVa)
        (make-variable-transformer . g$8547$1c1CVa)
        (identifier? . g$8943$1c1CVa)
        (generate-temporaries . g$8932$1c1CVa)
        (free-identifier=? . g$8933$1c1CVa)
        (syntax->datum . g$8945$1c1CVa)
        (datum->syntax . g$8944$1c1CVa)
        (bound-identifier=? . g$8934$1c1CVa)
        (record-type-descriptor? . g$12420$1c1CVa)
        (record-predicate . g$12419$1c1CVa)
        (record-mutator . g$12418$1c1CVa)
        (record-constructor . g$12417$1c1CVa)
        (record-accessor . g$12416$1c1CVa)
        (make-record-type-descriptor . g$12415$1c1CVa)
        (make-record-constructor-descriptor . g$12414$1c1CVa)
        (record? . g$12413$1c1CVa)
        (record-type-uid . g$12412$1c1CVa)
        (record-type-sealed? . g$12411$1c1CVa)
        (record-type-parent . g$12410$1c1CVa)
        (record-type-opaque? . g$12409$1c1CVa)
        (record-type-name . g$12408$1c1CVa)
        (record-type-generative? . g$12407$1c1CVa)
        (record-type-field-names . g$12406$1c1CVa)
        (record-rtd . g$12405$1c1CVa)
        (record-field-mutable? . g$12404$1c1CVa)
        (delete-file . g$6379$1c1CVa)
        (file-exists? . g$6378$1c1CVa)
        (vector-sort! . g$12403$1c1CVa)
        (vector-sort . g$12402$1c1CVa)
        (list-sort . g$6892$1c1CVa)
        (symbol-hash . g$12401$1c1CVa)
        (string-ci-hash . g$12400$1c1CVa)
        (string-hash . g$12399$1c1CVa)
        (equal-hash . g$12398$1c1CVa)
        (hashtable-equivalence-function . g$12397$1c1CVa)
        (make-hashtable . g$12396$1c1CVa)
        (hashtable-hash-function . g$12395$1c1CVa)
        (make-eqv-hashtable . g$6346$1c1CVa)
        (make-eq-hashtable . g$6345$1c1CVa)
        (hashtable? . g$12394$1c1CVa)
        (hashtable-update! . g$6352$1c1CVa)
        (hashtable-size . g$6347$1c1CVa)
        (hashtable-set! . g$6349$1c1CVa)
        (hashtable-ref . g$6348$1c1CVa)
        (hashtable-mutable? . g$12393$1c1CVa)
        (hashtable-keys . g$12392$1c1CVa)
        (hashtable-entries . g$12391$1c1CVa)
        (hashtable-delete! . g$6350$1c1CVa)
        (hashtable-copy . g$12390$1c1CVa)
        (hashtable-contains? . g$6351$1c1CVa)
        (hashtable-clear! . g$6353$1c1CVa)
        (call-with-output-file . g$7488$1c1CVa)
        (call-with-input-file . g$7487$1c1CVa)
        (write-char . g$12389$1c1CVa)
        (write . g$12388$1c1CVa)
        (with-output-to-file . g$7486$1c1CVa)
        (with-input-from-file . g$7485$1c1CVa)
        (read-char . g$12387$1c1CVa)
        (read . g$12386$1c1CVa)
        (peek-char . g$12385$1c1CVa)
        (open-output-file . g$12384$1c1CVa)
        (open-input-file . g$12383$1c1CVa)
        (newline . g$12382$1c1CVa)
        (display . g$12381$1c1CVa)
        (close-output-port . g$12380$1c1CVa)
        (close-input-port . g$12379$1c1CVa)
        (eof-object? . g$12378$1c1CVa)
        (eof-object . g$12377$1c1CVa)
        (current-error-port . g$12376$1c1CVa)
        (current-output-port . g$12375$1c1CVa)
        (current-input-port . g$12374$1c1CVa)
        (output-port? . g$12373$1c1CVa)
        (input-port? . g$12372$1c1CVa)
        (utf-8-codec . g$12371$1c1CVa)
        (utf-16-codec . g$12370$1c1CVa)
        (transcoder-error-handling-mode . g$12369$1c1CVa)
        (transcoder-eol-style . g$12368$1c1CVa)
        (transcoder-codec . g$12367$1c1CVa)
        (transcoded-port . g$12366$1c1CVa)
        (textual-port? . g$12365$1c1CVa)
        (string->bytevector . g$12364$1c1CVa)
        (standard-output-port . g$12363$1c1CVa)
        (standard-input-port . g$12362$1c1CVa)
        (standard-error-port . g$12361$1c1CVa)
        (set-port-position! . g$12360$1c1CVa)
        (put-u8 . g$12359$1c1CVa)
        (put-string . g$12358$1c1CVa)
        (put-datum . g$12357$1c1CVa)
        (put-char . g$12356$1c1CVa)
        (put-bytevector . g$12355$1c1CVa)
        (port? . g$7464$1c1CVa)
        (port-transcoder . g$12354$1c1CVa)
        (port-position . g$12353$1c1CVa)
        (port-has-set-port-position!? . g$12352$1c1CVa)
        (port-has-port-position? . g$12351$1c1CVa)
        (port-eof? . g$12350$1c1CVa)
        (output-port-buffer-mode . g$12349$1c1CVa)
        (open-string-output-port . g$7463$1c1CVa)
        (open-string-input-port . g$12348$1c1CVa)
        (open-file-output-port . g$12347$1c1CVa)
        (open-file-input/output-port . g$12346$1c1CVa)
        (open-file-input-port . g$12345$1c1CVa)
        (open-bytevector-output-port . g$12344$1c1CVa)
        (open-bytevector-input-port . g$12343$1c1CVa)
        (native-transcoder . g$12342$1c1CVa)
        (native-eol-style . g$12341$1c1CVa)
        (make-transcoder . g$12340$1c1CVa)
        (latin-1-codec . g$12339$1c1CVa)
        (make-i/o-write-error . g$7320$1c1CVa)
        (make-i/o-read-error . g$7306$1c1CVa)
        (make-i/o-port-error . g$7425$1c1CVa)
        (make-i/o-invalid-position-error . g$7335$1c1CVa)
        (make-i/o-filename-error . g$7352$1c1CVa)
        (make-i/o-file-protection-error . g$7368$1c1CVa)
        (make-i/o-file-is-read-only-error . g$7382$1c1CVa)
        (make-i/o-file-does-not-exist-error . g$7410$1c1CVa)
        (make-i/o-file-already-exists-error . g$7396$1c1CVa)
        (make-i/o-error . g$7292$1c1CVa)
        (make-i/o-encoding-error . g$7456$1c1CVa)
        (make-i/o-decoding-error . g$7441$1c1CVa)
        (make-custom-textual-output-port . g$12338$1c1CVa)
        (make-custom-textual-input/output-port . g$12337$1c1CVa)
        (make-custom-textual-input-port . g$12336$1c1CVa)
        (make-custom-binary-output-port . g$12335$1c1CVa)
        (make-custom-binary-input/output-port . g$12334$1c1CVa)
        (make-custom-binary-input-port . g$12333$1c1CVa)
        (make-bytevector . g$12332$1c1CVa)
        (lookahead-u8 . g$12331$1c1CVa)
        (lookahead-char . g$12330$1c1CVa)
        (i/o-write-error? . g$7321$1c1CVa)
        (i/o-read-error? . g$7307$1c1CVa)
        (i/o-port-error? . g$7427$1c1CVa)
        (i/o-invalid-position-error? . g$7337$1c1CVa)
        (i/o-error-position . g$7338$1c1CVa)
        (i/o-filename-error? . g$7354$1c1CVa)
        (i/o-file-protection-error? . g$7369$1c1CVa)
        (i/o-file-is-read-only-error? . g$7383$1c1CVa)
        (i/o-file-does-not-exist-error? . g$7411$1c1CVa)
        (i/o-file-already-exists-error? . g$7397$1c1CVa)
        (i/o-error? . g$7293$1c1CVa)
        (i/o-error-port . g$7428$1c1CVa)
        (i/o-error-filename . g$7355$1c1CVa)
        (i/o-encoding-error? . g$7458$1c1CVa)
        (i/o-encoding-error-char . g$7459$1c1CVa)
        (i/o-decoding-error? . g$7442$1c1CVa)
        (get-u8 . g$12329$1c1CVa)
        (get-string-n! . g$12328$1c1CVa)
        (get-string-n . g$12327$1c1CVa)
        (get-string-all . g$12326$1c1CVa)
        (get-line . g$12325$1c1CVa)
        (get-datum . g$12324$1c1CVa)
        (get-char . g$12323$1c1CVa)
        (get-bytevector-some . g$12322$1c1CVa)
        (get-bytevector-n! . g$12321$1c1CVa)
        (get-bytevector-n . g$12320$1c1CVa)
        (get-bytevector-all . g$12319$1c1CVa)
        (flush-output-port . g$12318$1c1CVa)
        (close-port . g$12317$1c1CVa)
        (call-with-string-output-port . g$12316$1c1CVa)
        (call-with-port . g$12315$1c1CVa)
        (call-with-bytevector-output-port . g$12314$1c1CVa)
        (bytevector->string . g$12313$1c1CVa)
        (buffer-mode? . g$12312$1c1CVa)
        (binary-port? . g$12311$1c1CVa)
        (exit . g$12308$1c1CVa)
        (command-line . g$11879$1c1CVa)
        (remove . g$6459$1c1CVa)
        (remv . g$6460$1c1CVa)
        (remp . g$6445$1c1CVa)
        (remq . g$6461$1c1CVa)
        (partition . g$6444$1c1CVa)
        (memv . g$12303$1c1CVa)
        (memq . g$12302$1c1CVa)
        (memp . g$6451$1c1CVa)
        (member . g$6450$1c1CVa)
        (exists . g$6455$1c1CVa)
        (for-all . g$6454$1c1CVa)
        (fold-right . g$6458$1c1CVa)
        (fold-left . g$6457$1c1CVa)
        (find . g$6443$1c1CVa)
        (filter . g$6446$1c1CVa)
        (cons* . g$6456$1c1CVa)
        (assv . g$6447$1c1CVa)
        (assq . g$12301$1c1CVa)
        (assp . g$6449$1c1CVa)
        (assoc . g$6448$1c1CVa)
        (with-exception-handler . g$12300$1c1CVa)
        (raise-continuable . g$12299$1c1CVa)
        (raise . g$12298$1c1CVa)
        (make-enumeration . g$7545$1c1CVa)
        (enum-set=? . g$7552$1c1CVa)
        (enum-set-universe . g$7546$1c1CVa)
        (enum-set-union . g$7553$1c1CVa)
        (enum-set-subset? . g$7551$1c1CVa)
        (enum-set-projection . g$7557$1c1CVa)
        (enum-set-member? . g$7550$1c1CVa)
        (enum-set-intersection . g$7554$1c1CVa)
        (enum-set-indexer . g$7547$1c1CVa)
        (enum-set-difference . g$7555$1c1CVa)
        (enum-set-constructor . g$7548$1c1CVa)
        (enum-set-complement . g$7556$1c1CVa)
        (enum-set->list . g$7549$1c1CVa)
        (who-condition? . g$6783$1c1CVa)
        (warning? . g$6694$1c1CVa)
        (violation? . g$6736$1c1CVa)
        (undefined-violation? . g$6860$1c1CVa)
        (syntax-violation? . g$6844$1c1CVa)
        (syntax-violation-subform . g$6846$1c1CVa)
        (syntax-violation-form . g$6845$1c1CVa)
        (syntax-violation . g$8942$1c1CVa)
        (simple-conditions . g$12297$1c1CVa)
        (serious-condition? . g$6708$1c1CVa)
        (non-continuable-violation? . g$6798$1c1CVa)
        (message-condition? . g$6679$1c1CVa)
        (make-who-condition . g$6781$1c1CVa)
        (make-warning . g$6693$1c1CVa)
        (make-violation . g$6735$1c1CVa)
        (make-undefined-violation . g$6859$1c1CVa)
        (make-syntax-violation . g$6841$1c1CVa)
        (make-serious-condition . g$6707$1c1CVa)
        (make-non-continuable-violation . g$6797$1c1CVa)
        (make-message-condition . g$6677$1c1CVa)
        (make-lexical-violation . g$6825$1c1CVa)
        (make-irritants-condition . g$6764$1c1CVa)
        (make-implementation-restriction-violation . g$6811$1c1CVa)
        (make-error . g$6721$1c1CVa)
        (make-assertion-violation . g$6749$1c1CVa)
        (lexical-violation? . g$6826$1c1CVa)
        (irritants-condition? . g$6766$1c1CVa)
        (implementation-restriction-violation? . g$6812$1c1CVa)
        (error? . g$6722$1c1CVa)
        (condition-who . g$6784$1c1CVa)
        (condition-predicate . g$12296$1c1CVa)
        (condition-message . g$6680$1c1CVa)
        (condition-irritants . g$6767$1c1CVa)
        (condition-accessor . g$12295$1c1CVa)
        (condition . g$12294$1c1CVa)
        (assertion-violation? . g$6750$1c1CVa)
        (condition? . g$12293$1c1CVa)
        (utf32->string . g$12292$1c1CVa)
        (utf16->string . g$12291$1c1CVa)
        (utf8->string . g$12290$1c1CVa)
        (uint-list->bytevector . g$12289$1c1CVa)
        (u8-list->bytevector . g$12288$1c1CVa)
        (string->utf8 . g$12287$1c1CVa)
        (string->utf32 . g$12286$1c1CVa)
        (string->utf16 . g$12285$1c1CVa)
        (sint-list->bytevector . g$12284$1c1CVa)
        (native-endianness . g$6535$1c1CVa)
        (bytevector? . g$12283$1c1CVa)
        (bytevector=? . g$12282$1c1CVa)
        (bytevector-uint-set! . g$12281$1c1CVa)
        (bytevector-uint-ref . g$12280$1c1CVa)
        (bytevector-u8-set! . g$12279$1c1CVa)
        (bytevector-u8-ref . g$12278$1c1CVa)
        (bytevector-u64-set! . g$6556$1c1CVa)
        (bytevector-u64-ref . g$6552$1c1CVa)
        (bytevector-u64-native-set! . g$6558$1c1CVa)
        (bytevector-u64-native-ref . g$6554$1c1CVa)
        (bytevector-u32-set! . g$6548$1c1CVa)
        (bytevector-u32-ref . g$6544$1c1CVa)
        (bytevector-u32-native-set! . g$6550$1c1CVa)
        (bytevector-u32-native-ref . g$6546$1c1CVa)
        (bytevector-u16-set! . g$6540$1c1CVa)
        (bytevector-u16-ref . g$6536$1c1CVa)
        (bytevector-u16-native-set! . g$6542$1c1CVa)
        (bytevector-u16-native-ref . g$6538$1c1CVa)
        (bytevector-sint-set! . g$12277$1c1CVa)
        (bytevector-sint-ref . g$12276$1c1CVa)
        (bytevector-s8-set! . g$12275$1c1CVa)
        (bytevector-s8-ref . g$12274$1c1CVa)
        (bytevector-s64-set! . g$6557$1c1CVa)
        (bytevector-s64-ref . g$6553$1c1CVa)
        (bytevector-s64-native-set! . g$6559$1c1CVa)
        (bytevector-s64-native-ref . g$6555$1c1CVa)
        (bytevector-s32-set! . g$6549$1c1CVa)
        (bytevector-s32-ref . g$6545$1c1CVa)
        (bytevector-s32-native-set! . g$6551$1c1CVa)
        (bytevector-s32-native-ref . g$6547$1c1CVa)
        (bytevector-s16-set! . g$6541$1c1CVa)
        (bytevector-s16-ref . g$6537$1c1CVa)
        (bytevector-s16-native-set! . g$6543$1c1CVa)
        (bytevector-s16-native-ref . g$6539$1c1CVa)
        (bytevector-length . g$12273$1c1CVa)
        (bytevector-ieee-single-set! . g$12272$1c1CVa)
        (bytevector-ieee-single-ref . g$12271$1c1CVa)
        (bytevector-ieee-single-native-set! . g$6562$1c1CVa)
        (bytevector-ieee-single-native-ref . g$6560$1c1CVa)
        (bytevector-ieee-double-set! . g$12270$1c1CVa)
        (bytevector-ieee-double-ref . g$12269$1c1CVa)
        (bytevector-ieee-double-native-set! . g$6563$1c1CVa)
        (bytevector-ieee-double-native-ref . g$6561$1c1CVa)
        (bytevector-fill! . g$12268$1c1CVa)
        (bytevector-copy! . g$12267$1c1CVa)
        (bytevector-copy . g$12266$1c1CVa)
        (bytevector->uint-list . g$12265$1c1CVa)
        (bytevector->u8-list . g$12264$1c1CVa)
        (bytevector->sint-list . g$12263$1c1CVa)
        (no-nans-violation? . g$7278$1c1CVa)
        (no-infinities-violation? . g$7264$1c1CVa)
        (make-no-nans-violation . g$7277$1c1CVa)
        (make-no-infinities-violation . g$7263$1c1CVa)
        (real->flonum . g$12262$1c1CVa)
        (flzero? . g$12261$1c1CVa)
        (fltruncate . g$12260$1c1CVa)
        (fltan . g$12259$1c1CVa)
        (flsqrt . g$12258$1c1CVa)
        (flsin . g$12257$1c1CVa)
        (flround . g$12256$1c1CVa)
        (flpositive? . g$12255$1c1CVa)
        (flonum? . g$12254$1c1CVa)
        (flodd? . g$12253$1c1CVa)
        (flnumerator . g$12252$1c1CVa)
        (flnegative? . g$12251$1c1CVa)
        (flnan? . g$12250$1c1CVa)
        (flmod0 . g$12249$1c1CVa)
        (flmod . g$12248$1c1CVa)
        (flmin . g$12247$1c1CVa)
        (flmax . g$12246$1c1CVa)
        (fllog . g$12245$1c1CVa)
        (flinteger? . g$12244$1c1CVa)
        (flinfinite? . g$12243$1c1CVa)
        (flfloor . g$12242$1c1CVa)
        (flfinite? . g$12241$1c1CVa)
        (flexpt . g$12240$1c1CVa)
        (flexp . g$12239$1c1CVa)
        (fleven? . g$12238$1c1CVa)
        (fldiv0-and-mod0 . g$12237$1c1CVa)
        (fldiv0 . g$12236$1c1CVa)
        (fldiv-and-mod . g$12235$1c1CVa)
        (fldiv . g$12234$1c1CVa)
        (fldenominator . g$12233$1c1CVa)
        (flcos . g$12232$1c1CVa)
        (flceiling . g$12231$1c1CVa)
        (flatan . g$12230$1c1CVa)
        (flasin . g$12229$1c1CVa)
        (flacos . g$12228$1c1CVa)
        (flabs . g$12227$1c1CVa)
        (fl>? . g$12226$1c1CVa)
        (fl>=? . g$12225$1c1CVa)
        (fl=? . g$12224$1c1CVa)
        (fl<? . g$12223$1c1CVa)
        (fl<=? . g$12222$1c1CVa)
        (fl/ . g$12221$1c1CVa)
        (fl- . g$12220$1c1CVa)
        (fl+ . g$12219$1c1CVa)
        (fl* . g$12218$1c1CVa)
        (fixnum->flonum . g$12217$1c1CVa)
        (fxzero? . g$12216$1c1CVa)
        (fxxor . g$12215$1c1CVa)
        (fxrotate-bit-field . g$7209$1c1CVa)
        (fxreverse-bit-field . g$12214$1c1CVa)
        (fxpositive? . g$12213$1c1CVa)
        (fxodd? . g$12212$1c1CVa)
        (fxnot . g$12211$1c1CVa)
        (fxnegative? . g$12210$1c1CVa)
        (fxmod0 . g$12209$1c1CVa)
        (fxmod . g$12208$1c1CVa)
        (fxmin . g$12207$1c1CVa)
        (fxmax . g$12206$1c1CVa)
        (fxlength . g$12205$1c1CVa)
        (fxior . g$12204$1c1CVa)
        (fxif . g$7203$1c1CVa)
        (fxfirst-bit-set . g$12203$1c1CVa)
        (fxeven? . g$12202$1c1CVa)
        (fxdiv0-and-mod0 . g$12201$1c1CVa)
        (fxdiv0 . g$12200$1c1CVa)
        (fxdiv-and-mod . g$12199$1c1CVa)
        (fxdiv . g$12198$1c1CVa)
        (fxcopy-bit-field . g$7206$1c1CVa)
        (fxcopy-bit . g$7204$1c1CVa)
        (fxbit-set? . g$12197$1c1CVa)
        (fxbit-field . g$7205$1c1CVa)
        (fxbit-count . g$12196$1c1CVa)
        (fxarithmetic-shift-right . g$7208$1c1CVa)
        (fxarithmetic-shift-left . g$7207$1c1CVa)
        (fxarithmetic-shift . g$12195$1c1CVa)
        (fxand . g$12194$1c1CVa)
        (fx>? . g$12193$1c1CVa)
        (fx>=? . g$12192$1c1CVa)
        (fx=? . g$12191$1c1CVa)
        (fx<? . g$12190$1c1CVa)
        (fx<=? . g$12189$1c1CVa)
        (fx-/carry . g$12188$1c1CVa)
        (fx- . g$12187$1c1CVa)
        (fx+/carry . g$12186$1c1CVa)
        (fx+ . g$12185$1c1CVa)
        (fx*/carry . g$12184$1c1CVa)
        (fx* . g$12183$1c1CVa)
        (greatest-fixnum . g$12182$1c1CVa)
        (least-fixnum . g$12181$1c1CVa)
        (fixnum-width . g$12180$1c1CVa)
        (fixnum? . g$12179$1c1CVa)
        (bitwise-rotate-bit-field . g$7161$1c1CVa)
        (bitwise-reverse-bit-field . g$12178$1c1CVa)
        (bitwise-length . g$12177$1c1CVa)
        (bitwise-if . g$7155$1c1CVa)
        (bitwise-first-bit-set . g$12176$1c1CVa)
        (bitwise-copy-bit-field . g$7158$1c1CVa)
        (bitwise-copy-bit . g$7156$1c1CVa)
        (bitwise-bit-set? . g$12175$1c1CVa)
        (bitwise-bit-field . g$12174$1c1CVa)
        (bitwise-bit-count . g$12173$1c1CVa)
        (bitwise-xor . g$12172$1c1CVa)
        (bitwise-ior . g$12171$1c1CVa)
        (bitwise-and . g$12170$1c1CVa)
        (bitwise-not . g$12169$1c1CVa)
        (bitwise-arithmetic-shift-right . g$7160$1c1CVa)
        (bitwise-arithmetic-shift-left . g$7159$1c1CVa)
        (bitwise-arithmetic-shift . g$12168$1c1CVa)
        (zero? . g$12167$1c1CVa)
        (vector? . g$12166$1c1CVa)
        (vector-set! . g$12165$1c1CVa)
        (vector-ref . g$12164$1c1CVa)
        (vector-map . g$12163$1c1CVa)
        (vector-length . g$12162$1c1CVa)
        (vector-for-each . g$12161$1c1CVa)
        (vector-fill! . g$12160$1c1CVa)
        (vector->list . g$12159$1c1CVa)
        (vector . g$12158$1c1CVa)
        (values . g$12157$1c1CVa)
        (truncate . g$12156$1c1CVa)
        (tan . g$12155$1c1CVa)
        (symbol? . g$12154$1c1CVa)
        (symbol=? . g$5844$1c1CVa)
        (symbol->string . g$12153$1c1CVa)
        (substring . g$12152$1c1CVa)
        (string? . g$12151$1c1CVa)
        (string>? . g$5841$1c1CVa)
        (string>=? . g$5843$1c1CVa)
        (string=? . g$5839$1c1CVa)
        (string<? . g$5840$1c1CVa)
        (string<=? . g$5842$1c1CVa)
        (string-ref . g$12150$1c1CVa)
        (string-length . g$12149$1c1CVa)
        (string-for-each . g$12148$1c1CVa)
        (string-copy . g$12147$1c1CVa)
        (string-append . g$12146$1c1CVa)
        (string->symbol . g$12145$1c1CVa)
        (string->number . g$12144$1c1CVa)
        (string->list . g$12143$1c1CVa)
        (string . g$12142$1c1CVa)
        (sqrt . g$12141$1c1CVa)
        (sin . g$12140$1c1CVa)
        (round . g$12139$1c1CVa)
        (reverse . g$12138$1c1CVa)
        (real? . g$12137$1c1CVa)
        (real-valued? . g$12136$1c1CVa)
        (real-part . g$12135$1c1CVa)
        (rationalize . g$5897$1c1CVa)
        (rational? . g$12134$1c1CVa)
        (rational-valued? . g$12133$1c1CVa)
        (procedure? . g$12132$1c1CVa)
        (positive? . g$12131$1c1CVa)
        (pair? . g$12130$1c1CVa)
        (odd? . g$12129$1c1CVa)
        (numerator . g$12128$1c1CVa)
        (number? . g$12127$1c1CVa)
        (number->string . g$12126$1c1CVa)
        (null? . g$12125$1c1CVa)
        (not . g$12124$1c1CVa)
        (negative? . g$12123$1c1CVa)
        (nan? . g$12122$1c1CVa)
        (min . g$12121$1c1CVa)
        (max . g$12120$1c1CVa)
        (map . g$12119$1c1CVa)
        (make-vector . g$12118$1c1CVa)
        (make-string . g$12117$1c1CVa)
        (make-rectangular . g$12116$1c1CVa)
        (make-polar . g$12115$1c1CVa)
        (magnitude . g$12114$1c1CVa)
        (log . g$12113$1c1CVa)
        (list? . g$12112$1c1CVa)
        (list-tail . g$12111$1c1CVa)
        (list-ref . g$12110$1c1CVa)
        (list->vector . g$12109$1c1CVa)
        (list->string . g$12108$1c1CVa)
        (list . g$12107$1c1CVa)
        (length . g$12106$1c1CVa)
        (lcm . g$12105$1c1CVa)
        (integer? . g$12104$1c1CVa)
        (integer-valued? . g$12103$1c1CVa)
        (integer->char . g$12102$1c1CVa)
        (infinite? . g$12101$1c1CVa)
        (inexact? . g$12100$1c1CVa)
        (inexact . g$12099$1c1CVa)
        (imag-part . g$12098$1c1CVa)
        (gcd . g$12097$1c1CVa)
        (for-each . g$12096$1c1CVa)
        (floor . g$12095$1c1CVa)
        (finite? . g$12094$1c1CVa)
        (expt . g$12093$1c1CVa)
        (exp . g$12092$1c1CVa)
        (exact? . g$12091$1c1CVa)
        (exact-integer-sqrt . g$12090$1c1CVa)
        (exact . g$12089$1c1CVa)
        (even? . g$12088$1c1CVa)
        (error . g$12087$1c1CVa)
        (eqv? . g$12086$1c1CVa)
        (equal? . g$12085$1c1CVa)
        (eq? . g$12084$1c1CVa)
        (dynamic-wind . g$12083$1c1CVa)
        (div0-and-mod0 . g$12082$1c1CVa)
        (mod0 . g$12081$1c1CVa)
        (div0 . g$12080$1c1CVa)
        (div-and-mod . g$12079$1c1CVa)
        (mod . g$12078$1c1CVa)
        (div . g$12077$1c1CVa)
        (denominator . g$12076$1c1CVa)
        (cos . g$12075$1c1CVa)
        (cons . g$12074$1c1CVa)
        (complex? . g$12073$1c1CVa)
        (char? . g$12072$1c1CVa)
        (char>? . g$5894$1c1CVa)
        (char>=? . g$5896$1c1CVa)
        (char=? . g$5892$1c1CVa)
        (char<? . g$5893$1c1CVa)
        (char<=? . g$5895$1c1CVa)
        (char->integer . g$12071$1c1CVa)
        (ceiling . g$12070$1c1CVa)
        (call-with-values . g$12069$1c1CVa)
        (call/cc . g$12068$1c1CVa)
        (call-with-current-continuation . g$12067$1c1CVa)
        (cddddr . g$5792$1c1CVa)
        (cdddar . g$5791$1c1CVa)
        (cddadr . g$5790$1c1CVa)
        (cddaar . g$5789$1c1CVa)
        (cdaddr . g$5788$1c1CVa)
        (cdadar . g$5787$1c1CVa)
        (cdaadr . g$5786$1c1CVa)
        (cdaaar . g$5785$1c1CVa)
        (cadddr . g$5784$1c1CVa)
        (caddar . g$5783$1c1CVa)
        (cadadr . g$5782$1c1CVa)
        (cadaar . g$5781$1c1CVa)
        (caaddr . g$5780$1c1CVa)
        (caadar . g$5779$1c1CVa)
        (caaadr . g$5778$1c1CVa)
        (caaaar . g$5777$1c1CVa)
        (cdddr . g$5776$1c1CVa)
        (cddar . g$5775$1c1CVa)
        (cdadr . g$5774$1c1CVa)
        (cdaar . g$5773$1c1CVa)
        (caddr . g$5772$1c1CVa)
        (cadar . g$5771$1c1CVa)
        (caadr . g$5770$1c1CVa)
        (caaar . g$5769$1c1CVa)
        (cddr . g$5768$1c1CVa)
        (cdar . g$5767$1c1CVa)
        (cadr . g$5766$1c1CVa)
        (caar . g$5765$1c1CVa)
        (cdr . g$12066$1c1CVa)
        (car . g$12065$1c1CVa)
        (boolean? . g$12064$1c1CVa)
        (boolean=? . g$5845$1c1CVa)
        (atan . g$12063$1c1CVa)
        (assertion-violation . g$12062$1c1CVa)
        (asin . g$12061$1c1CVa)
        (apply . g$12060$1c1CVa)
        (append . g$12059$1c1CVa)
        (angle . g$12058$1c1CVa)
        (acos . g$12057$1c1CVa)
        (abs . g$12056$1c1CVa)
        (/ . g$12055$1c1CVa)
        (* . g$12054$1c1CVa)
        (- . g$12053$1c1CVa)
        (+ . g$12052$1c1CVa)
        (>= . g$12051$1c1CVa)
        (> . g$12050$1c1CVa)
        (= . g$12049$1c1CVa)
        (<= . g$12048$1c1CVa)
        (< . g$12047$1c1CVa)
        (&no-nans . g$12019$1c1CVa)
        (&no-infinities . g$12018$1c1CVa)
        (&i/o-encoding . g$12017$1c1CVa)
        (&i/o-decoding . g$12016$1c1CVa)
        (&i/o-port . g$12015$1c1CVa)
        (&i/o-file-does-not-exist . g$12014$1c1CVa)
        (&i/o-file-already-exists . g$12013$1c1CVa)
        (&i/o-file-is-read-only . g$12012$1c1CVa)
        (&i/o-file-protection . g$12011$1c1CVa)
        (&i/o-filename . g$12010$1c1CVa)
        (&i/o-invalid-position . g$12009$1c1CVa)
        (&i/o-write . g$12008$1c1CVa)
        (&i/o-read . g$12007$1c1CVa)
        (&i/o . g$12006$1c1CVa)
        (&non-continuable . g$12005$1c1CVa)
        (&undefined . g$12004$1c1CVa)
        (&syntax . g$12003$1c1CVa)
        (&lexical . g$12002$1c1CVa)
        (&implementation-restriction . g$12001$1c1CVa)
        (&who . g$11999$1c1CVa)
        (&irritants . g$11998$1c1CVa)
        (&assertion . g$11997$1c1CVa)
        (&violation . g$11996$1c1CVa)
        (&error . g$11995$1c1CVa)
        (&serious . g$11994$1c1CVa)
        (&warning . g$11993$1c1CVa)
        (&message . g$11992$1c1CVa)
        (&condition . g$11991$1c1CVa)
        (define-condition-type . g$11990$1c1CVa)
        (define-enumeration . g$11989$1c1CVa)
        (define-record-type . g$11988$1c1CVa)
        (parent-rtd . g$11987$1c1CVa)
        (nongenerative . g$11986$1c1CVa)
        (opaque . g$11985$1c1CVa)
        (sealed . g$11984$1c1CVa)
        (protocol . g$11983$1c1CVa)
        (parent . g$11982$1c1CVa)
        (immutable . g$11981$1c1CVa)
        (mutable . g$11980$1c1CVa)
        (fields . g$11979$1c1CVa)
        (error-handling-mode . g$11978$1c1CVa)
        (file-options . g$11977$1c1CVa)
        (buffer-mode . g$11976$1c1CVa)
        (eol-style . g$11975$1c1CVa)
        (guard . g$11974$1c1CVa)
        (unsyntax-splicing . g$11968$1c1CVa)
        (unsyntax . g$11967$1c1CVa)
        (unquote-splicing . g$11966$1c1CVa)
        (unquote . g$11965$1c1CVa)
        (_ . g$11964$1c1CVa)
        (else . g$11963$1c1CVa)
        (=> . g$11962$1c1CVa)
        (... . g$11961$1c1CVa)
        (assert . g$11960$1c1CVa)
        (endianness . g$11959$1c1CVa)
        (or . g$11956$1c1CVa)
        (and . g$11955$1c1CVa)
        (do . g$11954$1c1CVa)
        (cond . g$11953$1c1CVa)
        (let* . g$11952$1c1CVa)
        (let . g$11951$1c1CVa)
        (identifier-syntax . g$11950$1c1CVa)
        (with-syntax . g$11949$1c1CVa)
        (quasisyntax . g$11948$1c1CVa)
        (quasiquote . g$11947$1c1CVa)
        (syntax-rules . g$11946$1c1CVa)
        (let-values . g$11942$1c1CVa)
        (let*-values . g$11941$1c1CVa)
        (record-constructor-descriptor . g$11940$1c1CVa)
        (record-type-descriptor . g$11939$1c1CVa)
        (case . g$11937$1c1CVa)
        (unless . g$11935$1c1CVa)
        (when . g$11934$1c1CVa)
        (if . g$11933$1c1CVa)
        (letrec* . g$11932$1c1CVa)
        (letrec . g$11931$1c1CVa)
        (case-lambda . g$11929$1c1CVa)
        (lambda . g$11928$1c1CVa)
        (syntax . g$11927$1c1CVa)
        (syntax-case . g$11926$1c1CVa)
        (quote . g$11925$1c1CVa)
        (letrec-syntax . g$11923$1c1CVa)
        (let-syntax . g$11922$1c1CVa)
        (set! . g$11921$1c1CVa)
        (import . g$11920$1c1CVa)
        (library . g$11919$1c1CVa)
        (begin . g$11918$1c1CVa)
        (define-syntax . g$11916$1c1CVa)
        (define . g$11915$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12544$1c1CVa
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8948$1c1CVa)
        (scheme-report-environment . g$8923$1c1CVa)
        (quotient . g$6872$1c1CVa)
        (null-environment . g$8922$1c1CVa)
        (remainder . g$6873$1c1CVa)
        (modulo . g$6874$1c1CVa)
        (inexact->exact . g$12310$1c1CVa)
        (force . g$6876$1c1CVa)
        (exact->inexact . g$12309$1c1CVa)
        (delay . g$11958$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12545$1c1CVa
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11954$1c1CVa)
        (unless . g$11935$1c1CVa)
        (when . g$11934$1c1CVa)
        (case-lambda . g$11929$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12546$1c1CVa
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8925$1c1CVa) (environment . g$8921$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12547$1c1CVa
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12305$1c1CVa) (set-car! . g$12304$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12548$1c1CVa
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12307$1c1CVa) (string-set! . g$12306$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12549$1c1CVa
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12308$1c1CVa) (command-line . g$11879$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12550$1c1CVa
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8547$1c1CVa)
        (identifier? . g$8943$1c1CVa)
        (generate-temporaries . g$8932$1c1CVa)
        (free-identifier=? . g$8933$1c1CVa)
        (syntax->datum . g$8945$1c1CVa)
        (datum->syntax . g$8944$1c1CVa)
        (bound-identifier=? . g$8934$1c1CVa)
        (syntax-violation . g$8942$1c1CVa)
        (unsyntax-splicing . g$11968$1c1CVa)
        (unsyntax . g$11967$1c1CVa)
        (_ . g$11964$1c1CVa)
        (... . g$11961$1c1CVa)
        (with-syntax . g$11949$1c1CVa)
        (quasisyntax . g$11948$1c1CVa)
        (syntax . g$11927$1c1CVa)
        (syntax-case . g$11926$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12551$1c1CVa
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6379$1c1CVa)
        (file-exists? . g$6378$1c1CVa)
        (make-i/o-write-error . g$7320$1c1CVa)
        (make-i/o-read-error . g$7306$1c1CVa)
        (make-i/o-port-error . g$7425$1c1CVa)
        (make-i/o-invalid-position-error . g$7335$1c1CVa)
        (make-i/o-filename-error . g$7352$1c1CVa)
        (make-i/o-file-protection-error . g$7368$1c1CVa)
        (make-i/o-file-is-read-only-error . g$7382$1c1CVa)
        (make-i/o-file-does-not-exist-error . g$7410$1c1CVa)
        (make-i/o-file-already-exists-error . g$7396$1c1CVa)
        (make-i/o-error . g$7292$1c1CVa)
        (i/o-write-error? . g$7321$1c1CVa)
        (i/o-read-error? . g$7307$1c1CVa)
        (i/o-port-error? . g$7427$1c1CVa)
        (i/o-invalid-position-error? . g$7337$1c1CVa)
        (i/o-error-position . g$7338$1c1CVa)
        (i/o-filename-error? . g$7354$1c1CVa)
        (i/o-file-protection-error? . g$7369$1c1CVa)
        (i/o-file-is-read-only-error? . g$7383$1c1CVa)
        (i/o-file-does-not-exist-error? . g$7411$1c1CVa)
        (i/o-file-already-exists-error? . g$7397$1c1CVa)
        (i/o-error? . g$7293$1c1CVa)
        (i/o-error-port . g$7428$1c1CVa)
        (i/o-error-filename . g$7355$1c1CVa)
        (&i/o-port . g$12015$1c1CVa)
        (&i/o-file-does-not-exist . g$12014$1c1CVa)
        (&i/o-file-already-exists . g$12013$1c1CVa)
        (&i/o-file-is-read-only . g$12012$1c1CVa)
        (&i/o-file-protection . g$12011$1c1CVa)
        (&i/o-filename . g$12010$1c1CVa)
        (&i/o-invalid-position . g$12009$1c1CVa)
        (&i/o-write . g$12008$1c1CVa)
        (&i/o-read . g$12007$1c1CVa)
        (&i/o . g$12006$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12552$1c1CVa
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12403$1c1CVa)
        (vector-sort . g$12402$1c1CVa)
        (list-sort . g$6892$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12553$1c1CVa
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12167$1c1CVa)
        (vector? . g$12166$1c1CVa)
        (vector-set! . g$12165$1c1CVa)
        (vector-ref . g$12164$1c1CVa)
        (vector-map . g$12163$1c1CVa)
        (vector-length . g$12162$1c1CVa)
        (vector-for-each . g$12161$1c1CVa)
        (vector-fill! . g$12160$1c1CVa)
        (vector->list . g$12159$1c1CVa)
        (vector . g$12158$1c1CVa)
        (values . g$12157$1c1CVa)
        (truncate . g$12156$1c1CVa)
        (tan . g$12155$1c1CVa)
        (symbol? . g$12154$1c1CVa)
        (symbol=? . g$5844$1c1CVa)
        (symbol->string . g$12153$1c1CVa)
        (substring . g$12152$1c1CVa)
        (string? . g$12151$1c1CVa)
        (string>? . g$5841$1c1CVa)
        (string>=? . g$5843$1c1CVa)
        (string=? . g$5839$1c1CVa)
        (string<? . g$5840$1c1CVa)
        (string<=? . g$5842$1c1CVa)
        (string-ref . g$12150$1c1CVa)
        (string-length . g$12149$1c1CVa)
        (string-for-each . g$12148$1c1CVa)
        (string-copy . g$12147$1c1CVa)
        (string-append . g$12146$1c1CVa)
        (string->symbol . g$12145$1c1CVa)
        (string->number . g$12144$1c1CVa)
        (string->list . g$12143$1c1CVa)
        (string . g$12142$1c1CVa)
        (sqrt . g$12141$1c1CVa)
        (sin . g$12140$1c1CVa)
        (round . g$12139$1c1CVa)
        (reverse . g$12138$1c1CVa)
        (real? . g$12137$1c1CVa)
        (real-valued? . g$12136$1c1CVa)
        (real-part . g$12135$1c1CVa)
        (rationalize . g$5897$1c1CVa)
        (rational? . g$12134$1c1CVa)
        (rational-valued? . g$12133$1c1CVa)
        (procedure? . g$12132$1c1CVa)
        (positive? . g$12131$1c1CVa)
        (pair? . g$12130$1c1CVa)
        (odd? . g$12129$1c1CVa)
        (numerator . g$12128$1c1CVa)
        (number? . g$12127$1c1CVa)
        (number->string . g$12126$1c1CVa)
        (null? . g$12125$1c1CVa)
        (not . g$12124$1c1CVa)
        (negative? . g$12123$1c1CVa)
        (nan? . g$12122$1c1CVa)
        (min . g$12121$1c1CVa)
        (max . g$12120$1c1CVa)
        (map . g$12119$1c1CVa)
        (make-vector . g$12118$1c1CVa)
        (make-string . g$12117$1c1CVa)
        (make-rectangular . g$12116$1c1CVa)
        (make-polar . g$12115$1c1CVa)
        (magnitude . g$12114$1c1CVa)
        (log . g$12113$1c1CVa)
        (list? . g$12112$1c1CVa)
        (list-tail . g$12111$1c1CVa)
        (list-ref . g$12110$1c1CVa)
        (list->vector . g$12109$1c1CVa)
        (list->string . g$12108$1c1CVa)
        (list . g$12107$1c1CVa)
        (length . g$12106$1c1CVa)
        (lcm . g$12105$1c1CVa)
        (integer? . g$12104$1c1CVa)
        (integer-valued? . g$12103$1c1CVa)
        (integer->char . g$12102$1c1CVa)
        (infinite? . g$12101$1c1CVa)
        (inexact? . g$12100$1c1CVa)
        (inexact . g$12099$1c1CVa)
        (imag-part . g$12098$1c1CVa)
        (gcd . g$12097$1c1CVa)
        (for-each . g$12096$1c1CVa)
        (floor . g$12095$1c1CVa)
        (finite? . g$12094$1c1CVa)
        (expt . g$12093$1c1CVa)
        (exp . g$12092$1c1CVa)
        (exact? . g$12091$1c1CVa)
        (exact-integer-sqrt . g$12090$1c1CVa)
        (exact . g$12089$1c1CVa)
        (even? . g$12088$1c1CVa)
        (error . g$12087$1c1CVa)
        (eqv? . g$12086$1c1CVa)
        (equal? . g$12085$1c1CVa)
        (eq? . g$12084$1c1CVa)
        (dynamic-wind . g$12083$1c1CVa)
        (div0-and-mod0 . g$12082$1c1CVa)
        (mod0 . g$12081$1c1CVa)
        (div0 . g$12080$1c1CVa)
        (div-and-mod . g$12079$1c1CVa)
        (mod . g$12078$1c1CVa)
        (div . g$12077$1c1CVa)
        (denominator . g$12076$1c1CVa)
        (cos . g$12075$1c1CVa)
        (cons . g$12074$1c1CVa)
        (complex? . g$12073$1c1CVa)
        (char? . g$12072$1c1CVa)
        (char>? . g$5894$1c1CVa)
        (char>=? . g$5896$1c1CVa)
        (char=? . g$5892$1c1CVa)
        (char<? . g$5893$1c1CVa)
        (char<=? . g$5895$1c1CVa)
        (char->integer . g$12071$1c1CVa)
        (ceiling . g$12070$1c1CVa)
        (call-with-values . g$12069$1c1CVa)
        (call/cc . g$12068$1c1CVa)
        (call-with-current-continuation . g$12067$1c1CVa)
        (cddddr . g$5792$1c1CVa)
        (cdddar . g$5791$1c1CVa)
        (cddadr . g$5790$1c1CVa)
        (cddaar . g$5789$1c1CVa)
        (cdaddr . g$5788$1c1CVa)
        (cdadar . g$5787$1c1CVa)
        (cdaadr . g$5786$1c1CVa)
        (cdaaar . g$5785$1c1CVa)
        (cadddr . g$5784$1c1CVa)
        (caddar . g$5783$1c1CVa)
        (cadadr . g$5782$1c1CVa)
        (cadaar . g$5781$1c1CVa)
        (caaddr . g$5780$1c1CVa)
        (caadar . g$5779$1c1CVa)
        (caaadr . g$5778$1c1CVa)
        (caaaar . g$5777$1c1CVa)
        (cdddr . g$5776$1c1CVa)
        (cddar . g$5775$1c1CVa)
        (cdadr . g$5774$1c1CVa)
        (cdaar . g$5773$1c1CVa)
        (caddr . g$5772$1c1CVa)
        (cadar . g$5771$1c1CVa)
        (caadr . g$5770$1c1CVa)
        (caaar . g$5769$1c1CVa)
        (cddr . g$5768$1c1CVa)
        (cdar . g$5767$1c1CVa)
        (cadr . g$5766$1c1CVa)
        (caar . g$5765$1c1CVa)
        (cdr . g$12066$1c1CVa)
        (car . g$12065$1c1CVa)
        (boolean? . g$12064$1c1CVa)
        (boolean=? . g$5845$1c1CVa)
        (atan . g$12063$1c1CVa)
        (assertion-violation . g$12062$1c1CVa)
        (asin . g$12061$1c1CVa)
        (apply . g$12060$1c1CVa)
        (append . g$12059$1c1CVa)
        (angle . g$12058$1c1CVa)
        (acos . g$12057$1c1CVa)
        (abs . g$12056$1c1CVa)
        (/ . g$12055$1c1CVa)
        (* . g$12054$1c1CVa)
        (- . g$12053$1c1CVa)
        (+ . g$12052$1c1CVa)
        (>= . g$12051$1c1CVa)
        (> . g$12050$1c1CVa)
        (= . g$12049$1c1CVa)
        (<= . g$12048$1c1CVa)
        (< . g$12047$1c1CVa)
        (unquote-splicing . g$11966$1c1CVa)
        (unquote . g$11965$1c1CVa)
        (_ . g$11964$1c1CVa)
        (else . g$11963$1c1CVa)
        (=> . g$11962$1c1CVa)
        (... . g$11961$1c1CVa)
        (assert . g$11960$1c1CVa)
        (or . g$11956$1c1CVa)
        (and . g$11955$1c1CVa)
        (cond . g$11953$1c1CVa)
        (let* . g$11952$1c1CVa)
        (let . g$11951$1c1CVa)
        (identifier-syntax . g$11950$1c1CVa)
        (quasiquote . g$11947$1c1CVa)
        (syntax-rules . g$11946$1c1CVa)
        (let-values . g$11942$1c1CVa)
        (let*-values . g$11941$1c1CVa)
        (case . g$11937$1c1CVa)
        (if . g$11933$1c1CVa)
        (letrec* . g$11932$1c1CVa)
        (letrec . g$11931$1c1CVa)
        (lambda . g$11928$1c1CVa)
        (quote . g$11925$1c1CVa)
        (letrec-syntax . g$11923$1c1CVa)
        (let-syntax . g$11922$1c1CVa)
        (set! . g$11921$1c1CVa)
        (begin . g$11918$1c1CVa)
        (define-syntax . g$11916$1c1CVa)
        (define . g$11915$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12554$1c1CVa
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6459$1c1CVa)
        (remv . g$6460$1c1CVa)
        (remp . g$6445$1c1CVa)
        (remq . g$6461$1c1CVa)
        (partition . g$6444$1c1CVa)
        (memv . g$12303$1c1CVa)
        (memq . g$12302$1c1CVa)
        (memp . g$6451$1c1CVa)
        (member . g$6450$1c1CVa)
        (exists . g$6455$1c1CVa)
        (for-all . g$6454$1c1CVa)
        (fold-right . g$6458$1c1CVa)
        (fold-left . g$6457$1c1CVa)
        (find . g$6443$1c1CVa)
        (filter . g$6446$1c1CVa)
        (cons* . g$6456$1c1CVa)
        (assv . g$6447$1c1CVa)
        (assq . g$12301$1c1CVa)
        (assp . g$6449$1c1CVa)
        (assoc . g$6448$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12555$1c1CVa
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7488$1c1CVa)
        (call-with-input-file . g$7487$1c1CVa)
        (write-char . g$12389$1c1CVa)
        (write . g$12388$1c1CVa)
        (with-output-to-file . g$7486$1c1CVa)
        (with-input-from-file . g$7485$1c1CVa)
        (read-char . g$12387$1c1CVa)
        (read . g$12386$1c1CVa)
        (peek-char . g$12385$1c1CVa)
        (open-output-file . g$12384$1c1CVa)
        (open-input-file . g$12383$1c1CVa)
        (newline . g$12382$1c1CVa)
        (display . g$12381$1c1CVa)
        (close-output-port . g$12380$1c1CVa)
        (close-input-port . g$12379$1c1CVa)
        (eof-object? . g$12378$1c1CVa)
        (eof-object . g$12377$1c1CVa)
        (current-error-port . g$12376$1c1CVa)
        (current-output-port . g$12375$1c1CVa)
        (current-input-port . g$12374$1c1CVa)
        (output-port? . g$12373$1c1CVa)
        (input-port? . g$12372$1c1CVa)
        (make-i/o-write-error . g$7320$1c1CVa)
        (make-i/o-read-error . g$7306$1c1CVa)
        (make-i/o-port-error . g$7425$1c1CVa)
        (make-i/o-invalid-position-error . g$7335$1c1CVa)
        (make-i/o-filename-error . g$7352$1c1CVa)
        (make-i/o-file-protection-error . g$7368$1c1CVa)
        (make-i/o-file-is-read-only-error . g$7382$1c1CVa)
        (make-i/o-file-does-not-exist-error . g$7410$1c1CVa)
        (make-i/o-file-already-exists-error . g$7396$1c1CVa)
        (make-i/o-error . g$7292$1c1CVa)
        (i/o-write-error? . g$7321$1c1CVa)
        (i/o-read-error? . g$7307$1c1CVa)
        (i/o-port-error? . g$7427$1c1CVa)
        (i/o-invalid-position-error? . g$7337$1c1CVa)
        (i/o-error-position . g$7338$1c1CVa)
        (i/o-filename-error? . g$7354$1c1CVa)
        (i/o-file-protection-error? . g$7369$1c1CVa)
        (i/o-file-is-read-only-error? . g$7383$1c1CVa)
        (i/o-file-does-not-exist-error? . g$7411$1c1CVa)
        (i/o-file-already-exists-error? . g$7397$1c1CVa)
        (i/o-error? . g$7293$1c1CVa)
        (i/o-error-port . g$7428$1c1CVa)
        (i/o-error-filename . g$7355$1c1CVa)
        (&i/o-port . g$12015$1c1CVa)
        (&i/o-file-does-not-exist . g$12014$1c1CVa)
        (&i/o-file-already-exists . g$12013$1c1CVa)
        (&i/o-file-is-read-only . g$12012$1c1CVa)
        (&i/o-file-protection . g$12011$1c1CVa)
        (&i/o-filename . g$12010$1c1CVa)
        (&i/o-invalid-position . g$12009$1c1CVa)
        (&i/o-write . g$12008$1c1CVa)
        (&i/o-read . g$12007$1c1CVa)
        (&i/o . g$12006$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12556$1c1CVa
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12332$1c1CVa)
        (utf32->string . g$12292$1c1CVa)
        (utf16->string . g$12291$1c1CVa)
        (utf8->string . g$12290$1c1CVa)
        (uint-list->bytevector . g$12289$1c1CVa)
        (u8-list->bytevector . g$12288$1c1CVa)
        (string->utf8 . g$12287$1c1CVa)
        (string->utf32 . g$12286$1c1CVa)
        (string->utf16 . g$12285$1c1CVa)
        (sint-list->bytevector . g$12284$1c1CVa)
        (native-endianness . g$6535$1c1CVa)
        (bytevector? . g$12283$1c1CVa)
        (bytevector=? . g$12282$1c1CVa)
        (bytevector-uint-set! . g$12281$1c1CVa)
        (bytevector-uint-ref . g$12280$1c1CVa)
        (bytevector-u8-set! . g$12279$1c1CVa)
        (bytevector-u8-ref . g$12278$1c1CVa)
        (bytevector-u64-set! . g$6556$1c1CVa)
        (bytevector-u64-ref . g$6552$1c1CVa)
        (bytevector-u64-native-set! . g$6558$1c1CVa)
        (bytevector-u64-native-ref . g$6554$1c1CVa)
        (bytevector-u32-set! . g$6548$1c1CVa)
        (bytevector-u32-ref . g$6544$1c1CVa)
        (bytevector-u32-native-set! . g$6550$1c1CVa)
        (bytevector-u32-native-ref . g$6546$1c1CVa)
        (bytevector-u16-set! . g$6540$1c1CVa)
        (bytevector-u16-ref . g$6536$1c1CVa)
        (bytevector-u16-native-set! . g$6542$1c1CVa)
        (bytevector-u16-native-ref . g$6538$1c1CVa)
        (bytevector-sint-set! . g$12277$1c1CVa)
        (bytevector-sint-ref . g$12276$1c1CVa)
        (bytevector-s8-set! . g$12275$1c1CVa)
        (bytevector-s8-ref . g$12274$1c1CVa)
        (bytevector-s64-set! . g$6557$1c1CVa)
        (bytevector-s64-ref . g$6553$1c1CVa)
        (bytevector-s64-native-set! . g$6559$1c1CVa)
        (bytevector-s64-native-ref . g$6555$1c1CVa)
        (bytevector-s32-set! . g$6549$1c1CVa)
        (bytevector-s32-ref . g$6545$1c1CVa)
        (bytevector-s32-native-set! . g$6551$1c1CVa)
        (bytevector-s32-native-ref . g$6547$1c1CVa)
        (bytevector-s16-set! . g$6541$1c1CVa)
        (bytevector-s16-ref . g$6537$1c1CVa)
        (bytevector-s16-native-set! . g$6543$1c1CVa)
        (bytevector-s16-native-ref . g$6539$1c1CVa)
        (bytevector-length . g$12273$1c1CVa)
        (bytevector-ieee-single-set! . g$12272$1c1CVa)
        (bytevector-ieee-single-ref . g$12271$1c1CVa)
        (bytevector-ieee-single-native-set! . g$6562$1c1CVa)
        (bytevector-ieee-single-native-ref . g$6560$1c1CVa)
        (bytevector-ieee-double-set! . g$12270$1c1CVa)
        (bytevector-ieee-double-ref . g$12269$1c1CVa)
        (bytevector-ieee-double-native-set! . g$6563$1c1CVa)
        (bytevector-ieee-double-native-ref . g$6561$1c1CVa)
        (bytevector-fill! . g$12268$1c1CVa)
        (bytevector-copy! . g$12267$1c1CVa)
        (bytevector-copy . g$12266$1c1CVa)
        (bytevector->uint-list . g$12265$1c1CVa)
        (bytevector->u8-list . g$12264$1c1CVa)
        (bytevector->sint-list . g$12263$1c1CVa)
        (endianness . g$11959$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12557$1c1CVa
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12439$1c1CVa)
        (string-titlecase . g$12438$1c1CVa)
        (string-normalize-nfkd . g$12437$1c1CVa)
        (string-normalize-nfkc . g$12436$1c1CVa)
        (string-normalize-nfd . g$12435$1c1CVa)
        (string-normalize-nfc . g$12434$1c1CVa)
        (string-foldcase . g$12433$1c1CVa)
        (string-downcase . g$12432$1c1CVa)
        (string-ci>? . g$7018$1c1CVa)
        (string-ci>=? . g$7020$1c1CVa)
        (string-ci=? . g$7016$1c1CVa)
        (string-ci<? . g$7017$1c1CVa)
        (string-ci<=? . g$7019$1c1CVa)
        (char-whitespace? . g$12431$1c1CVa)
        (char-upper-case? . g$12430$1c1CVa)
        (char-title-case? . g$12429$1c1CVa)
        (char-numeric? . g$12428$1c1CVa)
        (char-lower-case? . g$12427$1c1CVa)
        (char-general-category . g$12426$1c1CVa)
        (char-upcase . g$12425$1c1CVa)
        (char-titlecase . g$12424$1c1CVa)
        (char-foldcase . g$12423$1c1CVa)
        (char-downcase . g$12422$1c1CVa)
        (char-ci>? . g$7069$1c1CVa)
        (char-ci>=? . g$7071$1c1CVa)
        (char-ci=? . g$7067$1c1CVa)
        (char-ci<? . g$7068$1c1CVa)
        (char-ci<=? . g$7070$1c1CVa)
        (char-alphabetic? . g$12421$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12558$1c1CVa
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12300$1c1CVa)
        (raise-continuable . g$12299$1c1CVa)
        (raise . g$12298$1c1CVa)
        (guard . g$11974$1c1CVa)
        (else . g$11963$1c1CVa)
        (=> . g$11962$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12559$1c1CVa
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7161$1c1CVa)
        (bitwise-reverse-bit-field . g$12178$1c1CVa)
        (bitwise-length . g$12177$1c1CVa)
        (bitwise-if . g$7155$1c1CVa)
        (bitwise-first-bit-set . g$12176$1c1CVa)
        (bitwise-copy-bit-field . g$7158$1c1CVa)
        (bitwise-copy-bit . g$7156$1c1CVa)
        (bitwise-bit-set? . g$12175$1c1CVa)
        (bitwise-bit-field . g$12174$1c1CVa)
        (bitwise-bit-count . g$12173$1c1CVa)
        (bitwise-xor . g$12172$1c1CVa)
        (bitwise-ior . g$12171$1c1CVa)
        (bitwise-and . g$12170$1c1CVa)
        (bitwise-not . g$12169$1c1CVa)
        (bitwise-arithmetic-shift-right . g$7160$1c1CVa)
        (bitwise-arithmetic-shift-left . g$7159$1c1CVa)
        (bitwise-arithmetic-shift . g$12168$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12560$1c1CVa
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12216$1c1CVa)
        (fxxor . g$12215$1c1CVa)
        (fxrotate-bit-field . g$7209$1c1CVa)
        (fxreverse-bit-field . g$12214$1c1CVa)
        (fxpositive? . g$12213$1c1CVa)
        (fxodd? . g$12212$1c1CVa)
        (fxnot . g$12211$1c1CVa)
        (fxnegative? . g$12210$1c1CVa)
        (fxmod0 . g$12209$1c1CVa)
        (fxmod . g$12208$1c1CVa)
        (fxmin . g$12207$1c1CVa)
        (fxmax . g$12206$1c1CVa)
        (fxlength . g$12205$1c1CVa)
        (fxior . g$12204$1c1CVa)
        (fxif . g$7203$1c1CVa)
        (fxfirst-bit-set . g$12203$1c1CVa)
        (fxeven? . g$12202$1c1CVa)
        (fxdiv0-and-mod0 . g$12201$1c1CVa)
        (fxdiv0 . g$12200$1c1CVa)
        (fxdiv-and-mod . g$12199$1c1CVa)
        (fxdiv . g$12198$1c1CVa)
        (fxcopy-bit-field . g$7206$1c1CVa)
        (fxcopy-bit . g$7204$1c1CVa)
        (fxbit-set? . g$12197$1c1CVa)
        (fxbit-field . g$7205$1c1CVa)
        (fxbit-count . g$12196$1c1CVa)
        (fxarithmetic-shift-right . g$7208$1c1CVa)
        (fxarithmetic-shift-left . g$7207$1c1CVa)
        (fxarithmetic-shift . g$12195$1c1CVa)
        (fxand . g$12194$1c1CVa)
        (fx>? . g$12193$1c1CVa)
        (fx>=? . g$12192$1c1CVa)
        (fx=? . g$12191$1c1CVa)
        (fx<? . g$12190$1c1CVa)
        (fx<=? . g$12189$1c1CVa)
        (fx-/carry . g$12188$1c1CVa)
        (fx- . g$12187$1c1CVa)
        (fx+/carry . g$12186$1c1CVa)
        (fx+ . g$12185$1c1CVa)
        (fx*/carry . g$12184$1c1CVa)
        (fx* . g$12183$1c1CVa)
        (greatest-fixnum . g$12182$1c1CVa)
        (least-fixnum . g$12181$1c1CVa)
        (fixnum-width . g$12180$1c1CVa)
        (fixnum? . g$12179$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12561$1c1CVa
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7278$1c1CVa)
        (no-infinities-violation? . g$7264$1c1CVa)
        (make-no-nans-violation . g$7277$1c1CVa)
        (make-no-infinities-violation . g$7263$1c1CVa)
        (real->flonum . g$12262$1c1CVa)
        (flzero? . g$12261$1c1CVa)
        (fltruncate . g$12260$1c1CVa)
        (fltan . g$12259$1c1CVa)
        (flsqrt . g$12258$1c1CVa)
        (flsin . g$12257$1c1CVa)
        (flround . g$12256$1c1CVa)
        (flpositive? . g$12255$1c1CVa)
        (flonum? . g$12254$1c1CVa)
        (flodd? . g$12253$1c1CVa)
        (flnumerator . g$12252$1c1CVa)
        (flnegative? . g$12251$1c1CVa)
        (flnan? . g$12250$1c1CVa)
        (flmod0 . g$12249$1c1CVa)
        (flmod . g$12248$1c1CVa)
        (flmin . g$12247$1c1CVa)
        (flmax . g$12246$1c1CVa)
        (fllog . g$12245$1c1CVa)
        (flinteger? . g$12244$1c1CVa)
        (flinfinite? . g$12243$1c1CVa)
        (flfloor . g$12242$1c1CVa)
        (flfinite? . g$12241$1c1CVa)
        (flexpt . g$12240$1c1CVa)
        (flexp . g$12239$1c1CVa)
        (fleven? . g$12238$1c1CVa)
        (fldiv0-and-mod0 . g$12237$1c1CVa)
        (fldiv0 . g$12236$1c1CVa)
        (fldiv-and-mod . g$12235$1c1CVa)
        (fldiv . g$12234$1c1CVa)
        (fldenominator . g$12233$1c1CVa)
        (flcos . g$12232$1c1CVa)
        (flceiling . g$12231$1c1CVa)
        (flatan . g$12230$1c1CVa)
        (flasin . g$12229$1c1CVa)
        (flacos . g$12228$1c1CVa)
        (flabs . g$12227$1c1CVa)
        (fl>? . g$12226$1c1CVa)
        (fl>=? . g$12225$1c1CVa)
        (fl=? . g$12224$1c1CVa)
        (fl<? . g$12223$1c1CVa)
        (fl<=? . g$12222$1c1CVa)
        (fl/ . g$12221$1c1CVa)
        (fl- . g$12220$1c1CVa)
        (fl+ . g$12219$1c1CVa)
        (fl* . g$12218$1c1CVa)
        (fixnum->flonum . g$12217$1c1CVa)
        (&no-nans . g$12019$1c1CVa)
        (&no-infinities . g$12018$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12562$1c1CVa
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12401$1c1CVa)
        (string-ci-hash . g$12400$1c1CVa)
        (string-hash . g$12399$1c1CVa)
        (equal-hash . g$12398$1c1CVa)
        (hashtable-equivalence-function . g$12397$1c1CVa)
        (make-hashtable . g$12396$1c1CVa)
        (hashtable-hash-function . g$12395$1c1CVa)
        (make-eqv-hashtable . g$6346$1c1CVa)
        (make-eq-hashtable . g$6345$1c1CVa)
        (hashtable? . g$12394$1c1CVa)
        (hashtable-update! . g$6352$1c1CVa)
        (hashtable-size . g$6347$1c1CVa)
        (hashtable-set! . g$6349$1c1CVa)
        (hashtable-ref . g$6348$1c1CVa)
        (hashtable-mutable? . g$12393$1c1CVa)
        (hashtable-keys . g$12392$1c1CVa)
        (hashtable-entries . g$12391$1c1CVa)
        (hashtable-delete! . g$6350$1c1CVa)
        (hashtable-copy . g$12390$1c1CVa)
        (hashtable-contains? . g$6351$1c1CVa)
        (hashtable-clear! . g$6353$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12563$1c1CVa
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12378$1c1CVa)
        (eof-object . g$12377$1c1CVa)
        (current-error-port . g$12376$1c1CVa)
        (current-output-port . g$12375$1c1CVa)
        (current-input-port . g$12374$1c1CVa)
        (output-port? . g$12373$1c1CVa)
        (input-port? . g$12372$1c1CVa)
        (utf-8-codec . g$12371$1c1CVa)
        (utf-16-codec . g$12370$1c1CVa)
        (transcoder-error-handling-mode . g$12369$1c1CVa)
        (transcoder-eol-style . g$12368$1c1CVa)
        (transcoder-codec . g$12367$1c1CVa)
        (transcoded-port . g$12366$1c1CVa)
        (textual-port? . g$12365$1c1CVa)
        (string->bytevector . g$12364$1c1CVa)
        (standard-output-port . g$12363$1c1CVa)
        (standard-input-port . g$12362$1c1CVa)
        (standard-error-port . g$12361$1c1CVa)
        (set-port-position! . g$12360$1c1CVa)
        (put-u8 . g$12359$1c1CVa)
        (put-string . g$12358$1c1CVa)
        (put-datum . g$12357$1c1CVa)
        (put-char . g$12356$1c1CVa)
        (put-bytevector . g$12355$1c1CVa)
        (port? . g$7464$1c1CVa)
        (port-transcoder . g$12354$1c1CVa)
        (port-position . g$12353$1c1CVa)
        (port-has-set-port-position!? . g$12352$1c1CVa)
        (port-has-port-position? . g$12351$1c1CVa)
        (port-eof? . g$12350$1c1CVa)
        (output-port-buffer-mode . g$12349$1c1CVa)
        (open-string-output-port . g$7463$1c1CVa)
        (open-string-input-port . g$12348$1c1CVa)
        (open-file-output-port . g$12347$1c1CVa)
        (open-file-input/output-port . g$12346$1c1CVa)
        (open-file-input-port . g$12345$1c1CVa)
        (open-bytevector-output-port . g$12344$1c1CVa)
        (open-bytevector-input-port . g$12343$1c1CVa)
        (native-transcoder . g$12342$1c1CVa)
        (native-eol-style . g$12341$1c1CVa)
        (make-transcoder . g$12340$1c1CVa)
        (latin-1-codec . g$12339$1c1CVa)
        (make-i/o-write-error . g$7320$1c1CVa)
        (make-i/o-read-error . g$7306$1c1CVa)
        (make-i/o-port-error . g$7425$1c1CVa)
        (make-i/o-invalid-position-error . g$7335$1c1CVa)
        (make-i/o-filename-error . g$7352$1c1CVa)
        (make-i/o-file-protection-error . g$7368$1c1CVa)
        (make-i/o-file-is-read-only-error . g$7382$1c1CVa)
        (make-i/o-file-does-not-exist-error . g$7410$1c1CVa)
        (make-i/o-file-already-exists-error . g$7396$1c1CVa)
        (make-i/o-error . g$7292$1c1CVa)
        (make-i/o-encoding-error . g$7456$1c1CVa)
        (make-i/o-decoding-error . g$7441$1c1CVa)
        (make-custom-textual-output-port . g$12338$1c1CVa)
        (make-custom-textual-input/output-port . g$12337$1c1CVa)
        (make-custom-textual-input-port . g$12336$1c1CVa)
        (make-custom-binary-output-port . g$12335$1c1CVa)
        (make-custom-binary-input/output-port . g$12334$1c1CVa)
        (make-custom-binary-input-port . g$12333$1c1CVa)
        (lookahead-u8 . g$12331$1c1CVa)
        (lookahead-char . g$12330$1c1CVa)
        (i/o-write-error? . g$7321$1c1CVa)
        (i/o-read-error? . g$7307$1c1CVa)
        (i/o-port-error? . g$7427$1c1CVa)
        (i/o-invalid-position-error? . g$7337$1c1CVa)
        (i/o-error-position . g$7338$1c1CVa)
        (i/o-filename-error? . g$7354$1c1CVa)
        (i/o-file-protection-error? . g$7369$1c1CVa)
        (i/o-file-is-read-only-error? . g$7383$1c1CVa)
        (i/o-file-does-not-exist-error? . g$7411$1c1CVa)
        (i/o-file-already-exists-error? . g$7397$1c1CVa)
        (i/o-error? . g$7293$1c1CVa)
        (i/o-error-port . g$7428$1c1CVa)
        (i/o-error-filename . g$7355$1c1CVa)
        (i/o-encoding-error? . g$7458$1c1CVa)
        (i/o-encoding-error-char . g$7459$1c1CVa)
        (i/o-decoding-error? . g$7442$1c1CVa)
        (get-u8 . g$12329$1c1CVa)
        (get-string-n! . g$12328$1c1CVa)
        (get-string-n . g$12327$1c1CVa)
        (get-string-all . g$12326$1c1CVa)
        (get-line . g$12325$1c1CVa)
        (get-datum . g$12324$1c1CVa)
        (get-char . g$12323$1c1CVa)
        (get-bytevector-some . g$12322$1c1CVa)
        (get-bytevector-n! . g$12321$1c1CVa)
        (get-bytevector-n . g$12320$1c1CVa)
        (get-bytevector-all . g$12319$1c1CVa)
        (flush-output-port . g$12318$1c1CVa)
        (close-port . g$12317$1c1CVa)
        (call-with-string-output-port . g$12316$1c1CVa)
        (call-with-port . g$12315$1c1CVa)
        (call-with-bytevector-output-port . g$12314$1c1CVa)
        (bytevector->string . g$12313$1c1CVa)
        (buffer-mode? . g$12312$1c1CVa)
        (binary-port? . g$12311$1c1CVa)
        (&i/o-encoding . g$12017$1c1CVa)
        (&i/o-decoding . g$12016$1c1CVa)
        (&i/o-port . g$12015$1c1CVa)
        (&i/o-file-does-not-exist . g$12014$1c1CVa)
        (&i/o-file-already-exists . g$12013$1c1CVa)
        (&i/o-file-is-read-only . g$12012$1c1CVa)
        (&i/o-file-protection . g$12011$1c1CVa)
        (&i/o-filename . g$12010$1c1CVa)
        (&i/o-invalid-position . g$12009$1c1CVa)
        (&i/o-write . g$12008$1c1CVa)
        (&i/o-read . g$12007$1c1CVa)
        (&i/o . g$12006$1c1CVa)
        (error-handling-mode . g$11978$1c1CVa)
        (file-options . g$11977$1c1CVa)
        (buffer-mode . g$11976$1c1CVa)
        (eol-style . g$11975$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12564$1c1CVa
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7545$1c1CVa)
        (enum-set=? . g$7552$1c1CVa)
        (enum-set-universe . g$7546$1c1CVa)
        (enum-set-union . g$7553$1c1CVa)
        (enum-set-subset? . g$7551$1c1CVa)
        (enum-set-projection . g$7557$1c1CVa)
        (enum-set-member? . g$7550$1c1CVa)
        (enum-set-intersection . g$7554$1c1CVa)
        (enum-set-indexer . g$7547$1c1CVa)
        (enum-set-difference . g$7555$1c1CVa)
        (enum-set-constructor . g$7548$1c1CVa)
        (enum-set-complement . g$7556$1c1CVa)
        (enum-set->list . g$7549$1c1CVa)
        (define-enumeration . g$11989$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12565$1c1CVa
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6783$1c1CVa)
        (warning? . g$6694$1c1CVa)
        (violation? . g$6736$1c1CVa)
        (undefined-violation? . g$6860$1c1CVa)
        (syntax-violation? . g$6844$1c1CVa)
        (syntax-violation-subform . g$6846$1c1CVa)
        (syntax-violation-form . g$6845$1c1CVa)
        (syntax-violation . g$8942$1c1CVa)
        (simple-conditions . g$12297$1c1CVa)
        (serious-condition? . g$6708$1c1CVa)
        (non-continuable-violation? . g$6798$1c1CVa)
        (message-condition? . g$6679$1c1CVa)
        (make-who-condition . g$6781$1c1CVa)
        (make-warning . g$6693$1c1CVa)
        (make-violation . g$6735$1c1CVa)
        (make-undefined-violation . g$6859$1c1CVa)
        (make-syntax-violation . g$6841$1c1CVa)
        (make-serious-condition . g$6707$1c1CVa)
        (make-non-continuable-violation . g$6797$1c1CVa)
        (make-message-condition . g$6677$1c1CVa)
        (make-lexical-violation . g$6825$1c1CVa)
        (make-irritants-condition . g$6764$1c1CVa)
        (make-implementation-restriction-violation . g$6811$1c1CVa)
        (make-error . g$6721$1c1CVa)
        (make-assertion-violation . g$6749$1c1CVa)
        (lexical-violation? . g$6826$1c1CVa)
        (irritants-condition? . g$6766$1c1CVa)
        (implementation-restriction-violation? . g$6812$1c1CVa)
        (error? . g$6722$1c1CVa)
        (condition-who . g$6784$1c1CVa)
        (condition-predicate . g$12296$1c1CVa)
        (condition-message . g$6680$1c1CVa)
        (condition-irritants . g$6767$1c1CVa)
        (condition-accessor . g$12295$1c1CVa)
        (condition . g$12294$1c1CVa)
        (assertion-violation? . g$6750$1c1CVa)
        (condition? . g$12293$1c1CVa)
        (&non-continuable . g$12005$1c1CVa)
        (&undefined . g$12004$1c1CVa)
        (&syntax . g$12003$1c1CVa)
        (&lexical . g$12002$1c1CVa)
        (&implementation-restriction . g$12001$1c1CVa)
        (&who . g$11999$1c1CVa)
        (&irritants . g$11998$1c1CVa)
        (&assertion . g$11997$1c1CVa)
        (&violation . g$11996$1c1CVa)
        (&error . g$11995$1c1CVa)
        (&serious . g$11994$1c1CVa)
        (&warning . g$11993$1c1CVa)
        (&message . g$11992$1c1CVa)
        (&condition . g$11991$1c1CVa)
        (define-condition-type . g$11990$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12566$1c1CVa
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12413$1c1CVa)
        (record-type-uid . g$12412$1c1CVa)
        (record-type-sealed? . g$12411$1c1CVa)
        (record-type-parent . g$12410$1c1CVa)
        (record-type-opaque? . g$12409$1c1CVa)
        (record-type-name . g$12408$1c1CVa)
        (record-type-generative? . g$12407$1c1CVa)
        (record-type-field-names . g$12406$1c1CVa)
        (record-rtd . g$12405$1c1CVa)
        (record-field-mutable? . g$12404$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12567$1c1CVa
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12420$1c1CVa)
        (record-predicate . g$12419$1c1CVa)
        (record-mutator . g$12418$1c1CVa)
        (record-constructor . g$12417$1c1CVa)
        (record-accessor . g$12416$1c1CVa)
        (make-record-type-descriptor . g$12415$1c1CVa)
        (make-record-constructor-descriptor . g$12414$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12568$1c1CVa
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11988$1c1CVa)
        (parent-rtd . g$11987$1c1CVa)
        (nongenerative . g$11986$1c1CVa)
        (opaque . g$11985$1c1CVa)
        (sealed . g$11984$1c1CVa)
        (protocol . g$11983$1c1CVa)
        (parent . g$11982$1c1CVa)
        (immutable . g$11981$1c1CVa)
        (mutable . g$11980$1c1CVa)
        (fields . g$11979$1c1CVa)
        (record-constructor-descriptor . g$11940$1c1CVa)
        (record-type-descriptor . g$11939$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12569$1c1CVa
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8817$1c1CVa)
        (&no-nans-rcd . g$12533$1c1CVa)
        (&no-nans-rtd . g$12532$1c1CVa)
        (&no-infinities-rcd . g$12531$1c1CVa)
        (&no-infinities-rtd . g$12530$1c1CVa)
        (&i/o-encoding-rcd . g$12529$1c1CVa)
        (&i/o-encoding-rtd . g$12528$1c1CVa)
        (&i/o-decoding-rcd . g$12527$1c1CVa)
        (&i/o-decoding-rtd . g$12526$1c1CVa)
        (&i/o-port-rcd . g$12525$1c1CVa)
        (&i/o-port-rtd . g$12524$1c1CVa)
        (&i/o-file-does-not-exist-rcd . g$12523$1c1CVa)
        (&i/o-file-does-not-exist-rtd . g$12522$1c1CVa)
        (&i/o-file-already-exists-rcd . g$12521$1c1CVa)
        (&i/o-file-already-exists-rtd . g$12520$1c1CVa)
        (&i/o-file-is-read-only-rcd . g$12519$1c1CVa)
        (&i/o-file-is-read-only-rtd . g$12518$1c1CVa)
        (&i/o-file-protection-rcd . g$12517$1c1CVa)
        (&i/o-file-protection-rtd . g$12516$1c1CVa)
        (&i/o-filename-rcd . g$12515$1c1CVa)
        (&i/o-filename-rtd . g$12514$1c1CVa)
        (&i/o-invalid-position-rcd . g$12513$1c1CVa)
        (&i/o-invalid-position-rtd . g$12512$1c1CVa)
        (&i/o-write-rcd . g$12511$1c1CVa)
        (&i/o-write-rtd . g$12510$1c1CVa)
        (&i/o-read-rcd . g$12509$1c1CVa)
        (&i/o-read-rtd . g$12508$1c1CVa)
        (&i/o-rcd . g$12507$1c1CVa)
        (&i/o-rtd . g$12506$1c1CVa)
        (&undefined-rcd . g$12505$1c1CVa)
        (&undefined-rtd . g$12504$1c1CVa)
        (&syntax-rcd . g$12503$1c1CVa)
        (&syntax-rtd . g$12502$1c1CVa)
        (&lexical-rcd . g$12501$1c1CVa)
        (&lexical-rtd . g$12500$1c1CVa)
        (&implementation-restriction-rcd . g$12499$1c1CVa)
        (&implementation-restriction-rtd . g$12498$1c1CVa)
        (&non-continuable-rcd . g$12497$1c1CVa)
        (&non-continuable-rtd . g$12496$1c1CVa)
        (&who-rcd . g$12495$1c1CVa)
        (&who-rtd . g$12494$1c1CVa)
        (&irritants-rcd . g$12493$1c1CVa)
        (&irritants-rtd . g$12492$1c1CVa)
        (&assertion-rcd . g$12491$1c1CVa)
        (&assertion-rtd . g$12490$1c1CVa)
        (&violation-rcd . g$12489$1c1CVa)
        (&violation-rtd . g$12488$1c1CVa)
        (&error-rcd . g$12487$1c1CVa)
        (&error-rtd . g$12486$1c1CVa)
        (&serious-rcd . g$12485$1c1CVa)
        (&serious-rtd . g$12484$1c1CVa)
        (&warning-rcd . g$12483$1c1CVa)
        (&warning-rtd . g$12482$1c1CVa)
        (&message-rcd . g$12481$1c1CVa)
        (&message-rtd . g$12480$1c1CVa)
        (&condition-rcd . g$12479$1c1CVa)
        (&condition-rtd . g$12478$1c1CVa)
        (library-letrec* . g$12477$1c1CVa)
        (annotation-stripped . g$12476$1c1CVa)
        (annotation-source . g$12475$1c1CVa)
        (annotation-expression . g$12474$1c1CVa)
        (annotation? . g$12473$1c1CVa)
        (read-annotated . g$12472$1c1CVa)
        (tanh . g$12471$1c1CVa)
        (cosh . g$12470$1c1CVa)
        (sinh . g$12469$1c1CVa)
        (make-guid . g$12468$1c1CVa)
        (unspecified? . g$12467$1c1CVa)
        (make-trace . g$12466$1c1CVa)
        (make-list . g$12465$1c1CVa)
        (last-pair . g$12464$1c1CVa)
        (load-r5rs . g$12463$1c1CVa)
        (license . g$12462$1c1CVa)
        (stacktrace . g$12461$1c1CVa)
        (ironscheme-build . g$11883$1c1CVa)
        (define-clr-class-internal . g$12460$1c1CVa)
        (clr-field-set!-internal . g$12459$1c1CVa)
        (clr-field-get-internal . g$12458$1c1CVa)
        (clr-cast-internal . g$12457$1c1CVa)
        (clr-call-internal . g$12456$1c1CVa)
        (clr-new-internal . g$12455$1c1CVa)
        (clr-new-array-internal . g$12454$1c1CVa)
        (clr-is-internal . g$12453$1c1CVa)
        (clr-reference-internal . g$12452$1c1CVa)
        (clr-using-internal . g$12451$1c1CVa)
        (clr-clear-usings-internal . g$12450$1c1CVa)
        (syntax-error . g$8939$1c1CVa)
        (syntax-dispatch . g$8812$1c1CVa)
        (compile-core . g$12449$1c1CVa)
        (eval-core . g$12448$1c1CVa)
        (set-symbol-value! . g$12447$1c1CVa)
        (symbol-value . g$12446$1c1CVa)
        (ungensym . g$12445$1c1CVa)
        (gensym . g$12444$1c1CVa)
        (void . g$12443$1c1CVa)
        (load-serialized-library . g$12442$1c1CVa)
        (serialize-library . g$12441$1c1CVa)
        (compile-system-libraries . g$11885$1c1CVa)
        (compile->closure . g$11887$1c1CVa)
        (compile . g$11886$1c1CVa)
        (load . g$11882$1c1CVa)
        (interaction-environment . g$8948$1c1CVa)
        (char-ready? . g$12440$1c1CVa)
        (string-upcase . g$12439$1c1CVa)
        (string-titlecase . g$12438$1c1CVa)
        (string-normalize-nfkd . g$12437$1c1CVa)
        (string-normalize-nfkc . g$12436$1c1CVa)
        (string-normalize-nfd . g$12435$1c1CVa)
        (string-normalize-nfc . g$12434$1c1CVa)
        (string-foldcase . g$12433$1c1CVa)
        (string-downcase . g$12432$1c1CVa)
        (string-ci>? . g$7018$1c1CVa)
        (string-ci>=? . g$7020$1c1CVa)
        (string-ci=? . g$7016$1c1CVa)
        (string-ci<? . g$7017$1c1CVa)
        (string-ci<=? . g$7019$1c1CVa)
        (char-whitespace? . g$12431$1c1CVa)
        (char-upper-case? . g$12430$1c1CVa)
        (char-title-case? . g$12429$1c1CVa)
        (char-numeric? . g$12428$1c1CVa)
        (char-lower-case? . g$12427$1c1CVa)
        (char-general-category . g$12426$1c1CVa)
        (char-upcase . g$12425$1c1CVa)
        (char-titlecase . g$12424$1c1CVa)
        (char-foldcase . g$12423$1c1CVa)
        (char-downcase . g$12422$1c1CVa)
        (char-ci>? . g$7069$1c1CVa)
        (char-ci>=? . g$7071$1c1CVa)
        (char-ci=? . g$7067$1c1CVa)
        (char-ci<? . g$7068$1c1CVa)
        (char-ci<=? . g$7070$1c1CVa)
        (char-alphabetic? . g$12421$1c1CVa)
        (variable-transformer-procedure . g$8549$1c1CVa)
        (variable-transformer? . g$8548$1c1CVa)
        (make-variable-transformer . g$8547$1c1CVa)
        (identifier? . g$8943$1c1CVa)
        (generate-temporaries . g$8932$1c1CVa)
        (free-identifier=? . g$8933$1c1CVa)
        (syntax->datum . g$8945$1c1CVa)
        (datum->syntax . g$8944$1c1CVa)
        (bound-identifier=? . g$8934$1c1CVa)
        (record-type-descriptor? . g$12420$1c1CVa)
        (record-predicate . g$12419$1c1CVa)
        (record-mutator . g$12418$1c1CVa)
        (record-constructor . g$12417$1c1CVa)
        (record-accessor . g$12416$1c1CVa)
        (make-record-type-descriptor . g$12415$1c1CVa)
        (make-record-constructor-descriptor . g$12414$1c1CVa)
        (record? . g$12413$1c1CVa)
        (record-type-uid . g$12412$1c1CVa)
        (record-type-sealed? . g$12411$1c1CVa)
        (record-type-parent . g$12410$1c1CVa)
        (record-type-opaque? . g$12409$1c1CVa)
        (record-type-name . g$12408$1c1CVa)
        (record-type-generative? . g$12407$1c1CVa)
        (record-type-field-names . g$12406$1c1CVa)
        (record-rtd . g$12405$1c1CVa)
        (record-field-mutable? . g$12404$1c1CVa)
        (delete-file . g$6379$1c1CVa)
        (file-exists? . g$6378$1c1CVa)
        (vector-sort! . g$12403$1c1CVa)
        (vector-sort . g$12402$1c1CVa)
        (list-sort . g$6892$1c1CVa)
        (symbol-hash . g$12401$1c1CVa)
        (string-ci-hash . g$12400$1c1CVa)
        (string-hash . g$12399$1c1CVa)
        (equal-hash . g$12398$1c1CVa)
        (hashtable-equivalence-function . g$12397$1c1CVa)
        (make-hashtable . g$12396$1c1CVa)
        (hashtable-hash-function . g$12395$1c1CVa)
        (make-eqv-hashtable . g$6346$1c1CVa)
        (make-eq-hashtable . g$6345$1c1CVa)
        (hashtable? . g$12394$1c1CVa)
        (hashtable-update! . g$6352$1c1CVa)
        (hashtable-size . g$6347$1c1CVa)
        (hashtable-set! . g$6349$1c1CVa)
        (hashtable-ref . g$6348$1c1CVa)
        (hashtable-mutable? . g$12393$1c1CVa)
        (hashtable-keys . g$12392$1c1CVa)
        (hashtable-entries . g$12391$1c1CVa)
        (hashtable-delete! . g$6350$1c1CVa)
        (hashtable-copy . g$12390$1c1CVa)
        (hashtable-contains? . g$6351$1c1CVa)
        (hashtable-clear! . g$6353$1c1CVa)
        (call-with-output-file . g$7488$1c1CVa)
        (call-with-input-file . g$7487$1c1CVa)
        (write-char . g$12389$1c1CVa)
        (write . g$12388$1c1CVa)
        (with-output-to-file . g$7486$1c1CVa)
        (with-input-from-file . g$7485$1c1CVa)
        (read-char . g$12387$1c1CVa)
        (read . g$12386$1c1CVa)
        (peek-char . g$12385$1c1CVa)
        (open-output-file . g$12384$1c1CVa)
        (open-input-file . g$12383$1c1CVa)
        (newline . g$12382$1c1CVa)
        (display . g$12381$1c1CVa)
        (close-output-port . g$12380$1c1CVa)
        (close-input-port . g$12379$1c1CVa)
        (eof-object? . g$12378$1c1CVa)
        (eof-object . g$12377$1c1CVa)
        (current-error-port . g$12376$1c1CVa)
        (current-output-port . g$12375$1c1CVa)
        (current-input-port . g$12374$1c1CVa)
        (output-port? . g$12373$1c1CVa)
        (input-port? . g$12372$1c1CVa)
        (utf-8-codec . g$12371$1c1CVa)
        (utf-16-codec . g$12370$1c1CVa)
        (transcoder-error-handling-mode . g$12369$1c1CVa)
        (transcoder-eol-style . g$12368$1c1CVa)
        (transcoder-codec . g$12367$1c1CVa)
        (transcoded-port . g$12366$1c1CVa)
        (textual-port? . g$12365$1c1CVa)
        (string->bytevector . g$12364$1c1CVa)
        (standard-output-port . g$12363$1c1CVa)
        (standard-input-port . g$12362$1c1CVa)
        (standard-error-port . g$12361$1c1CVa)
        (set-port-position! . g$12360$1c1CVa)
        (put-u8 . g$12359$1c1CVa)
        (put-string . g$12358$1c1CVa)
        (put-datum . g$12357$1c1CVa)
        (put-char . g$12356$1c1CVa)
        (put-bytevector . g$12355$1c1CVa)
        (port? . g$7464$1c1CVa)
        (port-transcoder . g$12354$1c1CVa)
        (port-position . g$12353$1c1CVa)
        (port-has-set-port-position!? . g$12352$1c1CVa)
        (port-has-port-position? . g$12351$1c1CVa)
        (port-eof? . g$12350$1c1CVa)
        (output-port-buffer-mode . g$12349$1c1CVa)
        (open-string-output-port . g$7463$1c1CVa)
        (open-string-input-port . g$12348$1c1CVa)
        (open-file-output-port . g$12347$1c1CVa)
        (open-file-input/output-port . g$12346$1c1CVa)
        (open-file-input-port . g$12345$1c1CVa)
        (open-bytevector-output-port . g$12344$1c1CVa)
        (open-bytevector-input-port . g$12343$1c1CVa)
        (native-transcoder . g$12342$1c1CVa)
        (native-eol-style . g$12341$1c1CVa)
        (make-transcoder . g$12340$1c1CVa)
        (latin-1-codec . g$12339$1c1CVa)
        (make-i/o-write-error . g$7320$1c1CVa)
        (make-i/o-read-error . g$7306$1c1CVa)
        (make-i/o-port-error . g$7425$1c1CVa)
        (make-i/o-invalid-position-error . g$7335$1c1CVa)
        (make-i/o-filename-error . g$7352$1c1CVa)
        (make-i/o-file-protection-error . g$7368$1c1CVa)
        (make-i/o-file-is-read-only-error . g$7382$1c1CVa)
        (make-i/o-file-does-not-exist-error . g$7410$1c1CVa)
        (make-i/o-file-already-exists-error . g$7396$1c1CVa)
        (make-i/o-error . g$7292$1c1CVa)
        (make-i/o-encoding-error . g$7456$1c1CVa)
        (make-i/o-decoding-error . g$7441$1c1CVa)
        (make-custom-textual-output-port . g$12338$1c1CVa)
        (make-custom-textual-input/output-port . g$12337$1c1CVa)
        (make-custom-textual-input-port . g$12336$1c1CVa)
        (make-custom-binary-output-port . g$12335$1c1CVa)
        (make-custom-binary-input/output-port . g$12334$1c1CVa)
        (make-custom-binary-input-port . g$12333$1c1CVa)
        (make-bytevector . g$12332$1c1CVa)
        (lookahead-u8 . g$12331$1c1CVa)
        (lookahead-char . g$12330$1c1CVa)
        (i/o-write-error? . g$7321$1c1CVa)
        (i/o-read-error? . g$7307$1c1CVa)
        (i/o-port-error? . g$7427$1c1CVa)
        (i/o-invalid-position-error? . g$7337$1c1CVa)
        (i/o-error-position . g$7338$1c1CVa)
        (i/o-filename-error? . g$7354$1c1CVa)
        (i/o-file-protection-error? . g$7369$1c1CVa)
        (i/o-file-is-read-only-error? . g$7383$1c1CVa)
        (i/o-file-does-not-exist-error? . g$7411$1c1CVa)
        (i/o-file-already-exists-error? . g$7397$1c1CVa)
        (i/o-error? . g$7293$1c1CVa)
        (i/o-error-port . g$7428$1c1CVa)
        (i/o-error-filename . g$7355$1c1CVa)
        (i/o-encoding-error? . g$7458$1c1CVa)
        (i/o-encoding-error-char . g$7459$1c1CVa)
        (i/o-decoding-error? . g$7442$1c1CVa)
        (get-u8 . g$12329$1c1CVa)
        (get-string-n! . g$12328$1c1CVa)
        (get-string-n . g$12327$1c1CVa)
        (get-string-all . g$12326$1c1CVa)
        (get-line . g$12325$1c1CVa)
        (get-datum . g$12324$1c1CVa)
        (get-char . g$12323$1c1CVa)
        (get-bytevector-some . g$12322$1c1CVa)
        (get-bytevector-n! . g$12321$1c1CVa)
        (get-bytevector-n . g$12320$1c1CVa)
        (get-bytevector-all . g$12319$1c1CVa)
        (flush-output-port . g$12318$1c1CVa)
        (close-port . g$12317$1c1CVa)
        (call-with-string-output-port . g$12316$1c1CVa)
        (call-with-port . g$12315$1c1CVa)
        (call-with-bytevector-output-port . g$12314$1c1CVa)
        (bytevector->string . g$12313$1c1CVa)
        (buffer-mode? . g$12312$1c1CVa)
        (binary-port? . g$12311$1c1CVa)
        (scheme-report-environment . g$8923$1c1CVa)
        (quotient . g$6872$1c1CVa)
        (null-environment . g$8922$1c1CVa)
        (remainder . g$6873$1c1CVa)
        (modulo . g$6874$1c1CVa)
        (inexact->exact . g$12310$1c1CVa)
        (force . g$6876$1c1CVa)
        (exact->inexact . g$12309$1c1CVa)
        (exit . g$12308$1c1CVa)
        (command-line . g$11879$1c1CVa)
        (string-fill! . g$12307$1c1CVa)
        (string-set! . g$12306$1c1CVa)
        (set-cdr! . g$12305$1c1CVa)
        (set-car! . g$12304$1c1CVa)
        (remove . g$6459$1c1CVa)
        (remv . g$6460$1c1CVa)
        (remp . g$6445$1c1CVa)
        (remq . g$6461$1c1CVa)
        (partition . g$6444$1c1CVa)
        (memv . g$12303$1c1CVa)
        (memq . g$12302$1c1CVa)
        (memp . g$6451$1c1CVa)
        (member . g$6450$1c1CVa)
        (exists . g$6455$1c1CVa)
        (for-all . g$6454$1c1CVa)
        (fold-right . g$6458$1c1CVa)
        (fold-left . g$6457$1c1CVa)
        (find . g$6443$1c1CVa)
        (filter . g$6446$1c1CVa)
        (cons* . g$6456$1c1CVa)
        (assv . g$6447$1c1CVa)
        (assq . g$12301$1c1CVa)
        (assp . g$6449$1c1CVa)
        (assoc . g$6448$1c1CVa)
        (with-exception-handler . g$12300$1c1CVa)
        (raise-continuable . g$12299$1c1CVa)
        (raise . g$12298$1c1CVa)
        (eval . g$8925$1c1CVa)
        (environment . g$8921$1c1CVa)
        (make-enumeration . g$7545$1c1CVa)
        (enum-set=? . g$7552$1c1CVa)
        (enum-set-universe . g$7546$1c1CVa)
        (enum-set-union . g$7553$1c1CVa)
        (enum-set-subset? . g$7551$1c1CVa)
        (enum-set-projection . g$7557$1c1CVa)
        (enum-set-member? . g$7550$1c1CVa)
        (enum-set-intersection . g$7554$1c1CVa)
        (enum-set-indexer . g$7547$1c1CVa)
        (enum-set-difference . g$7555$1c1CVa)
        (enum-set-constructor . g$7548$1c1CVa)
        (enum-set-complement . g$7556$1c1CVa)
        (enum-set->list . g$7549$1c1CVa)
        (who-condition? . g$6783$1c1CVa)
        (warning? . g$6694$1c1CVa)
        (violation? . g$6736$1c1CVa)
        (undefined-violation? . g$6860$1c1CVa)
        (syntax-violation? . g$6844$1c1CVa)
        (syntax-violation-subform . g$6846$1c1CVa)
        (syntax-violation-form . g$6845$1c1CVa)
        (syntax-violation . g$8942$1c1CVa)
        (simple-conditions . g$12297$1c1CVa)
        (serious-condition? . g$6708$1c1CVa)
        (non-continuable-violation? . g$6798$1c1CVa)
        (message-condition? . g$6679$1c1CVa)
        (make-who-condition . g$6781$1c1CVa)
        (make-warning . g$6693$1c1CVa)
        (make-violation . g$6735$1c1CVa)
        (make-undefined-violation . g$6859$1c1CVa)
        (make-syntax-violation . g$6841$1c1CVa)
        (make-serious-condition . g$6707$1c1CVa)
        (make-non-continuable-violation . g$6797$1c1CVa)
        (make-message-condition . g$6677$1c1CVa)
        (make-lexical-violation . g$6825$1c1CVa)
        (make-irritants-condition . g$6764$1c1CVa)
        (make-implementation-restriction-violation . g$6811$1c1CVa)
        (make-error . g$6721$1c1CVa)
        (make-assertion-violation . g$6749$1c1CVa)
        (lexical-violation? . g$6826$1c1CVa)
        (irritants-condition? . g$6766$1c1CVa)
        (implementation-restriction-violation? . g$6812$1c1CVa)
        (error? . g$6722$1c1CVa)
        (condition-who . g$6784$1c1CVa)
        (condition-predicate . g$12296$1c1CVa)
        (condition-message . g$6680$1c1CVa)
        (condition-irritants . g$6767$1c1CVa)
        (condition-accessor . g$12295$1c1CVa)
        (condition . g$12294$1c1CVa)
        (assertion-violation? . g$6750$1c1CVa)
        (condition? . g$12293$1c1CVa)
        (utf32->string . g$12292$1c1CVa)
        (utf16->string . g$12291$1c1CVa)
        (utf8->string . g$12290$1c1CVa)
        (uint-list->bytevector . g$12289$1c1CVa)
        (u8-list->bytevector . g$12288$1c1CVa)
        (string->utf8 . g$12287$1c1CVa)
        (string->utf32 . g$12286$1c1CVa)
        (string->utf16 . g$12285$1c1CVa)
        (sint-list->bytevector . g$12284$1c1CVa)
        (native-endianness . g$6535$1c1CVa)
        (bytevector? . g$12283$1c1CVa)
        (bytevector=? . g$12282$1c1CVa)
        (bytevector-uint-set! . g$12281$1c1CVa)
        (bytevector-uint-ref . g$12280$1c1CVa)
        (bytevector-u8-set! . g$12279$1c1CVa)
        (bytevector-u8-ref . g$12278$1c1CVa)
        (bytevector-u64-set! . g$6556$1c1CVa)
        (bytevector-u64-ref . g$6552$1c1CVa)
        (bytevector-u64-native-set! . g$6558$1c1CVa)
        (bytevector-u64-native-ref . g$6554$1c1CVa)
        (bytevector-u32-set! . g$6548$1c1CVa)
        (bytevector-u32-ref . g$6544$1c1CVa)
        (bytevector-u32-native-set! . g$6550$1c1CVa)
        (bytevector-u32-native-ref . g$6546$1c1CVa)
        (bytevector-u16-set! . g$6540$1c1CVa)
        (bytevector-u16-ref . g$6536$1c1CVa)
        (bytevector-u16-native-set! . g$6542$1c1CVa)
        (bytevector-u16-native-ref . g$6538$1c1CVa)
        (bytevector-sint-set! . g$12277$1c1CVa)
        (bytevector-sint-ref . g$12276$1c1CVa)
        (bytevector-s8-set! . g$12275$1c1CVa)
        (bytevector-s8-ref . g$12274$1c1CVa)
        (bytevector-s64-set! . g$6557$1c1CVa)
        (bytevector-s64-ref . g$6553$1c1CVa)
        (bytevector-s64-native-set! . g$6559$1c1CVa)
        (bytevector-s64-native-ref . g$6555$1c1CVa)
        (bytevector-s32-set! . g$6549$1c1CVa)
        (bytevector-s32-ref . g$6545$1c1CVa)
        (bytevector-s32-native-set! . g$6551$1c1CVa)
        (bytevector-s32-native-ref . g$6547$1c1CVa)
        (bytevector-s16-set! . g$6541$1c1CVa)
        (bytevector-s16-ref . g$6537$1c1CVa)
        (bytevector-s16-native-set! . g$6543$1c1CVa)
        (bytevector-s16-native-ref . g$6539$1c1CVa)
        (bytevector-length . g$12273$1c1CVa)
        (bytevector-ieee-single-set! . g$12272$1c1CVa)
        (bytevector-ieee-single-ref . g$12271$1c1CVa)
        (bytevector-ieee-single-native-set! . g$6562$1c1CVa)
        (bytevector-ieee-single-native-ref . g$6560$1c1CVa)
        (bytevector-ieee-double-set! . g$12270$1c1CVa)
        (bytevector-ieee-double-ref . g$12269$1c1CVa)
        (bytevector-ieee-double-native-set! . g$6563$1c1CVa)
        (bytevector-ieee-double-native-ref . g$6561$1c1CVa)
        (bytevector-fill! . g$12268$1c1CVa)
        (bytevector-copy! . g$12267$1c1CVa)
        (bytevector-copy . g$12266$1c1CVa)
        (bytevector->uint-list . g$12265$1c1CVa)
        (bytevector->u8-list . g$12264$1c1CVa)
        (bytevector->sint-list . g$12263$1c1CVa)
        (no-nans-violation? . g$7278$1c1CVa)
        (no-infinities-violation? . g$7264$1c1CVa)
        (make-no-nans-violation . g$7277$1c1CVa)
        (make-no-infinities-violation . g$7263$1c1CVa)
        (real->flonum . g$12262$1c1CVa)
        (flzero? . g$12261$1c1CVa)
        (fltruncate . g$12260$1c1CVa)
        (fltan . g$12259$1c1CVa)
        (flsqrt . g$12258$1c1CVa)
        (flsin . g$12257$1c1CVa)
        (flround . g$12256$1c1CVa)
        (flpositive? . g$12255$1c1CVa)
        (flonum? . g$12254$1c1CVa)
        (flodd? . g$12253$1c1CVa)
        (flnumerator . g$12252$1c1CVa)
        (flnegative? . g$12251$1c1CVa)
        (flnan? . g$12250$1c1CVa)
        (flmod0 . g$12249$1c1CVa)
        (flmod . g$12248$1c1CVa)
        (flmin . g$12247$1c1CVa)
        (flmax . g$12246$1c1CVa)
        (fllog . g$12245$1c1CVa)
        (flinteger? . g$12244$1c1CVa)
        (flinfinite? . g$12243$1c1CVa)
        (flfloor . g$12242$1c1CVa)
        (flfinite? . g$12241$1c1CVa)
        (flexpt . g$12240$1c1CVa)
        (flexp . g$12239$1c1CVa)
        (fleven? . g$12238$1c1CVa)
        (fldiv0-and-mod0 . g$12237$1c1CVa)
        (fldiv0 . g$12236$1c1CVa)
        (fldiv-and-mod . g$12235$1c1CVa)
        (fldiv . g$12234$1c1CVa)
        (fldenominator . g$12233$1c1CVa)
        (flcos . g$12232$1c1CVa)
        (flceiling . g$12231$1c1CVa)
        (flatan . g$12230$1c1CVa)
        (flasin . g$12229$1c1CVa)
        (flacos . g$12228$1c1CVa)
        (flabs . g$12227$1c1CVa)
        (fl>? . g$12226$1c1CVa)
        (fl>=? . g$12225$1c1CVa)
        (fl=? . g$12224$1c1CVa)
        (fl<? . g$12223$1c1CVa)
        (fl<=? . g$12222$1c1CVa)
        (fl/ . g$12221$1c1CVa)
        (fl- . g$12220$1c1CVa)
        (fl+ . g$12219$1c1CVa)
        (fl* . g$12218$1c1CVa)
        (fixnum->flonum . g$12217$1c1CVa)
        (fxzero? . g$12216$1c1CVa)
        (fxxor . g$12215$1c1CVa)
        (fxrotate-bit-field . g$7209$1c1CVa)
        (fxreverse-bit-field . g$12214$1c1CVa)
        (fxpositive? . g$12213$1c1CVa)
        (fxodd? . g$12212$1c1CVa)
        (fxnot . g$12211$1c1CVa)
        (fxnegative? . g$12210$1c1CVa)
        (fxmod0 . g$12209$1c1CVa)
        (fxmod . g$12208$1c1CVa)
        (fxmin . g$12207$1c1CVa)
        (fxmax . g$12206$1c1CVa)
        (fxlength . g$12205$1c1CVa)
        (fxior . g$12204$1c1CVa)
        (fxif . g$7203$1c1CVa)
        (fxfirst-bit-set . g$12203$1c1CVa)
        (fxeven? . g$12202$1c1CVa)
        (fxdiv0-and-mod0 . g$12201$1c1CVa)
        (fxdiv0 . g$12200$1c1CVa)
        (fxdiv-and-mod . g$12199$1c1CVa)
        (fxdiv . g$12198$1c1CVa)
        (fxcopy-bit-field . g$7206$1c1CVa)
        (fxcopy-bit . g$7204$1c1CVa)
        (fxbit-set? . g$12197$1c1CVa)
        (fxbit-field . g$7205$1c1CVa)
        (fxbit-count . g$12196$1c1CVa)
        (fxarithmetic-shift-right . g$7208$1c1CVa)
        (fxarithmetic-shift-left . g$7207$1c1CVa)
        (fxarithmetic-shift . g$12195$1c1CVa)
        (fxand . g$12194$1c1CVa)
        (fx>? . g$12193$1c1CVa)
        (fx>=? . g$12192$1c1CVa)
        (fx=? . g$12191$1c1CVa)
        (fx<? . g$12190$1c1CVa)
        (fx<=? . g$12189$1c1CVa)
        (fx-/carry . g$12188$1c1CVa)
        (fx- . g$12187$1c1CVa)
        (fx+/carry . g$12186$1c1CVa)
        (fx+ . g$12185$1c1CVa)
        (fx*/carry . g$12184$1c1CVa)
        (fx* . g$12183$1c1CVa)
        (greatest-fixnum . g$12182$1c1CVa)
        (least-fixnum . g$12181$1c1CVa)
        (fixnum-width . g$12180$1c1CVa)
        (fixnum? . g$12179$1c1CVa)
        (bitwise-rotate-bit-field . g$7161$1c1CVa)
        (bitwise-reverse-bit-field . g$12178$1c1CVa)
        (bitwise-length . g$12177$1c1CVa)
        (bitwise-if . g$7155$1c1CVa)
        (bitwise-first-bit-set . g$12176$1c1CVa)
        (bitwise-copy-bit-field . g$7158$1c1CVa)
        (bitwise-copy-bit . g$7156$1c1CVa)
        (bitwise-bit-set? . g$12175$1c1CVa)
        (bitwise-bit-field . g$12174$1c1CVa)
        (bitwise-bit-count . g$12173$1c1CVa)
        (bitwise-xor . g$12172$1c1CVa)
        (bitwise-ior . g$12171$1c1CVa)
        (bitwise-and . g$12170$1c1CVa)
        (bitwise-not . g$12169$1c1CVa)
        (bitwise-arithmetic-shift-right . g$7160$1c1CVa)
        (bitwise-arithmetic-shift-left . g$7159$1c1CVa)
        (bitwise-arithmetic-shift . g$12168$1c1CVa)
        (zero? . g$12167$1c1CVa)
        (vector? . g$12166$1c1CVa)
        (vector-set! . g$12165$1c1CVa)
        (vector-ref . g$12164$1c1CVa)
        (vector-map . g$12163$1c1CVa)
        (vector-length . g$12162$1c1CVa)
        (vector-for-each . g$12161$1c1CVa)
        (vector-fill! . g$12160$1c1CVa)
        (vector->list . g$12159$1c1CVa)
        (vector . g$12158$1c1CVa)
        (values . g$12157$1c1CVa)
        (truncate . g$12156$1c1CVa)
        (tan . g$12155$1c1CVa)
        (symbol? . g$12154$1c1CVa)
        (symbol=? . g$5844$1c1CVa)
        (symbol->string . g$12153$1c1CVa)
        (substring . g$12152$1c1CVa)
        (string? . g$12151$1c1CVa)
        (string>? . g$5841$1c1CVa)
        (string>=? . g$5843$1c1CVa)
        (string=? . g$5839$1c1CVa)
        (string<? . g$5840$1c1CVa)
        (string<=? . g$5842$1c1CVa)
        (string-ref . g$12150$1c1CVa)
        (string-length . g$12149$1c1CVa)
        (string-for-each . g$12148$1c1CVa)
        (string-copy . g$12147$1c1CVa)
        (string-append . g$12146$1c1CVa)
        (string->symbol . g$12145$1c1CVa)
        (string->number . g$12144$1c1CVa)
        (string->list . g$12143$1c1CVa)
        (string . g$12142$1c1CVa)
        (sqrt . g$12141$1c1CVa)
        (sin . g$12140$1c1CVa)
        (round . g$12139$1c1CVa)
        (reverse . g$12138$1c1CVa)
        (real? . g$12137$1c1CVa)
        (real-valued? . g$12136$1c1CVa)
        (real-part . g$12135$1c1CVa)
        (rationalize . g$5897$1c1CVa)
        (rational? . g$12134$1c1CVa)
        (rational-valued? . g$12133$1c1CVa)
        (procedure? . g$12132$1c1CVa)
        (positive? . g$12131$1c1CVa)
        (pair? . g$12130$1c1CVa)
        (odd? . g$12129$1c1CVa)
        (numerator . g$12128$1c1CVa)
        (number? . g$12127$1c1CVa)
        (number->string . g$12126$1c1CVa)
        (null? . g$12125$1c1CVa)
        (not . g$12124$1c1CVa)
        (negative? . g$12123$1c1CVa)
        (nan? . g$12122$1c1CVa)
        (min . g$12121$1c1CVa)
        (max . g$12120$1c1CVa)
        (map . g$12119$1c1CVa)
        (make-vector . g$12118$1c1CVa)
        (make-string . g$12117$1c1CVa)
        (make-rectangular . g$12116$1c1CVa)
        (make-polar . g$12115$1c1CVa)
        (magnitude . g$12114$1c1CVa)
        (log . g$12113$1c1CVa)
        (list? . g$12112$1c1CVa)
        (list-tail . g$12111$1c1CVa)
        (list-ref . g$12110$1c1CVa)
        (list->vector . g$12109$1c1CVa)
        (list->string . g$12108$1c1CVa)
        (list . g$12107$1c1CVa)
        (length . g$12106$1c1CVa)
        (lcm . g$12105$1c1CVa)
        (integer? . g$12104$1c1CVa)
        (integer-valued? . g$12103$1c1CVa)
        (integer->char . g$12102$1c1CVa)
        (infinite? . g$12101$1c1CVa)
        (inexact? . g$12100$1c1CVa)
        (inexact . g$12099$1c1CVa)
        (imag-part . g$12098$1c1CVa)
        (gcd . g$12097$1c1CVa)
        (for-each . g$12096$1c1CVa)
        (floor . g$12095$1c1CVa)
        (finite? . g$12094$1c1CVa)
        (expt . g$12093$1c1CVa)
        (exp . g$12092$1c1CVa)
        (exact? . g$12091$1c1CVa)
        (exact-integer-sqrt . g$12090$1c1CVa)
        (exact . g$12089$1c1CVa)
        (even? . g$12088$1c1CVa)
        (error . g$12087$1c1CVa)
        (eqv? . g$12086$1c1CVa)
        (equal? . g$12085$1c1CVa)
        (eq? . g$12084$1c1CVa)
        (dynamic-wind . g$12083$1c1CVa)
        (div0-and-mod0 . g$12082$1c1CVa)
        (mod0 . g$12081$1c1CVa)
        (div0 . g$12080$1c1CVa)
        (div-and-mod . g$12079$1c1CVa)
        (mod . g$12078$1c1CVa)
        (div . g$12077$1c1CVa)
        (denominator . g$12076$1c1CVa)
        (cos . g$12075$1c1CVa)
        (cons . g$12074$1c1CVa)
        (complex? . g$12073$1c1CVa)
        (char? . g$12072$1c1CVa)
        (char>? . g$5894$1c1CVa)
        (char>=? . g$5896$1c1CVa)
        (char=? . g$5892$1c1CVa)
        (char<? . g$5893$1c1CVa)
        (char<=? . g$5895$1c1CVa)
        (char->integer . g$12071$1c1CVa)
        (ceiling . g$12070$1c1CVa)
        (call-with-values . g$12069$1c1CVa)
        (call/cc . g$12068$1c1CVa)
        (call-with-current-continuation . g$12067$1c1CVa)
        (cddddr . g$5792$1c1CVa)
        (cdddar . g$5791$1c1CVa)
        (cddadr . g$5790$1c1CVa)
        (cddaar . g$5789$1c1CVa)
        (cdaddr . g$5788$1c1CVa)
        (cdadar . g$5787$1c1CVa)
        (cdaadr . g$5786$1c1CVa)
        (cdaaar . g$5785$1c1CVa)
        (cadddr . g$5784$1c1CVa)
        (caddar . g$5783$1c1CVa)
        (cadadr . g$5782$1c1CVa)
        (cadaar . g$5781$1c1CVa)
        (caaddr . g$5780$1c1CVa)
        (caadar . g$5779$1c1CVa)
        (caaadr . g$5778$1c1CVa)
        (caaaar . g$5777$1c1CVa)
        (cdddr . g$5776$1c1CVa)
        (cddar . g$5775$1c1CVa)
        (cdadr . g$5774$1c1CVa)
        (cdaar . g$5773$1c1CVa)
        (caddr . g$5772$1c1CVa)
        (cadar . g$5771$1c1CVa)
        (caadr . g$5770$1c1CVa)
        (caaar . g$5769$1c1CVa)
        (cddr . g$5768$1c1CVa)
        (cdar . g$5767$1c1CVa)
        (cadr . g$5766$1c1CVa)
        (caar . g$5765$1c1CVa)
        (cdr . g$12066$1c1CVa)
        (car . g$12065$1c1CVa)
        (boolean? . g$12064$1c1CVa)
        (boolean=? . g$5845$1c1CVa)
        (atan . g$12063$1c1CVa)
        (assertion-violation . g$12062$1c1CVa)
        (asin . g$12061$1c1CVa)
        (apply . g$12060$1c1CVa)
        (append . g$12059$1c1CVa)
        (angle . g$12058$1c1CVa)
        (acos . g$12057$1c1CVa)
        (abs . g$12056$1c1CVa)
        (/ . g$12055$1c1CVa)
        (* . g$12054$1c1CVa)
        (- . g$12053$1c1CVa)
        (+ . g$12052$1c1CVa)
        (>= . g$12051$1c1CVa)
        (> . g$12050$1c1CVa)
        (= . g$12049$1c1CVa)
        (<= . g$12048$1c1CVa)
        (< . g$12047$1c1CVa)
        (make-record-printer . g$12046$1c1CVa)
        (eqv-hash . g$12045$1c1CVa)
        (eq-hash . g$12044$1c1CVa)
        (reverse! . g$12043$1c1CVa)
        (enum-set? . g$7521$1c1CVa)
        (make-promise . g$6875$1c1CVa)
        (load/args . g$11881$1c1CVa)
        (printf . g$7629$1c1CVa)
        (fprintf . g$7630$1c1CVa)
        (format . g$7631$1c1CVa)
        (get-arity . g$12042$1c1CVa)
        (gc-collect . g$12041$1c1CVa)
        (clr-type? . g$12040$1c1CVa)
        (get-clr-type . g$12039$1c1CVa)
        (get-command-line . g$12038$1c1CVa)
        (vector-append . g$12037$1c1CVa)
        (vector-filter . g$12036$1c1CVa)
        (vector-reverse! . g$12035$1c1CVa)
        (vector-contains? . g$12034$1c1CVa)
        (vector-index-of . g$12033$1c1CVa)
        (vector-copy . g$12032$1c1CVa)
        (vector-binary-search . g$12031$1c1CVa)
        (get-output-string . g$12030$1c1CVa)
        (open-output-string . g$12029$1c1CVa)
        (open-input-string . g$12028$1c1CVa)
        (string-ci-compare . g$12027$1c1CVa)
        (string-compare . g$12026$1c1CVa)
        (string-format . g$12025$1c1CVa)
        (trace-printer . g$11878$1c1CVa)
        (make-traced-procedure . g$12024$1c1CVa)
        (make-traced-macro . g$7651$1c1CVa)
        (assertion-error . g$8938$1c1CVa)
        (pmap . g$12023$1c1CVa)
        (time-it . g$12022$1c1CVa)
        (make-parameter . g$7656$1c1CVa)
        (library-locator . g$12021$1c1CVa)
        (get-library-paths . g$12020$1c1CVa)
        (environment-symbols . g$8919$1c1CVa)
        (interaction-environment-symbols . g$8918$1c1CVa)
        (library-path . g$8087$1c1CVa)
        (library-extensions . g$8088$1c1CVa)
        (installed-libraries . g$8108$1c1CVa)
        (expand . g$8924$1c1CVa)
        (&no-nans . g$12019$1c1CVa)
        (&no-infinities . g$12018$1c1CVa)
        (&i/o-encoding . g$12017$1c1CVa)
        (&i/o-decoding . g$12016$1c1CVa)
        (&i/o-port . g$12015$1c1CVa)
        (&i/o-file-does-not-exist . g$12014$1c1CVa)
        (&i/o-file-already-exists . g$12013$1c1CVa)
        (&i/o-file-is-read-only . g$12012$1c1CVa)
        (&i/o-file-protection . g$12011$1c1CVa)
        (&i/o-filename . g$12010$1c1CVa)
        (&i/o-invalid-position . g$12009$1c1CVa)
        (&i/o-write . g$12008$1c1CVa)
        (&i/o-read . g$12007$1c1CVa)
        (&i/o . g$12006$1c1CVa)
        (&non-continuable . g$12005$1c1CVa)
        (&undefined . g$12004$1c1CVa)
        (&syntax . g$12003$1c1CVa)
        (&lexical . g$12002$1c1CVa)
        (&implementation-restriction . g$12001$1c1CVa)
        (&non . g$12000$1c1CVa)
        (&who . g$11999$1c1CVa)
        (&irritants . g$11998$1c1CVa)
        (&assertion . g$11997$1c1CVa)
        (&violation . g$11996$1c1CVa)
        (&error . g$11995$1c1CVa)
        (&serious . g$11994$1c1CVa)
        (&warning . g$11993$1c1CVa)
        (&message . g$11992$1c1CVa)
        (&condition . g$11991$1c1CVa)
        (define-condition-type . g$11990$1c1CVa)
        (define-enumeration . g$11989$1c1CVa)
        (define-record-type . g$11988$1c1CVa)
        (parent-rtd . g$11987$1c1CVa)
        (nongenerative . g$11986$1c1CVa)
        (opaque . g$11985$1c1CVa)
        (sealed . g$11984$1c1CVa)
        (protocol . g$11983$1c1CVa)
        (parent . g$11982$1c1CVa)
        (immutable . g$11981$1c1CVa)
        (mutable . g$11980$1c1CVa)
        (fields . g$11979$1c1CVa)
        (error-handling-mode . g$11978$1c1CVa)
        (file-options . g$11977$1c1CVa)
        (buffer-mode . g$11976$1c1CVa)
        (eol-style . g$11975$1c1CVa)
        (guard . g$11974$1c1CVa)
        (trace-letrec-syntax . g$11973$1c1CVa)
        (trace-let-syntax . g$11972$1c1CVa)
        (trace-define-syntax . g$11971$1c1CVa)
        (trace-define . g$11970$1c1CVa)
        (trace-lambda . g$11969$1c1CVa)
        (unsyntax-splicing . g$11968$1c1CVa)
        (unsyntax . g$11967$1c1CVa)
        (unquote-splicing . g$11966$1c1CVa)
        (unquote . g$11965$1c1CVa)
        (_ . g$11964$1c1CVa)
        (else . g$11963$1c1CVa)
        (=> . g$11962$1c1CVa)
        (... . g$11961$1c1CVa)
        (assert . g$11960$1c1CVa)
        (endianness . g$11959$1c1CVa)
        (delay . g$11958$1c1CVa)
        (time . g$11957$1c1CVa)
        (or . g$11956$1c1CVa)
        (and . g$11955$1c1CVa)
        (do . g$11954$1c1CVa)
        (cond . g$11953$1c1CVa)
        (let* . g$11952$1c1CVa)
        (let . g$11951$1c1CVa)
        (identifier-syntax . g$11950$1c1CVa)
        (with-syntax . g$11949$1c1CVa)
        (quasisyntax . g$11948$1c1CVa)
        (quasiquote . g$11947$1c1CVa)
        (syntax-rules . g$11946$1c1CVa)
        (include-into . g$11945$1c1CVa)
        (include . g$11944$1c1CVa)
        (define-struct . g$11943$1c1CVa)
        (let-values . g$11942$1c1CVa)
        (let*-values . g$11941$1c1CVa)
        (record-constructor-descriptor . g$11940$1c1CVa)
        (record-type-descriptor . g$11939$1c1CVa)
        (fluid-let-syntax . g$11938$1c1CVa)
        (case . g$11937$1c1CVa)
        (parameterize . g$11936$1c1CVa)
        (unless . g$11935$1c1CVa)
        (when . g$11934$1c1CVa)
        (if . g$11933$1c1CVa)
        (letrec* . g$11932$1c1CVa)
        (letrec . g$11931$1c1CVa)
        (type-descriptor . g$11930$1c1CVa)
        (case-lambda . g$11929$1c1CVa)
        (lambda . g$11928$1c1CVa)
        (syntax . g$11927$1c1CVa)
        (syntax-case . g$11926$1c1CVa)
        (quote . g$11925$1c1CVa)
        (foreign-call . g$11924$1c1CVa)
        (letrec-syntax . g$11923$1c1CVa)
        (let-syntax . g$11922$1c1CVa)
        (set! . g$11921$1c1CVa)
        (import . g$11920$1c1CVa)
        (library . g$11919$1c1CVa)
        (begin . g$11918$1c1CVa)
        (module . g$11917$1c1CVa)
        (define-syntax . g$11916$1c1CVa)
        (define . g$11915$1c1CVa))
      '((g$8817$1c1CVa core-prim . ellipsis-map)
        (g$12533$1c1CVa core-prim . &no-nans-rcd)
        (g$12532$1c1CVa core-prim . &no-nans-rtd)
        (g$12531$1c1CVa core-prim . &no-infinities-rcd)
        (g$12530$1c1CVa core-prim . &no-infinities-rtd)
        (g$12529$1c1CVa core-prim . &i/o-encoding-rcd)
        (g$12528$1c1CVa core-prim . &i/o-encoding-rtd)
        (g$12527$1c1CVa core-prim . &i/o-decoding-rcd)
        (g$12526$1c1CVa core-prim . &i/o-decoding-rtd)
        (g$12525$1c1CVa core-prim . &i/o-port-rcd)
        (g$12524$1c1CVa core-prim . &i/o-port-rtd)
        (g$12523$1c1CVa core-prim . &i/o-file-does-not-exist-rcd)
        (g$12522$1c1CVa core-prim . &i/o-file-does-not-exist-rtd)
        (g$12521$1c1CVa core-prim . &i/o-file-already-exists-rcd)
        (g$12520$1c1CVa core-prim . &i/o-file-already-exists-rtd)
        (g$12519$1c1CVa core-prim . &i/o-file-is-read-only-rcd)
        (g$12518$1c1CVa core-prim . &i/o-file-is-read-only-rtd)
        (g$12517$1c1CVa core-prim . &i/o-file-protection-rcd)
        (g$12516$1c1CVa core-prim . &i/o-file-protection-rtd)
        (g$12515$1c1CVa core-prim . &i/o-filename-rcd)
        (g$12514$1c1CVa core-prim . &i/o-filename-rtd)
        (g$12513$1c1CVa core-prim . &i/o-invalid-position-rcd)
        (g$12512$1c1CVa core-prim . &i/o-invalid-position-rtd)
        (g$12511$1c1CVa core-prim . &i/o-write-rcd)
        (g$12510$1c1CVa core-prim . &i/o-write-rtd)
        (g$12509$1c1CVa core-prim . &i/o-read-rcd)
        (g$12508$1c1CVa core-prim . &i/o-read-rtd)
        (g$12507$1c1CVa core-prim . &i/o-rcd)
        (g$12506$1c1CVa core-prim . &i/o-rtd)
        (g$12505$1c1CVa core-prim . &undefined-rcd)
        (g$12504$1c1CVa core-prim . &undefined-rtd)
        (g$12503$1c1CVa core-prim . &syntax-rcd)
        (g$12502$1c1CVa core-prim . &syntax-rtd)
        (g$12501$1c1CVa core-prim . &lexical-rcd)
        (g$12500$1c1CVa core-prim . &lexical-rtd)
        (g$12499$1c1CVa core-prim . &implementation-restriction-rcd)
        (g$12498$1c1CVa core-prim . &implementation-restriction-rtd)
        (g$12497$1c1CVa core-prim . &non-continuable-rcd)
        (g$12496$1c1CVa core-prim . &non-continuable-rtd)
        (g$12495$1c1CVa core-prim . &who-rcd)
        (g$12494$1c1CVa core-prim . &who-rtd)
        (g$12493$1c1CVa core-prim . &irritants-rcd)
        (g$12492$1c1CVa core-prim . &irritants-rtd)
        (g$12491$1c1CVa core-prim . &assertion-rcd)
        (g$12490$1c1CVa core-prim . &assertion-rtd)
        (g$12489$1c1CVa core-prim . &violation-rcd)
        (g$12488$1c1CVa core-prim . &violation-rtd)
        (g$12487$1c1CVa core-prim . &error-rcd)
        (g$12486$1c1CVa core-prim . &error-rtd)
        (g$12485$1c1CVa core-prim . &serious-rcd)
        (g$12484$1c1CVa core-prim . &serious-rtd)
        (g$12483$1c1CVa core-prim . &warning-rcd)
        (g$12482$1c1CVa core-prim . &warning-rtd)
        (g$12481$1c1CVa core-prim . &message-rcd)
        (g$12480$1c1CVa core-prim . &message-rtd)
        (g$12479$1c1CVa core-prim . &condition-rcd)
        (g$12478$1c1CVa core-prim . &condition-rtd)
        (g$12477$1c1CVa core-prim . library-letrec*)
        (g$12476$1c1CVa core-prim . annotation-stripped)
        (g$12475$1c1CVa core-prim . annotation-source)
        (g$12474$1c1CVa core-prim . annotation-expression)
        (g$12473$1c1CVa core-prim . annotation?)
        (g$12472$1c1CVa core-prim . read-annotated)
        (g$12471$1c1CVa core-prim . tanh)
        (g$12470$1c1CVa core-prim . cosh)
        (g$12469$1c1CVa core-prim . sinh)
        (g$12468$1c1CVa core-prim . make-guid)
        (g$12467$1c1CVa core-prim . unspecified?)
        (g$12466$1c1CVa core-prim . make-trace)
        (g$12465$1c1CVa core-prim . make-list)
        (g$12464$1c1CVa core-prim . last-pair)
        (g$12463$1c1CVa core-prim . load-r5rs)
        (g$12462$1c1CVa core-prim . license)
        (g$12461$1c1CVa core-prim . stacktrace)
        (g$11883$1c1CVa core-prim . ironscheme-build)
        (g$12460$1c1CVa core-prim . define-clr-class-internal)
        (g$12459$1c1CVa core-prim . clr-field-set!-internal)
        (g$12458$1c1CVa core-prim . clr-field-get-internal)
        (g$12457$1c1CVa core-prim . clr-cast-internal)
        (g$12456$1c1CVa core-prim . clr-call-internal)
        (g$12455$1c1CVa core-prim . clr-new-internal)
        (g$12454$1c1CVa core-prim . clr-new-array-internal)
        (g$12453$1c1CVa core-prim . clr-is-internal)
        (g$12452$1c1CVa core-prim . clr-reference-internal)
        (g$12451$1c1CVa core-prim . clr-using-internal)
        (g$12450$1c1CVa core-prim . clr-clear-usings-internal)
        (g$8939$1c1CVa core-prim . syntax-error)
        (g$8812$1c1CVa core-prim . syntax-dispatch)
        (g$12449$1c1CVa core-prim . compile-core)
        (g$12448$1c1CVa core-prim . eval-core)
        (g$12447$1c1CVa core-prim . set-symbol-value!)
        (g$12446$1c1CVa core-prim . symbol-value)
        (g$12445$1c1CVa core-prim . ungensym)
        (g$12444$1c1CVa core-prim . gensym)
        (g$12443$1c1CVa core-prim . void)
        (g$12442$1c1CVa core-prim . load-serialized-library)
        (g$12441$1c1CVa core-prim . serialize-library)
        (g$11885$1c1CVa core-prim . compile-system-libraries)
        (g$11887$1c1CVa core-prim . compile->closure)
        (g$11886$1c1CVa core-prim . compile)
        (g$11882$1c1CVa core-prim . load)
        (g$8948$1c1CVa core-prim . interaction-environment)
        (g$12440$1c1CVa core-prim . char-ready?)
        (g$12439$1c1CVa core-prim . string-upcase)
        (g$12438$1c1CVa core-prim . string-titlecase)
        (g$12437$1c1CVa core-prim . string-normalize-nfkd)
        (g$12436$1c1CVa core-prim . string-normalize-nfkc)
        (g$12435$1c1CVa core-prim . string-normalize-nfd)
        (g$12434$1c1CVa core-prim . string-normalize-nfc)
        (g$12433$1c1CVa core-prim . string-foldcase)
        (g$12432$1c1CVa core-prim . string-downcase)
        (g$7018$1c1CVa core-prim . string-ci>?)
        (g$7020$1c1CVa core-prim . string-ci>=?)
        (g$7016$1c1CVa core-prim . string-ci=?)
        (g$7017$1c1CVa core-prim . string-ci<?)
        (g$7019$1c1CVa core-prim . string-ci<=?)
        (g$12431$1c1CVa core-prim . char-whitespace?)
        (g$12430$1c1CVa core-prim . char-upper-case?)
        (g$12429$1c1CVa core-prim . char-title-case?)
        (g$12428$1c1CVa core-prim . char-numeric?)
        (g$12427$1c1CVa core-prim . char-lower-case?)
        (g$12426$1c1CVa core-prim . char-general-category)
        (g$12425$1c1CVa core-prim . char-upcase)
        (g$12424$1c1CVa core-prim . char-titlecase)
        (g$12423$1c1CVa core-prim . char-foldcase)
        (g$12422$1c1CVa core-prim . char-downcase)
        (g$7069$1c1CVa core-prim . char-ci>?)
        (g$7071$1c1CVa core-prim . char-ci>=?)
        (g$7067$1c1CVa core-prim . char-ci=?)
        (g$7068$1c1CVa core-prim . char-ci<?)
        (g$7070$1c1CVa core-prim . char-ci<=?)
        (g$12421$1c1CVa core-prim . char-alphabetic?)
        (g$8549$1c1CVa core-prim . variable-transformer-procedure)
        (g$8548$1c1CVa core-prim . variable-transformer?)
        (g$8547$1c1CVa core-prim . make-variable-transformer)
        (g$8943$1c1CVa core-prim . identifier?)
        (g$8932$1c1CVa core-prim . generate-temporaries)
        (g$8933$1c1CVa core-prim . free-identifier=?)
        (g$8945$1c1CVa core-prim . syntax->datum)
        (g$8944$1c1CVa core-prim . datum->syntax)
        (g$8934$1c1CVa core-prim . bound-identifier=?)
        (g$12420$1c1CVa core-prim . record-type-descriptor?)
        (g$12419$1c1CVa core-prim . record-predicate)
        (g$12418$1c1CVa core-prim . record-mutator)
        (g$12417$1c1CVa core-prim . record-constructor)
        (g$12416$1c1CVa core-prim . record-accessor)
        (g$12415$1c1CVa core-prim . make-record-type-descriptor)
        (g$12414$1c1CVa core-prim . make-record-constructor-descriptor)
        (g$12413$1c1CVa core-prim . record?)
        (g$12412$1c1CVa core-prim . record-type-uid)
        (g$12411$1c1CVa core-prim . record-type-sealed?)
        (g$12410$1c1CVa core-prim . record-type-parent)
        (g$12409$1c1CVa core-prim . record-type-opaque?)
        (g$12408$1c1CVa core-prim . record-type-name)
        (g$12407$1c1CVa core-prim . record-type-generative?)
        (g$12406$1c1CVa core-prim . record-type-field-names)
        (g$12405$1c1CVa core-prim . record-rtd)
        (g$12404$1c1CVa core-prim . record-field-mutable?)
        (g$6379$1c1CVa core-prim . delete-file)
        (g$6378$1c1CVa core-prim . file-exists?)
        (g$12403$1c1CVa core-prim . vector-sort!)
        (g$12402$1c1CVa core-prim . vector-sort)
        (g$6892$1c1CVa core-prim . list-sort)
        (g$12401$1c1CVa core-prim . symbol-hash)
        (g$12400$1c1CVa core-prim . string-ci-hash)
        (g$12399$1c1CVa core-prim . string-hash)
        (g$12398$1c1CVa core-prim . equal-hash)
        (g$12397$1c1CVa core-prim . hashtable-equivalence-function)
        (g$12396$1c1CVa core-prim . make-hashtable)
        (g$12395$1c1CVa core-prim . hashtable-hash-function)
        (g$6346$1c1CVa core-prim . make-eqv-hashtable)
        (g$6345$1c1CVa core-prim . make-eq-hashtable)
        (g$12394$1c1CVa core-prim . hashtable?)
        (g$6352$1c1CVa core-prim . hashtable-update!)
        (g$6347$1c1CVa core-prim . hashtable-size)
        (g$6349$1c1CVa core-prim . hashtable-set!)
        (g$6348$1c1CVa core-prim . hashtable-ref)
        (g$12393$1c1CVa core-prim . hashtable-mutable?)
        (g$12392$1c1CVa core-prim . hashtable-keys)
        (g$12391$1c1CVa core-prim . hashtable-entries)
        (g$6350$1c1CVa core-prim . hashtable-delete!)
        (g$12390$1c1CVa core-prim . hashtable-copy)
        (g$6351$1c1CVa core-prim . hashtable-contains?)
        (g$6353$1c1CVa core-prim . hashtable-clear!)
        (g$7488$1c1CVa core-prim . call-with-output-file)
        (g$7487$1c1CVa core-prim . call-with-input-file)
        (g$12389$1c1CVa core-prim . write-char)
        (g$12388$1c1CVa core-prim . write)
        (g$7486$1c1CVa core-prim . with-output-to-file)
        (g$7485$1c1CVa core-prim . with-input-from-file)
        (g$12387$1c1CVa core-prim . read-char)
        (g$12386$1c1CVa core-prim . read)
        (g$12385$1c1CVa core-prim . peek-char)
        (g$12384$1c1CVa core-prim . open-output-file)
        (g$12383$1c1CVa core-prim . open-input-file)
        (g$12382$1c1CVa core-prim . newline)
        (g$12381$1c1CVa core-prim . display)
        (g$12380$1c1CVa core-prim . close-output-port)
        (g$12379$1c1CVa core-prim . close-input-port)
        (g$12378$1c1CVa core-prim . eof-object?)
        (g$12377$1c1CVa core-prim . eof-object)
        (g$12376$1c1CVa core-prim . current-error-port)
        (g$12375$1c1CVa core-prim . current-output-port)
        (g$12374$1c1CVa core-prim . current-input-port)
        (g$12373$1c1CVa core-prim . output-port?)
        (g$12372$1c1CVa core-prim . input-port?)
        (g$12371$1c1CVa core-prim . utf-8-codec)
        (g$12370$1c1CVa core-prim . utf-16-codec)
        (g$12369$1c1CVa core-prim . transcoder-error-handling-mode)
        (g$12368$1c1CVa core-prim . transcoder-eol-style)
        (g$12367$1c1CVa core-prim . transcoder-codec)
        (g$12366$1c1CVa core-prim . transcoded-port)
        (g$12365$1c1CVa core-prim . textual-port?)
        (g$12364$1c1CVa core-prim . string->bytevector)
        (g$12363$1c1CVa core-prim . standard-output-port)
        (g$12362$1c1CVa core-prim . standard-input-port)
        (g$12361$1c1CVa core-prim . standard-error-port)
        (g$12360$1c1CVa core-prim . set-port-position!)
        (g$12359$1c1CVa core-prim . put-u8)
        (g$12358$1c1CVa core-prim . put-string)
        (g$12357$1c1CVa core-prim . put-datum)
        (g$12356$1c1CVa core-prim . put-char)
        (g$12355$1c1CVa core-prim . put-bytevector)
        (g$7464$1c1CVa core-prim . port?)
        (g$12354$1c1CVa core-prim . port-transcoder)
        (g$12353$1c1CVa core-prim . port-position)
        (g$12352$1c1CVa core-prim . port-has-set-port-position!?)
        (g$12351$1c1CVa core-prim . port-has-port-position?)
        (g$12350$1c1CVa core-prim . port-eof?)
        (g$12349$1c1CVa core-prim . output-port-buffer-mode)
        (g$7463$1c1CVa core-prim . open-string-output-port)
        (g$12348$1c1CVa core-prim . open-string-input-port)
        (g$12347$1c1CVa core-prim . open-file-output-port)
        (g$12346$1c1CVa core-prim . open-file-input/output-port)
        (g$12345$1c1CVa core-prim . open-file-input-port)
        (g$12344$1c1CVa core-prim . open-bytevector-output-port)
        (g$12343$1c1CVa core-prim . open-bytevector-input-port)
        (g$12342$1c1CVa core-prim . native-transcoder)
        (g$12341$1c1CVa core-prim . native-eol-style)
        (g$12340$1c1CVa core-prim . make-transcoder)
        (g$12339$1c1CVa core-prim . latin-1-codec)
        (g$7320$1c1CVa core-prim . make-i/o-write-error)
        (g$7306$1c1CVa core-prim . make-i/o-read-error)
        (g$7425$1c1CVa core-prim . make-i/o-port-error)
        (g$7335$1c1CVa core-prim . make-i/o-invalid-position-error)
        (g$7352$1c1CVa core-prim . make-i/o-filename-error)
        (g$7368$1c1CVa core-prim . make-i/o-file-protection-error)
        (g$7382$1c1CVa core-prim . make-i/o-file-is-read-only-error)
        (g$7410$1c1CVa core-prim . make-i/o-file-does-not-exist-error)
        (g$7396$1c1CVa core-prim . make-i/o-file-already-exists-error)
        (g$7292$1c1CVa core-prim . make-i/o-error)
        (g$7456$1c1CVa core-prim . make-i/o-encoding-error)
        (g$7441$1c1CVa core-prim . make-i/o-decoding-error)
        (g$12338$1c1CVa core-prim . make-custom-textual-output-port)
        (g$12337$1c1CVa core-prim . make-custom-textual-input/output-port)
        (g$12336$1c1CVa core-prim . make-custom-textual-input-port)
        (g$12335$1c1CVa core-prim . make-custom-binary-output-port)
        (g$12334$1c1CVa core-prim . make-custom-binary-input/output-port)
        (g$12333$1c1CVa core-prim . make-custom-binary-input-port)
        (g$12332$1c1CVa core-prim . make-bytevector)
        (g$12331$1c1CVa core-prim . lookahead-u8)
        (g$12330$1c1CVa core-prim . lookahead-char)
        (g$7321$1c1CVa core-prim . i/o-write-error?)
        (g$7307$1c1CVa core-prim . i/o-read-error?)
        (g$7427$1c1CVa core-prim . i/o-port-error?)
        (g$7337$1c1CVa core-prim . i/o-invalid-position-error?)
        (g$7338$1c1CVa core-prim . i/o-error-position)
        (g$7354$1c1CVa core-prim . i/o-filename-error?)
        (g$7369$1c1CVa core-prim . i/o-file-protection-error?)
        (g$7383$1c1CVa core-prim . i/o-file-is-read-only-error?)
        (g$7411$1c1CVa core-prim . i/o-file-does-not-exist-error?)
        (g$7397$1c1CVa core-prim . i/o-file-already-exists-error?)
        (g$7293$1c1CVa core-prim . i/o-error?)
        (g$7428$1c1CVa core-prim . i/o-error-port)
        (g$7355$1c1CVa core-prim . i/o-error-filename)
        (g$7458$1c1CVa core-prim . i/o-encoding-error?)
        (g$7459$1c1CVa core-prim . i/o-encoding-error-char)
        (g$7442$1c1CVa core-prim . i/o-decoding-error?)
        (g$12329$1c1CVa core-prim . get-u8)
        (g$12328$1c1CVa core-prim . get-string-n!)
        (g$12327$1c1CVa core-prim . get-string-n)
        (g$12326$1c1CVa core-prim . get-string-all)
        (g$12325$1c1CVa core-prim . get-line)
        (g$12324$1c1CVa core-prim . get-datum)
        (g$12323$1c1CVa core-prim . get-char)
        (g$12322$1c1CVa core-prim . get-bytevector-some)
        (g$12321$1c1CVa core-prim . get-bytevector-n!)
        (g$12320$1c1CVa core-prim . get-bytevector-n)
        (g$12319$1c1CVa core-prim . get-bytevector-all)
        (g$12318$1c1CVa core-prim . flush-output-port)
        (g$12317$1c1CVa core-prim . close-port)
        (g$12316$1c1CVa core-prim . call-with-string-output-port)
        (g$12315$1c1CVa core-prim . call-with-port)
        (g$12314$1c1CVa core-prim . call-with-bytevector-output-port)
        (g$12313$1c1CVa core-prim . bytevector->string)
        (g$12312$1c1CVa core-prim . buffer-mode?)
        (g$12311$1c1CVa core-prim . binary-port?)
        (g$8923$1c1CVa core-prim . scheme-report-environment)
        (g$6872$1c1CVa core-prim . quotient)
        (g$8922$1c1CVa core-prim . null-environment)
        (g$6873$1c1CVa core-prim . remainder)
        (g$6874$1c1CVa core-prim . modulo)
        (g$12310$1c1CVa core-prim . inexact->exact)
        (g$6876$1c1CVa core-prim . force)
        (g$12309$1c1CVa core-prim . exact->inexact)
        (g$12308$1c1CVa core-prim . exit)
        (g$11879$1c1CVa core-prim . command-line)
        (g$12307$1c1CVa core-prim . string-fill!)
        (g$12306$1c1CVa core-prim . string-set!)
        (g$12305$1c1CVa core-prim . set-cdr!)
        (g$12304$1c1CVa core-prim . set-car!)
        (g$6459$1c1CVa core-prim . remove)
        (g$6460$1c1CVa core-prim . remv)
        (g$6445$1c1CVa core-prim . remp)
        (g$6461$1c1CVa core-prim . remq)
        (g$6444$1c1CVa core-prim . partition)
        (g$12303$1c1CVa core-prim . memv)
        (g$12302$1c1CVa core-prim . memq)
        (g$6451$1c1CVa core-prim . memp)
        (g$6450$1c1CVa core-prim . member)
        (g$6455$1c1CVa core-prim . exists)
        (g$6454$1c1CVa core-prim . for-all)
        (g$6458$1c1CVa core-prim . fold-right)
        (g$6457$1c1CVa core-prim . fold-left)
        (g$6443$1c1CVa core-prim . find)
        (g$6446$1c1CVa core-prim . filter)
        (g$6456$1c1CVa core-prim . cons*)
        (g$6447$1c1CVa core-prim . assv)
        (g$12301$1c1CVa core-prim . assq)
        (g$6449$1c1CVa core-prim . assp)
        (g$6448$1c1CVa core-prim . assoc)
        (g$12300$1c1CVa core-prim . with-exception-handler)
        (g$12299$1c1CVa core-prim . raise-continuable)
        (g$12298$1c1CVa core-prim . raise)
        (g$8925$1c1CVa core-prim . eval)
        (g$8921$1c1CVa core-prim . environment)
        (g$7545$1c1CVa core-prim . make-enumeration)
        (g$7552$1c1CVa core-prim . enum-set=?)
        (g$7546$1c1CVa core-prim . enum-set-universe)
        (g$7553$1c1CVa core-prim . enum-set-union)
        (g$7551$1c1CVa core-prim . enum-set-subset?)
        (g$7557$1c1CVa core-prim . enum-set-projection)
        (g$7550$1c1CVa core-prim . enum-set-member?)
        (g$7554$1c1CVa core-prim . enum-set-intersection)
        (g$7547$1c1CVa core-prim . enum-set-indexer)
        (g$7555$1c1CVa core-prim . enum-set-difference)
        (g$7548$1c1CVa core-prim . enum-set-constructor)
        (g$7556$1c1CVa core-prim . enum-set-complement)
        (g$7549$1c1CVa core-prim . enum-set->list)
        (g$6783$1c1CVa core-prim . who-condition?)
        (g$6694$1c1CVa core-prim . warning?)
        (g$6736$1c1CVa core-prim . violation?)
        (g$6860$1c1CVa core-prim . undefined-violation?)
        (g$6844$1c1CVa core-prim . syntax-violation?)
        (g$6846$1c1CVa core-prim . syntax-violation-subform)
        (g$6845$1c1CVa core-prim . syntax-violation-form)
        (g$8942$1c1CVa core-prim . syntax-violation)
        (g$12297$1c1CVa core-prim . simple-conditions)
        (g$6708$1c1CVa core-prim . serious-condition?)
        (g$6798$1c1CVa core-prim . non-continuable-violation?)
        (g$6679$1c1CVa core-prim . message-condition?)
        (g$6781$1c1CVa core-prim . make-who-condition)
        (g$6693$1c1CVa core-prim . make-warning)
        (g$6735$1c1CVa core-prim . make-violation)
        (g$6859$1c1CVa core-prim . make-undefined-violation)
        (g$6841$1c1CVa core-prim . make-syntax-violation)
        (g$6707$1c1CVa core-prim . make-serious-condition)
        (g$6797$1c1CVa core-prim . make-non-continuable-violation)
        (g$6677$1c1CVa core-prim . make-message-condition)
        (g$6825$1c1CVa core-prim . make-lexical-violation)
        (g$6764$1c1CVa core-prim . make-irritants-condition)
        (g$6811$1c1CVa core-prim . make-implementation-restriction-violation)
        (g$6721$1c1CVa core-prim . make-error)
        (g$6749$1c1CVa core-prim . make-assertion-violation)
        (g$6826$1c1CVa core-prim . lexical-violation?)
        (g$6766$1c1CVa core-prim . irritants-condition?)
        (g$6812$1c1CVa core-prim . implementation-restriction-violation?)
        (g$6722$1c1CVa core-prim . error?)
        (g$6784$1c1CVa core-prim . condition-who)
        (g$12296$1c1CVa core-prim . condition-predicate)
        (g$6680$1c1CVa core-prim . condition-message)
        (g$6767$1c1CVa core-prim . condition-irritants)
        (g$12295$1c1CVa core-prim . condition-accessor)
        (g$12294$1c1CVa core-prim . condition)
        (g$6750$1c1CVa core-prim . assertion-violation?)
        (g$12293$1c1CVa core-prim . condition?)
        (g$12292$1c1CVa core-prim . utf32->string)
        (g$12291$1c1CVa core-prim . utf16->string)
        (g$12290$1c1CVa core-prim . utf8->string)
        (g$12289$1c1CVa core-prim . uint-list->bytevector)
        (g$12288$1c1CVa core-prim . u8-list->bytevector)
        (g$12287$1c1CVa core-prim . string->utf8)
        (g$12286$1c1CVa core-prim . string->utf32)
        (g$12285$1c1CVa core-prim . string->utf16)
        (g$12284$1c1CVa core-prim . sint-list->bytevector)
        (g$6535$1c1CVa core-prim . native-endianness)
        (g$12283$1c1CVa core-prim . bytevector?)
        (g$12282$1c1CVa core-prim . bytevector=?)
        (g$12281$1c1CVa core-prim . bytevector-uint-set!)
        (g$12280$1c1CVa core-prim . bytevector-uint-ref)
        (g$12279$1c1CVa core-prim . bytevector-u8-set!)
        (g$12278$1c1CVa core-prim . bytevector-u8-ref)
        (g$6556$1c1CVa core-prim . bytevector-u64-set!)
        (g$6552$1c1CVa core-prim . bytevector-u64-ref)
        (g$6558$1c1CVa core-prim . bytevector-u64-native-set!)
        (g$6554$1c1CVa core-prim . bytevector-u64-native-ref)
        (g$6548$1c1CVa core-prim . bytevector-u32-set!)
        (g$6544$1c1CVa core-prim . bytevector-u32-ref)
        (g$6550$1c1CVa core-prim . bytevector-u32-native-set!)
        (g$6546$1c1CVa core-prim . bytevector-u32-native-ref)
        (g$6540$1c1CVa core-prim . bytevector-u16-set!)
        (g$6536$1c1CVa core-prim . bytevector-u16-ref)
        (g$6542$1c1CVa core-prim . bytevector-u16-native-set!)
        (g$6538$1c1CVa core-prim . bytevector-u16-native-ref)
        (g$12277$1c1CVa core-prim . bytevector-sint-set!)
        (g$12276$1c1CVa core-prim . bytevector-sint-ref)
        (g$12275$1c1CVa core-prim . bytevector-s8-set!)
        (g$12274$1c1CVa core-prim . bytevector-s8-ref)
        (g$6557$1c1CVa core-prim . bytevector-s64-set!)
        (g$6553$1c1CVa core-prim . bytevector-s64-ref)
        (g$6559$1c1CVa core-prim . bytevector-s64-native-set!)
        (g$6555$1c1CVa core-prim . bytevector-s64-native-ref)
        (g$6549$1c1CVa core-prim . bytevector-s32-set!)
        (g$6545$1c1CVa core-prim . bytevector-s32-ref)
        (g$6551$1c1CVa core-prim . bytevector-s32-native-set!)
        (g$6547$1c1CVa core-prim . bytevector-s32-native-ref)
        (g$6541$1c1CVa core-prim . bytevector-s16-set!)
        (g$6537$1c1CVa core-prim . bytevector-s16-ref)
        (g$6543$1c1CVa core-prim . bytevector-s16-native-set!)
        (g$6539$1c1CVa core-prim . bytevector-s16-native-ref)
        (g$12273$1c1CVa core-prim . bytevector-length)
        (g$12272$1c1CVa core-prim . bytevector-ieee-single-set!)
        (g$12271$1c1CVa core-prim . bytevector-ieee-single-ref)
        (g$6562$1c1CVa core-prim . bytevector-ieee-single-native-set!)
        (g$6560$1c1CVa core-prim . bytevector-ieee-single-native-ref)
        (g$12270$1c1CVa core-prim . bytevector-ieee-double-set!)
        (g$12269$1c1CVa core-prim . bytevector-ieee-double-ref)
        (g$6563$1c1CVa core-prim . bytevector-ieee-double-native-set!)
        (g$6561$1c1CVa core-prim . bytevector-ieee-double-native-ref)
        (g$12268$1c1CVa core-prim . bytevector-fill!)
        (g$12267$1c1CVa core-prim . bytevector-copy!)
        (g$12266$1c1CVa core-prim . bytevector-copy)
        (g$12265$1c1CVa core-prim . bytevector->uint-list)
        (g$12264$1c1CVa core-prim . bytevector->u8-list)
        (g$12263$1c1CVa core-prim . bytevector->sint-list)
        (g$7278$1c1CVa core-prim . no-nans-violation?)
        (g$7264$1c1CVa core-prim . no-infinities-violation?)
        (g$7277$1c1CVa core-prim . make-no-nans-violation)
        (g$7263$1c1CVa core-prim . make-no-infinities-violation)
        (g$12262$1c1CVa core-prim . real->flonum)
        (g$12261$1c1CVa core-prim . flzero?)
        (g$12260$1c1CVa core-prim . fltruncate)
        (g$12259$1c1CVa core-prim . fltan)
        (g$12258$1c1CVa core-prim . flsqrt)
        (g$12257$1c1CVa core-prim . flsin)
        (g$12256$1c1CVa core-prim . flround)
        (g$12255$1c1CVa core-prim . flpositive?)
        (g$12254$1c1CVa core-prim . flonum?)
        (g$12253$1c1CVa core-prim . flodd?)
        (g$12252$1c1CVa core-prim . flnumerator)
        (g$12251$1c1CVa core-prim . flnegative?)
        (g$12250$1c1CVa core-prim . flnan?)
        (g$12249$1c1CVa core-prim . flmod0)
        (g$12248$1c1CVa core-prim . flmod)
        (g$12247$1c1CVa core-prim . flmin)
        (g$12246$1c1CVa core-prim . flmax)
        (g$12245$1c1CVa core-prim . fllog)
        (g$12244$1c1CVa core-prim . flinteger?)
        (g$12243$1c1CVa core-prim . flinfinite?)
        (g$12242$1c1CVa core-prim . flfloor)
        (g$12241$1c1CVa core-prim . flfinite?)
        (g$12240$1c1CVa core-prim . flexpt)
        (g$12239$1c1CVa core-prim . flexp)
        (g$12238$1c1CVa core-prim . fleven?)
        (g$12237$1c1CVa core-prim . fldiv0-and-mod0)
        (g$12236$1c1CVa core-prim . fldiv0)
        (g$12235$1c1CVa core-prim . fldiv-and-mod)
        (g$12234$1c1CVa core-prim . fldiv)
        (g$12233$1c1CVa core-prim . fldenominator)
        (g$12232$1c1CVa core-prim . flcos)
        (g$12231$1c1CVa core-prim . flceiling)
        (g$12230$1c1CVa core-prim . flatan)
        (g$12229$1c1CVa core-prim . flasin)
        (g$12228$1c1CVa core-prim . flacos)
        (g$12227$1c1CVa core-prim . flabs)
        (g$12226$1c1CVa core-prim . fl>?)
        (g$12225$1c1CVa core-prim . fl>=?)
        (g$12224$1c1CVa core-prim . fl=?)
        (g$12223$1c1CVa core-prim . fl<?)
        (g$12222$1c1CVa core-prim . fl<=?)
        (g$12221$1c1CVa core-prim . fl/)
        (g$12220$1c1CVa core-prim . fl-)
        (g$12219$1c1CVa core-prim . fl+)
        (g$12218$1c1CVa core-prim . fl*)
        (g$12217$1c1CVa core-prim . fixnum->flonum)
        (g$12216$1c1CVa core-prim . fxzero?)
        (g$12215$1c1CVa core-prim . fxxor)
        (g$7209$1c1CVa core-prim . fxrotate-bit-field)
        (g$12214$1c1CVa core-prim . fxreverse-bit-field)
        (g$12213$1c1CVa core-prim . fxpositive?)
        (g$12212$1c1CVa core-prim . fxodd?)
        (g$12211$1c1CVa core-prim . fxnot)
        (g$12210$1c1CVa core-prim . fxnegative?)
        (g$12209$1c1CVa core-prim . fxmod0)
        (g$12208$1c1CVa core-prim . fxmod)
        (g$12207$1c1CVa core-prim . fxmin)
        (g$12206$1c1CVa core-prim . fxmax)
        (g$12205$1c1CVa core-prim . fxlength)
        (g$12204$1c1CVa core-prim . fxior)
        (g$7203$1c1CVa core-prim . fxif)
        (g$12203$1c1CVa core-prim . fxfirst-bit-set)
        (g$12202$1c1CVa core-prim . fxeven?)
        (g$12201$1c1CVa core-prim . fxdiv0-and-mod0)
        (g$12200$1c1CVa core-prim . fxdiv0)
        (g$12199$1c1CVa core-prim . fxdiv-and-mod)
        (g$12198$1c1CVa core-prim . fxdiv)
        (g$7206$1c1CVa core-prim . fxcopy-bit-field)
        (g$7204$1c1CVa core-prim . fxcopy-bit)
        (g$12197$1c1CVa core-prim . fxbit-set?)
        (g$7205$1c1CVa core-prim . fxbit-field)
        (g$12196$1c1CVa core-prim . fxbit-count)
        (g$7208$1c1CVa core-prim . fxarithmetic-shift-right)
        (g$7207$1c1CVa core-prim . fxarithmetic-shift-left)
        (g$12195$1c1CVa core-prim . fxarithmetic-shift)
        (g$12194$1c1CVa core-prim . fxand)
        (g$12193$1c1CVa core-prim . fx>?)
        (g$12192$1c1CVa core-prim . fx>=?)
        (g$12191$1c1CVa core-prim . fx=?)
        (g$12190$1c1CVa core-prim . fx<?)
        (g$12189$1c1CVa core-prim . fx<=?)
        (g$12188$1c1CVa core-prim . fx-/carry)
        (g$12187$1c1CVa core-prim . fx-)
        (g$12186$1c1CVa core-prim . fx+/carry)
        (g$12185$1c1CVa core-prim . fx+)
        (g$12184$1c1CVa core-prim . fx*/carry)
        (g$12183$1c1CVa core-prim . fx*)
        (g$12182$1c1CVa core-prim . greatest-fixnum)
        (g$12181$1c1CVa core-prim . least-fixnum)
        (g$12180$1c1CVa core-prim . fixnum-width)
        (g$12179$1c1CVa core-prim . fixnum?)
        (g$7161$1c1CVa core-prim . bitwise-rotate-bit-field)
        (g$12178$1c1CVa core-prim . bitwise-reverse-bit-field)
        (g$12177$1c1CVa core-prim . bitwise-length)
        (g$7155$1c1CVa core-prim . bitwise-if)
        (g$12176$1c1CVa core-prim . bitwise-first-bit-set)
        (g$7158$1c1CVa core-prim . bitwise-copy-bit-field)
        (g$7156$1c1CVa core-prim . bitwise-copy-bit)
        (g$12175$1c1CVa core-prim . bitwise-bit-set?)
        (g$12174$1c1CVa core-prim . bitwise-bit-field)
        (g$12173$1c1CVa core-prim . bitwise-bit-count)
        (g$12172$1c1CVa core-prim . bitwise-xor)
        (g$12171$1c1CVa core-prim . bitwise-ior)
        (g$12170$1c1CVa core-prim . bitwise-and)
        (g$12169$1c1CVa core-prim . bitwise-not)
        (g$7160$1c1CVa core-prim . bitwise-arithmetic-shift-right)
        (g$7159$1c1CVa core-prim . bitwise-arithmetic-shift-left)
        (g$12168$1c1CVa core-prim . bitwise-arithmetic-shift)
        (g$12167$1c1CVa core-prim . zero?)
        (g$12166$1c1CVa core-prim . vector?)
        (g$12165$1c1CVa core-prim . vector-set!)
        (g$12164$1c1CVa core-prim . vector-ref)
        (g$12163$1c1CVa core-prim . vector-map)
        (g$12162$1c1CVa core-prim . vector-length)
        (g$12161$1c1CVa core-prim . vector-for-each)
        (g$12160$1c1CVa core-prim . vector-fill!)
        (g$12159$1c1CVa core-prim . vector->list)
        (g$12158$1c1CVa core-prim . vector)
        (g$12157$1c1CVa core-prim . values)
        (g$12156$1c1CVa core-prim . truncate)
        (g$12155$1c1CVa core-prim . tan)
        (g$12154$1c1CVa core-prim . symbol?)
        (g$5844$1c1CVa core-prim . symbol=?)
        (g$12153$1c1CVa core-prim . symbol->string)
        (g$12152$1c1CVa core-prim . substring)
        (g$12151$1c1CVa core-prim . string?)
        (g$5841$1c1CVa core-prim . string>?)
        (g$5843$1c1CVa core-prim . string>=?)
        (g$5839$1c1CVa core-prim . string=?)
        (g$5840$1c1CVa core-prim . string<?)
        (g$5842$1c1CVa core-prim . string<=?)
        (g$12150$1c1CVa core-prim . string-ref)
        (g$12149$1c1CVa core-prim . string-length)
        (g$12148$1c1CVa core-prim . string-for-each)
        (g$12147$1c1CVa core-prim . string-copy)
        (g$12146$1c1CVa core-prim . string-append)
        (g$12145$1c1CVa core-prim . string->symbol)
        (g$12144$1c1CVa core-prim . string->number)
        (g$12143$1c1CVa core-prim . string->list)
        (g$12142$1c1CVa core-prim . string)
        (g$12141$1c1CVa core-prim . sqrt)
        (g$12140$1c1CVa core-prim . sin)
        (g$12139$1c1CVa core-prim . round)
        (g$12138$1c1CVa core-prim . reverse)
        (g$12137$1c1CVa core-prim . real?)
        (g$12136$1c1CVa core-prim . real-valued?)
        (g$12135$1c1CVa core-prim . real-part)
        (g$5897$1c1CVa core-prim . rationalize)
        (g$12134$1c1CVa core-prim . rational?)
        (g$12133$1c1CVa core-prim . rational-valued?)
        (g$12132$1c1CVa core-prim . procedure?)
        (g$12131$1c1CVa core-prim . positive?)
        (g$12130$1c1CVa core-prim . pair?)
        (g$12129$1c1CVa core-prim . odd?)
        (g$12128$1c1CVa core-prim . numerator)
        (g$12127$1c1CVa core-prim . number?)
        (g$12126$1c1CVa core-prim . number->string)
        (g$12125$1c1CVa core-prim . null?)
        (g$12124$1c1CVa core-prim . not)
        (g$12123$1c1CVa core-prim . negative?)
        (g$12122$1c1CVa core-prim . nan?)
        (g$12121$1c1CVa core-prim . min)
        (g$12120$1c1CVa core-prim . max)
        (g$12119$1c1CVa core-prim . map)
        (g$12118$1c1CVa core-prim . make-vector)
        (g$12117$1c1CVa core-prim . make-string)
        (g$12116$1c1CVa core-prim . make-rectangular)
        (g$12115$1c1CVa core-prim . make-polar)
        (g$12114$1c1CVa core-prim . magnitude)
        (g$12113$1c1CVa core-prim . log)
        (g$12112$1c1CVa core-prim . list?)
        (g$12111$1c1CVa core-prim . list-tail)
        (g$12110$1c1CVa core-prim . list-ref)
        (g$12109$1c1CVa core-prim . list->vector)
        (g$12108$1c1CVa core-prim . list->string)
        (g$12107$1c1CVa core-prim . list)
        (g$12106$1c1CVa core-prim . length)
        (g$12105$1c1CVa core-prim . lcm)
        (g$12104$1c1CVa core-prim . integer?)
        (g$12103$1c1CVa core-prim . integer-valued?)
        (g$12102$1c1CVa core-prim . integer->char)
        (g$12101$1c1CVa core-prim . infinite?)
        (g$12100$1c1CVa core-prim . inexact?)
        (g$12099$1c1CVa core-prim . inexact)
        (g$12098$1c1CVa core-prim . imag-part)
        (g$12097$1c1CVa core-prim . gcd)
        (g$12096$1c1CVa core-prim . for-each)
        (g$12095$1c1CVa core-prim . floor)
        (g$12094$1c1CVa core-prim . finite?)
        (g$12093$1c1CVa core-prim . expt)
        (g$12092$1c1CVa core-prim . exp)
        (g$12091$1c1CVa core-prim . exact?)
        (g$12090$1c1CVa core-prim . exact-integer-sqrt)
        (g$12089$1c1CVa core-prim . exact)
        (g$12088$1c1CVa core-prim . even?)
        (g$12087$1c1CVa core-prim . error)
        (g$12086$1c1CVa core-prim . eqv?)
        (g$12085$1c1CVa core-prim . equal?)
        (g$12084$1c1CVa core-prim . eq?)
        (g$12083$1c1CVa core-prim . dynamic-wind)
        (g$12082$1c1CVa core-prim . div0-and-mod0)
        (g$12081$1c1CVa core-prim . mod0)
        (g$12080$1c1CVa core-prim . div0)
        (g$12079$1c1CVa core-prim . div-and-mod)
        (g$12078$1c1CVa core-prim . mod)
        (g$12077$1c1CVa core-prim . div)
        (g$12076$1c1CVa core-prim . denominator)
        (g$12075$1c1CVa core-prim . cos)
        (g$12074$1c1CVa core-prim . cons)
        (g$12073$1c1CVa core-prim . complex?)
        (g$12072$1c1CVa core-prim . char?)
        (g$5894$1c1CVa core-prim . char>?)
        (g$5896$1c1CVa core-prim . char>=?)
        (g$5892$1c1CVa core-prim . char=?)
        (g$5893$1c1CVa core-prim . char<?)
        (g$5895$1c1CVa core-prim . char<=?)
        (g$12071$1c1CVa core-prim . char->integer)
        (g$12070$1c1CVa core-prim . ceiling)
        (g$12069$1c1CVa core-prim . call-with-values)
        (g$12068$1c1CVa core-prim . call/cc)
        (g$12067$1c1CVa core-prim . call-with-current-continuation)
        (g$5792$1c1CVa core-prim . cddddr)
        (g$5791$1c1CVa core-prim . cdddar)
        (g$5790$1c1CVa core-prim . cddadr)
        (g$5789$1c1CVa core-prim . cddaar)
        (g$5788$1c1CVa core-prim . cdaddr)
        (g$5787$1c1CVa core-prim . cdadar)
        (g$5786$1c1CVa core-prim . cdaadr)
        (g$5785$1c1CVa core-prim . cdaaar)
        (g$5784$1c1CVa core-prim . cadddr)
        (g$5783$1c1CVa core-prim . caddar)
        (g$5782$1c1CVa core-prim . cadadr)
        (g$5781$1c1CVa core-prim . cadaar)
        (g$5780$1c1CVa core-prim . caaddr)
        (g$5779$1c1CVa core-prim . caadar)
        (g$5778$1c1CVa core-prim . caaadr)
        (g$5777$1c1CVa core-prim . caaaar)
        (g$5776$1c1CVa core-prim . cdddr)
        (g$5775$1c1CVa core-prim . cddar)
        (g$5774$1c1CVa core-prim . cdadr)
        (g$5773$1c1CVa core-prim . cdaar)
        (g$5772$1c1CVa core-prim . caddr)
        (g$5771$1c1CVa core-prim . cadar)
        (g$5770$1c1CVa core-prim . caadr)
        (g$5769$1c1CVa core-prim . caaar)
        (g$5768$1c1CVa core-prim . cddr)
        (g$5767$1c1CVa core-prim . cdar)
        (g$5766$1c1CVa core-prim . cadr)
        (g$5765$1c1CVa core-prim . caar)
        (g$12066$1c1CVa core-prim . cdr)
        (g$12065$1c1CVa core-prim . car)
        (g$12064$1c1CVa core-prim . boolean?)
        (g$5845$1c1CVa core-prim . boolean=?)
        (g$12063$1c1CVa core-prim . atan)
        (g$12062$1c1CVa core-prim . assertion-violation)
        (g$12061$1c1CVa core-prim . asin)
        (g$12060$1c1CVa core-prim . apply)
        (g$12059$1c1CVa core-prim . append)
        (g$12058$1c1CVa core-prim . angle)
        (g$12057$1c1CVa core-prim . acos)
        (g$12056$1c1CVa core-prim . abs)
        (g$12055$1c1CVa core-prim . /)
        (g$12054$1c1CVa core-prim . *)
        (g$12053$1c1CVa core-prim . -)
        (g$12052$1c1CVa core-prim . +)
        (g$12051$1c1CVa core-prim . >=)
        (g$12050$1c1CVa core-prim . >)
        (g$12049$1c1CVa core-prim . =)
        (g$12048$1c1CVa core-prim . <=)
        (g$12047$1c1CVa core-prim . <)
        (g$12046$1c1CVa core-prim . make-record-printer)
        (g$12045$1c1CVa core-prim . eqv-hash)
        (g$12044$1c1CVa core-prim . eq-hash)
        (g$12043$1c1CVa core-prim . reverse!)
        (g$7521$1c1CVa core-prim . enum-set?)
        (g$6875$1c1CVa core-prim . make-promise)
        (g$11881$1c1CVa core-prim . load/args)
        (g$7629$1c1CVa core-prim . printf)
        (g$7630$1c1CVa core-prim . fprintf)
        (g$7631$1c1CVa core-prim . format)
        (g$12042$1c1CVa core-prim . get-arity)
        (g$12041$1c1CVa core-prim . gc-collect)
        (g$12040$1c1CVa core-prim . clr-type?)
        (g$12039$1c1CVa core-prim . get-clr-type)
        (g$12038$1c1CVa core-prim . get-command-line)
        (g$12037$1c1CVa core-prim . vector-append)
        (g$12036$1c1CVa core-prim . vector-filter)
        (g$12035$1c1CVa core-prim . vector-reverse!)
        (g$12034$1c1CVa core-prim . vector-contains?)
        (g$12033$1c1CVa core-prim . vector-index-of)
        (g$12032$1c1CVa core-prim . vector-copy)
        (g$12031$1c1CVa core-prim . vector-binary-search)
        (g$12030$1c1CVa core-prim . get-output-string)
        (g$12029$1c1CVa core-prim . open-output-string)
        (g$12028$1c1CVa core-prim . open-input-string)
        (g$12027$1c1CVa core-prim . string-ci-compare)
        (g$12026$1c1CVa core-prim . string-compare)
        (g$12025$1c1CVa core-prim . string-format)
        (g$11878$1c1CVa core-prim . trace-printer)
        (g$12024$1c1CVa core-prim . make-traced-procedure)
        (g$7651$1c1CVa core-prim . make-traced-macro)
        (g$8938$1c1CVa core-prim . assertion-error)
        (g$12023$1c1CVa core-prim . pmap)
        (g$12022$1c1CVa core-prim . time-it)
        (g$7656$1c1CVa core-prim . make-parameter)
        (g$12021$1c1CVa core-prim . library-locator)
        (g$12020$1c1CVa core-prim . get-library-paths)
        (g$8919$1c1CVa core-prim . environment-symbols)
        (g$8918$1c1CVa core-prim . interaction-environment-symbols)
        (g$8087$1c1CVa core-prim . library-path)
        (g$8088$1c1CVa core-prim . library-extensions)
        (g$8108$1c1CVa core-prim . installed-libraries)
        (g$8924$1c1CVa core-prim . expand)
        (g$12019$1c1CVa $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12018$1c1CVa $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12017$1c1CVa $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12016$1c1CVa $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12015$1c1CVa $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12014$1c1CVa
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12013$1c1CVa
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12012$1c1CVa
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12011$1c1CVa
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12010$1c1CVa $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12009$1c1CVa
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12008$1c1CVa $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12007$1c1CVa $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12006$1c1CVa $core-rtd &i/o-rtd &i/o-rcd)
        (g$12005$1c1CVa $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12004$1c1CVa $core-rtd &undefined-rtd &undefined-rcd)
        (g$12003$1c1CVa $core-rtd &syntax-rtd &syntax-rcd)
        (g$12002$1c1CVa $core-rtd &lexical-rtd &lexical-rcd)
        (g$12001$1c1CVa
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12000$1c1CVa $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11999$1c1CVa $core-rtd &who-rtd &who-rcd)
        (g$11998$1c1CVa $core-rtd &irritants-rtd &irritants-rcd)
        (g$11997$1c1CVa $core-rtd &assertion-rtd &assertion-rcd)
        (g$11996$1c1CVa $core-rtd &violation-rtd &violation-rcd)
        (g$11995$1c1CVa $core-rtd &error-rtd &error-rcd)
        (g$11994$1c1CVa $core-rtd &serious-rtd &serious-rcd)
        (g$11993$1c1CVa $core-rtd &warning-rtd &warning-rcd)
        (g$11992$1c1CVa $core-rtd &message-rtd &message-rcd)
        (g$11991$1c1CVa $core-rtd &condition-rtd &condition-rcd)
        (g$11990$1c1CVa macro . define-condition-type)
        (g$11989$1c1CVa macro . define-enumeration)
        (g$11988$1c1CVa macro . define-record-type)
        (g$11987$1c1CVa macro . parent-rtd)
        (g$11986$1c1CVa macro . nongenerative)
        (g$11985$1c1CVa macro . opaque)
        (g$11984$1c1CVa macro . sealed)
        (g$11983$1c1CVa macro . protocol)
        (g$11982$1c1CVa macro . parent)
        (g$11981$1c1CVa macro . immutable)
        (g$11980$1c1CVa macro . mutable)
        (g$11979$1c1CVa macro . fields)
        (g$11978$1c1CVa macro . error-handling-mode)
        (g$11977$1c1CVa macro . file-options)
        (g$11976$1c1CVa macro . buffer-mode)
        (g$11975$1c1CVa macro . eol-style)
        (g$11974$1c1CVa macro . guard)
        (g$11973$1c1CVa macro . trace-letrec-syntax)
        (g$11972$1c1CVa macro . trace-let-syntax)
        (g$11971$1c1CVa macro . trace-define-syntax)
        (g$11970$1c1CVa macro . trace-define)
        (g$11969$1c1CVa macro . trace-lambda)
        (g$11968$1c1CVa macro . unsyntax-splicing)
        (g$11967$1c1CVa macro . unsyntax)
        (g$11966$1c1CVa macro . unquote-splicing)
        (g$11965$1c1CVa macro . unquote)
        (g$11964$1c1CVa macro . _)
        (g$11963$1c1CVa macro . else)
        (g$11962$1c1CVa macro . =>)
        (g$11961$1c1CVa macro . ...)
        (g$11960$1c1CVa macro . assert)
        (g$11959$1c1CVa macro . endianness)
        (g$11958$1c1CVa macro . delay)
        (g$11957$1c1CVa macro . time)
        (g$11956$1c1CVa macro . or)
        (g$11955$1c1CVa macro . and)
        (g$11954$1c1CVa macro . do)
        (g$11953$1c1CVa macro . cond)
        (g$11952$1c1CVa macro . let*)
        (g$11951$1c1CVa macro . let)
        (g$11950$1c1CVa macro . identifier-syntax)
        (g$11949$1c1CVa macro . with-syntax)
        (g$11948$1c1CVa macro . quasisyntax)
        (g$11947$1c1CVa macro . quasiquote)
        (g$11946$1c1CVa macro . syntax-rules)
        (g$11945$1c1CVa macro . include-into)
        (g$11944$1c1CVa macro . include)
        (g$11943$1c1CVa macro . define-struct)
        (g$11942$1c1CVa macro . let-values)
        (g$11941$1c1CVa macro . let*-values)
        (g$11940$1c1CVa core-macro . record-constructor-descriptor)
        (g$11939$1c1CVa core-macro . record-type-descriptor)
        (g$11938$1c1CVa core-macro . fluid-let-syntax)
        (g$11937$1c1CVa macro . case)
        (g$11936$1c1CVa macro . parameterize)
        (g$11935$1c1CVa macro . unless)
        (g$11934$1c1CVa macro . when)
        (g$11933$1c1CVa core-macro . if)
        (g$11932$1c1CVa core-macro . letrec*)
        (g$11931$1c1CVa core-macro . letrec)
        (g$11930$1c1CVa core-macro . type-descriptor)
        (g$11929$1c1CVa core-macro . case-lambda)
        (g$11928$1c1CVa core-macro . lambda)
        (g$11927$1c1CVa core-macro . syntax)
        (g$11926$1c1CVa core-macro . syntax-case)
        (g$11925$1c1CVa core-macro . quote)
        (g$11924$1c1CVa core-macro . foreign-call)
        (g$11923$1c1CVa letrec-syntax)
        (g$11922$1c1CVa let-syntax)
        (g$11921$1c1CVa set!)
        (g$11920$1c1CVa import)
        (g$11919$1c1CVa library)
        (g$11918$1c1CVa begin)
        (g$11917$1c1CVa module)
        (g$11916$1c1CVa define-syntax)
        (g$11915$1c1CVa define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7177$1c1CVa
      'g$12570$1c1CVa
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12449$1c1CVa)
        (eval-core . g$12448$1c1CVa)
        (set-symbol-value! . g$12447$1c1CVa)
        (symbol-value . g$12446$1c1CVa)
        (gensym . g$12444$1c1CVa)
        (void . g$12443$1c1CVa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11198$1c1CVa
     g$trace-printer$11238$1c1CVa
     (g$make-parameter$6631$1c1CVa write))
   (g$command-line$11199$1c1CVa
     g$command-line$11239$1c1CVa
     (g$make-parameter$6631$1c1CVa (get-command-line)))
   (g$local-library-path$11200$1c1CVa
     g$local-library-path$11240$1c1CVa
     (case-lambda
       ((g$filename$11211$1c1CVa)
        (cons
          (g$get-directory-name$5380$1c1CVa g$filename$11211$1c1CVa)
          (g$library-path$7161$1c1CVa)))))
   (g$load/args$11201$1c1CVa
     g$load/args$11241$1c1CVa
     (case-lambda
       ((g$filename$11212$1c1CVa . g$args$11213$1c1CVa)
        (begin
          (apply
            g$load-r6rs-top-level$11208$1c1CVa
            g$filename$11212$1c1CVa
            'load
            g$args$11213$1c1CVa)
          (void)))))
   (g$load$11202$1c1CVa
     g$load$11242$1c1CVa
     (case-lambda
       ((g$filename$11214$1c1CVa)
        (begin
          (apply
            g$load-r6rs-top-level$11208$1c1CVa
            g$filename$11214$1c1CVa
            'load
            (cdr (g$command-line$11199$1c1CVa)))
          (void)))))
   (g$ironscheme-build$11203$1c1CVa
     g$ironscheme-build$11243$1c1CVa
     (case-lambda (() (g$load$11202$1c1CVa '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11204$1c1CVa
     g$eval-top-level$11244$1c1CVa
     (case-lambda
       ((g$x$11215$1c1CVa)
        (g$eval$11173$1c1CVa
          g$x$11215$1c1CVa
          (g$interaction-environment$11196$1c1CVa)))))
   (g$compile-system-libraries$11205$1c1CVa
     g$compile-system-libraries$11245$1c1CVa
     (case-lambda
       (()
        (g$eval-top-level$11204$1c1CVa
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11206$1c1CVa
     g$compile$11246$1c1CVa
     (case-lambda
       ((g$filename$11216$1c1CVa)
        (g$load-r6rs-top-level$11208$1c1CVa g$filename$11216$1c1CVa 'compile))))
   (g$compile->closure$11207$1c1CVa
     g$compile->closure$11247$1c1CVa
     (case-lambda
       ((g$filename$11217$1c1CVa)
        (g$load-r6rs-top-level$11208$1c1CVa g$filename$11217$1c1CVa 'closure))))
   (g$load-r6rs-top-level$11208$1c1CVa
     g$load-r6rs-top-level$11248$1c1CVa
     (case-lambda
       ((g$filename$11218$1c1CVa g$how$11219$1c1CVa . g$args$11220$1c1CVa)
        ((case-lambda
           ((g$library-path$11223$1c1CVa g$library-path$11224$1c1CVa)
            ((case-lambda
               ((g$swap$11225$1c1CVa)
                (dynamic-wind
                  g$swap$11225$1c1CVa
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11226$1c1CVa)
                         ((case-lambda
                            ((g$t$11227$1c1CVa)
                             (if (memv g$t$11227$1c1CVa '(closure))
                               (g$pre-compile-r6rs-top-level$11195$1c1CVa
                                 g$x*$11226$1c1CVa)
                               (if (memv g$t$11227$1c1CVa '(load))
                                 ((case-lambda
                                    ((g$command-line$11230$1c1CVa
                                       g$command-line$11231$1c1CVa)
                                     ((case-lambda
                                        ((g$swap$11232$1c1CVa)
                                         (dynamic-wind
                                           g$swap$11232$1c1CVa
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11194$1c1CVa
                                                 g$x*$11226$1c1CVa))))
                                           g$swap$11232$1c1CVa)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11233$1c1CVa)
                                             (begin
                                               (g$command-line$11230$1c1CVa
                                                 g$command-line$11231$1c1CVa)
                                               (set! g$command-line$11231$1c1CVa
                                                 g$t$11233$1c1CVa))))
                                          (g$command-line$11230$1c1CVa)))))))
                                  g$command-line$11199$1c1CVa
                                  (cons
                                    g$filename$11218$1c1CVa
                                    (map (case-lambda
                                           ((g$x$11234$1c1CVa)
                                            (g$format$6546$1c1CVa
                                              '"~a"
                                              g$x$11234$1c1CVa)))
                                         g$args$11220$1c1CVa)))
                                 (if (memv g$t$11227$1c1CVa '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11194$1c1CVa
                                       g$x*$11226$1c1CVa)
                                     (g$serialize-all$7165$1c1CVa
                                       serialize-library
                                       g$compile-core-expr$6879$1c1CVa))
                                   (if '#f '#f (void)))))))
                          g$how$11219$1c1CVa)))
                      (g$with-input-from-file$6377$1c1CVa
                        g$filename$11218$1c1CVa
                        (case-lambda
                          (()
                           ((letrec ((g$f$11235$1c1CVa
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11236$1c1CVa)
                                              (if (eof-object? g$x$11236$1c1CVa)
                                                '()
                                                (cons
                                                  g$x$11236$1c1CVa
                                                  (g$f$11235$1c1CVa)))))
                                           (read-annotated))))))
                              g$f$11235$1c1CVa))))))))
                  g$swap$11225$1c1CVa)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11237$1c1CVa)
                    (begin
                      (g$library-path$11223$1c1CVa g$library-path$11224$1c1CVa)
                      (set! g$library-path$11224$1c1CVa g$t$11237$1c1CVa))))
                 (g$library-path$11223$1c1CVa)))))))
         g$library-path$7161$1c1CVa
         (g$local-library-path$11200$1c1CVa g$filename$11218$1c1CVa)))))
   (g$fo$11209$1c1CVa
     g$fo$11249$1c1CVa
     (g$make-enumeration$6508$1c1CVa '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7166$1c1CVa
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11210$1c1CVa)
         (if (g$serious-condition?$5763$1c1CVa g$ex$11210$1c1CVa)
           (raise g$ex$11210$1c1CVa)
           (begin (display g$ex$11210$1c1CVa) (newline))))))
    (set-symbol-value! 'load g$load$11202$1c1CVa)
    (set-symbol-value! 'compile g$compile$11206$1c1CVa)
    (set-symbol-value! 'compile->closure g$compile->closure$11207$1c1CVa)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11204$1c1CVa)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11166$1c1CVa)
    (set-symbol-value! 'expanded2core g$expanded->core$6878$1c1CVa)
    (set-symbol-value! 'trace-printer g$trace-printer$11198$1c1CVa)
    (g$file-options-constructor$6632$1c1CVa
      (g$enum-set-constructor$6511$1c1CVa g$fo$11209$1c1CVa))
    (g$library-path$7161$1c1CVa (get-library-paths))))

