;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$4805$Of4HK
     g$caar$4877$Of4HK
     (case-lambda ((g$x$4836$Of4HK) (car (car g$x$4836$Of4HK)))))
   (g$cadr$4806$Of4HK
     g$cadr$4878$Of4HK
     (case-lambda ((g$x$4837$Of4HK) (car (cdr g$x$4837$Of4HK)))))
   (g$cdar$4807$Of4HK
     g$cdar$4879$Of4HK
     (case-lambda ((g$x$4838$Of4HK) (cdr (car g$x$4838$Of4HK)))))
   (g$cddr$4808$Of4HK
     g$cddr$4880$Of4HK
     (case-lambda ((g$x$4839$Of4HK) (cdr (cdr g$x$4839$Of4HK)))))
   (g$caaar$4809$Of4HK
     g$caaar$4881$Of4HK
     (case-lambda ((g$x$4840$Of4HK) (g$caar$4805$Of4HK (car g$x$4840$Of4HK)))))
   (g$caadr$4810$Of4HK
     g$caadr$4882$Of4HK
     (case-lambda ((g$x$4841$Of4HK) (g$caar$4805$Of4HK (cdr g$x$4841$Of4HK)))))
   (g$cadar$4811$Of4HK
     g$cadar$4883$Of4HK
     (case-lambda ((g$x$4842$Of4HK) (g$cadr$4806$Of4HK (car g$x$4842$Of4HK)))))
   (g$caddr$4812$Of4HK
     g$caddr$4884$Of4HK
     (case-lambda ((g$x$4843$Of4HK) (g$cadr$4806$Of4HK (cdr g$x$4843$Of4HK)))))
   (g$cdaar$4813$Of4HK
     g$cdaar$4885$Of4HK
     (case-lambda ((g$x$4844$Of4HK) (g$cdar$4807$Of4HK (car g$x$4844$Of4HK)))))
   (g$cdadr$4814$Of4HK
     g$cdadr$4886$Of4HK
     (case-lambda ((g$x$4845$Of4HK) (g$cdar$4807$Of4HK (cdr g$x$4845$Of4HK)))))
   (g$cddar$4815$Of4HK
     g$cddar$4887$Of4HK
     (case-lambda ((g$x$4846$Of4HK) (g$cddr$4808$Of4HK (car g$x$4846$Of4HK)))))
   (g$cdddr$4816$Of4HK
     g$cdddr$4888$Of4HK
     (case-lambda ((g$x$4847$Of4HK) (g$cddr$4808$Of4HK (cdr g$x$4847$Of4HK)))))
   (g$caaaar$4817$Of4HK
     g$caaaar$4889$Of4HK
     (case-lambda ((g$x$4848$Of4HK) (g$caaar$4809$Of4HK (car g$x$4848$Of4HK)))))
   (g$caaadr$4818$Of4HK
     g$caaadr$4890$Of4HK
     (case-lambda ((g$x$4849$Of4HK) (g$caaar$4809$Of4HK (cdr g$x$4849$Of4HK)))))
   (g$caadar$4819$Of4HK
     g$caadar$4891$Of4HK
     (case-lambda ((g$x$4850$Of4HK) (g$caadr$4810$Of4HK (car g$x$4850$Of4HK)))))
   (g$caaddr$4820$Of4HK
     g$caaddr$4892$Of4HK
     (case-lambda ((g$x$4851$Of4HK) (g$caadr$4810$Of4HK (cdr g$x$4851$Of4HK)))))
   (g$cadaar$4821$Of4HK
     g$cadaar$4893$Of4HK
     (case-lambda ((g$x$4852$Of4HK) (g$cadar$4811$Of4HK (car g$x$4852$Of4HK)))))
   (g$cadadr$4822$Of4HK
     g$cadadr$4894$Of4HK
     (case-lambda ((g$x$4853$Of4HK) (g$cadar$4811$Of4HK (cdr g$x$4853$Of4HK)))))
   (g$caddar$4823$Of4HK
     g$caddar$4895$Of4HK
     (case-lambda ((g$x$4854$Of4HK) (g$caddr$4812$Of4HK (car g$x$4854$Of4HK)))))
   (g$cadddr$4824$Of4HK
     g$cadddr$4896$Of4HK
     (case-lambda ((g$x$4855$Of4HK) (g$caddr$4812$Of4HK (cdr g$x$4855$Of4HK)))))
   (g$cdaaar$4825$Of4HK
     g$cdaaar$4897$Of4HK
     (case-lambda ((g$x$4856$Of4HK) (g$cdaar$4813$Of4HK (car g$x$4856$Of4HK)))))
   (g$cdaadr$4826$Of4HK
     g$cdaadr$4898$Of4HK
     (case-lambda ((g$x$4857$Of4HK) (g$cdaar$4813$Of4HK (cdr g$x$4857$Of4HK)))))
   (g$cdadar$4827$Of4HK
     g$cdadar$4899$Of4HK
     (case-lambda ((g$x$4858$Of4HK) (g$cdadr$4814$Of4HK (car g$x$4858$Of4HK)))))
   (g$cdaddr$4828$Of4HK
     g$cdaddr$4900$Of4HK
     (case-lambda ((g$x$4859$Of4HK) (g$cdadr$4814$Of4HK (cdr g$x$4859$Of4HK)))))
   (g$cddaar$4829$Of4HK
     g$cddaar$4901$Of4HK
     (case-lambda ((g$x$4860$Of4HK) (g$cddar$4815$Of4HK (car g$x$4860$Of4HK)))))
   (g$cddadr$4830$Of4HK
     g$cddadr$4902$Of4HK
     (case-lambda ((g$x$4861$Of4HK) (g$cddar$4815$Of4HK (cdr g$x$4861$Of4HK)))))
   (g$cdddar$4831$Of4HK
     g$cdddar$4903$Of4HK
     (case-lambda ((g$x$4862$Of4HK) (g$cdddr$4816$Of4HK (car g$x$4862$Of4HK)))))
   (g$cddddr$4832$Of4HK
     g$cddddr$4904$Of4HK
     (case-lambda ((g$x$4863$Of4HK) (g$cdddr$4816$Of4HK (cdr g$x$4863$Of4HK)))))
   (g$rationalize$4833$Of4HK
     g$rationalize$4905$Of4HK
     (case-lambda
       ((g$x$4864$Of4HK g$e$4865$Of4HK)
        (apply / (g$find-ratio$4834$Of4HK g$x$4864$Of4HK g$e$4865$Of4HK)))))
   (g$find-ratio$4834$Of4HK
     g$find-ratio$4906$Of4HK
     (case-lambda
       ((g$x$4866$Of4HK g$e$4867$Of4HK)
        (g$find-ratio-between$4835$Of4HK
          (- g$x$4866$Of4HK g$e$4867$Of4HK)
          (+ g$x$4866$Of4HK g$e$4867$Of4HK)))))
   (g$find-ratio-between$4835$Of4HK
     g$find-ratio-between$4907$Of4HK
     (case-lambda
       ((g$x$4868$Of4HK g$y$4869$Of4HK)
        (letrec* ((g$sr$4870$Of4HK
                    (case-lambda
                      ((g$x$4872$Of4HK g$y$4873$Of4HK)
                       ((case-lambda
                          ((g$fx$4874$Of4HK g$fy$4875$Of4HK)
                           (if (>= g$fx$4874$Of4HK g$x$4872$Of4HK)
                             (list g$fx$4874$Of4HK '1)
                             (if (= g$fx$4874$Of4HK g$fy$4875$Of4HK)
                               ((case-lambda
                                  ((g$rat$4876$Of4HK)
                                   (list
                                     (+ (g$cadr$4806$Of4HK g$rat$4876$Of4HK)
                                        (* g$fx$4874$Of4HK
                                           (car g$rat$4876$Of4HK)))
                                     (car g$rat$4876$Of4HK))))
                                (g$sr$4870$Of4HK
                                  (/ (- g$y$4873$Of4HK g$fy$4875$Of4HK))
                                  (/ (- g$x$4872$Of4HK g$fx$4874$Of4HK))))
                               (list (+ '1 g$fx$4874$Of4HK) '1)))))
                        (exact (floor g$x$4872$Of4HK))
                        (exact (floor g$y$4873$Of4HK)))))))
          (if (< g$y$4869$Of4HK g$x$4868$Of4HK)
            (g$find-ratio-between$4835$Of4HK g$y$4869$Of4HK g$x$4868$Of4HK)
            (if (>= g$x$4868$Of4HK g$y$4869$Of4HK)
              (list g$x$4868$Of4HK '1)
              (if (positive? g$x$4868$Of4HK)
                (g$sr$4870$Of4HK g$x$4868$Of4HK g$y$4869$Of4HK)
                (if (negative? g$y$4869$Of4HK)
                  ((case-lambda
                     ((g$rat$4871$Of4HK)
                      (list
                        (- (car g$rat$4871$Of4HK))
                        (g$cadr$4806$Of4HK g$rat$4871$Of4HK))))
                   (g$sr$4870$Of4HK (- g$y$4869$Of4HK) (- g$x$4868$Of4HK)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5103$Of4HK g$using$5138$Of4HK (clr-using-internal 'system))
   (g$using$5105$Of4HK
     g$using$5139$Of4HK
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5106$Of4HK
     g$make-eq-hashtable$5140$Of4HK
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5117$Of4HK)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5117$Of4HK)))))
   (g$make-eqv-hashtable$5107$Of4HK
     g$make-eqv-hashtable$5141$Of4HK
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5118$Of4HK) (make-hashtable eqv-hash eqv? g$k$5118$Of4HK))))
   (g$hashtable-size$5108$Of4HK
     g$hashtable-size$5142$Of4HK
     (case-lambda
       ((g$ht$5119$Of4HK)
        (clr-call-internal 'hashtable 'get_count g$ht$5119$Of4HK))))
   (g$hashtable-ref$5109$Of4HK
     g$hashtable-ref$5143$Of4HK
     (case-lambda
       ((g$ht$5120$Of4HK g$key$5121$Of4HK g$default$5122$Of4HK)
        (letrec* ((g$r$5123$Of4HK
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5120$Of4HK
                      g$key$5121$Of4HK)))
          (if (not (null? g$r$5123$Of4HK))
            g$r$5123$Of4HK
            g$default$5122$Of4HK)))))
   (g$hashtable-set!$5110$Of4HK
     g$hashtable-set!$5144$Of4HK
     (case-lambda
       ((g$ht$5124$Of4HK g$key$5125$Of4HK g$obj$5126$Of4HK)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5124$Of4HK
          g$key$5125$Of4HK
          g$obj$5126$Of4HK))))
   (g$hashtable-delete!$5111$Of4HK
     g$hashtable-delete!$5145$Of4HK
     (case-lambda
       ((g$ht$5127$Of4HK g$key$5128$Of4HK)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5127$Of4HK
          g$key$5128$Of4HK))))
   (g$hashtable-contains?$5112$Of4HK
     g$hashtable-contains?$5146$Of4HK
     (case-lambda
       ((g$ht$5129$Of4HK g$key$5130$Of4HK)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5129$Of4HK
          g$key$5130$Of4HK))))
   (g$hashtable-update!$5113$Of4HK
     g$hashtable-update!$5147$Of4HK
     (case-lambda
       ((g$ht$5131$Of4HK
          g$key$5132$Of4HK
          g$proc$5133$Of4HK
          g$default$5134$Of4HK)
        (g$hashtable-set!$5110$Of4HK
          g$ht$5131$Of4HK
          g$key$5132$Of4HK
          (g$proc$5133$Of4HK
            (g$hashtable-ref$5109$Of4HK
              g$ht$5131$Of4HK
              g$key$5132$Of4HK
              g$default$5134$Of4HK))))))
   (g$hashtable-clear!$5114$Of4HK
     g$hashtable-clear!$5148$Of4HK
     (case-lambda
       ((g$ht$5135$Of4HK) (clr-call-internal 'hashtable 'clear g$ht$5135$Of4HK))
       ((g$ht$5136$Of4HK g$k$5137$Of4HK)
        (clr-call-internal 'hashtable 'clear g$ht$5136$Of4HK))))
   (g$clear-usings$5116$Of4HK
     g$clear-usings$5149$Of4HK
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5151$Of4HK g$using$5217$Of4HK (clr-using-internal 'system.io))
   (g$file-exists?$5152$Of4HK
     g$file-exists?$5218$Of4HK
     (case-lambda
       ((g$fn$5180$Of4HK)
        (clr-call-internal 'file 'exists '() g$fn$5180$Of4HK))))
   (g$delete-file$5153$Of4HK
     g$delete-file$5219$Of4HK
     (case-lambda
       ((g$fn$5181$Of4HK)
        (clr-call-internal 'file 'delete '() g$fn$5181$Of4HK))))
   (g$file-copy$5154$Of4HK
     g$file-copy$5220$Of4HK
     (case-lambda
       ((g$from$5182$Of4HK g$to$5183$Of4HK)
        (g$file-copy$5154$Of4HK g$from$5182$Of4HK g$to$5183$Of4HK '#f))
       ((g$from$5184$Of4HK g$to$5185$Of4HK g$overwrite?$5186$Of4HK)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5184$Of4HK
          g$to$5185$Of4HK
          g$overwrite?$5186$Of4HK))))
   (g$file-move$5155$Of4HK
     g$file-move$5221$Of4HK
     (case-lambda
       ((g$from$5187$Of4HK g$to$5188$Of4HK)
        (clr-call-internal 'file 'move '() g$from$5187$Of4HK g$to$5188$Of4HK))))
   (g$file-create-time$5156$Of4HK
     g$file-create-time$5222$Of4HK
     (case-lambda
       ((g$fn$5189$Of4HK)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5189$Of4HK))))
   (g$file-access-time$5157$Of4HK
     g$file-access-time$5223$Of4HK
     (case-lambda
       ((g$fn$5190$Of4HK)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5190$Of4HK))))
   (g$file-modified-time$5158$Of4HK
     g$file-modified-time$5224$Of4HK
     (case-lambda
       ((g$fn$5191$Of4HK)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5191$Of4HK))))
   (g$directory-exists?$5159$Of4HK
     g$directory-exists?$5225$Of4HK
     (case-lambda
       ((g$fn$5192$Of4HK)
        (clr-call-internal 'directory 'exists '() g$fn$5192$Of4HK))))
   (g$delete-directory$5160$Of4HK
     g$delete-directory$5226$Of4HK
     (case-lambda
       ((g$dir$5193$Of4HK) (g$delete-directory$5160$Of4HK g$dir$5193$Of4HK '#f))
       ((g$dir$5194$Of4HK g$recursive?$5195$Of4HK)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5194$Of4HK
          g$recursive?$5195$Of4HK))))
   (g$directory-move$5161$Of4HK
     g$directory-move$5227$Of4HK
     (case-lambda
       ((g$from$5196$Of4HK g$to$5197$Of4HK)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5196$Of4HK
          g$to$5197$Of4HK))))
   (g$create-directory$5162$Of4HK
     g$create-directory$5228$Of4HK
     (case-lambda
       ((g$name$5198$Of4HK)
        (clr-call-internal 'directory 'createdirectory '() g$name$5198$Of4HK))))
   (g$get-files$5163$Of4HK
     g$get-files$5229$Of4HK
     (case-lambda
       ((g$dir$5199$Of4HK) (g$get-files$5163$Of4HK g$dir$5199$Of4HK '"*"))
       ((g$dir$5200$Of4HK g$pattern$5201$Of4HK)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5200$Of4HK
          g$pattern$5201$Of4HK))))
   (g$get-directories$5164$Of4HK
     g$get-directories$5230$Of4HK
     (case-lambda
       ((g$dir$5202$Of4HK) (g$get-directories$5164$Of4HK g$dir$5202$Of4HK '"*"))
       ((g$dir$5203$Of4HK g$pattern$5204$Of4HK)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5203$Of4HK
          g$pattern$5204$Of4HK))))
   (g$change-extension$5165$Of4HK
     g$change-extension$5231$Of4HK
     (case-lambda
       ((g$path$5205$Of4HK g$extension$5206$Of4HK)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5205$Of4HK
          g$extension$5206$Of4HK))))
   (g$path-combine$5166$Of4HK
     g$path-combine$5232$Of4HK
     (case-lambda
       ((g$path1$5207$Of4HK g$path2$5208$Of4HK)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5207$Of4HK
          g$path2$5208$Of4HK))))
   (g$get-directory-name$5167$Of4HK
     g$get-directory-name$5233$Of4HK
     (case-lambda
       ((g$path$5209$Of4HK)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5209$Of4HK))))
   (g$get-extension$5168$Of4HK
     g$get-extension$5234$Of4HK
     (case-lambda
       ((g$path$5210$Of4HK)
        (clr-call-internal 'path 'getextension '() g$path$5210$Of4HK))))
   (g$get-filename$5169$Of4HK
     g$get-filename$5235$Of4HK
     (case-lambda
       ((g$path$5211$Of4HK)
        (clr-call-internal 'path 'getfilename '() g$path$5211$Of4HK))))
   (g$get-filename-without-extension$5170$Of4HK
     g$get-filename-without-extension$5236$Of4HK
     (case-lambda
       ((g$path$5212$Of4HK)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5212$Of4HK))))
   (g$get-full-path$5171$Of4HK
     g$get-full-path$5237$Of4HK
     (case-lambda
       ((g$path$5213$Of4HK)
        (clr-call-internal 'path 'getfullpath '() g$path$5213$Of4HK))))
   (g$get-path-root$5172$Of4HK
     g$get-path-root$5238$Of4HK
     (case-lambda
       ((g$path$5214$Of4HK)
        (clr-call-internal 'path 'getpathroot '() g$path$5214$Of4HK))))
   (g$get-random-filename$5173$Of4HK
     g$get-random-filename$5239$Of4HK
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5174$Of4HK
     g$get-temp-filename$5240$Of4HK
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5175$Of4HK
     g$get-temp-path$5241$Of4HK
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5176$Of4HK
     g$path-rooted?$5242$Of4HK
     (case-lambda
       ((g$path$5215$Of4HK)
        (clr-call-internal 'path 'ispathrooted '() g$path$5215$Of4HK))))
   (g$path-has-extension?$5177$Of4HK
     g$path-has-extension?$5243$Of4HK
     (case-lambda
       ((g$path$5216$Of4HK)
        (clr-call-internal 'path 'hasextension '() g$path$5216$Of4HK))))
   (g$clear-usings$5179$Of4HK
     g$clear-usings$5244$Of4HK
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5245$Of4HK
     g$find$5336$Of4HK
     (case-lambda
       ((g$proc$5264$Of4HK g$l$5265$Of4HK)
        (if (null? g$l$5265$Of4HK)
          '#f
          ((case-lambda
             ((g$e$5266$Of4HK)
              (if (g$proc$5264$Of4HK g$e$5266$Of4HK)
                g$e$5266$Of4HK
                (g$find$5245$Of4HK g$proc$5264$Of4HK (cdr g$l$5265$Of4HK)))))
           (car g$l$5265$Of4HK))))))
   (g$partition$5246$Of4HK
     g$partition$5337$Of4HK
     (case-lambda
       ((g$proc$5267$Of4HK g$l$5268$Of4HK)
        ((letrec ((g$f$5269$Of4HK
                    (case-lambda
                      ((g$l$5270$Of4HK g$a$5271$Of4HK g$b$5272$Of4HK)
                       (if (null? g$l$5270$Of4HK)
                         (values
                           (reverse! g$a$5271$Of4HK)
                           (reverse! g$b$5272$Of4HK))
                         ((case-lambda
                            ((g$e$5273$Of4HK)
                             (if (g$proc$5267$Of4HK g$e$5273$Of4HK)
                               (g$f$5269$Of4HK
                                 (cdr g$l$5270$Of4HK)
                                 (cons g$e$5273$Of4HK g$a$5271$Of4HK)
                                 g$b$5272$Of4HK)
                               (g$f$5269$Of4HK
                                 (cdr g$l$5270$Of4HK)
                                 g$a$5271$Of4HK
                                 (cons g$e$5273$Of4HK g$b$5272$Of4HK)))))
                          (car g$l$5270$Of4HK)))))))
           g$f$5269$Of4HK)
         g$l$5268$Of4HK
         '()
         '()))))
   (g$remp$5247$Of4HK
     g$remp$5338$Of4HK
     (case-lambda
       ((g$proc$5274$Of4HK g$l$5275$Of4HK)
        ((letrec ((g$f$5276$Of4HK
                    (case-lambda
                      ((g$l$5277$Of4HK g$a$5278$Of4HK)
                       (if (null? g$l$5277$Of4HK)
                         (reverse! g$a$5278$Of4HK)
                         ((case-lambda
                            ((g$e$5279$Of4HK)
                             (if (g$proc$5274$Of4HK g$e$5279$Of4HK)
                               (g$f$5276$Of4HK
                                 (cdr g$l$5277$Of4HK)
                                 g$a$5278$Of4HK)
                               (g$f$5276$Of4HK
                                 (cdr g$l$5277$Of4HK)
                                 (cons g$e$5279$Of4HK g$a$5278$Of4HK)))))
                          (car g$l$5277$Of4HK)))))))
           g$f$5276$Of4HK)
         g$l$5275$Of4HK
         '()))))
   (g$filter$5248$Of4HK
     g$filter$5339$Of4HK
     (case-lambda
       ((g$proc$5280$Of4HK g$l$5281$Of4HK)
        ((letrec ((g$f$5282$Of4HK
                    (case-lambda
                      ((g$l$5283$Of4HK g$a$5284$Of4HK)
                       (if (null? g$l$5283$Of4HK)
                         (reverse! g$a$5284$Of4HK)
                         ((case-lambda
                            ((g$e$5285$Of4HK)
                             (if (g$proc$5280$Of4HK g$e$5285$Of4HK)
                               (g$f$5282$Of4HK
                                 (cdr g$l$5283$Of4HK)
                                 (cons g$e$5285$Of4HK g$a$5284$Of4HK))
                               (g$f$5282$Of4HK
                                 (cdr g$l$5283$Of4HK)
                                 g$a$5284$Of4HK))))
                          (car g$l$5283$Of4HK)))))))
           g$f$5282$Of4HK)
         g$l$5281$Of4HK
         '()))))
   (g$assv$5249$Of4HK
     g$assv$5340$Of4HK
     (case-lambda
       ((g$obj$5286$Of4HK g$lst$5287$Of4HK)
        (if (null? g$lst$5287$Of4HK)
          '#f
          ((case-lambda
             ((g$c$5288$Of4HK)
              (if (eqv? g$obj$5286$Of4HK (car g$c$5288$Of4HK))
                g$c$5288$Of4HK
                (g$assv$5249$Of4HK g$obj$5286$Of4HK (cdr g$lst$5287$Of4HK)))))
           (car g$lst$5287$Of4HK))))))
   (g$assoc$5250$Of4HK
     g$assoc$5341$Of4HK
     (case-lambda
       ((g$obj$5289$Of4HK g$lst$5290$Of4HK)
        (if (null? g$lst$5290$Of4HK)
          '#f
          ((case-lambda
             ((g$c$5291$Of4HK)
              (if (equal? g$obj$5289$Of4HK (car g$c$5291$Of4HK))
                g$c$5291$Of4HK
                (g$assoc$5250$Of4HK g$obj$5289$Of4HK (cdr g$lst$5290$Of4HK)))))
           (car g$lst$5290$Of4HK))))))
   (g$assp$5251$Of4HK
     g$assp$5342$Of4HK
     (case-lambda
       ((g$p?$5292$Of4HK g$lst$5293$Of4HK)
        (if (null? g$lst$5293$Of4HK)
          '#f
          ((case-lambda
             ((g$c$5294$Of4HK)
              (if (g$p?$5292$Of4HK (car g$c$5294$Of4HK))
                g$c$5294$Of4HK
                (g$assp$5251$Of4HK g$p?$5292$Of4HK (cdr g$lst$5293$Of4HK)))))
           (car g$lst$5293$Of4HK))))))
   (g$member$5252$Of4HK
     g$member$5343$Of4HK
     (case-lambda
       ((g$obj$5295$Of4HK g$lst$5296$Of4HK)
        (if (null? g$lst$5296$Of4HK)
          '#f
          (if (equal? g$obj$5295$Of4HK (car g$lst$5296$Of4HK))
            g$lst$5296$Of4HK
            (g$member$5252$Of4HK g$obj$5295$Of4HK (cdr g$lst$5296$Of4HK)))))))
   (g$memp$5253$Of4HK
     g$memp$5344$Of4HK
     (case-lambda
       ((g$p?$5297$Of4HK g$lst$5298$Of4HK)
        (if (null? g$lst$5298$Of4HK)
          '#f
          (if (g$p?$5297$Of4HK (car g$lst$5298$Of4HK))
            g$lst$5298$Of4HK
            (g$memp$5253$Of4HK g$p?$5297$Of4HK (cdr g$lst$5298$Of4HK)))))))
   (g$all-empty?$5254$Of4HK
     g$all-empty?$5345$Of4HK
     (case-lambda
       ((g$ls$5299$Of4HK)
        ((case-lambda
           ((g$t$5300$Of4HK)
            (if g$t$5300$Of4HK
              g$t$5300$Of4HK
              (begin
                '#f
                (if (null? (car g$ls$5299$Of4HK))
                  (begin '#f (g$all-empty?$5254$Of4HK (cdr g$ls$5299$Of4HK)))
                  '#f)))))
         (null? g$ls$5299$Of4HK)))))
   (g$split$5255$Of4HK
     g$split$5346$Of4HK
     (case-lambda
       ((g$ls$5301$Of4HK)
        (if (null? g$ls$5301$Of4HK)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5255$Of4HK (cdr g$ls$5301$Of4HK))))
            (case-lambda
              ((g$cars$5302$Of4HK g$cdrs$5303$Of4HK)
               ((case-lambda
                  ((g$a$5304$Of4HK)
                   (values
                     (cons (car g$a$5304$Of4HK) g$cars$5302$Of4HK)
                     (cons (cdr g$a$5304$Of4HK) g$cdrs$5303$Of4HK))))
                (car g$ls$5301$Of4HK)))))))))
   (g$for-all$5256$Of4HK
     g$for-all$5347$Of4HK
     (case-lambda
       ((g$f$5305$Of4HK . g$args$5306$Of4HK)
        (if (g$all-empty?$5254$Of4HK g$args$5306$Of4HK)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5255$Of4HK g$args$5306$Of4HK)))
            (case-lambda
              ((g$cars$5307$Of4HK g$cdrs$5308$Of4HK)
               (if (apply g$f$5305$Of4HK g$cars$5307$Of4HK)
                 (begin
                   '#f
                   (apply
                     g$for-all$5256$Of4HK
                     g$f$5305$Of4HK
                     g$cdrs$5308$Of4HK))
                 '#f))))))))
   (g$exists$5257$Of4HK
     g$exists$5348$Of4HK
     (case-lambda
       ((g$f$5309$Of4HK . g$args$5310$Of4HK)
        (if (g$all-empty?$5254$Of4HK g$args$5310$Of4HK)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5255$Of4HK g$args$5310$Of4HK)))
            (case-lambda
              ((g$cars$5311$Of4HK g$cdrs$5312$Of4HK)
               ((case-lambda
                  ((g$t$5313$Of4HK)
                   (if g$t$5313$Of4HK
                     g$t$5313$Of4HK
                     (begin
                       '#f
                       (apply
                         g$exists$5257$Of4HK
                         g$f$5309$Of4HK
                         g$cdrs$5312$Of4HK)))))
                (apply g$f$5309$Of4HK g$cars$5311$Of4HK)))))))))
   (g$cons*$5258$Of4HK
     g$cons*$5349$Of4HK
     (case-lambda
       ((g$a$5314$Of4HK . g$rest$5315$Of4HK)
        ((letrec ((g$f$5316$Of4HK
                    (case-lambda
                      ((g$a$5317$Of4HK g$rest$5318$Of4HK)
                       (if (null? g$rest$5318$Of4HK)
                         g$a$5317$Of4HK
                         (cons
                           g$a$5317$Of4HK
                           (g$f$5316$Of4HK
                             (car g$rest$5318$Of4HK)
                             (cdr g$rest$5318$Of4HK))))))))
           g$f$5316$Of4HK)
         g$a$5314$Of4HK
         g$rest$5315$Of4HK))))
   (g$fold-left$5259$Of4HK
     g$fold-left$5350$Of4HK
     (case-lambda
       ((g$combine$5319$Of4HK
          g$nil$5320$Of4HK
          g$list1$5321$Of4HK
          .
          g$lists$5322$Of4HK)
        (if (null? g$list1$5321$Of4HK)
          g$nil$5320$Of4HK
          (apply
            g$fold-left$5259$Of4HK
            (g$cons*$5258$Of4HK
              g$combine$5319$Of4HK
              (apply
                g$combine$5319$Of4HK
                (g$cons*$5258$Of4HK
                  g$nil$5320$Of4HK
                  (car g$list1$5321$Of4HK)
                  (map car g$lists$5322$Of4HK)))
              (cdr g$list1$5321$Of4HK)
              (map cdr g$lists$5322$Of4HK)))))))
   (g$fold-right$5260$Of4HK
     g$fold-right$5351$Of4HK
     (case-lambda
       ((g$combine$5323$Of4HK
          g$nil$5324$Of4HK
          g$list1$5325$Of4HK
          .
          g$lists$5326$Of4HK)
        (if (null? g$list1$5325$Of4HK)
          g$nil$5324$Of4HK
          (apply
            g$combine$5323$Of4HK
            (append
              (list (car g$list1$5325$Of4HK))
              (map car g$lists$5326$Of4HK)
              (list
                (apply
                  g$fold-right$5260$Of4HK
                  (g$cons*$5258$Of4HK
                    g$combine$5323$Of4HK
                    g$nil$5324$Of4HK
                    (cdr g$list1$5325$Of4HK)
                    (map cdr g$lists$5326$Of4HK))))))))))
   (g$remove$5261$Of4HK
     g$remove$5352$Of4HK
     (case-lambda
       ((g$obj$5327$Of4HK g$list$5328$Of4HK)
        (g$remp$5247$Of4HK
          (case-lambda
            ((g$x$5329$Of4HK) (equal? g$obj$5327$Of4HK g$x$5329$Of4HK)))
          g$list$5328$Of4HK))))
   (g$remv$5262$Of4HK
     g$remv$5353$Of4HK
     (case-lambda
       ((g$obj$5330$Of4HK g$list$5331$Of4HK)
        (g$remp$5247$Of4HK
          (case-lambda
            ((g$x$5332$Of4HK) (eqv? g$obj$5330$Of4HK g$x$5332$Of4HK)))
          g$list$5331$Of4HK))))
   (g$remq$5263$Of4HK
     g$remq$5354$Of4HK
     (case-lambda
       ((g$obj$5333$Of4HK g$list$5334$Of4HK)
        (g$remp$5247$Of4HK
          (case-lambda ((g$x$5335$Of4HK) (eq? g$obj$5333$Of4HK g$x$5335$Of4HK)))
          g$list$5334$Of4HK)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5355$Of4HK
     g$native-endianness$5466$Of4HK
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5356$Of4HK
     g$bytevector-u16-ref$5467$Of4HK
     (case-lambda
       ((g$bytevector$5384$Of4HK g$k$5385$Of4HK g$endianness$5386$Of4HK)
        (bytevector-uint-ref
          g$bytevector$5384$Of4HK
          g$k$5385$Of4HK
          g$endianness$5386$Of4HK
          '2))))
   (g$bytevector-s16-ref$5357$Of4HK
     g$bytevector-s16-ref$5468$Of4HK
     (case-lambda
       ((g$bytevector$5387$Of4HK g$k$5388$Of4HK g$endianness$5389$Of4HK)
        (bytevector-sint-ref
          g$bytevector$5387$Of4HK
          g$k$5388$Of4HK
          g$endianness$5389$Of4HK
          '2))))
   (g$bytevector-u16-native-ref$5358$Of4HK
     g$bytevector-u16-native-ref$5469$Of4HK
     (case-lambda
       ((g$bytevector$5390$Of4HK g$k$5391$Of4HK)
        (bytevector-uint-ref
          g$bytevector$5390$Of4HK
          g$k$5391$Of4HK
          (g$native-endianness$5355$Of4HK)
          '2))))
   (g$bytevector-s16-native-ref$5359$Of4HK
     g$bytevector-s16-native-ref$5470$Of4HK
     (case-lambda
       ((g$bytevector$5392$Of4HK g$k$5393$Of4HK)
        (bytevector-sint-ref
          g$bytevector$5392$Of4HK
          g$k$5393$Of4HK
          (g$native-endianness$5355$Of4HK)
          '2))))
   (g$bytevector-u16-set!$5360$Of4HK
     g$bytevector-u16-set!$5471$Of4HK
     (case-lambda
       ((g$bytevector$5394$Of4HK
          g$k$5395$Of4HK
          g$n$5396$Of4HK
          g$endianness$5397$Of4HK)
        (bytevector-uint-ref
          g$bytevector$5394$Of4HK
          g$k$5395$Of4HK
          g$endianness$5397$Of4HK
          '2))))
   (g$bytevector-s16-set!$5361$Of4HK
     g$bytevector-s16-set!$5472$Of4HK
     (case-lambda
       ((g$bytevector$5398$Of4HK
          g$k$5399$Of4HK
          g$n$5400$Of4HK
          g$endianness$5401$Of4HK)
        (bytevector-sint-ref
          g$bytevector$5398$Of4HK
          g$k$5399$Of4HK
          g$endianness$5401$Of4HK
          '2))))
   (g$bytevector-u16-native-set!$5362$Of4HK
     g$bytevector-u16-native-set!$5473$Of4HK
     (case-lambda
       ((g$bytevector$5402$Of4HK g$k$5403$Of4HK g$n$5404$Of4HK)
        (bytevector-uint-ref
          g$bytevector$5402$Of4HK
          g$k$5403$Of4HK
          (g$native-endianness$5355$Of4HK)
          '2))))
   (g$bytevector-s16-native-set!$5363$Of4HK
     g$bytevector-s16-native-set!$5474$Of4HK
     (case-lambda
       ((g$bytevector$5405$Of4HK g$k$5406$Of4HK g$n$5407$Of4HK)
        (bytevector-sint-ref
          g$bytevector$5405$Of4HK
          g$k$5406$Of4HK
          (g$native-endianness$5355$Of4HK)
          '2))))
   (g$bytevector-u32-ref$5364$Of4HK
     g$bytevector-u32-ref$5475$Of4HK
     (case-lambda
       ((g$bytevector$5408$Of4HK g$k$5409$Of4HK g$endianness$5410$Of4HK)
        (bytevector-uint-ref
          g$bytevector$5408$Of4HK
          g$k$5409$Of4HK
          g$endianness$5410$Of4HK
          '4))))
   (g$bytevector-s32-ref$5365$Of4HK
     g$bytevector-s32-ref$5476$Of4HK
     (case-lambda
       ((g$bytevector$5411$Of4HK g$k$5412$Of4HK g$endianness$5413$Of4HK)
        (bytevector-sint-ref
          g$bytevector$5411$Of4HK
          g$k$5412$Of4HK
          g$endianness$5413$Of4HK
          '4))))
   (g$bytevector-u32-native-ref$5366$Of4HK
     g$bytevector-u32-native-ref$5477$Of4HK
     (case-lambda
       ((g$bytevector$5414$Of4HK g$k$5415$Of4HK)
        (bytevector-uint-ref
          g$bytevector$5414$Of4HK
          g$k$5415$Of4HK
          (g$native-endianness$5355$Of4HK)
          '4))))
   (g$bytevector-s32-native-ref$5367$Of4HK
     g$bytevector-s32-native-ref$5478$Of4HK
     (case-lambda
       ((g$bytevector$5416$Of4HK g$k$5417$Of4HK)
        (bytevector-sint-ref
          g$bytevector$5416$Of4HK
          g$k$5417$Of4HK
          (g$native-endianness$5355$Of4HK)
          '4))))
   (g$bytevector-u32-set!$5368$Of4HK
     g$bytevector-u32-set!$5479$Of4HK
     (case-lambda
       ((g$bytevector$5418$Of4HK
          g$k$5419$Of4HK
          g$n$5420$Of4HK
          g$endianness$5421$Of4HK)
        (bytevector-uint-ref
          g$bytevector$5418$Of4HK
          g$k$5419$Of4HK
          g$endianness$5421$Of4HK
          '4))))
   (g$bytevector-s32-set!$5369$Of4HK
     g$bytevector-s32-set!$5480$Of4HK
     (case-lambda
       ((g$bytevector$5422$Of4HK
          g$k$5423$Of4HK
          g$n$5424$Of4HK
          g$endianness$5425$Of4HK)
        (bytevector-sint-ref
          g$bytevector$5422$Of4HK
          g$k$5423$Of4HK
          g$endianness$5425$Of4HK
          '4))))
   (g$bytevector-u32-native-set!$5370$Of4HK
     g$bytevector-u32-native-set!$5481$Of4HK
     (case-lambda
       ((g$bytevector$5426$Of4HK g$k$5427$Of4HK g$n$5428$Of4HK)
        (bytevector-uint-ref
          g$bytevector$5426$Of4HK
          g$k$5427$Of4HK
          (g$native-endianness$5355$Of4HK)
          '4))))
   (g$bytevector-s32-native-set!$5371$Of4HK
     g$bytevector-s32-native-set!$5482$Of4HK
     (case-lambda
       ((g$bytevector$5429$Of4HK g$k$5430$Of4HK g$n$5431$Of4HK)
        (bytevector-sint-ref
          g$bytevector$5429$Of4HK
          g$k$5430$Of4HK
          (g$native-endianness$5355$Of4HK)
          '4))))
   (g$bytevector-u64-ref$5372$Of4HK
     g$bytevector-u64-ref$5483$Of4HK
     (case-lambda
       ((g$bytevector$5432$Of4HK g$k$5433$Of4HK g$endianness$5434$Of4HK)
        (bytevector-uint-ref
          g$bytevector$5432$Of4HK
          g$k$5433$Of4HK
          g$endianness$5434$Of4HK
          '8))))
   (g$bytevector-s64-ref$5373$Of4HK
     g$bytevector-s64-ref$5484$Of4HK
     (case-lambda
       ((g$bytevector$5435$Of4HK g$k$5436$Of4HK g$endianness$5437$Of4HK)
        (bytevector-sint-ref
          g$bytevector$5435$Of4HK
          g$k$5436$Of4HK
          g$endianness$5437$Of4HK
          '8))))
   (g$bytevector-u64-native-ref$5374$Of4HK
     g$bytevector-u64-native-ref$5485$Of4HK
     (case-lambda
       ((g$bytevector$5438$Of4HK g$k$5439$Of4HK)
        (bytevector-uint-ref
          g$bytevector$5438$Of4HK
          g$k$5439$Of4HK
          (g$native-endianness$5355$Of4HK)
          '8))))
   (g$bytevector-s64-native-ref$5375$Of4HK
     g$bytevector-s64-native-ref$5486$Of4HK
     (case-lambda
       ((g$bytevector$5440$Of4HK g$k$5441$Of4HK)
        (bytevector-sint-ref
          g$bytevector$5440$Of4HK
          g$k$5441$Of4HK
          (g$native-endianness$5355$Of4HK)
          '8))))
   (g$bytevector-u64-set!$5376$Of4HK
     g$bytevector-u64-set!$5487$Of4HK
     (case-lambda
       ((g$bytevector$5442$Of4HK
          g$k$5443$Of4HK
          g$n$5444$Of4HK
          g$endianness$5445$Of4HK)
        (bytevector-uint-ref
          g$bytevector$5442$Of4HK
          g$k$5443$Of4HK
          g$endianness$5445$Of4HK
          '8))))
   (g$bytevector-s64-set!$5377$Of4HK
     g$bytevector-s64-set!$5488$Of4HK
     (case-lambda
       ((g$bytevector$5446$Of4HK
          g$k$5447$Of4HK
          g$n$5448$Of4HK
          g$endianness$5449$Of4HK)
        (bytevector-sint-ref
          g$bytevector$5446$Of4HK
          g$k$5447$Of4HK
          g$endianness$5449$Of4HK
          '8))))
   (g$bytevector-u64-native-set!$5378$Of4HK
     g$bytevector-u64-native-set!$5489$Of4HK
     (case-lambda
       ((g$bytevector$5450$Of4HK g$k$5451$Of4HK g$n$5452$Of4HK)
        (bytevector-uint-ref
          g$bytevector$5450$Of4HK
          g$k$5451$Of4HK
          (g$native-endianness$5355$Of4HK)
          '8))))
   (g$bytevector-s64-native-set!$5379$Of4HK
     g$bytevector-s64-native-set!$5490$Of4HK
     (case-lambda
       ((g$bytevector$5453$Of4HK g$k$5454$Of4HK g$n$5455$Of4HK)
        (bytevector-sint-ref
          g$bytevector$5453$Of4HK
          g$k$5454$Of4HK
          (g$native-endianness$5355$Of4HK)
          '8))))
   (g$bytevector-ieee-single-native-ref$5380$Of4HK
     g$bytevector-ieee-single-native-ref$5491$Of4HK
     (case-lambda
       ((g$bytevector$5456$Of4HK g$k$5457$Of4HK)
        (bytevector-ieee-single-ref
          g$bytevector$5456$Of4HK
          g$k$5457$Of4HK
          (g$native-endianness$5355$Of4HK)))))
   (g$bytevector-ieee-double-native-ref$5381$Of4HK
     g$bytevector-ieee-double-native-ref$5492$Of4HK
     (case-lambda
       ((g$bytevector$5458$Of4HK g$k$5459$Of4HK)
        (bytevector-ieee-double-ref
          g$bytevector$5458$Of4HK
          g$k$5459$Of4HK
          (g$native-endianness$5355$Of4HK)))))
   (g$bytevector-ieee-single-native-set!$5382$Of4HK
     g$bytevector-ieee-single-native-set!$5493$Of4HK
     (case-lambda
       ((g$bytevector$5460$Of4HK g$k$5461$Of4HK g$x$5462$Of4HK)
        (bytevector-ieee-single-set!
          g$bytevector$5460$Of4HK
          g$k$5461$Of4HK
          g$x$5462$Of4HK
          (g$native-endianness$5355$Of4HK)))))
   (g$bytevector-ieee-double-native-set!$5383$Of4HK
     g$bytevector-ieee-double-native-set!$5494$Of4HK
     (case-lambda
       ((g$bytevector$5463$Of4HK g$k$5464$Of4HK g$x$5465$Of4HK)
        (bytevector-ieee-double-set!
          g$bytevector$5463$Of4HK
          g$k$5464$Of4HK
          g$x$5465$Of4HK
          (g$native-endianness$5355$Of4HK))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme enums) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6263$5495$Of4HK
     g$6263$5590$Of4HK
     (make-record-type-descriptor '&condition '#f 'g$6266$Of4HK '#f '#f '#()))
   (g$6265$5496$Of4HK g$6265$5591$Of4HK '#f)
   (g$6264$5497$Of4HK
     g$6264$5592$Of4HK
     (make-record-constructor-descriptor
       g$6263$5495$Of4HK
       '#f
       g$6265$5496$Of4HK))
   (g$&condition?$5498$Of4HK
     g$&condition?$5593$Of4HK
     (record-predicate g$6263$5495$Of4HK))
   (g$make-&condition$5499$Of4HK
     g$make-&condition$5594$Of4HK
     (record-constructor g$6264$5497$Of4HK))
   (g$&condition-rtd$5500$Of4HK g$&condition-rtd$5595$Of4HK g$6263$5495$Of4HK)
   (g$&condition-rcd$5501$Of4HK g$&condition-rcd$5596$Of4HK g$6264$5497$Of4HK)
   (g$6279$5502$Of4HK
     g$6279$5597$Of4HK
     (make-record-type-descriptor
       '&message
       g$6263$5495$Of4HK
       'g$6282$Of4HK
       '#f
       '#f
       '#((immutable message))))
   (g$6281$5503$Of4HK g$6281$5598$Of4HK '#f)
   (g$6280$5504$Of4HK
     g$6280$5599$Of4HK
     (make-record-constructor-descriptor
       g$6279$5502$Of4HK
       g$6264$5497$Of4HK
       g$6281$5503$Of4HK))
   (g$6278$5505$Of4HK g$6278$5600$Of4HK (record-predicate g$6279$5502$Of4HK))
   (g$make-message-condition$5506$Of4HK
     g$make-message-condition$5601$Of4HK
     (record-constructor g$6280$5504$Of4HK))
   (g$6277$5507$Of4HK g$6277$5602$Of4HK (record-accessor g$6279$5502$Of4HK '0))
   (g$message-condition?$5508$Of4HK
     g$message-condition?$5603$Of4HK
     (condition-predicate g$6279$5502$Of4HK))
   (g$condition-message$5509$Of4HK
     g$condition-message$5604$Of4HK
     (condition-accessor g$6279$5502$Of4HK g$6277$5507$Of4HK))
   (g$6295$5510$Of4HK
     g$6295$5605$Of4HK
     (make-record-type-descriptor
       '&warning
       g$6263$5495$Of4HK
       'g$6298$Of4HK
       '#f
       '#f
       '#()))
   (g$6297$5511$Of4HK g$6297$5606$Of4HK '#f)
   (g$6296$5512$Of4HK
     g$6296$5607$Of4HK
     (make-record-constructor-descriptor
       g$6295$5510$Of4HK
       g$6264$5497$Of4HK
       g$6297$5511$Of4HK))
   (g$6294$5513$Of4HK g$6294$5608$Of4HK (record-predicate g$6295$5510$Of4HK))
   (g$make-warning$5514$Of4HK
     g$make-warning$5609$Of4HK
     (record-constructor g$6296$5512$Of4HK))
   (g$warning?$5515$Of4HK
     g$warning?$5610$Of4HK
     (condition-predicate g$6295$5510$Of4HK))
   (g$6309$5516$Of4HK
     g$6309$5611$Of4HK
     (make-record-type-descriptor
       '&serious
       g$6263$5495$Of4HK
       'g$6312$Of4HK
       '#f
       '#f
       '#()))
   (g$6311$5517$Of4HK g$6311$5612$Of4HK '#f)
   (g$6310$5518$Of4HK
     g$6310$5613$Of4HK
     (make-record-constructor-descriptor
       g$6309$5516$Of4HK
       g$6264$5497$Of4HK
       g$6311$5517$Of4HK))
   (g$6308$5519$Of4HK g$6308$5614$Of4HK (record-predicate g$6309$5516$Of4HK))
   (g$make-serious-condition$5520$Of4HK
     g$make-serious-condition$5615$Of4HK
     (record-constructor g$6310$5518$Of4HK))
   (g$serious-condition?$5521$Of4HK
     g$serious-condition?$5616$Of4HK
     (condition-predicate g$6309$5516$Of4HK))
   (g$6323$5522$Of4HK
     g$6323$5617$Of4HK
     (make-record-type-descriptor
       '&error
       g$6309$5516$Of4HK
       'g$6326$Of4HK
       '#f
       '#f
       '#()))
   (g$6325$5523$Of4HK g$6325$5618$Of4HK '#f)
   (g$6324$5524$Of4HK
     g$6324$5619$Of4HK
     (make-record-constructor-descriptor
       g$6323$5522$Of4HK
       g$6310$5518$Of4HK
       g$6325$5523$Of4HK))
   (g$6322$5525$Of4HK g$6322$5620$Of4HK (record-predicate g$6323$5522$Of4HK))
   (g$make-error$5526$Of4HK
     g$make-error$5621$Of4HK
     (record-constructor g$6324$5524$Of4HK))
   (g$error?$5527$Of4HK
     g$error?$5622$Of4HK
     (condition-predicate g$6323$5522$Of4HK))
   (g$6337$5528$Of4HK
     g$6337$5623$Of4HK
     (make-record-type-descriptor
       '&violation
       g$6309$5516$Of4HK
       'g$6340$Of4HK
       '#f
       '#f
       '#()))
   (g$6339$5529$Of4HK g$6339$5624$Of4HK '#f)
   (g$6338$5530$Of4HK
     g$6338$5625$Of4HK
     (make-record-constructor-descriptor
       g$6337$5528$Of4HK
       g$6310$5518$Of4HK
       g$6339$5529$Of4HK))
   (g$6336$5531$Of4HK g$6336$5626$Of4HK (record-predicate g$6337$5528$Of4HK))
   (g$make-violation$5532$Of4HK
     g$make-violation$5627$Of4HK
     (record-constructor g$6338$5530$Of4HK))
   (g$violation?$5533$Of4HK
     g$violation?$5628$Of4HK
     (condition-predicate g$6337$5528$Of4HK))
   (g$6351$5534$Of4HK
     g$6351$5629$Of4HK
     (make-record-type-descriptor
       '&assertion
       g$6337$5528$Of4HK
       'g$6354$Of4HK
       '#f
       '#f
       '#()))
   (g$6353$5535$Of4HK g$6353$5630$Of4HK '#f)
   (g$6352$5536$Of4HK
     g$6352$5631$Of4HK
     (make-record-constructor-descriptor
       g$6351$5534$Of4HK
       g$6338$5530$Of4HK
       g$6353$5535$Of4HK))
   (g$6350$5537$Of4HK g$6350$5632$Of4HK (record-predicate g$6351$5534$Of4HK))
   (g$make-assertion-violation$5538$Of4HK
     g$make-assertion-violation$5633$Of4HK
     (record-constructor g$6352$5536$Of4HK))
   (g$assertion-violation?$5539$Of4HK
     g$assertion-violation?$5634$Of4HK
     (condition-predicate g$6351$5534$Of4HK))
   (g$6366$5540$Of4HK
     g$6366$5635$Of4HK
     (make-record-type-descriptor
       '&irritants
       g$6263$5495$Of4HK
       'g$6369$Of4HK
       '#f
       '#f
       '#((immutable irritants))))
   (g$6368$5541$Of4HK g$6368$5636$Of4HK '#f)
   (g$6367$5542$Of4HK
     g$6367$5637$Of4HK
     (make-record-constructor-descriptor
       g$6366$5540$Of4HK
       g$6264$5497$Of4HK
       g$6368$5541$Of4HK))
   (g$6365$5543$Of4HK g$6365$5638$Of4HK (record-predicate g$6366$5540$Of4HK))
   (g$make-irritants-condition$5544$Of4HK
     g$make-irritants-condition$5639$Of4HK
     (record-constructor g$6367$5542$Of4HK))
   (g$6364$5545$Of4HK g$6364$5640$Of4HK (record-accessor g$6366$5540$Of4HK '0))
   (g$irritants-condition?$5546$Of4HK
     g$irritants-condition?$5641$Of4HK
     (condition-predicate g$6366$5540$Of4HK))
   (g$condition-irritants$5547$Of4HK
     g$condition-irritants$5642$Of4HK
     (condition-accessor g$6366$5540$Of4HK g$6364$5545$Of4HK))
   (g$6383$5548$Of4HK
     g$6383$5643$Of4HK
     (make-record-type-descriptor
       '&who
       g$6263$5495$Of4HK
       'g$6386$Of4HK
       '#f
       '#f
       '#((immutable who))))
   (g$6385$5549$Of4HK g$6385$5644$Of4HK '#f)
   (g$6384$5550$Of4HK
     g$6384$5645$Of4HK
     (make-record-constructor-descriptor
       g$6383$5548$Of4HK
       g$6264$5497$Of4HK
       g$6385$5549$Of4HK))
   (g$6382$5551$Of4HK g$6382$5646$Of4HK (record-predicate g$6383$5548$Of4HK))
   (g$make-who-condition$5552$Of4HK
     g$make-who-condition$5647$Of4HK
     (record-constructor g$6384$5550$Of4HK))
   (g$6381$5553$Of4HK g$6381$5648$Of4HK (record-accessor g$6383$5548$Of4HK '0))
   (g$who-condition?$5554$Of4HK
     g$who-condition?$5649$Of4HK
     (condition-predicate g$6383$5548$Of4HK))
   (g$condition-who$5555$Of4HK
     g$condition-who$5650$Of4HK
     (condition-accessor g$6383$5548$Of4HK g$6381$5553$Of4HK))
   (g$6399$5556$Of4HK
     g$6399$5651$Of4HK
     (make-record-type-descriptor
       '&non-continuable
       g$6337$5528$Of4HK
       'g$6402$Of4HK
       '#f
       '#f
       '#()))
   (g$6401$5557$Of4HK g$6401$5652$Of4HK '#f)
   (g$6400$5558$Of4HK
     g$6400$5653$Of4HK
     (make-record-constructor-descriptor
       g$6399$5556$Of4HK
       g$6338$5530$Of4HK
       g$6401$5557$Of4HK))
   (g$6398$5559$Of4HK g$6398$5654$Of4HK (record-predicate g$6399$5556$Of4HK))
   (g$make-non-continuable-violation$5560$Of4HK
     g$make-non-continuable-violation$5655$Of4HK
     (record-constructor g$6400$5558$Of4HK))
   (g$non-continuable-violation?$5561$Of4HK
     g$non-continuable-violation?$5656$Of4HK
     (condition-predicate g$6399$5556$Of4HK))
   (g$6413$5562$Of4HK
     g$6413$5657$Of4HK
     (make-record-type-descriptor
       '&implementation-restriction
       g$6337$5528$Of4HK
       'g$6416$Of4HK
       '#f
       '#f
       '#()))
   (g$6415$5563$Of4HK g$6415$5658$Of4HK '#f)
   (g$6414$5564$Of4HK
     g$6414$5659$Of4HK
     (make-record-constructor-descriptor
       g$6413$5562$Of4HK
       g$6338$5530$Of4HK
       g$6415$5563$Of4HK))
   (g$6412$5565$Of4HK g$6412$5660$Of4HK (record-predicate g$6413$5562$Of4HK))
   (g$make-implementation-restriction-violation$5566$Of4HK
     g$make-implementation-restriction-violation$5661$Of4HK
     (record-constructor g$6414$5564$Of4HK))
   (g$implementation-restriction-violation?$5567$Of4HK
     g$implementation-restriction-violation?$5662$Of4HK
     (condition-predicate g$6413$5562$Of4HK))
   (g$6427$5568$Of4HK
     g$6427$5663$Of4HK
     (make-record-type-descriptor
       '&lexical
       g$6337$5528$Of4HK
       'g$6430$Of4HK
       '#f
       '#f
       '#()))
   (g$6429$5569$Of4HK g$6429$5664$Of4HK '#f)
   (g$6428$5570$Of4HK
     g$6428$5665$Of4HK
     (make-record-constructor-descriptor
       g$6427$5568$Of4HK
       g$6338$5530$Of4HK
       g$6429$5569$Of4HK))
   (g$6426$5571$Of4HK g$6426$5666$Of4HK (record-predicate g$6427$5568$Of4HK))
   (g$make-lexical-violation$5572$Of4HK
     g$make-lexical-violation$5667$Of4HK
     (record-constructor g$6428$5570$Of4HK))
   (g$lexical-violation?$5573$Of4HK
     g$lexical-violation?$5668$Of4HK
     (condition-predicate g$6427$5568$Of4HK))
   (g$6443$5574$Of4HK
     g$6443$5669$Of4HK
     (make-record-type-descriptor
       '&syntax
       g$6337$5528$Of4HK
       'g$6446$Of4HK
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6445$5575$Of4HK g$6445$5670$Of4HK '#f)
   (g$6444$5576$Of4HK
     g$6444$5671$Of4HK
     (make-record-constructor-descriptor
       g$6443$5574$Of4HK
       g$6338$5530$Of4HK
       g$6445$5575$Of4HK))
   (g$6442$5577$Of4HK g$6442$5672$Of4HK (record-predicate g$6443$5574$Of4HK))
   (g$make-syntax-violation$5578$Of4HK
     g$make-syntax-violation$5673$Of4HK
     (record-constructor g$6444$5576$Of4HK))
   (g$6440$5579$Of4HK g$6440$5674$Of4HK (record-accessor g$6443$5574$Of4HK '0))
   (g$6441$5580$Of4HK g$6441$5675$Of4HK (record-accessor g$6443$5574$Of4HK '1))
   (g$syntax-violation?$5581$Of4HK
     g$syntax-violation?$5676$Of4HK
     (condition-predicate g$6443$5574$Of4HK))
   (g$syntax-violation-form$5582$Of4HK
     g$syntax-violation-form$5677$Of4HK
     (condition-accessor g$6443$5574$Of4HK g$6440$5579$Of4HK))
   (g$syntax-violation-subform$5583$Of4HK
     g$syntax-violation-subform$5678$Of4HK
     (condition-accessor g$6443$5574$Of4HK g$6441$5580$Of4HK))
   (g$6461$5584$Of4HK
     g$6461$5679$Of4HK
     (make-record-type-descriptor
       '&undefined
       g$6337$5528$Of4HK
       'g$6464$Of4HK
       '#f
       '#f
       '#()))
   (g$6463$5585$Of4HK g$6463$5680$Of4HK '#f)
   (g$6462$5586$Of4HK
     g$6462$5681$Of4HK
     (make-record-constructor-descriptor
       g$6461$5584$Of4HK
       g$6338$5530$Of4HK
       g$6463$5585$Of4HK))
   (g$6460$5587$Of4HK g$6460$5682$Of4HK (record-predicate g$6461$5584$Of4HK))
   (g$make-undefined-violation$5588$Of4HK
     g$make-undefined-violation$5683$Of4HK
     (record-constructor g$6462$5586$Of4HK))
   (g$undefined-violation?$5589$Of4HK
     g$undefined-violation?$5684$Of4HK
     (condition-predicate g$6461$5584$Of4HK)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5685$Of4HK
     g$append!$5691$Of4HK
     (case-lambda
       ((g$a$5686$Of4HK . g$b$5687$Of4HK)
        (if (null? g$a$5686$Of4HK)
          g$b$5687$Of4HK
          (if (null? g$b$5687$Of4HK)
            g$a$5686$Of4HK
            (begin
              ((letrec ((g$f$5688$Of4HK
                          (case-lambda
                            ((g$a$5689$Of4HK)
                             ((case-lambda
                                ((g$n$5690$Of4HK)
                                 (if (null? g$n$5690$Of4HK)
                                   (set-cdr! g$a$5689$Of4HK g$b$5687$Of4HK)
                                   (g$f$5688$Of4HK g$n$5690$Of4HK))))
                              (cdr g$a$5689$Of4HK))))))
                 g$f$5688$Of4HK)
               g$a$5686$Of4HK)
              g$a$5686$Of4HK)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5692$Of4HK
     g$sign$5703$Of4HK
     (case-lambda
       ((g$n$5696$Of4HK)
        (if (> g$n$5696$Of4HK '0) '1 (if (< g$n$5696$Of4HK '0) '-1 '0)))))
   (g$quotient$5693$Of4HK
     g$quotient$5704$Of4HK
     (case-lambda
       ((g$n1$5697$Of4HK g$n2$5698$Of4HK)
        (* (g$sign$5692$Of4HK g$n1$5697$Of4HK)
           (g$sign$5692$Of4HK g$n2$5698$Of4HK)
           (div (abs g$n1$5697$Of4HK) (abs g$n2$5698$Of4HK))))))
   (g$remainder$5694$Of4HK
     g$remainder$5705$Of4HK
     (case-lambda
       ((g$n1$5699$Of4HK g$n2$5700$Of4HK)
        (* (g$sign$5692$Of4HK g$n1$5699$Of4HK)
           (mod (abs g$n1$5699$Of4HK) (abs g$n2$5700$Of4HK))))))
   (g$modulo$5695$Of4HK
     g$modulo$5706$Of4HK
     (case-lambda
       ((g$n1$5701$Of4HK g$n2$5702$Of4HK)
        (* (g$sign$5692$Of4HK g$n2$5702$Of4HK)
           (mod (* (g$sign$5692$Of4HK g$n2$5702$Of4HK) g$n1$5701$Of4HK)
                (abs g$n2$5702$Of4HK)))))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5707$Of4HK
     g$split$5733$Of4HK
     (case-lambda
       ((g$ls$5710$Of4HK)
        ((letrec ((g$loop$5711$Of4HK
                    (case-lambda
                      ((g$rest$5712$Of4HK g$left$5713$Of4HK g$right$5714$Of4HK)
                       (if (null? g$rest$5712$Of4HK)
                         (cons g$left$5713$Of4HK g$right$5714$Of4HK)
                         (if (null? (cdr g$rest$5712$Of4HK))
                           (cons
                             (cons (car g$rest$5712$Of4HK) g$left$5713$Of4HK)
                             g$right$5714$Of4HK)
                           (g$loop$5711$Of4HK
                             (g$cddr$4880$Of4HK g$rest$5712$Of4HK)
                             (cons (car g$rest$5712$Of4HK) g$left$5713$Of4HK)
                             (cons
                               (g$cadr$4878$Of4HK g$rest$5712$Of4HK)
                               g$right$5714$Of4HK))))))))
           g$loop$5711$Of4HK)
         g$ls$5710$Of4HK
         '()
         '()))))
   (g$reverse-it$5708$Of4HK
     g$reverse-it$5734$Of4HK
     (case-lambda
       ((g$head$5715$Of4HK g$tail$5716$Of4HK)
        (if (null? g$head$5715$Of4HK)
          g$tail$5716$Of4HK
          ((case-lambda
             ((g$hd$5717$Of4HK g$tl$5718$Of4HK)
              (g$reverse-it$5708$Of4HK
                g$tl$5718$Of4HK
                (cons g$hd$5717$Of4HK g$tail$5716$Of4HK))))
           (car g$head$5715$Of4HK)
           (cdr g$head$5715$Of4HK))))))
   (g$list-sort$5709$Of4HK
     g$list-sort$5735$Of4HK
     (case-lambda
       ((g$precedes?$5719$Of4HK g$ls$5720$Of4HK)
        ((case-lambda
           ((g$merge$5721$Of4HK)
            ((case-lambda
               (()
                (if (null? g$ls$5720$Of4HK)
                  '()
                  ((letrec ((g$helper$5722$Of4HK
                              (case-lambda
                                ((g$piece$5723$Of4HK)
                                 (if (null? (cdr g$piece$5723$Of4HK))
                                   g$piece$5723$Of4HK
                                   ((case-lambda
                                      ((g$parts$5724$Of4HK)
                                       (g$merge$5721$Of4HK
                                         (g$helper$5722$Of4HK
                                           (car g$parts$5724$Of4HK))
                                         (g$helper$5722$Of4HK
                                           (cdr g$parts$5724$Of4HK)))))
                                    (g$split$5707$Of4HK
                                      g$piece$5723$Of4HK)))))))
                     g$helper$5722$Of4HK)
                   g$ls$5720$Of4HK)))))))
         (case-lambda
           ((g$list-1$5725$Of4HK g$list-2$5726$Of4HK)
            ((letrec ((g$loop$5727$Of4HK
                        (case-lambda
                          ((g$source-1$5728$Of4HK
                             g$source-2$5729$Of4HK
                             g$so-far$5730$Of4HK)
                           (if (null? g$source-1$5728$Of4HK)
                             (g$reverse-it$5708$Of4HK
                               g$so-far$5730$Of4HK
                               g$source-2$5729$Of4HK)
                             (if (null? g$source-2$5729$Of4HK)
                               (g$reverse-it$5708$Of4HK
                                 g$so-far$5730$Of4HK
                                 g$source-1$5728$Of4HK)
                               ((case-lambda
                                  ((g$car-1$5731$Of4HK g$car-2$5732$Of4HK)
                                   (if (g$precedes?$5719$Of4HK
                                         g$car-2$5732$Of4HK
                                         g$car-1$5731$Of4HK)
                                     (g$loop$5727$Of4HK
                                       g$source-1$5728$Of4HK
                                       (cdr g$source-2$5729$Of4HK)
                                       (cons
                                         g$car-2$5732$Of4HK
                                         g$so-far$5730$Of4HK))
                                     (g$loop$5727$Of4HK
                                       g$source-2$5729$Of4HK
                                       (cdr g$source-1$5728$Of4HK)
                                       (cons
                                         g$car-1$5731$Of4HK
                                         g$so-far$5730$Of4HK)))))
                                (car g$source-1$5728$Of4HK)
                                (car g$source-2$5729$Of4HK))))))))
               g$loop$5727$Of4HK)
             g$list-1$5725$Of4HK
             g$list-2$5726$Of4HK
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode) () (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$5773$Of4HK
     g$bitwise-if$5824$Of4HK
     (case-lambda
       ((g$ei1$5781$Of4HK g$ei2$5782$Of4HK g$ei3$5783$Of4HK)
        (bitwise-ior
          (bitwise-and g$ei1$5781$Of4HK g$ei2$5782$Of4HK)
          (bitwise-and (bitwise-not g$ei1$5781$Of4HK) g$ei3$5783$Of4HK)))))
   (g$bitwise-copy-bit$5774$Of4HK
     g$bitwise-copy-bit$5825$Of4HK
     (case-lambda
       ((g$ei1$5784$Of4HK g$ei2$5785$Of4HK g$ei3$5786$Of4HK)
        ((case-lambda
           ((g$mask$5787$Of4HK)
            ((case-lambda
               (()
                (g$bitwise-if$5773$Of4HK
                  g$mask$5787$Of4HK
                  (g$bitwise-arithmetic-shift-left$5777$Of4HK
                    g$ei3$5786$Of4HK
                    g$ei2$5785$Of4HK)
                  g$ei1$5784$Of4HK))))))
         (g$bitwise-arithmetic-shift-left$5777$Of4HK '1 g$ei2$5785$Of4HK)))))
   (g$bitwise-bit-field$5775$Of4HK
     g$bitwise-bit-field$5826$Of4HK
     (case-lambda
       ((g$ei1$5788$Of4HK g$ei2$5789$Of4HK g$ei3$5790$Of4HK)
        ((case-lambda
           ((g$mask$5791$Of4HK)
            (g$bitwise-arithmetic-shift-right$5778$Of4HK
              (bitwise-and g$ei1$5788$Of4HK g$mask$5791$Of4HK)
              g$ei2$5789$Of4HK)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$5777$Of4HK
             '-1
             g$ei3$5790$Of4HK))))))
   (g$bitwise-copy-bit-field$5776$Of4HK
     g$bitwise-copy-bit-field$5827$Of4HK
     (case-lambda
       ((g$ei1$5792$Of4HK g$ei2$5793$Of4HK g$ei3$5794$Of4HK g$ei4$5795$Of4HK)
        ((case-lambda
           ((g$to$5796$Of4HK)
            ((case-lambda
               ((g$start$5797$Of4HK)
                ((case-lambda
                   ((g$end$5798$Of4HK)
                    ((case-lambda
                       ((g$from$5799$Of4HK)
                        ((case-lambda
                           ((g$mask1$5800$Of4HK)
                            ((case-lambda
                               ((g$mask2$5801$Of4HK)
                                ((case-lambda
                                   ((g$mask$5802$Of4HK)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$5773$Of4HK
                                          g$mask$5802$Of4HK
                                          (g$bitwise-arithmetic-shift-left$5777$Of4HK
                                            g$from$5799$Of4HK
                                            g$start$5797$Of4HK)
                                          g$to$5796$Of4HK))))))
                                 (bitwise-and
                                   g$mask1$5800$Of4HK
                                   g$mask2$5801$Of4HK))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$5777$Of4HK
                                 '-1
                                 g$end$5798$Of4HK)))))
                         (g$bitwise-arithmetic-shift-left$5777$Of4HK
                           '-1
                           g$start$5797$Of4HK))))
                     g$ei4$5795$Of4HK)))
                 g$ei3$5794$Of4HK)))
             g$ei2$5793$Of4HK)))
         g$ei1$5792$Of4HK))))
   (g$bitwise-arithmetic-shift-left$5777$Of4HK
     g$bitwise-arithmetic-shift-left$5828$Of4HK
     (case-lambda
       ((g$ei1$5803$Of4HK g$ei2$5804$Of4HK)
        (bitwise-arithmetic-shift g$ei1$5803$Of4HK g$ei2$5804$Of4HK))))
   (g$bitwise-arithmetic-shift-right$5778$Of4HK
     g$bitwise-arithmetic-shift-right$5829$Of4HK
     (case-lambda
       ((g$ei1$5805$Of4HK g$ei2$5806$Of4HK)
        (bitwise-arithmetic-shift g$ei1$5805$Of4HK (- g$ei2$5806$Of4HK)))))
   (g$bitwise-rotate-bit-field$5779$Of4HK
     g$bitwise-rotate-bit-field$5830$Of4HK
     (case-lambda
       ((g$ei1$5807$Of4HK g$ei2$5808$Of4HK g$ei3$5809$Of4HK g$ei4$5810$Of4HK)
        ((case-lambda
           ((g$n$5811$Of4HK)
            ((case-lambda
               ((g$start$5812$Of4HK)
                ((case-lambda
                   ((g$end$5813$Of4HK)
                    ((case-lambda
                       ((g$count$5814$Of4HK)
                        ((case-lambda
                           ((g$width$5815$Of4HK)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5815$Of4HK)
                                  ((case-lambda
                                     ((g$count$5816$Of4HK)
                                      ((case-lambda
                                         ((g$field0$5817$Of4HK)
                                          ((case-lambda
                                             ((g$field1$5818$Of4HK)
                                              ((case-lambda
                                                 ((g$field2$5819$Of4HK)
                                                  ((case-lambda
                                                     ((g$field$5820$Of4HK)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$5776$Of4HK
                                                            g$n$5811$Of4HK
                                                            g$start$5812$Of4HK
                                                            g$end$5813$Of4HK
                                                            g$field$5820$Of4HK))))))
                                                   (bitwise-ior
                                                     g$field1$5818$Of4HK
                                                     g$field2$5819$Of4HK))))
                                               (g$bitwise-arithmetic-shift-right$5778$Of4HK
                                                 g$field0$5817$Of4HK
                                                 (- g$width$5815$Of4HK
                                                    g$count$5816$Of4HK)))))
                                           (g$bitwise-arithmetic-shift-left$5777$Of4HK
                                             g$field0$5817$Of4HK
                                             g$count$5816$Of4HK))))
                                       (g$bitwise-bit-field$5775$Of4HK
                                         g$n$5811$Of4HK
                                         g$start$5812$Of4HK
                                         g$end$5813$Of4HK))))
                                   (mod g$count$5814$Of4HK g$width$5815$Of4HK))
                                  g$n$5811$Of4HK))))))
                         (- g$end$5813$Of4HK g$start$5812$Of4HK))))
                     g$ei4$5810$Of4HK)))
                 g$ei3$5809$Of4HK)))
             g$ei2$5808$Of4HK)))
         g$ei1$5807$Of4HK))))
   (g$bitwise-reverse-bit-field$5780$Of4HK
     g$bitwise-reverse-bit-field$5831$Of4HK
     (case-lambda
       ((g$ei1$5821$Of4HK g$ei2$5822$Of4HK g$ei3$5823$Of4HK) 'TODO))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$5832$Of4HK
     g$fxif$5879$Of4HK
     (case-lambda
       ((g$fx1$5839$Of4HK g$fx2$5840$Of4HK g$fx3$5841$Of4HK)
        (fxior
          (fxand g$fx1$5839$Of4HK g$fx2$5840$Of4HK)
          (fxand (fxnot g$fx1$5839$Of4HK) g$fx3$5841$Of4HK)))))
   (g$fxcopy-bit$5833$Of4HK
     g$fxcopy-bit$5880$Of4HK
     (case-lambda
       ((g$fx1$5842$Of4HK g$fx2$5843$Of4HK g$fx3$5844$Of4HK)
        ((case-lambda
           ((g$mask$5845$Of4HK)
            ((case-lambda
               (()
                (g$fxif$5832$Of4HK
                  g$mask$5845$Of4HK
                  (g$fxarithmetic-shift-left$5836$Of4HK
                    g$fx3$5844$Of4HK
                    g$fx2$5843$Of4HK)
                  g$fx1$5842$Of4HK))))))
         (g$fxarithmetic-shift-left$5836$Of4HK '1 g$fx2$5843$Of4HK)))))
   (g$fxbit-field$5834$Of4HK
     g$fxbit-field$5881$Of4HK
     (case-lambda
       ((g$fx1$5846$Of4HK g$fx2$5847$Of4HK g$fx3$5848$Of4HK)
        ((case-lambda
           ((g$mask$5849$Of4HK)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$5837$Of4HK
                  (fxand g$fx1$5846$Of4HK g$mask$5849$Of4HK)
                  g$fx2$5847$Of4HK))))))
         (fxnot (g$fxarithmetic-shift-left$5836$Of4HK '-1 g$fx3$5848$Of4HK))))))
   (g$fxcopy-bit-field$5835$Of4HK
     g$fxcopy-bit-field$5882$Of4HK
     (case-lambda
       ((g$fx1$5850$Of4HK g$fx2$5851$Of4HK g$fx3$5852$Of4HK g$fx4$5853$Of4HK)
        ((case-lambda
           ((g$to$5854$Of4HK)
            ((case-lambda
               ((g$start$5855$Of4HK)
                ((case-lambda
                   ((g$end$5856$Of4HK)
                    ((case-lambda
                       ((g$from$5857$Of4HK)
                        ((case-lambda
                           ((g$mask1$5858$Of4HK)
                            ((case-lambda
                               ((g$mask2$5859$Of4HK)
                                ((case-lambda
                                   ((g$mask$5860$Of4HK)
                                    ((case-lambda
                                       (()
                                        (g$fxif$5832$Of4HK
                                          g$mask$5860$Of4HK
                                          (g$fxarithmetic-shift-left$5836$Of4HK
                                            g$from$5857$Of4HK
                                            g$start$5855$Of4HK)
                                          g$to$5854$Of4HK))))))
                                 (fxand
                                   g$mask1$5858$Of4HK
                                   g$mask2$5859$Of4HK))))
                             (fxnot
                               (g$fxarithmetic-shift-left$5836$Of4HK
                                 '-1
                                 g$end$5856$Of4HK)))))
                         (g$fxarithmetic-shift-left$5836$Of4HK
                           '-1
                           g$start$5855$Of4HK))))
                     g$fx4$5853$Of4HK)))
                 g$fx3$5852$Of4HK)))
             g$fx2$5851$Of4HK)))
         g$fx1$5850$Of4HK))))
   (g$fxarithmetic-shift-left$5836$Of4HK
     g$fxarithmetic-shift-left$5883$Of4HK
     (case-lambda
       ((g$fx1$5861$Of4HK g$fx2$5862$Of4HK)
        (fxarithmetic-shift g$fx1$5861$Of4HK g$fx2$5862$Of4HK))))
   (g$fxarithmetic-shift-right$5837$Of4HK
     g$fxarithmetic-shift-right$5884$Of4HK
     (case-lambda
       ((g$fx1$5863$Of4HK g$fx2$5864$Of4HK)
        (fxarithmetic-shift g$fx1$5863$Of4HK (- g$fx2$5864$Of4HK)))))
   (g$fxrotate-bit-field$5838$Of4HK
     g$fxrotate-bit-field$5885$Of4HK
     (case-lambda
       ((g$fx1$5865$Of4HK g$fx2$5866$Of4HK g$fx3$5867$Of4HK g$fx4$5868$Of4HK)
        ((case-lambda
           ((g$n$5869$Of4HK)
            ((case-lambda
               ((g$start$5870$Of4HK)
                ((case-lambda
                   ((g$end$5871$Of4HK)
                    ((case-lambda
                       ((g$count$5872$Of4HK)
                        ((case-lambda
                           ((g$width$5873$Of4HK)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5873$Of4HK)
                                  ((case-lambda
                                     ((g$count$5874$Of4HK)
                                      ((case-lambda
                                         ((g$field0$5875$Of4HK)
                                          ((case-lambda
                                             ((g$field1$5876$Of4HK)
                                              ((case-lambda
                                                 ((g$field2$5877$Of4HK)
                                                  ((case-lambda
                                                     ((g$field$5878$Of4HK)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$5835$Of4HK
                                                            g$n$5869$Of4HK
                                                            g$start$5870$Of4HK
                                                            g$end$5871$Of4HK
                                                            g$field$5878$Of4HK))))))
                                                   (fxior
                                                     g$field1$5876$Of4HK
                                                     g$field2$5877$Of4HK))))
                                               (g$fxarithmetic-shift-right$5837$Of4HK
                                                 g$field0$5875$Of4HK
                                                 (- g$width$5873$Of4HK
                                                    g$count$5874$Of4HK)))))
                                           (g$fxarithmetic-shift-left$5836$Of4HK
                                             g$field0$5875$Of4HK
                                             g$count$5874$Of4HK))))
                                       (g$fxbit-field$5834$Of4HK
                                         g$n$5869$Of4HK
                                         g$start$5870$Of4HK
                                         g$end$5871$Of4HK))))
                                   (mod g$count$5872$Of4HK g$width$5873$Of4HK))
                                  g$n$5869$Of4HK))))))
                         (- g$end$5871$Of4HK g$start$5870$Of4HK))))
                     g$fx4$5868$Of4HK)))
                 g$fx3$5867$Of4HK)))
             g$fx2$5866$Of4HK)))
         g$fx1$5865$Of4HK)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$6678$5886$Of4HK
     g$6678$5898$Of4HK
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$6681$Of4HK
       '#f
       '#f
       '#()))
   (g$6680$5887$Of4HK g$6680$5899$Of4HK '#f)
   (g$6679$5888$Of4HK
     g$6679$5900$Of4HK
     (make-record-constructor-descriptor
       g$6678$5886$Of4HK
       &implementation-restriction-rcd
       g$6680$5887$Of4HK))
   (g$6677$5889$Of4HK g$6677$5901$Of4HK (record-predicate g$6678$5886$Of4HK))
   (g$make-no-infinities-violation$5890$Of4HK
     g$make-no-infinities-violation$5902$Of4HK
     (record-constructor g$6679$5888$Of4HK))
   (g$no-infinities-violation?$5891$Of4HK
     g$no-infinities-violation?$5903$Of4HK
     (condition-predicate g$6678$5886$Of4HK))
   (g$6692$5892$Of4HK
     g$6692$5904$Of4HK
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$6695$Of4HK
       '#f
       '#f
       '#()))
   (g$6694$5893$Of4HK g$6694$5905$Of4HK '#f)
   (g$6693$5894$Of4HK
     g$6693$5906$Of4HK
     (make-record-constructor-descriptor
       g$6692$5892$Of4HK
       &implementation-restriction-rcd
       g$6694$5893$Of4HK))
   (g$6691$5895$Of4HK g$6691$5907$Of4HK (record-predicate g$6692$5892$Of4HK))
   (g$make-no-nans-violation$5896$Of4HK
     g$make-no-nans-violation$5908$Of4HK
     (record-constructor g$6693$5894$Of4HK))
   (g$no-nans-violation?$5897$Of4HK
     g$no-nans-violation?$5909$Of4HK
     (condition-predicate g$6692$5892$Of4HK)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$6707$5910$Of4HK
     g$6707$5990$Of4HK
     (make-record-type-descriptor '&i/o &error-rtd 'g$6710$Of4HK '#f '#f '#()))
   (g$6709$5911$Of4HK g$6709$5991$Of4HK '#f)
   (g$6708$5912$Of4HK
     g$6708$5992$Of4HK
     (make-record-constructor-descriptor
       g$6707$5910$Of4HK
       &error-rcd
       g$6709$5911$Of4HK))
   (g$6706$5913$Of4HK g$6706$5993$Of4HK (record-predicate g$6707$5910$Of4HK))
   (g$make-i/o-error$5914$Of4HK
     g$make-i/o-error$5994$Of4HK
     (record-constructor g$6708$5912$Of4HK))
   (g$i/o-error?$5915$Of4HK
     g$i/o-error?$5995$Of4HK
     (condition-predicate g$6707$5910$Of4HK))
   (g$6721$5916$Of4HK
     g$6721$5996$Of4HK
     (make-record-type-descriptor
       '&i/o-read
       g$6707$5910$Of4HK
       'g$6724$Of4HK
       '#f
       '#f
       '#()))
   (g$6723$5917$Of4HK g$6723$5997$Of4HK '#f)
   (g$6722$5918$Of4HK
     g$6722$5998$Of4HK
     (make-record-constructor-descriptor
       g$6721$5916$Of4HK
       g$6708$5912$Of4HK
       g$6723$5917$Of4HK))
   (g$6720$5919$Of4HK g$6720$5999$Of4HK (record-predicate g$6721$5916$Of4HK))
   (g$make-i/o-read-error$5920$Of4HK
     g$make-i/o-read-error$6000$Of4HK
     (record-constructor g$6722$5918$Of4HK))
   (g$i/o-read-error?$5921$Of4HK
     g$i/o-read-error?$6001$Of4HK
     (condition-predicate g$6721$5916$Of4HK))
   (g$6735$5922$Of4HK
     g$6735$6002$Of4HK
     (make-record-type-descriptor
       '&i/o-write
       g$6707$5910$Of4HK
       'g$6738$Of4HK
       '#f
       '#f
       '#()))
   (g$6737$5923$Of4HK g$6737$6003$Of4HK '#f)
   (g$6736$5924$Of4HK
     g$6736$6004$Of4HK
     (make-record-constructor-descriptor
       g$6735$5922$Of4HK
       g$6708$5912$Of4HK
       g$6737$5923$Of4HK))
   (g$6734$5925$Of4HK g$6734$6005$Of4HK (record-predicate g$6735$5922$Of4HK))
   (g$make-i/o-write-error$5926$Of4HK
     g$make-i/o-write-error$6006$Of4HK
     (record-constructor g$6736$5924$Of4HK))
   (g$i/o-write-error?$5927$Of4HK
     g$i/o-write-error?$6007$Of4HK
     (condition-predicate g$6735$5922$Of4HK))
   (g$6750$5928$Of4HK
     g$6750$6008$Of4HK
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6707$5910$Of4HK
       'g$6753$Of4HK
       '#f
       '#f
       '#((immutable position))))
   (g$6752$5929$Of4HK g$6752$6009$Of4HK '#f)
   (g$6751$5930$Of4HK
     g$6751$6010$Of4HK
     (make-record-constructor-descriptor
       g$6750$5928$Of4HK
       g$6708$5912$Of4HK
       g$6752$5929$Of4HK))
   (g$6749$5931$Of4HK g$6749$6011$Of4HK (record-predicate g$6750$5928$Of4HK))
   (g$make-i/o-invalid-position-error$5932$Of4HK
     g$make-i/o-invalid-position-error$6012$Of4HK
     (record-constructor g$6751$5930$Of4HK))
   (g$6748$5933$Of4HK g$6748$6013$Of4HK (record-accessor g$6750$5928$Of4HK '0))
   (g$i/o-invalid-position-error?$5934$Of4HK
     g$i/o-invalid-position-error?$6014$Of4HK
     (condition-predicate g$6750$5928$Of4HK))
   (g$i/o-error-position$5935$Of4HK
     g$i/o-error-position$6015$Of4HK
     (condition-accessor g$6750$5928$Of4HK g$6748$5933$Of4HK))
   (g$6767$5936$Of4HK
     g$6767$6016$Of4HK
     (make-record-type-descriptor
       '&i/o-filename
       g$6707$5910$Of4HK
       'g$6770$Of4HK
       '#f
       '#f
       '#((immutable filename))))
   (g$6769$5937$Of4HK g$6769$6017$Of4HK '#f)
   (g$6768$5938$Of4HK
     g$6768$6018$Of4HK
     (make-record-constructor-descriptor
       g$6767$5936$Of4HK
       g$6708$5912$Of4HK
       g$6769$5937$Of4HK))
   (g$6766$5939$Of4HK g$6766$6019$Of4HK (record-predicate g$6767$5936$Of4HK))
   (g$make-i/o-filename-error$5940$Of4HK
     g$make-i/o-filename-error$6020$Of4HK
     (record-constructor g$6768$5938$Of4HK))
   (g$6765$5941$Of4HK g$6765$6021$Of4HK (record-accessor g$6767$5936$Of4HK '0))
   (g$i/o-filename-error?$5942$Of4HK
     g$i/o-filename-error?$6022$Of4HK
     (condition-predicate g$6767$5936$Of4HK))
   (g$i/o-error-filename$5943$Of4HK
     g$i/o-error-filename$6023$Of4HK
     (condition-accessor g$6767$5936$Of4HK g$6765$5941$Of4HK))
   (g$6783$5944$Of4HK
     g$6783$6024$Of4HK
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6707$5910$Of4HK
       'g$6786$Of4HK
       '#f
       '#f
       '#()))
   (g$6785$5945$Of4HK g$6785$6025$Of4HK '#f)
   (g$6784$5946$Of4HK
     g$6784$6026$Of4HK
     (make-record-constructor-descriptor
       g$6783$5944$Of4HK
       g$6708$5912$Of4HK
       g$6785$5945$Of4HK))
   (g$6782$5947$Of4HK g$6782$6027$Of4HK (record-predicate g$6783$5944$Of4HK))
   (g$make-i/o-file-protection-error$5948$Of4HK
     g$make-i/o-file-protection-error$6028$Of4HK
     (record-constructor g$6784$5946$Of4HK))
   (g$i/o-file-protection-error?$5949$Of4HK
     g$i/o-file-protection-error?$6029$Of4HK
     (condition-predicate g$6783$5944$Of4HK))
   (g$6797$5950$Of4HK
     g$6797$6030$Of4HK
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6783$5944$Of4HK
       'g$6800$Of4HK
       '#f
       '#f
       '#()))
   (g$6799$5951$Of4HK g$6799$6031$Of4HK '#f)
   (g$6798$5952$Of4HK
     g$6798$6032$Of4HK
     (make-record-constructor-descriptor
       g$6797$5950$Of4HK
       g$6784$5946$Of4HK
       g$6799$5951$Of4HK))
   (g$6796$5953$Of4HK g$6796$6033$Of4HK (record-predicate g$6797$5950$Of4HK))
   (g$make-i/o-file-is-read-only-error$5954$Of4HK
     g$make-i/o-file-is-read-only-error$6034$Of4HK
     (record-constructor g$6798$5952$Of4HK))
   (g$i/o-file-is-read-only-error?$5955$Of4HK
     g$i/o-file-is-read-only-error?$6035$Of4HK
     (condition-predicate g$6797$5950$Of4HK))
   (g$6811$5956$Of4HK
     g$6811$6036$Of4HK
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6767$5936$Of4HK
       'g$6814$Of4HK
       '#f
       '#f
       '#()))
   (g$6813$5957$Of4HK g$6813$6037$Of4HK '#f)
   (g$6812$5958$Of4HK
     g$6812$6038$Of4HK
     (make-record-constructor-descriptor
       g$6811$5956$Of4HK
       g$6768$5938$Of4HK
       g$6813$5957$Of4HK))
   (g$6810$5959$Of4HK g$6810$6039$Of4HK (record-predicate g$6811$5956$Of4HK))
   (g$make-i/o-file-already-exists-error$5960$Of4HK
     g$make-i/o-file-already-exists-error$6040$Of4HK
     (record-constructor g$6812$5958$Of4HK))
   (g$i/o-file-already-exists-error?$5961$Of4HK
     g$i/o-file-already-exists-error?$6041$Of4HK
     (condition-predicate g$6811$5956$Of4HK))
   (g$6825$5962$Of4HK
     g$6825$6042$Of4HK
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6767$5936$Of4HK
       'g$6828$Of4HK
       '#f
       '#f
       '#()))
   (g$6827$5963$Of4HK g$6827$6043$Of4HK '#f)
   (g$6826$5964$Of4HK
     g$6826$6044$Of4HK
     (make-record-constructor-descriptor
       g$6825$5962$Of4HK
       g$6768$5938$Of4HK
       g$6827$5963$Of4HK))
   (g$6824$5965$Of4HK g$6824$6045$Of4HK (record-predicate g$6825$5962$Of4HK))
   (g$make-i/o-file-does-not-exist-error$5966$Of4HK
     g$make-i/o-file-does-not-exist-error$6046$Of4HK
     (record-constructor g$6826$5964$Of4HK))
   (g$i/o-file-does-not-exist-error?$5967$Of4HK
     g$i/o-file-does-not-exist-error?$6047$Of4HK
     (condition-predicate g$6825$5962$Of4HK))
   (g$6840$5968$Of4HK
     g$6840$6048$Of4HK
     (make-record-type-descriptor
       '&i/o-port
       g$6707$5910$Of4HK
       'g$6843$Of4HK
       '#f
       '#f
       '#((immutable port))))
   (g$6842$5969$Of4HK g$6842$6049$Of4HK '#f)
   (g$6841$5970$Of4HK
     g$6841$6050$Of4HK
     (make-record-constructor-descriptor
       g$6840$5968$Of4HK
       g$6708$5912$Of4HK
       g$6842$5969$Of4HK))
   (g$6839$5971$Of4HK g$6839$6051$Of4HK (record-predicate g$6840$5968$Of4HK))
   (g$make-i/o-port-error$5972$Of4HK
     g$make-i/o-port-error$6052$Of4HK
     (record-constructor g$6841$5970$Of4HK))
   (g$6838$5973$Of4HK g$6838$6053$Of4HK (record-accessor g$6840$5968$Of4HK '0))
   (g$i/o-port-error?$5974$Of4HK
     g$i/o-port-error?$6054$Of4HK
     (condition-predicate g$6840$5968$Of4HK))
   (g$i/o-error-port$5975$Of4HK
     g$i/o-error-port$6055$Of4HK
     (condition-accessor g$6840$5968$Of4HK g$6838$5973$Of4HK))
   (g$6856$5976$Of4HK
     g$6856$6056$Of4HK
     (make-record-type-descriptor
       '&i/o-decoding
       g$6840$5968$Of4HK
       'g$6859$Of4HK
       '#f
       '#f
       '#()))
   (g$6858$5977$Of4HK g$6858$6057$Of4HK '#f)
   (g$6857$5978$Of4HK
     g$6857$6058$Of4HK
     (make-record-constructor-descriptor
       g$6856$5976$Of4HK
       g$6841$5970$Of4HK
       g$6858$5977$Of4HK))
   (g$6855$5979$Of4HK g$6855$6059$Of4HK (record-predicate g$6856$5976$Of4HK))
   (g$make-i/o-decoding-error$5980$Of4HK
     g$make-i/o-decoding-error$6060$Of4HK
     (record-constructor g$6857$5978$Of4HK))
   (g$i/o-decoding-error?$5981$Of4HK
     g$i/o-decoding-error?$6061$Of4HK
     (condition-predicate g$6856$5976$Of4HK))
   (g$6871$5982$Of4HK
     g$6871$6062$Of4HK
     (make-record-type-descriptor
       '&i/o-encoding
       g$6840$5968$Of4HK
       'g$6874$Of4HK
       '#f
       '#f
       '#((immutable char))))
   (g$6873$5983$Of4HK g$6873$6063$Of4HK '#f)
   (g$6872$5984$Of4HK
     g$6872$6064$Of4HK
     (make-record-constructor-descriptor
       g$6871$5982$Of4HK
       g$6841$5970$Of4HK
       g$6873$5983$Of4HK))
   (g$6870$5985$Of4HK g$6870$6065$Of4HK (record-predicate g$6871$5982$Of4HK))
   (g$make-i/o-encoding-error$5986$Of4HK
     g$make-i/o-encoding-error$6066$Of4HK
     (record-constructor g$6872$5984$Of4HK))
   (g$6869$5987$Of4HK g$6869$6067$Of4HK (record-accessor g$6871$5982$Of4HK '0))
   (g$i/o-encoding-error?$5988$Of4HK
     g$i/o-encoding-error?$6068$Of4HK
     (condition-predicate g$6871$5982$Of4HK))
   (g$i/o-encoding-error-char$5989$Of4HK
     g$i/o-encoding-error-char$6069$Of4HK
     (condition-accessor g$6871$5982$Of4HK g$6869$5987$Of4HK)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6070$Of4HK
     g$get-output-string$6075$Of4HK
     (case-lambda
       ((g$port$6073$Of4HK)
        (clr-call-internal
          'system.io.stringwriter
          'tostring
          g$port$6073$Of4HK))))
   (g$open-output-string$6071$Of4HK
     g$open-output-string$6076$Of4HK
     (case-lambda (() (clr-new-internal 'system.io.stringwriter))))
   (g$open-string-output-port$6072$Of4HK
     g$open-string-output-port$6077$Of4HK
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6074$Of4HK)
            (values
              g$p$6074$Of4HK
              (case-lambda
                (() (g$get-output-string$6070$Of4HK g$p$6074$Of4HK))))))
         (g$open-output-string$6071$Of4HK))))))
  (void))

(library-letrec* (ironscheme io simple) () (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme format)
  ((g$dofmt$6078$Of4HK
     g$dofmt$6100$Of4HK
     (case-lambda
       ((g$p$6082$Of4HK g$cntl$6083$Of4HK g$args$6084$Of4HK)
        ((case-lambda
           ((g$nmax$6085$Of4HK)
            ((letrec ((g$loop$6086$Of4HK
                        (case-lambda
                          ((g$n$6087$Of4HK g$a$6088$Of4HK)
                           (if (fx<=? g$n$6087$Of4HK g$nmax$6085$Of4HK)
                             ((case-lambda
                                ((g$c$6089$Of4HK)
                                 (if (if (char=? g$c$6089$Of4HK '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6087$Of4HK
                                           g$nmax$6085$Of4HK))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6090$Of4HK)
                                       (if (eqv? g$t$6090$Of4HK '#\a)
                                         (begin
                                           (display
                                             (car g$a$6088$Of4HK)
                                             g$p$6082$Of4HK)
                                           (g$loop$6086$Of4HK
                                             (fx+ g$n$6087$Of4HK '2)
                                             (cdr g$a$6088$Of4HK)))
                                         (if (eqv? g$t$6090$Of4HK '#\s)
                                           (begin
                                             (write
                                               (car g$a$6088$Of4HK)
                                               g$p$6082$Of4HK)
                                             (g$loop$6086$Of4HK
                                               (fx+ g$n$6087$Of4HK '2)
                                               (cdr g$a$6088$Of4HK)))
                                           (if (eqv? g$t$6090$Of4HK '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6088$Of4HK)
                                                   '2)
                                                 g$p$6082$Of4HK)
                                               (g$loop$6086$Of4HK
                                                 (fx+ g$n$6087$Of4HK '2)
                                                 (cdr g$a$6088$Of4HK)))
                                             (if (eqv? g$t$6090$Of4HK '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6088$Of4HK)
                                                     '8)
                                                   g$p$6082$Of4HK)
                                                 (g$loop$6086$Of4HK
                                                   (fx+ g$n$6087$Of4HK '2)
                                                   (cdr g$a$6088$Of4HK)))
                                               (if (eqv? g$t$6090$Of4HK '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6088$Of4HK)
                                                       '16)
                                                     g$p$6082$Of4HK)
                                                   (g$loop$6086$Of4HK
                                                     (fx+ g$n$6087$Of4HK '2)
                                                     (cdr g$a$6088$Of4HK)))
                                                 (if (eqv? g$t$6090$Of4HK '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6088$Of4HK)
                                                         '10)
                                                       g$p$6082$Of4HK)
                                                     (g$loop$6086$Of4HK
                                                       (fx+ g$n$6087$Of4HK '2)
                                                       (cdr g$a$6088$Of4HK)))
                                                   (if (eqv?
                                                         g$t$6090$Of4HK
                                                         '#\~)
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6082$Of4HK)
                                                       (g$loop$6086$Of4HK
                                                         (fx+ g$n$6087$Of4HK '2)
                                                         g$a$6088$Of4HK))
                                                     (begin
                                                       (write-char
                                                         g$c$6089$Of4HK
                                                         g$p$6082$Of4HK)
                                                       (g$loop$6086$Of4HK
                                                         (fx+ g$n$6087$Of4HK '1)
                                                         g$a$6088$Of4HK)))))))))))
                                    (string-ref
                                      g$cntl$6083$Of4HK
                                      (fx+ g$n$6087$Of4HK '1)))
                                   (begin
                                     (write-char g$c$6089$Of4HK g$p$6082$Of4HK)
                                     (g$loop$6086$Of4HK
                                       (fx+ g$n$6087$Of4HK '1)
                                       g$a$6088$Of4HK)))))
                              (string-ref g$cntl$6083$Of4HK g$n$6087$Of4HK))
                             (void))))))
               g$loop$6086$Of4HK)
             '0
             g$args$6084$Of4HK)))
         (fx- (string-length g$cntl$6083$Of4HK) '1)))))
   (g$printf$6079$Of4HK
     g$printf$6101$Of4HK
     (case-lambda
       ((g$control$6091$Of4HK . g$args$6092$Of4HK)
        (g$dofmt$6078$Of4HK
          (current-output-port)
          g$control$6091$Of4HK
          g$args$6092$Of4HK))))
   (g$fprintf$6080$Of4HK
     g$fprintf$6102$Of4HK
     (case-lambda
       ((g$p$6093$Of4HK g$control$6094$Of4HK . g$args$6095$Of4HK)
        (g$dofmt$6078$Of4HK
          g$p$6093$Of4HK
          g$control$6094$Of4HK
          g$args$6095$Of4HK))))
   (g$format$6081$Of4HK
     g$format$6103$Of4HK
     (case-lambda
       ((g$control$6096$Of4HK . g$args$6097$Of4HK)
        (call-with-values
          g$open-string-output-port$6077$Of4HK
          (case-lambda
            ((g$p$6098$Of4HK g$c$6099$Of4HK)
             (begin
               (g$dofmt$6078$Of4HK
                 g$p$6098$Of4HK
                 g$control$6096$Of4HK
                 g$args$6097$Of4HK)
               (g$c$6099$Of4HK)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6104$Of4HK
     g$make-traced-macro$6107$Of4HK
     (case-lambda
       ((g$name$6105$Of4HK g$x$6106$Of4HK)
        (if (procedure? g$x$6106$Of4HK)
          (make-traced-procedure
            g$name$6105$Of4HK
            g$x$6106$Of4HK
            g$syntax->datum$10737$Of4HK)
          (if (g$variable-transformer?$10565$Of4HK g$x$6106$Of4HK)
            (g$make-variable-transformer$10564$Of4HK
              (make-traced-procedure
                g$name$6105$Of4HK
                (g$variable-transformer-procedure$10566$Of4HK g$x$6106$Of4HK)
                g$syntax->datum$10737$Of4HK))
            g$x$6106$Of4HK))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6108$Of4HK
     g$read-library-source-file$6186$Of4HK
     (case-lambda
       ((g$file-name$6178$Of4HK)
        (with-input-from-file g$file-name$6178$Of4HK read-annotated))))
   (g$make-parameter$6109$Of4HK
     g$make-parameter$6187$Of4HK
     (case-lambda
       ((g$x$6179$Of4HK)
        (g$make-parameter$6109$Of4HK
          g$x$6179$Of4HK
          (case-lambda ((g$x$6180$Of4HK) g$x$6180$Of4HK))))
       ((g$x$6181$Of4HK g$fender$6182$Of4HK)
        (begin
          (if (procedure? g$fender$6182$Of4HK)
            (void)
            (assertion-violation
              'assert
              '"assertion failed"
              '(procedure? fender)))
          ((case-lambda
             ((g$x$6183$Of4HK)
              (case-lambda
                (() g$x$6183$Of4HK)
                ((g$v$6184$Of4HK)
                 (set! g$x$6183$Of4HK (g$fender$6182$Of4HK g$v$6184$Of4HK))))))
           (g$fender$6182$Of4HK g$x$6181$Of4HK))))))
   (g$file-options-spec$6177$Of4HK
     g$file-options-spec$6188$Of4HK
     (case-lambda ((g$x$6185$Of4HK) g$x$6185$Of4HK))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6384$Of4HK
     g$current-primitive-locations$6429$Of4HK
     (g$make-parameter$6187$Of4HK
       (case-lambda ((g$x$6390$Of4HK) '#f))
       (case-lambda
         ((g$p$6391$Of4HK)
          (begin
            (if (procedure? g$p$6391$Of4HK)
              (void)
              (assertion-violation 'assert '"assertion failed" '(procedure? p)))
            g$p$6391$Of4HK)))))
   (g$mutable?$6385$Of4HK
     g$mutable?$6430$Of4HK
     (case-lambda
       ((g$x$6392$Of4HK)
        (letrec* ((g$simple?$6393$Of4HK
                    (case-lambda
                      ((g$x$6394$Of4HK)
                       ((case-lambda
                          ((g$t$6395$Of4HK)
                           (if g$t$6395$Of4HK
                             g$t$6395$Of4HK
                             ((case-lambda
                                ((g$t$6396$Of4HK)
                                 (if g$t$6396$Of4HK
                                   g$t$6396$Of4HK
                                   ((case-lambda
                                      ((g$t$6397$Of4HK)
                                       (if g$t$6397$Of4HK
                                         g$t$6397$Of4HK
                                         ((case-lambda
                                            ((g$t$6398$Of4HK)
                                             (if g$t$6398$Of4HK
                                               g$t$6398$Of4HK
                                               ((case-lambda
                                                  ((g$t$6399$Of4HK)
                                                   (if g$t$6399$Of4HK
                                                     g$t$6399$Of4HK
                                                     ((case-lambda
                                                        ((g$t$6400$Of4HK)
                                                         (if g$t$6400$Of4HK
                                                           g$t$6400$Of4HK
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6394$Of4HK)))))
                                                      (bytevector?
                                                        g$x$6394$Of4HK)))))
                                                (string? g$x$6394$Of4HK)))))
                                          (boolean? g$x$6394$Of4HK)))))
                                    (symbol? g$x$6394$Of4HK)))))
                              (char? g$x$6394$Of4HK)))))
                        (null? g$x$6394$Of4HK))))))
          (not (g$simple?$6393$Of4HK g$x$6392$Of4HK))))))
   (g$rewriter$6386$Of4HK
     g$rewriter$6431$Of4HK
     (case-lambda
       ((g$quote-hack?$6401$Of4HK)
        (letrec* ((g$f$6402$Of4HK
                    (case-lambda
                      ((g$x$6403$Of4HK)
                       (if (pair? g$x$6403$Of4HK)
                         ((case-lambda
                            ((g$t$6404$Of4HK)
                             (if (eqv? g$t$6404$Of4HK 'quote)
                               (if (if g$quote-hack?$6401$Of4HK
                                     (begin
                                       '#f
                                       (g$mutable?$6385$Of4HK
                                         (g$cadr$4878$Of4HK g$x$6403$Of4HK)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6424$Of4HK)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6424$Of4HK
                                         (g$cadr$4878$Of4HK g$x$6403$Of4HK))
                                       g$g$6424$Of4HK)))
                                  (gensym))
                                 g$x$6403$Of4HK)
                               (if (eqv? g$t$6404$Of4HK 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6423$Of4HK)
                                           (cons
                                             (car g$x$6423$Of4HK)
                                             (map g$f$6402$Of4HK
                                                  (cdr g$x$6423$Of4HK)))))
                                        (cdr g$x$6403$Of4HK)))
                                 (if (eqv? g$t$6404$Of4HK 'lambda)
                                   (g$cons*$5349$Of4HK
                                     'lambda
                                     (g$cadr$4878$Of4HK g$x$6403$Of4HK)
                                     (map g$f$6402$Of4HK
                                          (g$cddr$4880$Of4HK g$x$6403$Of4HK)))
                                   (if (eqv? g$t$6404$Of4HK 'letrec)
                                     ((case-lambda
                                        ((g$bindings$6419$Of4HK
                                           g$body*$6420$Of4HK)
                                         ((case-lambda
                                            ((g$lhs*$6421$Of4HK
                                               g$rhs*$6422$Of4HK)
                                             (g$cons*$5349$Of4HK
                                               'letrec
                                               (map list
                                                    g$lhs*$6421$Of4HK
                                                    (map g$f$6402$Of4HK
                                                         g$rhs*$6422$Of4HK))
                                               (map g$f$6402$Of4HK
                                                    g$body*$6420$Of4HK))))
                                          (map car g$bindings$6419$Of4HK)
                                          (map g$cadr$4878$Of4HK
                                               g$bindings$6419$Of4HK))))
                                      (g$cadr$4878$Of4HK g$x$6403$Of4HK)
                                      (g$cddr$4880$Of4HK g$x$6403$Of4HK))
                                     (if (eqv? g$t$6404$Of4HK 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$6415$Of4HK
                                             g$body*$6416$Of4HK)
                                           ((case-lambda
                                              ((g$lhs*$6417$Of4HK
                                                 g$rhs*$6418$Of4HK)
                                               (g$cons*$5349$Of4HK
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6417$Of4HK
                                                      (map g$f$6402$Of4HK
                                                           g$rhs*$6418$Of4HK))
                                                 (map g$f$6402$Of4HK
                                                      g$body*$6416$Of4HK))))
                                            (map car g$bindings$6415$Of4HK)
                                            (map g$cadr$4878$Of4HK
                                                 g$bindings$6415$Of4HK))))
                                        (g$cadr$4878$Of4HK g$x$6403$Of4HK)
                                        (g$cddr$4880$Of4HK g$x$6403$Of4HK))
                                       (if (eqv?
                                             g$t$6404$Of4HK
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$6408$Of4HK g$x$6409$Of4HK)
                                             ((case-lambda
                                                ((g$bindings$6410$Of4HK
                                                   g$body*$6411$Of4HK)
                                                 ((case-lambda
                                                    ((g$lhs*$6412$Of4HK
                                                       g$lhs**$6413$Of4HK
                                                       g$rhs*$6414$Of4HK)
                                                     (g$cons*$5349$Of4HK
                                                       'library-letrec*
                                                       g$name$6408$Of4HK
                                                       (map list
                                                            g$lhs*$6412$Of4HK
                                                            g$lhs**$6413$Of4HK
                                                            (map g$f$6402$Of4HK
                                                                 g$rhs*$6414$Of4HK))
                                                       (map g$f$6402$Of4HK
                                                            g$body*$6411$Of4HK))))
                                                  (map car
                                                       g$bindings$6410$Of4HK)
                                                  (map g$cadr$4878$Of4HK
                                                       g$bindings$6410$Of4HK)
                                                  (map g$caddr$4884$Of4HK
                                                       g$bindings$6410$Of4HK))))
                                              (g$cadr$4878$Of4HK g$x$6409$Of4HK)
                                              (g$cddr$4880$Of4HK
                                                g$x$6409$Of4HK))))
                                          (g$cadr$4878$Of4HK g$x$6403$Of4HK)
                                          (cdr g$x$6403$Of4HK))
                                         (if (eqv? g$t$6404$Of4HK 'begin)
                                           (cons
                                             'begin
                                             (map g$f$6402$Of4HK
                                                  (cdr g$x$6403$Of4HK)))
                                           (if (eqv? g$t$6404$Of4HK 'set!)
                                             (list
                                               'set!
                                               (g$cadr$4878$Of4HK
                                                 g$x$6403$Of4HK)
                                               (g$f$6402$Of4HK
                                                 (g$caddr$4884$Of4HK
                                                   g$x$6403$Of4HK)))
                                             (if (eqv?
                                                   g$t$6404$Of4HK
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$6405$Of4HK)
                                                   ((case-lambda
                                                      ((g$t$6406$Of4HK)
                                                       (if g$t$6406$Of4HK
                                                         ((case-lambda
                                                            ((g$loc$6407$Of4HK)
                                                             g$loc$6407$Of4HK))
                                                          g$t$6406$Of4HK)
                                                         g$op$6405$Of4HK)))
                                                    ((g$current-primitive-locations$6384$Of4HK)
                                                     g$op$6405$Of4HK))))
                                                (g$cadr$4878$Of4HK
                                                  g$x$6403$Of4HK))
                                               (if (eqv? g$t$6404$Of4HK 'define)
                                                 g$x$6403$Of4HK
                                                 (if (list? g$x$6403$Of4HK)
                                                   (map g$f$6402$Of4HK
                                                        g$x$6403$Of4HK)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6403$Of4HK
                                                     (list?
                                                       g$x$6403$Of4HK)))))))))))))))
                          (car g$x$6403$Of4HK))
                         g$x$6403$Of4HK)))))
          g$f$6402$Of4HK))))
   (g$expanded->core$6387$Of4HK
     g$expanded->core$6432$Of4HK
     (case-lambda
       ((g$x$6425$Of4HK) ((g$rewriter$6386$Of4HK '#t) g$x$6425$Of4HK))))
   (g$compile-core-expr$6388$Of4HK
     g$compile-core-expr$6433$Of4HK
     (case-lambda
       ((g$x$6426$Of4HK) ((g$rewriter$6386$Of4HK '#f) g$x$6426$Of4HK))))
   (g$compile-core-expr-to-port$6389$Of4HK
     g$compile-core-expr-to-port$6434$Of4HK
     (case-lambda
       ((g$x$6427$Of4HK g$p$6428$Of4HK)
        (g$pretty-print$6383$Of4HK
          ((g$rewriter$6386$Of4HK '#f) g$x$6427$Of4HK)
          g$p$6428$Of4HK)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6473$Of4HK
     g$make-collection$6677$Of4HK
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6534$Of4HK)
            (letrec* ((g$set-cons$6535$Of4HK
                        (case-lambda
                          ((g$x$6537$Of4HK g$ls$6538$Of4HK)
                           (if (memq g$x$6537$Of4HK g$ls$6538$Of4HK)
                             g$ls$6538$Of4HK
                             (cons g$x$6537$Of4HK g$ls$6538$Of4HK))))))
              (case-lambda
                (() g$set$6534$Of4HK)
                ((g$x$6536$Of4HK)
                 (set! g$set$6534$Of4HK
                   (g$set-cons$6535$Of4HK g$x$6536$Of4HK g$set$6534$Of4HK)))))))
         '()))))
   (g$current-library-collection$6474$Of4HK
     g$current-library-collection$6678$Of4HK
     (g$make-parameter$6187$Of4HK
       (g$make-collection$6473$Of4HK)
       (case-lambda
         ((g$x$6539$Of4HK)
          (begin
            (if (procedure? g$x$6539$Of4HK)
              (void)
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6539$Of4HK))
            g$x$6539$Of4HK)))))
   (g$7306$6475$Of4HK
     g$7306$6679$Of4HK
     (make-record-type-descriptor
       'library
       '#f
       'g$7309$Of4HK
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7308$6476$Of4HK g$7308$6680$Of4HK '#f)
   (g$7307$6477$Of4HK
     g$7307$6681$Of4HK
     (make-record-constructor-descriptor
       g$7306$6475$Of4HK
       '#f
       g$7308$6476$Of4HK))
   (g$library?$6478$Of4HK
     g$library?$6682$Of4HK
     (record-predicate g$7306$6475$Of4HK))
   (g$make-library$6479$Of4HK
     g$make-library$6683$Of4HK
     (record-constructor g$7307$6477$Of4HK))
   (g$library-id$6480$Of4HK
     g$library-id$6684$Of4HK
     (record-accessor g$7306$6475$Of4HK '0))
   (g$library-name$6481$Of4HK
     g$library-name$6685$Of4HK
     (record-accessor g$7306$6475$Of4HK '1))
   (g$library-version$6482$Of4HK
     g$library-version$6686$Of4HK
     (record-accessor g$7306$6475$Of4HK '2))
   (g$library-imp*$6483$Of4HK
     g$library-imp*$6687$Of4HK
     (record-accessor g$7306$6475$Of4HK '3))
   (g$library-vis*$6484$Of4HK
     g$library-vis*$6688$Of4HK
     (record-accessor g$7306$6475$Of4HK '4))
   (g$library-inv*$6485$Of4HK
     g$library-inv*$6689$Of4HK
     (record-accessor g$7306$6475$Of4HK '5))
   (g$library-subst$6486$Of4HK
     g$library-subst$6690$Of4HK
     (record-accessor g$7306$6475$Of4HK '6))
   (g$library-env$6487$Of4HK
     g$library-env$6691$Of4HK
     (record-accessor g$7306$6475$Of4HK '7))
   (g$library-visit-state$6488$Of4HK
     g$library-visit-state$6692$Of4HK
     (record-accessor g$7306$6475$Of4HK '8))
   (g$library-invoke-state$6489$Of4HK
     g$library-invoke-state$6693$Of4HK
     (record-accessor g$7306$6475$Of4HK '9))
   (g$library-visit-code$6490$Of4HK
     g$library-visit-code$6694$Of4HK
     (record-accessor g$7306$6475$Of4HK '10))
   (g$library-invoke-code$6491$Of4HK
     g$library-invoke-code$6695$Of4HK
     (record-accessor g$7306$6475$Of4HK '11))
   (g$library-visible?$6492$Of4HK
     g$library-visible?$6696$Of4HK
     (record-accessor g$7306$6475$Of4HK '12))
   (g$library-source-file-name$6493$Of4HK
     g$library-source-file-name$6697$Of4HK
     (record-accessor g$7306$6475$Of4HK '13))
   (g$set-library-id!$6494$Of4HK
     g$set-library-id!$6698$Of4HK
     (record-mutator g$7306$6475$Of4HK '0))
   (g$set-library-name!$6495$Of4HK
     g$set-library-name!$6699$Of4HK
     (record-mutator g$7306$6475$Of4HK '1))
   (g$set-library-version!$6496$Of4HK
     g$set-library-version!$6700$Of4HK
     (record-mutator g$7306$6475$Of4HK '2))
   (g$set-library-imp*!$6497$Of4HK
     g$set-library-imp*!$6701$Of4HK
     (record-mutator g$7306$6475$Of4HK '3))
   (g$set-library-vis*!$6498$Of4HK
     g$set-library-vis*!$6702$Of4HK
     (record-mutator g$7306$6475$Of4HK '4))
   (g$set-library-inv*!$6499$Of4HK
     g$set-library-inv*!$6703$Of4HK
     (record-mutator g$7306$6475$Of4HK '5))
   (g$set-library-subst!$6500$Of4HK
     g$set-library-subst!$6704$Of4HK
     (record-mutator g$7306$6475$Of4HK '6))
   (g$set-library-env!$6501$Of4HK
     g$set-library-env!$6705$Of4HK
     (record-mutator g$7306$6475$Of4HK '7))
   (g$set-library-visit-state!$6502$Of4HK
     g$set-library-visit-state!$6706$Of4HK
     (record-mutator g$7306$6475$Of4HK '8))
   (g$set-library-invoke-state!$6503$Of4HK
     g$set-library-invoke-state!$6707$Of4HK
     (record-mutator g$7306$6475$Of4HK '9))
   (g$set-library-visit-code!$6504$Of4HK
     g$set-library-visit-code!$6708$Of4HK
     (record-mutator g$7306$6475$Of4HK '10))
   (g$set-library-invoke-code!$6505$Of4HK
     g$set-library-invoke-code!$6709$Of4HK
     (record-mutator g$7306$6475$Of4HK '11))
   (g$set-library-visible?!$6506$Of4HK
     g$set-library-visible?!$6710$Of4HK
     (record-mutator g$7306$6475$Of4HK '12))
   (g$set-library-source-file-name!$6507$Of4HK
     g$set-library-source-file-name!$6711$Of4HK
     (record-mutator g$7306$6475$Of4HK '13))
   (g$rp$6508$Of4HK
     g$rp$6712$Of4HK
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6540$Of4HK g$p$6541$Of4HK)
          (begin
            (if (g$library?$6478$Of4HK g$x$6540$Of4HK)
              (void)
              (assertion-violation 'record-type-printer '"not a library"))
            (display
              (g$format$6103$Of4HK
                '"#<library ~s>"
                (if (null? (g$library-version$6482$Of4HK g$x$6540$Of4HK))
                  (g$library-name$6481$Of4HK g$x$6540$Of4HK)
                  (append
                    (g$library-name$6481$Of4HK g$x$6540$Of4HK)
                    (list (g$library-version$6482$Of4HK g$x$6540$Of4HK)))))
              g$p$6541$Of4HK))))))
   (g$find-dependencies$6509$Of4HK
     g$find-dependencies$6713$Of4HK
     (case-lambda
       ((g$ls$6542$Of4HK)
        (if (null? g$ls$6542$Of4HK)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6510$Of4HK
     g$find-library-by$6714$Of4HK
     (case-lambda
       ((g$pred$6543$Of4HK)
        ((letrec ((g$f$6544$Of4HK
                    (case-lambda
                      ((g$ls$6545$Of4HK)
                       (if (null? g$ls$6545$Of4HK)
                         '#f
                         (if (g$pred$6543$Of4HK (car g$ls$6545$Of4HK))
                           (car g$ls$6545$Of4HK)
                           (g$f$6544$Of4HK (cdr g$ls$6545$Of4HK))))))))
           g$f$6544$Of4HK)
         ((g$current-library-collection$6474$Of4HK))))))
   (g$library-path$6511$Of4HK
     g$library-path$6715$Of4HK
     (g$make-parameter$6187$Of4HK
       '(".")
       (case-lambda
         ((g$x$6546$Of4HK)
          (if (if (list? g$x$6546$Of4HK)
                (begin '#f (g$for-all$5347$Of4HK string? g$x$6546$Of4HK))
                '#f)
            (map (case-lambda ((g$x$6547$Of4HK) g$x$6547$Of4HK)) g$x$6546$Of4HK)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6546$Of4HK))))))
   (g$library-extensions$6512$Of4HK
     g$library-extensions$6716$Of4HK
     (g$make-parameter$6187$Of4HK
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6548$Of4HK)
          (if (if (list? g$x$6548$Of4HK)
                (begin '#f (g$for-all$5347$Of4HK string? g$x$6548$Of4HK))
                '#f)
            (map (case-lambda ((g$x$6549$Of4HK) g$x$6549$Of4HK)) g$x$6548$Of4HK)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6548$Of4HK))))))
   (g$library-name->file-name$6513$Of4HK
     g$library-name->file-name$6717$Of4HK
     (case-lambda
       ((g$x$6550$Of4HK)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6077$Of4HK)))
          (case-lambda
            ((g$p$6553$Of4HK g$extract$6554$Of4HK)
             ((case-lambda
                ((g$extract$6555$Of4HK g$p$6556$Of4HK)
                 (letrec* ((g$display-hex$6557$Of4HK
                             (case-lambda
                               ((g$n$6565$Of4HK)
                                (if (<= '0 g$n$6565$Of4HK '9)
                                  (display g$n$6565$Of4HK g$p$6556$Of4HK)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$6565$Of4HK '10)))
                                    g$p$6556$Of4HK))))))
                   (begin
                     ((letrec ((g$f$6558$Of4HK
                                 (case-lambda
                                   ((g$ls$6559$Of4HK)
                                    (if (null? g$ls$6559$Of4HK)
                                      (void)
                                      (begin
                                        (display '"/" g$p$6556$Of4HK)
                                        (for-each
                                          (case-lambda
                                            ((g$c$6560$Of4HK)
                                             (if ((case-lambda
                                                    ((g$t$6561$Of4HK)
                                                     (if g$t$6561$Of4HK
                                                       g$t$6561$Of4HK
                                                       ((case-lambda
                                                          ((g$t$6562$Of4HK)
                                                           (if g$t$6562$Of4HK
                                                             g$t$6562$Of4HK
                                                             ((case-lambda
                                                                ((g$t$6563$Of4HK)
                                                                 (if g$t$6563$Of4HK
                                                                   g$t$6563$Of4HK
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$6560$Of4HK
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (char<=?
                                                                '#\0
                                                                g$c$6560$Of4HK
                                                                '#\9)))))
                                                        (char<=?
                                                          '#\A
                                                          g$c$6560$Of4HK
                                                          '#\Z)))))
                                                  (char<=?
                                                    '#\a
                                                    g$c$6560$Of4HK
                                                    '#\z))
                                               (display
                                                 g$c$6560$Of4HK
                                                 g$p$6556$Of4HK)
                                               (begin
                                                 (display '"%" g$p$6556$Of4HK)
                                                 ((case-lambda
                                                    ((g$n$6564$Of4HK)
                                                     (begin
                                                       (g$display-hex$6557$Of4HK
                                                         (g$quotient$5704$Of4HK
                                                           g$n$6564$Of4HK
                                                           '16))
                                                       (g$display-hex$6557$Of4HK
                                                         (g$remainder$5705$Of4HK
                                                           g$n$6564$Of4HK
                                                           '16)))))
                                                  (char->integer
                                                    g$c$6560$Of4HK))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$6559$Of4HK))))
                                        (g$f$6558$Of4HK
                                          (cdr g$ls$6559$Of4HK))))))))
                        g$f$6558$Of4HK)
                      g$x$6550$Of4HK)
                     (g$extract$6555$Of4HK)))))
              g$extract$6554$Of4HK
              g$p$6553$Of4HK)))))))
   (g$file-locator$6514$Of4HK
     g$file-locator$6718$Of4HK
     (g$make-parameter$6187$Of4HK
       (case-lambda
         ((g$x$6566$Of4HK)
          ((case-lambda
             ((g$str$6567$Of4HK)
              ((letrec ((g$f$6568$Of4HK
                          (case-lambda
                            ((g$ls$6569$Of4HK
                               g$exts$6570$Of4HK
                               g$failed-list$6571$Of4HK)
                             (if (null? g$ls$6569$Of4HK)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$7411$6572$Of4HK
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$7414$Of4HK
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$7413$6573$Of4HK '#f)
                                             (g$7412$6574$Of4HK
                                               (make-record-constructor-descriptor
                                                 g$7411$6572$Of4HK
                                                 &condition-rcd
                                                 g$7413$6573$Of4HK))
                                             (g$7410$6575$Of4HK
                                               (record-predicate
                                                 g$7411$6572$Of4HK))
                                             (g$make-library-resolution-condition$6576$Of4HK
                                               (record-constructor
                                                 g$7412$6574$Of4HK))
                                             (g$7408$6577$Of4HK
                                               (record-accessor
                                                 g$7411$6572$Of4HK
                                                 '0))
                                             (g$7409$6578$Of4HK
                                               (record-accessor
                                                 g$7411$6572$Of4HK
                                                 '1))
                                             (g$library-resolution-condition?$6579$Of4HK
                                               (condition-predicate
                                                 g$7411$6572$Of4HK))
                                             (g$condition-library$6580$Of4HK
                                               (condition-accessor
                                                 g$7411$6572$Of4HK
                                                 g$7408$6577$Of4HK))
                                             (g$condition-files$6581$Of4HK
                                               (condition-accessor
                                                 g$7411$6572$Of4HK
                                                 g$7409$6578$Of4HK)))
                                     (raise
                                       (condition
                                         (g$make-error$5621$Of4HK)
                                         (g$make-who-condition$5647$Of4HK
                                           'expander)
                                         (g$make-message-condition$5601$Of4HK
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$6576$Of4HK
                                           g$x$6566$Of4HK
                                           (reverse
                                             g$failed-list$6571$Of4HK))))))))
                               (if (null? g$exts$6570$Of4HK)
                                 (g$f$6568$Of4HK
                                   (cdr g$ls$6569$Of4HK)
                                   (g$library-extensions$6512$Of4HK)
                                   g$failed-list$6571$Of4HK)
                                 ((case-lambda
                                    ((g$name$6582$Of4HK)
                                     (if (g$file-exists?$5218$Of4HK
                                           g$name$6582$Of4HK)
                                       g$name$6582$Of4HK
                                       (g$f$6568$Of4HK
                                         g$ls$6569$Of4HK
                                         (cdr g$exts$6570$Of4HK)
                                         (cons
                                           g$name$6582$Of4HK
                                           g$failed-list$6571$Of4HK)))))
                                  (string-append
                                    (car g$ls$6569$Of4HK)
                                    g$str$6567$Of4HK
                                    (car g$exts$6570$Of4HK)))))))))
                 g$f$6568$Of4HK)
               (g$library-path$6511$Of4HK)
               (g$library-extensions$6512$Of4HK)
               '())))
           (g$library-name->file-name$6513$Of4HK g$x$6566$Of4HK))))
       (case-lambda
         ((g$f$6583$Of4HK)
          (if (procedure? g$f$6583$Of4HK)
            g$f$6583$Of4HK
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$6583$Of4HK))))))
   (g$serialize-all$6515$Of4HK
     g$serialize-all$6719$Of4HK
     (case-lambda
       ((g$serialize$6584$Of4HK g$compile$6585$Of4HK)
        (letrec* ((g$library-desc$6586$Of4HK
                    (case-lambda
                      ((g$x$6588$Of4HK)
                       (list
                         (g$library-id$6480$Of4HK g$x$6588$Of4HK)
                         (g$library-name$6481$Of4HK g$x$6588$Of4HK))))))
          (for-each
            (case-lambda
              ((g$x$6587$Of4HK)
               (if (g$library-source-file-name$6493$Of4HK g$x$6587$Of4HK)
                 (g$serialize$6584$Of4HK
                   (g$library-source-file-name$6493$Of4HK g$x$6587$Of4HK)
                   (list
                     (g$library-id$6480$Of4HK g$x$6587$Of4HK)
                     (g$library-name$6481$Of4HK g$x$6587$Of4HK)
                     (g$library-version$6482$Of4HK g$x$6587$Of4HK)
                     (map g$library-desc$6586$Of4HK
                          (g$library-imp*$6483$Of4HK g$x$6587$Of4HK))
                     (map g$library-desc$6586$Of4HK
                          (g$library-vis*$6484$Of4HK g$x$6587$Of4HK))
                     (map g$library-desc$6586$Of4HK
                          (g$library-inv*$6485$Of4HK g$x$6587$Of4HK))
                     (g$library-subst$6486$Of4HK g$x$6587$Of4HK)
                     (g$library-env$6487$Of4HK g$x$6587$Of4HK)
                     (g$compile$6585$Of4HK
                       (g$library-visit-code$6490$Of4HK g$x$6587$Of4HK))
                     (g$compile$6585$Of4HK
                       (g$library-invoke-code$6491$Of4HK g$x$6587$Of4HK))
                     (g$library-visible?$6492$Of4HK g$x$6587$Of4HK)))
                 (void))))
            ((g$current-library-collection$6474$Of4HK)))))))
   (g$current-precompiled-library-loader$6516$Of4HK
     g$current-precompiled-library-loader$6720$Of4HK
     (g$make-parameter$6187$Of4HK
       (case-lambda ((g$filename$6589$Of4HK g$sk$6590$Of4HK) '#f))))
   (g$try-load-from-file$6517$Of4HK
     g$try-load-from-file$6721$Of4HK
     (case-lambda
       ((g$filename$6591$Of4HK)
        ((g$current-precompiled-library-loader$6516$Of4HK)
         g$filename$6591$Of4HK
         (case-lambda
           ((g$id$6592$Of4HK
              g$name$6593$Of4HK
              g$ver$6594$Of4HK
              g$imp*$6595$Of4HK
              g$vis*$6596$Of4HK
              g$inv*$6597$Of4HK
              g$exp-subst$6598$Of4HK
              g$exp-env$6599$Of4HK
              g$visit-proc$6600$Of4HK
              g$invoke-proc$6601$Of4HK
              g$visible?$6602$Of4HK)
            ((letrec ((g$f$6603$Of4HK
                        (case-lambda
                          ((g$deps$6604$Of4HK)
                           (if (null? g$deps$6604$Of4HK)
                             (begin
                               (g$install-library$6527$Of4HK
                                 g$id$6592$Of4HK
                                 g$name$6593$Of4HK
                                 g$ver$6594$Of4HK
                                 g$imp*$6595$Of4HK
                                 g$vis*$6596$Of4HK
                                 g$inv*$6597$Of4HK
                                 g$exp-subst$6598$Of4HK
                                 g$exp-env$6599$Of4HK
                                 g$visit-proc$6600$Of4HK
                                 g$invoke-proc$6601$Of4HK
                                 '#f
                                 '#f
                                 g$visible?$6602$Of4HK
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$6605$Of4HK)
                                 ((case-lambda
                                    ((g$label$6606$Of4HK g$dname$6607$Of4HK)
                                     ((case-lambda
                                        ((g$l$6608$Of4HK)
                                         (if (if (g$library?$6478$Of4HK
                                                   g$l$6608$Of4HK)
                                               (begin
                                                 '#f
                                                 (eq? g$label$6606$Of4HK
                                                      (g$library-id$6480$Of4HK
                                                        g$l$6608$Of4HK)))
                                               '#f)
                                           (g$f$6603$Of4HK
                                             (cdr g$deps$6604$Of4HK))
                                           (begin
                                             (g$fprintf$6102$Of4HK
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from \\
                           source.
"
                                               g$name$6593$Of4HK
                                               g$dname$6607$Of4HK
                                               g$filename$6591$Of4HK)
                                             '#f))))
                                      (g$find-library-by-name$6522$Of4HK
                                        g$dname$6607$Of4HK))))
                                  (car g$d$6605$Of4HK)
                                  (g$cadr$4878$Of4HK g$d$6605$Of4HK))))
                              (car g$deps$6604$Of4HK)))))))
               g$f$6603$Of4HK)
             (append g$imp*$6595$Of4HK g$vis*$6596$Of4HK g$inv*$6597$Of4HK)))
           (g$others$6609$Of4HK '#f))))))
   (g$library-loader$6518$Of4HK
     g$library-loader$6722$Of4HK
     (g$make-parameter$6187$Of4HK
       (case-lambda
         ((g$x$6610$Of4HK)
          ((case-lambda
             ((g$file-name$6611$Of4HK)
              (if (not g$file-name$6611$Of4HK)
                (assertion-violation '#f '"cannot file library" g$x$6610$Of4HK)
                ((case-lambda
                   ((g$t$6612$Of4HK)
                    (if g$t$6612$Of4HK
                      g$t$6612$Of4HK
                      (begin
                        '#f
                        ((g$current-library-expander$6519$Of4HK)
                         (g$read-library-source-file$6186$Of4HK
                           g$file-name$6611$Of4HK)
                         g$file-name$6611$Of4HK
                         (case-lambda
                           ((g$name$6613$Of4HK)
                            (if (equal? g$name$6613$Of4HK g$x$6610$Of4HK)
                              (void)
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6077$Of4HK)))
                                  (case-lambda
                                    ((g$p$6616$Of4HK g$e$6617$Of4HK)
                                     ((case-lambda
                                        ((g$e$6618$Of4HK g$p$6619$Of4HK)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$6619$Of4HK)
                                           (write g$x$6610$Of4HK g$p$6619$Of4HK)
                                           (display '" in file " g$p$6619$Of4HK)
                                           (display
                                             g$file-name$6611$Of4HK
                                             g$p$6619$Of4HK)
                                           (display '", found " g$p$6619$Of4HK)
                                           (write
                                             g$name$6613$Of4HK
                                             g$p$6619$Of4HK)
                                           (display '" instead" g$p$6619$Of4HK)
                                           (g$e$6618$Of4HK))))
                                      g$e$6617$Of4HK
                                      g$p$6616$Of4HK)))))))))))))
                 (g$try-load-from-file$6517$Of4HK g$file-name$6611$Of4HK)))))
           ((g$file-locator$6514$Of4HK) g$x$6610$Of4HK))))
       (case-lambda
         ((g$f$6620$Of4HK)
          (if (procedure? g$f$6620$Of4HK)
            g$f$6620$Of4HK
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$6620$Of4HK))))))
   (g$current-library-expander$6519$Of4HK
     g$current-library-expander$6723$Of4HK
     (g$make-parameter$6187$Of4HK
       (case-lambda
         ((g$x$6621$Of4HK)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$6622$Of4HK)
          (if (procedure? g$f$6622$Of4HK)
            g$f$6622$Of4HK
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$6622$Of4HK))))))
   (g$external-pending-libraries$6520$Of4HK
     g$external-pending-libraries$6724$Of4HK
     (g$make-parameter$6187$Of4HK '()))
   (g$find-external-library$6521$Of4HK
     g$find-external-library$6725$Of4HK
     (case-lambda
       ((g$name$6623$Of4HK)
        (begin
          (if (g$member$5343$Of4HK
                g$name$6623$Of4HK
                (g$external-pending-libraries$6520$Of4HK))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$6623$Of4HK)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$6626$Of4HK
                g$external-pending-libraries$6627$Of4HK)
              ((case-lambda
                 ((g$swap$6628$Of4HK)
                  (dynamic-wind
                    g$swap$6628$Of4HK
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6518$Of4HK) g$name$6623$Of4HK)
                         ((case-lambda
                            ((g$t$6629$Of4HK)
                             (if g$t$6629$Of4HK
                               g$t$6629$Of4HK
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$6623$Of4HK)))))
                          (g$find-library-by$6510$Of4HK
                            (case-lambda
                              ((g$x$6630$Of4HK)
                               (equal?
                                 (g$library-name$6481$Of4HK g$x$6630$Of4HK)
                                 g$name$6623$Of4HK))))))))
                    g$swap$6628$Of4HK)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$6631$Of4HK)
                      (begin
                        (g$external-pending-libraries$6626$Of4HK
                          g$external-pending-libraries$6627$Of4HK)
                        (set! g$external-pending-libraries$6627$Of4HK
                          g$t$6631$Of4HK))))
                   (g$external-pending-libraries$6626$Of4HK)))))))
           g$external-pending-libraries$6520$Of4HK
           (cons
             g$name$6623$Of4HK
             (g$external-pending-libraries$6520$Of4HK)))))))
   (g$find-library-by-name$6522$Of4HK
     g$find-library-by-name$6726$Of4HK
     (case-lambda
       ((g$name$6632$Of4HK)
        ((case-lambda
           ((g$t$6633$Of4HK)
            (if g$t$6633$Of4HK
              g$t$6633$Of4HK
              (begin
                '#f
                (g$find-external-library$6521$Of4HK g$name$6632$Of4HK)))))
         (g$find-library-by$6510$Of4HK
           (case-lambda
             ((g$x$6634$Of4HK)
              (equal?
                (g$library-name$6481$Of4HK g$x$6634$Of4HK)
                g$name$6632$Of4HK))))))))
   (g$library-exists?$6523$Of4HK
     g$library-exists?$6727$Of4HK
     (case-lambda
       ((g$name$6635$Of4HK)
        (if (g$find-library-by$6510$Of4HK
              (case-lambda
                ((g$x$6636$Of4HK)
                 (equal?
                   (g$library-name$6481$Of4HK g$x$6636$Of4HK)
                   g$name$6635$Of4HK))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6524$Of4HK
     g$find-library-by-spec/die$6728$Of4HK
     (case-lambda
       ((g$spec$6637$Of4HK)
        ((case-lambda
           ((g$id$6638$Of4HK)
            ((case-lambda
               ((g$t$6639$Of4HK)
                (if g$t$6639$Of4HK
                  g$t$6639$Of4HK
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$6637$Of4HK)))))
             (g$find-library-by$6510$Of4HK
               (case-lambda
                 ((g$x$6640$Of4HK)
                  (eq? g$id$6638$Of4HK
                       (g$library-id$6480$Of4HK g$x$6640$Of4HK))))))))
         (car g$spec$6637$Of4HK)))))
   (g$label->binding-table$6525$Of4HK
     g$label->binding-table$6729$Of4HK
     (g$make-eq-hashtable$5140$Of4HK))
   (g$install-library-record$6526$Of4HK
     g$install-library-record$6730$Of4HK
     (case-lambda
       ((g$lib$6641$Of4HK)
        (begin
          ((case-lambda
             ((g$exp-env$6642$Of4HK)
              (for-each
                (case-lambda
                  ((g$x$6643$Of4HK)
                   ((case-lambda
                      ((g$label$6644$Of4HK g$binding$6645$Of4HK)
                       ((case-lambda
                          ((g$binding$6646$Of4HK)
                           (g$hashtable-set!$5144$Of4HK
                             g$label->binding-table$6525$Of4HK
                             g$label$6644$Of4HK
                             g$binding$6646$Of4HK)))
                        ((case-lambda
                           ((g$t$6647$Of4HK)
                            (if (eqv? g$t$6647$Of4HK 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$6641$Of4HK
                                  (cdr g$binding$6645$Of4HK)))
                              (if (eqv? g$t$6647$Of4HK 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$6641$Of4HK
                                    (cdr g$binding$6645$Of4HK)))
                                (if (eqv? g$t$6647$Of4HK 'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$6641$Of4HK
                                      (cdr g$binding$6645$Of4HK)))
                                  g$binding$6645$Of4HK)))))
                         (car g$binding$6645$Of4HK)))))
                    (car g$x$6643$Of4HK)
                    (cdr g$x$6643$Of4HK))))
                g$exp-env$6642$Of4HK)))
           (g$library-env$6487$Of4HK g$lib$6641$Of4HK))
          ((g$current-library-collection$6474$Of4HK) g$lib$6641$Of4HK)))))
   (g$install-library$6527$Of4HK
     g$install-library$6731$Of4HK
     (case-lambda
       ((g$id$6648$Of4HK
          g$name$6649$Of4HK
          g$ver$6650$Of4HK
          g$imp*$6651$Of4HK
          g$vis*$6652$Of4HK
          g$inv*$6653$Of4HK
          g$exp-subst$6654$Of4HK
          g$exp-env$6655$Of4HK
          g$visit-proc$6656$Of4HK
          g$invoke-proc$6657$Of4HK
          g$visit-code$6658$Of4HK
          g$invoke-code$6659$Of4HK
          g$visible?$6660$Of4HK
          g$source-file-name$6661$Of4HK)
        ((case-lambda
           ((g$imp-lib*$6662$Of4HK g$vis-lib*$6663$Of4HK g$inv-lib*$6664$Of4HK)
            (begin
              (if (if (symbol? g$id$6648$Of4HK)
                    (if (list? g$name$6649$Of4HK)
                      (begin '#f (list? g$ver$6650$Of4HK))
                      '#f)
                    '#f)
                (void)
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$6648$Of4HK
                  g$name$6649$Of4HK
                  g$ver$6650$Of4HK))
              (if (g$library-exists?$6523$Of4HK g$name$6649$Of4HK)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$6649$Of4HK)
                (void))
              ((case-lambda
                 ((g$lib$6665$Of4HK)
                  (g$install-library-record$6526$Of4HK g$lib$6665$Of4HK)))
               (g$make-library$6479$Of4HK
                 g$id$6648$Of4HK
                 g$name$6649$Of4HK
                 g$ver$6650$Of4HK
                 g$imp-lib*$6662$Of4HK
                 g$vis-lib*$6663$Of4HK
                 g$inv-lib*$6664$Of4HK
                 g$exp-subst$6654$Of4HK
                 g$exp-env$6655$Of4HK
                 g$visit-proc$6656$Of4HK
                 g$invoke-proc$6657$Of4HK
                 g$visit-code$6658$Of4HK
                 g$invoke-code$6659$Of4HK
                 g$visible?$6660$Of4HK
                 g$source-file-name$6661$Of4HK)))))
         (map g$find-library-by-spec/die$6524$Of4HK g$imp*$6651$Of4HK)
         (map g$find-library-by-spec/die$6524$Of4HK g$vis*$6652$Of4HK)
         (map g$find-library-by-spec/die$6524$Of4HK g$inv*$6653$Of4HK)))))
   (g$imported-label->binding$6528$Of4HK
     g$imported-label->binding$6732$Of4HK
     (case-lambda
       ((g$lab$6666$Of4HK)
        (g$hashtable-ref$5143$Of4HK
          g$label->binding-table$6525$Of4HK
          g$lab$6666$Of4HK
          '#f))))
   (g$invoke-library$6529$Of4HK
     g$invoke-library$6733$Of4HK
     (case-lambda
       ((g$lib$6667$Of4HK)
        ((case-lambda
           ((g$invoke$6668$Of4HK)
            (if (procedure? g$invoke$6668$Of4HK)
              (begin
                (g$set-library-invoke-state!$6503$Of4HK
                  g$lib$6667$Of4HK
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$6667$Of4HK))))
                (for-each
                  g$invoke-library$6529$Of4HK
                  (g$library-inv*$6485$Of4HK g$lib$6667$Of4HK))
                (g$set-library-invoke-state!$6503$Of4HK
                  g$lib$6667$Of4HK
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$6667$Of4HK))))
                (g$invoke$6668$Of4HK)
                (g$set-library-invoke-state!$6503$Of4HK g$lib$6667$Of4HK '#t))
              (void))))
         (g$library-invoke-state$6489$Of4HK g$lib$6667$Of4HK)))))
   (g$visit-library$6530$Of4HK
     g$visit-library$6734$Of4HK
     (case-lambda
       ((g$lib$6669$Of4HK)
        ((case-lambda
           ((g$visit$6670$Of4HK)
            (if (procedure? g$visit$6670$Of4HK)
              (begin
                (g$set-library-visit-state!$6502$Of4HK
                  g$lib$6669$Of4HK
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$6669$Of4HK))))
                (for-each
                  g$invoke-library$6529$Of4HK
                  (g$library-vis*$6484$Of4HK g$lib$6669$Of4HK))
                (g$set-library-visit-state!$6502$Of4HK
                  g$lib$6669$Of4HK
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$6669$Of4HK))))
                (g$visit$6670$Of4HK)
                (g$set-library-visit-state!$6502$Of4HK g$lib$6669$Of4HK '#t))
              (void))))
         (g$library-visit-state$6488$Of4HK g$lib$6669$Of4HK)))))
   (g$invoke-library-by-spec$6531$Of4HK
     g$invoke-library-by-spec$6735$Of4HK
     (case-lambda
       ((g$spec$6671$Of4HK)
        (g$invoke-library$6529$Of4HK
          (g$find-library-by-spec/die$6524$Of4HK g$spec$6671$Of4HK)))))
   (g$installed-libraries$6532$Of4HK
     g$installed-libraries$6736$Of4HK
     (case-lambda
       ((g$all?$6672$Of4HK)
        ((letrec ((g$f$6673$Of4HK
                    (case-lambda
                      ((g$ls$6674$Of4HK)
                       (if (null? g$ls$6674$Of4HK)
                         '()
                         (if ((case-lambda
                                ((g$t$6675$Of4HK)
                                 (if g$t$6675$Of4HK
                                   g$t$6675$Of4HK
                                   (begin
                                     '#f
                                     (g$library-visible?$6492$Of4HK
                                       (car g$ls$6674$Of4HK))))))
                              g$all?$6672$Of4HK)
                           (cons
                             (car g$ls$6674$Of4HK)
                             (g$f$6673$Of4HK (cdr g$ls$6674$Of4HK)))
                           (g$f$6673$Of4HK (cdr g$ls$6674$Of4HK))))))))
           g$f$6673$Of4HK)
         ((g$current-library-collection$6474$Of4HK))))
       (() (g$installed-libraries$6532$Of4HK '#f))))
   (g$library-spec$6533$Of4HK
     g$library-spec$6737$Of4HK
     (case-lambda
       ((g$x$6676$Of4HK)
        (begin
          (if (g$library?$6478$Of4HK g$x$6676$Of4HK)
            (void)
            (assertion-violation 'library-spec '"not a library" g$x$6676$Of4HK))
          (list
            (g$library-id$6480$Of4HK g$x$6676$Of4HK)
            (g$library-name$6481$Of4HK g$x$6676$Of4HK)
            (g$library-version$6482$Of4HK g$x$6676$Of4HK)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$6738$Of4HK
     g$build-global-define$6848$Of4HK
     (case-lambda ((g$x$6819$Of4HK) (g$build-void$6815$Of4HK))))
   (g$build-lambda$6787$Of4HK
     g$build-lambda$6849$Of4HK
     (case-lambda
       ((g$ae$6820$Of4HK g$vars$6821$Of4HK g$exp$6822$Of4HK)
        (list 'case-lambda (list g$vars$6821$Of4HK g$exp$6822$Of4HK)))))
   (g$build-case-lambda$6788$Of4HK
     g$build-case-lambda$6850$Of4HK
     (case-lambda
       ((g$ae$6823$Of4HK g$vars*$6824$Of4HK g$exp*$6825$Of4HK)
        (cons 'case-lambda (map list g$vars*$6824$Of4HK g$exp*$6825$Of4HK)))))
   (g$build-let$6789$Of4HK
     g$build-let$6851$Of4HK
     (case-lambda
       ((g$ae$6826$Of4HK g$lhs*$6827$Of4HK g$rhs*$6828$Of4HK g$body$6829$Of4HK)
        (cons
          (g$build-lambda$6787$Of4HK
            g$ae$6826$Of4HK
            g$lhs*$6827$Of4HK
            g$body$6829$Of4HK)
          g$rhs*$6828$Of4HK))))
   (g$build-sequence$6814$Of4HK
     g$build-sequence$6852$Of4HK
     (case-lambda
       ((g$ae$6830$Of4HK g$exps$6831$Of4HK)
        ((letrec ((g$loop$6832$Of4HK
                    (case-lambda
                      ((g$exps$6833$Of4HK)
                       (if (null? (cdr g$exps$6833$Of4HK))
                         (car g$exps$6833$Of4HK)
                         (if (equal?
                               (car g$exps$6833$Of4HK)
                               (g$build-void$6815$Of4HK))
                           (g$loop$6832$Of4HK (cdr g$exps$6833$Of4HK))
                           (cons 'begin g$exps$6833$Of4HK)))))))
           g$loop$6832$Of4HK)
         g$exps$6831$Of4HK))))
   (g$build-void$6815$Of4HK
     g$build-void$6853$Of4HK
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$6816$Of4HK
     g$build-letrec$6854$Of4HK
     (case-lambda
       ((g$ae$6834$Of4HK
          g$vars$6835$Of4HK
          g$val-exps$6836$Of4HK
          g$body-exp$6837$Of4HK)
        (if (null? g$vars$6835$Of4HK)
          g$body-exp$6837$Of4HK
          (list
            'letrec
            (map list g$vars$6835$Of4HK g$val-exps$6836$Of4HK)
            g$body-exp$6837$Of4HK)))))
   (g$build-letrec*$6817$Of4HK
     g$build-letrec*$6855$Of4HK
     (case-lambda
       ((g$ae$6838$Of4HK
          g$vars$6839$Of4HK
          g$val-exps$6840$Of4HK
          g$body-exp$6841$Of4HK)
        (if (null? g$vars$6839$Of4HK)
          g$body-exp$6841$Of4HK
          (list
            'letrec*
            (map list g$vars$6839$Of4HK g$val-exps$6840$Of4HK)
            g$body-exp$6841$Of4HK)))))
   (g$build-library-letrec*$6818$Of4HK
     g$build-library-letrec*$6856$Of4HK
     (case-lambda
       ((g$ae$6842$Of4HK
          g$name$6843$Of4HK
          g$vars$6844$Of4HK
          g$locs$6845$Of4HK
          g$val-exps$6846$Of4HK
          g$body-exp$6847$Of4HK)
        (list
          'library-letrec*
          g$name$6843$Of4HK
          (map list g$vars$6844$Of4HK g$locs$6845$Of4HK g$val-exps$6846$Of4HK)
          g$body-exp$6847$Of4HK)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$6857$Of4HK
     g$set-cons$10482$Of4HK
     (case-lambda
       ((g$x$7310$Of4HK g$ls$7311$Of4HK)
        (if (memq g$x$7310$Of4HK g$ls$7311$Of4HK)
          g$ls$7311$Of4HK
          (cons g$x$7310$Of4HK g$ls$7311$Of4HK)))))
   (g$set-union$6858$Of4HK
     g$set-union$10483$Of4HK
     (case-lambda
       ((g$ls1$7312$Of4HK g$ls2$7313$Of4HK)
        (if (null? g$ls1$7312$Of4HK)
          g$ls2$7313$Of4HK
          (if (memq (car g$ls1$7312$Of4HK) g$ls2$7313$Of4HK)
            (g$set-union$6858$Of4HK (cdr g$ls1$7312$Of4HK) g$ls2$7313$Of4HK)
            (cons
              (car g$ls1$7312$Of4HK)
              (g$set-union$6858$Of4HK
                (cdr g$ls1$7312$Of4HK)
                g$ls2$7313$Of4HK)))))))
   (g$top-mark*$6860$Of4HK g$top-mark*$10484$Of4HK '(top))
   (g$top-marked?$6861$Of4HK
     g$top-marked?$10485$Of4HK
     (case-lambda ((g$m*$7314$Of4HK) (memq 'top g$m*$7314$Of4HK))))
   (g$gen-lexical$6862$Of4HK
     g$gen-lexical$10486$Of4HK
     (case-lambda
       ((g$sym$7315$Of4HK)
        (if (symbol? g$sym$7315$Of4HK)
          (gensym g$sym$7315$Of4HK)
          (if (g$stx?$6890$Of4HK g$sym$7315$Of4HK)
            (g$gen-lexical$6862$Of4HK (g$id->sym$6919$Of4HK g$sym$7315$Of4HK))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7315$Of4HK))))))
   (g$gen-global$6863$Of4HK
     g$gen-global$10487$Of4HK
     (case-lambda ((g$x$7316$Of4HK) (g$gen-lexical$6862$Of4HK g$x$7316$Of4HK))))
   (g$gen-label$6864$Of4HK
     g$gen-label$10488$Of4HK
     (case-lambda ((g$_$7317$Of4HK) (gensym))))
   (g$gen-top-level-label$6865$Of4HK
     g$gen-top-level-label$10489$Of4HK
     (case-lambda
       ((g$id$7318$Of4HK g$rib$7319$Of4HK)
        (letrec* ((g$find$7320$Of4HK
                    (case-lambda
                      ((g$sym$7326$Of4HK
                         g$mark*$7327$Of4HK
                         g$sym*$7328$Of4HK
                         g$mark**$7329$Of4HK
                         g$label*$7330$Of4HK)
                       (if (pair? g$sym*$7328$Of4HK)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7326$Of4HK
                                        (car g$sym*$7328$Of4HK))
                                 (begin
                                   '#f
                                   (g$same-marks?$6920$Of4HK
                                     g$mark*$7327$Of4HK
                                     (car g$mark**$7329$Of4HK)))
                                 '#f)
                             (car g$label*$7330$Of4HK)
                             (g$find$7320$Of4HK
                               g$sym$7326$Of4HK
                               g$mark*$7327$Of4HK
                               (cdr g$sym*$7328$Of4HK)
                               (cdr g$mark**$7329$Of4HK)
                               (cdr g$label*$7330$Of4HK))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7321$Of4HK g$mark*$7322$Of4HK)
              ((case-lambda
                 ((g$sym*$7323$Of4HK)
                  ((case-lambda
                     ((g$t$7324$Of4HK)
                      (if g$t$7324$Of4HK
                        ((case-lambda
                           ((g$label$7325$Of4HK)
                            (if (g$imported-label->binding$6732$Of4HK
                                  g$label$7325$Of4HK)
                              (gensym)
                              g$label$7325$Of4HK)))
                         g$t$7324$Of4HK)
                        (gensym))))
                   (if (memq
                         g$sym$7321$Of4HK
                         (g$rib-sym*$6873$Of4HK g$rib$7319$Of4HK))
                     (begin
                       '#f
                       (g$find$7320$Of4HK
                         g$sym$7321$Of4HK
                         g$mark*$7322$Of4HK
                         g$sym*$7323$Of4HK
                         (g$rib-mark**$6874$Of4HK g$rib$7319$Of4HK)
                         (g$rib-label*$6875$Of4HK g$rib$7319$Of4HK)))
                     '#f))))
               (g$rib-sym*$6873$Of4HK g$rib$7319$Of4HK))))
           (g$id->sym$6919$Of4HK g$id$7318$Of4HK)
           (g$stx-mark*$6893$Of4HK g$id$7318$Of4HK))))))
   (g$gen-define-label+loc$6866$Of4HK
     g$gen-define-label+loc$10490$Of4HK
     (case-lambda
       ((g$id$7331$Of4HK g$rib$7332$Of4HK)
        ((case-lambda
           ((g$t$7333$Of4HK)
            (if g$t$7333$Of4HK
              ((case-lambda
                 ((g$env$7334$Of4HK)
                  ((case-lambda
                     ((g$label$7335$Of4HK g$locs$7336$Of4HK)
                      (values
                        g$label$7335$Of4HK
                        ((case-lambda
                           ((g$t$7337$Of4HK)
                            (if g$t$7337$Of4HK
                              (cdr g$t$7337$Of4HK)
                              ((case-lambda
                                 ((g$loc$7338$Of4HK)
                                  (begin
                                    (g$set-interaction-env-locs!$7279$Of4HK
                                      g$env$7334$Of4HK
                                      (cons
                                        (cons
                                          g$label$7335$Of4HK
                                          g$loc$7338$Of4HK)
                                        g$locs$7336$Of4HK))
                                    g$loc$7338$Of4HK)))
                               (g$gen-lexical$6862$Of4HK g$id$7331$Of4HK)))))
                         (assq g$label$7335$Of4HK g$locs$7336$Of4HK)))))
                   (g$gen-top-level-label$6865$Of4HK
                     g$id$7331$Of4HK
                     g$rib$7332$Of4HK)
                   (g$interaction-env-locs$7276$Of4HK g$env$7334$Of4HK))))
               g$t$7333$Of4HK)
              (values (gensym) (g$gen-lexical$6862$Of4HK g$id$7331$Of4HK)))))
         (g$top-level-context$7309$Of4HK)))))
   (g$gen-define-label$6867$Of4HK
     g$gen-define-label$10491$Of4HK
     (case-lambda
       ((g$id$7339$Of4HK g$rib$7340$Of4HK)
        (if (g$top-level-context$7309$Of4HK)
          (g$gen-top-level-label$6865$Of4HK g$id$7339$Of4HK g$rib$7340$Of4HK)
          (gensym)))))
   (g$7708$6868$Of4HK
     g$7708$10492$Of4HK
     (make-record-type-descriptor
       'rib
       '#f
       'g$7711$Of4HK
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$7710$6869$Of4HK g$7710$10493$Of4HK '#f)
   (g$7709$6870$Of4HK
     g$7709$10494$Of4HK
     (make-record-constructor-descriptor
       g$7708$6868$Of4HK
       '#f
       g$7710$6869$Of4HK))
   (g$rib?$6871$Of4HK g$rib?$10495$Of4HK (record-predicate g$7708$6868$Of4HK))
   (g$make-rib$6872$Of4HK
     g$make-rib$10496$Of4HK
     (record-constructor g$7709$6870$Of4HK))
   (g$rib-sym*$6873$Of4HK
     g$rib-sym*$10497$Of4HK
     (record-accessor g$7708$6868$Of4HK '0))
   (g$rib-mark**$6874$Of4HK
     g$rib-mark**$10498$Of4HK
     (record-accessor g$7708$6868$Of4HK '1))
   (g$rib-label*$6875$Of4HK
     g$rib-label*$10499$Of4HK
     (record-accessor g$7708$6868$Of4HK '2))
   (g$rib-sealed/freq$6876$Of4HK
     g$rib-sealed/freq$10500$Of4HK
     (record-accessor g$7708$6868$Of4HK '3))
   (g$set-rib-sym*!$6877$Of4HK
     g$set-rib-sym*!$10501$Of4HK
     (record-mutator g$7708$6868$Of4HK '0))
   (g$set-rib-mark**!$6878$Of4HK
     g$set-rib-mark**!$10502$Of4HK
     (record-mutator g$7708$6868$Of4HK '1))
   (g$set-rib-label*!$6879$Of4HK
     g$set-rib-label*!$10503$Of4HK
     (record-mutator g$7708$6868$Of4HK '2))
   (g$set-rib-sealed/freq!$6880$Of4HK
     g$set-rib-sealed/freq!$10504$Of4HK
     (record-mutator g$7708$6868$Of4HK '3))
   (g$make-empty-rib$6881$Of4HK
     g$make-empty-rib$10505$Of4HK
     (case-lambda (() (g$make-rib$6872$Of4HK '() '() '() '#f))))
   (g$extend-rib!$6882$Of4HK
     g$extend-rib!$10506$Of4HK
     (case-lambda
       ((g$rib$7341$Of4HK g$id$7342$Of4HK g$label$7343$Of4HK)
        (letrec* ((g$find$7344$Of4HK
                    (case-lambda
                      ((g$sym$7350$Of4HK
                         g$mark*$7351$Of4HK
                         g$sym*$7352$Of4HK
                         g$mark**$7353$Of4HK
                         g$label*$7354$Of4HK)
                       (if (pair? g$sym*$7352$Of4HK)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7350$Of4HK
                                        (car g$sym*$7352$Of4HK))
                                 (begin
                                   '#f
                                   (g$same-marks?$6920$Of4HK
                                     g$mark*$7351$Of4HK
                                     (car g$mark**$7353$Of4HK)))
                                 '#f)
                             g$label*$7354$Of4HK
                             (g$find$7344$Of4HK
                               g$sym$7350$Of4HK
                               g$mark*$7351$Of4HK
                               (cdr g$sym*$7352$Of4HK)
                               (cdr g$mark**$7353$Of4HK)
                               (cdr g$label*$7354$Of4HK))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$6876$Of4HK g$rib$7341$Of4HK)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7341$Of4HK)
              (void))
            ((case-lambda
               ((g$sym$7345$Of4HK g$mark*$7346$Of4HK)
                ((case-lambda
                   ((g$sym*$7347$Of4HK)
                    ((case-lambda
                       ((g$t$7348$Of4HK)
                        (if g$t$7348$Of4HK
                          ((case-lambda
                             ((g$p$7349$Of4HK)
                              (if (eq? g$label$7343$Of4HK (car g$p$7349$Of4HK))
                                (void)
                                (if (g$top-level-context$7309$Of4HK)
                                  (set-car! g$p$7349$Of4HK g$label$7343$Of4HK)
                                  (g$syntax-violation$7302$Of4HK
                                    '#f
                                    '"cannot redefine"
                                    g$id$7342$Of4HK)))))
                           g$t$7348$Of4HK)
                          (begin
                            (g$set-rib-sym*!$6877$Of4HK
                              g$rib$7341$Of4HK
                              (cons g$sym$7345$Of4HK g$sym*$7347$Of4HK))
                            (g$set-rib-mark**!$6878$Of4HK
                              g$rib$7341$Of4HK
                              (cons
                                g$mark*$7346$Of4HK
                                (g$rib-mark**$6874$Of4HK g$rib$7341$Of4HK)))
                            (g$set-rib-label*!$6879$Of4HK
                              g$rib$7341$Of4HK
                              (cons
                                g$label$7343$Of4HK
                                (g$rib-label*$6875$Of4HK g$rib$7341$Of4HK)))))))
                     (if (memq
                           g$sym$7345$Of4HK
                           (g$rib-sym*$6873$Of4HK g$rib$7341$Of4HK))
                       (begin
                         '#f
                         (g$find$7344$Of4HK
                           g$sym$7345$Of4HK
                           g$mark*$7346$Of4HK
                           g$sym*$7347$Of4HK
                           (g$rib-mark**$6874$Of4HK g$rib$7341$Of4HK)
                           (g$rib-label*$6875$Of4HK g$rib$7341$Of4HK)))
                       '#f))))
                 (g$rib-sym*$6873$Of4HK g$rib$7341$Of4HK))))
             (g$id->sym$6919$Of4HK g$id$7342$Of4HK)
             (g$stx-mark*$6893$Of4HK g$id$7342$Of4HK)))))))
   (g$make-rib-map$6883$Of4HK
     g$make-rib-map$10507$Of4HK
     (case-lambda
       ((g$sym*$7355$Of4HK)
        ((case-lambda
           ((g$ht$7356$Of4HK)
            ((letrec ((g$f$7357$Of4HK
                        (case-lambda
                          ((g$i$7358$Of4HK g$sym*$7359$Of4HK)
                           (if (null? g$sym*$7359$Of4HK)
                             g$ht$7356$Of4HK
                             (begin
                               (g$hashtable-update!$5147$Of4HK
                                 g$ht$7356$Of4HK
                                 (car g$sym*$7359$Of4HK)
                                 (case-lambda
                                   ((g$x$7360$Of4HK)
                                    (cons g$i$7358$Of4HK g$x$7360$Of4HK)))
                                 '())
                               (g$f$7357$Of4HK
                                 (+ g$i$7358$Of4HK '1)
                                 (cdr g$sym*$7359$Of4HK))))))))
               g$f$7357$Of4HK)
             '0
             g$sym*$7355$Of4HK)))
         (g$make-eq-hashtable$5140$Of4HK)))))
   (g$seal-rib!$6884$Of4HK
     g$seal-rib!$10508$Of4HK
     (case-lambda
       ((g$rib$7361$Of4HK)
        ((case-lambda
           ((g$sym*$7362$Of4HK)
            (if (null? g$sym*$7362$Of4HK)
              (void)
              (begin
                (g$set-rib-sym*!$6877$Of4HK
                  g$rib$7361$Of4HK
                  (list->vector g$sym*$7362$Of4HK))
                (g$set-rib-mark**!$6878$Of4HK
                  g$rib$7361$Of4HK
                  (list->vector (g$rib-mark**$6874$Of4HK g$rib$7361$Of4HK)))
                (g$set-rib-label*!$6879$Of4HK
                  g$rib$7361$Of4HK
                  (list->vector (g$rib-label*$6875$Of4HK g$rib$7361$Of4HK)))
                (g$set-rib-sealed/freq!$6880$Of4HK
                  g$rib$7361$Of4HK
                  (g$make-rib-map$6883$Of4HK g$sym*$7362$Of4HK))))))
         (g$rib-sym*$6873$Of4HK g$rib$7361$Of4HK)))))
   (g$unseal-rib!$6885$Of4HK
     g$unseal-rib!$10509$Of4HK
     (case-lambda
       ((g$rib$7363$Of4HK)
        (if (g$rib-sealed/freq$6876$Of4HK g$rib$7363$Of4HK)
          (begin
            (g$set-rib-sealed/freq!$6880$Of4HK g$rib$7363$Of4HK '#f)
            (g$set-rib-sym*!$6877$Of4HK
              g$rib$7363$Of4HK
              (vector->list (g$rib-sym*$6873$Of4HK g$rib$7363$Of4HK)))
            (g$set-rib-mark**!$6878$Of4HK
              g$rib$7363$Of4HK
              (vector->list (g$rib-mark**$6874$Of4HK g$rib$7363$Of4HK)))
            (g$set-rib-label*!$6879$Of4HK
              g$rib$7363$Of4HK
              (vector->list (g$rib-label*$6875$Of4HK g$rib$7363$Of4HK))))
          (void)))))
   (g$make-full-rib$6886$Of4HK
     g$make-full-rib$10510$Of4HK
     (case-lambda
       ((g$id*$7364$Of4HK g$label*$7365$Of4HK)
        ((case-lambda
           ((g$r$7366$Of4HK)
            (begin (g$seal-rib!$6884$Of4HK g$r$7366$Of4HK) g$r$7366$Of4HK)))
         (g$make-rib$6872$Of4HK
           (map g$id->sym$6919$Of4HK g$id*$7364$Of4HK)
           (map g$stx-mark*$6893$Of4HK g$id*$7364$Of4HK)
           g$label*$7365$Of4HK
           '#f)))))
   (g$7734$6887$Of4HK
     g$7734$10511$Of4HK
     (make-record-type-descriptor
       'stx
       '#f
       'g$7737$Of4HK
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$7736$6888$Of4HK g$7736$10512$Of4HK '#f)
   (g$7735$6889$Of4HK
     g$7735$10513$Of4HK
     (make-record-constructor-descriptor
       g$7734$6887$Of4HK
       '#f
       g$7736$6888$Of4HK))
   (g$stx?$6890$Of4HK g$stx?$10514$Of4HK (record-predicate g$7734$6887$Of4HK))
   (g$make-stx$6891$Of4HK
     g$make-stx$10515$Of4HK
     (record-constructor g$7735$6889$Of4HK))
   (g$stx-expr$6892$Of4HK
     g$stx-expr$10516$Of4HK
     (record-accessor g$7734$6887$Of4HK '0))
   (g$stx-mark*$6893$Of4HK
     g$stx-mark*$10517$Of4HK
     (record-accessor g$7734$6887$Of4HK '1))
   (g$stx-subst*$6894$Of4HK
     g$stx-subst*$10518$Of4HK
     (record-accessor g$7734$6887$Of4HK '2))
   (g$stx-ae*$6895$Of4HK
     g$stx-ae*$10519$Of4HK
     (record-accessor g$7734$6887$Of4HK '3))
   (g$set-stx-expr!$6896$Of4HK
     g$set-stx-expr!$10520$Of4HK
     (record-mutator g$7734$6887$Of4HK '0))
   (g$set-stx-mark*!$6897$Of4HK
     g$set-stx-mark*!$10521$Of4HK
     (record-mutator g$7734$6887$Of4HK '1))
   (g$set-stx-subst*!$6898$Of4HK
     g$set-stx-subst*!$10522$Of4HK
     (record-mutator g$7734$6887$Of4HK '2))
   (g$set-stx-ae*!$6899$Of4HK
     g$set-stx-ae*!$10523$Of4HK
     (record-mutator g$7734$6887$Of4HK '3))
   (g$rp$6900$Of4HK
     g$rp$10524$Of4HK
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7367$Of4HK g$p$7368$Of4HK)
          (begin
            (display '"#<syntax " g$p$7368$Of4HK)
            (write (g$stx->datum$6929$Of4HK g$x$7367$Of4HK) g$p$7368$Of4HK)
            ((case-lambda
               ((g$expr$7369$Of4HK)
                (if (annotation? g$expr$7369$Of4HK)
                  ((case-lambda
                     ((g$src$7370$Of4HK)
                      (if (pair? g$src$7370$Of4HK)
                        (begin
                          (display '" [" g$p$7368$Of4HK)
                          (display (cdr g$src$7370$Of4HK) g$p$7368$Of4HK)
                          (display '" of " g$p$7368$Of4HK)
                          (display (car g$src$7370$Of4HK) g$p$7368$Of4HK)
                          (display '"]" g$p$7368$Of4HK))
                        (void))))
                   (annotation-source g$expr$7369$Of4HK))
                  (void))))
             (g$stx-expr$6892$Of4HK g$x$7367$Of4HK))
            (display '">" g$p$7368$Of4HK))))))
   (g$datum->stx$6901$Of4HK
     g$datum->stx$10525$Of4HK
     (case-lambda
       ((g$id$7371$Of4HK g$datum$7372$Of4HK)
        (g$make-stx$6891$Of4HK
          g$datum$7372$Of4HK
          (g$stx-mark*$6893$Of4HK g$id$7371$Of4HK)
          (g$stx-subst*$6894$Of4HK g$id$7371$Of4HK)
          (g$stx-ae*$6895$Of4HK g$id$7371$Of4HK)))))
   (g$gen-mark$6902$Of4HK
     g$gen-mark$10526$Of4HK
     (case-lambda (() (string '#\m))))
   (g$anti-mark$6903$Of4HK g$anti-mark$10527$Of4HK '#f)
   (g$anti-mark?$6904$Of4HK g$anti-mark?$10528$Of4HK not)
   (g$join-wraps$6905$Of4HK
     g$join-wraps$10529$Of4HK
     (case-lambda
       ((g$m1*$7373$Of4HK g$s1*$7374$Of4HK g$ae1*$7375$Of4HK g$e$7376$Of4HK)
        (letrec* ((g$cancel$7377$Of4HK
                    (case-lambda
                      ((g$ls1$7381$Of4HK g$ls2$7382$Of4HK)
                       ((letrec ((g$f$7383$Of4HK
                                   (case-lambda
                                     ((g$x$7384$Of4HK g$ls1$7385$Of4HK)
                                      (if (null? g$ls1$7385$Of4HK)
                                        (cdr g$ls2$7382$Of4HK)
                                        (cons
                                          g$x$7384$Of4HK
                                          (g$f$7383$Of4HK
                                            (car g$ls1$7385$Of4HK)
                                            (cdr g$ls1$7385$Of4HK))))))))
                          g$f$7383$Of4HK)
                        (car g$ls1$7381$Of4HK)
                        (cdr g$ls1$7381$Of4HK))))))
          ((case-lambda
             ((g$m2*$7378$Of4HK g$s2*$7379$Of4HK g$ae2*$7380$Of4HK)
              (if (if (not (null? g$m1*$7373$Of4HK))
                    (if (not (null? g$m2*$7378$Of4HK))
                      (begin
                        '#f
                        (g$anti-mark?$6904$Of4HK (car g$m2*$7378$Of4HK)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7377$Of4HK g$m1*$7373$Of4HK g$m2*$7378$Of4HK)
                  (g$cancel$7377$Of4HK g$s1*$7374$Of4HK g$s2*$7379$Of4HK)
                  (g$cancel$7377$Of4HK g$ae1*$7375$Of4HK g$ae2*$7380$Of4HK))
                (values
                  (append g$m1*$7373$Of4HK g$m2*$7378$Of4HK)
                  (append g$s1*$7374$Of4HK g$s2*$7379$Of4HK)
                  (append g$ae1*$7375$Of4HK g$ae2*$7380$Of4HK)))))
           (g$stx-mark*$6893$Of4HK g$e$7376$Of4HK)
           (g$stx-subst*$6894$Of4HK g$e$7376$Of4HK)
           (g$stx-ae*$6895$Of4HK g$e$7376$Of4HK))))))
   (g$mkstx$6906$Of4HK
     g$mkstx$10530$Of4HK
     (case-lambda
       ((g$e$7386$Of4HK g$m*$7387$Of4HK g$s*$7388$Of4HK g$ae*$7389$Of4HK)
        (if (g$stx?$6890$Of4HK g$e$7386$Of4HK)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$6905$Of4HK
                 g$m*$7387$Of4HK
                 g$s*$7388$Of4HK
                 g$ae*$7389$Of4HK
                 g$e$7386$Of4HK)))
            (case-lambda
              ((g$m*$7393$Of4HK g$s*$7394$Of4HK g$ae*$7395$Of4HK)
               ((case-lambda
                  ((g$ae*$7396$Of4HK g$s*$7397$Of4HK g$m*$7398$Of4HK)
                   (g$make-stx$6891$Of4HK
                     (g$stx-expr$6892$Of4HK g$e$7386$Of4HK)
                     g$m*$7398$Of4HK
                     g$s*$7397$Of4HK
                     g$ae*$7396$Of4HK)))
                g$ae*$7395$Of4HK
                g$s*$7394$Of4HK
                g$m*$7393$Of4HK))))
          (g$make-stx$6891$Of4HK
            g$e$7386$Of4HK
            g$m*$7387$Of4HK
            g$s*$7388$Of4HK
            g$ae*$7389$Of4HK)))))
   (g$add-mark$6907$Of4HK
     g$add-mark$10531$Of4HK
     (case-lambda
       ((g$m$7399$Of4HK g$e$7400$Of4HK g$ae$7401$Of4HK)
        (g$mkstx$6906$Of4HK
          g$e$7400$Of4HK
          (list g$m$7399$Of4HK)
          '(shift)
          (list g$ae$7401$Of4HK)))))
   (g$add-subst$6908$Of4HK
     g$add-subst$10532$Of4HK
     (case-lambda
       ((g$subst$7402$Of4HK g$e$7403$Of4HK)
        (g$mkstx$6906$Of4HK g$e$7403$Of4HK '() (list g$subst$7402$Of4HK) '()))))
   (g$syntax-kind?$6909$Of4HK
     g$syntax-kind?$10533$Of4HK
     (case-lambda
       ((g$x$7404$Of4HK g$p?$7405$Of4HK)
        (if (g$stx?$6890$Of4HK g$x$7404$Of4HK)
          (g$syntax-kind?$6909$Of4HK
            (g$stx-expr$6892$Of4HK g$x$7404$Of4HK)
            g$p?$7405$Of4HK)
          (if (annotation? g$x$7404$Of4HK)
            (g$syntax-kind?$6909$Of4HK
              (annotation-expression g$x$7404$Of4HK)
              g$p?$7405$Of4HK)
            (g$p?$7405$Of4HK g$x$7404$Of4HK))))))
   (g$syntax-vector->list$6910$Of4HK
     g$syntax-vector->list$10534$Of4HK
     (case-lambda
       ((g$x$7406$Of4HK)
        (if (g$stx?$6890$Of4HK g$x$7406$Of4HK)
          ((case-lambda
             ((g$ls$7407$Of4HK g$m*$7408$Of4HK g$s*$7409$Of4HK g$ae*$7410$Of4HK)
              (map (case-lambda
                     ((g$x$7411$Of4HK)
                      (g$mkstx$6906$Of4HK
                        g$x$7411$Of4HK
                        g$m*$7408$Of4HK
                        g$s*$7409$Of4HK
                        g$ae*$7410$Of4HK)))
                   g$ls$7407$Of4HK)))
           (g$syntax-vector->list$6910$Of4HK
             (g$stx-expr$6892$Of4HK g$x$7406$Of4HK))
           (g$stx-mark*$6893$Of4HK g$x$7406$Of4HK)
           (g$stx-subst*$6894$Of4HK g$x$7406$Of4HK)
           (g$stx-ae*$6895$Of4HK g$x$7406$Of4HK))
          (if (annotation? g$x$7406$Of4HK)
            (g$syntax-vector->list$6910$Of4HK
              (annotation-expression g$x$7406$Of4HK))
            (if (vector? g$x$7406$Of4HK)
              (vector->list g$x$7406$Of4HK)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7406$Of4HK)))))))
   (g$syntax-pair?$6911$Of4HK
     g$syntax-pair?$10535$Of4HK
     (case-lambda
       ((g$x$7412$Of4HK) (g$syntax-kind?$6909$Of4HK g$x$7412$Of4HK pair?))))
   (g$syntax-vector?$6912$Of4HK
     g$syntax-vector?$10536$Of4HK
     (case-lambda
       ((g$x$7413$Of4HK) (g$syntax-kind?$6909$Of4HK g$x$7413$Of4HK vector?))))
   (g$syntax-null?$6913$Of4HK
     g$syntax-null?$10537$Of4HK
     (case-lambda
       ((g$x$7414$Of4HK) (g$syntax-kind?$6909$Of4HK g$x$7414$Of4HK null?))))
   (g$syntax-list?$6914$Of4HK
     g$syntax-list?$10538$Of4HK
     (case-lambda
       ((g$x$7415$Of4HK)
        ((case-lambda
           ((g$t$7416$Of4HK)
            (if g$t$7416$Of4HK
              g$t$7416$Of4HK
              (begin
                '#f
                (if (g$syntax-pair?$6911$Of4HK g$x$7415$Of4HK)
                  (begin
                    '#f
                    (g$syntax-list?$6914$Of4HK
                      (g$syntax-cdr$6916$Of4HK g$x$7415$Of4HK)))
                  '#f)))))
         (g$syntax-null?$6913$Of4HK g$x$7415$Of4HK)))))
   (g$syntax-car$6915$Of4HK
     g$syntax-car$10539$Of4HK
     (case-lambda
       ((g$x$7417$Of4HK)
        (if (g$stx?$6890$Of4HK g$x$7417$Of4HK)
          (g$mkstx$6906$Of4HK
            (g$syntax-car$6915$Of4HK (g$stx-expr$6892$Of4HK g$x$7417$Of4HK))
            (g$stx-mark*$6893$Of4HK g$x$7417$Of4HK)
            (g$stx-subst*$6894$Of4HK g$x$7417$Of4HK)
            (g$stx-ae*$6895$Of4HK g$x$7417$Of4HK))
          (if (annotation? g$x$7417$Of4HK)
            (g$syntax-car$6915$Of4HK (annotation-expression g$x$7417$Of4HK))
            (if (pair? g$x$7417$Of4HK)
              (car g$x$7417$Of4HK)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7417$Of4HK)))))))
   (g$syntax-cdr$6916$Of4HK
     g$syntax-cdr$10540$Of4HK
     (case-lambda
       ((g$x$7418$Of4HK)
        (if (g$stx?$6890$Of4HK g$x$7418$Of4HK)
          (g$mkstx$6906$Of4HK
            (g$syntax-cdr$6916$Of4HK (g$stx-expr$6892$Of4HK g$x$7418$Of4HK))
            (g$stx-mark*$6893$Of4HK g$x$7418$Of4HK)
            (g$stx-subst*$6894$Of4HK g$x$7418$Of4HK)
            (g$stx-ae*$6895$Of4HK g$x$7418$Of4HK))
          (if (annotation? g$x$7418$Of4HK)
            (g$syntax-cdr$6916$Of4HK (annotation-expression g$x$7418$Of4HK))
            (if (pair? g$x$7418$Of4HK)
              (cdr g$x$7418$Of4HK)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7418$Of4HK)))))))
   (g$syntax->list$6917$Of4HK
     g$syntax->list$10541$Of4HK
     (case-lambda
       ((g$x$7419$Of4HK)
        (if (g$syntax-pair?$6911$Of4HK g$x$7419$Of4HK)
          (cons
            (g$syntax-car$6915$Of4HK g$x$7419$Of4HK)
            (g$syntax->list$6917$Of4HK
              (g$syntax-cdr$6916$Of4HK g$x$7419$Of4HK)))
          (if (g$syntax-null?$6913$Of4HK g$x$7419$Of4HK)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7419$Of4HK))))))
   (g$id?$6918$Of4HK
     g$id?$10542$Of4HK
     (case-lambda
       ((g$x$7420$Of4HK)
        (if (g$stx?$6890$Of4HK g$x$7420$Of4HK)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7421$Of4HK)
                (symbol?
                  (if (annotation? g$expr$7421$Of4HK)
                    (annotation-stripped g$expr$7421$Of4HK)
                    g$expr$7421$Of4HK))))
             (g$stx-expr$6892$Of4HK g$x$7420$Of4HK)))
          '#f))))
   (g$id->sym$6919$Of4HK
     g$id->sym$10543$Of4HK
     (case-lambda
       ((g$x$7422$Of4HK)
        (begin
          (if (g$stx?$6890$Of4HK g$x$7422$Of4HK)
            (void)
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7422$Of4HK))
          ((case-lambda
             ((g$expr$7423$Of4HK)
              ((case-lambda
                 ((g$sym$7424$Of4HK)
                  (if (symbol? g$sym$7424$Of4HK)
                    g$sym$7424$Of4HK
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7422$Of4HK))))
               (if (annotation? g$expr$7423$Of4HK)
                 (annotation-stripped g$expr$7423$Of4HK)
                 g$expr$7423$Of4HK))))
           (g$stx-expr$6892$Of4HK g$x$7422$Of4HK))))))
   (g$same-marks?$6920$Of4HK
     g$same-marks?$10544$Of4HK
     (case-lambda
       ((g$x$7425$Of4HK g$y$7426$Of4HK)
        ((case-lambda
           ((g$t$7427$Of4HK)
            (if g$t$7427$Of4HK
              g$t$7427$Of4HK
              (begin
                '#f
                (if (pair? g$x$7425$Of4HK)
                  (if (pair? g$y$7426$Of4HK)
                    (if (eq? (car g$x$7425$Of4HK) (car g$y$7426$Of4HK))
                      (begin
                        '#f
                        (g$same-marks?$6920$Of4HK
                          (cdr g$x$7425$Of4HK)
                          (cdr g$y$7426$Of4HK)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7425$Of4HK) (begin '#f (null? g$y$7426$Of4HK)) '#f)))))
   (g$bound-id=?$6921$Of4HK
     g$bound-id=?$10545$Of4HK
     (case-lambda
       ((g$x$7428$Of4HK g$y$7429$Of4HK)
        (if (eq? (g$id->sym$6919$Of4HK g$x$7428$Of4HK)
                 (g$id->sym$6919$Of4HK g$y$7429$Of4HK))
          (begin
            '#f
            (g$same-marks?$6920$Of4HK
              (g$stx-mark*$6893$Of4HK g$x$7428$Of4HK)
              (g$stx-mark*$6893$Of4HK g$y$7429$Of4HK)))
          '#f))))
   (g$free-id=?$6922$Of4HK
     g$free-id=?$10546$Of4HK
     (case-lambda
       ((g$i$7430$Of4HK g$j$7431$Of4HK)
        ((case-lambda
           ((g$t0$7432$Of4HK g$t1$7433$Of4HK)
            (if ((case-lambda
                   ((g$t$7434$Of4HK)
                    (if g$t$7434$Of4HK
                      g$t$7434$Of4HK
                      (begin '#f g$t1$7433$Of4HK))))
                 g$t0$7432$Of4HK)
              (eq? g$t0$7432$Of4HK g$t1$7433$Of4HK)
              (eq? (g$id->sym$6919$Of4HK g$i$7430$Of4HK)
                   (g$id->sym$6919$Of4HK g$j$7431$Of4HK)))))
         (g$id->real-label$6932$Of4HK g$i$7430$Of4HK)
         (g$id->real-label$6932$Of4HK g$j$7431$Of4HK)))))
   (g$valid-bound-ids?$6923$Of4HK
     g$valid-bound-ids?$10547$Of4HK
     (case-lambda
       ((g$id*$7435$Of4HK)
        (if (g$for-all$5347$Of4HK g$id?$6918$Of4HK g$id*$7435$Of4HK)
          (begin '#f (g$distinct-bound-ids?$6924$Of4HK g$id*$7435$Of4HK))
          '#f))))
   (g$distinct-bound-ids?$6924$Of4HK
     g$distinct-bound-ids?$10548$Of4HK
     (case-lambda
       ((g$id*$7436$Of4HK)
        ((case-lambda
           ((g$t$7437$Of4HK)
            (if g$t$7437$Of4HK
              g$t$7437$Of4HK
              (begin
                '#f
                (if (not (g$bound-id-member?$6925$Of4HK
                           (car g$id*$7436$Of4HK)
                           (cdr g$id*$7436$Of4HK)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$6924$Of4HK (cdr g$id*$7436$Of4HK)))
                  '#f)))))
         (null? g$id*$7436$Of4HK)))))
   (g$bound-id-member?$6925$Of4HK
     g$bound-id-member?$10549$Of4HK
     (case-lambda
       ((g$id$7438$Of4HK g$id*$7439$Of4HK)
        (if (pair? g$id*$7439$Of4HK)
          (begin
            '#f
            ((case-lambda
               ((g$t$7440$Of4HK)
                (if g$t$7440$Of4HK
                  g$t$7440$Of4HK
                  (begin
                    '#f
                    (g$bound-id-member?$6925$Of4HK
                      g$id$7438$Of4HK
                      (cdr g$id*$7439$Of4HK))))))
             (g$bound-id=?$6921$Of4HK g$id$7438$Of4HK (car g$id*$7439$Of4HK))))
          '#f))))
   (g$self-evaluating?$6926$Of4HK
     g$self-evaluating?$10550$Of4HK
     (case-lambda
       ((g$x$7441$Of4HK)
        ((case-lambda
           ((g$t$7442$Of4HK)
            (if g$t$7442$Of4HK
              g$t$7442$Of4HK
              ((case-lambda
                 ((g$t$7443$Of4HK)
                  (if g$t$7443$Of4HK
                    g$t$7443$Of4HK
                    ((case-lambda
                       ((g$t$7444$Of4HK)
                        (if g$t$7444$Of4HK
                          g$t$7444$Of4HK
                          ((case-lambda
                             ((g$t$7445$Of4HK)
                              (if g$t$7445$Of4HK
                                g$t$7445$Of4HK
                                (begin '#f (bytevector? g$x$7441$Of4HK)))))
                           (boolean? g$x$7441$Of4HK)))))
                     (char? g$x$7441$Of4HK)))))
               (string? g$x$7441$Of4HK)))))
         (number? g$x$7441$Of4HK)))))
   (g$strip-annotations$6927$Of4HK
     g$strip-annotations$10551$Of4HK
     (case-lambda
       ((g$x$7446$Of4HK)
        (if (pair? g$x$7446$Of4HK)
          (cons
            (g$strip-annotations$6927$Of4HK (car g$x$7446$Of4HK))
            (g$strip-annotations$6927$Of4HK (cdr g$x$7446$Of4HK)))
          (if (vector? g$x$7446$Of4HK)
            (vector-map g$strip-annotations$6927$Of4HK g$x$7446$Of4HK)
            (if (annotation? g$x$7446$Of4HK)
              (annotation-stripped g$x$7446$Of4HK)
              g$x$7446$Of4HK))))))
   (g$strip$6928$Of4HK
     g$strip$10552$Of4HK
     (case-lambda
       ((g$x$7447$Of4HK g$m*$7448$Of4HK)
        (if (g$top-marked?$6861$Of4HK g$m*$7448$Of4HK)
          (if ((case-lambda
                 ((g$t$7449$Of4HK)
                  (if g$t$7449$Of4HK
                    g$t$7449$Of4HK
                    ((case-lambda
                       ((g$t$7450$Of4HK)
                        (if g$t$7450$Of4HK
                          g$t$7450$Of4HK
                          (begin
                            '#f
                            (if (vector? g$x$7447$Of4HK)
                              (if (> (vector-length g$x$7447$Of4HK) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7447$Of4HK '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7447$Of4HK)
                       (begin '#f (annotation? (car g$x$7447$Of4HK)))
                       '#f)))))
               (annotation? g$x$7447$Of4HK))
            (g$strip-annotations$6927$Of4HK g$x$7447$Of4HK)
            g$x$7447$Of4HK)
          ((letrec ((g$f$7451$Of4HK
                      (case-lambda
                        ((g$x$7452$Of4HK)
                         (if (g$stx?$6890$Of4HK g$x$7452$Of4HK)
                           (g$strip$6928$Of4HK
                             (g$stx-expr$6892$Of4HK g$x$7452$Of4HK)
                             (g$stx-mark*$6893$Of4HK g$x$7452$Of4HK))
                           (if (annotation? g$x$7452$Of4HK)
                             (annotation-stripped g$x$7452$Of4HK)
                             (if (pair? g$x$7452$Of4HK)
                               ((case-lambda
                                  ((g$a$7453$Of4HK g$d$7454$Of4HK)
                                   (if (if (eq? g$a$7453$Of4HK
                                                (car g$x$7452$Of4HK))
                                         (begin
                                           '#f
                                           (eq? g$d$7454$Of4HK
                                                (cdr g$x$7452$Of4HK)))
                                         '#f)
                                     g$x$7452$Of4HK
                                     (cons g$a$7453$Of4HK g$d$7454$Of4HK))))
                                (g$f$7451$Of4HK (car g$x$7452$Of4HK))
                                (g$f$7451$Of4HK (cdr g$x$7452$Of4HK)))
                               (if (vector? g$x$7452$Of4HK)
                                 ((case-lambda
                                    ((g$old$7455$Of4HK)
                                     ((case-lambda
                                        ((g$new$7456$Of4HK)
                                         (if (g$for-all$5347$Of4HK
                                               eq?
                                               g$old$7455$Of4HK
                                               g$new$7456$Of4HK)
                                           g$x$7452$Of4HK
                                           (list->vector g$new$7456$Of4HK))))
                                      (map g$f$7451$Of4HK g$old$7455$Of4HK))))
                                  (vector->list g$x$7452$Of4HK))
                                 g$x$7452$Of4HK))))))))
             g$f$7451$Of4HK)
           g$x$7447$Of4HK)))))
   (g$stx->datum$6929$Of4HK
     g$stx->datum$10553$Of4HK
     (case-lambda ((g$x$7457$Of4HK) (g$strip$6928$Of4HK g$x$7457$Of4HK '()))))
   (g$same-marks*?$6930$Of4HK
     g$same-marks*?$10554$Of4HK
     (case-lambda
       ((g$mark*$7458$Of4HK g$mark**$7459$Of4HK g$si$7460$Of4HK)
        (if (null? g$si$7460$Of4HK)
          '#f
          (if (g$same-marks?$6920$Of4HK
                g$mark*$7458$Of4HK
                (vector-ref g$mark**$7459$Of4HK (car g$si$7460$Of4HK)))
            (car g$si$7460$Of4HK)
            (g$same-marks*?$6930$Of4HK
              g$mark*$7458$Of4HK
              g$mark**$7459$Of4HK
              (cdr g$si$7460$Of4HK)))))))
   (g$id->label$6931$Of4HK
     g$id->label$10555$Of4HK
     (case-lambda
       ((g$id$7461$Of4HK)
        ((case-lambda
           ((g$t$7462$Of4HK)
            (if g$t$7462$Of4HK
              g$t$7462$Of4HK
              (begin
                '#f
                ((case-lambda
                   ((g$t$7463$Of4HK)
                    (if g$t$7463$Of4HK
                      ((case-lambda
                         ((g$env$7464$Of4HK)
                          ((case-lambda
                             ((g$rib$7465$Of4HK)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$6866$Of4HK
                                     g$id$7461$Of4HK
                                     g$rib$7465$Of4HK)))
                                (case-lambda
                                  ((g$lab$7468$Of4HK g$loc_$7469$Of4HK)
                                   ((case-lambda
                                      ((g$loc_$7470$Of4HK g$lab$7471$Of4HK)
                                       (begin
                                         (g$extend-rib!$6882$Of4HK
                                           g$rib$7465$Of4HK
                                           g$id$7461$Of4HK
                                           g$lab$7471$Of4HK)
                                         g$lab$7471$Of4HK)))
                                    g$loc_$7469$Of4HK
                                    g$lab$7468$Of4HK))))))
                           (g$interaction-env-rib$7274$Of4HK
                             g$env$7464$Of4HK))))
                       g$t$7463$Of4HK)
                      '#f)))
                 (g$top-level-context$7309$Of4HK))))))
         (g$id->real-label$6932$Of4HK g$id$7461$Of4HK)))))
   (g$id->real-label$6932$Of4HK
     g$id->real-label$10556$Of4HK
     (case-lambda
       ((g$id$7472$Of4HK)
        ((case-lambda
           ((g$sym$7473$Of4HK)
            ((letrec ((g$search$7474$Of4HK
                        (case-lambda
                          ((g$subst*$7475$Of4HK g$mark*$7476$Of4HK)
                           (if (null? g$subst*$7475$Of4HK)
                             '#f
                             (if (eq? (car g$subst*$7475$Of4HK) 'shift)
                               (g$search$7474$Of4HK
                                 (cdr g$subst*$7475$Of4HK)
                                 (cdr g$mark*$7476$Of4HK))
                               ((case-lambda
                                  ((g$rib$7477$Of4HK)
                                   ((case-lambda
                                      ((g$t$7478$Of4HK)
                                       (if g$t$7478$Of4HK
                                         ((case-lambda
                                            ((g$ht$7479$Of4HK)
                                             ((case-lambda
                                                ((g$si$7480$Of4HK)
                                                 ((case-lambda
                                                    ((g$i$7481$Of4HK)
                                                     (if g$i$7481$Of4HK
                                                       (vector-ref
                                                         (g$rib-label*$6875$Of4HK
                                                           g$rib$7477$Of4HK)
                                                         g$i$7481$Of4HK)
                                                       (g$search$7474$Of4HK
                                                         (cdr g$subst*$7475$Of4HK)
                                                         g$mark*$7476$Of4HK))))
                                                  (if g$si$7480$Of4HK
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$6930$Of4HK
                                                        g$mark*$7476$Of4HK
                                                        (g$rib-mark**$6874$Of4HK
                                                          g$rib$7477$Of4HK)
                                                        (reverse
                                                          g$si$7480$Of4HK)))
                                                    '#f))))
                                              (g$hashtable-ref$5143$Of4HK
                                                g$ht$7479$Of4HK
                                                g$sym$7473$Of4HK
                                                '#f))))
                                          g$t$7478$Of4HK)
                                         ((letrec ((g$f$7482$Of4HK
                                                     (case-lambda
                                                       ((g$sym*$7483$Of4HK
                                                          g$mark**$7484$Of4HK
                                                          g$label*$7485$Of4HK)
                                                        (if (null?
                                                              g$sym*$7483$Of4HK)
                                                          (g$search$7474$Of4HK
                                                            (cdr g$subst*$7475$Of4HK)
                                                            g$mark*$7476$Of4HK)
                                                          (if (if (eq? (car g$sym*$7483$Of4HK)
                                                                       g$sym$7473$Of4HK)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$6920$Of4HK
                                                                    (car g$mark**$7484$Of4HK)
                                                                    g$mark*$7476$Of4HK))
                                                                '#f)
                                                            (car g$label*$7485$Of4HK)
                                                            (g$f$7482$Of4HK
                                                              (cdr g$sym*$7483$Of4HK)
                                                              (cdr g$mark**$7484$Of4HK)
                                                              (cdr g$label*$7485$Of4HK))))))))
                                            g$f$7482$Of4HK)
                                          (g$rib-sym*$6873$Of4HK
                                            g$rib$7477$Of4HK)
                                          (g$rib-mark**$6874$Of4HK
                                            g$rib$7477$Of4HK)
                                          (g$rib-label*$6875$Of4HK
                                            g$rib$7477$Of4HK)))))
                                    (g$rib-sealed/freq$6876$Of4HK
                                      g$rib$7477$Of4HK))))
                                (car g$subst*$7475$Of4HK))))))))
               g$search$7474$Of4HK)
             (g$stx-subst*$6894$Of4HK g$id$7472$Of4HK)
             (g$stx-mark*$6893$Of4HK g$id$7472$Of4HK))))
         (g$id->sym$6919$Of4HK g$id$7472$Of4HK)))))
   (g$label->binding$6933$Of4HK
     g$label->binding$10557$Of4HK
     (case-lambda
       ((g$x$7486$Of4HK g$r$7487$Of4HK)
        ((case-lambda
           ((g$t$7488$Of4HK)
            (if g$t$7488$Of4HK
              ((case-lambda
                 ((g$b$7489$Of4HK)
                  (if (if (pair? g$b$7489$Of4HK)
                        (begin '#f (eq? (car g$b$7489$Of4HK) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7159$Of4HK (cdr g$b$7489$Of4HK)))
                    (if (if (pair? g$b$7489$Of4HK)
                          (begin '#f (eq? (car g$b$7489$Of4HK) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7490$Of4HK g$loc$7491$Of4HK)
                          (cons '$rtd (symbol-value g$loc$7491$Of4HK))))
                       (g$cadr$4878$Of4HK g$b$7489$Of4HK)
                       (g$cddr$4880$Of4HK g$b$7489$Of4HK))
                      g$b$7489$Of4HK))))
               g$t$7488$Of4HK)
              ((case-lambda
                 ((g$t$7492$Of4HK)
                  (if g$t$7492$Of4HK
                    (cdr g$t$7492$Of4HK)
                    ((case-lambda
                       ((g$t$7493$Of4HK)
                        (if g$t$7493$Of4HK
                          ((case-lambda
                             ((g$env$7494$Of4HK)
                              ((case-lambda
                                 ((g$t$7495$Of4HK)
                                  (if g$t$7495$Of4HK
                                    ((case-lambda
                                       ((g$p$7496$Of4HK)
                                        (g$cons*$5349$Of4HK
                                          'lexical
                                          (cdr g$p$7496$Of4HK)
                                          '#f)))
                                     g$t$7495$Of4HK)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$7486$Of4HK
                                 (g$interaction-env-locs$7276$Of4HK
                                   g$env$7494$Of4HK)))))
                           g$t$7493$Of4HK)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7309$Of4HK)))))
               (assq g$x$7486$Of4HK g$r$7487$Of4HK)))))
         (g$imported-label->binding$6732$Of4HK g$x$7486$Of4HK)))))
   (g$make-binding$6934$Of4HK g$make-binding$10558$Of4HK cons)
   (g$binding-type$6935$Of4HK g$binding-type$10559$Of4HK car)
   (g$binding-value$6936$Of4HK g$binding-value$10560$Of4HK cdr)
   (g$raise-unbound-error$6937$Of4HK
     g$raise-unbound-error$10561$Of4HK
     (case-lambda
       ((g$id$7497$Of4HK)
        (g$syntax-violation*$7301$Of4HK
          '#f
          '"unbound identifier"
          g$id$7497$Of4HK
          (g$make-undefined-violation$5683$Of4HK)))))
   (g$syntax-type$6938$Of4HK
     g$syntax-type$10562$Of4HK
     (case-lambda
       ((g$e$7498$Of4HK g$r$7499$Of4HK)
        (if (g$id?$6918$Of4HK g$e$7498$Of4HK)
          ((case-lambda
             ((g$id$7500$Of4HK)
              ((case-lambda
                 ((g$label$7501$Of4HK)
                  ((case-lambda
                     ((g$b$7502$Of4HK)
                      ((case-lambda
                         ((g$type$7503$Of4HK)
                          ((case-lambda
                             (()
                              (begin
                                (if g$label$7501$Of4HK
                                  (void)
                                  (g$raise-unbound-error$6937$Of4HK
                                    g$id$7500$Of4HK))
                                ((case-lambda
                                   ((g$t$7504$Of4HK)
                                    (if (memv
                                          g$t$7504$Of4HK
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7503$Of4HK
                                        (g$binding-value$6936$Of4HK
                                          g$b$7502$Of4HK)
                                        g$id$7500$Of4HK)
                                      (values 'other '#f '#f))))
                                 g$type$7503$Of4HK)))))))
                       (g$binding-type$6935$Of4HK g$b$7502$Of4HK))))
                   (g$label->binding$6933$Of4HK
                     g$label$7501$Of4HK
                     g$r$7499$Of4HK))))
               (g$id->label$6931$Of4HK g$id$7500$Of4HK))))
           g$e$7498$Of4HK)
          (if (g$syntax-pair?$6911$Of4HK g$e$7498$Of4HK)
            ((case-lambda
               ((g$id$7505$Of4HK)
                (if (g$id?$6918$Of4HK g$id$7505$Of4HK)
                  ((case-lambda
                     ((g$label$7506$Of4HK)
                      ((case-lambda
                         ((g$b$7507$Of4HK)
                          ((case-lambda
                             ((g$type$7508$Of4HK)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if g$label$7506$Of4HK
                                      (void)
                                      (g$raise-unbound-error$6937$Of4HK
                                        g$id$7505$Of4HK))
                                    ((case-lambda
                                       ((g$t$7509$Of4HK)
                                        (if (memv
                                              g$t$7509$Of4HK
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$7508$Of4HK
                                            (g$binding-value$6936$Of4HK
                                              g$b$7507$Of4HK)
                                            g$id$7505$Of4HK)
                                          (values 'call '#f '#f))))
                                     g$type$7508$Of4HK)))))))
                           (g$binding-type$6935$Of4HK g$b$7507$Of4HK))))
                       (g$label->binding$6933$Of4HK
                         g$label$7506$Of4HK
                         g$r$7499$Of4HK))))
                   (g$id->label$6931$Of4HK g$id$7505$Of4HK))
                  (values 'call '#f '#f))))
             (g$syntax-car$6915$Of4HK g$e$7498$Of4HK))
            ((case-lambda
               ((g$d$7510$Of4HK)
                (if (g$self-evaluating?$6926$Of4HK g$d$7510$Of4HK)
                  (values 'constant g$d$7510$Of4HK '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$6929$Of4HK g$e$7498$Of4HK)))))))
   (g$sanitize-binding$6946$Of4HK
     g$sanitize-binding$10563$Of4HK
     (case-lambda
       ((g$x$7511$Of4HK g$src$7512$Of4HK)
        (if (procedure? g$x$7511$Of4HK)
          (g$cons*$5349$Of4HK 'local-macro g$x$7511$Of4HK g$src$7512$Of4HK)
          (if (if (pair? g$x$7511$Of4HK)
                (if (eq? (car g$x$7511$Of4HK) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7511$Of4HK)))
                  '#f)
                '#f)
            (g$cons*$5349$Of4HK
              'local-macro!
              (cdr g$x$7511$Of4HK)
              g$src$7512$Of4HK)
            (if (if (pair? g$x$7511$Of4HK)
                  (begin '#f (eq? (car g$x$7511$Of4HK) '$rtd))
                  '#f)
              g$x$7511$Of4HK
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7511$Of4HK)))))))
   (g$make-variable-transformer$6947$Of4HK
     g$make-variable-transformer$10564$Of4HK
     (case-lambda
       ((g$x$7513$Of4HK)
        (if (procedure? g$x$7513$Of4HK)
          (cons 'macro! g$x$7513$Of4HK)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7513$Of4HK)))))
   (g$variable-transformer?$6948$Of4HK
     g$variable-transformer?$10565$Of4HK
     (case-lambda
       ((g$x$7514$Of4HK)
        (if (pair? g$x$7514$Of4HK)
          (if (eq? (car g$x$7514$Of4HK) 'macro!)
            (begin '#f (procedure? (cdr g$x$7514$Of4HK)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$6949$Of4HK
     g$variable-transformer-procedure$10566$Of4HK
     (case-lambda
       ((g$x$7515$Of4HK)
        (if (g$variable-transformer?$6948$Of4HK g$x$7515$Of4HK)
          (cdr g$x$7515$Of4HK)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7515$Of4HK)))))
   (g$make-eval-transformer$6950$Of4HK
     g$make-eval-transformer$10567$Of4HK
     (case-lambda
       ((g$x$7516$Of4HK)
        (g$sanitize-binding$6946$Of4HK
          (eval-core (g$expanded->core$6432$Of4HK g$x$7516$Of4HK))
          g$x$7516$Of4HK))))
   (g$parse-define$7136$Of4HK
     g$parse-define$10568$Of4HK
     (case-lambda
       ((g$x$7517$Of4HK)
        ((case-lambda
           ((g$t$7518$Of4HK)
            ((case-lambda
               ((g$ls/false$7519$Of4HK)
                (if (if g$ls/false$7519$Of4HK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7520$Of4HK
                               g$fmls$7521$Of4HK
                               g$b$7522$Of4HK
                               g$b*$7523$Of4HK)
                             (g$id?$6918$Of4HK g$id$7520$Of4HK)))
                          g$ls/false$7519$Of4HK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7524$Of4HK
                         g$fmls$7525$Of4HK
                         g$b$7526$Of4HK
                         g$b*$7527$Of4HK)
                       (begin
                         (g$verify-formals$7216$Of4HK
                           g$fmls$7525$Of4HK
                           g$x$7517$Of4HK)
                         (values
                           g$id$7524$Of4HK
                           (cons
                             'defun
                             (cons
                               g$fmls$7525$Of4HK
                               (cons g$b$7526$Of4HK g$b*$7527$Of4HK)))))))
                    g$ls/false$7519$Of4HK)
                  ((case-lambda
                     ((g$t$7528$Of4HK)
                      ((case-lambda
                         ((g$ls/false$7529$Of4HK)
                          (if (if g$ls/false$7529$Of4HK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7530$Of4HK g$val$7531$Of4HK)
                                       (g$id?$6918$Of4HK g$id$7530$Of4HK)))
                                    g$ls/false$7529$Of4HK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7532$Of4HK g$val$7533$Of4HK)
                                 (values
                                   g$id$7532$Of4HK
                                   (cons 'expr g$val$7533$Of4HK))))
                              g$ls/false$7529$Of4HK)
                            ((case-lambda
                               ((g$t$7534$Of4HK)
                                ((case-lambda
                                   ((g$ls/false$7535$Of4HK)
                                    (if (if g$ls/false$7535$Of4HK
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7536$Of4HK)
                                                 (g$id?$6918$Of4HK
                                                   g$id$7536$Of4HK)))
                                              g$ls/false$7535$Of4HK))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7537$Of4HK)
                                           (values
                                             g$id$7537$Of4HK
                                             (cons
                                               'expr
                                               (g$bless$7159$Of4HK '(void))))))
                                        g$ls/false$7535$Of4HK)
                                      (g$syntax-violation$7302$Of4HK
                                        '#f
                                        '"invalid syntax"
                                        g$t$7534$Of4HK))))
                                 (g$syntax-dispatch$7196$Of4HK
                                   g$t$7534$Of4HK
                                   '(_ any)))))
                             g$t$7528$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$7528$Of4HK
                         '(_ any any)))))
                   g$t$7518$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$7518$Of4HK
               '(_ (any . any) any . each-any)))))
         g$x$7517$Of4HK))))
   (g$parse-define-syntax$7137$Of4HK
     g$parse-define-syntax$10569$Of4HK
     (case-lambda
       ((g$x$7538$Of4HK)
        ((case-lambda
           ((g$t$7539$Of4HK)
            ((case-lambda
               ((g$ls/false$7540$Of4HK)
                (if (if g$ls/false$7540$Of4HK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7541$Of4HK g$val$7542$Of4HK)
                             (g$id?$6918$Of4HK g$id$7541$Of4HK)))
                          g$ls/false$7540$Of4HK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7543$Of4HK g$val$7544$Of4HK)
                       (values g$id$7543$Of4HK g$val$7544$Of4HK)))
                    g$ls/false$7540$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7539$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$7539$Of4HK '(_ any any)))))
         g$x$7538$Of4HK))))
   (g$scheme-stx-hashtable$7138$Of4HK
     g$scheme-stx-hashtable$10570$Of4HK
     (g$make-eq-hashtable$5140$Of4HK))
   (g$scheme-stx$7139$Of4HK
     g$scheme-stx$10571$Of4HK
     (case-lambda
       ((g$sym$7545$Of4HK)
        ((case-lambda
           ((g$t$7546$Of4HK)
            (if g$t$7546$Of4HK
              g$t$7546$Of4HK
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7547$Of4HK)
                    ((case-lambda
                       ((g$stx$7548$Of4HK)
                        ((case-lambda
                           ((g$stx$7549$Of4HK)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5144$Of4HK
                                    g$scheme-stx-hashtable$7138$Of4HK
                                    g$sym$7545$Of4HK
                                    g$stx$7549$Of4HK)
                                  g$stx$7549$Of4HK))))))
                         ((case-lambda
                            ((g$t$7550$Of4HK)
                             (if g$t$7550$Of4HK
                               ((case-lambda
                                  ((g$x$7551$Of4HK)
                                   ((case-lambda
                                      ((g$name$7552$Of4HK g$label$7553$Of4HK)
                                       (g$add-subst$6908$Of4HK
                                         (g$make-rib$6872$Of4HK
                                           (list g$name$7552$Of4HK)
                                           (list g$top-mark*$6860$Of4HK)
                                           (list g$label$7553$Of4HK)
                                           '#f)
                                         g$stx$7548$Of4HK)))
                                    (car g$x$7551$Of4HK)
                                    (cdr g$x$7551$Of4HK))))
                                g$t$7550$Of4HK)
                               g$stx$7548$Of4HK)))
                          (assq g$sym$7545$Of4HK g$subst$7547$Of4HK)))))
                     (g$make-stx$6891$Of4HK
                       g$sym$7545$Of4HK
                       g$top-mark*$6860$Of4HK
                       '()
                       '()))))
                 (g$library-subst$6690$Of4HK
                   (g$find-library-by-name$6726$Of4HK
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5143$Of4HK
           g$scheme-stx-hashtable$7138$Of4HK
           g$sym$7545$Of4HK
           '#f)))))
   (g$lexical-var$7140$Of4HK g$lexical-var$10572$Of4HK car)
   (g$lexical-mutable?$7141$Of4HK g$lexical-mutable?$10573$Of4HK cdr)
   (g$set-lexical-mutable!$7142$Of4HK
     g$set-lexical-mutable!$10574$Of4HK
     set-cdr!)
   (g$add-lexical$7143$Of4HK
     g$add-lexical$10575$Of4HK
     (case-lambda
       ((g$lab$7554$Of4HK g$lex$7555$Of4HK g$r$7556$Of4HK)
        (cons
          (g$cons*$5349$Of4HK g$lab$7554$Of4HK 'lexical g$lex$7555$Of4HK '#f)
          g$r$7556$Of4HK))))
   (g$add-lexicals$7144$Of4HK
     g$add-lexicals$10576$Of4HK
     (case-lambda
       ((g$lab*$7557$Of4HK g$lex*$7558$Of4HK g$r$7559$Of4HK)
        (if (null? g$lab*$7557$Of4HK)
          g$r$7559$Of4HK
          (g$add-lexicals$7144$Of4HK
            (cdr g$lab*$7557$Of4HK)
            (cdr g$lex*$7558$Of4HK)
            (g$add-lexical$7143$Of4HK
              (car g$lab*$7557$Of4HK)
              (car g$lex*$7558$Of4HK)
              g$r$7559$Of4HK))))))
   (g$letrec-helper$7145$Of4HK
     g$letrec-helper$10577$Of4HK
     (case-lambda
       ((g$e$7560$Of4HK g$r$7561$Of4HK g$mr$7562$Of4HK g$build$7563$Of4HK)
        ((case-lambda
           ((g$t$7564$Of4HK)
            ((case-lambda
               ((g$ls/false$7565$Of4HK)
                (if g$ls/false$7565$Of4HK
                  (apply
                    (case-lambda
                      ((g$lhs*$7566$Of4HK
                         g$rhs*$7567$Of4HK
                         g$b$7568$Of4HK
                         g$b*$7569$Of4HK)
                       (if (not (g$valid-bound-ids?$6923$Of4HK
                                  g$lhs*$7566$Of4HK))
                         (g$invalid-fmls-error$7161$Of4HK
                           g$e$7560$Of4HK
                           g$lhs*$7566$Of4HK)
                         ((case-lambda
                            ((g$lex*$7570$Of4HK g$lab*$7571$Of4HK)
                             ((case-lambda
                                ((g$rib$7572$Of4HK g$r$7573$Of4HK)
                                 ((case-lambda
                                    ((g$body$7574$Of4HK g$rhs*$7575$Of4HK)
                                     (g$build$7563$Of4HK
                                       '#f
                                       g$lex*$7570$Of4HK
                                       g$rhs*$7575$Of4HK
                                       g$body$7574$Of4HK)))
                                  (g$chi-internal$7225$Of4HK
                                    (g$add-subst$6908$Of4HK
                                      g$rib$7572$Of4HK
                                      (cons g$b$7568$Of4HK g$b*$7569$Of4HK))
                                    g$r$7573$Of4HK
                                    g$mr$7562$Of4HK)
                                  (g$chi-expr*$7212$Of4HK
                                    (map (case-lambda
                                           ((g$x$7576$Of4HK)
                                            (g$add-subst$6908$Of4HK
                                              g$rib$7572$Of4HK
                                              g$x$7576$Of4HK)))
                                         g$rhs*$7567$Of4HK)
                                    g$r$7573$Of4HK
                                    g$mr$7562$Of4HK))))
                              (g$make-full-rib$6886$Of4HK
                                g$lhs*$7566$Of4HK
                                g$lab*$7571$Of4HK)
                              (g$add-lexicals$7144$Of4HK
                                g$lab*$7571$Of4HK
                                g$lex*$7570$Of4HK
                                g$r$7561$Of4HK))))
                          (map g$gen-lexical$6862$Of4HK g$lhs*$7566$Of4HK)
                          (map g$gen-label$6864$Of4HK g$lhs*$7566$Of4HK)))))
                    g$ls/false$7565$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7564$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$7564$Of4HK
               '(_ #(each (any any)) any . each-any)))))
         g$e$7560$Of4HK))))
   (g$letrec-transformer$7146$Of4HK
     g$letrec-transformer$10578$Of4HK
     (case-lambda
       ((g$e$7577$Of4HK g$r$7578$Of4HK g$mr$7579$Of4HK)
        (g$letrec-helper$7145$Of4HK
          g$e$7577$Of4HK
          g$r$7578$Of4HK
          g$mr$7579$Of4HK
          g$build-letrec$6854$Of4HK))))
   (g$letrec*-transformer$7147$Of4HK
     g$letrec*-transformer$10579$Of4HK
     (case-lambda
       ((g$e$7580$Of4HK g$r$7581$Of4HK g$mr$7582$Of4HK)
        (g$letrec-helper$7145$Of4HK
          g$e$7580$Of4HK
          g$r$7581$Of4HK
          g$mr$7582$Of4HK
          g$build-letrec*$6855$Of4HK))))
   (g$fluid-let-syntax-transformer$7148$Of4HK
     g$fluid-let-syntax-transformer$10580$Of4HK
     (case-lambda
       ((g$e$7583$Of4HK g$r$7584$Of4HK g$mr$7585$Of4HK)
        (letrec* ((g$lookup$7586$Of4HK
                    (case-lambda
                      ((g$x$7596$Of4HK)
                       ((case-lambda
                          ((g$t$7597$Of4HK)
                           (if g$t$7597$Of4HK
                             g$t$7597$Of4HK
                             (begin
                               '#f
                               (g$syntax-violation$7302$Of4HK
                                 '#f
                                 '"unbound identifier"
                                 g$e$7583$Of4HK
                                 g$x$7596$Of4HK)))))
                        (g$id->label$6931$Of4HK g$x$7596$Of4HK))))))
          ((case-lambda
             ((g$t$7587$Of4HK)
              ((case-lambda
                 ((g$ls/false$7588$Of4HK)
                  (if g$ls/false$7588$Of4HK
                    (apply
                      (case-lambda
                        ((g$lhs*$7589$Of4HK
                           g$rhs*$7590$Of4HK
                           g$b$7591$Of4HK
                           g$b*$7592$Of4HK)
                         (if (not (g$valid-bound-ids?$6923$Of4HK
                                    g$lhs*$7589$Of4HK))
                           (g$invalid-fmls-error$7161$Of4HK
                             g$e$7583$Of4HK
                             g$lhs*$7589$Of4HK)
                           ((case-lambda
                              ((g$lab*$7593$Of4HK g$rhs*$7594$Of4HK)
                               (g$chi-internal$7225$Of4HK
                                 (cons g$b$7591$Of4HK g$b*$7592$Of4HK)
                                 (append
                                   (map cons
                                        g$lab*$7593$Of4HK
                                        g$rhs*$7594$Of4HK)
                                   g$r$7584$Of4HK)
                                 (append
                                   (map cons
                                        g$lab*$7593$Of4HK
                                        g$rhs*$7594$Of4HK)
                                   g$mr$7585$Of4HK))))
                            (map g$lookup$7586$Of4HK g$lhs*$7589$Of4HK)
                            (map (case-lambda
                                   ((g$x$7595$Of4HK)
                                    (g$make-eval-transformer$6950$Of4HK
                                      (g$expand-transformer$7241$Of4HK
                                        g$x$7595$Of4HK
                                        g$mr$7585$Of4HK))))
                                 g$rhs*$7590$Of4HK)))))
                      g$ls/false$7588$Of4HK)
                    (g$syntax-violation$7302$Of4HK
                      '#f
                      '"invalid syntax"
                      g$t$7587$Of4HK))))
               (g$syntax-dispatch$7196$Of4HK
                 g$t$7587$Of4HK
                 '(_ #(each (any any)) any . each-any)))))
           g$e$7583$Of4HK)))))
   (g$type-descriptor-transformer$7149$Of4HK
     g$type-descriptor-transformer$10581$Of4HK
     (case-lambda
       ((g$e$7598$Of4HK g$r$7599$Of4HK g$mr$7600$Of4HK)
        ((case-lambda
           ((g$t$7601$Of4HK)
            ((case-lambda
               ((g$ls/false$7602$Of4HK)
                (if (if g$ls/false$7602$Of4HK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7603$Of4HK)
                             (g$id?$6918$Of4HK g$id$7603$Of4HK)))
                          g$ls/false$7602$Of4HK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7604$Of4HK)
                       ((case-lambda
                          ((g$lab$7605$Of4HK)
                           ((case-lambda
                              ((g$b$7606$Of4HK)
                               ((case-lambda
                                  ((g$type$7607$Of4HK)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$7605$Of4HK
                                           (void)
                                           (g$raise-unbound-error$6937$Of4HK
                                             g$id$7604$Of4HK))
                                         (if (if (eq? g$type$7607$Of4HK '$rtd)
                                               (begin
                                                 '#f
                                                 (not (list?
                                                        (g$binding-value$6936$Of4HK
                                                          g$b$7606$Of4HK))))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7302$Of4HK
                                             '#f
                                             '"not a record type"
                                             g$e$7598$Of4HK))
                                         (list
                                           'quote
                                           (g$binding-value$6936$Of4HK
                                             g$b$7606$Of4HK))))))))
                                (g$binding-type$6935$Of4HK g$b$7606$Of4HK))))
                            (g$label->binding$6933$Of4HK
                              g$lab$7605$Of4HK
                              g$r$7599$Of4HK))))
                        (g$id->label$6931$Of4HK g$id$7604$Of4HK))))
                    g$ls/false$7602$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7601$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$7601$Of4HK '(_ any)))))
         g$e$7598$Of4HK))))
   (g$record-type-descriptor-transformer$7150$Of4HK
     g$record-type-descriptor-transformer$10582$Of4HK
     (case-lambda
       ((g$e$7608$Of4HK g$r$7609$Of4HK g$mr$7610$Of4HK)
        ((case-lambda
           ((g$t$7611$Of4HK)
            ((case-lambda
               ((g$ls/false$7612$Of4HK)
                (if (if g$ls/false$7612$Of4HK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7613$Of4HK)
                             (g$id?$6918$Of4HK g$id$7613$Of4HK)))
                          g$ls/false$7612$Of4HK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7614$Of4HK)
                       ((case-lambda
                          ((g$lab$7615$Of4HK)
                           ((case-lambda
                              ((g$b$7616$Of4HK)
                               ((case-lambda
                                  ((g$type$7617$Of4HK)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$7615$Of4HK
                                           (void)
                                           (g$raise-unbound-error$6937$Of4HK
                                             g$id$7614$Of4HK))
                                         (if (if (eq? g$type$7617$Of4HK '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$6936$Of4HK
                                                     g$b$7616$Of4HK)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7302$Of4HK
                                             '#f
                                             '"not a record type"
                                             g$e$7608$Of4HK))
                                         (g$chi-expr$7214$Of4HK
                                           (car (g$binding-value$6936$Of4HK
                                                  g$b$7616$Of4HK))
                                           g$r$7609$Of4HK
                                           g$mr$7610$Of4HK)))))))
                                (g$binding-type$6935$Of4HK g$b$7616$Of4HK))))
                            (g$label->binding$6933$Of4HK
                              g$lab$7615$Of4HK
                              g$r$7609$Of4HK))))
                        (g$id->label$6931$Of4HK g$id$7614$Of4HK))))
                    g$ls/false$7612$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7611$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$7611$Of4HK '(_ any)))))
         g$e$7608$Of4HK))))
   (g$record-constructor-descriptor-transformer$7151$Of4HK
     g$record-constructor-descriptor-transformer$10583$Of4HK
     (case-lambda
       ((g$e$7618$Of4HK g$r$7619$Of4HK g$mr$7620$Of4HK)
        ((case-lambda
           ((g$t$7621$Of4HK)
            ((case-lambda
               ((g$ls/false$7622$Of4HK)
                (if (if g$ls/false$7622$Of4HK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7623$Of4HK)
                             (g$id?$6918$Of4HK g$id$7623$Of4HK)))
                          g$ls/false$7622$Of4HK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7624$Of4HK)
                       ((case-lambda
                          ((g$lab$7625$Of4HK)
                           ((case-lambda
                              ((g$b$7626$Of4HK)
                               ((case-lambda
                                  ((g$type$7627$Of4HK)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$7625$Of4HK
                                           (void)
                                           (g$raise-unbound-error$6937$Of4HK
                                             g$id$7624$Of4HK))
                                         (if (if (eq? g$type$7627$Of4HK '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$6936$Of4HK
                                                     g$b$7626$Of4HK)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7302$Of4HK
                                             '#f
                                             '"invalid type"
                                             g$e$7618$Of4HK))
                                         (g$chi-expr$7214$Of4HK
                                           (g$cadr$4878$Of4HK
                                             (g$binding-value$6936$Of4HK
                                               g$b$7626$Of4HK))
                                           g$r$7619$Of4HK
                                           g$mr$7620$Of4HK)))))))
                                (g$binding-type$6935$Of4HK g$b$7626$Of4HK))))
                            (g$label->binding$6933$Of4HK
                              g$lab$7625$Of4HK
                              g$r$7619$Of4HK))))
                        (g$id->label$6931$Of4HK g$id$7624$Of4HK))))
                    g$ls/false$7622$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7621$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$7621$Of4HK '(_ any)))))
         g$e$7618$Of4HK))))
   (g$when-transformer$7152$Of4HK
     g$when-transformer$10584$Of4HK
     (case-lambda
       ((g$e$7628$Of4HK g$r$7629$Of4HK g$mr$7630$Of4HK)
        ((case-lambda
           ((g$t$7631$Of4HK)
            ((case-lambda
               ((g$ls/false$7632$Of4HK)
                (if g$ls/false$7632$Of4HK
                  (apply
                    (case-lambda
                      ((g$test$7633$Of4HK g$e$7634$Of4HK g$e*$7635$Of4HK)
                       (list
                         'if
                         (g$chi-expr$7214$Of4HK
                           g$test$7633$Of4HK
                           g$r$7629$Of4HK
                           g$mr$7630$Of4HK)
                         (g$build-sequence$6852$Of4HK
                           '#f
                           (g$chi-expr*$7212$Of4HK
                             (cons g$e$7634$Of4HK g$e*$7635$Of4HK)
                             g$r$7629$Of4HK
                             g$mr$7630$Of4HK))
                         (g$build-void$6853$Of4HK))))
                    g$ls/false$7632$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7631$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$7631$Of4HK
               '(_ any any . each-any)))))
         g$e$7628$Of4HK))))
   (g$unless-transformer$7153$Of4HK
     g$unless-transformer$10585$Of4HK
     (case-lambda
       ((g$e$7636$Of4HK g$r$7637$Of4HK g$mr$7638$Of4HK)
        ((case-lambda
           ((g$t$7639$Of4HK)
            ((case-lambda
               ((g$ls/false$7640$Of4HK)
                (if g$ls/false$7640$Of4HK
                  (apply
                    (case-lambda
                      ((g$test$7641$Of4HK g$e$7642$Of4HK g$e*$7643$Of4HK)
                       (list
                         'if
                         (g$chi-expr$7214$Of4HK
                           g$test$7641$Of4HK
                           g$r$7637$Of4HK
                           g$mr$7638$Of4HK)
                         (g$build-void$6853$Of4HK)
                         (g$build-sequence$6852$Of4HK
                           '#f
                           (g$chi-expr*$7212$Of4HK
                             (cons g$e$7642$Of4HK g$e*$7643$Of4HK)
                             g$r$7637$Of4HK
                             g$mr$7638$Of4HK)))))
                    g$ls/false$7640$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7639$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$7639$Of4HK
               '(_ any any . each-any)))))
         g$e$7636$Of4HK))))
   (g$if-transformer$7154$Of4HK
     g$if-transformer$10586$Of4HK
     (case-lambda
       ((g$e$7644$Of4HK g$r$7645$Of4HK g$mr$7646$Of4HK)
        ((case-lambda
           ((g$t$7647$Of4HK)
            ((case-lambda
               ((g$ls/false$7648$Of4HK)
                (if g$ls/false$7648$Of4HK
                  (apply
                    (case-lambda
                      ((g$e0$7649$Of4HK g$e1$7650$Of4HK g$e2$7651$Of4HK)
                       (list
                         'if
                         (g$chi-expr$7214$Of4HK
                           g$e0$7649$Of4HK
                           g$r$7645$Of4HK
                           g$mr$7646$Of4HK)
                         (g$chi-expr$7214$Of4HK
                           g$e1$7650$Of4HK
                           g$r$7645$Of4HK
                           g$mr$7646$Of4HK)
                         (g$chi-expr$7214$Of4HK
                           g$e2$7651$Of4HK
                           g$r$7645$Of4HK
                           g$mr$7646$Of4HK))))
                    g$ls/false$7648$Of4HK)
                  ((case-lambda
                     ((g$t$7652$Of4HK)
                      ((case-lambda
                         ((g$ls/false$7653$Of4HK)
                          (if g$ls/false$7653$Of4HK
                            (apply
                              (case-lambda
                                ((g$e0$7654$Of4HK g$e1$7655$Of4HK)
                                 (list
                                   'if
                                   (g$chi-expr$7214$Of4HK
                                     g$e0$7654$Of4HK
                                     g$r$7645$Of4HK
                                     g$mr$7646$Of4HK)
                                   (g$chi-expr$7214$Of4HK
                                     g$e1$7655$Of4HK
                                     g$r$7645$Of4HK
                                     g$mr$7646$Of4HK)
                                   (g$build-void$6853$Of4HK))))
                              g$ls/false$7653$Of4HK)
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"invalid syntax"
                              g$t$7652$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$7652$Of4HK
                         '(_ any any)))))
                   g$t$7647$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$7647$Of4HK '(_ any any any)))))
         g$e$7644$Of4HK))))
   (g$case-transformer$7155$Of4HK
     g$case-transformer$10587$Of4HK
     (case-lambda
       ((g$e$7656$Of4HK g$r$7657$Of4HK g$mr$7658$Of4HK)
        (letrec* ((g$build-one$7659$Of4HK
                    (case-lambda
                      ((g$t$7688$Of4HK g$cls$7689$Of4HK g$rest$7690$Of4HK)
                       ((case-lambda
                          ((g$t$7691$Of4HK)
                           ((case-lambda
                              ((g$ls/false$7692$Of4HK)
                               (if g$ls/false$7692$Of4HK
                                 (apply
                                   (case-lambda
                                     ((g$d*$7693$Of4HK
                                        g$e$7694$Of4HK
                                        g$e*$7695$Of4HK)
                                      (list
                                        'if
                                        ((case-lambda
                                           ((g$data$7696$Of4HK)
                                            (if (= '1
                                                   (length g$data$7696$Of4HK))
                                              (list
                                                '(primitive eqv?)
                                                g$t$7688$Of4HK
                                                (list
                                                  'quote
                                                  (car g$data$7696$Of4HK)))
                                              (list
                                                '(primitive memv)
                                                g$t$7688$Of4HK
                                                (list
                                                  'quote
                                                  g$data$7696$Of4HK)))))
                                         (g$stx->datum$6929$Of4HK
                                           g$d*$7693$Of4HK))
                                        (g$build-sequence$6852$Of4HK
                                          '#f
                                          (g$chi-expr*$7212$Of4HK
                                            (cons
                                              g$e$7694$Of4HK
                                              g$e*$7695$Of4HK)
                                            g$r$7657$Of4HK
                                            g$mr$7658$Of4HK))
                                        g$rest$7690$Of4HK)))
                                   g$ls/false$7692$Of4HK)
                                 ((case-lambda
                                    ((g$t$7697$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$7698$Of4HK)
                                         (if g$ls/false$7698$Of4HK
                                           (apply
                                             (case-lambda
                                               ((g$else$7699$Of4HK)
                                                (g$syntax-violation$7302$Of4HK
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$7656$Of4HK)))
                                             g$ls/false$7698$Of4HK)
                                           (g$syntax-violation$7302$Of4HK
                                             '#f
                                             '"invalid syntax"
                                             g$t$7697$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$7697$Of4HK
                                        'any))))
                                  g$t$7691$Of4HK))))
                            (g$syntax-dispatch$7196$Of4HK
                              g$t$7691$Of4HK
                              '(each-any any . each-any)))))
                        g$cls$7689$Of4HK))))
                  (g$build-last$7660$Of4HK
                    (case-lambda
                      ((g$t$7673$Of4HK g$cls$7674$Of4HK)
                       ((case-lambda
                          ((g$t$7675$Of4HK)
                           ((case-lambda
                              ((g$ls/false$7676$Of4HK)
                               (if g$ls/false$7676$Of4HK
                                 (apply
                                   (case-lambda
                                     ((g$d*$7677$Of4HK
                                        g$e$7678$Of4HK
                                        g$e*$7679$Of4HK)
                                      (g$build-one$7659$Of4HK
                                        g$t$7673$Of4HK
                                        g$cls$7674$Of4HK
                                        (g$build-void$6853$Of4HK))))
                                   g$ls/false$7676$Of4HK)
                                 ((case-lambda
                                    ((g$t$7680$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$7681$Of4HK)
                                         (if g$ls/false$7681$Of4HK
                                           (apply
                                             (case-lambda
                                               ((g$else-kwd$7682$Of4HK
                                                  g$x$7683$Of4HK
                                                  g$x*$7684$Of4HK)
                                                (if (if (g$id?$6918$Of4HK
                                                          g$else-kwd$7682$Of4HK)
                                                      (begin
                                                        '#f
                                                        (g$free-id=?$6922$Of4HK
                                                          g$else-kwd$7682$Of4HK
                                                          (g$scheme-stx$7139$Of4HK
                                                            'else)))
                                                      '#f)
                                                  (g$build-sequence$6852$Of4HK
                                                    '#f
                                                    (g$chi-expr*$7212$Of4HK
                                                      (cons
                                                        g$x$7683$Of4HK
                                                        g$x*$7684$Of4HK)
                                                      g$r$7657$Of4HK
                                                      g$mr$7658$Of4HK))
                                                  (g$syntax-violation$7302$Of4HK
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$7656$Of4HK))))
                                             g$ls/false$7681$Of4HK)
                                           ((case-lambda
                                              ((g$t$7685$Of4HK)
                                               ((case-lambda
                                                  ((g$ls/false$7686$Of4HK)
                                                   (if g$ls/false$7686$Of4HK
                                                     (apply
                                                       (case-lambda
                                                         ((g$else$7687$Of4HK)
                                                          (g$syntax-violation$7302$Of4HK
                                                            '#f
                                                            '"invalid syntax"
                                                            g$e$7656$Of4HK)))
                                                       g$ls/false$7686$Of4HK)
                                                     (g$syntax-violation$7302$Of4HK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$7685$Of4HK))))
                                                (g$syntax-dispatch$7196$Of4HK
                                                  g$t$7685$Of4HK
                                                  'any))))
                                            g$t$7680$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$7680$Of4HK
                                        '(any any . each-any)))))
                                  g$t$7675$Of4HK))))
                            (g$syntax-dispatch$7196$Of4HK
                              g$t$7675$Of4HK
                              '(each-any any . each-any)))))
                        g$cls$7674$Of4HK)))))
          ((case-lambda
             ((g$t$7661$Of4HK)
              ((case-lambda
                 ((g$ls/false$7662$Of4HK)
                  (if g$ls/false$7662$Of4HK
                    (apply
                      (case-lambda
                        ((g$expr$7663$Of4HK)
                         (g$build-sequence$6852$Of4HK
                           '#f
                           (list
                             (g$chi-expr$7214$Of4HK
                               g$expr$7663$Of4HK
                               g$r$7657$Of4HK
                               g$mr$7658$Of4HK)
                             (g$build-void$6853$Of4HK)))))
                      g$ls/false$7662$Of4HK)
                    ((case-lambda
                       ((g$t$7664$Of4HK)
                        ((case-lambda
                           ((g$ls/false$7665$Of4HK)
                            (if g$ls/false$7665$Of4HK
                              (apply
                                (case-lambda
                                  ((g$expr$7666$Of4HK
                                     g$cls$7667$Of4HK
                                     g$cls*$7668$Of4HK)
                                   ((case-lambda
                                      ((g$t$7669$Of4HK)
                                       (g$build-let$6851$Of4HK
                                         '#f
                                         (list g$t$7669$Of4HK)
                                         (list
                                           (g$chi-expr$7214$Of4HK
                                             g$expr$7666$Of4HK
                                             g$r$7657$Of4HK
                                             g$mr$7658$Of4HK))
                                         ((letrec ((g$f$7670$Of4HK
                                                     (case-lambda
                                                       ((g$cls$7671$Of4HK
                                                          g$cls*$7672$Of4HK)
                                                        (if (null?
                                                              g$cls*$7672$Of4HK)
                                                          (g$build-last$7660$Of4HK
                                                            g$t$7669$Of4HK
                                                            g$cls$7671$Of4HK)
                                                          (g$build-one$7659$Of4HK
                                                            g$t$7669$Of4HK
                                                            g$cls$7671$Of4HK
                                                            (g$f$7670$Of4HK
                                                              (car g$cls*$7672$Of4HK)
                                                              (cdr g$cls*$7672$Of4HK))))))))
                                            g$f$7670$Of4HK)
                                          g$cls$7667$Of4HK
                                          g$cls*$7668$Of4HK))))
                                    (g$gen-lexical$6862$Of4HK 't))))
                                g$ls/false$7665$Of4HK)
                              (g$syntax-violation$7302$Of4HK
                                '#f
                                '"invalid syntax"
                                g$t$7664$Of4HK))))
                         (g$syntax-dispatch$7196$Of4HK
                           g$t$7664$Of4HK
                           '(_ any any . each-any)))))
                     g$t$7661$Of4HK))))
               (g$syntax-dispatch$7196$Of4HK g$t$7661$Of4HK '(_ any)))))
           g$e$7656$Of4HK)))))
   (g$quote-transformer$7156$Of4HK
     g$quote-transformer$10588$Of4HK
     (case-lambda
       ((g$e$7700$Of4HK g$r$7701$Of4HK g$mr$7702$Of4HK)
        ((case-lambda
           ((g$t$7703$Of4HK)
            ((case-lambda
               ((g$ls/false$7704$Of4HK)
                (if g$ls/false$7704$Of4HK
                  (apply
                    (case-lambda
                      ((g$datum$7705$Of4HK)
                       (list
                         'quote
                         (g$stx->datum$6929$Of4HK g$datum$7705$Of4HK))))
                    g$ls/false$7704$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7703$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$7703$Of4HK '(_ any)))))
         g$e$7700$Of4HK))))
   (g$case-lambda-transformer$7157$Of4HK
     g$case-lambda-transformer$10589$Of4HK
     (case-lambda
       ((g$e$7706$Of4HK g$r$7707$Of4HK g$mr$7708$Of4HK)
        ((case-lambda
           ((g$t$7709$Of4HK)
            ((case-lambda
               ((g$ls/false$7710$Of4HK)
                (if g$ls/false$7710$Of4HK
                  (apply
                    (case-lambda
                      ((g$fmls*$7711$Of4HK g$b*$7712$Of4HK g$b**$7713$Of4HK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7218$Of4HK
                              g$e$7706$Of4HK
                              g$fmls*$7711$Of4HK
                              (map cons g$b*$7712$Of4HK g$b**$7713$Of4HK)
                              g$r$7707$Of4HK
                              g$mr$7708$Of4HK)))
                         (case-lambda
                           ((g$fmls*$7716$Of4HK g$body*$7717$Of4HK)
                            ((case-lambda
                               ((g$body*$7718$Of4HK g$fmls*$7719$Of4HK)
                                (g$build-case-lambda$6850$Of4HK
                                  '#f
                                  g$fmls*$7719$Of4HK
                                  g$body*$7718$Of4HK)))
                             g$body*$7717$Of4HK
                             g$fmls*$7716$Of4HK))))))
                    g$ls/false$7710$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7709$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$7709$Of4HK
               '(_ . #(each (any any . each-any)))))))
         g$e$7706$Of4HK))))
   (g$lambda-transformer$7158$Of4HK
     g$lambda-transformer$10590$Of4HK
     (case-lambda
       ((g$e$7720$Of4HK g$r$7721$Of4HK g$mr$7722$Of4HK)
        ((case-lambda
           ((g$t$7723$Of4HK)
            ((case-lambda
               ((g$ls/false$7724$Of4HK)
                (if g$ls/false$7724$Of4HK
                  (apply
                    (case-lambda
                      ((g$fmls$7725$Of4HK g$b$7726$Of4HK g$b*$7727$Of4HK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7217$Of4HK
                              g$e$7720$Of4HK
                              g$fmls$7725$Of4HK
                              (cons g$b$7726$Of4HK g$b*$7727$Of4HK)
                              g$r$7721$Of4HK
                              g$mr$7722$Of4HK)))
                         (case-lambda
                           ((g$fmls$7730$Of4HK g$body$7731$Of4HK)
                            ((case-lambda
                               ((g$body$7732$Of4HK g$fmls$7733$Of4HK)
                                (g$build-lambda$6849$Of4HK
                                  '#f
                                  g$fmls$7733$Of4HK
                                  g$body$7732$Of4HK)))
                             g$body$7731$Of4HK
                             g$fmls$7730$Of4HK))))))
                    g$ls/false$7724$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7723$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$7723$Of4HK
               '(_ any any . each-any)))))
         g$e$7720$Of4HK))))
   (g$bless$7159$Of4HK
     g$bless$10591$Of4HK
     (case-lambda
       ((g$x$7734$Of4HK)
        (g$mkstx$6906$Of4HK
          ((letrec ((g$f$7735$Of4HK
                      (case-lambda
                        ((g$x$7736$Of4HK)
                         (if (g$stx?$6890$Of4HK g$x$7736$Of4HK)
                           g$x$7736$Of4HK
                           (if (pair? g$x$7736$Of4HK)
                             (cons
                               (g$f$7735$Of4HK (car g$x$7736$Of4HK))
                               (g$f$7735$Of4HK (cdr g$x$7736$Of4HK)))
                             (if (symbol? g$x$7736$Of4HK)
                               (g$scheme-stx$7139$Of4HK g$x$7736$Of4HK)
                               (if (vector? g$x$7736$Of4HK)
                                 (vector-map g$f$7735$Of4HK g$x$7736$Of4HK)
                                 g$x$7736$Of4HK))))))))
             g$f$7735$Of4HK)
           g$x$7734$Of4HK)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7160$Of4HK
     g$with-syntax-macro$10592$Of4HK
     (case-lambda
       ((g$e$7737$Of4HK)
        ((case-lambda
           ((g$t$7738$Of4HK)
            ((case-lambda
               ((g$ls/false$7739$Of4HK)
                (if g$ls/false$7739$Of4HK
                  (apply
                    (case-lambda
                      ((g$pat*$7740$Of4HK
                         g$expr*$7741$Of4HK
                         g$b$7742$Of4HK
                         g$b*$7743$Of4HK)
                       ((case-lambda
                          ((g$idn*$7744$Of4HK)
                           (begin
                             (g$verify-formals$7216$Of4HK
                               (map car g$idn*$7744$Of4HK)
                               g$e$7737$Of4HK)
                             ((case-lambda
                                ((g$t*$7745$Of4HK)
                                 (g$bless$7159$Of4HK
                                   (list
                                     'let
                                     (map list
                                          g$t*$7745$Of4HK
                                          g$expr*$7741$Of4HK)
                                     ((letrec ((g$f$7746$Of4HK
                                                 (case-lambda
                                                   ((g$pat*$7747$Of4HK
                                                      g$t*$7748$Of4HK)
                                                    (if (null?
                                                          g$pat*$7747$Of4HK)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$7742$Of4HK
                                                            g$b*$7743$Of4HK)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$7748$Of4HK)
                                                        '()
                                                        (list
                                                          (car g$pat*$7747$Of4HK)
                                                          (g$f$7746$Of4HK
                                                            (cdr g$pat*$7747$Of4HK)
                                                            (cdr g$t*$7748$Of4HK)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$7747$Of4HK))
                                                            (car g$t*$7748$Of4HK)))))))))
                                        g$f$7746$Of4HK)
                                      g$pat*$7740$Of4HK
                                      g$t*$7745$Of4HK)))))
                              (g$generate-temporaries$7295$Of4HK
                                g$expr*$7741$Of4HK)))))
                        ((letrec ((g$f$7749$Of4HK
                                    (case-lambda
                                      ((g$pat*$7750$Of4HK)
                                       (if (null? g$pat*$7750$Of4HK)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7195$Of4HK
                                                (car g$pat*$7750$Of4HK)
                                                '())))
                                           (case-lambda
                                             ((g$pat$7753$Of4HK
                                                g$idn*$7754$Of4HK)
                                              ((case-lambda
                                                 ((g$idn*$7755$Of4HK
                                                    g$pat$7756$Of4HK)
                                                  (append
                                                    g$idn*$7755$Of4HK
                                                    (g$f$7749$Of4HK
                                                      (cdr g$pat*$7750$Of4HK)))))
                                               g$idn*$7754$Of4HK
                                               g$pat$7753$Of4HK)))))))))
                           g$f$7749$Of4HK)
                         g$pat*$7740$Of4HK))))
                    g$ls/false$7739$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7738$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$7738$Of4HK
               '(_ #(each (any any)) any . each-any)))))
         g$e$7737$Of4HK))))
   (g$invalid-fmls-error$7161$Of4HK
     g$invalid-fmls-error$10593$Of4HK
     (case-lambda
       ((g$stx$7757$Of4HK g$fmls$7758$Of4HK)
        ((case-lambda
           ((g$t$7759$Of4HK)
            ((case-lambda
               ((g$ls/false$7760$Of4HK)
                (if g$ls/false$7760$Of4HK
                  (apply
                    (case-lambda
                      ((g$id*$7761$Of4HK g$last$7762$Of4HK)
                       ((letrec ((g$f$7763$Of4HK
                                   (case-lambda
                                     ((g$id*$7764$Of4HK)
                                      (if (null? g$id*$7764$Of4HK)
                                        (values)
                                        (if (not (g$id?$6918$Of4HK
                                                   (car g$id*$7764$Of4HK)))
                                          (g$syntax-violation$7302$Of4HK
                                            '#f
                                            '"not an identifier"
                                            g$stx$7757$Of4HK
                                            (car g$id*$7764$Of4HK))
                                          (begin
                                            (g$f$7763$Of4HK
                                              (cdr g$id*$7764$Of4HK))
                                            (if (g$bound-id-member?$6925$Of4HK
                                                  (car g$id*$7764$Of4HK)
                                                  (cdr g$id*$7764$Of4HK))
                                              (g$syntax-violation$7302$Of4HK
                                                '#f
                                                '"duplicate binding"
                                                g$stx$7757$Of4HK
                                                (car g$id*$7764$Of4HK))
                                              (void)))))))))
                          g$f$7763$Of4HK)
                        (if (g$id?$6918$Of4HK g$last$7762$Of4HK)
                          (cons g$last$7762$Of4HK g$id*$7761$Of4HK)
                          (if (g$syntax-null?$6913$Of4HK g$last$7762$Of4HK)
                            g$id*$7761$Of4HK
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"not an identifier"
                              g$stx$7757$Of4HK
                              g$last$7762$Of4HK))))))
                    g$ls/false$7760$Of4HK)
                  ((case-lambda
                     ((g$t$7765$Of4HK)
                      ((case-lambda
                         ((g$ls/false$7766$Of4HK)
                          (if g$ls/false$7766$Of4HK
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7302$Of4HK
                                   '#f
                                   '"malformed binding form"
                                   g$stx$7757$Of4HK
                                   g$fmls$7758$Of4HK)))
                              g$ls/false$7766$Of4HK)
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"invalid syntax"
                              g$t$7765$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK g$t$7765$Of4HK '_))))
                   g$t$7759$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$7759$Of4HK
               '#(each+ any () any)))))
         g$fmls$7758$Of4HK))))
   (g$let-macro$7162$Of4HK
     g$let-macro$10594$Of4HK
     (case-lambda
       ((g$stx$7767$Of4HK)
        ((case-lambda
           ((g$t$7768$Of4HK)
            ((case-lambda
               ((g$ls/false$7769$Of4HK)
                (if g$ls/false$7769$Of4HK
                  (apply
                    (case-lambda
                      ((g$lhs*$7770$Of4HK
                         g$rhs*$7771$Of4HK
                         g$b$7772$Of4HK
                         g$b*$7773$Of4HK)
                       (if (g$valid-bound-ids?$6923$Of4HK g$lhs*$7770$Of4HK)
                         (g$bless$7159$Of4HK
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$7770$Of4HK
                                 (cons g$b$7772$Of4HK g$b*$7773$Of4HK)))
                             g$rhs*$7771$Of4HK))
                         (g$invalid-fmls-error$7161$Of4HK
                           g$stx$7767$Of4HK
                           g$lhs*$7770$Of4HK))))
                    g$ls/false$7769$Of4HK)
                  ((case-lambda
                     ((g$t$7774$Of4HK)
                      ((case-lambda
                         ((g$ls/false$7775$Of4HK)
                          (if (if g$ls/false$7775$Of4HK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$7776$Of4HK
                                         g$lhs*$7777$Of4HK
                                         g$rhs*$7778$Of4HK
                                         g$b$7779$Of4HK
                                         g$b*$7780$Of4HK)
                                       (g$id?$6918$Of4HK g$f$7776$Of4HK)))
                                    g$ls/false$7775$Of4HK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$7781$Of4HK
                                   g$lhs*$7782$Of4HK
                                   g$rhs*$7783$Of4HK
                                   g$b$7784$Of4HK
                                   g$b*$7785$Of4HK)
                                 (if (g$valid-bound-ids?$6923$Of4HK
                                       g$lhs*$7782$Of4HK)
                                   (g$bless$7159$Of4HK
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$7781$Of4HK
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$7782$Of4HK
                                                 (cons
                                                   g$b$7784$Of4HK
                                                   g$b*$7785$Of4HK)))))
                                         g$f$7781$Of4HK)
                                       g$rhs*$7783$Of4HK))
                                   (g$invalid-fmls-error$7161$Of4HK
                                     g$stx$7767$Of4HK
                                     g$lhs*$7782$Of4HK))))
                              g$ls/false$7775$Of4HK)
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"invalid syntax"
                              g$t$7774$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$7774$Of4HK
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$7768$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$7768$Of4HK
               '(_ #(each (any any)) any . each-any)))))
         g$stx$7767$Of4HK))))
   (g$let-values-macro$7163$Of4HK
     g$let-values-macro$10595$Of4HK
     (case-lambda
       ((g$stx$7786$Of4HK)
        (letrec* ((g$rename$7787$Of4HK
                    (case-lambda
                      ((g$x$7838$Of4HK g$old*$7839$Of4HK g$new*$7840$Of4HK)
                       (begin
                         (if (g$id?$6918$Of4HK g$x$7838$Of4HK)
                           (void)
                           (g$syntax-violation$7302$Of4HK
                             '#f
                             '"not an indentifier"
                             g$stx$7786$Of4HK
                             g$x$7838$Of4HK))
                         (if (g$bound-id-member?$6925$Of4HK
                               g$x$7838$Of4HK
                               g$old*$7839$Of4HK)
                           (g$syntax-violation$7302$Of4HK
                             '#f
                             '"duplicate binding"
                             g$stx$7786$Of4HK
                             g$x$7838$Of4HK)
                           (void))
                         ((case-lambda
                            ((g$y$7841$Of4HK)
                             (values
                               g$y$7841$Of4HK
                               (cons g$x$7838$Of4HK g$old*$7839$Of4HK)
                               (cons g$y$7841$Of4HK g$new*$7840$Of4HK))))
                          (gensym
                            (g$syntax->datum$7305$Of4HK g$x$7838$Of4HK)))))))
                  (g$rename*$7788$Of4HK
                    (case-lambda
                      ((g$x*$7829$Of4HK g$old*$7830$Of4HK g$new*$7831$Of4HK)
                       (if (null? g$x*$7829$Of4HK)
                         (values '() g$old*$7830$Of4HK g$new*$7831$Of4HK)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$7787$Of4HK
                                (car g$x*$7829$Of4HK)
                                g$old*$7830$Of4HK
                                g$new*$7831$Of4HK)))
                           (case-lambda
                             ((g$x$7832$Of4HK
                                g$old*$7833$Of4HK
                                g$new*$7834$Of4HK)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$7788$Of4HK
                                     (cdr g$x*$7829$Of4HK)
                                     g$old*$7833$Of4HK
                                     g$new*$7834$Of4HK)))
                                (case-lambda
                                  ((g$x*$7835$Of4HK
                                     g$old*$7836$Of4HK
                                     g$new*$7837$Of4HK)
                                   (values
                                     (cons g$x$7832$Of4HK g$x*$7835$Of4HK)
                                     g$old*$7836$Of4HK
                                     g$new*$7837$Of4HK))))))))))))
          ((case-lambda
             ((g$t$7789$Of4HK)
              ((case-lambda
                 ((g$ls/false$7790$Of4HK)
                  (if g$ls/false$7790$Of4HK
                    (apply
                      (case-lambda
                        ((g$b$7791$Of4HK g$b*$7792$Of4HK)
                         (g$cons*$5349$Of4HK
                           (g$bless$7159$Of4HK 'let)
                           '()
                           g$b$7791$Of4HK
                           g$b*$7792$Of4HK)))
                      g$ls/false$7790$Of4HK)
                    ((case-lambda
                       ((g$t$7793$Of4HK)
                        ((case-lambda
                           ((g$ls/false$7794$Of4HK)
                            (if g$ls/false$7794$Of4HK
                              (apply
                                (case-lambda
                                  ((g$lhs*$7795$Of4HK
                                     g$rhs*$7796$Of4HK
                                     g$b$7797$Of4HK
                                     g$b*$7798$Of4HK)
                                   (g$bless$7159$Of4HK
                                     ((letrec ((g$f$7799$Of4HK
                                                 (case-lambda
                                                   ((g$lhs*$7800$Of4HK
                                                      g$rhs*$7801$Of4HK
                                                      g$old*$7802$Of4HK
                                                      g$new*$7803$Of4HK)
                                                    (if (null?
                                                          g$lhs*$7800$Of4HK)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$7802$Of4HK
                                                               g$new*$7803$Of4HK)
                                                          (cons
                                                            g$b$7797$Of4HK
                                                            g$b*$7798$Of4HK)))
                                                      ((case-lambda
                                                         ((g$t$7804$Of4HK)
                                                          ((case-lambda
                                                             ((g$ls/false$7805$Of4HK)
                                                              (if g$ls/false$7805$Of4HK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$7806$Of4HK)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$7788$Of4HK
                                                                            g$x*$7806$Of4HK
                                                                            g$old*$7802$Of4HK
                                                                            g$new*$7803$Of4HK)))
                                                                       (case-lambda
                                                                         ((g$y*$7810$Of4HK
                                                                            g$old*$7811$Of4HK
                                                                            g$new*$7812$Of4HK)
                                                                          ((case-lambda
                                                                             ((g$new*$7813$Of4HK
                                                                                g$old*$7814$Of4HK
                                                                                g$y*$7815$Of4HK)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$7801$Of4HK))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$7815$Of4HK
                                                                                  (g$f$7799$Of4HK
                                                                                    (cdr g$lhs*$7800$Of4HK)
                                                                                    (cdr g$rhs*$7801$Of4HK)
                                                                                    g$old*$7814$Of4HK
                                                                                    g$new*$7813$Of4HK)))))
                                                                           g$new*$7812$Of4HK
                                                                           g$old*$7811$Of4HK
                                                                           g$y*$7810$Of4HK))))))
                                                                  g$ls/false$7805$Of4HK)
                                                                ((case-lambda
                                                                   ((g$t$7816$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$7817$Of4HK)
                                                                        (if g$ls/false$7817$Of4HK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$7818$Of4HK
                                                                                 g$x$7819$Of4HK)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$7787$Of4HK
                                                                                      g$x$7819$Of4HK
                                                                                      g$old*$7802$Of4HK
                                                                                      g$new*$7803$Of4HK)))
                                                                                 (case-lambda
                                                                                   ((g$y$7820$Of4HK
                                                                                      g$old*$7821$Of4HK
                                                                                      g$new*$7822$Of4HK)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$7788$Of4HK
                                                                                           g$x*$7818$Of4HK
                                                                                           g$old*$7821$Of4HK
                                                                                           g$new*$7822$Of4HK)))
                                                                                      (case-lambda
                                                                                        ((g$y*$7823$Of4HK
                                                                                           g$old*$7824$Of4HK
                                                                                           g$new*$7825$Of4HK)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$7801$Of4HK))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$7823$Of4HK
                                                                                               g$y$7820$Of4HK)
                                                                                             (g$f$7799$Of4HK
                                                                                               (cdr g$lhs*$7800$Of4HK)
                                                                                               (cdr g$rhs*$7801$Of4HK)
                                                                                               g$old*$7824$Of4HK
                                                                                               g$new*$7825$Of4HK)))))))))))
                                                                            g$ls/false$7817$Of4HK)
                                                                          ((case-lambda
                                                                             ((g$t$7826$Of4HK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$7827$Of4HK)
                                                                                  (if g$ls/false$7827$Of4HK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$7828$Of4HK)
                                                                                         (g$syntax-violation$7302$Of4HK
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$7786$Of4HK
                                                                                           g$others$7828$Of4HK)))
                                                                                      g$ls/false$7827$Of4HK)
                                                                                    (g$syntax-violation$7302$Of4HK
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$7826$Of4HK))))
                                                                               (g$syntax-dispatch$7196$Of4HK
                                                                                 g$t$7826$Of4HK
                                                                                 'any))))
                                                                           g$t$7816$Of4HK))))
                                                                     (g$syntax-dispatch$7196$Of4HK
                                                                       g$t$7816$Of4HK
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$7804$Of4HK))))
                                                           (g$syntax-dispatch$7196$Of4HK
                                                             g$t$7804$Of4HK
                                                             'each-any))))
                                                       (car g$lhs*$7800$Of4HK)))))))
                                        g$f$7799$Of4HK)
                                      g$lhs*$7795$Of4HK
                                      g$rhs*$7796$Of4HK
                                      '()
                                      '()))))
                                g$ls/false$7794$Of4HK)
                              (g$syntax-violation$7302$Of4HK
                                '#f
                                '"invalid syntax"
                                g$t$7793$Of4HK))))
                         (g$syntax-dispatch$7196$Of4HK
                           g$t$7793$Of4HK
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$7789$Of4HK))))
               (g$syntax-dispatch$7196$Of4HK
                 g$t$7789$Of4HK
                 '(_ () any . each-any)))))
           g$stx$7786$Of4HK)))))
   (g$let*-values-macro$7164$Of4HK
     g$let*-values-macro$10596$Of4HK
     (case-lambda
       ((g$stx$7842$Of4HK)
        (letrec* ((g$check$7843$Of4HK
                    (case-lambda
                      ((g$x*$7867$Of4HK)
                       (if (null? g$x*$7867$Of4HK)
                         (void)
                         ((case-lambda
                            ((g$x$7868$Of4HK)
                             (begin
                               (if (g$id?$6918$Of4HK g$x$7868$Of4HK)
                                 (void)
                                 (g$syntax-violation$7302$Of4HK
                                   '#f
                                   '"not an identifier"
                                   g$stx$7842$Of4HK
                                   g$x$7868$Of4HK))
                               (g$check$7843$Of4HK (cdr g$x*$7867$Of4HK))
                               (if (g$bound-id-member?$6925$Of4HK
                                     g$x$7868$Of4HK
                                     (cdr g$x*$7867$Of4HK))
                                 (g$syntax-violation$7302$Of4HK
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$7842$Of4HK
                                   g$x$7868$Of4HK)
                                 (void)))))
                          (car g$x*$7867$Of4HK)))))))
          ((case-lambda
             ((g$t$7844$Of4HK)
              ((case-lambda
                 ((g$ls/false$7845$Of4HK)
                  (if g$ls/false$7845$Of4HK
                    (apply
                      (case-lambda
                        ((g$b$7846$Of4HK g$b*$7847$Of4HK)
                         (g$cons*$5349$Of4HK
                           (g$bless$7159$Of4HK 'let)
                           '()
                           g$b$7846$Of4HK
                           g$b*$7847$Of4HK)))
                      g$ls/false$7845$Of4HK)
                    ((case-lambda
                       ((g$t$7848$Of4HK)
                        ((case-lambda
                           ((g$ls/false$7849$Of4HK)
                            (if g$ls/false$7849$Of4HK
                              (apply
                                (case-lambda
                                  ((g$lhs*$7850$Of4HK
                                     g$rhs*$7851$Of4HK
                                     g$b$7852$Of4HK
                                     g$b*$7853$Of4HK)
                                   (g$bless$7159$Of4HK
                                     ((letrec ((g$f$7854$Of4HK
                                                 (case-lambda
                                                   ((g$lhs*$7855$Of4HK
                                                      g$rhs*$7856$Of4HK)
                                                    (if (null?
                                                          g$lhs*$7855$Of4HK)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$7852$Of4HK
                                                          g$b*$7853$Of4HK))
                                                      ((case-lambda
                                                         ((g$t$7857$Of4HK)
                                                          ((case-lambda
                                                             ((g$ls/false$7858$Of4HK)
                                                              (if g$ls/false$7858$Of4HK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$7859$Of4HK)
                                                                     (begin
                                                                       (g$check$7843$Of4HK
                                                                         g$x*$7859$Of4HK)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$7856$Of4HK))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$7859$Of4HK
                                                                           (g$f$7854$Of4HK
                                                                             (cdr g$lhs*$7855$Of4HK)
                                                                             (cdr g$rhs*$7856$Of4HK)))))))
                                                                  g$ls/false$7858$Of4HK)
                                                                ((case-lambda
                                                                   ((g$t$7860$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$7861$Of4HK)
                                                                        (if g$ls/false$7861$Of4HK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$7862$Of4HK
                                                                                 g$x$7863$Of4HK)
                                                                               (begin
                                                                                 (g$check$7843$Of4HK
                                                                                   (cons
                                                                                     g$x$7863$Of4HK
                                                                                     g$x*$7862$Of4HK))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$7856$Of4HK))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$7862$Of4HK
                                                                                       g$x$7863$Of4HK)
                                                                                     (g$f$7854$Of4HK
                                                                                       (cdr g$lhs*$7855$Of4HK)
                                                                                       (cdr g$rhs*$7856$Of4HK)))))))
                                                                            g$ls/false$7861$Of4HK)
                                                                          ((case-lambda
                                                                             ((g$t$7864$Of4HK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$7865$Of4HK)
                                                                                  (if g$ls/false$7865$Of4HK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$7866$Of4HK)
                                                                                         (g$syntax-violation$7302$Of4HK
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$7842$Of4HK
                                                                                           g$others$7866$Of4HK)))
                                                                                      g$ls/false$7865$Of4HK)
                                                                                    (g$syntax-violation$7302$Of4HK
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$7864$Of4HK))))
                                                                               (g$syntax-dispatch$7196$Of4HK
                                                                                 g$t$7864$Of4HK
                                                                                 'any))))
                                                                           g$t$7860$Of4HK))))
                                                                     (g$syntax-dispatch$7196$Of4HK
                                                                       g$t$7860$Of4HK
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$7857$Of4HK))))
                                                           (g$syntax-dispatch$7196$Of4HK
                                                             g$t$7857$Of4HK
                                                             'each-any))))
                                                       (car g$lhs*$7855$Of4HK)))))))
                                        g$f$7854$Of4HK)
                                      g$lhs*$7850$Of4HK
                                      g$rhs*$7851$Of4HK))))
                                g$ls/false$7849$Of4HK)
                              (g$syntax-violation$7302$Of4HK
                                '#f
                                '"invalid syntax"
                                g$t$7848$Of4HK))))
                         (g$syntax-dispatch$7196$Of4HK
                           g$t$7848$Of4HK
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$7844$Of4HK))))
               (g$syntax-dispatch$7196$Of4HK
                 g$t$7844$Of4HK
                 '(_ () any . each-any)))))
           g$stx$7842$Of4HK)))))
   (g$trace-lambda-macro$7165$Of4HK
     g$trace-lambda-macro$10597$Of4HK
     (case-lambda
       ((g$stx$7869$Of4HK)
        ((case-lambda
           ((g$t$7870$Of4HK)
            ((case-lambda
               ((g$ls/false$7871$Of4HK)
                (if g$ls/false$7871$Of4HK
                  (apply
                    (case-lambda
                      ((g$who$7872$Of4HK
                         g$fmls$7873$Of4HK
                         g$b$7874$Of4HK
                         g$b*$7875$Of4HK)
                       (if (g$valid-bound-ids?$6923$Of4HK g$fmls$7873$Of4HK)
                         (g$bless$7159$Of4HK
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$7872$Of4HK)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$7873$Of4HK
                                 (cons g$b$7874$Of4HK g$b*$7875$Of4HK)))))
                         (g$invalid-fmls-error$7161$Of4HK
                           g$stx$7869$Of4HK
                           g$fmls$7873$Of4HK))))
                    g$ls/false$7871$Of4HK)
                  ((case-lambda
                     ((g$t$7876$Of4HK)
                      ((case-lambda
                         ((g$ls/false$7877$Of4HK)
                          (if g$ls/false$7877$Of4HK
                            (apply
                              (case-lambda
                                ((g$who$7878$Of4HK
                                   g$fmls$7879$Of4HK
                                   g$last$7880$Of4HK
                                   g$b$7881$Of4HK
                                   g$b*$7882$Of4HK)
                                 (if (g$valid-bound-ids?$6923$Of4HK
                                       (cons
                                         g$last$7880$Of4HK
                                         g$fmls$7879$Of4HK))
                                   (g$bless$7159$Of4HK
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$7878$Of4HK)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$7879$Of4HK
                                             g$last$7880$Of4HK)
                                           (cons
                                             g$b$7881$Of4HK
                                             g$b*$7882$Of4HK)))))
                                   (g$invalid-fmls-error$7161$Of4HK
                                     g$stx$7869$Of4HK
                                     (append
                                       g$fmls$7879$Of4HK
                                       g$last$7880$Of4HK)))))
                              g$ls/false$7877$Of4HK)
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"invalid syntax"
                              g$t$7876$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$7876$Of4HK
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$7870$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$7870$Of4HK
               '(_ any each-any any . each-any)))))
         g$stx$7869$Of4HK))))
   (g$trace-define-macro$7166$Of4HK
     g$trace-define-macro$10598$Of4HK
     (case-lambda
       ((g$stx$7883$Of4HK)
        ((case-lambda
           ((g$t$7884$Of4HK)
            ((case-lambda
               ((g$ls/false$7885$Of4HK)
                (if g$ls/false$7885$Of4HK
                  (apply
                    (case-lambda
                      ((g$who$7886$Of4HK
                         g$fmls$7887$Of4HK
                         g$b$7888$Of4HK
                         g$b*$7889$Of4HK)
                       (if (g$valid-bound-ids?$6923$Of4HK g$fmls$7887$Of4HK)
                         (g$bless$7159$Of4HK
                           (list
                             'define
                             g$who$7886$Of4HK
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$7886$Of4HK)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$7887$Of4HK
                                   (cons g$b$7888$Of4HK g$b*$7889$Of4HK))))))
                         (g$invalid-fmls-error$7161$Of4HK
                           g$stx$7883$Of4HK
                           g$fmls$7887$Of4HK))))
                    g$ls/false$7885$Of4HK)
                  ((case-lambda
                     ((g$t$7890$Of4HK)
                      ((case-lambda
                         ((g$ls/false$7891$Of4HK)
                          (if g$ls/false$7891$Of4HK
                            (apply
                              (case-lambda
                                ((g$who$7892$Of4HK
                                   g$fmls$7893$Of4HK
                                   g$last$7894$Of4HK
                                   g$b$7895$Of4HK
                                   g$b*$7896$Of4HK)
                                 (if (g$valid-bound-ids?$6923$Of4HK
                                       (cons
                                         g$last$7894$Of4HK
                                         g$fmls$7893$Of4HK))
                                   (g$bless$7159$Of4HK
                                     (list
                                       'define
                                       g$who$7892$Of4HK
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$7892$Of4HK)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$7893$Of4HK
                                               g$last$7894$Of4HK)
                                             (cons
                                               g$b$7895$Of4HK
                                               g$b*$7896$Of4HK))))))
                                   (g$invalid-fmls-error$7161$Of4HK
                                     g$stx$7883$Of4HK
                                     (append
                                       g$fmls$7893$Of4HK
                                       g$last$7894$Of4HK)))))
                              g$ls/false$7891$Of4HK)
                            ((case-lambda
                               ((g$t$7897$Of4HK)
                                ((case-lambda
                                   ((g$ls/false$7898$Of4HK)
                                    (if g$ls/false$7898$Of4HK
                                      (apply
                                        (case-lambda
                                          ((g$who$7899$Of4HK g$expr$7900$Of4HK)
                                           (if (g$id?$6918$Of4HK
                                                 g$who$7899$Of4HK)
                                             (g$bless$7159$Of4HK
                                               (list
                                                 'define
                                                 g$who$7899$Of4HK
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$7900$Of4HK))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$7899$Of4HK)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7302$Of4HK
                                               '#f
                                               '"invalid name"
                                               g$stx$7883$Of4HK))))
                                        g$ls/false$7898$Of4HK)
                                      (g$syntax-violation$7302$Of4HK
                                        '#f
                                        '"invalid syntax"
                                        g$t$7897$Of4HK))))
                                 (g$syntax-dispatch$7196$Of4HK
                                   g$t$7897$Of4HK
                                   '(_ any any)))))
                             g$t$7890$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$7890$Of4HK
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$7884$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$7884$Of4HK
               '(_ (any . each-any) any . each-any)))))
         g$stx$7883$Of4HK))))
   (g$trace-define-syntax-macro$7167$Of4HK
     g$trace-define-syntax-macro$10599$Of4HK
     (case-lambda
       ((g$stx$7901$Of4HK)
        ((case-lambda
           ((g$t$7902$Of4HK)
            ((case-lambda
               ((g$ls/false$7903$Of4HK)
                (if g$ls/false$7903$Of4HK
                  (apply
                    (case-lambda
                      ((g$who$7904$Of4HK g$expr$7905$Of4HK)
                       (if (g$id?$6918$Of4HK g$who$7904$Of4HK)
                         (g$bless$7159$Of4HK
                           (list
                             'define-syntax
                             g$who$7904$Of4HK
                             (list
                               'make-traced-macro
                               (list 'quote g$who$7904$Of4HK)
                               g$expr$7905$Of4HK)))
                         (g$syntax-violation$7302$Of4HK
                           '#f
                           '"invalid name"
                           g$stx$7901$Of4HK))))
                    g$ls/false$7903$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7902$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$7902$Of4HK '(_ any any)))))
         g$stx$7901$Of4HK))))
   (g$trace-let/rec-syntax$7168$Of4HK
     g$trace-let/rec-syntax$10600$Of4HK
     (case-lambda
       ((g$who$7906$Of4HK)
        (case-lambda
          ((g$stx$7907$Of4HK)
           ((case-lambda
              ((g$t$7908$Of4HK)
               ((case-lambda
                  ((g$ls/false$7909$Of4HK)
                   (if g$ls/false$7909$Of4HK
                     (apply
                       (case-lambda
                         ((g$lhs*$7910$Of4HK
                            g$rhs*$7911$Of4HK
                            g$b$7912$Of4HK
                            g$b*$7913$Of4HK)
                          (if (g$valid-bound-ids?$6923$Of4HK g$lhs*$7910$Of4HK)
                            ((case-lambda
                               ((g$rhs*$7914$Of4HK)
                                (g$bless$7159$Of4HK
                                  (cons
                                    g$who$7906$Of4HK
                                    (cons
                                      (map list
                                           g$lhs*$7910$Of4HK
                                           g$rhs*$7914$Of4HK)
                                      (cons g$b$7912$Of4HK g$b*$7913$Of4HK))))))
                             (map (case-lambda
                                    ((g$lhs$7915$Of4HK g$rhs$7916$Of4HK)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$7915$Of4HK)
                                       g$rhs$7916$Of4HK)))
                                  g$lhs*$7910$Of4HK
                                  g$rhs*$7911$Of4HK))
                            (g$invalid-fmls-error$7161$Of4HK
                              g$stx$7907$Of4HK
                              g$lhs*$7910$Of4HK))))
                       g$ls/false$7909$Of4HK)
                     (g$syntax-violation$7302$Of4HK
                       '#f
                       '"invalid syntax"
                       g$t$7908$Of4HK))))
                (g$syntax-dispatch$7196$Of4HK
                  g$t$7908$Of4HK
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$7907$Of4HK))))))
   (g$trace-let-syntax-macro$7169$Of4HK
     g$trace-let-syntax-macro$10601$Of4HK
     (g$trace-let/rec-syntax$7168$Of4HK 'let-syntax))
   (g$trace-letrec-syntax-macro$7170$Of4HK
     g$trace-letrec-syntax-macro$10602$Of4HK
     (g$trace-let/rec-syntax$7168$Of4HK 'letrec-syntax))
   (g$guard-macro$7171$Of4HK
     g$guard-macro$10603$Of4HK
     (case-lambda
       ((g$x$7917$Of4HK)
        (letrec* ((g$gen-clauses$7918$Of4HK
                    (case-lambda
                      ((g$con$7929$Of4HK g$clause*$7930$Of4HK)
                       (letrec* ((g$f$7931$Of4HK
                                   (case-lambda
                                     ((g$x$7959$Of4HK g$k$7960$Of4HK)
                                      ((case-lambda
                                         ((g$t$7961$Of4HK)
                                          ((case-lambda
                                             ((g$ls/false$7962$Of4HK)
                                              (if g$ls/false$7962$Of4HK
                                                (apply
                                                  (case-lambda
                                                    ((g$e$7963$Of4HK
                                                       g$p$7964$Of4HK)
                                                     ((case-lambda
                                                        ((g$t$7965$Of4HK)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$7965$Of4HK
                                                               g$e$7963$Of4HK))
                                                           (list
                                                             'if
                                                             g$t$7965$Of4HK
                                                             (list
                                                               g$p$7964$Of4HK
                                                               g$t$7965$Of4HK)
                                                             g$k$7960$Of4HK))))
                                                      (gensym))))
                                                  g$ls/false$7962$Of4HK)
                                                ((case-lambda
                                                   ((g$t$7966$Of4HK)
                                                    ((case-lambda
                                                       ((g$ls/false$7967$Of4HK)
                                                        (if g$ls/false$7967$Of4HK
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$7968$Of4HK)
                                                               ((case-lambda
                                                                  ((g$t$7969$Of4HK)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$7969$Of4HK
                                                                         g$e$7968$Of4HK))
                                                                     (list
                                                                       'if
                                                                       g$t$7969$Of4HK
                                                                       g$t$7969$Of4HK
                                                                       g$k$7960$Of4HK))))
                                                                (gensym))))
                                                            g$ls/false$7967$Of4HK)
                                                          ((case-lambda
                                                             ((g$t$7970$Of4HK)
                                                              ((case-lambda
                                                                 ((g$ls/false$7971$Of4HK)
                                                                  (if g$ls/false$7971$Of4HK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$7972$Of4HK
                                                                           g$v$7973$Of4HK
                                                                           g$v*$7974$Of4HK)
                                                                         (list
                                                                           'if
                                                                           g$e$7972$Of4HK
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$7973$Of4HK
                                                                               g$v*$7974$Of4HK))
                                                                           g$k$7960$Of4HK)))
                                                                      g$ls/false$7971$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$t$7975$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$7976$Of4HK)
                                                                            (if g$ls/false$7976$Of4HK
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7302$Of4HK
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$7959$Of4HK)))
                                                                                g$ls/false$7976$Of4HK)
                                                                              (g$syntax-violation$7302$Of4HK
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$7975$Of4HK))))
                                                                         (g$syntax-dispatch$7196$Of4HK
                                                                           g$t$7975$Of4HK
                                                                           '_))))
                                                                     g$t$7970$Of4HK))))
                                                               (g$syntax-dispatch$7196$Of4HK
                                                                 g$t$7970$Of4HK
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$7966$Of4HK))))
                                                     (g$syntax-dispatch$7196$Of4HK
                                                       g$t$7966$Of4HK
                                                       '(any)))))
                                                 g$t$7961$Of4HK))))
                                           (g$syntax-dispatch$7196$Of4HK
                                             g$t$7961$Of4HK
                                             '(any #(scheme-id =>) any)))))
                                       g$x$7959$Of4HK))))
                                 (g$f*$7932$Of4HK
                                   (case-lambda
                                     ((g$x*$7939$Of4HK)
                                      ((case-lambda
                                         ((g$t$7940$Of4HK)
                                          ((case-lambda
                                             ((g$ls/false$7941$Of4HK)
                                              (if g$ls/false$7941$Of4HK
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$7929$Of4HK)
                                                       '#f)))
                                                  g$ls/false$7941$Of4HK)
                                                ((case-lambda
                                                   ((g$t$7942$Of4HK)
                                                    ((case-lambda
                                                       ((g$ls/false$7943$Of4HK)
                                                        (if g$ls/false$7943$Of4HK
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$7944$Of4HK
                                                                 g$e*$7945$Of4HK)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$7944$Of4HK
                                                                     g$e*$7945$Of4HK))
                                                                 '#f)))
                                                            g$ls/false$7943$Of4HK)
                                                          ((case-lambda
                                                             ((g$t$7946$Of4HK)
                                                              ((case-lambda
                                                                 ((g$ls/false$7947$Of4HK)
                                                                  (if g$ls/false$7947$Of4HK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$7948$Of4HK
                                                                           g$cls*$7949$Of4HK)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$7932$Of4HK
                                                                                g$cls*$7949$Of4HK)))
                                                                           (case-lambda
                                                                             ((g$e$7952$Of4HK
                                                                                g$g$7953$Of4HK)
                                                                              ((case-lambda
                                                                                 ((g$g$7954$Of4HK
                                                                                    g$e$7955$Of4HK)
                                                                                  (values
                                                                                    (g$f$7931$Of4HK
                                                                                      g$cls$7948$Of4HK
                                                                                      g$e$7955$Of4HK)
                                                                                    g$g$7954$Of4HK)))
                                                                               g$g$7953$Of4HK
                                                                               g$e$7952$Of4HK))))))
                                                                      g$ls/false$7947$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$t$7956$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$7957$Of4HK)
                                                                            (if g$ls/false$7957$Of4HK
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$7958$Of4HK)
                                                                                   (g$syntax-violation$7302$Of4HK
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$7958$Of4HK)))
                                                                                g$ls/false$7957$Of4HK)
                                                                              (g$syntax-violation$7302$Of4HK
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$7956$Of4HK))))
                                                                         (g$syntax-dispatch$7196$Of4HK
                                                                           g$t$7956$Of4HK
                                                                           'any))))
                                                                     g$t$7946$Of4HK))))
                                                               (g$syntax-dispatch$7196$Of4HK
                                                                 g$t$7946$Of4HK
                                                                 '(any .
                                                                       any)))))
                                                           g$t$7942$Of4HK))))
                                                     (g$syntax-dispatch$7196$Of4HK
                                                       g$t$7942$Of4HK
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$7940$Of4HK))))
                                           (g$syntax-dispatch$7196$Of4HK
                                             g$t$7940$Of4HK
                                             '()))))
                                       g$x*$7939$Of4HK)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$7932$Of4HK g$clause*$7930$Of4HK)))
                           (case-lambda
                             ((g$code$7935$Of4HK g$raisek$7936$Of4HK)
                              ((case-lambda
                                 ((g$raisek$7937$Of4HK g$code$7938$Of4HK)
                                  g$code$7938$Of4HK))
                               g$raisek$7936$Of4HK
                               g$code$7935$Of4HK)))))))))
          ((case-lambda
             ((g$t$7919$Of4HK)
              ((case-lambda
                 ((g$ls/false$7920$Of4HK)
                  (if (if g$ls/false$7920$Of4HK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$7921$Of4HK
                                 g$clause*$7922$Of4HK
                                 g$b$7923$Of4HK
                                 g$b*$7924$Of4HK)
                               (g$id?$6918$Of4HK g$con$7921$Of4HK)))
                            g$ls/false$7920$Of4HK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$7925$Of4HK
                           g$clause*$7926$Of4HK
                           g$b$7927$Of4HK
                           g$b*$7928$Of4HK)
                         (g$bless$7159$Of4HK
                           (list
                             'with-exception-handler
                             (list
                               'lambda
                               (list g$con$7925$Of4HK)
                               (g$gen-clauses$7918$Of4HK
                                 g$con$7925$Of4HK
                                 g$clause*$7926$Of4HK))
                             (cons
                               'lambda
                               (cons
                                 '()
                                 (cons
                                   '#f
                                   (cons g$b$7927$Of4HK g$b*$7928$Of4HK))))))))
                      g$ls/false$7920$Of4HK)
                    (g$syntax-violation$7302$Of4HK
                      '#f
                      '"invalid syntax"
                      g$t$7919$Of4HK))))
               (g$syntax-dispatch$7196$Of4HK
                 g$t$7919$Of4HK
                 '(_ (any . each-any) any . each-any)))))
           g$x$7917$Of4HK)))))
   (g$define-enumeration-macro$7172$Of4HK
     g$define-enumeration-macro$10604$Of4HK
     (case-lambda
       ((g$stx$7977$Of4HK)
        (letrec* ((g$set?$7978$Of4HK
                    (case-lambda
                      ((g$x$7991$Of4HK)
                       ((case-lambda
                          ((g$t$7992$Of4HK)
                           (if g$t$7992$Of4HK
                             g$t$7992$Of4HK
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$7991$Of4HK)
                                          (cdr g$x$7991$Of4HK)))
                                 (begin
                                   '#f
                                   (g$set?$7978$Of4HK (cdr g$x$7991$Of4HK)))
                                 '#f)))))
                        (null? g$x$7991$Of4HK)))))
                  (g$remove-dups$7979$Of4HK
                    (case-lambda
                      ((g$ls$7990$Of4HK)
                       (if (null? g$ls$7990$Of4HK)
                         '()
                         (cons
                           (car g$ls$7990$Of4HK)
                           (g$remove-dups$7979$Of4HK
                             (g$remq$5354$Of4HK
                               (car g$ls$7990$Of4HK)
                               (cdr g$ls$7990$Of4HK)))))))))
          ((case-lambda
             ((g$t$7980$Of4HK)
              ((case-lambda
                 ((g$ls/false$7981$Of4HK)
                  (if (if g$ls/false$7981$Of4HK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$7982$Of4HK
                                 g$id*$7983$Of4HK
                                 g$maker$7984$Of4HK)
                               (if (g$id?$6918$Of4HK g$name$7982$Of4HK)
                                 (if (g$id?$6918$Of4HK g$maker$7984$Of4HK)
                                   (begin
                                     '#f
                                     (g$for-all$5347$Of4HK
                                       g$id?$6918$Of4HK
                                       g$id*$7983$Of4HK))
                                   '#f)
                                 '#f)))
                            g$ls/false$7981$Of4HK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$7985$Of4HK g$id*$7986$Of4HK g$maker$7987$Of4HK)
                         ((case-lambda
                            ((g$name*$7988$Of4HK g$mk$7989$Of4HK)
                             (g$bless$7159$Of4HK
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$7989$Of4HK
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$7988$Of4HK))))
                                 (list
                                   'define-syntax
                                   g$name$7985$Of4HK
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$7988$Of4HK))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$7985$Of4HK)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$7987$Of4HK
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$7987$Of4HK)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$7988$Of4HK))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$7987$Of4HK)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$7989$Of4HK
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$7979$Of4HK
                            (g$syntax->datum$7305$Of4HK g$id*$7986$Of4HK))
                          (gensym))))
                      g$ls/false$7981$Of4HK)
                    (g$syntax-violation$7302$Of4HK
                      '#f
                      '"invalid syntax"
                      g$t$7980$Of4HK))))
               (g$syntax-dispatch$7196$Of4HK
                 g$t$7980$Of4HK
                 '(_ any each-any any)))))
           g$stx$7977$Of4HK)))))
   (g$time-macro$7173$Of4HK
     g$time-macro$10605$Of4HK
     (case-lambda
       ((g$stx$7993$Of4HK)
        ((case-lambda
           ((g$t$7994$Of4HK)
            ((case-lambda
               ((g$ls/false$7995$Of4HK)
                (if g$ls/false$7995$Of4HK
                  (apply
                    (case-lambda
                      ((g$expr$7996$Of4HK)
                       ((case-lambda
                          ((g$str$7997$Of4HK)
                           (g$bless$7159$Of4HK
                             (list
                               'time-it
                               g$str$7997$Of4HK
                               (list 'lambda '() g$expr$7996$Of4HK)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6077$Of4HK)))
                          (case-lambda
                            ((g$p$8000$Of4HK g$e$8001$Of4HK)
                             ((case-lambda
                                ((g$e$8002$Of4HK g$p$8003$Of4HK)
                                 (begin
                                   (write
                                     (g$syntax->datum$7305$Of4HK
                                       g$expr$7996$Of4HK)
                                     g$p$8003$Of4HK)
                                   (g$e$8002$Of4HK))))
                              g$e$8001$Of4HK
                              g$p$8000$Of4HK)))))))
                    g$ls/false$7995$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$7994$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$7994$Of4HK '(_ any)))))
         g$stx$7993$Of4HK))))
   (g$delay-macro$7174$Of4HK
     g$delay-macro$10606$Of4HK
     (case-lambda
       ((g$stx$8004$Of4HK)
        ((case-lambda
           ((g$t$8005$Of4HK)
            ((case-lambda
               ((g$ls/false$8006$Of4HK)
                (if g$ls/false$8006$Of4HK
                  (apply
                    (case-lambda
                      ((g$expr$8007$Of4HK)
                       (g$bless$7159$Of4HK
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8007$Of4HK)))))
                    g$ls/false$8006$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$8005$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$8005$Of4HK '(_ any)))))
         g$stx$8004$Of4HK))))
   (g$assert-macro$7175$Of4HK
     g$assert-macro$10607$Of4HK
     (case-lambda
       ((g$stx$8008$Of4HK)
        ((case-lambda
           ((g$t$8009$Of4HK)
            ((case-lambda
               ((g$ls/false$8010$Of4HK)
                (if g$ls/false$8010$Of4HK
                  (apply
                    (case-lambda
                      ((g$expr$8011$Of4HK)
                       (g$bless$7159$Of4HK
                         (list
                           'unless
                           g$expr$8011$Of4HK
                           (list
                             'assertion-violation
                             ''assert
                             '"assertion failed"
                             (list 'quote g$expr$8011$Of4HK))))))
                    g$ls/false$8010$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$8009$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$8009$Of4HK '(_ any)))))
         g$stx$8008$Of4HK))))
   (g$endianness-macro$7176$Of4HK
     g$endianness-macro$10608$Of4HK
     (case-lambda
       ((g$stx$8012$Of4HK)
        ((case-lambda
           ((g$t$8013$Of4HK)
            ((case-lambda
               ((g$ls/false$8014$Of4HK)
                (if g$ls/false$8014$Of4HK
                  (apply
                    (case-lambda
                      ((g$e$8015$Of4HK)
                       ((case-lambda
                          ((g$t$8016$Of4HK)
                           (if (eqv? g$t$8016$Of4HK 'little)
                             (g$bless$7159$Of4HK ''little)
                             (if (eqv? g$t$8016$Of4HK 'big)
                               (g$bless$7159$Of4HK ''big)
                               (g$syntax-violation$7302$Of4HK
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8012$Of4HK)))))
                        (g$syntax->datum$7305$Of4HK g$e$8015$Of4HK))))
                    g$ls/false$8014$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$8013$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$8013$Of4HK '(_ any)))))
         g$stx$8012$Of4HK))))
   (g$identifier-syntax-macro$7177$Of4HK
     g$identifier-syntax-macro$10609$Of4HK
     (case-lambda
       ((g$stx$8017$Of4HK)
        ((case-lambda
           ((g$t$8018$Of4HK)
            ((case-lambda
               ((g$ls/false$8019$Of4HK)
                (if g$ls/false$8019$Of4HK
                  (apply
                    (case-lambda
                      ((g$expr$8020$Of4HK)
                       (g$bless$7159$Of4HK
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8020$Of4HK))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8020$Of4HK)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8019$Of4HK)
                  ((case-lambda
                     ((g$t$8021$Of4HK)
                      ((case-lambda
                         ((g$ls/false$8022$Of4HK)
                          (if (if g$ls/false$8022$Of4HK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8023$Of4HK
                                         g$expr1$8024$Of4HK
                                         g$id2$8025$Of4HK
                                         g$expr2$8026$Of4HK
                                         g$expr3$8027$Of4HK)
                                       (if (g$id?$6918$Of4HK g$id1$8023$Of4HK)
                                         (if (g$id?$6918$Of4HK g$id2$8025$Of4HK)
                                           (begin
                                             '#f
                                             (g$id?$6918$Of4HK
                                               g$expr2$8026$Of4HK))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8022$Of4HK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8028$Of4HK
                                   g$expr1$8029$Of4HK
                                   g$id2$8030$Of4HK
                                   g$expr2$8031$Of4HK
                                   g$expr3$8032$Of4HK)
                                 (g$bless$7159$Of4HK
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8029$Of4HK))
                                         (list
                                           (list 'set! 'id g$expr2$8031$Of4HK)
                                           (list 'syntax g$expr3$8032$Of4HK))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8029$Of4HK
                                               '(e* ...))))))))))
                              g$ls/false$8022$Of4HK)
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"invalid syntax"
                              g$t$8021$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$8021$Of4HK
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8018$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$8018$Of4HK '(_ any)))))
         g$stx$8017$Of4HK))))
   (g$do-macro$7178$Of4HK
     g$do-macro$10610$Of4HK
     (case-lambda
       ((g$stx$8033$Of4HK)
        (letrec* ((g$bind$8034$Of4HK
                    (case-lambda
                      ((g$x$8046$Of4HK)
                       ((case-lambda
                          ((g$t$8047$Of4HK)
                           ((case-lambda
                              ((g$ls/false$8048$Of4HK)
                               (if g$ls/false$8048$Of4HK
                                 (apply
                                   (case-lambda
                                     ((g$x$8049$Of4HK g$init$8050$Of4HK)
                                      (list
                                        g$x$8049$Of4HK
                                        g$init$8050$Of4HK
                                        g$x$8049$Of4HK)))
                                   g$ls/false$8048$Of4HK)
                                 ((case-lambda
                                    ((g$t$8051$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$8052$Of4HK)
                                         (if g$ls/false$8052$Of4HK
                                           (apply
                                             (case-lambda
                                               ((g$x$8053$Of4HK
                                                  g$init$8054$Of4HK
                                                  g$step$8055$Of4HK)
                                                (list
                                                  g$x$8053$Of4HK
                                                  g$init$8054$Of4HK
                                                  g$step$8055$Of4HK)))
                                             g$ls/false$8052$Of4HK)
                                           ((case-lambda
                                              ((g$t$8056$Of4HK)
                                               ((case-lambda
                                                  ((g$ls/false$8057$Of4HK)
                                                   (if g$ls/false$8057$Of4HK
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7302$Of4HK
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8033$Of4HK)))
                                                       g$ls/false$8057$Of4HK)
                                                     (g$syntax-violation$7302$Of4HK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8056$Of4HK))))
                                                (g$syntax-dispatch$7196$Of4HK
                                                  g$t$8056$Of4HK
                                                  '_))))
                                            g$t$8051$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$8051$Of4HK
                                        '(any any any)))))
                                  g$t$8047$Of4HK))))
                            (g$syntax-dispatch$7196$Of4HK
                              g$t$8047$Of4HK
                              '(any any)))))
                        g$x$8046$Of4HK)))))
          ((case-lambda
             ((g$t$8035$Of4HK)
              ((case-lambda
                 ((g$ls/false$8036$Of4HK)
                  (if g$ls/false$8036$Of4HK
                    (apply
                      (case-lambda
                        ((g$binding*$8037$Of4HK
                           g$test$8038$Of4HK
                           g$expr*$8039$Of4HK
                           g$command*$8040$Of4HK)
                         ((case-lambda
                            ((g$t$8041$Of4HK)
                             ((case-lambda
                                ((g$ls/false$8042$Of4HK)
                                 (if g$ls/false$8042$Of4HK
                                   (apply
                                     (case-lambda
                                       ((g$x*$8043$Of4HK
                                          g$init*$8044$Of4HK
                                          g$step*$8045$Of4HK)
                                        (if (g$valid-bound-ids?$6923$Of4HK
                                              g$x*$8043$Of4HK)
                                          (g$bless$7159$Of4HK
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8043$Of4HK
                                                    (list
                                                      'if
                                                      g$test$8038$Of4HK
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8039$Of4HK))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8040$Of4HK
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8045$Of4HK))))))))
                                              (cons 'loop g$init*$8044$Of4HK)))
                                          (g$syntax-violation$7302$Of4HK
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8033$Of4HK))))
                                     g$ls/false$8042$Of4HK)
                                   (g$syntax-violation$7302$Of4HK
                                     '#f
                                     '"invalid syntax"
                                     g$t$8041$Of4HK))))
                              (g$syntax-dispatch$7196$Of4HK
                                g$t$8041$Of4HK
                                '#(each (any any any))))))
                          (map g$bind$8034$Of4HK g$binding*$8037$Of4HK))))
                      g$ls/false$8036$Of4HK)
                    (g$syntax-violation$7302$Of4HK
                      '#f
                      '"invalid syntax"
                      g$t$8035$Of4HK))))
               (g$syntax-dispatch$7196$Of4HK
                 g$t$8035$Of4HK
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8033$Of4HK)))))
   (g$let*-macro$7179$Of4HK
     g$let*-macro$10611$Of4HK
     (case-lambda
       ((g$stx$8058$Of4HK)
        ((case-lambda
           ((g$t$8059$Of4HK)
            ((case-lambda
               ((g$ls/false$8060$Of4HK)
                (if (if g$ls/false$8060$Of4HK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8061$Of4HK
                               g$rhs*$8062$Of4HK
                               g$b$8063$Of4HK
                               g$b*$8064$Of4HK)
                             (g$for-all$5347$Of4HK
                               g$id?$6918$Of4HK
                               g$lhs*$8061$Of4HK)))
                          g$ls/false$8060$Of4HK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8065$Of4HK
                         g$rhs*$8066$Of4HK
                         g$b$8067$Of4HK
                         g$b*$8068$Of4HK)
                       (g$bless$7159$Of4HK
                         ((letrec ((g$f$8069$Of4HK
                                     (case-lambda
                                       ((g$x*$8070$Of4HK)
                                        (if (null? g$x*$8070$Of4HK)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8067$Of4HK
                                                g$b*$8068$Of4HK)))
                                          (list
                                            'let
                                            (list (car g$x*$8070$Of4HK))
                                            (g$f$8069$Of4HK
                                              (cdr g$x*$8070$Of4HK))))))))
                            g$f$8069$Of4HK)
                          (map list g$lhs*$8065$Of4HK g$rhs*$8066$Of4HK)))))
                    g$ls/false$8060$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$8059$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$8059$Of4HK
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8058$Of4HK))))
   (g$or-macro$7180$Of4HK
     g$or-macro$10612$Of4HK
     (case-lambda
       ((g$stx$8071$Of4HK)
        ((case-lambda
           ((g$t$8072$Of4HK)
            ((case-lambda
               ((g$ls/false$8073$Of4HK)
                (if g$ls/false$8073$Of4HK
                  (apply (case-lambda (() '#f)) g$ls/false$8073$Of4HK)
                  ((case-lambda
                     ((g$t$8074$Of4HK)
                      ((case-lambda
                         ((g$ls/false$8075$Of4HK)
                          (if g$ls/false$8075$Of4HK
                            (apply
                              (case-lambda
                                ((g$e$8076$Of4HK g$e*$8077$Of4HK)
                                 (g$bless$7159$Of4HK
                                   ((letrec ((g$f$8078$Of4HK
                                               (case-lambda
                                                 ((g$e$8079$Of4HK
                                                    g$e*$8080$Of4HK)
                                                  (if (null? g$e*$8080$Of4HK)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8079$Of4HK)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8079$Of4HK))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8078$Of4HK
                                                          (car g$e*$8080$Of4HK)
                                                          (cdr g$e*$8080$Of4HK)))))))))
                                      g$f$8078$Of4HK)
                                    g$e$8076$Of4HK
                                    g$e*$8077$Of4HK))))
                              g$ls/false$8075$Of4HK)
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"invalid syntax"
                              g$t$8074$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$8074$Of4HK
                         '(_ any . each-any)))))
                   g$t$8072$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$8072$Of4HK '(_)))))
         g$stx$8071$Of4HK))))
   (g$and-macro$7181$Of4HK
     g$and-macro$10613$Of4HK
     (case-lambda
       ((g$stx$8081$Of4HK)
        ((case-lambda
           ((g$t$8082$Of4HK)
            ((case-lambda
               ((g$ls/false$8083$Of4HK)
                (if g$ls/false$8083$Of4HK
                  (apply (case-lambda (() '#t)) g$ls/false$8083$Of4HK)
                  ((case-lambda
                     ((g$t$8084$Of4HK)
                      ((case-lambda
                         ((g$ls/false$8085$Of4HK)
                          (if g$ls/false$8085$Of4HK
                            (apply
                              (case-lambda
                                ((g$e$8086$Of4HK g$e*$8087$Of4HK)
                                 (g$bless$7159$Of4HK
                                   ((letrec ((g$f$8088$Of4HK
                                               (case-lambda
                                                 ((g$e$8089$Of4HK
                                                    g$e*$8090$Of4HK)
                                                  (if (null? g$e*$8090$Of4HK)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8089$Of4HK)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8089$Of4HK
                                                        (cons
                                                          (g$f$8088$Of4HK
                                                            (car g$e*$8090$Of4HK)
                                                            (cdr g$e*$8090$Of4HK))
                                                          '(#f)))))))))
                                      g$f$8088$Of4HK)
                                    g$e$8086$Of4HK
                                    g$e*$8087$Of4HK))))
                              g$ls/false$8085$Of4HK)
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"invalid syntax"
                              g$t$8084$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$8084$Of4HK
                         '(_ any . each-any)))))
                   g$t$8082$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$8082$Of4HK '(_)))))
         g$stx$8081$Of4HK))))
   (g$cond-macro$7182$Of4HK
     g$cond-macro$10614$Of4HK
     (case-lambda
       ((g$stx$8091$Of4HK)
        ((case-lambda
           ((g$t$8092$Of4HK)
            ((case-lambda
               ((g$ls/false$8093$Of4HK)
                (if g$ls/false$8093$Of4HK
                  (apply
                    (case-lambda
                      ((g$cls$8094$Of4HK g$cls*$8095$Of4HK)
                       (g$bless$7159$Of4HK
                         ((letrec ((g$f$8096$Of4HK
                                     (case-lambda
                                       ((g$cls$8097$Of4HK g$cls*$8098$Of4HK)
                                        (if (null? g$cls*$8098$Of4HK)
                                          ((case-lambda
                                             ((g$t$8099$Of4HK)
                                              ((case-lambda
                                                 ((g$ls/false$8100$Of4HK)
                                                  (if g$ls/false$8100$Of4HK
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8101$Of4HK
                                                           g$e*$8102$Of4HK)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8101$Of4HK
                                                             g$e*$8102$Of4HK))))
                                                      g$ls/false$8100$Of4HK)
                                                    ((case-lambda
                                                       ((g$t$8103$Of4HK)
                                                        ((case-lambda
                                                           ((g$ls/false$8104$Of4HK)
                                                            (if g$ls/false$8104$Of4HK
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8105$Of4HK
                                                                     g$p$8106$Of4HK)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8105$Of4HK))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8106$Of4HK
                                                                         '(t))))))
                                                                g$ls/false$8104$Of4HK)
                                                              ((case-lambda
                                                                 ((g$t$8107$Of4HK)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8108$Of4HK)
                                                                      (if g$ls/false$8108$Of4HK
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8109$Of4HK)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8109$Of4HK
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8108$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$t$8110$Of4HK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8111$Of4HK)
                                                                                (if g$ls/false$8111$Of4HK
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8112$Of4HK
                                                                                         g$e*$8113$Of4HK)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8112$Of4HK
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8113$Of4HK))))
                                                                                    g$ls/false$8111$Of4HK)
                                                                                  ((case-lambda
                                                                                     ((g$t$8114$Of4HK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8115$Of4HK)
                                                                                          (if g$ls/false$8115$Of4HK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7302$Of4HK
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8091$Of4HK)))
                                                                                              g$ls/false$8115$Of4HK)
                                                                                            (g$syntax-violation$7302$Of4HK
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8114$Of4HK))))
                                                                                       (g$syntax-dispatch$7196$Of4HK
                                                                                         g$t$8114$Of4HK
                                                                                         '_))))
                                                                                   g$t$8110$Of4HK))))
                                                                             (g$syntax-dispatch$7196$Of4HK
                                                                               g$t$8110$Of4HK
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8107$Of4HK))))
                                                                   (g$syntax-dispatch$7196$Of4HK
                                                                     g$t$8107$Of4HK
                                                                     '(any)))))
                                                               g$t$8103$Of4HK))))
                                                         (g$syntax-dispatch$7196$Of4HK
                                                           g$t$8103$Of4HK
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8099$Of4HK))))
                                               (g$syntax-dispatch$7196$Of4HK
                                                 g$t$8099$Of4HK
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8097$Of4HK)
                                          ((case-lambda
                                             ((g$t$8116$Of4HK)
                                              ((case-lambda
                                                 ((g$ls/false$8117$Of4HK)
                                                  (if g$ls/false$8117$Of4HK
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8118$Of4HK
                                                           g$e*$8119$Of4HK)
                                                         (g$syntax-violation$7302$Of4HK
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8091$Of4HK)))
                                                      g$ls/false$8117$Of4HK)
                                                    ((case-lambda
                                                       ((g$t$8120$Of4HK)
                                                        ((case-lambda
                                                           ((g$ls/false$8121$Of4HK)
                                                            (if g$ls/false$8121$Of4HK
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8122$Of4HK
                                                                     g$p$8123$Of4HK)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8122$Of4HK))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8123$Of4HK
                                                                         '(t))
                                                                       (g$f$8096$Of4HK
                                                                         (car g$cls*$8098$Of4HK)
                                                                         (cdr g$cls*$8098$Of4HK))))))
                                                                g$ls/false$8121$Of4HK)
                                                              ((case-lambda
                                                                 ((g$t$8124$Of4HK)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8125$Of4HK)
                                                                      (if g$ls/false$8125$Of4HK
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8126$Of4HK)
                                                                             (list
                                                                               'or
                                                                               g$e$8126$Of4HK
                                                                               (g$f$8096$Of4HK
                                                                                 (car g$cls*$8098$Of4HK)
                                                                                 (cdr g$cls*$8098$Of4HK)))))
                                                                          g$ls/false$8125$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$t$8127$Of4HK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8128$Of4HK)
                                                                                (if g$ls/false$8128$Of4HK
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8129$Of4HK
                                                                                         g$e*$8130$Of4HK)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8129$Of4HK
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8130$Of4HK)
                                                                                         (g$f$8096$Of4HK
                                                                                           (car g$cls*$8098$Of4HK)
                                                                                           (cdr g$cls*$8098$Of4HK)))))
                                                                                    g$ls/false$8128$Of4HK)
                                                                                  ((case-lambda
                                                                                     ((g$t$8131$Of4HK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8132$Of4HK)
                                                                                          (if g$ls/false$8132$Of4HK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7302$Of4HK
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8091$Of4HK)))
                                                                                              g$ls/false$8132$Of4HK)
                                                                                            (g$syntax-violation$7302$Of4HK
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8131$Of4HK))))
                                                                                       (g$syntax-dispatch$7196$Of4HK
                                                                                         g$t$8131$Of4HK
                                                                                         '_))))
                                                                                   g$t$8127$Of4HK))))
                                                                             (g$syntax-dispatch$7196$Of4HK
                                                                               g$t$8127$Of4HK
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8124$Of4HK))))
                                                                   (g$syntax-dispatch$7196$Of4HK
                                                                     g$t$8124$Of4HK
                                                                     '(any)))))
                                                               g$t$8120$Of4HK))))
                                                         (g$syntax-dispatch$7196$Of4HK
                                                           g$t$8120$Of4HK
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8116$Of4HK))))
                                               (g$syntax-dispatch$7196$Of4HK
                                                 g$t$8116$Of4HK
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8097$Of4HK))))))
                            g$f$8096$Of4HK)
                          g$cls$8094$Of4HK
                          g$cls*$8095$Of4HK))))
                    g$ls/false$8093$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$8092$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$8092$Of4HK
               '(_ any . each-any)))))
         g$stx$8091$Of4HK))))
   (g$do-include$7183$Of4HK
     g$do-include$10615$Of4HK
     (case-lambda
       ((g$stx$8133$Of4HK g$id$8134$Of4HK g$filename$8135$Of4HK)
        ((case-lambda
           ((g$filename$8136$Of4HK)
            (begin
              (if (if (string? g$filename$8136$Of4HK)
                    (begin '#f (g$id?$6918$Of4HK g$id$8134$Of4HK))
                    '#f)
                (void)
                (g$syntax-violation$7302$Of4HK
                  '#f
                  '"invalid syntax"
                  g$stx$8133$Of4HK))
              (cons
                (g$bless$7159$Of4HK 'begin)
                (with-input-from-file
                  g$filename$8136$Of4HK
                  (case-lambda
                    (()
                     ((letrec ((g$f$8137$Of4HK
                                 (case-lambda
                                   ((g$ls$8138$Of4HK)
                                    ((case-lambda
                                       ((g$x$8139$Of4HK)
                                        (if (eof-object? g$x$8139$Of4HK)
                                          (reverse g$ls$8138$Of4HK)
                                          (g$f$8137$Of4HK
                                            (cons
                                              (g$datum->stx$6901$Of4HK
                                                g$id$8134$Of4HK
                                                g$x$8139$Of4HK)
                                              g$ls$8138$Of4HK)))))
                                     (read-annotated))))))
                        g$f$8137$Of4HK)
                      '()))))))))
         (g$stx->datum$6929$Of4HK g$filename$8135$Of4HK)))))
   (g$include-macro$7184$Of4HK
     g$include-macro$10616$Of4HK
     (case-lambda
       ((g$e$8140$Of4HK)
        ((case-lambda
           ((g$t$8141$Of4HK)
            ((case-lambda
               ((g$ls/false$8142$Of4HK)
                (if g$ls/false$8142$Of4HK
                  (apply
                    (case-lambda
                      ((g$id$8143$Of4HK g$filename$8144$Of4HK)
                       (g$do-include$7183$Of4HK
                         g$e$8140$Of4HK
                         g$id$8143$Of4HK
                         g$filename$8144$Of4HK)))
                    g$ls/false$8142$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$8141$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$8141$Of4HK '(any any)))))
         g$e$8140$Of4HK))))
   (g$include-into-macro$7185$Of4HK
     g$include-into-macro$10617$Of4HK
     (case-lambda
       ((g$e$8145$Of4HK)
        ((case-lambda
           ((g$t$8146$Of4HK)
            ((case-lambda
               ((g$ls/false$8147$Of4HK)
                (if g$ls/false$8147$Of4HK
                  (apply
                    (case-lambda
                      ((g$id$8148$Of4HK g$filename$8149$Of4HK)
                       (g$do-include$7183$Of4HK
                         g$e$8145$Of4HK
                         g$id$8148$Of4HK
                         g$filename$8149$Of4HK)))
                    g$ls/false$8147$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$8146$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$8146$Of4HK '(_ any any)))))
         g$e$8145$Of4HK))))
   (g$syntax-rules-macro$7186$Of4HK
     g$syntax-rules-macro$10618$Of4HK
     (case-lambda
       ((g$e$8150$Of4HK)
        ((case-lambda
           ((g$t$8151$Of4HK)
            ((case-lambda
               ((g$ls/false$8152$Of4HK)
                (if g$ls/false$8152$Of4HK
                  (apply
                    (case-lambda
                      ((g$lits$8153$Of4HK g$pat*$8154$Of4HK g$tmp*$8155$Of4HK)
                       (begin
                         (g$verify-literals$7199$Of4HK
                           g$lits$8153$Of4HK
                           g$e$8150$Of4HK)
                         (g$bless$7159$Of4HK
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8153$Of4HK
                                   (map (case-lambda
                                          ((g$pat$8156$Of4HK g$tmp$8157$Of4HK)
                                           ((case-lambda
                                              ((g$t$8158$Of4HK)
                                               ((case-lambda
                                                  ((g$ls/false$8159$Of4HK)
                                                   (if g$ls/false$8159$Of4HK
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8160$Of4HK)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8160$Of4HK)
                                                            (list
                                                              'syntax
                                                              g$tmp$8157$Of4HK))))
                                                       g$ls/false$8159$Of4HK)
                                                     ((case-lambda
                                                        ((g$t$8161$Of4HK)
                                                         ((case-lambda
                                                            ((g$ls/false$8162$Of4HK)
                                                             (if g$ls/false$8162$Of4HK
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7302$Of4HK
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8150$Of4HK
                                                                      g$pat$8156$Of4HK)))
                                                                 g$ls/false$8162$Of4HK)
                                                               (g$syntax-violation$7302$Of4HK
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8161$Of4HK))))
                                                          (g$syntax-dispatch$7196$Of4HK
                                                            g$t$8161$Of4HK
                                                            '_))))
                                                      g$t$8158$Of4HK))))
                                                (g$syntax-dispatch$7196$Of4HK
                                                  g$t$8158$Of4HK
                                                  '(_ . any)))))
                                            g$pat$8156$Of4HK)))
                                        g$pat*$8154$Of4HK
                                        g$tmp*$8155$Of4HK)))))))))
                    g$ls/false$8152$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$8151$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$8151$Of4HK
               '(_ each-any . #(each (any any)))))))
         g$e$8150$Of4HK))))
   (g$quasiquote-macro$7187$Of4HK
     g$quasiquote-macro$10619$Of4HK
     ((case-lambda
        (()
         (letrec* ((g$datum$8163$Of4HK
                     (case-lambda
                       ((g$x$8294$Of4HK)
                        (list
                          (g$scheme-stx$7139$Of4HK 'quote)
                          (g$mkstx$6906$Of4HK g$x$8294$Of4HK '() '() '())))))
                   (g$quasicons*$8179$Of4HK
                     (case-lambda
                       ((g$x$8290$Of4HK g$y$8291$Of4HK)
                        ((letrec ((g$f$8292$Of4HK
                                    (case-lambda
                                      ((g$x$8293$Of4HK)
                                       (if (null? g$x$8293$Of4HK)
                                         g$y$8291$Of4HK
                                         (g$quasicons$8180$Of4HK
                                           (car g$x$8293$Of4HK)
                                           (g$f$8292$Of4HK
                                             (cdr g$x$8293$Of4HK))))))))
                           g$f$8292$Of4HK)
                         g$x$8290$Of4HK))))
                   (g$quasicons$8180$Of4HK
                     (case-lambda
                       ((g$x$8271$Of4HK g$y$8272$Of4HK)
                        ((case-lambda
                           ((g$t$8273$Of4HK)
                            ((case-lambda
                               ((g$ls/false$8274$Of4HK)
                                (if g$ls/false$8274$Of4HK
                                  (apply
                                    (case-lambda
                                      ((g$dy$8275$Of4HK)
                                       ((case-lambda
                                          ((g$t$8276$Of4HK)
                                           ((case-lambda
                                              ((g$ls/false$8277$Of4HK)
                                               (if g$ls/false$8277$Of4HK
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8278$Of4HK)
                                                      (list
                                                        (g$scheme-stx$7139$Of4HK
                                                          'quote)
                                                        (cons
                                                          g$dx$8278$Of4HK
                                                          g$dy$8275$Of4HK))))
                                                   g$ls/false$8277$Of4HK)
                                                 ((case-lambda
                                                    ((g$t$8279$Of4HK)
                                                     ((case-lambda
                                                        ((g$ls/false$8280$Of4HK)
                                                         (if g$ls/false$8280$Of4HK
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8281$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8282$Of4HK)
                                                                        (if g$ls/false$8282$Of4HK
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7139$Of4HK
                                                                                   'list)
                                                                                 g$x$8271$Of4HK)))
                                                                            g$ls/false$8282$Of4HK)
                                                                          ((case-lambda
                                                                             ((g$t$8283$Of4HK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8284$Of4HK)
                                                                                  (if g$ls/false$8284$Of4HK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7139$Of4HK
                                                                                             'cons)
                                                                                           g$x$8271$Of4HK
                                                                                           g$y$8272$Of4HK)))
                                                                                      g$ls/false$8284$Of4HK)
                                                                                    (g$syntax-violation$7302$Of4HK
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8283$Of4HK))))
                                                                               (g$syntax-dispatch$7196$Of4HK
                                                                                 g$t$8283$Of4HK
                                                                                 '_))))
                                                                           g$t$8281$Of4HK))))
                                                                     (g$syntax-dispatch$7196$Of4HK
                                                                       g$t$8281$Of4HK
                                                                       '()))))
                                                                 g$dy$8275$Of4HK)))
                                                             g$ls/false$8280$Of4HK)
                                                           (g$syntax-violation$7302$Of4HK
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8279$Of4HK))))
                                                      (g$syntax-dispatch$7196$Of4HK
                                                        g$t$8279$Of4HK
                                                        '_))))
                                                  g$t$8276$Of4HK))))
                                            (g$syntax-dispatch$7196$Of4HK
                                              g$t$8276$Of4HK
                                              '(#(scheme-id quote) any)))))
                                        g$x$8271$Of4HK)))
                                    g$ls/false$8274$Of4HK)
                                  ((case-lambda
                                     ((g$t$8285$Of4HK)
                                      ((case-lambda
                                         ((g$ls/false$8286$Of4HK)
                                          (if g$ls/false$8286$Of4HK
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8287$Of4HK)
                                                 (g$cons*$5349$Of4HK
                                                   (g$scheme-stx$7139$Of4HK
                                                     'list)
                                                   g$x$8271$Of4HK
                                                   g$stuff$8287$Of4HK)))
                                              g$ls/false$8286$Of4HK)
                                            ((case-lambda
                                               ((g$t$8288$Of4HK)
                                                ((case-lambda
                                                   ((g$ls/false$8289$Of4HK)
                                                    (if g$ls/false$8289$Of4HK
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7139$Of4HK
                                                               'cons)
                                                             g$x$8271$Of4HK
                                                             g$y$8272$Of4HK)))
                                                        g$ls/false$8289$Of4HK)
                                                      (g$syntax-violation$7302$Of4HK
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8288$Of4HK))))
                                                 (g$syntax-dispatch$7196$Of4HK
                                                   g$t$8288$Of4HK
                                                   '_))))
                                             g$t$8285$Of4HK))))
                                       (g$syntax-dispatch$7196$Of4HK
                                         g$t$8285$Of4HK
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8273$Of4HK))))
                             (g$syntax-dispatch$7196$Of4HK
                               g$t$8273$Of4HK
                               '(#(scheme-id quote) any)))))
                         g$y$8272$Of4HK))))
                   (g$quasiappend$8181$Of4HK
                     (case-lambda
                       ((g$x$8258$Of4HK g$y$8259$Of4HK)
                        ((case-lambda
                           ((g$ls$8260$Of4HK)
                            (if (null? g$ls$8260$Of4HK)
                              (list (g$scheme-stx$7139$Of4HK 'quote) '())
                              (if (null? (cdr g$ls$8260$Of4HK))
                                (car g$ls$8260$Of4HK)
                                (g$cons*$5349$Of4HK
                                  (g$scheme-stx$7139$Of4HK 'append)
                                  g$ls$8260$Of4HK)))))
                         ((letrec ((g$f$8261$Of4HK
                                     (case-lambda
                                       ((g$x$8262$Of4HK)
                                        (if (null? g$x$8262$Of4HK)
                                          ((case-lambda
                                             ((g$t$8263$Of4HK)
                                              ((case-lambda
                                                 ((g$ls/false$8264$Of4HK)
                                                  (if g$ls/false$8264$Of4HK
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8264$Of4HK)
                                                    ((case-lambda
                                                       ((g$t$8265$Of4HK)
                                                        ((case-lambda
                                                           ((g$ls/false$8266$Of4HK)
                                                            (if g$ls/false$8266$Of4HK
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8259$Of4HK)))
                                                                g$ls/false$8266$Of4HK)
                                                              (g$syntax-violation$7302$Of4HK
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8265$Of4HK))))
                                                         (g$syntax-dispatch$7196$Of4HK
                                                           g$t$8265$Of4HK
                                                           '_))))
                                                     g$t$8263$Of4HK))))
                                               (g$syntax-dispatch$7196$Of4HK
                                                 g$t$8263$Of4HK
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8259$Of4HK)
                                          ((case-lambda
                                             ((g$t$8267$Of4HK)
                                              ((case-lambda
                                                 ((g$ls/false$8268$Of4HK)
                                                  (if g$ls/false$8268$Of4HK
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8261$Of4HK
                                                           (cdr g$x$8262$Of4HK))))
                                                      g$ls/false$8268$Of4HK)
                                                    ((case-lambda
                                                       ((g$t$8269$Of4HK)
                                                        ((case-lambda
                                                           ((g$ls/false$8270$Of4HK)
                                                            (if g$ls/false$8270$Of4HK
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8262$Of4HK)
                                                                     (g$f$8261$Of4HK
                                                                       (cdr g$x$8262$Of4HK)))))
                                                                g$ls/false$8270$Of4HK)
                                                              (g$syntax-violation$7302$Of4HK
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8269$Of4HK))))
                                                         (g$syntax-dispatch$7196$Of4HK
                                                           g$t$8269$Of4HK
                                                           '_))))
                                                     g$t$8267$Of4HK))))
                                               (g$syntax-dispatch$7196$Of4HK
                                                 g$t$8267$Of4HK
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8262$Of4HK)))))))
                            g$f$8261$Of4HK)
                          g$x$8258$Of4HK)))))
                   (g$quasivector$8182$Of4HK
                     (case-lambda
                       ((g$x$8233$Of4HK)
                        ((case-lambda
                           ((g$pat-x$8234$Of4HK)
                            ((case-lambda
                               ((g$t$8235$Of4HK)
                                ((case-lambda
                                   ((g$ls/false$8236$Of4HK)
                                    (if g$ls/false$8236$Of4HK
                                      (apply
                                        (case-lambda
                                          ((g$x*$8237$Of4HK)
                                           (list
                                             (g$scheme-stx$7139$Of4HK 'quote)
                                             (list->vector g$x*$8237$Of4HK))))
                                        g$ls/false$8236$Of4HK)
                                      ((case-lambda
                                         ((g$t$8238$Of4HK)
                                          ((case-lambda
                                             ((g$ls/false$8239$Of4HK)
                                              (if g$ls/false$8239$Of4HK
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8240$Of4HK
                                                                 (case-lambda
                                                                   ((g$x$8241$Of4HK
                                                                      g$k$8242$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$t$8243$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8244$Of4HK)
                                                                            (if g$ls/false$8244$Of4HK
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8245$Of4HK)
                                                                                   (g$k$8242$Of4HK
                                                                                     (map (case-lambda
                                                                                            ((g$x$8246$Of4HK)
                                                                                             (list
                                                                                               (g$scheme-stx$7139$Of4HK
                                                                                                 'quote)
                                                                                               g$x$8246$Of4HK)))
                                                                                          g$x*$8245$Of4HK))))
                                                                                g$ls/false$8244$Of4HK)
                                                                              ((case-lambda
                                                                                 ((g$t$8247$Of4HK)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8248$Of4HK)
                                                                                      (if g$ls/false$8248$Of4HK
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8249$Of4HK)
                                                                                             (g$k$8242$Of4HK
                                                                                               g$x*$8249$Of4HK)))
                                                                                          g$ls/false$8248$Of4HK)
                                                                                        ((case-lambda
                                                                                           ((g$t$8250$Of4HK)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8251$Of4HK)
                                                                                                (if g$ls/false$8251$Of4HK
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8252$Of4HK
                                                                                                         g$y$8253$Of4HK)
                                                                                                       (g$f$8240$Of4HK
                                                                                                         g$y$8253$Of4HK
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8254$Of4HK)
                                                                                                            (g$k$8242$Of4HK
                                                                                                              (cons
                                                                                                                g$x$8252$Of4HK
                                                                                                                g$ls$8254$Of4HK)))))))
                                                                                                    g$ls/false$8251$Of4HK)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8255$Of4HK)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8256$Of4HK)
                                                                                                          (if g$ls/false$8256$Of4HK
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7139$Of4HK
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8234$Of4HK)))
                                                                                                              g$ls/false$8256$Of4HK)
                                                                                                            (g$syntax-violation$7302$Of4HK
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8255$Of4HK))))
                                                                                                       (g$syntax-dispatch$7196$Of4HK
                                                                                                         g$t$8255$Of4HK
                                                                                                         '_))))
                                                                                                   g$t$8250$Of4HK))))
                                                                                             (g$syntax-dispatch$7196$Of4HK
                                                                                               g$t$8250$Of4HK
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8247$Of4HK))))
                                                                                   (g$syntax-dispatch$7196$Of4HK
                                                                                     g$t$8247$Of4HK
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8243$Of4HK))))
                                                                         (g$syntax-dispatch$7196$Of4HK
                                                                           g$t$8243$Of4HK
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8241$Of4HK)))))
                                                        g$f$8240$Of4HK)
                                                      g$x$8233$Of4HK
                                                      (case-lambda
                                                        ((g$ls$8257$Of4HK)
                                                         (g$cons*$5349$Of4HK
                                                           (g$scheme-stx$7139$Of4HK
                                                             'vector)
                                                           g$ls$8257$Of4HK))))))
                                                  g$ls/false$8239$Of4HK)
                                                (g$syntax-violation$7302$Of4HK
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8238$Of4HK))))
                                           (g$syntax-dispatch$7196$Of4HK
                                             g$t$8238$Of4HK
                                             '_))))
                                       g$t$8235$Of4HK))))
                                 (g$syntax-dispatch$7196$Of4HK
                                   g$t$8235$Of4HK
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8234$Of4HK)))
                         g$x$8233$Of4HK))))
                   (g$vquasi$8183$Of4HK
                     (case-lambda
                       ((g$p$8216$Of4HK g$lev$8217$Of4HK)
                        ((case-lambda
                           ((g$t$8218$Of4HK)
                            ((case-lambda
                               ((g$ls/false$8219$Of4HK)
                                (if g$ls/false$8219$Of4HK
                                  (apply
                                    (case-lambda
                                      ((g$p$8220$Of4HK g$q$8221$Of4HK)
                                       ((case-lambda
                                          ((g$t$8222$Of4HK)
                                           ((case-lambda
                                              ((g$ls/false$8223$Of4HK)
                                               (if g$ls/false$8223$Of4HK
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8224$Of4HK)
                                                      (if (= g$lev$8217$Of4HK
                                                             '0)
                                                        (g$quasicons*$8179$Of4HK
                                                          g$p$8224$Of4HK
                                                          (g$vquasi$8183$Of4HK
                                                            g$q$8221$Of4HK
                                                            g$lev$8217$Of4HK))
                                                        (g$quasicons$8180$Of4HK
                                                          (g$quasicons$8180$Of4HK
                                                            (g$datum$8163$Of4HK
                                                              'unquote)
                                                            (g$quasi$8184$Of4HK
                                                              g$p$8224$Of4HK
                                                              (- g$lev$8217$Of4HK
                                                                 '1)))
                                                          (g$vquasi$8183$Of4HK
                                                            g$q$8221$Of4HK
                                                            g$lev$8217$Of4HK)))))
                                                   g$ls/false$8223$Of4HK)
                                                 ((case-lambda
                                                    ((g$t$8225$Of4HK)
                                                     ((case-lambda
                                                        ((g$ls/false$8226$Of4HK)
                                                         (if g$ls/false$8226$Of4HK
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8227$Of4HK)
                                                                (if (= g$lev$8217$Of4HK
                                                                       '0)
                                                                  (g$quasiappend$8181$Of4HK
                                                                    g$p$8227$Of4HK
                                                                    (g$vquasi$8183$Of4HK
                                                                      g$q$8221$Of4HK
                                                                      g$lev$8217$Of4HK))
                                                                  (g$quasicons$8180$Of4HK
                                                                    (g$quasicons$8180$Of4HK
                                                                      (g$datum$8163$Of4HK
                                                                        'unquote-splicing)
                                                                      (g$quasi$8184$Of4HK
                                                                        g$p$8227$Of4HK
                                                                        (- g$lev$8217$Of4HK
                                                                           '1)))
                                                                    (g$vquasi$8183$Of4HK
                                                                      g$q$8221$Of4HK
                                                                      g$lev$8217$Of4HK)))))
                                                             g$ls/false$8226$Of4HK)
                                                           ((case-lambda
                                                              ((g$t$8228$Of4HK)
                                                               ((case-lambda
                                                                  ((g$ls/false$8229$Of4HK)
                                                                   (if g$ls/false$8229$Of4HK
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8230$Of4HK)
                                                                          (g$quasicons$8180$Of4HK
                                                                            (g$quasi$8184$Of4HK
                                                                              g$p$8230$Of4HK
                                                                              g$lev$8217$Of4HK)
                                                                            (g$vquasi$8183$Of4HK
                                                                              g$q$8221$Of4HK
                                                                              g$lev$8217$Of4HK))))
                                                                       g$ls/false$8229$Of4HK)
                                                                     (g$syntax-violation$7302$Of4HK
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8228$Of4HK))))
                                                                (g$syntax-dispatch$7196$Of4HK
                                                                  g$t$8228$Of4HK
                                                                  'any))))
                                                            g$t$8225$Of4HK))))
                                                      (g$syntax-dispatch$7196$Of4HK
                                                        g$t$8225$Of4HK
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8222$Of4HK))))
                                            (g$syntax-dispatch$7196$Of4HK
                                              g$t$8222$Of4HK
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8220$Of4HK)))
                                    g$ls/false$8219$Of4HK)
                                  ((case-lambda
                                     ((g$t$8231$Of4HK)
                                      ((case-lambda
                                         ((g$ls/false$8232$Of4HK)
                                          (if g$ls/false$8232$Of4HK
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7139$Of4HK
                                                     'quote)
                                                   '())))
                                              g$ls/false$8232$Of4HK)
                                            (g$syntax-violation$7302$Of4HK
                                              '#f
                                              '"invalid syntax"
                                              g$t$8231$Of4HK))))
                                       (g$syntax-dispatch$7196$Of4HK
                                         g$t$8231$Of4HK
                                         '()))))
                                   g$t$8218$Of4HK))))
                             (g$syntax-dispatch$7196$Of4HK
                               g$t$8218$Of4HK
                               '(any . any)))))
                         g$p$8216$Of4HK))))
                   (g$quasi$8184$Of4HK
                     (case-lambda
                       ((g$p$8189$Of4HK g$lev$8190$Of4HK)
                        ((case-lambda
                           ((g$t$8191$Of4HK)
                            ((case-lambda
                               ((g$ls/false$8192$Of4HK)
                                (if g$ls/false$8192$Of4HK
                                  (apply
                                    (case-lambda
                                      ((g$p$8193$Of4HK)
                                       (if (= g$lev$8190$Of4HK '0)
                                         g$p$8193$Of4HK
                                         (g$quasicons$8180$Of4HK
                                           (g$datum$8163$Of4HK 'unquote)
                                           (g$quasi$8184$Of4HK
                                             (list g$p$8193$Of4HK)
                                             (- g$lev$8190$Of4HK '1))))))
                                    g$ls/false$8192$Of4HK)
                                  ((case-lambda
                                     ((g$t$8194$Of4HK)
                                      ((case-lambda
                                         ((g$ls/false$8195$Of4HK)
                                          (if g$ls/false$8195$Of4HK
                                            (apply
                                              (case-lambda
                                                ((g$p$8196$Of4HK g$q$8197$Of4HK)
                                                 (if (= g$lev$8190$Of4HK '0)
                                                   (g$quasicons*$8179$Of4HK
                                                     g$p$8196$Of4HK
                                                     (g$quasi$8184$Of4HK
                                                       g$q$8197$Of4HK
                                                       g$lev$8190$Of4HK))
                                                   (g$quasicons$8180$Of4HK
                                                     (g$quasicons$8180$Of4HK
                                                       (g$datum$8163$Of4HK
                                                         'unquote)
                                                       (g$quasi$8184$Of4HK
                                                         g$p$8196$Of4HK
                                                         (- g$lev$8190$Of4HK
                                                            '1)))
                                                     (g$quasi$8184$Of4HK
                                                       g$q$8197$Of4HK
                                                       g$lev$8190$Of4HK)))))
                                              g$ls/false$8195$Of4HK)
                                            ((case-lambda
                                               ((g$t$8198$Of4HK)
                                                ((case-lambda
                                                   ((g$ls/false$8199$Of4HK)
                                                    (if g$ls/false$8199$Of4HK
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8200$Of4HK
                                                             g$q$8201$Of4HK)
                                                           (if (= g$lev$8190$Of4HK
                                                                  '0)
                                                             (g$quasiappend$8181$Of4HK
                                                               g$p$8200$Of4HK
                                                               (g$quasi$8184$Of4HK
                                                                 g$q$8201$Of4HK
                                                                 g$lev$8190$Of4HK))
                                                             (g$quasicons$8180$Of4HK
                                                               (g$quasicons$8180$Of4HK
                                                                 (g$datum$8163$Of4HK
                                                                   'unquote-splicing)
                                                                 (g$quasi$8184$Of4HK
                                                                   g$p$8200$Of4HK
                                                                   (- g$lev$8190$Of4HK
                                                                      '1)))
                                                               (g$quasi$8184$Of4HK
                                                                 g$q$8201$Of4HK
                                                                 g$lev$8190$Of4HK)))))
                                                        g$ls/false$8199$Of4HK)
                                                      ((case-lambda
                                                         ((g$t$8202$Of4HK)
                                                          ((case-lambda
                                                             ((g$ls/false$8203$Of4HK)
                                                              (if g$ls/false$8203$Of4HK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8204$Of4HK)
                                                                     (g$quasicons$8180$Of4HK
                                                                       (g$datum$8163$Of4HK
                                                                         'quasiquote)
                                                                       (g$quasi$8184$Of4HK
                                                                         (list
                                                                           g$p$8204$Of4HK)
                                                                         (+ g$lev$8190$Of4HK
                                                                            '1)))))
                                                                  g$ls/false$8203$Of4HK)
                                                                ((case-lambda
                                                                   ((g$t$8205$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8206$Of4HK)
                                                                        (if g$ls/false$8206$Of4HK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8207$Of4HK
                                                                                 g$q$8208$Of4HK)
                                                                               (g$quasicons$8180$Of4HK
                                                                                 (g$quasi$8184$Of4HK
                                                                                   g$p$8207$Of4HK
                                                                                   g$lev$8190$Of4HK)
                                                                                 (g$quasi$8184$Of4HK
                                                                                   g$q$8208$Of4HK
                                                                                   g$lev$8190$Of4HK))))
                                                                            g$ls/false$8206$Of4HK)
                                                                          ((case-lambda
                                                                             ((g$t$8209$Of4HK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8210$Of4HK)
                                                                                  (if (if g$ls/false$8210$Of4HK
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8211$Of4HK)
                                                                                               (not (g$stx?$6890$Of4HK
                                                                                                      g$x$8211$Of4HK))))
                                                                                            g$ls/false$8210$Of4HK))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8212$Of4HK)
                                                                                         (g$quasivector$8182$Of4HK
                                                                                           (g$vquasi$8183$Of4HK
                                                                                             g$x$8212$Of4HK
                                                                                             g$lev$8190$Of4HK))))
                                                                                      g$ls/false$8210$Of4HK)
                                                                                    ((case-lambda
                                                                                       ((g$t$8213$Of4HK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8214$Of4HK)
                                                                                            (if g$ls/false$8214$Of4HK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8215$Of4HK)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7139$Of4HK
                                                                                                       'quote)
                                                                                                     g$p$8215$Of4HK)))
                                                                                                g$ls/false$8214$Of4HK)
                                                                                              (g$syntax-violation$7302$Of4HK
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8213$Of4HK))))
                                                                                         (g$syntax-dispatch$7196$Of4HK
                                                                                           g$t$8213$Of4HK
                                                                                           'any))))
                                                                                     g$t$8209$Of4HK))))
                                                                               (g$syntax-dispatch$7196$Of4HK
                                                                                 g$t$8209$Of4HK
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8205$Of4HK))))
                                                                     (g$syntax-dispatch$7196$Of4HK
                                                                       g$t$8205$Of4HK
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8202$Of4HK))))
                                                           (g$syntax-dispatch$7196$Of4HK
                                                             g$t$8202$Of4HK
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8198$Of4HK))))
                                                 (g$syntax-dispatch$7196$Of4HK
                                                   g$t$8198$Of4HK
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8194$Of4HK))))
                                       (g$syntax-dispatch$7196$Of4HK
                                         g$t$8194$Of4HK
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8191$Of4HK))))
                             (g$syntax-dispatch$7196$Of4HK
                               g$t$8191$Of4HK
                               '(#(scheme-id unquote) any)))))
                         g$p$8189$Of4HK)))))
           (case-lambda
             ((g$x$8185$Of4HK)
              ((case-lambda
                 ((g$t$8186$Of4HK)
                  ((case-lambda
                     ((g$ls/false$8187$Of4HK)
                      (if g$ls/false$8187$Of4HK
                        (apply
                          (case-lambda
                            ((g$e$8188$Of4HK)
                             (g$quasi$8184$Of4HK g$e$8188$Of4HK '0)))
                          g$ls/false$8187$Of4HK)
                        (g$syntax-violation$7302$Of4HK
                          '#f
                          '"invalid syntax"
                          g$t$8186$Of4HK))))
                   (g$syntax-dispatch$7196$Of4HK g$t$8186$Of4HK '(_ any)))))
               g$x$8185$Of4HK))))))))
   (g$quasisyntax-macro$7188$Of4HK
     g$quasisyntax-macro$10620$Of4HK
     ((case-lambda
        (()
         (letrec* ((g$quasi$8295$Of4HK
                     (case-lambda
                       ((g$p$8309$Of4HK g$lev$8310$Of4HK)
                        ((case-lambda
                           ((g$t$8311$Of4HK)
                            ((case-lambda
                               ((g$ls/false$8312$Of4HK)
                                (if g$ls/false$8312$Of4HK
                                  (apply
                                    (case-lambda
                                      ((g$p$8313$Of4HK)
                                       (if (= g$lev$8310$Of4HK '0)
                                         ((case-lambda
                                            ((g$g$8314$Of4HK)
                                             (values
                                               (list g$g$8314$Of4HK)
                                               (list g$p$8313$Of4HK)
                                               g$g$8314$Of4HK)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8295$Of4HK
                                                g$p$8313$Of4HK
                                                (- g$lev$8310$Of4HK '1))))
                                           (case-lambda
                                             ((g$lhs*$8318$Of4HK
                                                g$rhs*$8319$Of4HK
                                                g$p$8320$Of4HK)
                                              ((case-lambda
                                                 ((g$p$8321$Of4HK
                                                    g$rhs*$8322$Of4HK
                                                    g$lhs*$8323$Of4HK)
                                                  (values
                                                    g$lhs*$8323$Of4HK
                                                    g$rhs*$8322$Of4HK
                                                    (list
                                                      'unsyntax
                                                      g$p$8321$Of4HK))))
                                               g$p$8320$Of4HK
                                               g$rhs*$8319$Of4HK
                                               g$lhs*$8318$Of4HK)))))))
                                    g$ls/false$8312$Of4HK)
                                  ((case-lambda
                                     ((g$t$8324$Of4HK)
                                      ((case-lambda
                                         ((g$ls/false$8325$Of4HK)
                                          (if (if g$ls/false$8325$Of4HK
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8310$Of4HK '0)))
                                                    g$ls/false$8325$Of4HK))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7302$Of4HK
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8309$Of4HK)))
                                              g$ls/false$8325$Of4HK)
                                            ((case-lambda
                                               ((g$t$8326$Of4HK)
                                                ((case-lambda
                                                   ((g$ls/false$8327$Of4HK)
                                                    (if g$ls/false$8327$Of4HK
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8328$Of4HK
                                                             g$q$8329$Of4HK)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8295$Of4HK
                                                                  g$q$8329$Of4HK
                                                                  g$lev$8310$Of4HK)))
                                                             (case-lambda
                                                               ((g$lhs*$8333$Of4HK
                                                                  g$rhs*$8334$Of4HK
                                                                  g$q$8335$Of4HK)
                                                                ((case-lambda
                                                                   ((g$q$8336$Of4HK
                                                                      g$rhs*$8337$Of4HK
                                                                      g$lhs*$8338$Of4HK)
                                                                    (if (= g$lev$8310$Of4HK
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g$8339$Of4HK)
                                                                          (values
                                                                            (cons
                                                                              (cons
                                                                                g$g$8339$Of4HK
                                                                                '(...))
                                                                              g$lhs*$8338$Of4HK)
                                                                            (cons
                                                                              g$p$8328$Of4HK
                                                                              g$rhs*$8337$Of4HK)
                                                                            (cons
                                                                              g$g$8339$Of4HK
                                                                              (cons
                                                                                '...
                                                                                g$q$8336$Of4HK)))))
                                                                       (gensym))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8295$Of4HK
                                                                             g$p$8328$Of4HK
                                                                             (- g$lev$8310$Of4HK
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8343$Of4HK
                                                                             g$rhs2*$8344$Of4HK
                                                                             g$p$8345$Of4HK)
                                                                           ((case-lambda
                                                                              ((g$p$8346$Of4HK
                                                                                 g$rhs2*$8347$Of4HK
                                                                                 g$lhs2*$8348$Of4HK)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8348$Of4HK
                                                                                   g$lhs*$8338$Of4HK)
                                                                                 (append
                                                                                   g$rhs2*$8347$Of4HK
                                                                                   g$rhs*$8337$Of4HK)
                                                                                 (cons
                                                                                   (list
                                                                                     'unsyntax-splicing
                                                                                     g$p$8346$Of4HK)
                                                                                   g$q$8336$Of4HK))))
                                                                            g$p$8345$Of4HK
                                                                            g$rhs2*$8344$Of4HK
                                                                            g$lhs2*$8343$Of4HK)))))))
                                                                 g$q$8335$Of4HK
                                                                 g$rhs*$8334$Of4HK
                                                                 g$lhs*$8333$Of4HK))))))
                                                        g$ls/false$8327$Of4HK)
                                                      ((case-lambda
                                                         ((g$t$8349$Of4HK)
                                                          ((case-lambda
                                                             ((g$ls/false$8350$Of4HK)
                                                              (if (if g$ls/false$8350$Of4HK
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (= g$lev$8310$Of4HK
                                                                              '0)))
                                                                        g$ls/false$8350$Of4HK))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    (()
                                                                     (g$syntax-violation$7302$Of4HK
                                                                       '#f
                                                                       '"incorrect use of unsyntax-splicing"
                                                                       g$p$8309$Of4HK)))
                                                                  g$ls/false$8350$Of4HK)
                                                                ((case-lambda
                                                                   ((g$t$8351$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8352$Of4HK)
                                                                        (if g$ls/false$8352$Of4HK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8353$Of4HK)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$quasi$8295$Of4HK
                                                                                      g$p$8353$Of4HK
                                                                                      (+ g$lev$8310$Of4HK
                                                                                         '1))))
                                                                                 (case-lambda
                                                                                   ((g$lhs*$8357$Of4HK
                                                                                      g$rhs*$8358$Of4HK
                                                                                      g$p$8359$Of4HK)
                                                                                    ((case-lambda
                                                                                       ((g$p$8360$Of4HK
                                                                                          g$rhs*$8361$Of4HK
                                                                                          g$lhs*$8362$Of4HK)
                                                                                        (values
                                                                                          g$lhs*$8362$Of4HK
                                                                                          g$rhs*$8361$Of4HK
                                                                                          (list
                                                                                            'quasisyntax
                                                                                            g$p$8360$Of4HK))))
                                                                                     g$p$8359$Of4HK
                                                                                     g$rhs*$8358$Of4HK
                                                                                     g$lhs*$8357$Of4HK))))))
                                                                            g$ls/false$8352$Of4HK)
                                                                          ((case-lambda
                                                                             ((g$t$8363$Of4HK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8364$Of4HK)
                                                                                  (if g$ls/false$8364$Of4HK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8365$Of4HK
                                                                                           g$q$8366$Of4HK)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8295$Of4HK
                                                                                                g$p$8365$Of4HK
                                                                                                g$lev$8310$Of4HK)))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8373$Of4HK
                                                                                                g$rhs*$8374$Of4HK
                                                                                                g$p$8375$Of4HK)
                                                                                              (call-with-values
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$quasi$8295$Of4HK
                                                                                                     g$q$8366$Of4HK
                                                                                                     g$lev$8310$Of4HK)))
                                                                                                (case-lambda
                                                                                                  ((g$lhs2*$8376$Of4HK
                                                                                                     g$rhs2*$8377$Of4HK
                                                                                                     g$q$8378$Of4HK)
                                                                                                   ((case-lambda
                                                                                                      ((g$q$8379$Of4HK
                                                                                                         g$rhs2*$8380$Of4HK
                                                                                                         g$lhs2*$8381$Of4HK
                                                                                                         g$p$8382$Of4HK
                                                                                                         g$rhs*$8383$Of4HK
                                                                                                         g$lhs*$8384$Of4HK)
                                                                                                       (values
                                                                                                         (append
                                                                                                           g$lhs2*$8381$Of4HK
                                                                                                           g$lhs*$8384$Of4HK)
                                                                                                         (append
                                                                                                           g$rhs2*$8380$Of4HK
                                                                                                           g$rhs*$8383$Of4HK)
                                                                                                         (cons
                                                                                                           g$p$8382$Of4HK
                                                                                                           g$q$8379$Of4HK))))
                                                                                                    g$q$8378$Of4HK
                                                                                                    g$rhs2*$8377$Of4HK
                                                                                                    g$lhs2*$8376$Of4HK
                                                                                                    g$p$8375$Of4HK
                                                                                                    g$rhs*$8374$Of4HK
                                                                                                    g$lhs*$8373$Of4HK)))))))))
                                                                                      g$ls/false$8364$Of4HK)
                                                                                    ((case-lambda
                                                                                       ((g$t$8385$Of4HK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8386$Of4HK)
                                                                                            (if (if g$ls/false$8386$Of4HK
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$x$8387$Of4HK)
                                                                                                         (not (g$stx?$6890$Of4HK
                                                                                                                g$p$8309$Of4HK))))
                                                                                                      g$ls/false$8386$Of4HK))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$x$8388$Of4HK)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        ((letrec ((g$f$8392$Of4HK
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$8393$Of4HK)
                                                                                                                       (if (null?
                                                                                                                             g$x$8393$Of4HK)
                                                                                                                         (values
                                                                                                                           '()
                                                                                                                           '()
                                                                                                                           '())
                                                                                                                         (call-with-values
                                                                                                                           (case-lambda
                                                                                                                             (()
                                                                                                                              (g$quasi$8295$Of4HK
                                                                                                                                (car g$x$8393$Of4HK)
                                                                                                                                g$lev$8310$Of4HK)))
                                                                                                                           (case-lambda
                                                                                                                             ((g$lhs*$8397$Of4HK
                                                                                                                                g$rhs*$8398$Of4HK
                                                                                                                                g$a$8399$Of4HK)
                                                                                                                              ((case-lambda
                                                                                                                                 ((g$a$8400$Of4HK
                                                                                                                                    g$rhs*$8401$Of4HK
                                                                                                                                    g$lhs*$8402$Of4HK)
                                                                                                                                  (call-with-values
                                                                                                                                    (case-lambda
                                                                                                                                      (()
                                                                                                                                       (g$f$8392$Of4HK
                                                                                                                                         (cdr g$x$8393$Of4HK))))
                                                                                                                                    (case-lambda
                                                                                                                                      ((g$lhs2*$8406$Of4HK
                                                                                                                                         g$rhs2*$8407$Of4HK
                                                                                                                                         g$d$8408$Of4HK)
                                                                                                                                       ((case-lambda
                                                                                                                                          ((g$d$8409$Of4HK
                                                                                                                                             g$rhs2*$8410$Of4HK
                                                                                                                                             g$lhs2*$8411$Of4HK)
                                                                                                                                           (values
                                                                                                                                             (append
                                                                                                                                               g$lhs*$8402$Of4HK
                                                                                                                                               g$lhs2*$8411$Of4HK)
                                                                                                                                             (append
                                                                                                                                               g$rhs*$8401$Of4HK
                                                                                                                                               g$rhs2*$8410$Of4HK)
                                                                                                                                             (cons
                                                                                                                                               g$a$8400$Of4HK
                                                                                                                                               g$d$8409$Of4HK))))
                                                                                                                                        g$d$8408$Of4HK
                                                                                                                                        g$rhs2*$8407$Of4HK
                                                                                                                                        g$lhs2*$8406$Of4HK))))))
                                                                                                                               g$a$8399$Of4HK
                                                                                                                               g$rhs*$8398$Of4HK
                                                                                                                               g$lhs*$8397$Of4HK)))))))))
                                                                                                           g$f$8392$Of4HK)
                                                                                                         g$x$8388$Of4HK)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8412$Of4HK
                                                                                                          g$rhs*$8413$Of4HK
                                                                                                          g$x*$8414$Of4HK)
                                                                                                        ((case-lambda
                                                                                                           ((g$x*$8415$Of4HK
                                                                                                              g$rhs*$8416$Of4HK
                                                                                                              g$lhs*$8417$Of4HK)
                                                                                                            (values
                                                                                                              g$lhs*$8417$Of4HK
                                                                                                              g$rhs*$8416$Of4HK
                                                                                                              (list->vector
                                                                                                                g$x*$8415$Of4HK))))
                                                                                                         g$x*$8414$Of4HK
                                                                                                         g$rhs*$8413$Of4HK
                                                                                                         g$lhs*$8412$Of4HK))))))
                                                                                                g$ls/false$8386$Of4HK)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8418$Of4HK)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8419$Of4HK)
                                                                                                      (if g$ls/false$8419$Of4HK
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (values
                                                                                                               '()
                                                                                                               '()
                                                                                                               g$p$8309$Of4HK)))
                                                                                                          g$ls/false$8419$Of4HK)
                                                                                                        (g$syntax-violation$7302$Of4HK
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$8418$Of4HK))))
                                                                                                   (g$syntax-dispatch$7196$Of4HK
                                                                                                     g$t$8418$Of4HK
                                                                                                     '_))))
                                                                                               g$t$8385$Of4HK))))
                                                                                         (g$syntax-dispatch$7196$Of4HK
                                                                                           g$t$8385$Of4HK
                                                                                           '#(vector
                                                                                              each-any)))))
                                                                                     g$t$8363$Of4HK))))
                                                                               (g$syntax-dispatch$7196$Of4HK
                                                                                 g$t$8363$Of4HK
                                                                                 '(any .
                                                                                       any)))))
                                                                           g$t$8351$Of4HK))))
                                                                     (g$syntax-dispatch$7196$Of4HK
                                                                       g$t$8351$Of4HK
                                                                       '(#(scheme-id
                                                                           quasisyntax)
                                                                         any)))))
                                                                 g$t$8349$Of4HK))))
                                                           (g$syntax-dispatch$7196$Of4HK
                                                             g$t$8349$Of4HK
                                                             '#(scheme-id
                                                                unsyntax-splicing)))))
                                                       g$t$8326$Of4HK))))
                                                 (g$syntax-dispatch$7196$Of4HK
                                                   g$t$8326$Of4HK
                                                   '((#(scheme-id
                                                        unsyntax-splicing)
                                                      any)
                                                     .
                                                     any)))))
                                             g$t$8324$Of4HK))))
                                       (g$syntax-dispatch$7196$Of4HK
                                         g$t$8324$Of4HK
                                         '#(scheme-id unsyntax)))))
                                   g$t$8311$Of4HK))))
                             (g$syntax-dispatch$7196$Of4HK
                               g$t$8311$Of4HK
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8309$Of4HK)))))
           (case-lambda
             ((g$x$8296$Of4HK)
              ((case-lambda
                 ((g$t$8297$Of4HK)
                  ((case-lambda
                     ((g$ls/false$8298$Of4HK)
                      (if g$ls/false$8298$Of4HK
                        (apply
                          (case-lambda
                            ((g$e$8299$Of4HK)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8295$Of4HK g$e$8299$Of4HK '0)))
                               (case-lambda
                                 ((g$lhs*$8303$Of4HK
                                    g$rhs*$8304$Of4HK
                                    g$v$8305$Of4HK)
                                  ((case-lambda
                                     ((g$v$8306$Of4HK
                                        g$rhs*$8307$Of4HK
                                        g$lhs*$8308$Of4HK)
                                      (g$bless$7159$Of4HK
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8307$Of4HK)
                                          '()
                                          (list
                                            g$lhs*$8308$Of4HK
                                            (list 'syntax g$v$8306$Of4HK))))))
                                   g$v$8305$Of4HK
                                   g$rhs*$8304$Of4HK
                                   g$lhs*$8303$Of4HK))))))
                          g$ls/false$8298$Of4HK)
                        (g$syntax-violation$7302$Of4HK
                          '#f
                          '"invalid syntax"
                          g$t$8297$Of4HK))))
                   (g$syntax-dispatch$7196$Of4HK g$t$8297$Of4HK '(_ any)))))
               g$x$8296$Of4HK))))))))
   (g$define-struct-macro$7189$Of4HK
     g$define-struct-macro$10621$Of4HK
     (case-lambda
       ((g$stx$8420$Of4HK)
        (g$syntax-violation$7302$Of4HK
          '#f
          '"define-struct not supported"
          g$stx$8420$Of4HK))))
   (g$define-record-type-macro$7190$Of4HK
     g$define-record-type-macro$10622$Of4HK
     (case-lambda
       ((g$x$8421$Of4HK)
        (letrec* ((g$id$8422$Of4HK
                    (case-lambda
                      ((g$ctxt$8658$Of4HK . g$str*$8659$Of4HK)
                       (g$datum->syntax$7304$Of4HK
                         g$ctxt$8658$Of4HK
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$8660$Of4HK)
                                     (if (symbol? g$x$8660$Of4HK)
                                       (symbol->string g$x$8660$Of4HK)
                                       (if (string? g$x$8660$Of4HK)
                                         g$x$8660$Of4HK
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$8659$Of4HK)))))))
                  (g$get-record-name$8423$Of4HK
                    (case-lambda
                      ((g$spec$8649$Of4HK)
                       ((case-lambda
                          ((g$t$8650$Of4HK)
                           ((case-lambda
                              ((g$ls/false$8651$Of4HK)
                               (if g$ls/false$8651$Of4HK
                                 (apply
                                   (case-lambda
                                     ((g$foo$8652$Of4HK
                                        g$make-foo$8653$Of4HK
                                        g$foo?$8654$Of4HK)
                                      g$foo$8652$Of4HK))
                                   g$ls/false$8651$Of4HK)
                                 ((case-lambda
                                    ((g$t$8655$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$8656$Of4HK)
                                         (if g$ls/false$8656$Of4HK
                                           (apply
                                             (case-lambda
                                               ((g$foo$8657$Of4HK)
                                                g$foo$8657$Of4HK))
                                             g$ls/false$8656$Of4HK)
                                           (g$syntax-violation$7302$Of4HK
                                             '#f
                                             '"invalid syntax"
                                             g$t$8655$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$8655$Of4HK
                                        'any))))
                                  g$t$8650$Of4HK))))
                            (g$syntax-dispatch$7196$Of4HK
                              g$t$8650$Of4HK
                              '(any any any)))))
                        g$spec$8649$Of4HK))))
                  (g$get-record-constructor-name$8424$Of4HK
                    (case-lambda
                      ((g$spec$8639$Of4HK)
                       ((case-lambda
                          ((g$t$8640$Of4HK)
                           ((case-lambda
                              ((g$ls/false$8641$Of4HK)
                               (if g$ls/false$8641$Of4HK
                                 (apply
                                   (case-lambda
                                     ((g$foo$8642$Of4HK
                                        g$make-foo$8643$Of4HK
                                        g$foo?$8644$Of4HK)
                                      g$make-foo$8643$Of4HK))
                                   g$ls/false$8641$Of4HK)
                                 ((case-lambda
                                    ((g$t$8645$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$8646$Of4HK)
                                         (if (if g$ls/false$8646$Of4HK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8647$Of4HK)
                                                      (g$id?$6918$Of4HK
                                                        g$foo$8647$Of4HK)))
                                                   g$ls/false$8646$Of4HK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8648$Of4HK)
                                                (g$id$8422$Of4HK
                                                  g$foo$8648$Of4HK
                                                  '"make-"
                                                  (g$stx->datum$6929$Of4HK
                                                    g$foo$8648$Of4HK))))
                                             g$ls/false$8646$Of4HK)
                                           (g$syntax-violation$7302$Of4HK
                                             '#f
                                             '"invalid syntax"
                                             g$t$8645$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$8645$Of4HK
                                        'any))))
                                  g$t$8640$Of4HK))))
                            (g$syntax-dispatch$7196$Of4HK
                              g$t$8640$Of4HK
                              '(any any any)))))
                        g$spec$8639$Of4HK))))
                  (g$get-record-predicate-name$8425$Of4HK
                    (case-lambda
                      ((g$spec$8629$Of4HK)
                       ((case-lambda
                          ((g$t$8630$Of4HK)
                           ((case-lambda
                              ((g$ls/false$8631$Of4HK)
                               (if g$ls/false$8631$Of4HK
                                 (apply
                                   (case-lambda
                                     ((g$foo$8632$Of4HK
                                        g$make-foo$8633$Of4HK
                                        g$foo?$8634$Of4HK)
                                      g$foo?$8634$Of4HK))
                                   g$ls/false$8631$Of4HK)
                                 ((case-lambda
                                    ((g$t$8635$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$8636$Of4HK)
                                         (if (if g$ls/false$8636$Of4HK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8637$Of4HK)
                                                      (g$id?$6918$Of4HK
                                                        g$foo$8637$Of4HK)))
                                                   g$ls/false$8636$Of4HK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8638$Of4HK)
                                                (g$id$8422$Of4HK
                                                  g$foo$8638$Of4HK
                                                  (g$stx->datum$6929$Of4HK
                                                    g$foo$8638$Of4HK)
                                                  '"?")))
                                             g$ls/false$8636$Of4HK)
                                           (g$syntax-violation$7302$Of4HK
                                             '#f
                                             '"invalid syntax"
                                             g$t$8635$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$8635$Of4HK
                                        'any))))
                                  g$t$8630$Of4HK))))
                            (g$syntax-dispatch$7196$Of4HK
                              g$t$8630$Of4HK
                              '(any any any)))))
                        g$spec$8629$Of4HK))))
                  (g$get-clause$8426$Of4HK
                    (case-lambda
                      ((g$id$8620$Of4HK g$ls$8621$Of4HK)
                       ((case-lambda
                          ((g$t$8622$Of4HK)
                           ((case-lambda
                              ((g$ls/false$8623$Of4HK)
                               (if g$ls/false$8623$Of4HK
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$8623$Of4HK)
                                 ((case-lambda
                                    ((g$t$8624$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$8625$Of4HK)
                                         (if g$ls/false$8625$Of4HK
                                           (apply
                                             (case-lambda
                                               ((g$x$8626$Of4HK
                                                  g$rest$8627$Of4HK
                                                  g$ls$8628$Of4HK)
                                                (if (g$free-id=?$6922$Of4HK
                                                      (g$bless$7159$Of4HK
                                                        g$id$8620$Of4HK)
                                                      g$x$8626$Of4HK)
                                                  (cons
                                                    g$x$8626$Of4HK
                                                    g$rest$8627$Of4HK)
                                                  (g$get-clause$8426$Of4HK
                                                    g$id$8620$Of4HK
                                                    g$ls$8628$Of4HK))))
                                             g$ls/false$8625$Of4HK)
                                           (g$syntax-violation$7302$Of4HK
                                             '#f
                                             '"invalid syntax"
                                             g$t$8624$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$8624$Of4HK
                                        '((any . any) . any)))))
                                  g$t$8622$Of4HK))))
                            (g$syntax-dispatch$7196$Of4HK g$t$8622$Of4HK '()))))
                        g$ls$8621$Of4HK))))
                  (g$foo-rtd-code$8427$Of4HK
                    (case-lambda
                      ((g$name$8574$Of4HK g$clause*$8575$Of4HK)
                       (letrec* ((g$convert-field-spec*$8576$Of4HK
                                   (case-lambda
                                     ((g$ls$8607$Of4HK)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$8608$Of4HK)
                                                ((case-lambda
                                                   ((g$t$8609$Of4HK)
                                                    ((case-lambda
                                                       ((g$ls/false$8610$Of4HK)
                                                        (if g$ls/false$8610$Of4HK
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$8611$Of4HK
                                                                 g$rest$8612$Of4HK)
                                                               (list
                                                                 'mutable
                                                                 g$name$8611$Of4HK)))
                                                            g$ls/false$8610$Of4HK)
                                                          ((case-lambda
                                                             ((g$t$8613$Of4HK)
                                                              ((case-lambda
                                                                 ((g$ls/false$8614$Of4HK)
                                                                  (if g$ls/false$8614$Of4HK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$8615$Of4HK
                                                                           g$rest$8616$Of4HK)
                                                                         (list
                                                                           'immutable
                                                                           g$name$8615$Of4HK)))
                                                                      g$ls/false$8614$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$t$8617$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8618$Of4HK)
                                                                            (if g$ls/false$8618$Of4HK
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$8619$Of4HK)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$8619$Of4HK)))
                                                                                g$ls/false$8618$Of4HK)
                                                                              (g$syntax-violation$7302$Of4HK
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8617$Of4HK))))
                                                                         (g$syntax-dispatch$7196$Of4HK
                                                                           g$t$8617$Of4HK
                                                                           'any))))
                                                                     g$t$8613$Of4HK))))
                                                               (g$syntax-dispatch$7196$Of4HK
                                                                 g$t$8613$Of4HK
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$8609$Of4HK))))
                                                     (g$syntax-dispatch$7196$Of4HK
                                                       g$t$8609$Of4HK
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$8608$Of4HK)))
                                             g$ls$8607$Of4HK))))))
                         ((case-lambda
                            ((g$parent-rtd-code$8577$Of4HK
                               g$uid-code$8578$Of4HK
                               g$sealed?$8579$Of4HK
                               g$opaque?$8580$Of4HK
                               g$fields$8581$Of4HK)
                             (g$bless$7159$Of4HK
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$8574$Of4HK)
                                 g$parent-rtd-code$8577$Of4HK
                                 g$uid-code$8578$Of4HK
                                 g$sealed?$8579$Of4HK
                                 g$opaque?$8580$Of4HK
                                 g$fields$8581$Of4HK))))
                          ((case-lambda
                             ((g$t$8582$Of4HK)
                              ((case-lambda
                                 ((g$ls/false$8583$Of4HK)
                                  (if g$ls/false$8583$Of4HK
                                    (apply
                                      (case-lambda
                                        ((g$name$8584$Of4HK)
                                         (list
                                           'record-type-descriptor
                                           g$name$8584$Of4HK)))
                                      g$ls/false$8583$Of4HK)
                                    ((case-lambda
                                       ((g$t$8585$Of4HK)
                                        ((case-lambda
                                           ((g$ls/false$8586$Of4HK)
                                            (if g$ls/false$8586$Of4HK
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8586$Of4HK)
                                              (g$syntax-violation$7302$Of4HK
                                                '#f
                                                '"invalid syntax"
                                                g$t$8585$Of4HK))))
                                         (g$syntax-dispatch$7196$Of4HK
                                           g$t$8585$Of4HK
                                           '_))))
                                     g$t$8582$Of4HK))))
                               (g$syntax-dispatch$7196$Of4HK
                                 g$t$8582$Of4HK
                                 '(_ any)))))
                           (g$get-clause$8426$Of4HK
                             'parent
                             g$clause*$8575$Of4HK))
                          ((case-lambda
                             ((g$t$8587$Of4HK)
                              ((case-lambda
                                 ((g$ls/false$8588$Of4HK)
                                  (if g$ls/false$8588$Of4HK
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$8588$Of4HK)
                                    ((case-lambda
                                       ((g$t$8589$Of4HK)
                                        ((case-lambda
                                           ((g$ls/false$8590$Of4HK)
                                            (if g$ls/false$8590$Of4HK
                                              (apply
                                                (case-lambda
                                                  ((g$uid$8591$Of4HK)
                                                   (list
                                                     'quote
                                                     g$uid$8591$Of4HK)))
                                                g$ls/false$8590$Of4HK)
                                              ((case-lambda
                                                 ((g$t$8592$Of4HK)
                                                  ((case-lambda
                                                     ((g$ls/false$8593$Of4HK)
                                                      (if g$ls/false$8593$Of4HK
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$8593$Of4HK)
                                                        (g$syntax-violation$7302$Of4HK
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$8592$Of4HK))))
                                                   (g$syntax-dispatch$7196$Of4HK
                                                     g$t$8592$Of4HK
                                                     '_))))
                                               g$t$8589$Of4HK))))
                                         (g$syntax-dispatch$7196$Of4HK
                                           g$t$8589$Of4HK
                                           '(_ any)))))
                                     g$t$8587$Of4HK))))
                               (g$syntax-dispatch$7196$Of4HK
                                 g$t$8587$Of4HK
                                 '(_)))))
                           (g$get-clause$8426$Of4HK
                             'nongenerative
                             g$clause*$8575$Of4HK))
                          ((case-lambda
                             ((g$t$8594$Of4HK)
                              ((case-lambda
                                 ((g$ls/false$8595$Of4HK)
                                  (if g$ls/false$8595$Of4HK
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8595$Of4HK)
                                    ((case-lambda
                                       ((g$t$8596$Of4HK)
                                        ((case-lambda
                                           ((g$ls/false$8597$Of4HK)
                                            (if g$ls/false$8597$Of4HK
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8597$Of4HK)
                                              (g$syntax-violation$7302$Of4HK
                                                '#f
                                                '"invalid syntax"
                                                g$t$8596$Of4HK))))
                                         (g$syntax-dispatch$7196$Of4HK
                                           g$t$8596$Of4HK
                                           '_))))
                                     g$t$8594$Of4HK))))
                               (g$syntax-dispatch$7196$Of4HK
                                 g$t$8594$Of4HK
                                 '(_ #(atom #t))))))
                           (g$get-clause$8426$Of4HK
                             'sealed
                             g$clause*$8575$Of4HK))
                          ((case-lambda
                             ((g$t$8598$Of4HK)
                              ((case-lambda
                                 ((g$ls/false$8599$Of4HK)
                                  (if g$ls/false$8599$Of4HK
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8599$Of4HK)
                                    ((case-lambda
                                       ((g$t$8600$Of4HK)
                                        ((case-lambda
                                           ((g$ls/false$8601$Of4HK)
                                            (if g$ls/false$8601$Of4HK
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8601$Of4HK)
                                              (g$syntax-violation$7302$Of4HK
                                                '#f
                                                '"invalid syntax"
                                                g$t$8600$Of4HK))))
                                         (g$syntax-dispatch$7196$Of4HK
                                           g$t$8600$Of4HK
                                           '_))))
                                     g$t$8598$Of4HK))))
                               (g$syntax-dispatch$7196$Of4HK
                                 g$t$8598$Of4HK
                                 '(_ #(atom #t))))))
                           (g$get-clause$8426$Of4HK
                             'opaque
                             g$clause*$8575$Of4HK))
                          ((case-lambda
                             ((g$t$8602$Of4HK)
                              ((case-lambda
                                 ((g$ls/false$8603$Of4HK)
                                  (if g$ls/false$8603$Of4HK
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$8604$Of4HK)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$8576$Of4HK
                                             g$field-spec*$8604$Of4HK))))
                                      g$ls/false$8603$Of4HK)
                                    ((case-lambda
                                       ((g$t$8605$Of4HK)
                                        ((case-lambda
                                           ((g$ls/false$8606$Of4HK)
                                            (if g$ls/false$8606$Of4HK
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$8606$Of4HK)
                                              (g$syntax-violation$7302$Of4HK
                                                '#f
                                                '"invalid syntax"
                                                g$t$8605$Of4HK))))
                                         (g$syntax-dispatch$7196$Of4HK
                                           g$t$8605$Of4HK
                                           '_))))
                                     g$t$8602$Of4HK))))
                               (g$syntax-dispatch$7196$Of4HK
                                 g$t$8602$Of4HK
                                 '(_ . each-any)))))
                           (g$get-clause$8426$Of4HK
                             'fields
                             g$clause*$8575$Of4HK)))))))
                  (g$foo-rcd-code$8428$Of4HK
                    (case-lambda
                      ((g$clause*$8565$Of4HK
                         g$foo-rtd$8566$Of4HK
                         g$protocol$8567$Of4HK)
                       ((case-lambda
                          ((g$parent-rcd-code$8568$Of4HK)
                           (list
                             'make-record-constructor-descriptor
                             g$foo-rtd$8566$Of4HK
                             g$parent-rcd-code$8568$Of4HK
                             g$protocol$8567$Of4HK)))
                        ((case-lambda
                           ((g$t$8569$Of4HK)
                            ((case-lambda
                               ((g$ls/false$8570$Of4HK)
                                (if g$ls/false$8570$Of4HK
                                  (apply
                                    (case-lambda
                                      ((g$name$8571$Of4HK)
                                       (list
                                         'record-constructor-descriptor
                                         g$name$8571$Of4HK)))
                                    g$ls/false$8570$Of4HK)
                                  ((case-lambda
                                     ((g$t$8572$Of4HK)
                                      ((case-lambda
                                         ((g$ls/false$8573$Of4HK)
                                          (if g$ls/false$8573$Of4HK
                                            (apply
                                              (case-lambda (() '#f))
                                              g$ls/false$8573$Of4HK)
                                            (g$syntax-violation$7302$Of4HK
                                              '#f
                                              '"invalid syntax"
                                              g$t$8572$Of4HK))))
                                       (g$syntax-dispatch$7196$Of4HK
                                         g$t$8572$Of4HK
                                         '_))))
                                   g$t$8569$Of4HK))))
                             (g$syntax-dispatch$7196$Of4HK
                               g$t$8569$Of4HK
                               '(_ any)))))
                         (g$get-clause$8426$Of4HK
                           'parent
                           g$clause*$8565$Of4HK))))))
                  (g$get-protocol-code$8429$Of4HK
                    (case-lambda
                      ((g$clause*$8559$Of4HK)
                       ((case-lambda
                          ((g$t$8560$Of4HK)
                           ((case-lambda
                              ((g$ls/false$8561$Of4HK)
                               (if g$ls/false$8561$Of4HK
                                 (apply
                                   (case-lambda
                                     ((g$expr$8562$Of4HK) g$expr$8562$Of4HK))
                                   g$ls/false$8561$Of4HK)
                                 ((case-lambda
                                    ((g$t$8563$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$8564$Of4HK)
                                         (if g$ls/false$8564$Of4HK
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$8564$Of4HK)
                                           (g$syntax-violation$7302$Of4HK
                                             '#f
                                             '"invalid syntax"
                                             g$t$8563$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$8563$Of4HK
                                        '_))))
                                  g$t$8560$Of4HK))))
                            (g$syntax-dispatch$7196$Of4HK
                              g$t$8560$Of4HK
                              '(_ any)))))
                        (g$get-clause$8426$Of4HK
                          'protocol
                          g$clause*$8559$Of4HK)))))
                  (g$get-fields$8430$Of4HK
                    (case-lambda
                      ((g$clause*$8550$Of4HK)
                       ((case-lambda
                          ((g$t$8551$Of4HK)
                           ((case-lambda
                              ((g$ls/false$8552$Of4HK)
                               (if g$ls/false$8552$Of4HK
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8552$Of4HK)
                                 ((case-lambda
                                    ((g$t$8553$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$8554$Of4HK)
                                         (if g$ls/false$8554$Of4HK
                                           (apply
                                             (case-lambda
                                               ((g$f*$8555$Of4HK)
                                                g$f*$8555$Of4HK))
                                             g$ls/false$8554$Of4HK)
                                           ((case-lambda
                                              ((g$t$8556$Of4HK)
                                               ((case-lambda
                                                  ((g$ls/false$8557$Of4HK)
                                                   (if g$ls/false$8557$Of4HK
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8558$Of4HK)
                                                          (g$get-fields$8430$Of4HK
                                                            g$rest$8558$Of4HK)))
                                                       g$ls/false$8557$Of4HK)
                                                     (g$syntax-violation$7302$Of4HK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8556$Of4HK))))
                                                (g$syntax-dispatch$7196$Of4HK
                                                  g$t$8556$Of4HK
                                                  '(_ . any)))))
                                            g$t$8553$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$8553$Of4HK
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8551$Of4HK))))
                            (g$syntax-dispatch$7196$Of4HK g$t$8551$Of4HK '()))))
                        g$clause*$8550$Of4HK))))
                  (g$get-mutator-indices$8431$Of4HK
                    (case-lambda
                      ((g$fields$8538$Of4HK)
                       ((letrec ((g$f$8539$Of4HK
                                   (case-lambda
                                     ((g$fields$8540$Of4HK g$i$8541$Of4HK)
                                      ((case-lambda
                                         ((g$t$8542$Of4HK)
                                          ((case-lambda
                                             ((g$ls/false$8543$Of4HK)
                                              (if g$ls/false$8543$Of4HK
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8543$Of4HK)
                                                ((case-lambda
                                                   ((g$t$8544$Of4HK)
                                                    ((case-lambda
                                                       ((g$ls/false$8545$Of4HK)
                                                        (if g$ls/false$8545$Of4HK
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8546$Of4HK)
                                                               (cons
                                                                 g$i$8541$Of4HK
                                                                 (g$f$8539$Of4HK
                                                                   g$rest$8546$Of4HK
                                                                   (+ g$i$8541$Of4HK
                                                                      '1)))))
                                                            g$ls/false$8545$Of4HK)
                                                          ((case-lambda
                                                             ((g$t$8547$Of4HK)
                                                              ((case-lambda
                                                                 ((g$ls/false$8548$Of4HK)
                                                                  (if g$ls/false$8548$Of4HK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8549$Of4HK)
                                                                         (g$f$8539$Of4HK
                                                                           g$rest$8549$Of4HK
                                                                           (+ g$i$8541$Of4HK
                                                                              '1))))
                                                                      g$ls/false$8548$Of4HK)
                                                                    (g$syntax-violation$7302$Of4HK
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8547$Of4HK))))
                                                               (g$syntax-dispatch$7196$Of4HK
                                                                 g$t$8547$Of4HK
                                                                 '(_ . any)))))
                                                           g$t$8544$Of4HK))))
                                                     (g$syntax-dispatch$7196$Of4HK
                                                       g$t$8544$Of4HK
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8542$Of4HK))))
                                           (g$syntax-dispatch$7196$Of4HK
                                             g$t$8542$Of4HK
                                             '()))))
                                       g$fields$8540$Of4HK)))))
                          g$f$8539$Of4HK)
                        g$fields$8538$Of4HK
                        '0))))
                  (g$get-mutators$8432$Of4HK
                    (case-lambda
                      ((g$foo$8517$Of4HK g$fields$8518$Of4HK)
                       (letrec* ((g$gen-name$8519$Of4HK
                                   (case-lambda
                                     ((g$x$8537$Of4HK)
                                      (g$datum->syntax$7304$Of4HK
                                        g$foo$8517$Of4HK
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7305$Of4HK
                                                g$foo$8517$Of4HK))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7305$Of4HK
                                                g$x$8537$Of4HK))
                                            '"-set!")))))))
                         ((letrec ((g$f$8520$Of4HK
                                     (case-lambda
                                       ((g$fields$8521$Of4HK)
                                        ((case-lambda
                                           ((g$t$8522$Of4HK)
                                            ((case-lambda
                                               ((g$ls/false$8523$Of4HK)
                                                (if g$ls/false$8523$Of4HK
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8523$Of4HK)
                                                  ((case-lambda
                                                     ((g$t$8524$Of4HK)
                                                      ((case-lambda
                                                         ((g$ls/false$8525$Of4HK)
                                                          (if g$ls/false$8525$Of4HK
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8526$Of4HK
                                                                   g$accessor$8527$Of4HK
                                                                   g$mutator$8528$Of4HK
                                                                   g$rest$8529$Of4HK)
                                                                 (cons
                                                                   g$mutator$8528$Of4HK
                                                                   (g$f$8520$Of4HK
                                                                     g$rest$8529$Of4HK))))
                                                              g$ls/false$8525$Of4HK)
                                                            ((case-lambda
                                                               ((g$t$8530$Of4HK)
                                                                ((case-lambda
                                                                   ((g$ls/false$8531$Of4HK)
                                                                    (if g$ls/false$8531$Of4HK
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8532$Of4HK
                                                                             g$rest$8533$Of4HK)
                                                                           (cons
                                                                             (g$gen-name$8519$Of4HK
                                                                               g$name$8532$Of4HK)
                                                                             (g$f$8520$Of4HK
                                                                               g$rest$8533$Of4HK))))
                                                                        g$ls/false$8531$Of4HK)
                                                                      ((case-lambda
                                                                         ((g$t$8534$Of4HK)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8535$Of4HK)
                                                                              (if g$ls/false$8535$Of4HK
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8536$Of4HK)
                                                                                     (g$f$8520$Of4HK
                                                                                       g$rest$8536$Of4HK)))
                                                                                  g$ls/false$8535$Of4HK)
                                                                                (g$syntax-violation$7302$Of4HK
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8534$Of4HK))))
                                                                           (g$syntax-dispatch$7196$Of4HK
                                                                             g$t$8534$Of4HK
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8530$Of4HK))))
                                                                 (g$syntax-dispatch$7196$Of4HK
                                                                   g$t$8530$Of4HK
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8524$Of4HK))))
                                                       (g$syntax-dispatch$7196$Of4HK
                                                         g$t$8524$Of4HK
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8522$Of4HK))))
                                             (g$syntax-dispatch$7196$Of4HK
                                               g$t$8522$Of4HK
                                               '()))))
                                         g$fields$8521$Of4HK)))))
                            g$f$8520$Of4HK)
                          g$fields$8518$Of4HK)))))
                  (g$get-accessors$8433$Of4HK
                    (case-lambda
                      ((g$foo$8483$Of4HK g$fields$8484$Of4HK)
                       (letrec* ((g$gen-name$8485$Of4HK
                                   (case-lambda
                                     ((g$x$8516$Of4HK)
                                      (g$datum->syntax$7304$Of4HK
                                        g$foo$8483$Of4HK
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7305$Of4HK
                                                g$foo$8483$Of4HK))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7305$Of4HK
                                                g$x$8516$Of4HK)))))))))
                         (map (case-lambda
                                ((g$field$8486$Of4HK)
                                 ((case-lambda
                                    ((g$t$8487$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$8488$Of4HK)
                                         (if (if g$ls/false$8488$Of4HK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8489$Of4HK
                                                        g$accessor$8490$Of4HK
                                                        g$mutator$8491$Of4HK)
                                                      (g$id?$6918$Of4HK
                                                        g$accessor$8490$Of4HK)))
                                                   g$ls/false$8488$Of4HK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8492$Of4HK
                                                  g$accessor$8493$Of4HK
                                                  g$mutator$8494$Of4HK)
                                                g$accessor$8493$Of4HK))
                                             g$ls/false$8488$Of4HK)
                                           ((case-lambda
                                              ((g$t$8495$Of4HK)
                                               ((case-lambda
                                                  ((g$ls/false$8496$Of4HK)
                                                   (if (if g$ls/false$8496$Of4HK
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8497$Of4HK
                                                                  g$accessor$8498$Of4HK)
                                                                (g$id?$6918$Of4HK
                                                                  g$accessor$8498$Of4HK)))
                                                             g$ls/false$8496$Of4HK))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8499$Of4HK
                                                            g$accessor$8500$Of4HK)
                                                          g$accessor$8500$Of4HK))
                                                       g$ls/false$8496$Of4HK)
                                                     ((case-lambda
                                                        ((g$t$8501$Of4HK)
                                                         ((case-lambda
                                                            ((g$ls/false$8502$Of4HK)
                                                             (if (if g$ls/false$8502$Of4HK
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8503$Of4HK)
                                                                          (g$id?$6918$Of4HK
                                                                            g$name$8503$Of4HK)))
                                                                       g$ls/false$8502$Of4HK))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8504$Of4HK)
                                                                    (g$gen-name$8485$Of4HK
                                                                      g$name$8504$Of4HK)))
                                                                 g$ls/false$8502$Of4HK)
                                                               ((case-lambda
                                                                  ((g$t$8505$Of4HK)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8506$Of4HK)
                                                                       (if (if g$ls/false$8506$Of4HK
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8507$Of4HK)
                                                                                    (g$id?$6918$Of4HK
                                                                                      g$name$8507$Of4HK)))
                                                                                 g$ls/false$8506$Of4HK))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8508$Of4HK)
                                                                              (g$gen-name$8485$Of4HK
                                                                                g$name$8508$Of4HK)))
                                                                           g$ls/false$8506$Of4HK)
                                                                         ((case-lambda
                                                                            ((g$t$8509$Of4HK)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8510$Of4HK)
                                                                                 (if (if g$ls/false$8510$Of4HK
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8511$Of4HK)
                                                                                              (g$id?$6918$Of4HK
                                                                                                g$name$8511$Of4HK)))
                                                                                           g$ls/false$8510$Of4HK))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8512$Of4HK)
                                                                                        (g$gen-name$8485$Of4HK
                                                                                          g$name$8512$Of4HK)))
                                                                                     g$ls/false$8510$Of4HK)
                                                                                   ((case-lambda
                                                                                      ((g$t$8513$Of4HK)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8514$Of4HK)
                                                                                           (if g$ls/false$8514$Of4HK
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8515$Of4HK)
                                                                                                  (g$syntax-violation$7302$Of4HK
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8486$Of4HK)))
                                                                                               g$ls/false$8514$Of4HK)
                                                                                             (g$syntax-violation$7302$Of4HK
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8513$Of4HK))))
                                                                                        (g$syntax-dispatch$7196$Of4HK
                                                                                          g$t$8513$Of4HK
                                                                                          'any))))
                                                                                    g$t$8509$Of4HK))))
                                                                              (g$syntax-dispatch$7196$Of4HK
                                                                                g$t$8509$Of4HK
                                                                                'any))))
                                                                          g$t$8505$Of4HK))))
                                                                    (g$syntax-dispatch$7196$Of4HK
                                                                      g$t$8505$Of4HK
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8501$Of4HK))))
                                                          (g$syntax-dispatch$7196$Of4HK
                                                            g$t$8501$Of4HK
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8495$Of4HK))))
                                                (g$syntax-dispatch$7196$Of4HK
                                                  g$t$8495$Of4HK
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8487$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$8487$Of4HK
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8486$Of4HK)))
                              g$fields$8484$Of4HK)))))
                  (g$enumerate$8434$Of4HK
                    (case-lambda
                      ((g$ls$8479$Of4HK)
                       ((letrec ((g$f$8480$Of4HK
                                   (case-lambda
                                     ((g$ls$8481$Of4HK g$i$8482$Of4HK)
                                      (if (null? g$ls$8481$Of4HK)
                                        '()
                                        (cons
                                          g$i$8482$Of4HK
                                          (g$f$8480$Of4HK
                                            (cdr g$ls$8481$Of4HK)
                                            (+ g$i$8482$Of4HK '1))))))))
                          g$f$8480$Of4HK)
                        g$ls$8479$Of4HK
                        '0))))
                  (g$do-define-record$8435$Of4HK
                    (case-lambda
                      ((g$namespec$8459$Of4HK g$clause*$8460$Of4HK)
                       ((case-lambda
                          ((g$foo$8461$Of4HK)
                           ((case-lambda
                              ((g$foo-rtd$8462$Of4HK)
                               ((case-lambda
                                  ((g$foo-rcd$8463$Of4HK)
                                   ((case-lambda
                                      ((g$protocol$8464$Of4HK)
                                       ((case-lambda
                                          ((g$make-foo$8465$Of4HK)
                                           ((case-lambda
                                              ((g$fields$8466$Of4HK)
                                               ((case-lambda
                                                  ((g$idx*$8467$Of4HK)
                                                   ((case-lambda
                                                      ((g$foo-x*$8468$Of4HK)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8469$Of4HK)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8470$Of4HK)
                                                               ((case-lambda
                                                                  ((g$foo?$8471$Of4HK)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8472$Of4HK)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8473$Of4HK)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8474$Of4HK)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7159$Of4HK
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8462$Of4HK
                                                                                           g$foo-rtd-code$8472$Of4HK)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8464$Of4HK
                                                                                             g$protocol-code$8474$Of4HK)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8463$Of4HK
                                                                                               g$foo-rcd-code$8473$Of4HK)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8461$Of4HK
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8462$Of4HK)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8463$Of4HK)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8471$Of4HK
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8462$Of4HK))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8465$Of4HK
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8463$Of4HK))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8475$Of4HK
                                                                                                               g$idx$8476$Of4HK)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8475$Of4HK
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8462$Of4HK
                                                                                                                 g$idx$8476$Of4HK))))
                                                                                                          g$foo-x*$8468$Of4HK
                                                                                                          g$idx*$8467$Of4HK)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8477$Of4HK
                                                                                                               g$idx$8478$Of4HK)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8477$Of4HK
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8462$Of4HK
                                                                                                                 g$idx$8478$Of4HK))))
                                                                                                          g$set-foo-x!*$8469$Of4HK
                                                                                                          g$set-foo-idx*$8470$Of4HK)))))))))))))))
                                                                            (g$get-protocol-code$8429$Of4HK
                                                                              g$clause*$8460$Of4HK))))
                                                                        (g$foo-rcd-code$8428$Of4HK
                                                                          g$clause*$8460$Of4HK
                                                                          g$foo-rtd$8462$Of4HK
                                                                          g$protocol$8464$Of4HK))))
                                                                    (g$foo-rtd-code$8427$Of4HK
                                                                      g$foo$8461$Of4HK
                                                                      g$clause*$8460$Of4HK))))
                                                                (g$get-record-predicate-name$8425$Of4HK
                                                                  g$namespec$8459$Of4HK))))
                                                            (g$get-mutator-indices$8431$Of4HK
                                                              g$fields$8466$Of4HK))))
                                                        (g$get-mutators$8432$Of4HK
                                                          g$foo$8461$Of4HK
                                                          g$fields$8466$Of4HK))))
                                                    (g$get-accessors$8433$Of4HK
                                                      g$foo$8461$Of4HK
                                                      g$fields$8466$Of4HK))))
                                                (g$enumerate$8434$Of4HK
                                                  g$fields$8466$Of4HK))))
                                            (g$get-fields$8430$Of4HK
                                              g$clause*$8460$Of4HK))))
                                        (g$get-record-constructor-name$8424$Of4HK
                                          g$namespec$8459$Of4HK))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8423$Of4HK g$namespec$8459$Of4HK)))))
                  (g$verify-clauses$8436$Of4HK
                    (case-lambda
                      ((g$x$8441$Of4HK g$cls*$8442$Of4HK)
                       (letrec* ((g$valid-kwds$8443$Of4HK
                                   (map g$bless$7159$Of4HK
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8444$Of4HK
                                   (case-lambda
                                     ((g$x$8456$Of4HK g$ls$8457$Of4HK)
                                      (if (pair? g$ls$8457$Of4HK)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8458$Of4HK)
                                              (if g$t$8458$Of4HK
                                                g$t$8458$Of4HK
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8444$Of4HK
                                                    g$x$8456$Of4HK
                                                    (cdr g$ls$8457$Of4HK))))))
                                           (g$free-id=?$6922$Of4HK
                                             g$x$8456$Of4HK
                                             (car g$ls$8457$Of4HK))))
                                        '#f)))))
                         ((letrec ((g$f$8445$Of4HK
                                     (case-lambda
                                       ((g$cls*$8446$Of4HK g$seen*$8447$Of4HK)
                                        (if (null? g$cls*$8446$Of4HK)
                                          (void)
                                          ((case-lambda
                                             ((g$t$8448$Of4HK)
                                              ((case-lambda
                                                 ((g$ls/false$8449$Of4HK)
                                                  (if g$ls/false$8449$Of4HK
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8450$Of4HK
                                                           g$rest$8451$Of4HK)
                                                         (if ((case-lambda
                                                                ((g$t$8452$Of4HK)
                                                                 (if g$t$8452$Of4HK
                                                                   g$t$8452$Of4HK
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8444$Of4HK
                                                                            g$kwd$8450$Of4HK
                                                                            g$valid-kwds$8443$Of4HK))))))
                                                              (not (g$id?$6918$Of4HK
                                                                     g$kwd$8450$Of4HK)))
                                                           (g$syntax-violation$7302$Of4HK
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8450$Of4HK)
                                                           (if (g$bound-id-member?$6925$Of4HK
                                                                 g$kwd$8450$Of4HK
                                                                 g$seen*$8447$Of4HK)
                                                             (g$syntax-violation$7302$Of4HK
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8441$Of4HK
                                                               g$kwd$8450$Of4HK)
                                                             (g$f$8445$Of4HK
                                                               (cdr g$cls*$8446$Of4HK)
                                                               (cons
                                                                 g$kwd$8450$Of4HK
                                                                 g$seen*$8447$Of4HK))))))
                                                      g$ls/false$8449$Of4HK)
                                                    ((case-lambda
                                                       ((g$t$8453$Of4HK)
                                                        ((case-lambda
                                                           ((g$ls/false$8454$Of4HK)
                                                            (if g$ls/false$8454$Of4HK
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8455$Of4HK)
                                                                   (g$syntax-violation$7302$Of4HK
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8455$Of4HK)))
                                                                g$ls/false$8454$Of4HK)
                                                              (g$syntax-violation$7302$Of4HK
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8453$Of4HK))))
                                                         (g$syntax-dispatch$7196$Of4HK
                                                           g$t$8453$Of4HK
                                                           'any))))
                                                     g$t$8448$Of4HK))))
                                               (g$syntax-dispatch$7196$Of4HK
                                                 g$t$8448$Of4HK
                                                 '(any . any)))))
                                           (car g$cls*$8446$Of4HK)))))))
                            g$f$8445$Of4HK)
                          g$cls*$8442$Of4HK
                          '()))))))
          ((case-lambda
             ((g$t$8437$Of4HK)
              ((case-lambda
                 ((g$ls/false$8438$Of4HK)
                  (if g$ls/false$8438$Of4HK
                    (apply
                      (case-lambda
                        ((g$namespec$8439$Of4HK g$clause*$8440$Of4HK)
                         (begin
                           (g$verify-clauses$8436$Of4HK
                             g$x$8421$Of4HK
                             g$clause*$8440$Of4HK)
                           (g$do-define-record$8435$Of4HK
                             g$namespec$8439$Of4HK
                             g$clause*$8440$Of4HK))))
                      g$ls/false$8438$Of4HK)
                    (g$syntax-violation$7302$Of4HK
                      '#f
                      '"invalid syntax"
                      g$t$8437$Of4HK))))
               (g$syntax-dispatch$7196$Of4HK
                 g$t$8437$Of4HK
                 '(_ any . each-any)))))
           g$x$8421$Of4HK)))))
   (g$define-condition-type-macro$7191$Of4HK
     g$define-condition-type-macro$10623$Of4HK
     (case-lambda
       ((g$x$8661$Of4HK)
        (letrec* ((g$mkname$8662$Of4HK
                    (case-lambda
                      ((g$name$8685$Of4HK g$suffix$8686$Of4HK)
                       (g$datum->syntax$7304$Of4HK
                         g$name$8685$Of4HK
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7305$Of4HK g$name$8685$Of4HK))
                             g$suffix$8686$Of4HK)))))))
          ((case-lambda
             ((g$t$8663$Of4HK)
              ((case-lambda
                 ((g$ls/false$8664$Of4HK)
                  (if (if g$ls/false$8664$Of4HK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$8665$Of4HK
                                 g$name$8666$Of4HK
                                 g$super$8667$Of4HK
                                 g$constructor$8668$Of4HK
                                 g$predicate$8669$Of4HK
                                 g$field*$8670$Of4HK
                                 g$accessor*$8671$Of4HK)
                               (if (g$id?$6918$Of4HK g$name$8666$Of4HK)
                                 (if (g$id?$6918$Of4HK g$super$8667$Of4HK)
                                   (if (g$id?$6918$Of4HK
                                         g$constructor$8668$Of4HK)
                                     (if (g$id?$6918$Of4HK
                                           g$predicate$8669$Of4HK)
                                       (if (g$for-all$5347$Of4HK
                                             g$id?$6918$Of4HK
                                             g$field*$8670$Of4HK)
                                         (begin
                                           '#f
                                           (g$for-all$5347$Of4HK
                                             g$id?$6918$Of4HK
                                             g$accessor*$8671$Of4HK))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$8664$Of4HK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$8672$Of4HK
                           g$name$8673$Of4HK
                           g$super$8674$Of4HK
                           g$constructor$8675$Of4HK
                           g$predicate$8676$Of4HK
                           g$field*$8677$Of4HK
                           g$accessor*$8678$Of4HK)
                         ((case-lambda
                            ((g$aux-accessor*$8679$Of4HK)
                             (g$bless$7159$Of4HK
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$8673$Of4HK
                                         g$constructor$8675$Of4HK
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$8674$Of4HK)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$8680$Of4HK
                                                       g$aux$8681$Of4HK)
                                                     (list
                                                       'immutable
                                                       g$field$8680$Of4HK
                                                       g$aux$8681$Of4HK)))
                                                  g$field*$8677$Of4HK
                                                  g$aux-accessor*$8679$Of4HK))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$8676$Of4HK
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$8673$Of4HK)))
                                     (map (case-lambda
                                            ((g$accessor$8682$Of4HK
                                               g$aux$8683$Of4HK)
                                             (list
                                               'define
                                               g$accessor$8682$Of4HK
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$8673$Of4HK)
                                                 g$aux$8683$Of4HK))))
                                          g$accessor*$8678$Of4HK
                                          g$aux-accessor*$8679$Of4HK)))))))
                          (map (case-lambda ((g$x$8684$Of4HK) (gensym)))
                               g$accessor*$8678$Of4HK))))
                      g$ls/false$8664$Of4HK)
                    (g$syntax-violation$7302$Of4HK
                      '#f
                      '"invalid syntax"
                      g$t$8663$Of4HK))))
               (g$syntax-dispatch$7196$Of4HK
                 g$t$8663$Of4HK
                 '(any any any any any . #(each (any any)))))))
           g$x$8661$Of4HK)))))
   (g$incorrect-usage-macro$7192$Of4HK
     g$incorrect-usage-macro$10624$Of4HK
     (case-lambda
       ((g$e$8687$Of4HK)
        (g$syntax-violation$7302$Of4HK
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$8687$Of4HK))))
   (g$parameterize-transformer$7193$Of4HK
     g$parameterize-transformer$10625$Of4HK
     (case-lambda
       ((g$e$8688$Of4HK g$r$8689$Of4HK g$mr$8690$Of4HK)
        ((case-lambda
           ((g$t$8691$Of4HK)
            ((case-lambda
               ((g$ls/false$8692$Of4HK)
                (if g$ls/false$8692$Of4HK
                  (apply
                    (case-lambda
                      ((g$b$8693$Of4HK g$b*$8694$Of4HK)
                       (g$chi-internal$7225$Of4HK
                         (cons g$b$8693$Of4HK g$b*$8694$Of4HK)
                         g$r$8689$Of4HK
                         g$mr$8690$Of4HK)))
                    g$ls/false$8692$Of4HK)
                  ((case-lambda
                     ((g$t$8695$Of4HK)
                      ((case-lambda
                         ((g$ls/false$8696$Of4HK)
                          (if g$ls/false$8696$Of4HK
                            (apply
                              (case-lambda
                                ((g$olhs*$8697$Of4HK
                                   g$orhs*$8698$Of4HK
                                   g$b$8699$Of4HK
                                   g$b*$8700$Of4HK)
                                 ((case-lambda
                                    ((g$lhs*$8701$Of4HK
                                       g$rhs*$8702$Of4HK
                                       g$t*$8703$Of4HK
                                       g$swap$8704$Of4HK)
                                     (g$build-let$6851$Of4HK
                                       '#f
                                       (append
                                         g$lhs*$8701$Of4HK
                                         g$rhs*$8702$Of4HK)
                                       (append
                                         (g$chi-expr*$7212$Of4HK
                                           g$olhs*$8697$Of4HK
                                           g$r$8689$Of4HK
                                           g$mr$8690$Of4HK)
                                         (g$chi-expr*$7212$Of4HK
                                           g$orhs*$8698$Of4HK
                                           g$r$8689$Of4HK
                                           g$mr$8690$Of4HK))
                                       (g$build-let$6851$Of4HK
                                         '#f
                                         (list g$swap$8704$Of4HK)
                                         (list
                                           (g$build-lambda$6849$Of4HK
                                             '#f
                                             '()
                                             (g$build-sequence$6852$Of4HK
                                               '#f
                                               (map (case-lambda
                                                      ((g$t$8705$Of4HK
                                                         g$lhs$8706$Of4HK
                                                         g$rhs$8707$Of4HK)
                                                       (g$build-let$6851$Of4HK
                                                         '#f
                                                         (list g$t$8705$Of4HK)
                                                         (list
                                                           (list
                                                             g$lhs$8706$Of4HK))
                                                         (g$build-sequence$6852$Of4HK
                                                           '#f
                                                           (list
                                                             (list
                                                               g$lhs$8706$Of4HK
                                                               g$rhs$8707$Of4HK)
                                                             (list
                                                               'set!
                                                               g$rhs$8707$Of4HK
                                                               g$t$8705$Of4HK))))))
                                                    g$t*$8703$Of4HK
                                                    g$lhs*$8701$Of4HK
                                                    g$rhs*$8702$Of4HK))))
                                         (list
                                           '(primitive dynamic-wind)
                                           g$swap$8704$Of4HK
                                           (g$build-lambda$6849$Of4HK
                                             '#f
                                             '()
                                             (g$chi-internal$7225$Of4HK
                                               (cons
                                                 g$b$8699$Of4HK
                                                 g$b*$8700$Of4HK)
                                               g$r$8689$Of4HK
                                               g$mr$8690$Of4HK))
                                           g$swap$8704$Of4HK)))))
                                  (map (case-lambda
                                         ((g$x$8708$Of4HK)
                                          (g$gen-lexical$6862$Of4HK 'lhs)))
                                       g$olhs*$8697$Of4HK)
                                  (map (case-lambda
                                         ((g$x$8709$Of4HK)
                                          (g$gen-lexical$6862$Of4HK 'rhs)))
                                       g$olhs*$8697$Of4HK)
                                  (map (case-lambda
                                         ((g$x$8710$Of4HK)
                                          (g$gen-lexical$6862$Of4HK 't)))
                                       g$olhs*$8697$Of4HK)
                                  (g$gen-lexical$6862$Of4HK 'swap))))
                              g$ls/false$8696$Of4HK)
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"invalid syntax"
                              g$t$8695$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$8695$Of4HK
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$8691$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$8691$Of4HK
               '(_ () any . each-any)))))
         g$e$8688$Of4HK))))
   (g$foreign-call-transformer$7194$Of4HK
     g$foreign-call-transformer$10626$Of4HK
     (case-lambda
       ((g$e$8711$Of4HK g$r$8712$Of4HK g$mr$8713$Of4HK)
        ((case-lambda
           ((g$t$8714$Of4HK)
            ((case-lambda
               ((g$ls/false$8715$Of4HK)
                (if g$ls/false$8715$Of4HK
                  (apply
                    (case-lambda
                      ((g$name$8716$Of4HK g$arg*$8717$Of4HK)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7214$Of4HK
                             g$name$8716$Of4HK
                             g$r$8712$Of4HK
                             g$mr$8713$Of4HK)
                           (g$chi-expr*$7212$Of4HK
                             g$arg*$8717$Of4HK
                             g$r$8712$Of4HK
                             g$mr$8713$Of4HK)))))
                    g$ls/false$8715$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$8714$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$8714$Of4HK
               '(_ any . each-any)))))
         g$e$8711$Of4HK))))
   (g$convert-pattern$7195$Of4HK
     g$convert-pattern$10627$Of4HK
     (case-lambda
       ((g$pattern$8718$Of4HK g$keys$8719$Of4HK)
        (letrec* ((g$cvt*$8720$Of4HK
                    (case-lambda
                      ((g$p*$8800$Of4HK g$n$8801$Of4HK g$ids$8802$Of4HK)
                       (if (null? g$p*$8800$Of4HK)
                         (values '() g$ids$8802$Of4HK)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$8720$Of4HK
                                (cdr g$p*$8800$Of4HK)
                                g$n$8801$Of4HK
                                g$ids$8802$Of4HK)))
                           (case-lambda
                             ((g$y$8805$Of4HK g$ids$8806$Of4HK)
                              ((case-lambda
                                 ((g$ids$8807$Of4HK g$y$8808$Of4HK)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$8721$Of4HK
                                         (car g$p*$8800$Of4HK)
                                         g$n$8801$Of4HK
                                         g$ids$8807$Of4HK)))
                                    (case-lambda
                                      ((g$x$8811$Of4HK g$ids$8812$Of4HK)
                                       ((case-lambda
                                          ((g$ids$8813$Of4HK g$x$8814$Of4HK)
                                           (values
                                             (cons
                                               g$x$8814$Of4HK
                                               g$y$8808$Of4HK)
                                             g$ids$8813$Of4HK)))
                                        g$ids$8812$Of4HK
                                        g$x$8811$Of4HK))))))
                               g$ids$8806$Of4HK
                               g$y$8805$Of4HK))))))))
                  (g$cvt$8721$Of4HK
                    (case-lambda
                      ((g$p$8722$Of4HK g$n$8723$Of4HK g$ids$8724$Of4HK)
                       ((case-lambda
                          ((g$t$8725$Of4HK)
                           ((case-lambda
                              ((g$ls/false$8726$Of4HK)
                               (if (if g$ls/false$8726$Of4HK
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$8727$Of4HK)
                                            (g$id?$6918$Of4HK g$id$8727$Of4HK)))
                                         g$ls/false$8726$Of4HK))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$8728$Of4HK)
                                      (if (g$bound-id-member?$6925$Of4HK
                                            g$p$8722$Of4HK
                                            g$keys$8719$Of4HK)
                                        (values
                                          (vector 'free-id g$p$8722$Of4HK)
                                          g$ids$8724$Of4HK)
                                        (if (g$free-id=?$6922$Of4HK
                                              g$p$8722$Of4HK
                                              (g$scheme-stx$7139$Of4HK '_))
                                          (values '_ g$ids$8724$Of4HK)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$8722$Of4HK
                                                g$n$8723$Of4HK)
                                              g$ids$8724$Of4HK))))))
                                   g$ls/false$8726$Of4HK)
                                 ((case-lambda
                                    ((g$t$8729$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$8730$Of4HK)
                                         (if (if g$ls/false$8730$Of4HK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8731$Of4HK
                                                        g$dots$8732$Of4HK)
                                                      (g$ellipsis?$7197$Of4HK
                                                        g$dots$8732$Of4HK)))
                                                   g$ls/false$8730$Of4HK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$8733$Of4HK
                                                  g$dots$8734$Of4HK)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$8721$Of4HK
                                                       g$p$8733$Of4HK
                                                       (+ g$n$8723$Of4HK '1)
                                                       g$ids$8724$Of4HK)))
                                                  (case-lambda
                                                    ((g$p$8737$Of4HK
                                                       g$ids$8738$Of4HK)
                                                     ((case-lambda
                                                        ((g$ids$8739$Of4HK
                                                           g$p$8740$Of4HK)
                                                         (values
                                                           (if (eq? g$p$8740$Of4HK
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$8740$Of4HK))
                                                           g$ids$8739$Of4HK)))
                                                      g$ids$8738$Of4HK
                                                      g$p$8737$Of4HK))))))
                                             g$ls/false$8730$Of4HK)
                                           ((case-lambda
                                              ((g$t$8741$Of4HK)
                                               ((case-lambda
                                                  ((g$ls/false$8742$Of4HK)
                                                   (if (if g$ls/false$8742$Of4HK
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$8743$Of4HK
                                                                  g$dots$8744$Of4HK
                                                                  g$ys$8745$Of4HK
                                                                  g$z$8746$Of4HK)
                                                                (g$ellipsis?$7197$Of4HK
                                                                  g$dots$8744$Of4HK)))
                                                             g$ls/false$8742$Of4HK))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$8747$Of4HK
                                                            g$dots$8748$Of4HK
                                                            g$ys$8749$Of4HK
                                                            g$z$8750$Of4HK)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$8721$Of4HK
                                                                 g$z$8750$Of4HK
                                                                 g$n$8723$Of4HK
                                                                 g$ids$8724$Of4HK)))
                                                            (case-lambda
                                                              ((g$z$8753$Of4HK
                                                                 g$ids$8754$Of4HK)
                                                               ((case-lambda
                                                                  ((g$ids$8755$Of4HK
                                                                     g$z$8756$Of4HK)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$8720$Of4HK
                                                                          g$ys$8749$Of4HK
                                                                          g$n$8723$Of4HK
                                                                          g$ids$8755$Of4HK)))
                                                                     (case-lambda
                                                                       ((g$ys$8759$Of4HK
                                                                          g$ids$8760$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$ids$8761$Of4HK
                                                                              g$ys$8762$Of4HK)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$8721$Of4HK
                                                                                   g$x$8747$Of4HK
                                                                                   (+ g$n$8723$Of4HK
                                                                                      '1)
                                                                                   g$ids$8761$Of4HK)))
                                                                              (case-lambda
                                                                                ((g$x$8765$Of4HK
                                                                                   g$ids$8766$Of4HK)
                                                                                 ((case-lambda
                                                                                    ((g$ids$8767$Of4HK
                                                                                       g$x$8768$Of4HK)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$8768$Of4HK
                                                                                         (reverse
                                                                                           g$ys$8762$Of4HK)
                                                                                         g$z$8756$Of4HK)
                                                                                       g$ids$8767$Of4HK)))
                                                                                  g$ids$8766$Of4HK
                                                                                  g$x$8765$Of4HK))))))
                                                                         g$ids$8760$Of4HK
                                                                         g$ys$8759$Of4HK))))))
                                                                g$ids$8754$Of4HK
                                                                g$z$8753$Of4HK))))))
                                                       g$ls/false$8742$Of4HK)
                                                     ((case-lambda
                                                        ((g$t$8769$Of4HK)
                                                         ((case-lambda
                                                            ((g$ls/false$8770$Of4HK)
                                                             (if g$ls/false$8770$Of4HK
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$8771$Of4HK
                                                                      g$y$8772$Of4HK)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$8721$Of4HK
                                                                           g$y$8772$Of4HK
                                                                           g$n$8723$Of4HK
                                                                           g$ids$8724$Of4HK)))
                                                                      (case-lambda
                                                                        ((g$y$8775$Of4HK
                                                                           g$ids$8776$Of4HK)
                                                                         ((case-lambda
                                                                            ((g$ids$8777$Of4HK
                                                                               g$y$8778$Of4HK)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$8721$Of4HK
                                                                                    g$x$8771$Of4HK
                                                                                    g$n$8723$Of4HK
                                                                                    g$ids$8777$Of4HK)))
                                                                               (case-lambda
                                                                                 ((g$x$8781$Of4HK
                                                                                    g$ids$8782$Of4HK)
                                                                                  ((case-lambda
                                                                                     ((g$ids$8783$Of4HK
                                                                                        g$x$8784$Of4HK)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$8784$Of4HK
                                                                                          g$y$8778$Of4HK)
                                                                                        g$ids$8783$Of4HK)))
                                                                                   g$ids$8782$Of4HK
                                                                                   g$x$8781$Of4HK))))))
                                                                          g$ids$8776$Of4HK
                                                                          g$y$8775$Of4HK))))))
                                                                 g$ls/false$8770$Of4HK)
                                                               ((case-lambda
                                                                  ((g$t$8785$Of4HK)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8786$Of4HK)
                                                                       (if g$ls/false$8786$Of4HK
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$8724$Of4HK)))
                                                                           g$ls/false$8786$Of4HK)
                                                                         ((case-lambda
                                                                            ((g$t$8787$Of4HK)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8788$Of4HK)
                                                                                 (if (if g$ls/false$8788$Of4HK
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$8789$Of4HK)
                                                                                              (not (g$stx?$6890$Of4HK
                                                                                                     g$p$8789$Of4HK))))
                                                                                           g$ls/false$8788$Of4HK))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$8790$Of4HK)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$8721$Of4HK
                                                                                               g$p$8790$Of4HK
                                                                                               g$n$8723$Of4HK
                                                                                               g$ids$8724$Of4HK)))
                                                                                          (case-lambda
                                                                                            ((g$p$8793$Of4HK
                                                                                               g$ids$8794$Of4HK)
                                                                                             ((case-lambda
                                                                                                ((g$ids$8795$Of4HK
                                                                                                   g$p$8796$Of4HK)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$8796$Of4HK)
                                                                                                   g$ids$8795$Of4HK)))
                                                                                              g$ids$8794$Of4HK
                                                                                              g$p$8793$Of4HK))))))
                                                                                     g$ls/false$8788$Of4HK)
                                                                                   ((case-lambda
                                                                                      ((g$t$8797$Of4HK)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8798$Of4HK)
                                                                                           (if g$ls/false$8798$Of4HK
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$8799$Of4HK)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$6929$Of4HK
                                                                                                        g$datum$8799$Of4HK))
                                                                                                    g$ids$8724$Of4HK)))
                                                                                               g$ls/false$8798$Of4HK)
                                                                                             (g$syntax-violation$7302$Of4HK
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8797$Of4HK))))
                                                                                        (g$syntax-dispatch$7196$Of4HK
                                                                                          g$t$8797$Of4HK
                                                                                          'any))))
                                                                                    g$t$8787$Of4HK))))
                                                                              (g$syntax-dispatch$7196$Of4HK
                                                                                g$t$8787$Of4HK
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$8785$Of4HK))))
                                                                    (g$syntax-dispatch$7196$Of4HK
                                                                      g$t$8785$Of4HK
                                                                      '()))))
                                                                g$t$8769$Of4HK))))
                                                          (g$syntax-dispatch$7196$Of4HK
                                                            g$t$8769$Of4HK
                                                            '(any . any)))))
                                                      g$t$8741$Of4HK))))
                                                (g$syntax-dispatch$7196$Of4HK
                                                  g$t$8741$Of4HK
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$8729$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$8729$Of4HK
                                        '(any any)))))
                                  g$t$8725$Of4HK))))
                            (g$syntax-dispatch$7196$Of4HK
                              g$t$8725$Of4HK
                              'any))))
                        g$p$8722$Of4HK)))))
          (g$cvt$8721$Of4HK g$pattern$8718$Of4HK '0 '())))))
   (g$syntax-dispatch$7196$Of4HK
     g$syntax-dispatch$10628$Of4HK
     (case-lambda
       ((g$e$8815$Of4HK g$p$8816$Of4HK)
        (letrec* ((g$stx^$8817$Of4HK
                    (case-lambda
                      ((g$e$8925$Of4HK
                         g$m*$8926$Of4HK
                         g$s*$8927$Of4HK
                         g$ae*$8928$Of4HK)
                       (if (if (null? g$m*$8926$Of4HK)
                             (if (null? g$s*$8927$Of4HK)
                               (begin '#f (null? g$ae*$8928$Of4HK))
                               '#f)
                             '#f)
                         g$e$8925$Of4HK
                         (g$mkstx$6906$Of4HK
                           g$e$8925$Of4HK
                           g$m*$8926$Of4HK
                           g$s*$8927$Of4HK
                           g$ae*$8928$Of4HK)))))
                  (g$match-each$8818$Of4HK
                    (case-lambda
                      ((g$e$8909$Of4HK
                         g$p$8910$Of4HK
                         g$m*$8911$Of4HK
                         g$s*$8912$Of4HK
                         g$ae*$8913$Of4HK)
                       (if (pair? g$e$8909$Of4HK)
                         ((case-lambda
                            ((g$first$8914$Of4HK)
                             (if g$first$8914$Of4HK
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$8915$Of4HK)
                                     (if g$rest$8915$Of4HK
                                       (begin
                                         '#f
                                         (cons
                                           g$first$8914$Of4HK
                                           g$rest$8915$Of4HK))
                                       '#f)))
                                  (g$match-each$8818$Of4HK
                                    (cdr g$e$8909$Of4HK)
                                    g$p$8910$Of4HK
                                    g$m*$8911$Of4HK
                                    g$s*$8912$Of4HK
                                    g$ae*$8913$Of4HK)))
                               '#f)))
                          (g$match$8824$Of4HK
                            (car g$e$8909$Of4HK)
                            g$p$8910$Of4HK
                            g$m*$8911$Of4HK
                            g$s*$8912$Of4HK
                            g$ae*$8913$Of4HK
                            '()))
                         (if (null? g$e$8909$Of4HK)
                           '()
                           (if (g$stx?$6890$Of4HK g$e$8909$Of4HK)
                             (if (not (g$top-marked?$6861$Of4HK
                                        g$m*$8911$Of4HK))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$6905$Of4HK
                                        g$m*$8911$Of4HK
                                        g$s*$8912$Of4HK
                                        g$ae*$8913$Of4HK
                                        g$e$8909$Of4HK)))
                                   (case-lambda
                                     ((g$m*$8919$Of4HK
                                        g$s*$8920$Of4HK
                                        g$ae*$8921$Of4HK)
                                      ((case-lambda
                                         ((g$ae*$8922$Of4HK
                                            g$s*$8923$Of4HK
                                            g$m*$8924$Of4HK)
                                          (g$match-each$8818$Of4HK
                                            (g$stx-expr$6892$Of4HK
                                              g$e$8909$Of4HK)
                                            g$p$8910$Of4HK
                                            g$m*$8924$Of4HK
                                            g$s*$8923$Of4HK
                                            g$ae*$8922$Of4HK)))
                                       g$ae*$8921$Of4HK
                                       g$s*$8920$Of4HK
                                       g$m*$8919$Of4HK)))))
                               '#f)
                             (if (annotation? g$e$8909$Of4HK)
                               (g$match-each$8818$Of4HK
                                 (annotation-expression g$e$8909$Of4HK)
                                 g$p$8910$Of4HK
                                 g$m*$8911$Of4HK
                                 g$s*$8912$Of4HK
                                 g$ae*$8913$Of4HK)
                               '#f)))))))
                  (g$match-each+$8819$Of4HK
                    (case-lambda
                      ((g$e$8877$Of4HK
                         g$x-pat$8878$Of4HK
                         g$y-pat$8879$Of4HK
                         g$z-pat$8880$Of4HK
                         g$m*$8881$Of4HK
                         g$s*$8882$Of4HK
                         g$ae*$8883$Of4HK
                         g$r$8884$Of4HK)
                       ((letrec ((g$f$8885$Of4HK
                                   (case-lambda
                                     ((g$e$8886$Of4HK
                                        g$m*$8887$Of4HK
                                        g$s*$8888$Of4HK
                                        g$ae*$8889$Of4HK)
                                      (if (pair? g$e$8886$Of4HK)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$8885$Of4HK
                                               (cdr g$e$8886$Of4HK)
                                               g$m*$8887$Of4HK
                                               g$s*$8888$Of4HK
                                               g$ae*$8889$Of4HK)))
                                          (case-lambda
                                            ((g$xr*$8893$Of4HK
                                               g$y-pat$8894$Of4HK
                                               g$r$8895$Of4HK)
                                             ((case-lambda
                                                ((g$r$8896$Of4HK
                                                   g$y-pat$8897$Of4HK
                                                   g$xr*$8898$Of4HK)
                                                 (if g$r$8896$Of4HK
                                                   (if (null?
                                                         g$y-pat$8897$Of4HK)
                                                     ((case-lambda
                                                        ((g$xr$8899$Of4HK)
                                                         (if g$xr$8899$Of4HK
                                                           (values
                                                             (cons
                                                               g$xr$8899$Of4HK
                                                               g$xr*$8898$Of4HK)
                                                             g$y-pat$8897$Of4HK
                                                             g$r$8896$Of4HK)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$8824$Of4HK
                                                        (car g$e$8886$Of4HK)
                                                        g$x-pat$8878$Of4HK
                                                        g$m*$8887$Of4HK
                                                        g$s*$8888$Of4HK
                                                        g$ae*$8889$Of4HK
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$8897$Of4HK)
                                                       (g$match$8824$Of4HK
                                                         (car g$e$8886$Of4HK)
                                                         (car g$y-pat$8897$Of4HK)
                                                         g$m*$8887$Of4HK
                                                         g$s*$8888$Of4HK
                                                         g$ae*$8889$Of4HK
                                                         g$r$8896$Of4HK)))
                                                   (values '#f '#f '#f))))
                                              g$r$8895$Of4HK
                                              g$y-pat$8894$Of4HK
                                              g$xr*$8893$Of4HK))))
                                        (if (g$stx?$6890$Of4HK g$e$8886$Of4HK)
                                          (if (g$top-marked?$6861$Of4HK
                                                g$m*$8887$Of4HK)
                                            (values
                                              '()
                                              g$y-pat$8879$Of4HK
                                              (g$match$8824$Of4HK
                                                g$e$8886$Of4HK
                                                g$z-pat$8880$Of4HK
                                                g$m*$8887$Of4HK
                                                g$s*$8888$Of4HK
                                                g$ae*$8889$Of4HK
                                                g$r$8884$Of4HK))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$6905$Of4HK
                                                   g$m*$8887$Of4HK
                                                   g$s*$8888$Of4HK
                                                   g$ae*$8889$Of4HK
                                                   g$e$8886$Of4HK)))
                                              (case-lambda
                                                ((g$m*$8903$Of4HK
                                                   g$s*$8904$Of4HK
                                                   g$ae*$8905$Of4HK)
                                                 ((case-lambda
                                                    ((g$ae*$8906$Of4HK
                                                       g$s*$8907$Of4HK
                                                       g$m*$8908$Of4HK)
                                                     (g$f$8885$Of4HK
                                                       (g$stx-expr$6892$Of4HK
                                                         g$e$8886$Of4HK)
                                                       g$m*$8908$Of4HK
                                                       g$s*$8907$Of4HK
                                                       g$ae*$8906$Of4HK)))
                                                  g$ae*$8905$Of4HK
                                                  g$s*$8904$Of4HK
                                                  g$m*$8903$Of4HK)))))
                                          (if (annotation? g$e$8886$Of4HK)
                                            (g$f$8885$Of4HK
                                              (annotation-expression
                                                g$e$8886$Of4HK)
                                              g$m*$8887$Of4HK
                                              g$s*$8888$Of4HK
                                              g$ae*$8889$Of4HK)
                                            (values
                                              '()
                                              g$y-pat$8879$Of4HK
                                              (g$match$8824$Of4HK
                                                g$e$8886$Of4HK
                                                g$z-pat$8880$Of4HK
                                                g$m*$8887$Of4HK
                                                g$s*$8888$Of4HK
                                                g$ae*$8889$Of4HK
                                                g$r$8884$Of4HK)))))))))
                          g$f$8885$Of4HK)
                        g$e$8877$Of4HK
                        g$m*$8881$Of4HK
                        g$s*$8882$Of4HK
                        g$ae*$8883$Of4HK))))
                  (g$match-each-any$8820$Of4HK
                    (case-lambda
                      ((g$e$8863$Of4HK
                         g$m*$8864$Of4HK
                         g$s*$8865$Of4HK
                         g$ae*$8866$Of4HK)
                       (if (pair? g$e$8863$Of4HK)
                         ((case-lambda
                            ((g$l$8867$Of4HK)
                             (if g$l$8867$Of4HK
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$8817$Of4HK
                                     (car g$e$8863$Of4HK)
                                     g$m*$8864$Of4HK
                                     g$s*$8865$Of4HK
                                     g$ae*$8866$Of4HK)
                                   g$l$8867$Of4HK))
                               '#f)))
                          (g$match-each-any$8820$Of4HK
                            (cdr g$e$8863$Of4HK)
                            g$m*$8864$Of4HK
                            g$s*$8865$Of4HK
                            g$ae*$8866$Of4HK))
                         (if (null? g$e$8863$Of4HK)
                           '()
                           (if (g$stx?$6890$Of4HK g$e$8863$Of4HK)
                             (if (not (g$top-marked?$6861$Of4HK
                                        g$m*$8864$Of4HK))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$6905$Of4HK
                                        g$m*$8864$Of4HK
                                        g$s*$8865$Of4HK
                                        g$ae*$8866$Of4HK
                                        g$e$8863$Of4HK)))
                                   (case-lambda
                                     ((g$m*$8871$Of4HK
                                        g$s*$8872$Of4HK
                                        g$ae*$8873$Of4HK)
                                      ((case-lambda
                                         ((g$ae*$8874$Of4HK
                                            g$s*$8875$Of4HK
                                            g$m*$8876$Of4HK)
                                          (g$match-each-any$8820$Of4HK
                                            (g$stx-expr$6892$Of4HK
                                              g$e$8863$Of4HK)
                                            g$m*$8876$Of4HK
                                            g$s*$8875$Of4HK
                                            g$ae*$8874$Of4HK)))
                                       g$ae*$8873$Of4HK
                                       g$s*$8872$Of4HK
                                       g$m*$8871$Of4HK)))))
                               '#f)
                             (if (annotation? g$e$8863$Of4HK)
                               (g$match-each-any$8820$Of4HK
                                 (annotation-expression g$e$8863$Of4HK)
                                 g$m*$8864$Of4HK
                                 g$s*$8865$Of4HK
                                 g$ae*$8866$Of4HK)
                               '#f)))))))
                  (g$match-empty$8821$Of4HK
                    (case-lambda
                      ((g$p$8860$Of4HK g$r$8861$Of4HK)
                       (if (null? g$p$8860$Of4HK)
                         g$r$8861$Of4HK
                         (if (eq? g$p$8860$Of4HK '_)
                           g$r$8861$Of4HK
                           (if (eq? g$p$8860$Of4HK 'any)
                             (cons '() g$r$8861$Of4HK)
                             (if (pair? g$p$8860$Of4HK)
                               (g$match-empty$8821$Of4HK
                                 (car g$p$8860$Of4HK)
                                 (g$match-empty$8821$Of4HK
                                   (cdr g$p$8860$Of4HK)
                                   g$r$8861$Of4HK))
                               (if (eq? g$p$8860$Of4HK 'each-any)
                                 (cons '() g$r$8861$Of4HK)
                                 ((case-lambda
                                    ((g$t$8862$Of4HK)
                                     (if (eqv? g$t$8862$Of4HK 'each)
                                       (g$match-empty$8821$Of4HK
                                         (vector-ref g$p$8860$Of4HK '1)
                                         g$r$8861$Of4HK)
                                       (if (eqv? g$t$8862$Of4HK 'each+)
                                         (g$match-empty$8821$Of4HK
                                           (vector-ref g$p$8860$Of4HK '1)
                                           (g$match-empty$8821$Of4HK
                                             (reverse
                                               (vector-ref g$p$8860$Of4HK '2))
                                             (g$match-empty$8821$Of4HK
                                               (vector-ref g$p$8860$Of4HK '3)
                                               g$r$8861$Of4HK)))
                                         (if (memv
                                               g$t$8862$Of4HK
                                               '(free-id atom))
                                           g$r$8861$Of4HK
                                           (if (memv
                                                 g$t$8862$Of4HK
                                                 '(scheme-id atom))
                                             g$r$8861$Of4HK
                                             (if (eqv? g$t$8862$Of4HK 'vector)
                                               (g$match-empty$8821$Of4HK
                                                 (vector-ref g$p$8860$Of4HK '1)
                                                 g$r$8861$Of4HK)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$8860$Of4HK))))))))
                                  (vector-ref g$p$8860$Of4HK '0))))))))))
                  (g$combine$8822$Of4HK
                    (case-lambda
                      ((g$r*$8858$Of4HK g$r$8859$Of4HK)
                       (if (null? (car g$r*$8858$Of4HK))
                         g$r$8859$Of4HK
                         (cons
                           (map car g$r*$8858$Of4HK)
                           (g$combine$8822$Of4HK
                             (map cdr g$r*$8858$Of4HK)
                             g$r$8859$Of4HK))))))
                  (g$match*$8823$Of4HK
                    (case-lambda
                      ((g$e$8840$Of4HK
                         g$p$8841$Of4HK
                         g$m*$8842$Of4HK
                         g$s*$8843$Of4HK
                         g$ae*$8844$Of4HK
                         g$r$8845$Of4HK)
                       (if (null? g$p$8841$Of4HK)
                         (if (null? g$e$8840$Of4HK)
                           (begin '#f g$r$8845$Of4HK)
                           '#f)
                         (if (pair? g$p$8841$Of4HK)
                           (if (pair? g$e$8840$Of4HK)
                             (begin
                               '#f
                               (g$match$8824$Of4HK
                                 (car g$e$8840$Of4HK)
                                 (car g$p$8841$Of4HK)
                                 g$m*$8842$Of4HK
                                 g$s*$8843$Of4HK
                                 g$ae*$8844$Of4HK
                                 (g$match$8824$Of4HK
                                   (cdr g$e$8840$Of4HK)
                                   (cdr g$p$8841$Of4HK)
                                   g$m*$8842$Of4HK
                                   g$s*$8843$Of4HK
                                   g$ae*$8844$Of4HK
                                   g$r$8845$Of4HK)))
                             '#f)
                           (if (eq? g$p$8841$Of4HK 'each-any)
                             ((case-lambda
                                ((g$l$8846$Of4HK)
                                 (if g$l$8846$Of4HK
                                   (begin
                                     '#f
                                     (cons g$l$8846$Of4HK g$r$8845$Of4HK))
                                   '#f)))
                              (g$match-each-any$8820$Of4HK
                                g$e$8840$Of4HK
                                g$m*$8842$Of4HK
                                g$s*$8843$Of4HK
                                g$ae*$8844$Of4HK))
                             ((case-lambda
                                ((g$t$8847$Of4HK)
                                 (if (eqv? g$t$8847$Of4HK 'each)
                                   (if (null? g$e$8840$Of4HK)
                                     (g$match-empty$8821$Of4HK
                                       (vector-ref g$p$8841$Of4HK '1)
                                       g$r$8845$Of4HK)
                                     ((case-lambda
                                        ((g$r*$8857$Of4HK)
                                         (if g$r*$8857$Of4HK
                                           (begin
                                             '#f
                                             (g$combine$8822$Of4HK
                                               g$r*$8857$Of4HK
                                               g$r$8845$Of4HK))
                                           '#f)))
                                      (g$match-each$8818$Of4HK
                                        g$e$8840$Of4HK
                                        (vector-ref g$p$8841$Of4HK '1)
                                        g$m*$8842$Of4HK
                                        g$s*$8843$Of4HK
                                        g$ae*$8844$Of4HK)))
                                   (if (eqv? g$t$8847$Of4HK 'free-id)
                                     (if (symbol? g$e$8840$Of4HK)
                                       (if (g$top-marked?$6861$Of4HK
                                             g$m*$8842$Of4HK)
                                         (if (g$free-id=?$6922$Of4HK
                                               (g$stx^$8817$Of4HK
                                                 g$e$8840$Of4HK
                                                 g$m*$8842$Of4HK
                                                 g$s*$8843$Of4HK
                                                 g$ae*$8844$Of4HK)
                                               (vector-ref g$p$8841$Of4HK '1))
                                           (begin '#f g$r$8845$Of4HK)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (eqv? g$t$8847$Of4HK 'scheme-id)
                                       (if (symbol? g$e$8840$Of4HK)
                                         (if (g$top-marked?$6861$Of4HK
                                               g$m*$8842$Of4HK)
                                           (if (g$free-id=?$6922$Of4HK
                                                 (g$stx^$8817$Of4HK
                                                   g$e$8840$Of4HK
                                                   g$m*$8842$Of4HK
                                                   g$s*$8843$Of4HK
                                                   g$ae*$8844$Of4HK)
                                                 (g$scheme-stx$7139$Of4HK
                                                   (vector-ref
                                                     g$p$8841$Of4HK
                                                     '1)))
                                             (begin '#f g$r$8845$Of4HK)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv? g$t$8847$Of4HK 'each+)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$8819$Of4HK
                                                g$e$8840$Of4HK
                                                (vector-ref g$p$8841$Of4HK '1)
                                                (vector-ref g$p$8841$Of4HK '2)
                                                (vector-ref g$p$8841$Of4HK '3)
                                                g$m*$8842$Of4HK
                                                g$s*$8843$Of4HK
                                                g$ae*$8844$Of4HK
                                                g$r$8845$Of4HK)))
                                           (case-lambda
                                             ((g$xr*$8851$Of4HK
                                                g$y-pat$8852$Of4HK
                                                g$r$8853$Of4HK)
                                              ((case-lambda
                                                 ((g$r$8854$Of4HK
                                                    g$y-pat$8855$Of4HK
                                                    g$xr*$8856$Of4HK)
                                                  (if g$r$8854$Of4HK
                                                    (if (null?
                                                          g$y-pat$8855$Of4HK)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$8856$Of4HK)
                                                          (g$match-empty$8821$Of4HK
                                                            (vector-ref
                                                              g$p$8841$Of4HK
                                                              '1)
                                                            g$r$8854$Of4HK)
                                                          (g$combine$8822$Of4HK
                                                            g$xr*$8856$Of4HK
                                                            g$r$8854$Of4HK)))
                                                      '#f)
                                                    '#f)))
                                               g$r$8853$Of4HK
                                               g$y-pat$8852$Of4HK
                                               g$xr*$8851$Of4HK))))
                                         (if (eqv? g$t$8847$Of4HK 'atom)
                                           (if (equal?
                                                 (vector-ref g$p$8841$Of4HK '1)
                                                 (g$strip$6928$Of4HK
                                                   g$e$8840$Of4HK
                                                   g$m*$8842$Of4HK))
                                             (begin '#f g$r$8845$Of4HK)
                                             '#f)
                                           (if (eqv? g$t$8847$Of4HK 'vector)
                                             (if (vector? g$e$8840$Of4HK)
                                               (begin
                                                 '#f
                                                 (g$match$8824$Of4HK
                                                   (vector->list g$e$8840$Of4HK)
                                                   (vector-ref
                                                     g$p$8841$Of4HK
                                                     '1)
                                                   g$m*$8842$Of4HK
                                                   g$s*$8843$Of4HK
                                                   g$ae*$8844$Of4HK
                                                   g$r$8845$Of4HK))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$8841$Of4HK)))))))))
                              (vector-ref g$p$8841$Of4HK '0))))))))
                  (g$match$8824$Of4HK
                    (case-lambda
                      ((g$e$8825$Of4HK
                         g$p$8826$Of4HK
                         g$m*$8827$Of4HK
                         g$s*$8828$Of4HK
                         g$ae*$8829$Of4HK
                         g$r$8830$Of4HK)
                       (if (not g$r$8830$Of4HK)
                         '#f
                         (if (eq? g$p$8826$Of4HK '_)
                           g$r$8830$Of4HK
                           (if (eq? g$p$8826$Of4HK 'any)
                             (cons
                               (g$stx^$8817$Of4HK
                                 g$e$8825$Of4HK
                                 g$m*$8827$Of4HK
                                 g$s*$8828$Of4HK
                                 g$ae*$8829$Of4HK)
                               g$r$8830$Of4HK)
                             (if (g$stx?$6890$Of4HK g$e$8825$Of4HK)
                               (if (not (g$top-marked?$6861$Of4HK
                                          g$m*$8827$Of4HK))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$6905$Of4HK
                                          g$m*$8827$Of4HK
                                          g$s*$8828$Of4HK
                                          g$ae*$8829$Of4HK
                                          g$e$8825$Of4HK)))
                                     (case-lambda
                                       ((g$m*$8834$Of4HK
                                          g$s*$8835$Of4HK
                                          g$ae*$8836$Of4HK)
                                        ((case-lambda
                                           ((g$ae*$8837$Of4HK
                                              g$s*$8838$Of4HK
                                              g$m*$8839$Of4HK)
                                            (g$match$8824$Of4HK
                                              (g$stx-expr$6892$Of4HK
                                                g$e$8825$Of4HK)
                                              g$p$8826$Of4HK
                                              g$m*$8839$Of4HK
                                              g$s*$8838$Of4HK
                                              g$ae*$8837$Of4HK
                                              g$r$8830$Of4HK)))
                                         g$ae*$8836$Of4HK
                                         g$s*$8835$Of4HK
                                         g$m*$8834$Of4HK)))))
                                 '#f)
                               (if (annotation? g$e$8825$Of4HK)
                                 (g$match$8824$Of4HK
                                   (annotation-expression g$e$8825$Of4HK)
                                   g$p$8826$Of4HK
                                   g$m*$8827$Of4HK
                                   g$s*$8828$Of4HK
                                   g$ae*$8829$Of4HK
                                   g$r$8830$Of4HK)
                                 (g$match*$8823$Of4HK
                                   g$e$8825$Of4HK
                                   g$p$8826$Of4HK
                                   g$m*$8827$Of4HK
                                   g$s*$8828$Of4HK
                                   g$ae*$8829$Of4HK
                                   g$r$8830$Of4HK))))))))))
          (g$match$8824$Of4HK g$e$8815$Of4HK g$p$8816$Of4HK '() '() '() '())))))
   (g$ellipsis?$7197$Of4HK
     g$ellipsis?$10629$Of4HK
     (case-lambda
       ((g$x$8929$Of4HK)
        (if (g$id?$6918$Of4HK g$x$8929$Of4HK)
          (begin
            '#f
            (g$free-id=?$6922$Of4HK
              g$x$8929$Of4HK
              (g$scheme-stx$7139$Of4HK '...)))
          '#f))))
   (g$underscore?$7198$Of4HK
     g$underscore?$10630$Of4HK
     (case-lambda
       ((g$x$8930$Of4HK)
        (if (g$id?$6918$Of4HK g$x$8930$Of4HK)
          (begin
            '#f
            (g$free-id=?$6922$Of4HK
              g$x$8930$Of4HK
              (g$scheme-stx$7139$Of4HK '_)))
          '#f))))
   (g$verify-literals$7199$Of4HK
     g$verify-literals$10631$Of4HK
     (case-lambda
       ((g$lits$8931$Of4HK g$expr$8932$Of4HK)
        (for-each
          (case-lambda
            ((g$x$8933$Of4HK)
             (if ((case-lambda
                    ((g$t$8934$Of4HK)
                     (if g$t$8934$Of4HK
                       g$t$8934$Of4HK
                       ((case-lambda
                          ((g$t$8935$Of4HK)
                           (if g$t$8935$Of4HK
                             g$t$8935$Of4HK
                             (begin
                               '#f
                               (g$underscore?$7198$Of4HK g$x$8933$Of4HK)))))
                        (g$ellipsis?$7197$Of4HK g$x$8933$Of4HK)))))
                  (not (g$id?$6918$Of4HK g$x$8933$Of4HK)))
               (g$syntax-violation$7302$Of4HK
                 '#f
                 '"invalid literal"
                 g$expr$8932$Of4HK
                 g$x$8933$Of4HK)
               (void))))
          g$lits$8931$Of4HK))))
   (g$syntax-case-transformer$7200$Of4HK
     g$syntax-case-transformer$10632$Of4HK
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$8936$Of4HK
                     (case-lambda
                       ((g$pvars$8993$Of4HK
                          g$expr$8994$Of4HK
                          g$y$8995$Of4HK
                          g$r$8996$Of4HK
                          g$mr$8997$Of4HK)
                        ((case-lambda
                           ((g$ids$8998$Of4HK g$levels$8999$Of4HK)
                            ((case-lambda
                               ((g$labels$9000$Of4HK g$new-vars$9001$Of4HK)
                                ((case-lambda
                                   ((g$body$9002$Of4HK)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$6849$Of4HK
                                        '#f
                                        g$new-vars$9001$Of4HK
                                        g$body$9002$Of4HK)
                                      g$y$8995$Of4HK)))
                                 (g$chi-expr$7214$Of4HK
                                   (g$add-subst$6908$Of4HK
                                     (g$make-full-rib$6886$Of4HK
                                       g$ids$8998$Of4HK
                                       g$labels$9000$Of4HK)
                                     g$expr$8994$Of4HK)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9003$Of4HK
                                               g$var$9004$Of4HK
                                               g$level$9005$Of4HK)
                                             (cons
                                               g$label$9003$Of4HK
                                               (g$make-binding$6934$Of4HK
                                                 'syntax
                                                 (cons
                                                   g$var$9004$Of4HK
                                                   g$level$9005$Of4HK)))))
                                          g$labels$9000$Of4HK
                                          g$new-vars$9001$Of4HK
                                          (map cdr g$pvars$8993$Of4HK))
                                     g$r$8996$Of4HK)
                                   g$mr$8997$Of4HK))))
                             (map g$gen-label$6864$Of4HK g$ids$8998$Of4HK)
                             (map g$gen-lexical$6862$Of4HK g$ids$8998$Of4HK))))
                         (map car g$pvars$8993$Of4HK)
                         (map cdr g$pvars$8993$Of4HK)))))
                   (g$invalid-ids-error$8937$Of4HK
                     (case-lambda
                       ((g$id*$8987$Of4HK g$e$8988$Of4HK g$class$8989$Of4HK)
                        ((letrec ((g$find$8990$Of4HK
                                    (case-lambda
                                      ((g$id*$8991$Of4HK g$ok*$8992$Of4HK)
                                       (if (null? g$id*$8991$Of4HK)
                                         (g$syntax-violation$7302$Of4HK
                                           '#f
                                           '"invalid syntax"
                                           g$e$8988$Of4HK)
                                         (if (g$id?$6918$Of4HK
                                               (car g$id*$8991$Of4HK))
                                           (if (g$bound-id-member?$6925$Of4HK
                                                 (car g$id*$8991$Of4HK)
                                                 g$ok*$8992$Of4HK)
                                             (g$syntax-error$7299$Of4HK
                                               (car g$id*$8991$Of4HK)
                                               '"duplicate "
                                               g$class$8989$Of4HK)
                                             (g$find$8990$Of4HK
                                               (cdr g$id*$8991$Of4HK)
                                               (cons
                                                 (car g$id*$8991$Of4HK)
                                                 g$ok*$8992$Of4HK)))
                                           (g$syntax-error$7299$Of4HK
                                             (car g$id*$8991$Of4HK)
                                             '"invalid "
                                             g$class$8989$Of4HK)))))))
                           g$find$8990$Of4HK)
                         g$id*$8987$Of4HK
                         '()))))
                   (g$gen-clause$8938$Of4HK
                     (case-lambda
                       ((g$x$8967$Of4HK
                          g$keys$8968$Of4HK
                          g$clauses$8969$Of4HK
                          g$r$8970$Of4HK
                          g$mr$8971$Of4HK
                          g$pat$8972$Of4HK
                          g$fender$8973$Of4HK
                          g$expr$8974$Of4HK)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7195$Of4HK
                               g$pat$8972$Of4HK
                               g$keys$8968$Of4HK)))
                          (case-lambda
                            ((g$p$8977$Of4HK g$pvars$8978$Of4HK)
                             ((case-lambda
                                ((g$pvars$8979$Of4HK g$p$8980$Of4HK)
                                 (if (not (g$distinct-bound-ids?$6924$Of4HK
                                            (map car g$pvars$8979$Of4HK)))
                                   (g$invalid-ids-error$8937$Of4HK
                                     (map car g$pvars$8979$Of4HK)
                                     g$pat$8972$Of4HK
                                     '"pattern variable")
                                   (if (not (g$for-all$5347$Of4HK
                                              (case-lambda
                                                ((g$x$8981$Of4HK)
                                                 (not (g$ellipsis?$7197$Of4HK
                                                        (car g$x$8981$Of4HK)))))
                                              g$pvars$8979$Of4HK))
                                     (g$syntax-violation$7302$Of4HK
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$8972$Of4HK)
                                     ((case-lambda
                                        ((g$y$8982$Of4HK)
                                         ((case-lambda
                                            ((g$test$8983$Of4HK)
                                             ((case-lambda
                                                ((g$conseq$8984$Of4HK)
                                                 ((case-lambda
                                                    ((g$altern$8985$Of4HK)
                                                     (list
                                                       (g$build-lambda$6849$Of4HK
                                                         '#f
                                                         (list g$y$8982$Of4HK)
                                                         (list
                                                           'if
                                                           g$test$8983$Of4HK
                                                           g$conseq$8984$Of4HK
                                                           g$altern$8985$Of4HK))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$8967$Of4HK
                                                         (list
                                                           'quote
                                                           g$p$8980$Of4HK)))))
                                                  (g$gen-syntax-case$8939$Of4HK
                                                    g$x$8967$Of4HK
                                                    g$keys$8968$Of4HK
                                                    g$clauses$8969$Of4HK
                                                    g$r$8970$Of4HK
                                                    g$mr$8971$Of4HK))))
                                              (g$build-dispatch-call$8936$Of4HK
                                                g$pvars$8979$Of4HK
                                                g$expr$8974$Of4HK
                                                g$y$8982$Of4HK
                                                g$r$8970$Of4HK
                                                g$mr$8971$Of4HK))))
                                          (if (eq? g$fender$8973$Of4HK '#t)
                                            g$y$8982$Of4HK
                                            ((case-lambda
                                               ((g$call$8986$Of4HK)
                                                (list
                                                  'if
                                                  g$y$8982$Of4HK
                                                  g$call$8986$Of4HK
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$8936$Of4HK
                                               g$pvars$8979$Of4HK
                                               g$fender$8973$Of4HK
                                               g$y$8982$Of4HK
                                               g$r$8970$Of4HK
                                               g$mr$8971$Of4HK))))))
                                      (g$gen-lexical$6862$Of4HK 'tmp))))))
                              g$pvars$8978$Of4HK
                              g$p$8977$Of4HK)))))))
                   (g$gen-syntax-case$8939$Of4HK
                     (case-lambda
                       ((g$x$8950$Of4HK
                          g$keys$8951$Of4HK
                          g$clauses$8952$Of4HK
                          g$r$8953$Of4HK
                          g$mr$8954$Of4HK)
                        (if (null? g$clauses$8952$Of4HK)
                          (list '(primitive syntax-error) g$x$8950$Of4HK)
                          ((case-lambda
                             ((g$t$8955$Of4HK)
                              ((case-lambda
                                 ((g$ls/false$8956$Of4HK)
                                  (if g$ls/false$8956$Of4HK
                                    (apply
                                      (case-lambda
                                        ((g$pat$8957$Of4HK g$expr$8958$Of4HK)
                                         (if (if (g$id?$6918$Of4HK
                                                   g$pat$8957$Of4HK)
                                               (if (not (g$bound-id-member?$6925$Of4HK
                                                          g$pat$8957$Of4HK
                                                          g$keys$8951$Of4HK))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7197$Of4HK
                                                          g$pat$8957$Of4HK)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$6922$Of4HK
                                                 g$pat$8957$Of4HK
                                                 (g$scheme-stx$7139$Of4HK '_))
                                             (g$chi-expr$7214$Of4HK
                                               g$expr$8958$Of4HK
                                               g$r$8953$Of4HK
                                               g$mr$8954$Of4HK)
                                             ((case-lambda
                                                ((g$lab$8959$Of4HK
                                                   g$lex$8960$Of4HK)
                                                 ((case-lambda
                                                    ((g$body$8961$Of4HK)
                                                     (list
                                                       (g$build-lambda$6849$Of4HK
                                                         '#f
                                                         (list g$lex$8960$Of4HK)
                                                         g$body$8961$Of4HK)
                                                       g$x$8950$Of4HK)))
                                                  (g$chi-expr$7214$Of4HK
                                                    (g$add-subst$6908$Of4HK
                                                      (g$make-full-rib$6886$Of4HK
                                                        (list g$pat$8957$Of4HK)
                                                        (list g$lab$8959$Of4HK))
                                                      g$expr$8958$Of4HK)
                                                    (cons
                                                      (cons
                                                        g$lab$8959$Of4HK
                                                        (g$make-binding$6934$Of4HK
                                                          'syntax
                                                          (cons
                                                            g$lex$8960$Of4HK
                                                            '0)))
                                                      g$r$8953$Of4HK)
                                                    g$mr$8954$Of4HK))))
                                              (g$gen-label$6864$Of4HK
                                                g$pat$8957$Of4HK)
                                              (g$gen-lexical$6862$Of4HK
                                                g$pat$8957$Of4HK)))
                                           (g$gen-clause$8938$Of4HK
                                             g$x$8950$Of4HK
                                             g$keys$8951$Of4HK
                                             (cdr g$clauses$8952$Of4HK)
                                             g$r$8953$Of4HK
                                             g$mr$8954$Of4HK
                                             g$pat$8957$Of4HK
                                             '#t
                                             g$expr$8958$Of4HK))))
                                      g$ls/false$8956$Of4HK)
                                    ((case-lambda
                                       ((g$t$8962$Of4HK)
                                        ((case-lambda
                                           ((g$ls/false$8963$Of4HK)
                                            (if g$ls/false$8963$Of4HK
                                              (apply
                                                (case-lambda
                                                  ((g$pat$8964$Of4HK
                                                     g$fender$8965$Of4HK
                                                     g$expr$8966$Of4HK)
                                                   (g$gen-clause$8938$Of4HK
                                                     g$x$8950$Of4HK
                                                     g$keys$8951$Of4HK
                                                     (cdr g$clauses$8952$Of4HK)
                                                     g$r$8953$Of4HK
                                                     g$mr$8954$Of4HK
                                                     g$pat$8964$Of4HK
                                                     g$fender$8965$Of4HK
                                                     g$expr$8966$Of4HK)))
                                                g$ls/false$8963$Of4HK)
                                              (g$syntax-violation$7302$Of4HK
                                                '#f
                                                '"invalid syntax"
                                                g$t$8962$Of4HK))))
                                         (g$syntax-dispatch$7196$Of4HK
                                           g$t$8962$Of4HK
                                           '(any any any)))))
                                     g$t$8955$Of4HK))))
                               (g$syntax-dispatch$7196$Of4HK
                                 g$t$8955$Of4HK
                                 '(any any)))))
                           (car g$clauses$8952$Of4HK)))))))
           (case-lambda
             ((g$e$8940$Of4HK g$r$8941$Of4HK g$mr$8942$Of4HK)
              ((case-lambda
                 ((g$t$8943$Of4HK)
                  ((case-lambda
                     ((g$ls/false$8944$Of4HK)
                      (if g$ls/false$8944$Of4HK
                        (apply
                          (case-lambda
                            ((g$expr$8945$Of4HK
                               g$keys$8946$Of4HK
                               g$clauses$8947$Of4HK)
                             (begin
                               (g$verify-literals$7199$Of4HK
                                 g$keys$8946$Of4HK
                                 g$e$8940$Of4HK)
                               ((case-lambda
                                  ((g$x$8948$Of4HK)
                                   ((case-lambda
                                      ((g$body$8949$Of4HK)
                                       (list
                                         (g$build-lambda$6849$Of4HK
                                           '#f
                                           (list g$x$8948$Of4HK)
                                           g$body$8949$Of4HK)
                                         (g$chi-expr$7214$Of4HK
                                           g$expr$8945$Of4HK
                                           g$r$8941$Of4HK
                                           g$mr$8942$Of4HK))))
                                    (g$gen-syntax-case$8939$Of4HK
                                      g$x$8948$Of4HK
                                      g$keys$8946$Of4HK
                                      g$clauses$8947$Of4HK
                                      g$r$8941$Of4HK
                                      g$mr$8942$Of4HK))))
                                (g$gen-lexical$6862$Of4HK 'tmp)))))
                          g$ls/false$8944$Of4HK)
                        (g$syntax-violation$7302$Of4HK
                          '#f
                          '"invalid syntax"
                          g$t$8943$Of4HK))))
                   (g$syntax-dispatch$7196$Of4HK
                     g$t$8943$Of4HK
                     '(_ any each-any . each-any)))))
               g$e$8940$Of4HK))))))))
   (g$ellipsis-map$7201$Of4HK
     g$ellipsis-map$10633$Of4HK
     (case-lambda
       ((g$proc$9006$Of4HK g$ls$9007$Of4HK . g$ls*$9008$Of4HK)
        (letrec* ((g$who$9009$Of4HK '...))
          (begin
            (if (list? g$ls$9007$Of4HK)
              (void)
              (assertion-violation
                g$who$9009$Of4HK
                '"not a list"
                g$ls$9007$Of4HK))
            (if (null? g$ls*$9008$Of4HK)
              (void)
              ((case-lambda
                 ((g$n$9010$Of4HK)
                  (for-each
                    (case-lambda
                      ((g$x$9011$Of4HK)
                       (begin
                         (if (list? g$x$9011$Of4HK)
                           (void)
                           (assertion-violation
                             g$who$9009$Of4HK
                             '"not a list"
                             g$x$9011$Of4HK))
                         (if (= (length g$x$9011$Of4HK) g$n$9010$Of4HK)
                           (void)
                           (assertion-violation
                             g$who$9009$Of4HK
                             '"length mismatch"
                             g$ls$9007$Of4HK
                             g$x$9011$Of4HK)))))
                    g$ls*$9008$Of4HK)))
               (length g$ls$9007$Of4HK)))
            (apply map g$proc$9006$Of4HK g$ls$9007$Of4HK g$ls*$9008$Of4HK))))))
   (g$syntax-transformer$7202$Of4HK
     g$syntax-transformer$10634$Of4HK
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9012$Of4HK
                     (case-lambda
                       ((g$src$9072$Of4HK
                          g$e$9073$Of4HK
                          g$r$9074$Of4HK
                          g$maps$9075$Of4HK
                          g$ellipsis?$9076$Of4HK
                          g$vec?$9077$Of4HK)
                        ((case-lambda
                           ((g$t$9078$Of4HK)
                            ((case-lambda
                               ((g$ls/false$9079$Of4HK)
                                (if (if g$ls/false$9079$Of4HK
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9080$Of4HK)
                                             (g$ellipsis?$9076$Of4HK
                                               g$dots$9080$Of4HK)))
                                          g$ls/false$9079$Of4HK))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9081$Of4HK)
                                       (g$syntax-violation$7302$Of4HK
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9072$Of4HK)))
                                    g$ls/false$9079$Of4HK)
                                  ((case-lambda
                                     ((g$t$9082$Of4HK)
                                      ((case-lambda
                                         ((g$ls/false$9083$Of4HK)
                                          (if (if g$ls/false$9083$Of4HK
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9084$Of4HK)
                                                       (g$id?$6918$Of4HK
                                                         g$id$9084$Of4HK)))
                                                    g$ls/false$9083$Of4HK))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9085$Of4HK)
                                                 ((case-lambda
                                                    ((g$label$9086$Of4HK)
                                                     ((case-lambda
                                                        ((g$b$9087$Of4HK)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$6935$Of4HK
                                                                        g$b$9087$Of4HK)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9090$Of4HK)
                                                                        (g$gen-ref$9013$Of4HK
                                                                          g$src$9072$Of4HK
                                                                          (car g$var.lev$9090$Of4HK)
                                                                          (cdr g$var.lev$9090$Of4HK)
                                                                          g$maps$9075$Of4HK)))
                                                                     (g$binding-value$6936$Of4HK
                                                                       g$b$9087$Of4HK))))
                                                                 (case-lambda
                                                                   ((g$var$9091$Of4HK
                                                                      g$maps$9092$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$maps$9093$Of4HK
                                                                          g$var$9094$Of4HK)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9094$Of4HK)
                                                                          g$maps$9093$Of4HK)))
                                                                     g$maps$9092$Of4HK
                                                                     g$var$9091$Of4HK))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9073$Of4HK)
                                                                 g$maps$9075$Of4HK)))))))
                                                      (g$label->binding$6933$Of4HK
                                                        g$label$9086$Of4HK
                                                        g$r$9074$Of4HK))))
                                                  (g$id->label$6931$Of4HK
                                                    g$e$9073$Of4HK))))
                                              g$ls/false$9083$Of4HK)
                                            ((case-lambda
                                               ((g$t$9095$Of4HK)
                                                ((case-lambda
                                                   ((g$ls/false$9096$Of4HK)
                                                    (if (if g$ls/false$9096$Of4HK
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9097$Of4HK
                                                                   g$e$9098$Of4HK)
                                                                 (g$ellipsis?$9076$Of4HK
                                                                   g$dots$9097$Of4HK)))
                                                              g$ls/false$9096$Of4HK))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9099$Of4HK
                                                             g$e$9100$Of4HK)
                                                           (if g$vec?$9077$Of4HK
                                                             (g$syntax-violation$7302$Of4HK
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9072$Of4HK)
                                                             (g$gen-syntax$9012$Of4HK
                                                               g$src$9072$Of4HK
                                                               g$e$9100$Of4HK
                                                               g$r$9074$Of4HK
                                                               g$maps$9075$Of4HK
                                                               (case-lambda
                                                                 ((g$x$9101$Of4HK)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9096$Of4HK)
                                                      ((case-lambda
                                                         ((g$t$9102$Of4HK)
                                                          ((case-lambda
                                                             ((g$ls/false$9103$Of4HK)
                                                              (if (if g$ls/false$9103$Of4HK
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9104$Of4HK
                                                                             g$dots$9105$Of4HK
                                                                             g$y$9106$Of4HK)
                                                                           (g$ellipsis?$9076$Of4HK
                                                                             g$dots$9105$Of4HK)))
                                                                        g$ls/false$9103$Of4HK))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9107$Of4HK
                                                                       g$dots$9108$Of4HK
                                                                       g$y$9109$Of4HK)
                                                                     ((letrec ((g$f$9110$Of4HK
                                                                                 (case-lambda
                                                                                   ((g$y$9111$Of4HK
                                                                                      g$k$9112$Of4HK)
                                                                                    ((case-lambda
                                                                                       ((g$t$9113$Of4HK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9114$Of4HK)
                                                                                            (if g$ls/false$9114$Of4HK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9112$Of4HK
                                                                                                     g$maps$9075$Of4HK)))
                                                                                                g$ls/false$9114$Of4HK)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9115$Of4HK)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9116$Of4HK)
                                                                                                      (if (if g$ls/false$9116$Of4HK
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9117$Of4HK
                                                                                                                     g$y$9118$Of4HK)
                                                                                                                   (g$ellipsis?$9076$Of4HK
                                                                                                                     g$dots$9117$Of4HK)))
                                                                                                                g$ls/false$9116$Of4HK))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9119$Of4HK
                                                                                                               g$y$9120$Of4HK)
                                                                                                             (g$f$9110$Of4HK
                                                                                                               g$y$9120$Of4HK
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9121$Of4HK)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9112$Of4HK
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9121$Of4HK))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9124$Of4HK
                                                                                                                         g$maps$9125$Of4HK)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9126$Of4HK
                                                                                                                             g$x$9127$Of4HK)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9126$Of4HK))
                                                                                                                             (g$syntax-violation$7302$Of4HK
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9072$Of4HK)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9015$Of4HK
                                                                                                                                 g$x$9127$Of4HK
                                                                                                                                 (car g$maps$9126$Of4HK))
                                                                                                                               (cdr g$maps$9126$Of4HK)))))
                                                                                                                        g$maps$9125$Of4HK
                                                                                                                        g$x$9124$Of4HK)))))))))
                                                                                                          g$ls/false$9116$Of4HK)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9128$Of4HK)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9129$Of4HK)
                                                                                                                (if g$ls/false$9129$Of4HK
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9012$Of4HK
                                                                                                                              g$src$9072$Of4HK
                                                                                                                              g$y$9111$Of4HK
                                                                                                                              g$r$9074$Of4HK
                                                                                                                              g$maps$9075$Of4HK
                                                                                                                              g$ellipsis?$9076$Of4HK
                                                                                                                              g$vec?$9077$Of4HK)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9132$Of4HK
                                                                                                                              g$maps$9133$Of4HK)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9134$Of4HK
                                                                                                                                  g$y$9135$Of4HK)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9112$Of4HK
                                                                                                                                       g$maps$9134$Of4HK)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9138$Of4HK
                                                                                                                                       g$maps$9139$Of4HK)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9140$Of4HK
                                                                                                                                           g$x$9141$Of4HK)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9014$Of4HK
                                                                                                                                             g$x$9141$Of4HK
                                                                                                                                             g$y$9135$Of4HK)
                                                                                                                                           g$maps$9140$Of4HK)))
                                                                                                                                      g$maps$9139$Of4HK
                                                                                                                                      g$x$9138$Of4HK))))))
                                                                                                                             g$maps$9133$Of4HK
                                                                                                                             g$y$9132$Of4HK))))))
                                                                                                                    g$ls/false$9129$Of4HK)
                                                                                                                  (g$syntax-violation$7302$Of4HK
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9128$Of4HK))))
                                                                                                             (g$syntax-dispatch$7196$Of4HK
                                                                                                               g$t$9128$Of4HK
                                                                                                               '_))))
                                                                                                         g$t$9115$Of4HK))))
                                                                                                   (g$syntax-dispatch$7196$Of4HK
                                                                                                     g$t$9115$Of4HK
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9113$Of4HK))))
                                                                                         (g$syntax-dispatch$7196$Of4HK
                                                                                           g$t$9113$Of4HK
                                                                                           '()))))
                                                                                     g$y$9111$Of4HK)))))
                                                                        g$f$9110$Of4HK)
                                                                      g$y$9109$Of4HK
                                                                      (case-lambda
                                                                        ((g$maps$9142$Of4HK)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9012$Of4HK
                                                                                g$src$9072$Of4HK
                                                                                g$x$9107$Of4HK
                                                                                g$r$9074$Of4HK
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9142$Of4HK)
                                                                                g$ellipsis?$9076$Of4HK
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9145$Of4HK
                                                                                g$maps$9146$Of4HK)
                                                                              ((case-lambda
                                                                                 ((g$maps$9147$Of4HK
                                                                                    g$x$9148$Of4HK)
                                                                                  (if (null?
                                                                                        (car g$maps$9147$Of4HK))
                                                                                    (g$syntax-violation$7302$Of4HK
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9072$Of4HK)
                                                                                    (values
                                                                                      (g$gen-map$9016$Of4HK
                                                                                        g$x$9148$Of4HK
                                                                                        (car g$maps$9147$Of4HK))
                                                                                      (cdr g$maps$9147$Of4HK)))))
                                                                               g$maps$9146$Of4HK
                                                                               g$x$9145$Of4HK)))))))))
                                                                  g$ls/false$9103$Of4HK)
                                                                ((case-lambda
                                                                   ((g$t$9149$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9150$Of4HK)
                                                                        (if g$ls/false$9150$Of4HK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9151$Of4HK
                                                                                 g$y$9152$Of4HK)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9012$Of4HK
                                                                                      g$src$9072$Of4HK
                                                                                      g$x$9151$Of4HK
                                                                                      g$r$9074$Of4HK
                                                                                      g$maps$9075$Of4HK
                                                                                      g$ellipsis?$9076$Of4HK
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9155$Of4HK
                                                                                      g$maps$9156$Of4HK)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9157$Of4HK
                                                                                          g$xnew$9158$Of4HK)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9012$Of4HK
                                                                                               g$src$9072$Of4HK
                                                                                               g$y$9152$Of4HK
                                                                                               g$r$9074$Of4HK
                                                                                               g$maps$9157$Of4HK
                                                                                               g$ellipsis?$9076$Of4HK
                                                                                               g$vec?$9077$Of4HK)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9161$Of4HK
                                                                                               g$maps$9162$Of4HK)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9163$Of4HK
                                                                                                   g$ynew$9164$Of4HK)
                                                                                                 (values
                                                                                                   (g$gen-cons$9017$Of4HK
                                                                                                     g$e$9073$Of4HK
                                                                                                     g$x$9151$Of4HK
                                                                                                     g$y$9152$Of4HK
                                                                                                     g$xnew$9158$Of4HK
                                                                                                     g$ynew$9164$Of4HK)
                                                                                                   g$maps$9163$Of4HK)))
                                                                                              g$maps$9162$Of4HK
                                                                                              g$ynew$9161$Of4HK))))))
                                                                                     g$maps$9156$Of4HK
                                                                                     g$xnew$9155$Of4HK))))))
                                                                            g$ls/false$9150$Of4HK)
                                                                          ((case-lambda
                                                                             ((g$t$9165$Of4HK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9166$Of4HK)
                                                                                  (if g$ls/false$9166$Of4HK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9167$Of4HK)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9012$Of4HK
                                                                                                g$src$9072$Of4HK
                                                                                                g$ls$9167$Of4HK
                                                                                                g$r$9074$Of4HK
                                                                                                g$maps$9075$Of4HK
                                                                                                g$ellipsis?$9076$Of4HK
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9170$Of4HK
                                                                                                g$maps$9171$Of4HK)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9172$Of4HK
                                                                                                    g$lsnew$9173$Of4HK)
                                                                                                  (values
                                                                                                    (g$gen-vector$9018$Of4HK
                                                                                                      g$e$9073$Of4HK
                                                                                                      g$ls$9167$Of4HK
                                                                                                      g$lsnew$9173$Of4HK)
                                                                                                    g$maps$9172$Of4HK)))
                                                                                               g$maps$9171$Of4HK
                                                                                               g$lsnew$9170$Of4HK))))))
                                                                                      g$ls/false$9166$Of4HK)
                                                                                    ((case-lambda
                                                                                       ((g$t$9174$Of4HK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9175$Of4HK)
                                                                                            (if g$ls/false$9175$Of4HK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9073$Of4HK)
                                                                                                     g$maps$9075$Of4HK)))
                                                                                                g$ls/false$9175$Of4HK)
                                                                                              (g$syntax-violation$7302$Of4HK
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9174$Of4HK))))
                                                                                         (g$syntax-dispatch$7196$Of4HK
                                                                                           g$t$9174$Of4HK
                                                                                           '_))))
                                                                                     g$t$9165$Of4HK))))
                                                                               (g$syntax-dispatch$7196$Of4HK
                                                                                 g$t$9165$Of4HK
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9149$Of4HK))))
                                                                     (g$syntax-dispatch$7196$Of4HK
                                                                       g$t$9149$Of4HK
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9102$Of4HK))))
                                                           (g$syntax-dispatch$7196$Of4HK
                                                             g$t$9102$Of4HK
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9095$Of4HK))))
                                                 (g$syntax-dispatch$7196$Of4HK
                                                   g$t$9095$Of4HK
                                                   '(any any)))))
                                             g$t$9082$Of4HK))))
                                       (g$syntax-dispatch$7196$Of4HK
                                         g$t$9082$Of4HK
                                         'any))))
                                   g$t$9078$Of4HK))))
                             (g$syntax-dispatch$7196$Of4HK
                               g$t$9078$Of4HK
                               'any))))
                         g$e$9073$Of4HK))))
                   (g$gen-ref$9013$Of4HK
                     (case-lambda
                       ((g$src$9059$Of4HK
                          g$var$9060$Of4HK
                          g$level$9061$Of4HK
                          g$maps$9062$Of4HK)
                        (if (= g$level$9061$Of4HK '0)
                          (values g$var$9060$Of4HK g$maps$9062$Of4HK)
                          (if (null? g$maps$9062$Of4HK)
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9059$Of4HK)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9013$Of4HK
                                   g$src$9059$Of4HK
                                   g$var$9060$Of4HK
                                   (- g$level$9061$Of4HK '1)
                                   (cdr g$maps$9062$Of4HK))))
                              (case-lambda
                                ((g$outer-var$9065$Of4HK
                                   g$outer-maps$9066$Of4HK)
                                 ((case-lambda
                                    ((g$outer-maps$9067$Of4HK
                                       g$outer-var$9068$Of4HK)
                                     ((case-lambda
                                        ((g$t$9069$Of4HK)
                                         (if g$t$9069$Of4HK
                                           ((case-lambda
                                              ((g$b$9070$Of4HK)
                                               (values
                                                 (cdr g$b$9070$Of4HK)
                                                 g$maps$9062$Of4HK)))
                                            g$t$9069$Of4HK)
                                           ((case-lambda
                                              ((g$inner-var$9071$Of4HK)
                                               (values
                                                 g$inner-var$9071$Of4HK
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9068$Of4HK
                                                       g$inner-var$9071$Of4HK)
                                                     (car g$maps$9062$Of4HK))
                                                   g$outer-maps$9067$Of4HK))))
                                            (g$gen-lexical$6862$Of4HK 'tmp)))))
                                      (assq
                                        g$outer-var$9068$Of4HK
                                        (car g$maps$9062$Of4HK)))))
                                  g$outer-maps$9066$Of4HK
                                  g$outer-var$9065$Of4HK)))))))))
                   (g$gen-append$9014$Of4HK
                     (case-lambda
                       ((g$x$9057$Of4HK g$y$9058$Of4HK)
                        (if (equal? g$y$9058$Of4HK ''())
                          g$x$9057$Of4HK
                          (list 'append g$x$9057$Of4HK g$y$9058$Of4HK)))))
                   (g$gen-mappend$9015$Of4HK
                     (case-lambda
                       ((g$e$9055$Of4HK g$map-env$9056$Of4HK)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9016$Of4HK
                            g$e$9055$Of4HK
                            g$map-env$9056$Of4HK)))))
                   (g$gen-map$9016$Of4HK
                     (case-lambda
                       ((g$e$9046$Of4HK g$map-env$9047$Of4HK)
                        ((case-lambda
                           ((g$formals$9048$Of4HK g$actuals$9049$Of4HK)
                            (if (eq? (car g$e$9046$Of4HK) 'ref)
                              (car g$actuals$9049$Of4HK)
                              (if (g$for-all$5347$Of4HK
                                    (case-lambda
                                      ((g$x$9050$Of4HK)
                                       (if (eq? (car g$x$9050$Of4HK) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$4878$Of4HK g$x$9050$Of4HK)
                                             g$formals$9048$Of4HK))
                                         '#f)))
                                    (cdr g$e$9046$Of4HK))
                                ((case-lambda
                                   ((g$args$9051$Of4HK)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9046$Of4HK))
                                        g$args$9051$Of4HK))))
                                 (map ((case-lambda
                                         ((g$r$9052$Of4HK)
                                          (case-lambda
                                            ((g$x$9053$Of4HK)
                                             (cdr (assq
                                                    (g$cadr$4878$Of4HK
                                                      g$x$9053$Of4HK)
                                                    g$r$9052$Of4HK))))))
                                       (map cons
                                            g$formals$9048$Of4HK
                                            g$actuals$9049$Of4HK))
                                      (cdr g$e$9046$Of4HK)))
                                (g$cons*$5349$Of4HK
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9048$Of4HK
                                    g$e$9046$Of4HK)
                                  g$actuals$9049$Of4HK)))))
                         (map cdr g$map-env$9047$Of4HK)
                         (map (case-lambda
                                ((g$x$9054$Of4HK)
                                 (list 'ref (car g$x$9054$Of4HK))))
                              g$map-env$9047$Of4HK)))))
                   (g$gen-cons$9017$Of4HK
                     (case-lambda
                       ((g$e$9038$Of4HK
                          g$x$9039$Of4HK
                          g$y$9040$Of4HK
                          g$xnew$9041$Of4HK
                          g$ynew$9042$Of4HK)
                        ((case-lambda
                           ((g$t$9043$Of4HK)
                            (if (eqv? g$t$9043$Of4HK 'quote)
                              (if (eq? (car g$xnew$9041$Of4HK) 'quote)
                                ((case-lambda
                                   ((g$xnew$9044$Of4HK g$ynew$9045$Of4HK)
                                    (if (if (eq? g$xnew$9044$Of4HK
                                                 g$x$9039$Of4HK)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9045$Of4HK
                                                 g$y$9040$Of4HK))
                                          '#f)
                                      (list 'quote g$e$9038$Of4HK)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9044$Of4HK
                                          g$ynew$9045$Of4HK)))))
                                 (g$cadr$4878$Of4HK g$xnew$9041$Of4HK)
                                 (g$cadr$4878$Of4HK g$ynew$9042$Of4HK))
                                (if (null?
                                      (g$cadr$4878$Of4HK g$ynew$9042$Of4HK))
                                  (list 'list g$xnew$9041$Of4HK)
                                  (list
                                    'cons
                                    g$xnew$9041$Of4HK
                                    g$ynew$9042$Of4HK)))
                              (if (eqv? g$t$9043$Of4HK 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9041$Of4HK
                                    (cdr g$ynew$9042$Of4HK)))
                                (list
                                  'cons
                                  g$xnew$9041$Of4HK
                                  g$ynew$9042$Of4HK)))))
                         (car g$ynew$9042$Of4HK)))))
                   (g$gen-vector$9018$Of4HK
                     (case-lambda
                       ((g$e$9035$Of4HK g$ls$9036$Of4HK g$lsnew$9037$Of4HK)
                        (if (eq? (car g$lsnew$9037$Of4HK) 'quote)
                          (if (eq? (g$cadr$4878$Of4HK g$lsnew$9037$Of4HK)
                                   g$ls$9036$Of4HK)
                            (list 'quote g$e$9035$Of4HK)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$4878$Of4HK g$lsnew$9037$Of4HK))))
                          (if (eq? (car g$lsnew$9037$Of4HK) 'list)
                            (cons 'vector (cdr g$lsnew$9037$Of4HK))
                            (list 'list->vector g$lsnew$9037$Of4HK))))))
                   (g$regen$9019$Of4HK
                     (case-lambda
                       ((g$x$9032$Of4HK)
                        ((case-lambda
                           ((g$t$9033$Of4HK)
                            (if (eqv? g$t$9033$Of4HK 'ref)
                              (g$cadr$4878$Of4HK g$x$9032$Of4HK)
                              (if (eqv? g$t$9033$Of4HK 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$4878$Of4HK g$x$9032$Of4HK))
                                (if (eqv? g$t$9033$Of4HK 'quote)
                                  (list
                                    'quote
                                    (g$cadr$4878$Of4HK g$x$9032$Of4HK))
                                  (if (eqv? g$t$9033$Of4HK 'lambda)
                                    (g$build-lambda$6849$Of4HK
                                      '#f
                                      (g$cadr$4878$Of4HK g$x$9032$Of4HK)
                                      (g$regen$9019$Of4HK
                                        (g$caddr$4884$Of4HK g$x$9032$Of4HK)))
                                    (if (eqv? g$t$9033$Of4HK 'map)
                                      ((case-lambda
                                         ((g$ls$9034$Of4HK)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9034$Of4HK)))
                                       (map g$regen$9019$Of4HK
                                            (cdr g$x$9032$Of4HK)))
                                      (cons
                                        (list 'primitive (car g$x$9032$Of4HK))
                                        (map g$regen$9019$Of4HK
                                             (cdr g$x$9032$Of4HK))))))))))
                         (car g$x$9032$Of4HK))))))
           (case-lambda
             ((g$e$9020$Of4HK g$r$9021$Of4HK g$mr$9022$Of4HK)
              ((case-lambda
                 ((g$t$9023$Of4HK)
                  ((case-lambda
                     ((g$ls/false$9024$Of4HK)
                      (if g$ls/false$9024$Of4HK
                        (apply
                          (case-lambda
                            ((g$x$9025$Of4HK)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9012$Of4HK
                                    g$e$9020$Of4HK
                                    g$x$9025$Of4HK
                                    g$r$9021$Of4HK
                                    '()
                                    g$ellipsis?$7197$Of4HK
                                    '#f)))
                               (case-lambda
                                 ((g$e$9028$Of4HK g$maps$9029$Of4HK)
                                  ((case-lambda
                                     ((g$maps$9030$Of4HK g$e$9031$Of4HK)
                                      (g$regen$9019$Of4HK g$e$9031$Of4HK)))
                                   g$maps$9029$Of4HK
                                   g$e$9028$Of4HK))))))
                          g$ls/false$9024$Of4HK)
                        (g$syntax-violation$7302$Of4HK
                          '#f
                          '"invalid syntax"
                          g$t$9023$Of4HK))))
                   (g$syntax-dispatch$7196$Of4HK g$t$9023$Of4HK '(_ any)))))
               g$e$9020$Of4HK))))))))
   (g$core-macro-transformer$7203$Of4HK
     g$core-macro-transformer$10635$Of4HK
     (case-lambda
       ((g$name$9176$Of4HK)
        ((case-lambda
           ((g$t$9177$Of4HK)
            (if (eqv? g$t$9177$Of4HK 'quote)
              g$quote-transformer$7156$Of4HK
              (if (eqv? g$t$9177$Of4HK 'lambda)
                g$lambda-transformer$7158$Of4HK
                (if (eqv? g$t$9177$Of4HK 'case-lambda)
                  g$case-lambda-transformer$7157$Of4HK
                  (if (eqv? g$t$9177$Of4HK 'letrec)
                    g$letrec-transformer$7146$Of4HK
                    (if (eqv? g$t$9177$Of4HK 'letrec*)
                      g$letrec*-transformer$7147$Of4HK
                      (if (eqv? g$t$9177$Of4HK 'case)
                        g$case-transformer$7155$Of4HK
                        (if (eqv? g$t$9177$Of4HK 'if)
                          g$if-transformer$7154$Of4HK
                          (if (eqv? g$t$9177$Of4HK 'when)
                            g$when-transformer$7152$Of4HK
                            (if (eqv? g$t$9177$Of4HK 'unless)
                              g$unless-transformer$7153$Of4HK
                              (if (eqv? g$t$9177$Of4HK 'parameterize)
                                g$parameterize-transformer$7193$Of4HK
                                (if (eqv? g$t$9177$Of4HK 'foreign-call)
                                  g$foreign-call-transformer$7194$Of4HK
                                  (if (eqv? g$t$9177$Of4HK 'syntax-case)
                                    g$syntax-case-transformer$7200$Of4HK
                                    (if (eqv? g$t$9177$Of4HK 'syntax)
                                      g$syntax-transformer$7202$Of4HK
                                      (if (eqv? g$t$9177$Of4HK 'type-descriptor)
                                        g$type-descriptor-transformer$7149$Of4HK
                                        (if (eqv?
                                              g$t$9177$Of4HK
                                              'record-type-descriptor)
                                          g$record-type-descriptor-transformer$7150$Of4HK
                                          (if (eqv?
                                                g$t$9177$Of4HK
                                                'record-constructor-descriptor)
                                            g$record-constructor-descriptor-transformer$7151$Of4HK
                                            (if (eqv?
                                                  g$t$9177$Of4HK
                                                  'fluid-let-syntax)
                                              g$fluid-let-syntax-transformer$7148$Of4HK
                                              (assertion-violation
                                                'macro-transformer
                                                '"BUG: cannot find transformer"
                                                g$name$9176$Of4HK))))))))))))))))))))
         g$name$9176$Of4HK))))
   (g$file-options-macro$7204$Of4HK
     g$file-options-macro$10636$Of4HK
     (case-lambda
       ((g$x$9178$Of4HK)
        ((case-lambda
           ((g$t$9179$Of4HK)
            ((case-lambda
               ((g$ls/false$9180$Of4HK)
                (if (if g$ls/false$9180$Of4HK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$opt*$9181$Of4HK)
                             (if (g$for-all$5347$Of4HK
                                   g$id?$6918$Of4HK
                                   g$opt*$9181$Of4HK)
                               (begin
                                 '#f
                                 (g$file-options-spec$6188$Of4HK
                                   (map g$id->sym$6919$Of4HK
                                        g$opt*$9181$Of4HK)))
                               '#f)))
                          g$ls/false$9180$Of4HK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$opt*$9182$Of4HK)
                       (g$bless$7159$Of4HK
                         (list
                           'quote
                           (g$file-options-spec$6188$Of4HK
                             (map g$id->sym$6919$Of4HK g$opt*$9182$Of4HK))))))
                    g$ls/false$9180$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$9179$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$9179$Of4HK '(_ . each-any)))))
         g$x$9178$Of4HK))))
   (g$symbol-macro$7205$Of4HK
     g$symbol-macro$10637$Of4HK
     (case-lambda
       ((g$x$9183$Of4HK g$set$9184$Of4HK)
        ((case-lambda
           ((g$t$9185$Of4HK)
            ((case-lambda
               ((g$ls/false$9186$Of4HK)
                (if (if g$ls/false$9186$Of4HK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9187$Of4HK)
                             (if (g$id?$6918$Of4HK g$name$9187$Of4HK)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$6919$Of4HK g$name$9187$Of4HK)
                                   g$set$9184$Of4HK))
                               '#f)))
                          g$ls/false$9186$Of4HK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9188$Of4HK)
                       (g$bless$7159$Of4HK (list 'quote g$name$9188$Of4HK))))
                    g$ls/false$9186$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$9185$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$9185$Of4HK '(_ any)))))
         g$x$9183$Of4HK))))
   (g$macro-transformer$7206$Of4HK
     g$macro-transformer$10638$Of4HK
     (case-lambda
       ((g$x$9189$Of4HK)
        (if (procedure? g$x$9189$Of4HK)
          g$x$9189$Of4HK
          (if (symbol? g$x$9189$Of4HK)
            ((case-lambda
               ((g$t$9190$Of4HK)
                (if (eqv? g$t$9190$Of4HK 'define-record-type)
                  g$define-record-type-macro$7190$Of4HK
                  (if (eqv? g$t$9190$Of4HK 'define-struct)
                    g$define-struct-macro$7189$Of4HK
                    (if (eqv? g$t$9190$Of4HK 'include)
                      g$include-macro$7184$Of4HK
                      (if (eqv? g$t$9190$Of4HK 'cond)
                        g$cond-macro$7182$Of4HK
                        (if (eqv? g$t$9190$Of4HK 'let)
                          g$let-macro$7162$Of4HK
                          (if (eqv? g$t$9190$Of4HK 'do)
                            g$do-macro$7178$Of4HK
                            (if (eqv? g$t$9190$Of4HK 'or)
                              g$or-macro$7180$Of4HK
                              (if (eqv? g$t$9190$Of4HK 'and)
                                g$and-macro$7181$Of4HK
                                (if (eqv? g$t$9190$Of4HK 'let*)
                                  g$let*-macro$7179$Of4HK
                                  (if (eqv? g$t$9190$Of4HK 'let-values)
                                    g$let-values-macro$7163$Of4HK
                                    (if (eqv? g$t$9190$Of4HK 'let*-values)
                                      g$let*-values-macro$7164$Of4HK
                                      (if (eqv? g$t$9190$Of4HK 'syntax-rules)
                                        g$syntax-rules-macro$7186$Of4HK
                                        (if (eqv? g$t$9190$Of4HK 'quasiquote)
                                          g$quasiquote-macro$7187$Of4HK
                                          (if (eqv? g$t$9190$Of4HK 'quasisyntax)
                                            g$quasisyntax-macro$7188$Of4HK
                                            (if (eqv?
                                                  g$t$9190$Of4HK
                                                  'with-syntax)
                                              g$with-syntax-macro$7160$Of4HK
                                              (if (eqv?
                                                    g$t$9190$Of4HK
                                                    'identifier-syntax)
                                                g$identifier-syntax-macro$7177$Of4HK
                                                (if (eqv? g$t$9190$Of4HK 'time)
                                                  g$time-macro$7173$Of4HK
                                                  (if (eqv?
                                                        g$t$9190$Of4HK
                                                        'delay)
                                                    g$delay-macro$7174$Of4HK
                                                    (if (eqv?
                                                          g$t$9190$Of4HK
                                                          'assert)
                                                      g$assert-macro$7175$Of4HK
                                                      (if (eqv?
                                                            g$t$9190$Of4HK
                                                            'endianness)
                                                        g$endianness-macro$7176$Of4HK
                                                        (if (eqv?
                                                              g$t$9190$Of4HK
                                                              'guard)
                                                          g$guard-macro$7171$Of4HK
                                                          (if (eqv?
                                                                g$t$9190$Of4HK
                                                                'define-enumeration)
                                                            g$define-enumeration-macro$7172$Of4HK
                                                            (if (eqv?
                                                                  g$t$9190$Of4HK
                                                                  'trace-lambda)
                                                              g$trace-lambda-macro$7165$Of4HK
                                                              (if (eqv?
                                                                    g$t$9190$Of4HK
                                                                    'trace-define)
                                                                g$trace-define-macro$7166$Of4HK
                                                                (if (eqv?
                                                                      g$t$9190$Of4HK
                                                                      'trace-define-syntax)
                                                                  g$trace-define-syntax-macro$7167$Of4HK
                                                                  (if (eqv?
                                                                        g$t$9190$Of4HK
                                                                        'trace-let-syntax)
                                                                    g$trace-let-syntax-macro$7169$Of4HK
                                                                    (if (eqv?
                                                                          g$t$9190$Of4HK
                                                                          'trace-letrec-syntax)
                                                                      g$trace-letrec-syntax-macro$7170$Of4HK
                                                                      (if (eqv?
                                                                            g$t$9190$Of4HK
                                                                            'define-condition-type)
                                                                        g$define-condition-type-macro$7191$Of4HK
                                                                        (if (eqv?
                                                                              g$t$9190$Of4HK
                                                                              'include-into)
                                                                          g$include-into-macro$7185$Of4HK
                                                                          (if (eqv?
                                                                                g$t$9190$Of4HK
                                                                                'eol-style)
                                                                            (case-lambda
                                                                              ((g$x$9193$Of4HK)
                                                                               (g$symbol-macro$7205$Of4HK
                                                                                 g$x$9193$Of4HK
                                                                                 '(none
                                                                                    lf
                                                                                    cr
                                                                                    crlf
                                                                                    nel
                                                                                    crnel
                                                                                    ls))))
                                                                            (if (eqv?
                                                                                  g$t$9190$Of4HK
                                                                                  'error-handling-mode)
                                                                              (case-lambda
                                                                                ((g$x$9192$Of4HK)
                                                                                 (g$symbol-macro$7205$Of4HK
                                                                                   g$x$9192$Of4HK
                                                                                   '(ignore
                                                                                      raise
                                                                                      replace))))
                                                                              (if (eqv?
                                                                                    g$t$9190$Of4HK
                                                                                    'buffer-mode)
                                                                                (case-lambda
                                                                                  ((g$x$9191$Of4HK)
                                                                                   (g$symbol-macro$7205$Of4HK
                                                                                     g$x$9191$Of4HK
                                                                                     '(none
                                                                                        line
                                                                                        block))))
                                                                                (if (eqv?
                                                                                      g$t$9190$Of4HK
                                                                                      'file-options)
                                                                                  g$file-options-macro$7204$Of4HK
                                                                                  (if (memv
                                                                                        g$t$9190$Of4HK
                                                                                        '(... =>
                                                                                              _
                                                                                              else
                                                                                              unquote
                                                                                              unquote-splicing
                                                                                              unsyntax
                                                                                              unsyntax-splicing
                                                                                              fields
                                                                                              mutable
                                                                                              immutable
                                                                                              parent
                                                                                              protocol
                                                                                              sealed
                                                                                              opaque
                                                                                              nongenerative
                                                                                              parent-rtd))
                                                                                    g$incorrect-usage-macro$7192$Of4HK
                                                                                    (error
                                                                                      'macro-transformer
                                                                                      '"BUG: invalid macro"
                                                                                      g$x$9189$Of4HK)))))))))))))))))))))))))))))))))))))
             g$x$9189$Of4HK)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9189$Of4HK))))))
   (g$local-macro-transformer$7207$Of4HK
     g$local-macro-transformer$10639$Of4HK
     (case-lambda ((g$x$9194$Of4HK) (car g$x$9194$Of4HK))))
   (g$do-macro-call$7208$Of4HK
     g$do-macro-call$10640$Of4HK
     (case-lambda
       ((g$transformer$9195$Of4HK g$expr$9196$Of4HK)
        ((case-lambda
           ((g$out$9197$Of4HK)
            (begin
              ((letrec ((g$f$9198$Of4HK
                          (case-lambda
                            ((g$x$9199$Of4HK)
                             (if (g$stx?$6890$Of4HK g$x$9199$Of4HK)
                               (void)
                               (if (pair? g$x$9199$Of4HK)
                                 (begin
                                   (g$f$9198$Of4HK (car g$x$9199$Of4HK))
                                   (g$f$9198$Of4HK (cdr g$x$9199$Of4HK)))
                                 (if (vector? g$x$9199$Of4HK)
                                   (vector-for-each
                                     g$f$9198$Of4HK
                                     g$x$9199$Of4HK)
                                   (if (symbol? g$x$9199$Of4HK)
                                     (g$syntax-violation$7302$Of4HK
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9196$Of4HK
                                       g$x$9199$Of4HK)
                                     (void)))))))))
                 g$f$9198$Of4HK)
               g$out$9197$Of4HK)
              (g$add-mark$6907$Of4HK
                (g$gen-mark$6902$Of4HK)
                g$out$9197$Of4HK
                g$expr$9196$Of4HK))))
         (g$transformer$9195$Of4HK
           (g$add-mark$6907$Of4HK
             g$anti-mark$6903$Of4HK
             g$expr$9196$Of4HK
             '#f))))))
   (g$chi-macro$7209$Of4HK
     g$chi-macro$10641$Of4HK
     (case-lambda
       ((g$p$9200$Of4HK g$e$9201$Of4HK)
        (g$do-macro-call$7208$Of4HK
          (g$macro-transformer$7206$Of4HK g$p$9200$Of4HK)
          g$e$9201$Of4HK))))
   (g$chi-local-macro$7210$Of4HK
     g$chi-local-macro$10642$Of4HK
     (case-lambda
       ((g$p$9202$Of4HK g$e$9203$Of4HK)
        (g$do-macro-call$7208$Of4HK
          (g$local-macro-transformer$7207$Of4HK g$p$9202$Of4HK)
          g$e$9203$Of4HK))))
   (g$chi-global-macro$7211$Of4HK
     g$chi-global-macro$10643$Of4HK
     (case-lambda
       ((g$p$9204$Of4HK g$e$9205$Of4HK)
        ((case-lambda
           ((g$lib$9206$Of4HK g$loc$9207$Of4HK)
            (begin
              (g$visit-library$6734$Of4HK g$lib$9206$Of4HK)
              ((case-lambda
                 ((g$x$9208$Of4HK)
                  ((case-lambda
                     ((g$transformer$9209$Of4HK)
                      (g$do-macro-call$7208$Of4HK
                        g$transformer$9209$Of4HK
                        g$e$9205$Of4HK)))
                   (if (procedure? g$x$9208$Of4HK)
                     g$x$9208$Of4HK
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9208$Of4HK)))))
               (symbol-value g$loc$9207$Of4HK)))))
         (car g$p$9204$Of4HK)
         (cdr g$p$9204$Of4HK)))))
   (g$chi-expr*$7212$Of4HK
     g$chi-expr*$10644$Of4HK
     (case-lambda
       ((g$e*$9210$Of4HK g$r$9211$Of4HK g$mr$9212$Of4HK)
        (if (null? g$e*$9210$Of4HK)
          '()
          ((case-lambda
             ((g$e$9213$Of4HK)
              (cons
                g$e$9213$Of4HK
                (g$chi-expr*$7212$Of4HK
                  (cdr g$e*$9210$Of4HK)
                  g$r$9211$Of4HK
                  g$mr$9212$Of4HK))))
           (g$chi-expr$7214$Of4HK
             (car g$e*$9210$Of4HK)
             g$r$9211$Of4HK
             g$mr$9212$Of4HK))))))
   (g$chi-application$7213$Of4HK
     g$chi-application$10645$Of4HK
     (case-lambda
       ((g$e$9214$Of4HK g$r$9215$Of4HK g$mr$9216$Of4HK)
        ((case-lambda
           ((g$t$9217$Of4HK)
            ((case-lambda
               ((g$ls/false$9218$Of4HK)
                (if g$ls/false$9218$Of4HK
                  (apply
                    (case-lambda
                      ((g$rator$9219$Of4HK g$rands$9220$Of4HK)
                       ((case-lambda
                          ((g$rator$9221$Of4HK)
                           (cons
                             g$rator$9221$Of4HK
                             (g$chi-expr*$7212$Of4HK
                               g$rands$9220$Of4HK
                               g$r$9215$Of4HK
                               g$mr$9216$Of4HK))))
                        (g$chi-expr$7214$Of4HK
                          g$rator$9219$Of4HK
                          g$r$9215$Of4HK
                          g$mr$9216$Of4HK))))
                    g$ls/false$9218$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$9217$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$9217$Of4HK '(any . each-any)))))
         g$e$9214$Of4HK))))
   (g$chi-expr$7214$Of4HK
     g$chi-expr$10646$Of4HK
     (case-lambda
       ((g$e$9222$Of4HK g$r$9223$Of4HK g$mr$9224$Of4HK)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$6938$Of4HK g$e$9222$Of4HK g$r$9223$Of4HK)))
          (case-lambda
            ((g$type$9228$Of4HK g$value$9229$Of4HK g$kwd$9230$Of4HK)
             ((case-lambda
                ((g$kwd$9231$Of4HK g$value$9232$Of4HK g$type$9233$Of4HK)
                 ((case-lambda
                    ((g$t$9234$Of4HK)
                     (if (eqv? g$t$9234$Of4HK 'core-macro)
                       ((case-lambda
                          ((g$transformer$9260$Of4HK)
                           (g$transformer$9260$Of4HK
                             g$e$9222$Of4HK
                             g$r$9223$Of4HK
                             g$mr$9224$Of4HK)))
                        (g$core-macro-transformer$7203$Of4HK
                          g$value$9232$Of4HK))
                       (if (eqv? g$t$9234$Of4HK 'global)
                         ((case-lambda
                            ((g$lib$9258$Of4HK)
                             ((case-lambda
                                ((g$loc$9259$Of4HK)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7248$Of4HK)
                                        g$lib$9258$Of4HK)
                                       g$loc$9259$Of4HK))))))
                              (cdr g$value$9232$Of4HK))))
                          (car g$value$9232$Of4HK))
                         (if (eqv? g$t$9234$Of4HK 'core-prim)
                           ((case-lambda
                              ((g$name$9257$Of4HK)
                               (list 'primitive g$name$9257$Of4HK)))
                            g$value$9232$Of4HK)
                           (if (eqv? g$t$9234$Of4HK 'call)
                             (g$chi-application$7213$Of4HK
                               g$e$9222$Of4HK
                               g$r$9223$Of4HK
                               g$mr$9224$Of4HK)
                             (if (eqv? g$t$9234$Of4HK 'lexical)
                               ((case-lambda
                                  ((g$lex$9256$Of4HK) g$lex$9256$Of4HK))
                                (g$lexical-var$7140$Of4HK g$value$9232$Of4HK))
                               (if (memv
                                     g$t$9234$Of4HK
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7214$Of4HK
                                   (g$chi-global-macro$7211$Of4HK
                                     g$value$9232$Of4HK
                                     g$e$9222$Of4HK)
                                   g$r$9223$Of4HK
                                   g$mr$9224$Of4HK)
                                 (if (memv
                                       g$t$9234$Of4HK
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7214$Of4HK
                                     (g$chi-local-macro$7210$Of4HK
                                       g$value$9232$Of4HK
                                       g$e$9222$Of4HK)
                                     g$r$9223$Of4HK
                                     g$mr$9224$Of4HK)
                                   (if (memv g$t$9234$Of4HK '(macro macro!))
                                     (g$chi-expr$7214$Of4HK
                                       (g$chi-macro$7209$Of4HK
                                         g$value$9232$Of4HK
                                         g$e$9222$Of4HK)
                                       g$r$9223$Of4HK
                                       g$mr$9224$Of4HK)
                                     (if (eqv? g$t$9234$Of4HK 'constant)
                                       ((case-lambda
                                          ((g$datum$9255$Of4HK)
                                           (list 'quote g$datum$9255$Of4HK)))
                                        g$value$9232$Of4HK)
                                       (if (eqv? g$t$9234$Of4HK 'set!)
                                         (g$chi-set!$7215$Of4HK
                                           g$e$9222$Of4HK
                                           g$r$9223$Of4HK
                                           g$mr$9224$Of4HK)
                                         (if (eqv? g$t$9234$Of4HK 'begin)
                                           ((case-lambda
                                              ((g$t$9251$Of4HK)
                                               ((case-lambda
                                                  ((g$ls/false$9252$Of4HK)
                                                   (if g$ls/false$9252$Of4HK
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9253$Of4HK
                                                            g$x*$9254$Of4HK)
                                                          (g$build-sequence$6852$Of4HK
                                                            '#f
                                                            (g$chi-expr*$7212$Of4HK
                                                              (cons
                                                                g$x$9253$Of4HK
                                                                g$x*$9254$Of4HK)
                                                              g$r$9223$Of4HK
                                                              g$mr$9224$Of4HK))))
                                                       g$ls/false$9252$Of4HK)
                                                     (g$syntax-violation$7302$Of4HK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9251$Of4HK))))
                                                (g$syntax-dispatch$7196$Of4HK
                                                  g$t$9251$Of4HK
                                                  '(_ any . each-any)))))
                                            g$e$9222$Of4HK)
                                           (if (memv
                                                 g$t$9234$Of4HK
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9236$Of4HK)
                                                 ((case-lambda
                                                    ((g$ls/false$9237$Of4HK)
                                                     (if (if g$ls/false$9237$Of4HK
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9238$Of4HK
                                                                    g$xrhs*$9239$Of4HK
                                                                    g$xbody$9240$Of4HK
                                                                    g$xbody*$9241$Of4HK)
                                                                  (if (g$valid-bound-ids?$6923$Of4HK
                                                                        g$xlhs*$9238$Of4HK)
                                                                    (void)
                                                                    (g$syntax-violation$7302$Of4HK
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9222$Of4HK))))
                                                               g$ls/false$9237$Of4HK))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9242$Of4HK
                                                              g$xrhs*$9243$Of4HK
                                                              g$xbody$9244$Of4HK
                                                              g$xbody*$9245$Of4HK)
                                                            ((case-lambda
                                                               ((g$xlab*$9246$Of4HK)
                                                                ((case-lambda
                                                                   ((g$xrib$9247$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$xb*$9248$Of4HK)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$6852$Of4HK
                                                                              '#f
                                                                              (g$chi-expr*$7212$Of4HK
                                                                                (map (case-lambda
                                                                                       ((g$x$9249$Of4HK)
                                                                                        (g$add-subst$6908$Of4HK
                                                                                          g$xrib$9247$Of4HK
                                                                                          g$x$9249$Of4HK)))
                                                                                     (cons
                                                                                       g$xbody$9244$Of4HK
                                                                                       g$xbody*$9245$Of4HK))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9246$Of4HK
                                                                                       g$xb*$9248$Of4HK)
                                                                                  g$r$9223$Of4HK)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9246$Of4HK
                                                                                       g$xb*$9248$Of4HK)
                                                                                  g$mr$9224$Of4HK))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9250$Of4HK)
                                                                             (g$make-eval-transformer$6950$Of4HK
                                                                               (g$expand-transformer$7241$Of4HK
                                                                                 (if (eq? g$type$9233$Of4HK
                                                                                          'let-syntax)
                                                                                   g$x$9250$Of4HK
                                                                                   (g$add-subst$6908$Of4HK
                                                                                     g$xrib$9247$Of4HK
                                                                                     g$x$9250$Of4HK))
                                                                                 g$mr$9224$Of4HK))))
                                                                          g$xrhs*$9243$Of4HK))))
                                                                 (g$make-full-rib$6886$Of4HK
                                                                   g$xlhs*$9242$Of4HK
                                                                   g$xlab*$9246$Of4HK))))
                                                             (map g$gen-label$6864$Of4HK
                                                                  g$xlhs*$9242$Of4HK))))
                                                         g$ls/false$9237$Of4HK)
                                                       (g$syntax-violation$7302$Of4HK
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9236$Of4HK))))
                                                  (g$syntax-dispatch$7196$Of4HK
                                                    g$t$9236$Of4HK
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9222$Of4HK)
                                             (if (eqv?
                                                   g$t$9234$Of4HK
                                                   'displaced-lexical)
                                               (g$syntax-violation$7302$Of4HK
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9222$Of4HK)
                                               (if (eqv? g$t$9234$Of4HK 'syntax)
                                                 (g$syntax-violation$7302$Of4HK
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9222$Of4HK)
                                                 (if (memv
                                                       g$t$9234$Of4HK
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7302$Of4HK
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9235$Of4HK)
                                                           (if (eqv?
                                                                 g$t$9235$Of4HK
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$9235$Of4HK
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$9235$Of4HK
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$9235$Of4HK
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$9235$Of4HK
                                                                         'import)
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9233$Of4HK)
                                                       '" was found where an expression was expected")
                                                     g$e$9222$Of4HK)
                                                   (if (eqv?
                                                         g$t$9234$Of4HK
                                                         'mutable)
                                                     (g$syntax-violation$7302$Of4HK
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9222$Of4HK)
                                                     (g$syntax-violation$7302$Of4HK
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9222$Of4HK)))))))))))))))))))
                  g$type$9233$Of4HK)))
              g$kwd$9230$Of4HK
              g$value$9229$Of4HK
              g$type$9228$Of4HK)))))))
   (g$chi-set!$7215$Of4HK
     g$chi-set!$10647$Of4HK
     (case-lambda
       ((g$e$9261$Of4HK g$r$9262$Of4HK g$mr$9263$Of4HK)
        ((case-lambda
           ((g$t$9264$Of4HK)
            ((case-lambda
               ((g$ls/false$9265$Of4HK)
                (if (if g$ls/false$9265$Of4HK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9266$Of4HK g$v$9267$Of4HK)
                             (g$id?$6918$Of4HK g$x$9266$Of4HK)))
                          g$ls/false$9265$Of4HK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9268$Of4HK g$v$9269$Of4HK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$6938$Of4HK
                              g$x$9268$Of4HK
                              g$r$9262$Of4HK)))
                         (case-lambda
                           ((g$type$9273$Of4HK
                              g$value$9274$Of4HK
                              g$kwd$9275$Of4HK)
                            ((case-lambda
                               ((g$kwd$9276$Of4HK
                                  g$value$9277$Of4HK
                                  g$type$9278$Of4HK)
                                ((case-lambda
                                   ((g$t$9279$Of4HK)
                                    (if (eqv? g$t$9279$Of4HK 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$7142$Of4HK
                                          g$value$9277$Of4HK
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7140$Of4HK
                                            g$value$9277$Of4HK)
                                          (g$chi-expr$7214$Of4HK
                                            g$v$9269$Of4HK
                                            g$r$9262$Of4HK
                                            g$mr$9263$Of4HK)))
                                      (if (eqv? g$t$9279$Of4HK 'core-prim)
                                        (g$syntax-violation$7302$Of4HK
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9261$Of4HK)
                                        (if (eqv? g$t$9279$Of4HK 'global)
                                          (g$syntax-violation$7302$Of4HK
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9261$Of4HK)
                                          (if (eqv?
                                                g$t$9279$Of4HK
                                                'global-macro!)
                                            (g$chi-expr$7214$Of4HK
                                              (g$chi-global-macro$7211$Of4HK
                                                g$value$9277$Of4HK
                                                g$e$9261$Of4HK)
                                              g$r$9262$Of4HK
                                              g$mr$9263$Of4HK)
                                            (if (eqv?
                                                  g$t$9279$Of4HK
                                                  'local-macro!)
                                              (g$chi-expr$7214$Of4HK
                                                (g$chi-local-macro$7210$Of4HK
                                                  g$value$9277$Of4HK
                                                  g$e$9261$Of4HK)
                                                g$r$9262$Of4HK
                                                g$mr$9263$Of4HK)
                                              (if (eqv? g$t$9279$Of4HK 'mutable)
                                                (g$syntax-violation$7302$Of4HK
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9261$Of4HK)
                                                (g$syntax-violation$7302$Of4HK
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9261$Of4HK)))))))))
                                 g$type$9278$Of4HK)))
                             g$kwd$9275$Of4HK
                             g$value$9274$Of4HK
                             g$type$9273$Of4HK))))))
                    g$ls/false$9265$Of4HK)
                  (g$syntax-violation$7302$Of4HK
                    '#f
                    '"invalid syntax"
                    g$t$9264$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$9264$Of4HK '(_ any any)))))
         g$e$9261$Of4HK))))
   (g$verify-formals$7216$Of4HK
     g$verify-formals$10648$Of4HK
     (case-lambda
       ((g$fmls$9280$Of4HK g$stx$9281$Of4HK)
        ((case-lambda
           ((g$t$9282$Of4HK)
            ((case-lambda
               ((g$ls/false$9283$Of4HK)
                (if g$ls/false$9283$Of4HK
                  (apply
                    (case-lambda
                      ((g$x*$9284$Of4HK)
                       (if (g$valid-bound-ids?$6923$Of4HK g$x*$9284$Of4HK)
                         (void)
                         (g$invalid-fmls-error$7161$Of4HK
                           g$stx$9281$Of4HK
                           g$fmls$9280$Of4HK))))
                    g$ls/false$9283$Of4HK)
                  ((case-lambda
                     ((g$t$9285$Of4HK)
                      ((case-lambda
                         ((g$ls/false$9286$Of4HK)
                          (if g$ls/false$9286$Of4HK
                            (apply
                              (case-lambda
                                ((g$x*$9287$Of4HK g$x$9288$Of4HK)
                                 (if (g$valid-bound-ids?$6923$Of4HK
                                       (cons g$x$9288$Of4HK g$x*$9287$Of4HK))
                                   (void)
                                   (g$invalid-fmls-error$7161$Of4HK
                                     g$stx$9281$Of4HK
                                     g$fmls$9280$Of4HK))))
                              g$ls/false$9286$Of4HK)
                            ((case-lambda
                               ((g$t$9289$Of4HK)
                                ((case-lambda
                                   ((g$ls/false$9290$Of4HK)
                                    (if g$ls/false$9290$Of4HK
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7302$Of4HK
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9281$Of4HK)))
                                        g$ls/false$9290$Of4HK)
                                      (g$syntax-violation$7302$Of4HK
                                        '#f
                                        '"invalid syntax"
                                        g$t$9289$Of4HK))))
                                 (g$syntax-dispatch$7196$Of4HK
                                   g$t$9289$Of4HK
                                   '_))))
                             g$t$9285$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$9285$Of4HK
                         '#(each+ any () any)))))
                   g$t$9282$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$9282$Of4HK 'each-any))))
         g$fmls$9280$Of4HK))))
   (g$chi-lambda-clause$7217$Of4HK
     g$chi-lambda-clause$10649$Of4HK
     (case-lambda
       ((g$stx$9291$Of4HK
          g$fmls$9292$Of4HK
          g$body*$9293$Of4HK
          g$r$9294$Of4HK
          g$mr$9295$Of4HK)
        ((case-lambda
           ((g$t$9296$Of4HK)
            ((case-lambda
               ((g$ls/false$9297$Of4HK)
                (if g$ls/false$9297$Of4HK
                  (apply
                    (case-lambda
                      ((g$x*$9298$Of4HK)
                       (begin
                         (g$verify-formals$7216$Of4HK
                           g$fmls$9292$Of4HK
                           g$stx$9291$Of4HK)
                         ((case-lambda
                            ((g$lex*$9299$Of4HK g$lab*$9300$Of4HK)
                             (values
                               g$lex*$9299$Of4HK
                               (g$chi-internal$7225$Of4HK
                                 (g$add-subst$6908$Of4HK
                                   (g$make-full-rib$6886$Of4HK
                                     g$x*$9298$Of4HK
                                     g$lab*$9300$Of4HK)
                                   g$body*$9293$Of4HK)
                                 (g$add-lexicals$7144$Of4HK
                                   g$lab*$9300$Of4HK
                                   g$lex*$9299$Of4HK
                                   g$r$9294$Of4HK)
                                 g$mr$9295$Of4HK))))
                          (map g$gen-lexical$6862$Of4HK g$x*$9298$Of4HK)
                          (map g$gen-label$6864$Of4HK g$x*$9298$Of4HK)))))
                    g$ls/false$9297$Of4HK)
                  ((case-lambda
                     ((g$t$9301$Of4HK)
                      ((case-lambda
                         ((g$ls/false$9302$Of4HK)
                          (if g$ls/false$9302$Of4HK
                            (apply
                              (case-lambda
                                ((g$x*$9303$Of4HK g$x$9304$Of4HK)
                                 (begin
                                   (g$verify-formals$7216$Of4HK
                                     g$fmls$9292$Of4HK
                                     g$stx$9291$Of4HK)
                                   ((case-lambda
                                      ((g$lex*$9305$Of4HK
                                         g$lab*$9306$Of4HK
                                         g$lex$9307$Of4HK
                                         g$lab$9308$Of4HK)
                                       (values
                                         (append
                                           g$lex*$9305$Of4HK
                                           g$lex$9307$Of4HK)
                                         (g$chi-internal$7225$Of4HK
                                           (g$add-subst$6908$Of4HK
                                             (g$make-full-rib$6886$Of4HK
                                               (cons
                                                 g$x$9304$Of4HK
                                                 g$x*$9303$Of4HK)
                                               (cons
                                                 g$lab$9308$Of4HK
                                                 g$lab*$9306$Of4HK))
                                             g$body*$9293$Of4HK)
                                           (g$add-lexicals$7144$Of4HK
                                             (cons
                                               g$lab$9308$Of4HK
                                               g$lab*$9306$Of4HK)
                                             (cons
                                               g$lex$9307$Of4HK
                                               g$lex*$9305$Of4HK)
                                             g$r$9294$Of4HK)
                                           g$mr$9295$Of4HK))))
                                    (map g$gen-lexical$6862$Of4HK
                                         g$x*$9303$Of4HK)
                                    (map g$gen-label$6864$Of4HK g$x*$9303$Of4HK)
                                    (g$gen-lexical$6862$Of4HK g$x$9304$Of4HK)
                                    (g$gen-label$6864$Of4HK g$x$9304$Of4HK)))))
                              g$ls/false$9302$Of4HK)
                            ((case-lambda
                               ((g$t$9309$Of4HK)
                                ((case-lambda
                                   ((g$ls/false$9310$Of4HK)
                                    (if g$ls/false$9310$Of4HK
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7302$Of4HK
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9292$Of4HK)))
                                        g$ls/false$9310$Of4HK)
                                      (g$syntax-violation$7302$Of4HK
                                        '#f
                                        '"invalid syntax"
                                        g$t$9309$Of4HK))))
                                 (g$syntax-dispatch$7196$Of4HK
                                   g$t$9309$Of4HK
                                   '_))))
                             g$t$9301$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$9301$Of4HK
                         '#(each+ any () any)))))
                   g$t$9296$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$9296$Of4HK 'each-any))))
         g$fmls$9292$Of4HK))))
   (g$chi-lambda-clause*$7218$Of4HK
     g$chi-lambda-clause*$10650$Of4HK
     (case-lambda
       ((g$stx$9311$Of4HK
          g$fmls*$9312$Of4HK
          g$body**$9313$Of4HK
          g$r$9314$Of4HK
          g$mr$9315$Of4HK)
        (if (null? g$fmls*$9312$Of4HK)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7217$Of4HK
                 g$stx$9311$Of4HK
                 (car g$fmls*$9312$Of4HK)
                 (car g$body**$9313$Of4HK)
                 g$r$9314$Of4HK
                 g$mr$9315$Of4HK)))
            (case-lambda
              ((g$a$9318$Of4HK g$b$9319$Of4HK)
               ((case-lambda
                  ((g$b$9320$Of4HK g$a$9321$Of4HK)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7218$Of4HK
                          g$stx$9311$Of4HK
                          (cdr g$fmls*$9312$Of4HK)
                          (cdr g$body**$9313$Of4HK)
                          g$r$9314$Of4HK
                          g$mr$9315$Of4HK)))
                     (case-lambda
                       ((g$a*$9324$Of4HK g$b*$9325$Of4HK)
                        ((case-lambda
                           ((g$b*$9326$Of4HK g$a*$9327$Of4HK)
                            (values
                              (cons g$a$9321$Of4HK g$a*$9327$Of4HK)
                              (cons g$b$9320$Of4HK g$b*$9326$Of4HK))))
                         g$b*$9325$Of4HK
                         g$a*$9324$Of4HK))))))
                g$b$9319$Of4HK
                g$a$9318$Of4HK))))))))
   (g$chi-defun$7219$Of4HK
     g$chi-defun$10651$Of4HK
     (case-lambda
       ((g$x$9328$Of4HK g$r$9329$Of4HK g$mr$9330$Of4HK)
        ((case-lambda
           ((g$fmls$9331$Of4HK g$body*$9332$Of4HK)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7217$Of4HK
                   g$fmls$9331$Of4HK
                   g$fmls$9331$Of4HK
                   g$body*$9332$Of4HK
                   g$r$9329$Of4HK
                   g$mr$9330$Of4HK)))
              (case-lambda
                ((g$fmls$9335$Of4HK g$body$9336$Of4HK)
                 ((case-lambda
                    ((g$body$9337$Of4HK g$fmls$9338$Of4HK)
                     (g$build-lambda$6849$Of4HK
                       '#f
                       g$fmls$9338$Of4HK
                       g$body$9337$Of4HK)))
                  g$body$9336$Of4HK
                  g$fmls$9335$Of4HK))))))
         (car g$x$9328$Of4HK)
         (cdr g$x$9328$Of4HK)))))
   (g$chi-rhs$7220$Of4HK
     g$chi-rhs$10652$Of4HK
     (case-lambda
       ((g$rhs$9339$Of4HK g$r$9340$Of4HK g$mr$9341$Of4HK)
        ((case-lambda
           ((g$t$9342$Of4HK)
            (if (eqv? g$t$9342$Of4HK 'defun)
              (g$chi-defun$7219$Of4HK
                (cdr g$rhs$9339$Of4HK)
                g$r$9340$Of4HK
                g$mr$9341$Of4HK)
              (if (eqv? g$t$9342$Of4HK 'expr)
                ((case-lambda
                   ((g$expr$9344$Of4HK)
                    (g$chi-expr$7214$Of4HK
                      g$expr$9344$Of4HK
                      g$r$9340$Of4HK
                      g$mr$9341$Of4HK)))
                 (cdr g$rhs$9339$Of4HK))
                (if (eqv? g$t$9342$Of4HK 'top-expr)
                  ((case-lambda
                     ((g$expr$9343$Of4HK)
                      (g$build-sequence$6852$Of4HK
                        '#f
                        (list
                          (g$chi-expr$7214$Of4HK
                            g$expr$9343$Of4HK
                            g$r$9340$Of4HK
                            g$mr$9341$Of4HK)
                          (g$build-void$6853$Of4HK)))))
                   (cdr g$rhs$9339$Of4HK))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9339$Of4HK))))))
         (car g$rhs$9339$Of4HK)))))
   (g$expand-interaction-rhs*/init*$7221$Of4HK
     g$expand-interaction-rhs*/init*$10653$Of4HK
     (case-lambda
       ((g$lhs*$9345$Of4HK
          g$rhs*$9346$Of4HK
          g$init*$9347$Of4HK
          g$r$9348$Of4HK
          g$mr$9349$Of4HK)
        ((letrec ((g$f$9350$Of4HK
                    (case-lambda
                      ((g$lhs*$9351$Of4HK g$rhs*$9352$Of4HK)
                       (if (null? g$lhs*$9351$Of4HK)
                         (map (case-lambda
                                ((g$x$9353$Of4HK)
                                 (g$chi-expr$7214$Of4HK
                                   g$x$9353$Of4HK
                                   g$r$9348$Of4HK
                                   g$mr$9349$Of4HK)))
                              g$init*$9347$Of4HK)
                         ((case-lambda
                            ((g$lhs$9354$Of4HK g$rhs$9355$Of4HK)
                             ((case-lambda
                                ((g$t$9356$Of4HK)
                                 (if (eqv? g$t$9356$Of4HK 'defun)
                                   ((case-lambda
                                      ((g$rhs$9359$Of4HK)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9354$Of4HK
                                           g$rhs$9359$Of4HK)
                                         (g$f$9350$Of4HK
                                           (cdr g$lhs*$9351$Of4HK)
                                           (cdr g$rhs*$9352$Of4HK)))))
                                    (g$chi-defun$7219$Of4HK
                                      (cdr g$rhs$9355$Of4HK)
                                      g$r$9348$Of4HK
                                      g$mr$9349$Of4HK))
                                   (if (eqv? g$t$9356$Of4HK 'expr)
                                     ((case-lambda
                                        ((g$rhs$9358$Of4HK)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9354$Of4HK
                                             g$rhs$9358$Of4HK)
                                           (g$f$9350$Of4HK
                                             (cdr g$lhs*$9351$Of4HK)
                                             (cdr g$rhs*$9352$Of4HK)))))
                                      (g$chi-expr$7214$Of4HK
                                        (cdr g$rhs$9355$Of4HK)
                                        g$r$9348$Of4HK
                                        g$mr$9349$Of4HK))
                                     (if (eqv? g$t$9356$Of4HK 'top-expr)
                                       ((case-lambda
                                          ((g$e$9357$Of4HK)
                                           (cons
                                             g$e$9357$Of4HK
                                             (g$f$9350$Of4HK
                                               (cdr g$lhs*$9351$Of4HK)
                                               (cdr g$rhs*$9352$Of4HK)))))
                                        (g$chi-expr$7214$Of4HK
                                          (cdr g$rhs$9355$Of4HK)
                                          g$r$9348$Of4HK
                                          g$mr$9349$Of4HK))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9355$Of4HK))))))
                              (car g$rhs$9355$Of4HK))))
                          (car g$lhs*$9351$Of4HK)
                          (car g$rhs*$9352$Of4HK)))))))
           g$f$9350$Of4HK)
         g$lhs*$9345$Of4HK
         g$rhs*$9346$Of4HK))))
   (g$chi-rhs*$7222$Of4HK
     g$chi-rhs*$10654$Of4HK
     (case-lambda
       ((g$rhs*$9360$Of4HK g$r$9361$Of4HK g$mr$9362$Of4HK)
        ((letrec ((g$f$9363$Of4HK
                    (case-lambda
                      ((g$ls$9364$Of4HK)
                       (if (null? g$ls$9364$Of4HK)
                         '()
                         ((case-lambda
                            ((g$a$9365$Of4HK)
                             (cons
                               g$a$9365$Of4HK
                               (g$f$9363$Of4HK (cdr g$ls$9364$Of4HK)))))
                          (g$chi-rhs$7220$Of4HK
                            (car g$ls$9364$Of4HK)
                            g$r$9361$Of4HK
                            g$mr$9362$Of4HK)))))))
           g$f$9363$Of4HK)
         g$rhs*$9360$Of4HK))))
   (g$find-bound=?$7223$Of4HK
     g$find-bound=?$10655$Of4HK
     (case-lambda
       ((g$x$9366$Of4HK g$lhs*$9367$Of4HK g$rhs*$9368$Of4HK)
        (if (null? g$lhs*$9367$Of4HK)
          '#f
          (if (g$bound-id=?$6921$Of4HK g$x$9366$Of4HK (car g$lhs*$9367$Of4HK))
            (car g$rhs*$9368$Of4HK)
            (g$find-bound=?$7223$Of4HK
              g$x$9366$Of4HK
              (cdr g$lhs*$9367$Of4HK)
              (cdr g$rhs*$9368$Of4HK)))))))
   (g$find-dups$7224$Of4HK
     g$find-dups$10656$Of4HK
     (case-lambda
       ((g$ls$9369$Of4HK)
        ((letrec ((g$f$9370$Of4HK
                    (case-lambda
                      ((g$ls$9371$Of4HK g$dups$9372$Of4HK)
                       (if (null? g$ls$9371$Of4HK)
                         g$dups$9372$Of4HK
                         ((case-lambda
                            ((g$t$9373$Of4HK)
                             (if g$t$9373$Of4HK
                               ((case-lambda
                                  ((g$x$9374$Of4HK)
                                   (g$f$9370$Of4HK
                                     (cdr g$ls$9371$Of4HK)
                                     (cons
                                       (list
                                         (car g$ls$9371$Of4HK)
                                         g$x$9374$Of4HK)
                                       g$dups$9372$Of4HK))))
                                g$t$9373$Of4HK)
                               (g$f$9370$Of4HK
                                 (cdr g$ls$9371$Of4HK)
                                 g$dups$9372$Of4HK))))
                          (g$find-bound=?$7223$Of4HK
                            (car g$ls$9371$Of4HK)
                            (cdr g$ls$9371$Of4HK)
                            (cdr g$ls$9371$Of4HK))))))))
           g$f$9370$Of4HK)
         g$ls$9369$Of4HK
         '()))))
   (g$chi-internal$7225$Of4HK
     g$chi-internal$10657$Of4HK
     (case-lambda
       ((g$e*$9375$Of4HK g$r$9376$Of4HK g$mr$9377$Of4HK)
        ((case-lambda
           ((g$rib$9378$Of4HK)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7240$Of4HK
                   (map (case-lambda
                          ((g$x$9386$Of4HK)
                           (g$add-subst$6908$Of4HK
                             g$rib$9378$Of4HK
                             g$x$9386$Of4HK)))
                        (g$syntax->list$6917$Of4HK g$e*$9375$Of4HK))
                   g$r$9376$Of4HK
                   g$mr$9377$Of4HK
                   '()
                   '()
                   '()
                   '()
                   g$rib$9378$Of4HK
                   '#f)))
              (case-lambda
                ((g$e*$9387$Of4HK
                   g$r$9388$Of4HK
                   g$mr$9389$Of4HK
                   g$lex*$9390$Of4HK
                   g$rhs*$9391$Of4HK
                   g$mod**$9392$Of4HK
                   g$kwd*$9393$Of4HK)
                 ((case-lambda
                    ((g$kwd*$9394$Of4HK
                       g$mod**$9395$Of4HK
                       g$rhs*$9396$Of4HK
                       g$lex*$9397$Of4HK
                       g$mr$9398$Of4HK
                       g$r$9399$Of4HK
                       g$e*$9400$Of4HK)
                     (begin
                       (if (null? g$e*$9400$Of4HK)
                         (g$syntax-violation$7302$Of4HK
                           '#f
                           '"no expression in body"
                           g$e*$9400$Of4HK)
                         (void))
                       ((case-lambda
                          ((g$init*$9401$Of4HK)
                           ((case-lambda
                              ((g$rhs*$9402$Of4HK)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$6855$Of4HK
                                     '#f
                                     (reverse g$lex*$9397$Of4HK)
                                     (reverse g$rhs*$9402$Of4HK)
                                     (g$build-sequence$6852$Of4HK
                                       '#f
                                       g$init*$9401$Of4HK)))))))
                            (g$chi-rhs*$7222$Of4HK
                              g$rhs*$9396$Of4HK
                              g$r$9399$Of4HK
                              g$mr$9398$Of4HK))))
                        (g$chi-expr*$7212$Of4HK
                          (append
                            (apply append (reverse g$mod**$9395$Of4HK))
                            g$e*$9400$Of4HK)
                          g$r$9399$Of4HK
                          g$mr$9398$Of4HK)))))
                  g$kwd*$9393$Of4HK
                  g$mod**$9392$Of4HK
                  g$rhs*$9391$Of4HK
                  g$lex*$9390$Of4HK
                  g$mr$9389$Of4HK
                  g$r$9388$Of4HK
                  g$e*$9387$Of4HK))))))
         (g$make-empty-rib$6881$Of4HK)))))
   (g$parse-module$7226$Of4HK
     g$parse-module$10658$Of4HK
     (case-lambda
       ((g$e$9403$Of4HK)
        ((case-lambda
           ((g$t$9404$Of4HK)
            ((case-lambda
               ((g$ls/false$9405$Of4HK)
                (if g$ls/false$9405$Of4HK
                  (apply
                    (case-lambda
                      ((g$export*$9406$Of4HK g$b*$9407$Of4HK)
                       (begin
                         (if (g$for-all$5347$Of4HK
                               g$id?$6918$Of4HK
                               g$export*$9406$Of4HK)
                           (void)
                           (g$syntax-violation$7302$Of4HK
                             '#f
                             '"module exports must be identifiers"
                             g$e$9403$Of4HK))
                         (values
                           '#f
                           (list->vector g$export*$9406$Of4HK)
                           g$b*$9407$Of4HK))))
                    g$ls/false$9405$Of4HK)
                  ((case-lambda
                     ((g$t$9408$Of4HK)
                      ((case-lambda
                         ((g$ls/false$9409$Of4HK)
                          (if g$ls/false$9409$Of4HK
                            (apply
                              (case-lambda
                                ((g$name$9410$Of4HK
                                   g$export*$9411$Of4HK
                                   g$b*$9412$Of4HK)
                                 (begin
                                   (if (g$id?$6918$Of4HK g$name$9410$Of4HK)
                                     (void)
                                     (g$syntax-violation$7302$Of4HK
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9403$Of4HK))
                                   (if (g$for-all$5347$Of4HK
                                         g$id?$6918$Of4HK
                                         g$export*$9411$Of4HK)
                                     (void)
                                     (g$syntax-violation$7302$Of4HK
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9403$Of4HK))
                                   (values
                                     g$name$9410$Of4HK
                                     (list->vector g$export*$9411$Of4HK)
                                     g$b*$9412$Of4HK))))
                              g$ls/false$9409$Of4HK)
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"invalid syntax"
                              g$t$9408$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$9408$Of4HK
                         '(_ any each-any . each-any)))))
                   g$t$9404$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$9404$Of4HK
               '(_ each-any . each-any)))))
         g$e$9403$Of4HK))))
   (g$8104$7227$Of4HK
     g$8104$10659$Of4HK
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8107$Of4HK
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8106$7228$Of4HK g$8106$10660$Of4HK '#f)
   (g$8105$7229$Of4HK
     g$8105$10661$Of4HK
     (make-record-constructor-descriptor
       g$8104$7227$Of4HK
       '#f
       g$8106$7228$Of4HK))
   (g$module-interface?$7230$Of4HK
     g$module-interface?$10662$Of4HK
     (record-predicate g$8104$7227$Of4HK))
   (g$make-module-interface$7231$Of4HK
     g$make-module-interface$10663$Of4HK
     (record-constructor g$8105$7229$Of4HK))
   (g$module-interface-first-mark$7232$Of4HK
     g$module-interface-first-mark$10664$Of4HK
     (record-accessor g$8104$7227$Of4HK '0))
   (g$module-interface-exp-id-vec$7233$Of4HK
     g$module-interface-exp-id-vec$10665$Of4HK
     (record-accessor g$8104$7227$Of4HK '1))
   (g$module-interface-exp-lab-vec$7234$Of4HK
     g$module-interface-exp-lab-vec$10666$Of4HK
     (record-accessor g$8104$7227$Of4HK '2))
   (g$set-module-interface-first-mark!$7235$Of4HK
     g$set-module-interface-first-mark!$10667$Of4HK
     (record-mutator g$8104$7227$Of4HK '0))
   (g$set-module-interface-exp-id-vec!$7236$Of4HK
     g$set-module-interface-exp-id-vec!$10668$Of4HK
     (record-mutator g$8104$7227$Of4HK '1))
   (g$set-module-interface-exp-lab-vec!$7237$Of4HK
     g$set-module-interface-exp-lab-vec!$10669$Of4HK
     (record-mutator g$8104$7227$Of4HK '2))
   (g$module-interface-exp-id*$7238$Of4HK
     g$module-interface-exp-id*$10670$Of4HK
     (case-lambda
       ((g$iface$9413$Of4HK g$id$9414$Of4HK)
        (letrec* ((g$diff-marks$9415$Of4HK
                    (case-lambda
                      ((g$ls$9419$Of4HK g$x$9420$Of4HK)
                       (begin
                         (if (null? g$ls$9419$Of4HK)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9421$Of4HK)
                             (if (eq? g$a$9421$Of4HK g$x$9420$Of4HK)
                               '()
                               (cons
                                 g$a$9421$Of4HK
                                 (g$diff-marks$9415$Of4HK
                                   (cdr g$ls$9419$Of4HK)
                                   g$x$9420$Of4HK)))))
                          (car g$ls$9419$Of4HK)))))))
          ((case-lambda
             ((g$diff$9416$Of4HK g$id-vec$9417$Of4HK)
              (if (null? g$diff$9416$Of4HK)
                g$id-vec$9417$Of4HK
                (vector-map
                  (case-lambda
                    ((g$x$9418$Of4HK)
                     (g$make-stx$6891$Of4HK
                       (g$stx-expr$6892$Of4HK g$x$9418$Of4HK)
                       (append
                         g$diff$9416$Of4HK
                         (g$stx-mark*$6893$Of4HK g$x$9418$Of4HK))
                       '()
                       '())))
                  g$id-vec$9417$Of4HK))))
           (g$diff-marks$9415$Of4HK
             (g$stx-mark*$6893$Of4HK g$id$9414$Of4HK)
             (g$module-interface-first-mark$7232$Of4HK g$iface$9413$Of4HK))
           (g$module-interface-exp-id-vec$7233$Of4HK g$iface$9413$Of4HK))))))
   (g$chi-internal-module$7239$Of4HK
     g$chi-internal-module$10671$Of4HK
     (case-lambda
       ((g$e$9422$Of4HK
          g$r$9423$Of4HK
          g$mr$9424$Of4HK
          g$lex*$9425$Of4HK
          g$rhs*$9426$Of4HK
          g$mod**$9427$Of4HK
          g$kwd*$9428$Of4HK)
        (call-with-values
          (case-lambda (() (g$parse-module$7226$Of4HK g$e$9422$Of4HK)))
          (case-lambda
            ((g$name$9432$Of4HK g$exp-id*$9433$Of4HK g$e*$9434$Of4HK)
             ((case-lambda
                ((g$e*$9435$Of4HK g$exp-id*$9436$Of4HK g$name$9437$Of4HK)
                 ((case-lambda
                    ((g$rib$9438$Of4HK)
                     ((case-lambda
                        ((g$e*$9439$Of4HK)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7240$Of4HK
                                    g$e*$9439$Of4HK
                                    g$r$9423$Of4HK
                                    g$mr$9424$Of4HK
                                    g$lex*$9425$Of4HK
                                    g$rhs*$9426$Of4HK
                                    g$mod**$9427$Of4HK
                                    g$kwd*$9428$Of4HK
                                    g$rib$9438$Of4HK
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9447$Of4HK
                                    g$r$9448$Of4HK
                                    g$mr$9449$Of4HK
                                    g$lex*$9450$Of4HK
                                    g$rhs*$9451$Of4HK
                                    g$mod**$9452$Of4HK
                                    g$kwd*$9453$Of4HK)
                                  ((case-lambda
                                     ((g$kwd*$9454$Of4HK
                                        g$mod**$9455$Of4HK
                                        g$rhs*$9456$Of4HK
                                        g$lex*$9457$Of4HK
                                        g$mr$9458$Of4HK
                                        g$r$9459$Of4HK
                                        g$e*$9460$Of4HK)
                                      ((case-lambda
                                         ((g$exp-lab*$9461$Of4HK
                                            g$mod**$9462$Of4HK)
                                          (if (not g$name$9437$Of4HK)
                                            (values
                                              g$lex*$9457$Of4HK
                                              g$rhs*$9456$Of4HK
                                              g$exp-id*$9436$Of4HK
                                              g$exp-lab*$9461$Of4HK
                                              g$r$9459$Of4HK
                                              g$mr$9458$Of4HK
                                              g$mod**$9462$Of4HK
                                              g$kwd*$9454$Of4HK)
                                            ((case-lambda
                                               ((g$lab$9463$Of4HK
                                                  g$iface$9464$Of4HK)
                                                (values
                                                  g$lex*$9457$Of4HK
                                                  g$rhs*$9456$Of4HK
                                                  (vector g$name$9437$Of4HK)
                                                  (vector g$lab$9463$Of4HK)
                                                  (cons
                                                    (cons
                                                      g$lab$9463$Of4HK
                                                      (cons
                                                        '$module
                                                        g$iface$9464$Of4HK))
                                                    g$r$9459$Of4HK)
                                                  (cons
                                                    (cons
                                                      g$lab$9463$Of4HK
                                                      (cons
                                                        '$module
                                                        g$iface$9464$Of4HK))
                                                    g$mr$9458$Of4HK)
                                                  g$mod**$9462$Of4HK
                                                  g$kwd*$9454$Of4HK)))
                                             (g$gen-label$6864$Of4HK 'module)
                                             (g$make-module-interface$7231$Of4HK
                                               (car (g$stx-mark*$6893$Of4HK
                                                      g$name$9437$Of4HK))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9465$Of4HK)
                                                    (g$make-stx$6891$Of4HK
                                                      (g$stx-expr$6892$Of4HK
                                                        g$x$9465$Of4HK)
                                                      (g$stx-mark*$6893$Of4HK
                                                        g$x$9465$Of4HK)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9436$Of4HK)
                                               g$exp-lab*$9461$Of4HK)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9466$Of4HK)
                                            ((case-lambda
                                               ((g$t$9467$Of4HK)
                                                (if g$t$9467$Of4HK
                                                  g$t$9467$Of4HK
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7302$Of4HK
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9466$Of4HK)))))
                                             (g$id->label$6931$Of4HK
                                               (g$make-stx$6891$Of4HK
                                                 (g$id->sym$6919$Of4HK
                                                   g$x$9466$Of4HK)
                                                 (g$stx-mark*$6893$Of4HK
                                                   g$x$9466$Of4HK)
                                                 (list g$rib$9438$Of4HK)
                                                 '())))))
                                         g$exp-id*$9436$Of4HK)
                                       (cons
                                         g$e*$9460$Of4HK
                                         g$mod**$9455$Of4HK))))
                                   g$kwd*$9453$Of4HK
                                   g$mod**$9452$Of4HK
                                   g$rhs*$9451$Of4HK
                                   g$lex*$9450$Of4HK
                                   g$mr$9449$Of4HK
                                   g$r$9448$Of4HK
                                   g$e*$9447$Of4HK)))))))))
                      (map (case-lambda
                             ((g$x$9468$Of4HK)
                              (g$add-subst$6908$Of4HK
                                g$rib$9438$Of4HK
                                g$x$9468$Of4HK)))
                           (g$syntax->list$6917$Of4HK g$e*$9435$Of4HK)))))
                  (g$make-empty-rib$6881$Of4HK))))
              g$e*$9434$Of4HK
              g$exp-id*$9433$Of4HK
              g$name$9432$Of4HK)))))))
   (g$chi-body*$7240$Of4HK
     g$chi-body*$10672$Of4HK
     (case-lambda
       ((g$e*$9469$Of4HK
          g$r$9470$Of4HK
          g$mr$9471$Of4HK
          g$lex*$9472$Of4HK
          g$rhs*$9473$Of4HK
          g$mod**$9474$Of4HK
          g$kwd*$9475$Of4HK
          g$rib$9476$Of4HK
          g$top?$9477$Of4HK)
        (if (null? g$e*$9469$Of4HK)
          (values
            g$e*$9469$Of4HK
            g$r$9470$Of4HK
            g$mr$9471$Of4HK
            g$lex*$9472$Of4HK
            g$rhs*$9473$Of4HK
            g$mod**$9474$Of4HK
            g$kwd*$9475$Of4HK)
          ((case-lambda
             ((g$e$9478$Of4HK)
              (call-with-values
                (case-lambda
                  (() (g$syntax-type$6938$Of4HK g$e$9478$Of4HK g$r$9470$Of4HK)))
                (case-lambda
                  ((g$type$9482$Of4HK g$value$9483$Of4HK g$kwd$9484$Of4HK)
                   ((case-lambda
                      ((g$kwd$9485$Of4HK g$value$9486$Of4HK g$type$9487$Of4HK)
                       ((case-lambda
                          ((g$kwd*$9488$Of4HK)
                           ((case-lambda
                              ((g$t$9489$Of4HK)
                               (if (eqv? g$t$9489$Of4HK 'define)
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7136$Of4HK
                                        g$e$9478$Of4HK)))
                                   (case-lambda
                                     ((g$id$9595$Of4HK g$rhs$9596$Of4HK)
                                      ((case-lambda
                                         ((g$rhs$9597$Of4HK g$id$9598$Of4HK)
                                          (begin
                                            (if (g$bound-id-member?$6925$Of4HK
                                                  g$id$9598$Of4HK
                                                  g$kwd*$9488$Of4HK)
                                              (g$syntax-violation$7302$Of4HK
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9478$Of4HK)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$6866$Of4HK
                                                   g$id$9598$Of4HK
                                                   g$rib$9476$Of4HK)))
                                              (case-lambda
                                                ((g$lab$9601$Of4HK
                                                   g$lex$9602$Of4HK)
                                                 ((case-lambda
                                                    ((g$lex$9603$Of4HK
                                                       g$lab$9604$Of4HK)
                                                     (begin
                                                       (g$extend-rib!$6882$Of4HK
                                                         g$rib$9476$Of4HK
                                                         g$id$9598$Of4HK
                                                         g$lab$9604$Of4HK)
                                                       (g$chi-body*$7240$Of4HK
                                                         (cdr g$e*$9469$Of4HK)
                                                         (g$add-lexical$7143$Of4HK
                                                           g$lab$9604$Of4HK
                                                           g$lex$9603$Of4HK
                                                           g$r$9470$Of4HK)
                                                         g$mr$9471$Of4HK
                                                         (cons
                                                           g$lex$9603$Of4HK
                                                           g$lex*$9472$Of4HK)
                                                         (cons
                                                           g$rhs$9597$Of4HK
                                                           g$rhs*$9473$Of4HK)
                                                         g$mod**$9474$Of4HK
                                                         g$kwd*$9488$Of4HK
                                                         g$rib$9476$Of4HK
                                                         g$top?$9477$Of4HK))))
                                                  g$lex$9602$Of4HK
                                                  g$lab$9601$Of4HK)))))))
                                       g$rhs$9596$Of4HK
                                       g$id$9595$Of4HK))))
                                 (if (eqv? g$t$9489$Of4HK 'define-syntax)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7137$Of4HK
                                          g$e$9478$Of4HK)))
                                     (case-lambda
                                       ((g$id$9586$Of4HK g$rhs$9587$Of4HK)
                                        ((case-lambda
                                           ((g$rhs$9588$Of4HK g$id$9589$Of4HK)
                                            (begin
                                              (if (g$bound-id-member?$6925$Of4HK
                                                    g$id$9589$Of4HK
                                                    g$kwd*$9488$Of4HK)
                                                (g$syntax-violation$7302$Of4HK
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9478$Of4HK)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9590$Of4HK
                                                    g$expanded-rhs$9591$Of4HK)
                                                  (begin
                                                    (g$extend-rib!$6882$Of4HK
                                                      g$rib$9476$Of4HK
                                                      g$id$9589$Of4HK
                                                      g$lab$9590$Of4HK)
                                                    ((case-lambda
                                                       ((g$b$9592$Of4HK)
                                                        (g$chi-body*$7240$Of4HK
                                                          (cdr g$e*$9469$Of4HK)
                                                          (cons
                                                            (cons
                                                              g$lab$9590$Of4HK
                                                              g$b$9592$Of4HK)
                                                            g$r$9470$Of4HK)
                                                          (cons
                                                            (cons
                                                              g$lab$9590$Of4HK
                                                              g$b$9592$Of4HK)
                                                            g$mr$9471$Of4HK)
                                                          g$lex*$9472$Of4HK
                                                          g$rhs*$9473$Of4HK
                                                          g$mod**$9474$Of4HK
                                                          g$kwd*$9488$Of4HK
                                                          g$rib$9476$Of4HK
                                                          g$top?$9477$Of4HK)))
                                                     (g$make-eval-transformer$6950$Of4HK
                                                       g$expanded-rhs$9591$Of4HK)))))
                                               (g$gen-define-label$6867$Of4HK
                                                 g$id$9589$Of4HK
                                                 g$rib$9476$Of4HK)
                                               (g$expand-transformer$7241$Of4HK
                                                 g$rhs$9588$Of4HK
                                                 g$mr$9471$Of4HK)))))
                                         g$rhs$9587$Of4HK
                                         g$id$9586$Of4HK))))
                                   (if (memv
                                         g$t$9489$Of4HK
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9571$Of4HK)
                                         ((case-lambda
                                            ((g$ls/false$9572$Of4HK)
                                             (if (if g$ls/false$9572$Of4HK
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9573$Of4HK
                                                            g$xrhs*$9574$Of4HK
                                                            g$xbody*$9575$Of4HK)
                                                          (if (g$valid-bound-ids?$6923$Of4HK
                                                                g$xlhs*$9573$Of4HK)
                                                            (void)
                                                            (g$syntax-violation$7302$Of4HK
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9478$Of4HK))))
                                                       g$ls/false$9572$Of4HK))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9576$Of4HK
                                                      g$xrhs*$9577$Of4HK
                                                      g$xbody*$9578$Of4HK)
                                                    ((case-lambda
                                                       ((g$xlab*$9579$Of4HK)
                                                        ((case-lambda
                                                           ((g$xrib$9580$Of4HK)
                                                            ((case-lambda
                                                               ((g$xb*$9581$Of4HK)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7240$Of4HK
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9582$Of4HK)
                                                                                (g$add-subst$6908$Of4HK
                                                                                  g$xrib$9580$Of4HK
                                                                                  g$x$9582$Of4HK)))
                                                                             g$xbody*$9578$Of4HK)
                                                                        (cdr g$e*$9469$Of4HK))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9579$Of4HK
                                                                             g$xb*$9581$Of4HK)
                                                                        g$r$9470$Of4HK)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9579$Of4HK
                                                                             g$xb*$9581$Of4HK)
                                                                        g$mr$9471$Of4HK)
                                                                      g$lex*$9472$Of4HK
                                                                      g$rhs*$9473$Of4HK
                                                                      g$mod**$9474$Of4HK
                                                                      g$kwd*$9488$Of4HK
                                                                      g$rib$9476$Of4HK
                                                                      g$top?$9477$Of4HK))))))
                                                             (map (case-lambda
                                                                    ((g$x$9583$Of4HK)
                                                                     (g$make-eval-transformer$6950$Of4HK
                                                                       (g$expand-transformer$7241$Of4HK
                                                                         (if (eq? g$type$9487$Of4HK
                                                                                  'let-syntax)
                                                                           g$x$9583$Of4HK
                                                                           (g$add-subst$6908$Of4HK
                                                                             g$xrib$9580$Of4HK
                                                                             g$x$9583$Of4HK))
                                                                         g$mr$9471$Of4HK))))
                                                                  g$xrhs*$9577$Of4HK))))
                                                         (g$make-full-rib$6886$Of4HK
                                                           g$xlhs*$9576$Of4HK
                                                           g$xlab*$9579$Of4HK))))
                                                     (map g$gen-label$6864$Of4HK
                                                          g$xlhs*$9576$Of4HK))))
                                                 g$ls/false$9572$Of4HK)
                                               (g$syntax-violation$7302$Of4HK
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9571$Of4HK))))
                                          (g$syntax-dispatch$7196$Of4HK
                                            g$t$9571$Of4HK
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9478$Of4HK)
                                     (if (eqv? g$t$9489$Of4HK 'begin)
                                       ((case-lambda
                                          ((g$t$9568$Of4HK)
                                           ((case-lambda
                                              ((g$ls/false$9569$Of4HK)
                                               (if g$ls/false$9569$Of4HK
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9570$Of4HK)
                                                      (g$chi-body*$7240$Of4HK
                                                        (append
                                                          g$x*$9570$Of4HK
                                                          (cdr g$e*$9469$Of4HK))
                                                        g$r$9470$Of4HK
                                                        g$mr$9471$Of4HK
                                                        g$lex*$9472$Of4HK
                                                        g$rhs*$9473$Of4HK
                                                        g$mod**$9474$Of4HK
                                                        g$kwd*$9488$Of4HK
                                                        g$rib$9476$Of4HK
                                                        g$top?$9477$Of4HK)))
                                                   g$ls/false$9569$Of4HK)
                                                 (g$syntax-violation$7302$Of4HK
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9568$Of4HK))))
                                            (g$syntax-dispatch$7196$Of4HK
                                              g$t$9568$Of4HK
                                              '(_ . each-any)))))
                                        g$e$9478$Of4HK)
                                       (if (memv
                                             g$t$9489$Of4HK
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7240$Of4HK
                                           (cons
                                             (g$add-subst$6908$Of4HK
                                               g$rib$9476$Of4HK
                                               (g$chi-global-macro$7211$Of4HK
                                                 g$value$9486$Of4HK
                                                 g$e$9478$Of4HK))
                                             (cdr g$e*$9469$Of4HK))
                                           g$r$9470$Of4HK
                                           g$mr$9471$Of4HK
                                           g$lex*$9472$Of4HK
                                           g$rhs*$9473$Of4HK
                                           g$mod**$9474$Of4HK
                                           g$kwd*$9488$Of4HK
                                           g$rib$9476$Of4HK
                                           g$top?$9477$Of4HK)
                                         (if (memv
                                               g$t$9489$Of4HK
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7240$Of4HK
                                             (cons
                                               (g$add-subst$6908$Of4HK
                                                 g$rib$9476$Of4HK
                                                 (g$chi-local-macro$7210$Of4HK
                                                   g$value$9486$Of4HK
                                                   g$e$9478$Of4HK))
                                               (cdr g$e*$9469$Of4HK))
                                             g$r$9470$Of4HK
                                             g$mr$9471$Of4HK
                                             g$lex*$9472$Of4HK
                                             g$rhs*$9473$Of4HK
                                             g$mod**$9474$Of4HK
                                             g$kwd*$9488$Of4HK
                                             g$rib$9476$Of4HK
                                             g$top?$9477$Of4HK)
                                           (if (memv
                                                 g$t$9489$Of4HK
                                                 '(macro macro!))
                                             (g$chi-body*$7240$Of4HK
                                               (cons
                                                 (g$add-subst$6908$Of4HK
                                                   g$rib$9476$Of4HK
                                                   (g$chi-macro$7209$Of4HK
                                                     g$value$9486$Of4HK
                                                     g$e$9478$Of4HK))
                                                 (cdr g$e*$9469$Of4HK))
                                               g$r$9470$Of4HK
                                               g$mr$9471$Of4HK
                                               g$lex*$9472$Of4HK
                                               g$rhs*$9473$Of4HK
                                               g$mod**$9474$Of4HK
                                               g$kwd*$9488$Of4HK
                                               g$rib$9476$Of4HK
                                               g$top?$9477$Of4HK)
                                             (if (eqv? g$t$9489$Of4HK 'module)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7239$Of4HK
                                                      g$e$9478$Of4HK
                                                      g$r$9470$Of4HK
                                                      g$mr$9471$Of4HK
                                                      g$lex*$9472$Of4HK
                                                      g$rhs*$9473$Of4HK
                                                      g$mod**$9474$Of4HK
                                                      g$kwd*$9488$Of4HK)))
                                                 (case-lambda
                                                   ((g$lex*$9550$Of4HK
                                                      g$rhs*$9551$Of4HK
                                                      g$m-exp-id*$9552$Of4HK
                                                      g$m-exp-lab*$9553$Of4HK
                                                      g$r$9554$Of4HK
                                                      g$mr$9555$Of4HK
                                                      g$mod**$9556$Of4HK
                                                      g$kwd*$9557$Of4HK)
                                                    ((case-lambda
                                                       ((g$kwd*$9558$Of4HK
                                                          g$mod**$9559$Of4HK
                                                          g$mr$9560$Of4HK
                                                          g$r$9561$Of4HK
                                                          g$m-exp-lab*$9562$Of4HK
                                                          g$m-exp-id*$9563$Of4HK
                                                          g$rhs*$9564$Of4HK
                                                          g$lex*$9565$Of4HK)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$9566$Of4HK
                                                                 g$lab$9567$Of4HK)
                                                               (g$extend-rib!$6882$Of4HK
                                                                 g$rib$9476$Of4HK
                                                                 g$id$9566$Of4HK
                                                                 g$lab$9567$Of4HK)))
                                                            g$m-exp-id*$9563$Of4HK
                                                            g$m-exp-lab*$9562$Of4HK)
                                                          (g$chi-body*$7240$Of4HK
                                                            (cdr g$e*$9469$Of4HK)
                                                            g$r$9561$Of4HK
                                                            g$mr$9560$Of4HK
                                                            g$lex*$9565$Of4HK
                                                            g$rhs*$9564$Of4HK
                                                            g$mod**$9559$Of4HK
                                                            g$kwd*$9558$Of4HK
                                                            g$rib$9476$Of4HK
                                                            g$top?$9477$Of4HK))))
                                                     g$kwd*$9557$Of4HK
                                                     g$mod**$9556$Of4HK
                                                     g$mr$9555$Of4HK
                                                     g$r$9554$Of4HK
                                                     g$m-exp-lab*$9553$Of4HK
                                                     g$m-exp-id*$9552$Of4HK
                                                     g$rhs*$9551$Of4HK
                                                     g$lex*$9550$Of4HK))))
                                               (if (eqv?
                                                     g$t$9489$Of4HK
                                                     'library)
                                                 (begin
                                                   (g$library-expander$7289$Of4HK
                                                     (g$stx->datum$6929$Of4HK
                                                       g$e$9478$Of4HK))
                                                   (g$chi-body*$7240$Of4HK
                                                     (cdr g$e*$9469$Of4HK)
                                                     g$r$9470$Of4HK
                                                     g$mr$9471$Of4HK
                                                     g$lex*$9472$Of4HK
                                                     g$rhs*$9473$Of4HK
                                                     g$mod**$9474$Of4HK
                                                     g$kwd*$9488$Of4HK
                                                     g$rib$9476$Of4HK
                                                     g$top?$9477$Of4HK))
                                                 (if (eqv?
                                                       g$t$9489$Of4HK
                                                       'import)
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$9490$Of4HK
                                                                     (case-lambda
                                                                       ((g$e$9532$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$t$9533$Of4HK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9534$Of4HK)
                                                                                (if (if g$ls/false$9534$Of4HK
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9535$Of4HK)
                                                                                             (g$id?$6918$Of4HK
                                                                                               g$id$9535$Of4HK)))
                                                                                          g$ls/false$9534$Of4HK))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9536$Of4HK)
                                                                                       '#t))
                                                                                    g$ls/false$9534$Of4HK)
                                                                                  ((case-lambda
                                                                                     ((g$t$9537$Of4HK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9538$Of4HK)
                                                                                          (if g$ls/false$9538$Of4HK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$9539$Of4HK)
                                                                                                 '#f))
                                                                                              g$ls/false$9538$Of4HK)
                                                                                            ((case-lambda
                                                                                               ((g$t$9540$Of4HK)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$9541$Of4HK)
                                                                                                    (if g$ls/false$9541$Of4HK
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7302$Of4HK
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$9532$Of4HK)))
                                                                                                        g$ls/false$9541$Of4HK)
                                                                                                      (g$syntax-violation$7302$Of4HK
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$9540$Of4HK))))
                                                                                                 (g$syntax-dispatch$7196$Of4HK
                                                                                                   g$t$9540$Of4HK
                                                                                                   '_))))
                                                                                             g$t$9537$Of4HK))))
                                                                                       (g$syntax-dispatch$7196$Of4HK
                                                                                         g$t$9537$Of4HK
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$9533$Of4HK))))
                                                                             (g$syntax-dispatch$7196$Of4HK
                                                                               g$t$9533$Of4HK
                                                                               '(_ any)))))
                                                                         g$e$9532$Of4HK))))
                                                                   (g$module-import$9491$Of4HK
                                                                     (case-lambda
                                                                       ((g$e$9515$Of4HK
                                                                          g$r$9516$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$t$9517$Of4HK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9518$Of4HK)
                                                                                (if (if g$ls/false$9518$Of4HK
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9519$Of4HK)
                                                                                             (g$id?$6918$Of4HK
                                                                                               g$id$9519$Of4HK)))
                                                                                          g$ls/false$9518$Of4HK))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9520$Of4HK)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$6938$Of4HK
                                                                                              g$id$9520$Of4HK
                                                                                              g$r$9516$Of4HK)))
                                                                                         (case-lambda
                                                                                           ((g$type$9524$Of4HK
                                                                                              g$value$9525$Of4HK
                                                                                              g$kwd$9526$Of4HK)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$9527$Of4HK
                                                                                                  g$value$9528$Of4HK
                                                                                                  g$type$9529$Of4HK)
                                                                                                ((case-lambda
                                                                                                   ((g$t$9530$Of4HK)
                                                                                                    (if (eqv?
                                                                                                          g$t$9530$Of4HK
                                                                                                          '$module)
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$9531$Of4HK)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7238$Of4HK
                                                                                                              g$iface$9531$Of4HK
                                                                                                              g$id$9520$Of4HK)
                                                                                                            (g$module-interface-exp-lab-vec$7234$Of4HK
                                                                                                              g$iface$9531$Of4HK))))
                                                                                                       g$value$9528$Of4HK)
                                                                                                      (g$syntax-violation$7302$Of4HK
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$9515$Of4HK))))
                                                                                                 g$type$9529$Of4HK)))
                                                                                             g$kwd$9526$Of4HK
                                                                                             g$value$9525$Of4HK
                                                                                             g$type$9524$Of4HK))))))
                                                                                    g$ls/false$9518$Of4HK)
                                                                                  (g$syntax-violation$7302$Of4HK
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$9517$Of4HK))))
                                                                             (g$syntax-dispatch$7196$Of4HK
                                                                               g$t$9517$Of4HK
                                                                               '(_ any)))))
                                                                         g$e$9515$Of4HK))))
                                                                   (g$library-import$9492$Of4HK
                                                                     (case-lambda
                                                                       ((g$e$9501$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$t$9502$Of4HK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9503$Of4HK)
                                                                                (if g$ls/false$9503$Of4HK
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$9504$Of4HK
                                                                                         g$imp*$9505$Of4HK)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7245$Of4HK
                                                                                              (g$syntax->datum$7305$Of4HK
                                                                                                g$imp*$9505$Of4HK))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$9508$Of4HK
                                                                                              g$subst-labels$9509$Of4HK)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$9510$Of4HK
                                                                                                  g$subst-names$9511$Of4HK)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$9512$Of4HK)
                                                                                                       (g$datum->stx$6901$Of4HK
                                                                                                         g$ctxt$9504$Of4HK
                                                                                                         g$name$9512$Of4HK)))
                                                                                                    g$subst-names$9511$Of4HK)
                                                                                                  g$subst-labels$9510$Of4HK)))
                                                                                             g$subst-labels$9509$Of4HK
                                                                                             g$subst-names$9508$Of4HK))))))
                                                                                    g$ls/false$9503$Of4HK)
                                                                                  ((case-lambda
                                                                                     ((g$t$9513$Of4HK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9514$Of4HK)
                                                                                          (if g$ls/false$9514$Of4HK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7302$Of4HK
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$9501$Of4HK)))
                                                                                              g$ls/false$9514$Of4HK)
                                                                                            (g$syntax-violation$7302$Of4HK
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9513$Of4HK))))
                                                                                       (g$syntax-dispatch$7196$Of4HK
                                                                                         g$t$9513$Of4HK
                                                                                         '_))))
                                                                                   g$t$9502$Of4HK))))
                                                                             (g$syntax-dispatch$7196$Of4HK
                                                                               g$t$9502$Of4HK
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$9501$Of4HK)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$9490$Of4HK
                                                                      g$e$9478$Of4HK)
                                                                  (g$module-import$9491$Of4HK
                                                                    g$e$9478$Of4HK
                                                                    g$r$9470$Of4HK)
                                                                  (g$library-import$9492$Of4HK
                                                                    g$e$9478$Of4HK))))
                                                             (case-lambda
                                                               ((g$id*$9495$Of4HK
                                                                  g$lab*$9496$Of4HK)
                                                                ((case-lambda
                                                                   ((g$lab*$9497$Of4HK
                                                                      g$id*$9498$Of4HK)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$9499$Of4HK
                                                                           g$lab$9500$Of4HK)
                                                                         (g$extend-rib!$6882$Of4HK
                                                                           g$rib$9476$Of4HK
                                                                           g$id$9499$Of4HK
                                                                           g$lab$9500$Of4HK)))
                                                                      g$id*$9498$Of4HK
                                                                      g$lab*$9497$Of4HK)))
                                                                 g$lab*$9496$Of4HK
                                                                 g$id*$9495$Of4HK))))))))
                                                     (g$chi-body*$7240$Of4HK
                                                       (cdr g$e*$9469$Of4HK)
                                                       g$r$9470$Of4HK
                                                       g$mr$9471$Of4HK
                                                       g$lex*$9472$Of4HK
                                                       g$rhs*$9473$Of4HK
                                                       g$mod**$9474$Of4HK
                                                       g$kwd*$9488$Of4HK
                                                       g$rib$9476$Of4HK
                                                       g$top?$9477$Of4HK))
                                                   (if g$top?$9477$Of4HK
                                                     (g$chi-body*$7240$Of4HK
                                                       (cdr g$e*$9469$Of4HK)
                                                       g$r$9470$Of4HK
                                                       g$mr$9471$Of4HK
                                                       (cons
                                                         (g$gen-lexical$6862$Of4HK
                                                           'dummy)
                                                         g$lex*$9472$Of4HK)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$9478$Of4HK)
                                                         g$rhs*$9473$Of4HK)
                                                       g$mod**$9474$Of4HK
                                                       g$kwd*$9488$Of4HK
                                                       g$rib$9476$Of4HK
                                                       g$top?$9477$Of4HK)
                                                     (values
                                                       g$e*$9469$Of4HK
                                                       g$r$9470$Of4HK
                                                       g$mr$9471$Of4HK
                                                       g$lex*$9472$Of4HK
                                                       g$rhs*$9473$Of4HK
                                                       g$mod**$9474$Of4HK
                                                       g$kwd*$9488$Of4HK))))))))))))))
                            g$type$9487$Of4HK)))
                        (if (g$id?$6918$Of4HK g$kwd$9485$Of4HK)
                          (cons g$kwd$9485$Of4HK g$kwd*$9475$Of4HK)
                          g$kwd*$9475$Of4HK))))
                    g$kwd$9484$Of4HK
                    g$value$9483$Of4HK
                    g$type$9482$Of4HK))))))
           (car g$e*$9469$Of4HK))))))
   (g$expand-transformer$7241$Of4HK
     g$expand-transformer$10673$Of4HK
     (case-lambda
       ((g$expr$9605$Of4HK g$r$9606$Of4HK)
        ((case-lambda
           ((g$rtc$9607$Of4HK)
            ((case-lambda
               ((g$expanded-rhs$9608$Of4HK)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$9609$Of4HK)
                        (case-lambda
                          ((g$x$9610$Of4HK)
                           (begin
                             (g$invoke-library$6733$Of4HK g$x$9610$Of4HK)
                             (g$mark-visit$9609$Of4HK g$x$9610$Of4HK))))))
                     (g$vis-collector$7249$Of4HK))
                    (g$rtc$9607$Of4HK))
                  g$expanded-rhs$9608$Of4HK)))
             ((case-lambda
                ((g$inv-collector$9615$Of4HK
                   g$vis-collector$9616$Of4HK
                   g$inv-collector$9617$Of4HK
                   g$vis-collector$9618$Of4HK)
                 ((case-lambda
                    ((g$swap$9619$Of4HK)
                     (dynamic-wind
                       g$swap$9619$Of4HK
                       (case-lambda
                         (()
                          (g$chi-expr$7214$Of4HK
                            g$expr$9605$Of4HK
                            g$r$9606$Of4HK
                            g$r$9606$Of4HK)))
                       g$swap$9619$Of4HK)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$9620$Of4HK)
                           (begin
                             (g$inv-collector$9615$Of4HK
                               g$inv-collector$9617$Of4HK)
                             (set! g$inv-collector$9617$Of4HK g$t$9620$Of4HK))))
                        (g$inv-collector$9615$Of4HK))
                       ((case-lambda
                          ((g$t$9621$Of4HK)
                           (begin
                             (g$vis-collector$9616$Of4HK
                               g$vis-collector$9618$Of4HK)
                             (set! g$vis-collector$9618$Of4HK g$t$9621$Of4HK))))
                        (g$vis-collector$9616$Of4HK))))))))
              g$inv-collector$7248$Of4HK
              g$vis-collector$7249$Of4HK
              g$rtc$9607$Of4HK
              (case-lambda ((g$x$9622$Of4HK) (values)))))))
         (g$make-collector$7247$Of4HK)))))
   (g$parse-exports$7242$Of4HK
     g$parse-exports$10674$Of4HK
     (case-lambda
       ((g$exp*$9623$Of4HK)
        (letrec* ((g$idsyn?$9624$Of4HK
                    (case-lambda
                      ((g$x$9639$Of4HK)
                       (symbol? (g$syntax->datum$7305$Of4HK g$x$9639$Of4HK))))))
          ((letrec ((g$f$9625$Of4HK
                      (case-lambda
                        ((g$exp*$9626$Of4HK g$int*$9627$Of4HK g$ext*$9628$Of4HK)
                         (if (null? g$exp*$9626$Of4HK)
                           (begin
                             ((case-lambda
                                ((g$id*$9629$Of4HK)
                                 (if (g$valid-bound-ids?$6923$Of4HK
                                       g$id*$9629$Of4HK)
                                   (void)
                                   (g$syntax-violation$7302$Of4HK
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7224$Of4HK
                                       g$id*$9629$Of4HK)))))
                              (map (case-lambda
                                     ((g$x$9630$Of4HK)
                                      (g$make-stx$6891$Of4HK
                                        g$x$9630$Of4HK
                                        g$top-mark*$6860$Of4HK
                                        '()
                                        '())))
                                   g$ext*$9628$Of4HK))
                             (values
                               (map g$syntax->datum$7305$Of4HK
                                    g$int*$9627$Of4HK)
                               (map g$syntax->datum$7305$Of4HK
                                    g$ext*$9628$Of4HK)))
                           ((case-lambda
                              ((g$t$9631$Of4HK)
                               ((case-lambda
                                  ((g$ls/false$9632$Of4HK)
                                   (if g$ls/false$9632$Of4HK
                                     (apply
                                       (case-lambda
                                         ((g$rename$9633$Of4HK
                                            g$i*$9634$Of4HK
                                            g$e*$9635$Of4HK)
                                          (begin
                                            (if (if (eq? (g$syntax->datum$7305$Of4HK
                                                           g$rename$9633$Of4HK)
                                                         'rename)
                                                  (if (g$for-all$5347$Of4HK
                                                        g$idsyn?$9624$Of4HK
                                                        g$i*$9634$Of4HK)
                                                    (begin
                                                      '#f
                                                      (g$for-all$5347$Of4HK
                                                        g$idsyn?$9624$Of4HK
                                                        g$e*$9635$Of4HK))
                                                    '#f)
                                                  '#f)
                                              (void)
                                              (g$syntax-violation$7302$Of4HK
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$9626$Of4HK)))
                                            (g$f$9625$Of4HK
                                              (cdr g$exp*$9626$Of4HK)
                                              (append
                                                g$i*$9634$Of4HK
                                                g$int*$9627$Of4HK)
                                              (append
                                                g$e*$9635$Of4HK
                                                g$ext*$9628$Of4HK)))))
                                       g$ls/false$9632$Of4HK)
                                     ((case-lambda
                                        ((g$t$9636$Of4HK)
                                         ((case-lambda
                                            ((g$ls/false$9637$Of4HK)
                                             (if g$ls/false$9637$Of4HK
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$9638$Of4HK)
                                                    (begin
                                                      (if (g$idsyn?$9624$Of4HK
                                                            g$ie$9638$Of4HK)
                                                        (void)
                                                        (g$syntax-violation$7302$Of4HK
                                                          'export
                                                          '"invalid export"
                                                          g$ie$9638$Of4HK))
                                                      (g$f$9625$Of4HK
                                                        (cdr g$exp*$9626$Of4HK)
                                                        (cons
                                                          g$ie$9638$Of4HK
                                                          g$int*$9627$Of4HK)
                                                        (cons
                                                          g$ie$9638$Of4HK
                                                          g$ext*$9628$Of4HK)))))
                                                 g$ls/false$9637$Of4HK)
                                               (g$syntax-violation$7302$Of4HK
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9636$Of4HK))))
                                          (g$syntax-dispatch$7196$Of4HK
                                            g$t$9636$Of4HK
                                            'any))))
                                      g$t$9631$Of4HK))))
                                (g$syntax-dispatch$7196$Of4HK
                                  g$t$9631$Of4HK
                                  '(any . #(each (any any)))))))
                            (car g$exp*$9626$Of4HK)))))))
             g$f$9625$Of4HK)
           g$exp*$9623$Of4HK
           '()
           '())))))
   (g$parse-library-name$7243$Of4HK
     g$parse-library-name$10675$Of4HK
     (case-lambda
       ((g$spec$9640$Of4HK)
        (letrec* ((g$parse$9641$Of4HK
                    (case-lambda
                      ((g$x$9648$Of4HK)
                       ((case-lambda
                          ((g$t$9649$Of4HK)
                           ((case-lambda
                              ((g$ls/false$9650$Of4HK)
                               (if (if g$ls/false$9650$Of4HK
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$9651$Of4HK)
                                            (g$for-all$5347$Of4HK
                                              (case-lambda
                                                ((g$x$9652$Of4HK)
                                                 ((case-lambda
                                                    ((g$x$9653$Of4HK)
                                                     (if (integer?
                                                           g$x$9653$Of4HK)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$9653$Of4HK))
                                                       '#f)))
                                                  (g$syntax->datum$7305$Of4HK
                                                    g$x$9652$Of4HK))))
                                              g$v*$9651$Of4HK)))
                                         g$ls/false$9650$Of4HK))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$9654$Of4HK)
                                      (values
                                        '()
                                        (map g$syntax->datum$7305$Of4HK
                                             g$v*$9654$Of4HK))))
                                   g$ls/false$9650$Of4HK)
                                 ((case-lambda
                                    ((g$t$9655$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$9656$Of4HK)
                                         (if (if g$ls/false$9656$Of4HK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$9657$Of4HK
                                                        g$rest$9658$Of4HK)
                                                      (symbol?
                                                        (g$syntax->datum$7305$Of4HK
                                                          g$x$9657$Of4HK))))
                                                   g$ls/false$9656$Of4HK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$9659$Of4HK
                                                  g$rest$9660$Of4HK)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$9641$Of4HK
                                                       g$rest$9660$Of4HK)))
                                                  (case-lambda
                                                    ((g$x*$9663$Of4HK
                                                       g$v*$9664$Of4HK)
                                                     ((case-lambda
                                                        ((g$v*$9665$Of4HK
                                                           g$x*$9666$Of4HK)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7305$Of4HK
                                                               g$x$9659$Of4HK)
                                                             g$x*$9666$Of4HK)
                                                           g$v*$9665$Of4HK)))
                                                      g$v*$9664$Of4HK
                                                      g$x*$9663$Of4HK))))))
                                             g$ls/false$9656$Of4HK)
                                           ((case-lambda
                                              ((g$t$9667$Of4HK)
                                               ((case-lambda
                                                  ((g$ls/false$9668$Of4HK)
                                                   (if g$ls/false$9668$Of4HK
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$9668$Of4HK)
                                                     ((case-lambda
                                                        ((g$t$9669$Of4HK)
                                                         ((case-lambda
                                                            ((g$ls/false$9670$Of4HK)
                                                             (if g$ls/false$9670$Of4HK
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7302$Of4HK
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$9640$Of4HK)))
                                                                 g$ls/false$9670$Of4HK)
                                                               (g$syntax-violation$7302$Of4HK
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$9669$Of4HK))))
                                                          (g$syntax-dispatch$7196$Of4HK
                                                            g$t$9669$Of4HK
                                                            '_))))
                                                      g$t$9667$Of4HK))))
                                                (g$syntax-dispatch$7196$Of4HK
                                                  g$t$9667$Of4HK
                                                  '()))))
                                            g$t$9655$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$9655$Of4HK
                                        '(any . any)))))
                                  g$t$9649$Of4HK))))
                            (g$syntax-dispatch$7196$Of4HK
                              g$t$9649$Of4HK
                              '(each-any)))))
                        g$x$9648$Of4HK)))))
          (call-with-values
            (case-lambda (() (g$parse$9641$Of4HK g$spec$9640$Of4HK)))
            (case-lambda
              ((g$name*$9644$Of4HK g$ver*$9645$Of4HK)
               ((case-lambda
                  ((g$ver*$9646$Of4HK g$name*$9647$Of4HK)
                   (begin
                     (if (null? g$name*$9647$Of4HK)
                       (g$syntax-violation$7302$Of4HK
                         '#f
                         '"empty library name"
                         g$spec$9640$Of4HK)
                       (void))
                     (values g$name*$9647$Of4HK g$ver*$9646$Of4HK))))
                g$ver*$9645$Of4HK
                g$name*$9644$Of4HK))))))))
   (g$parse-library$7244$Of4HK
     g$parse-library$10676$Of4HK
     (case-lambda
       ((g$e$9671$Of4HK)
        ((case-lambda
           ((g$t$9672$Of4HK)
            ((case-lambda
               ((g$ls/false$9673$Of4HK)
                (if (if g$ls/false$9673$Of4HK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$9674$Of4HK
                               g$name*$9675$Of4HK
                               g$export$9676$Of4HK
                               g$exp*$9677$Of4HK
                               g$import$9678$Of4HK
                               g$imp*$9679$Of4HK
                               g$b*$9680$Of4HK)
                             (if (eq? (g$syntax->datum$7305$Of4HK
                                        g$export$9676$Of4HK)
                                      'export)
                               (if (eq? (g$syntax->datum$7305$Of4HK
                                          g$import$9678$Of4HK)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7305$Of4HK
                                          g$library$9674$Of4HK)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$9673$Of4HK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$9681$Of4HK
                         g$name*$9682$Of4HK
                         g$export$9683$Of4HK
                         g$exp*$9684$Of4HK
                         g$import$9685$Of4HK
                         g$imp*$9686$Of4HK
                         g$b*$9687$Of4HK)
                       (values
                         g$name*$9682$Of4HK
                         g$exp*$9684$Of4HK
                         g$imp*$9686$Of4HK
                         g$b*$9687$Of4HK)))
                    g$ls/false$9673$Of4HK)
                  ((case-lambda
                     ((g$t$9688$Of4HK)
                      ((case-lambda
                         ((g$ls/false$9689$Of4HK)
                          (if g$ls/false$9689$Of4HK
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7302$Of4HK
                                   '#f
                                   '"malformed library"
                                   g$e$9671$Of4HK)))
                              g$ls/false$9689$Of4HK)
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"invalid syntax"
                              g$t$9688$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK g$t$9688$Of4HK '_))))
                   g$t$9672$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$9672$Of4HK
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$9671$Of4HK))))
   (g$parse-import-spec*$7245$Of4HK
     g$parse-import-spec*$10677$Of4HK
     (case-lambda
       ((g$imp*$9690$Of4HK)
        (letrec* ((g$idsyn?$9691$Of4HK
                    (case-lambda
                      ((g$x$9950$Of4HK)
                       (symbol? (g$syntax->datum$7305$Of4HK g$x$9950$Of4HK)))))
                  (g$dup-error$9692$Of4HK
                    (case-lambda
                      ((g$name$9949$Of4HK)
                       (g$syntax-violation$7302$Of4HK
                         'import
                         '"two imports with different bindings"
                         g$name$9949$Of4HK))))
                  (g$merge-substs$9693$Of4HK
                    (case-lambda
                      ((g$s$9940$Of4HK g$subst$9941$Of4HK)
                       (letrec* ((g$insert-to-subst$9942$Of4HK
                                   (case-lambda
                                     ((g$a$9943$Of4HK g$subst$9944$Of4HK)
                                      ((case-lambda
                                         ((g$name$9945$Of4HK g$label$9946$Of4HK)
                                          ((case-lambda
                                             ((g$t$9947$Of4HK)
                                              (if g$t$9947$Of4HK
                                                ((case-lambda
                                                   ((g$x$9948$Of4HK)
                                                    (if (eq? (cdr g$x$9948$Of4HK)
                                                             g$label$9946$Of4HK)
                                                      g$subst$9944$Of4HK
                                                      (g$dup-error$9692$Of4HK
                                                        g$name$9945$Of4HK))))
                                                 g$t$9947$Of4HK)
                                                (cons
                                                  g$a$9943$Of4HK
                                                  g$subst$9944$Of4HK))))
                                           (assq
                                             g$name$9945$Of4HK
                                             g$subst$9944$Of4HK))))
                                       (car g$a$9943$Of4HK)
                                       (cdr g$a$9943$Of4HK))))))
                         (if (null? g$s$9940$Of4HK)
                           g$subst$9941$Of4HK
                           (g$insert-to-subst$9942$Of4HK
                             (car g$s$9940$Of4HK)
                             (g$merge-substs$9693$Of4HK
                               (cdr g$s$9940$Of4HK)
                               g$subst$9941$Of4HK)))))))
                  (g$exclude*$9694$Of4HK
                    (case-lambda
                      ((g$sym*$9916$Of4HK g$subst$9917$Of4HK)
                       (letrec* ((g$exclude$9918$Of4HK
                                   (case-lambda
                                     ((g$sym$9931$Of4HK g$subst$9932$Of4HK)
                                      (if (null? g$subst$9932$Of4HK)
                                        (g$syntax-violation$7302$Of4HK
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$9931$Of4HK)
                                        (if (eq? g$sym$9931$Of4HK
                                                 (g$caar$4877$Of4HK
                                                   g$subst$9932$Of4HK))
                                          (values
                                            (g$cdar$4879$Of4HK
                                              g$subst$9932$Of4HK)
                                            (cdr g$subst$9932$Of4HK))
                                          ((case-lambda
                                             ((g$a$9933$Of4HK)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$9918$Of4HK
                                                     g$sym$9931$Of4HK
                                                     (cdr g$subst$9932$Of4HK))))
                                                (case-lambda
                                                  ((g$old$9936$Of4HK
                                                     g$subst$9937$Of4HK)
                                                   ((case-lambda
                                                      ((g$subst$9938$Of4HK
                                                         g$old$9939$Of4HK)
                                                       (values
                                                         g$old$9939$Of4HK
                                                         (cons
                                                           g$a$9933$Of4HK
                                                           g$subst$9938$Of4HK))))
                                                    g$subst$9937$Of4HK
                                                    g$old$9936$Of4HK))))))
                                           (car g$subst$9932$Of4HK))))))))
                         (if (null? g$sym*$9916$Of4HK)
                           (values '() g$subst$9917$Of4HK)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$9918$Of4HK
                                  (car g$sym*$9916$Of4HK)
                                  g$subst$9917$Of4HK)))
                             (case-lambda
                               ((g$old$9921$Of4HK g$subst$9922$Of4HK)
                                ((case-lambda
                                   ((g$subst$9923$Of4HK g$old$9924$Of4HK)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$9694$Of4HK
                                           (cdr g$sym*$9916$Of4HK)
                                           g$subst$9923$Of4HK)))
                                      (case-lambda
                                        ((g$old*$9927$Of4HK g$subst$9928$Of4HK)
                                         ((case-lambda
                                            ((g$subst$9929$Of4HK
                                               g$old*$9930$Of4HK)
                                             (values
                                               (cons
                                                 g$old$9924$Of4HK
                                                 g$old*$9930$Of4HK)
                                               g$subst$9929$Of4HK)))
                                          g$subst$9928$Of4HK
                                          g$old*$9927$Of4HK))))))
                                 g$subst$9922$Of4HK
                                 g$old$9921$Of4HK)))))))))
                  (g$find*$9695$Of4HK
                    (case-lambda
                      ((g$sym*$9912$Of4HK g$subst$9913$Of4HK)
                       (map (case-lambda
                              ((g$x$9914$Of4HK)
                               ((case-lambda
                                  ((g$t$9915$Of4HK)
                                   (if g$t$9915$Of4HK
                                     (cdr g$t$9915$Of4HK)
                                     (g$syntax-violation$7302$Of4HK
                                       'import
                                       '"cannot find identifier"
                                       g$x$9914$Of4HK))))
                                (assq g$x$9914$Of4HK g$subst$9913$Of4HK))))
                            g$sym*$9912$Of4HK))))
                  (g$rem*$9696$Of4HK
                    (case-lambda
                      ((g$sym*$9908$Of4HK g$subst$9909$Of4HK)
                       ((letrec ((g$f$9910$Of4HK
                                   (case-lambda
                                     ((g$subst$9911$Of4HK)
                                      (if (null? g$subst$9911$Of4HK)
                                        '()
                                        (if (memq
                                              (g$caar$4877$Of4HK
                                                g$subst$9911$Of4HK)
                                              g$sym*$9908$Of4HK)
                                          (g$f$9910$Of4HK
                                            (cdr g$subst$9911$Of4HK))
                                          (cons
                                            (car g$subst$9911$Of4HK)
                                            (g$f$9910$Of4HK
                                              (cdr g$subst$9911$Of4HK)))))))))
                          g$f$9910$Of4HK)
                        g$subst$9909$Of4HK))))
                  (g$remove-dups$9697$Of4HK
                    (case-lambda
                      ((g$ls$9907$Of4HK)
                       (if (null? g$ls$9907$Of4HK)
                         '()
                         (if (memq (car g$ls$9907$Of4HK) (cdr g$ls$9907$Of4HK))
                           (g$remove-dups$9697$Of4HK (cdr g$ls$9907$Of4HK))
                           (cons
                             (car g$ls$9907$Of4HK)
                             (g$remove-dups$9697$Of4HK
                               (cdr g$ls$9907$Of4HK))))))))
                  (g$parse-library-name$9698$Of4HK
                    (case-lambda
                      ((g$spec$9792$Of4HK)
                       (letrec* ((g$subversion?$9793$Of4HK
                                   (case-lambda
                                     ((g$x$9906$Of4HK)
                                      (if (integer? g$x$9906$Of4HK)
                                        (if (exact? g$x$9906$Of4HK)
                                          (begin '#f (>= g$x$9906$Of4HK '0))
                                          '#f)
                                        '#f))))
                                 (g$subversion-pred$9794$Of4HK
                                   (case-lambda
                                     ((g$x*$9858$Of4HK)
                                      ((case-lambda
                                         ((g$t$9859$Of4HK)
                                          ((case-lambda
                                             ((g$ls/false$9860$Of4HK)
                                              (if (if g$ls/false$9860$Of4HK
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$9861$Of4HK)
                                                           (g$subversion?$9793$Of4HK
                                                             (g$syntax->datum$7305$Of4HK
                                                               g$n$9861$Of4HK))))
                                                        g$ls/false$9860$Of4HK))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$9862$Of4HK)
                                                     (case-lambda
                                                       ((g$x$9863$Of4HK)
                                                        (= g$x$9863$Of4HK
                                                           (g$syntax->datum$7305$Of4HK
                                                             g$n$9862$Of4HK))))))
                                                  g$ls/false$9860$Of4HK)
                                                ((case-lambda
                                                   ((g$t$9864$Of4HK)
                                                    ((case-lambda
                                                       ((g$ls/false$9865$Of4HK)
                                                        (if (if g$ls/false$9865$Of4HK
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$9866$Of4HK
                                                                       g$sub*$9867$Of4HK)
                                                                     (eq? (g$syntax->datum$7305$Of4HK
                                                                            g$p?$9866$Of4HK)
                                                                          'and)))
                                                                  g$ls/false$9865$Of4HK))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$9868$Of4HK
                                                                 g$sub*$9869$Of4HK)
                                                               ((case-lambda
                                                                  ((g$p*$9870$Of4HK)
                                                                   (case-lambda
                                                                     ((g$x$9871$Of4HK)
                                                                      (g$for-all$5347$Of4HK
                                                                        (case-lambda
                                                                          ((g$p$9872$Of4HK)
                                                                           (g$p$9872$Of4HK
                                                                             g$x$9871$Of4HK)))
                                                                        g$p*$9870$Of4HK)))))
                                                                (map g$subversion-pred$9794$Of4HK
                                                                     g$sub*$9869$Of4HK))))
                                                            g$ls/false$9865$Of4HK)
                                                          ((case-lambda
                                                             ((g$t$9873$Of4HK)
                                                              ((case-lambda
                                                                 ((g$ls/false$9874$Of4HK)
                                                                  (if (if g$ls/false$9874$Of4HK
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$9875$Of4HK
                                                                                 g$sub*$9876$Of4HK)
                                                                               (eq? (g$syntax->datum$7305$Of4HK
                                                                                      g$p?$9875$Of4HK)
                                                                                    'or)))
                                                                            g$ls/false$9874$Of4HK))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$9877$Of4HK
                                                                           g$sub*$9878$Of4HK)
                                                                         ((case-lambda
                                                                            ((g$p*$9879$Of4HK)
                                                                             (case-lambda
                                                                               ((g$x$9880$Of4HK)
                                                                                (g$exists$5348$Of4HK
                                                                                  (case-lambda
                                                                                    ((g$p$9881$Of4HK)
                                                                                     (g$p$9881$Of4HK
                                                                                       g$x$9880$Of4HK)))
                                                                                  g$p*$9879$Of4HK)))))
                                                                          (map g$subversion-pred$9794$Of4HK
                                                                               g$sub*$9878$Of4HK))))
                                                                      g$ls/false$9874$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$t$9882$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9883$Of4HK)
                                                                            (if (if g$ls/false$9883$Of4HK
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$9884$Of4HK
                                                                                           g$sub$9885$Of4HK)
                                                                                         (eq? (g$syntax->datum$7305$Of4HK
                                                                                                g$p?$9884$Of4HK)
                                                                                              'not)))
                                                                                      g$ls/false$9883$Of4HK))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$9886$Of4HK
                                                                                     g$sub$9887$Of4HK)
                                                                                   ((case-lambda
                                                                                      ((g$p$9888$Of4HK)
                                                                                       (case-lambda
                                                                                         ((g$x$9889$Of4HK)
                                                                                          (not (g$p$9888$Of4HK
                                                                                                 g$x$9889$Of4HK))))))
                                                                                    (g$subversion-pred$9794$Of4HK
                                                                                      g$sub$9887$Of4HK))))
                                                                                g$ls/false$9883$Of4HK)
                                                                              ((case-lambda
                                                                                 ((g$t$9890$Of4HK)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9891$Of4HK)
                                                                                      (if (if g$ls/false$9891$Of4HK
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$9892$Of4HK
                                                                                                     g$n$9893$Of4HK)
                                                                                                   (if (eq? (g$syntax->datum$7305$Of4HK
                                                                                                              g$p?$9892$Of4HK)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$9793$Of4HK
                                                                                                         (g$syntax->datum$7305$Of4HK
                                                                                                           g$n$9893$Of4HK)))
                                                                                                     '#f)))
                                                                                                g$ls/false$9891$Of4HK))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$9894$Of4HK
                                                                                               g$n$9895$Of4HK)
                                                                                             (case-lambda
                                                                                               ((g$x$9896$Of4HK)
                                                                                                (<= g$x$9896$Of4HK
                                                                                                    (g$syntax->datum$7305$Of4HK
                                                                                                      g$n$9895$Of4HK))))))
                                                                                          g$ls/false$9891$Of4HK)
                                                                                        ((case-lambda
                                                                                           ((g$t$9897$Of4HK)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9898$Of4HK)
                                                                                                (if (if g$ls/false$9898$Of4HK
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$9899$Of4HK
                                                                                                               g$n$9900$Of4HK)
                                                                                                             (if (eq? (g$syntax->datum$7305$Of4HK
                                                                                                                        g$p?$9899$Of4HK)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$9793$Of4HK
                                                                                                                   g$n$9900$Of4HK))
                                                                                                               '#f)))
                                                                                                          g$ls/false$9898$Of4HK))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$9901$Of4HK
                                                                                                         g$n$9902$Of4HK)
                                                                                                       (case-lambda
                                                                                                         ((g$x$9903$Of4HK)
                                                                                                          (>= g$x$9903$Of4HK
                                                                                                              (g$syntax->datum$7305$Of4HK
                                                                                                                g$n$9902$Of4HK))))))
                                                                                                    g$ls/false$9898$Of4HK)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9904$Of4HK)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$9905$Of4HK)
                                                                                                          (if g$ls/false$9905$Of4HK
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7302$Of4HK
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$9792$Of4HK
                                                                                                                   g$x*$9858$Of4HK)))
                                                                                                              g$ls/false$9905$Of4HK)
                                                                                                            (g$syntax-violation$7302$Of4HK
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$9904$Of4HK))))
                                                                                                       (g$syntax-dispatch$7196$Of4HK
                                                                                                         g$t$9904$Of4HK
                                                                                                         '_))))
                                                                                                   g$t$9897$Of4HK))))
                                                                                             (g$syntax-dispatch$7196$Of4HK
                                                                                               g$t$9897$Of4HK
                                                                                               '(any any)))))
                                                                                         g$t$9890$Of4HK))))
                                                                                   (g$syntax-dispatch$7196$Of4HK
                                                                                     g$t$9890$Of4HK
                                                                                     '(any any)))))
                                                                               g$t$9882$Of4HK))))
                                                                         (g$syntax-dispatch$7196$Of4HK
                                                                           g$t$9882$Of4HK
                                                                           '(any any)))))
                                                                     g$t$9873$Of4HK))))
                                                               (g$syntax-dispatch$7196$Of4HK
                                                                 g$t$9873$Of4HK
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$9864$Of4HK))))
                                                     (g$syntax-dispatch$7196$Of4HK
                                                       g$t$9864$Of4HK
                                                       '(any . each-any)))))
                                                 g$t$9859$Of4HK))))
                                           (g$syntax-dispatch$7196$Of4HK
                                             g$t$9859$Of4HK
                                             'any))))
                                       g$x*$9858$Of4HK))))
                                 (g$version-pred$9795$Of4HK
                                   (case-lambda
                                     ((g$x*$9818$Of4HK)
                                      ((case-lambda
                                         ((g$t$9819$Of4HK)
                                          ((case-lambda
                                             ((g$ls/false$9820$Of4HK)
                                              (if g$ls/false$9820$Of4HK
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$9821$Of4HK) '#t))))
                                                  g$ls/false$9820$Of4HK)
                                                ((case-lambda
                                                   ((g$t$9822$Of4HK)
                                                    ((case-lambda
                                                       ((g$ls/false$9823$Of4HK)
                                                        (if (if g$ls/false$9823$Of4HK
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$9824$Of4HK
                                                                       g$ver*$9825$Of4HK)
                                                                     (eq? (g$syntax->datum$7305$Of4HK
                                                                            g$c$9824$Of4HK)
                                                                          'and)))
                                                                  g$ls/false$9823$Of4HK))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$9826$Of4HK
                                                                 g$ver*$9827$Of4HK)
                                                               ((case-lambda
                                                                  ((g$p*$9828$Of4HK)
                                                                   (case-lambda
                                                                     ((g$x$9829$Of4HK)
                                                                      (g$for-all$5347$Of4HK
                                                                        (case-lambda
                                                                          ((g$p$9830$Of4HK)
                                                                           (g$p$9830$Of4HK
                                                                             g$x$9829$Of4HK)))
                                                                        g$p*$9828$Of4HK)))))
                                                                (map g$version-pred$9795$Of4HK
                                                                     g$ver*$9827$Of4HK))))
                                                            g$ls/false$9823$Of4HK)
                                                          ((case-lambda
                                                             ((g$t$9831$Of4HK)
                                                              ((case-lambda
                                                                 ((g$ls/false$9832$Of4HK)
                                                                  (if (if g$ls/false$9832$Of4HK
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$9833$Of4HK
                                                                                 g$ver*$9834$Of4HK)
                                                                               (eq? (g$syntax->datum$7305$Of4HK
                                                                                      g$c$9833$Of4HK)
                                                                                    'or)))
                                                                            g$ls/false$9832$Of4HK))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$9835$Of4HK
                                                                           g$ver*$9836$Of4HK)
                                                                         ((case-lambda
                                                                            ((g$p*$9837$Of4HK)
                                                                             (case-lambda
                                                                               ((g$x$9838$Of4HK)
                                                                                (g$exists$5348$Of4HK
                                                                                  (case-lambda
                                                                                    ((g$p$9839$Of4HK)
                                                                                     (g$p$9839$Of4HK
                                                                                       g$x$9838$Of4HK)))
                                                                                  g$p*$9837$Of4HK)))))
                                                                          (map g$version-pred$9795$Of4HK
                                                                               g$ver*$9836$Of4HK))))
                                                                      g$ls/false$9832$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$t$9840$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9841$Of4HK)
                                                                            (if (if g$ls/false$9841$Of4HK
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$9842$Of4HK
                                                                                           g$ver$9843$Of4HK)
                                                                                         (eq? (g$syntax->datum$7305$Of4HK
                                                                                                g$c$9842$Of4HK)
                                                                                              'not)))
                                                                                      g$ls/false$9841$Of4HK))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$9844$Of4HK
                                                                                     g$ver$9845$Of4HK)
                                                                                   ((case-lambda
                                                                                      ((g$p$9846$Of4HK)
                                                                                       (case-lambda
                                                                                         ((g$x$9847$Of4HK)
                                                                                          (not (g$p$9846$Of4HK
                                                                                                 g$x$9847$Of4HK))))))
                                                                                    (g$version-pred$9795$Of4HK
                                                                                      g$ver$9845$Of4HK))))
                                                                                g$ls/false$9841$Of4HK)
                                                                              ((case-lambda
                                                                                 ((g$t$9848$Of4HK)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9849$Of4HK)
                                                                                      (if g$ls/false$9849$Of4HK
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$9850$Of4HK)
                                                                                             ((case-lambda
                                                                                                ((g$p*$9851$Of4HK)
                                                                                                 (case-lambda
                                                                                                   ((g$x$9852$Of4HK)
                                                                                                    ((letrec ((g$f$9853$Of4HK
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$9854$Of4HK
                                                                                                                     g$x$9855$Of4HK)
                                                                                                                   (if (null?
                                                                                                                         g$p*$9854$Of4HK)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$9855$Of4HK)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$9854$Of4HK)
                                                                                                                            (car g$x$9855$Of4HK))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$9853$Of4HK
                                                                                                                             (cdr g$p*$9854$Of4HK)
                                                                                                                             (cdr g$x$9855$Of4HK)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$9853$Of4HK)
                                                                                                     g$p*$9851$Of4HK
                                                                                                     g$x$9852$Of4HK)))))
                                                                                              (map g$subversion-pred$9794$Of4HK
                                                                                                   g$sub*$9850$Of4HK))))
                                                                                          g$ls/false$9849$Of4HK)
                                                                                        ((case-lambda
                                                                                           ((g$t$9856$Of4HK)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9857$Of4HK)
                                                                                                (if g$ls/false$9857$Of4HK
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7302$Of4HK
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$9792$Of4HK
                                                                                                         g$x*$9818$Of4HK)))
                                                                                                    g$ls/false$9857$Of4HK)
                                                                                                  (g$syntax-violation$7302$Of4HK
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$9856$Of4HK))))
                                                                                             (g$syntax-dispatch$7196$Of4HK
                                                                                               g$t$9856$Of4HK
                                                                                               '_))))
                                                                                         g$t$9848$Of4HK))))
                                                                                   (g$syntax-dispatch$7196$Of4HK
                                                                                     g$t$9848$Of4HK
                                                                                     'each-any))))
                                                                               g$t$9840$Of4HK))))
                                                                         (g$syntax-dispatch$7196$Of4HK
                                                                           g$t$9840$Of4HK
                                                                           '(any any)))))
                                                                     g$t$9831$Of4HK))))
                                                               (g$syntax-dispatch$7196$Of4HK
                                                                 g$t$9831$Of4HK
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$9822$Of4HK))))
                                                     (g$syntax-dispatch$7196$Of4HK
                                                       g$t$9822$Of4HK
                                                       '(any . each-any)))))
                                                 g$t$9819$Of4HK))))
                                           (g$syntax-dispatch$7196$Of4HK
                                             g$t$9819$Of4HK
                                             '()))))
                                       g$x*$9818$Of4HK)))))
                         ((letrec ((g$f$9796$Of4HK
                                     (case-lambda
                                       ((g$x$9797$Of4HK)
                                        ((case-lambda
                                           ((g$t$9798$Of4HK)
                                            ((case-lambda
                                               ((g$ls/false$9799$Of4HK)
                                                (if g$ls/false$9799$Of4HK
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$9800$Of4HK)
                                                       (values
                                                         '()
                                                         (g$version-pred$9795$Of4HK
                                                           g$version-spec*$9800$Of4HK))))
                                                    g$ls/false$9799$Of4HK)
                                                  ((case-lambda
                                                     ((g$t$9801$Of4HK)
                                                      ((case-lambda
                                                         ((g$ls/false$9802$Of4HK)
                                                          (if (if g$ls/false$9802$Of4HK
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$9803$Of4HK
                                                                         g$x*$9804$Of4HK)
                                                                       (g$idsyn?$9691$Of4HK
                                                                         g$x$9803$Of4HK)))
                                                                    g$ls/false$9802$Of4HK))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$9805$Of4HK
                                                                   g$x*$9806$Of4HK)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$9796$Of4HK
                                                                        g$x*$9806$Of4HK)))
                                                                   (case-lambda
                                                                     ((g$name$9809$Of4HK
                                                                        g$pred$9810$Of4HK)
                                                                      ((case-lambda
                                                                         ((g$pred$9811$Of4HK
                                                                            g$name$9812$Of4HK)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7305$Of4HK
                                                                                g$x$9805$Of4HK)
                                                                              g$name$9812$Of4HK)
                                                                            g$pred$9811$Of4HK)))
                                                                       g$pred$9810$Of4HK
                                                                       g$name$9809$Of4HK))))))
                                                              g$ls/false$9802$Of4HK)
                                                            ((case-lambda
                                                               ((g$t$9813$Of4HK)
                                                                ((case-lambda
                                                                   ((g$ls/false$9814$Of4HK)
                                                                    (if g$ls/false$9814$Of4HK
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$9815$Of4HK)
                                                                                '#t)))))
                                                                        g$ls/false$9814$Of4HK)
                                                                      ((case-lambda
                                                                         ((g$t$9816$Of4HK)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9817$Of4HK)
                                                                              (if g$ls/false$9817$Of4HK
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7302$Of4HK
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$9792$Of4HK)))
                                                                                  g$ls/false$9817$Of4HK)
                                                                                (g$syntax-violation$7302$Of4HK
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9816$Of4HK))))
                                                                           (g$syntax-dispatch$7196$Of4HK
                                                                             g$t$9816$Of4HK
                                                                             '_))))
                                                                       g$t$9813$Of4HK))))
                                                                 (g$syntax-dispatch$7196$Of4HK
                                                                   g$t$9813$Of4HK
                                                                   '()))))
                                                             g$t$9801$Of4HK))))
                                                       (g$syntax-dispatch$7196$Of4HK
                                                         g$t$9801$Of4HK
                                                         '(any . any)))))
                                                   g$t$9798$Of4HK))))
                                             (g$syntax-dispatch$7196$Of4HK
                                               g$t$9798$Of4HK
                                               '(each-any)))))
                                         g$x$9797$Of4HK)))))
                            g$f$9796$Of4HK)
                          g$spec$9792$Of4HK)))))
                  (g$import-library$9699$Of4HK
                    (case-lambda
                      ((g$spec*$9784$Of4HK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$9698$Of4HK
                              g$spec*$9784$Of4HK)))
                         (case-lambda
                           ((g$name$9787$Of4HK g$pred$9788$Of4HK)
                            ((case-lambda
                               ((g$pred$9789$Of4HK g$name$9790$Of4HK)
                                (begin
                                  (if (null? g$name$9790$Of4HK)
                                    (g$syntax-violation$7302$Of4HK
                                      'import
                                      '"empty library name"
                                      g$spec*$9784$Of4HK)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$9791$Of4HK)
                                      (begin
                                        (if g$lib$9791$Of4HK
                                          (void)
                                          (g$syntax-violation$7302$Of4HK
                                            'import
                                            '"cannot find library with required name"
                                            g$name$9790$Of4HK))
                                        (if (g$pred$9789$Of4HK
                                              (g$library-version$6686$Of4HK
                                                g$lib$9791$Of4HK))
                                          (void)
                                          (g$syntax-violation$7302$Of4HK
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$9784$Of4HK
                                            g$lib$9791$Of4HK))
                                        ((g$imp-collector$7250$Of4HK)
                                         g$lib$9791$Of4HK)
                                        (g$library-subst$6690$Of4HK
                                          g$lib$9791$Of4HK))))
                                   (g$find-library-by-name$6726$Of4HK
                                     g$name$9790$Of4HK)))))
                             g$pred$9788$Of4HK
                             g$name$9787$Of4HK)))))))
                  (g$get-import$9700$Of4HK
                    (case-lambda
                      ((g$spec$9713$Of4HK)
                       ((case-lambda
                          ((g$t$9714$Of4HK)
                           ((case-lambda
                              ((g$ls/false$9715$Of4HK)
                               (if (if g$ls/false$9715$Of4HK
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$9716$Of4HK g$x*$9717$Of4HK)
                                            (not (memq
                                                   (g$syntax->datum$7305$Of4HK
                                                     g$x$9716$Of4HK)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$9715$Of4HK))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$9718$Of4HK g$x*$9719$Of4HK)
                                      (g$import-library$9699$Of4HK
                                        (cons g$x$9718$Of4HK g$x*$9719$Of4HK))))
                                   g$ls/false$9715$Of4HK)
                                 ((case-lambda
                                    ((g$t$9720$Of4HK)
                                     ((case-lambda
                                        ((g$ls/false$9721$Of4HK)
                                         (if (if g$ls/false$9721$Of4HK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$9722$Of4HK
                                                        g$isp$9723$Of4HK
                                                        g$old*$9724$Of4HK
                                                        g$new*$9725$Of4HK)
                                                      (if (eq? (g$syntax->datum$7305$Of4HK
                                                                 g$rename$9722$Of4HK)
                                                               'rename)
                                                        (if (g$for-all$5347$Of4HK
                                                              g$idsyn?$9691$Of4HK
                                                              g$old*$9724$Of4HK)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5347$Of4HK
                                                              g$idsyn?$9691$Of4HK
                                                              g$new*$9725$Of4HK))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$9721$Of4HK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$9726$Of4HK
                                                  g$isp$9727$Of4HK
                                                  g$old*$9728$Of4HK
                                                  g$new*$9729$Of4HK)
                                                ((case-lambda
                                                   ((g$subst$9730$Of4HK
                                                      g$old*$9731$Of4HK
                                                      g$new*$9732$Of4HK)
                                                    ((case-lambda
                                                       ((g$old-label*$9733$Of4HK)
                                                        ((case-lambda
                                                           ((g$subst$9734$Of4HK)
                                                            (g$merge-substs$9693$Of4HK
                                                              (map cons
                                                                   g$new*$9732$Of4HK
                                                                   g$old-label*$9733$Of4HK)
                                                              g$subst$9734$Of4HK)))
                                                         (g$rem*$9696$Of4HK
                                                           g$old*$9731$Of4HK
                                                           g$subst$9730$Of4HK))))
                                                     (g$find*$9695$Of4HK
                                                       g$old*$9731$Of4HK
                                                       g$subst$9730$Of4HK))))
                                                 (g$get-import$9700$Of4HK
                                                   g$isp$9727$Of4HK)
                                                 (map g$syntax->datum$7305$Of4HK
                                                      g$old*$9728$Of4HK)
                                                 (map g$syntax->datum$7305$Of4HK
                                                      g$new*$9729$Of4HK))))
                                             g$ls/false$9721$Of4HK)
                                           ((case-lambda
                                              ((g$t$9735$Of4HK)
                                               ((case-lambda
                                                  ((g$ls/false$9736$Of4HK)
                                                   (if (if g$ls/false$9736$Of4HK
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$9737$Of4HK
                                                                  g$isp$9738$Of4HK
                                                                  g$sym*$9739$Of4HK)
                                                                (if (eq? (g$syntax->datum$7305$Of4HK
                                                                           g$except$9737$Of4HK)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5347$Of4HK
                                                                      g$idsyn?$9691$Of4HK
                                                                      g$sym*$9739$Of4HK))
                                                                  '#f)))
                                                             g$ls/false$9736$Of4HK))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$9740$Of4HK
                                                            g$isp$9741$Of4HK
                                                            g$sym*$9742$Of4HK)
                                                          ((case-lambda
                                                             ((g$subst$9743$Of4HK)
                                                              (g$rem*$9696$Of4HK
                                                                (map g$syntax->datum$7305$Of4HK
                                                                     g$sym*$9742$Of4HK)
                                                                g$subst$9743$Of4HK)))
                                                           (g$get-import$9700$Of4HK
                                                             g$isp$9741$Of4HK))))
                                                       g$ls/false$9736$Of4HK)
                                                     ((case-lambda
                                                        ((g$t$9744$Of4HK)
                                                         ((case-lambda
                                                            ((g$ls/false$9745$Of4HK)
                                                             (if (if g$ls/false$9745$Of4HK
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$9746$Of4HK
                                                                            g$isp$9747$Of4HK
                                                                            g$sym*$9748$Of4HK)
                                                                          (if (eq? (g$syntax->datum$7305$Of4HK
                                                                                     g$only$9746$Of4HK)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5347$Of4HK
                                                                                g$idsyn?$9691$Of4HK
                                                                                g$sym*$9748$Of4HK))
                                                                            '#f)))
                                                                       g$ls/false$9745$Of4HK))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$9749$Of4HK
                                                                      g$isp$9750$Of4HK
                                                                      g$sym*$9751$Of4HK)
                                                                    ((case-lambda
                                                                       ((g$subst$9752$Of4HK
                                                                          g$sym*$9753$Of4HK)
                                                                        ((case-lambda
                                                                           ((g$sym*$9754$Of4HK)
                                                                            ((case-lambda
                                                                               ((g$lab*$9755$Of4HK)
                                                                                (map cons
                                                                                     g$sym*$9754$Of4HK
                                                                                     g$lab*$9755$Of4HK)))
                                                                             (g$find*$9695$Of4HK
                                                                               g$sym*$9754$Of4HK
                                                                               g$subst$9752$Of4HK))))
                                                                         (g$remove-dups$9697$Of4HK
                                                                           g$sym*$9753$Of4HK))))
                                                                     (g$get-import$9700$Of4HK
                                                                       g$isp$9750$Of4HK)
                                                                     (map g$syntax->datum$7305$Of4HK
                                                                          g$sym*$9751$Of4HK))))
                                                                 g$ls/false$9745$Of4HK)
                                                               ((case-lambda
                                                                  ((g$t$9756$Of4HK)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9757$Of4HK)
                                                                       (if (if g$ls/false$9757$Of4HK
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$9758$Of4HK
                                                                                      g$isp$9759$Of4HK
                                                                                      g$p$9760$Of4HK)
                                                                                    (if (eq? (g$syntax->datum$7305$Of4HK
                                                                                               g$prefix$9758$Of4HK)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$9691$Of4HK
                                                                                          g$p$9760$Of4HK))
                                                                                      '#f)))
                                                                                 g$ls/false$9757$Of4HK))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$9761$Of4HK
                                                                                g$isp$9762$Of4HK
                                                                                g$p$9763$Of4HK)
                                                                              ((case-lambda
                                                                                 ((g$subst$9764$Of4HK
                                                                                    g$prefix$9765$Of4HK)
                                                                                  (map (case-lambda
                                                                                         ((g$x$9766$Of4HK)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$9765$Of4HK
                                                                                                (symbol->string
                                                                                                  (car g$x$9766$Of4HK))))
                                                                                            (cdr g$x$9766$Of4HK))))
                                                                                       g$subst$9764$Of4HK)))
                                                                               (g$get-import$9700$Of4HK
                                                                                 g$isp$9762$Of4HK)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7305$Of4HK
                                                                                   g$p$9763$Of4HK)))))
                                                                           g$ls/false$9757$Of4HK)
                                                                         ((case-lambda
                                                                            ((g$t$9767$Of4HK)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9768$Of4HK)
                                                                                 (if (if g$ls/false$9768$Of4HK
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$9769$Of4HK
                                                                                                g$spec*$9770$Of4HK)
                                                                                              (eq? (g$syntax->datum$7305$Of4HK
                                                                                                     g$library$9769$Of4HK)
                                                                                                   'library)))
                                                                                           g$ls/false$9768$Of4HK))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$9771$Of4HK
                                                                                          g$spec*$9772$Of4HK)
                                                                                        (g$import-library$9699$Of4HK
                                                                                          g$spec*$9772$Of4HK)))
                                                                                     g$ls/false$9768$Of4HK)
                                                                                   ((case-lambda
                                                                                      ((g$t$9773$Of4HK)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9774$Of4HK)
                                                                                           (if (if g$ls/false$9774$Of4HK
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$9775$Of4HK
                                                                                                          g$isp$9776$Of4HK
                                                                                                          g$rest$9777$Of4HK)
                                                                                                        (eq? (g$syntax->datum$7305$Of4HK
                                                                                                               g$for$9775$Of4HK)
                                                                                                             'for)))
                                                                                                     g$ls/false$9774$Of4HK))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$9778$Of4HK
                                                                                                    g$isp$9779$Of4HK
                                                                                                    g$rest$9780$Of4HK)
                                                                                                  (g$get-import$9700$Of4HK
                                                                                                    g$isp$9779$Of4HK)))
                                                                                               g$ls/false$9774$Of4HK)
                                                                                             ((case-lambda
                                                                                                ((g$t$9781$Of4HK)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$9782$Of4HK)
                                                                                                     (if g$ls/false$9782$Of4HK
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$9783$Of4HK)
                                                                                                            (g$syntax-violation$7302$Of4HK
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$9783$Of4HK)))
                                                                                                         g$ls/false$9782$Of4HK)
                                                                                                       (g$syntax-violation$7302$Of4HK
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$9781$Of4HK))))
                                                                                                  (g$syntax-dispatch$7196$Of4HK
                                                                                                    g$t$9781$Of4HK
                                                                                                    'any))))
                                                                                              g$t$9773$Of4HK))))
                                                                                        (g$syntax-dispatch$7196$Of4HK
                                                                                          g$t$9773$Of4HK
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$9767$Of4HK))))
                                                                              (g$syntax-dispatch$7196$Of4HK
                                                                                g$t$9767$Of4HK
                                                                                '(any each-any)))))
                                                                          g$t$9756$Of4HK))))
                                                                    (g$syntax-dispatch$7196$Of4HK
                                                                      g$t$9756$Of4HK
                                                                      '(any any
                                                                            any)))))
                                                                g$t$9744$Of4HK))))
                                                          (g$syntax-dispatch$7196$Of4HK
                                                            g$t$9744$Of4HK
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$9735$Of4HK))))
                                                (g$syntax-dispatch$7196$Of4HK
                                                  g$t$9735$Of4HK
                                                  '(any any . each-any)))))
                                            g$t$9720$Of4HK))))
                                      (g$syntax-dispatch$7196$Of4HK
                                        g$t$9720$Of4HK
                                        '(any any . #(each (any any)))))))
                                  g$t$9714$Of4HK))))
                            (g$syntax-dispatch$7196$Of4HK
                              g$t$9714$Of4HK
                              '(any . each-any)))))
                        g$spec$9713$Of4HK))))
                  (g$add-imports!$9701$Of4HK
                    (case-lambda
                      ((g$imp$9705$Of4HK g$h$9706$Of4HK)
                       ((case-lambda
                          ((g$subst$9707$Of4HK)
                           (for-each
                             (case-lambda
                               ((g$x$9708$Of4HK)
                                ((case-lambda
                                   ((g$name$9709$Of4HK g$label$9710$Of4HK)
                                    ((case-lambda
                                       ((g$t$9711$Of4HK)
                                        (if g$t$9711$Of4HK
                                          ((case-lambda
                                             ((g$l$9712$Of4HK)
                                              (if (eq? g$l$9712$Of4HK
                                                       g$label$9710$Of4HK)
                                                (void)
                                                (g$dup-error$9692$Of4HK
                                                  g$name$9709$Of4HK))))
                                           g$t$9711$Of4HK)
                                          (g$hashtable-set!$5144$Of4HK
                                            g$h$9706$Of4HK
                                            g$name$9709$Of4HK
                                            g$label$9710$Of4HK))))
                                     (g$hashtable-ref$5143$Of4HK
                                       g$h$9706$Of4HK
                                       g$name$9709$Of4HK
                                       '#f))))
                                 (car g$x$9708$Of4HK)
                                 (cdr g$x$9708$Of4HK))))
                             g$subst$9707$Of4HK)))
                        (g$get-import$9700$Of4HK g$imp$9705$Of4HK))))))
          ((letrec ((g$f$9702$Of4HK
                      (case-lambda
                        ((g$imp*$9703$Of4HK g$h$9704$Of4HK)
                         (if (null? g$imp*$9703$Of4HK)
                           (hashtable-entries g$h$9704$Of4HK)
                           (begin
                             (g$add-imports!$9701$Of4HK
                               (car g$imp*$9703$Of4HK)
                               g$h$9704$Of4HK)
                             (g$f$9702$Of4HK
                               (cdr g$imp*$9703$Of4HK)
                               g$h$9704$Of4HK)))))))
             g$f$9702$Of4HK)
           g$imp*$9690$Of4HK
           (g$make-eq-hashtable$5140$Of4HK))))))
   (g$make-top-rib$7246$Of4HK
     g$make-top-rib$10678$Of4HK
     (case-lambda
       ((g$names$9951$Of4HK g$labels$9952$Of4HK)
        ((case-lambda
           ((g$rib$9953$Of4HK)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$9954$Of4HK g$label$9955$Of4HK)
                   (begin
                     (if (symbol? g$name$9954$Of4HK)
                       (void)
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$9954$Of4HK))
                     (g$extend-rib!$6882$Of4HK
                       g$rib$9953$Of4HK
                       (g$make-stx$6891$Of4HK
                         g$name$9954$Of4HK
                         g$top-mark*$6860$Of4HK
                         '()
                         '())
                       g$label$9955$Of4HK))))
                g$names$9951$Of4HK
                g$labels$9952$Of4HK)
              g$rib$9953$Of4HK)))
         (g$make-empty-rib$6881$Of4HK)))))
   (g$make-collector$7247$Of4HK
     g$make-collector$10679$Of4HK
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$9956$Of4HK)
            (case-lambda
              (() g$ls$9956$Of4HK)
              ((g$x$9957$Of4HK)
               (set! g$ls$9956$Of4HK
                 (g$set-cons$6857$Of4HK g$x$9957$Of4HK g$ls$9956$Of4HK))))))
         '()))))
   (g$inv-collector$7248$Of4HK
     g$inv-collector$10680$Of4HK
     (g$make-parameter$6187$Of4HK
       (case-lambda
         (g$args$9958$Of4HK
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$9959$Of4HK)
          (begin
            (if (procedure? g$x$9959$Of4HK)
              (void)
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$9959$Of4HK))
            g$x$9959$Of4HK)))))
   (g$vis-collector$7249$Of4HK
     g$vis-collector$10681$Of4HK
     (g$make-parameter$6187$Of4HK
       (case-lambda
         (g$args$9960$Of4HK
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$9961$Of4HK)
          (begin
            (if (procedure? g$x$9961$Of4HK)
              (void)
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$9961$Of4HK))
            g$x$9961$Of4HK)))))
   (g$imp-collector$7250$Of4HK
     g$imp-collector$10682$Of4HK
     (g$make-parameter$6187$Of4HK
       (case-lambda
         (g$args$9962$Of4HK
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$9963$Of4HK)
          (begin
            (if (procedure? g$x$9963$Of4HK)
              (void)
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$9963$Of4HK))
            g$x$9963$Of4HK)))))
   (g$chi-library-internal$7251$Of4HK
     g$chi-library-internal$10683$Of4HK
     (case-lambda
       ((g$e*$9964$Of4HK g$rib$9965$Of4HK g$top?$9966$Of4HK)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7240$Of4HK
               g$e*$9964$Of4HK
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$9965$Of4HK
               g$top?$9966$Of4HK)))
          (case-lambda
            ((g$e*$9974$Of4HK
               g$r$9975$Of4HK
               g$mr$9976$Of4HK
               g$lex*$9977$Of4HK
               g$rhs*$9978$Of4HK
               g$mod**$9979$Of4HK
               g$_kwd*$9980$Of4HK)
             ((case-lambda
                ((g$_kwd*$9981$Of4HK
                   g$mod**$9982$Of4HK
                   g$rhs*$9983$Of4HK
                   g$lex*$9984$Of4HK
                   g$mr$9985$Of4HK
                   g$r$9986$Of4HK
                   g$e*$9987$Of4HK)
                 (values
                   (append
                     (apply append (reverse g$mod**$9982$Of4HK))
                     g$e*$9987$Of4HK)
                   g$r$9986$Of4HK
                   g$mr$9985$Of4HK
                   (reverse g$lex*$9984$Of4HK)
                   (reverse g$rhs*$9983$Of4HK))))
              g$_kwd*$9980$Of4HK
              g$mod**$9979$Of4HK
              g$rhs*$9978$Of4HK
              g$lex*$9977$Of4HK
              g$mr$9976$Of4HK
              g$r$9975$Of4HK
              g$e*$9974$Of4HK)))))))
   (g$chi-interaction-expr$7252$Of4HK
     g$chi-interaction-expr$10684$Of4HK
     (case-lambda
       ((g$e$9988$Of4HK g$rib$9989$Of4HK g$r$9990$Of4HK)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7240$Of4HK
               (list g$e$9988$Of4HK)
               g$r$9990$Of4HK
               g$r$9990$Of4HK
               '()
               '()
               '()
               '()
               g$rib$9989$Of4HK
               '#t)))
          (case-lambda
            ((g$e*$9998$Of4HK
               g$r$9999$Of4HK
               g$mr$10000$Of4HK
               g$lex*$10001$Of4HK
               g$rhs*$10002$Of4HK
               g$mod**$10003$Of4HK
               g$_kwd*$10004$Of4HK)
             ((case-lambda
                ((g$_kwd*$10005$Of4HK
                   g$mod**$10006$Of4HK
                   g$rhs*$10007$Of4HK
                   g$lex*$10008$Of4HK
                   g$mr$10009$Of4HK
                   g$r$10010$Of4HK
                   g$e*$10011$Of4HK)
                 ((case-lambda
                    ((g$e*$10012$Of4HK)
                     ((case-lambda
                        ((g$e$10013$Of4HK)
                         (values g$e$10013$Of4HK g$r$10010$Of4HK)))
                      (if (null? g$e*$10012$Of4HK)
                        (g$build-void$6853$Of4HK)
                        (if (null? (cdr g$e*$10012$Of4HK))
                          (car g$e*$10012$Of4HK)
                          (g$build-sequence$6852$Of4HK
                            '#f
                            g$e*$10012$Of4HK))))))
                  (g$expand-interaction-rhs*/init*$7221$Of4HK
                    (reverse g$lex*$10008$Of4HK)
                    (reverse g$rhs*$10007$Of4HK)
                    (append
                      (apply append (reverse g$mod**$10006$Of4HK))
                      g$e*$10011$Of4HK)
                    g$r$10010$Of4HK
                    g$mr$10009$Of4HK))))
              g$_kwd*$10004$Of4HK
              g$mod**$10003$Of4HK
              g$rhs*$10002$Of4HK
              g$lex*$10001$Of4HK
              g$mr$10000$Of4HK
              g$r$9999$Of4HK
              g$e*$9998$Of4HK)))))))
   (g$library-body-expander$7253$Of4HK
     g$library-body-expander$10685$Of4HK
     (case-lambda
       ((g$name$10014$Of4HK
          g$exp*$10015$Of4HK
          g$imp*$10016$Of4HK
          g$b*$10017$Of4HK
          g$top?$10018$Of4HK)
        (letrec* ((g$itc$10019$Of4HK (g$make-collector$7247$Of4HK)))
          ((case-lambda
             ((g$imp-collector$10024$Of4HK
                g$top-level-context$10025$Of4HK
                g$imp-collector$10026$Of4HK
                g$top-level-context$10027$Of4HK)
              ((case-lambda
                 ((g$swap$10028$Of4HK)
                  (dynamic-wind
                    g$swap$10028$Of4HK
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (() (g$parse-exports$7242$Of4HK g$exp*$10015$Of4HK)))
                         (case-lambda
                           ((g$exp-int*$10031$Of4HK g$exp-ext*$10032$Of4HK)
                            ((case-lambda
                               ((g$exp-ext*$10033$Of4HK g$exp-int*$10034$Of4HK)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7245$Of4HK
                                       g$imp*$10016$Of4HK)))
                                  (case-lambda
                                    ((g$subst-names$10037$Of4HK
                                       g$subst-labels$10038$Of4HK)
                                     ((case-lambda
                                        ((g$subst-labels$10039$Of4HK
                                           g$subst-names$10040$Of4HK)
                                         ((case-lambda
                                            ((g$rib$10041$Of4HK)
                                             ((case-lambda
                                                ((g$b*$10042$Of4HK
                                                   g$rtc$10043$Of4HK
                                                   g$vtc$10044$Of4HK)
                                                 ((case-lambda
                                                    ((g$inv-collector$10049$Of4HK
                                                       g$vis-collector$10050$Of4HK
                                                       g$inv-collector$10051$Of4HK
                                                       g$vis-collector$10052$Of4HK)
                                                     ((case-lambda
                                                        ((g$swap$10053$Of4HK)
                                                         (dynamic-wind
                                                           g$swap$10053$Of4HK
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7251$Of4HK
                                                                     g$b*$10042$Of4HK
                                                                     g$rib$10041$Of4HK
                                                                     g$top?$10018$Of4HK)))
                                                                (case-lambda
                                                                  ((g$init*$10059$Of4HK
                                                                     g$r$10060$Of4HK
                                                                     g$mr$10061$Of4HK
                                                                     g$lex*$10062$Of4HK
                                                                     g$rhs*$10063$Of4HK)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10064$Of4HK
                                                                         g$lex*$10065$Of4HK
                                                                         g$mr$10066$Of4HK
                                                                         g$r$10067$Of4HK
                                                                         g$init*$10068$Of4HK)
                                                                       (begin
                                                                         (g$seal-rib!$6884$Of4HK
                                                                           g$rib$10041$Of4HK)
                                                                         ((case-lambda
                                                                            ((g$init*$10069$Of4HK)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10070$Of4HK)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$6885$Of4HK
                                                                                         g$rib$10041$Of4HK)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10071$Of4HK
                                                                                             g$export-subst$10072$Of4HK)
                                                                                           (letrec* ((g$errstr$10073$Of4HK
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7294$Of4HK
                                                                                                    g$lex*$10065$Of4HK
                                                                                                    g$loc*$10071$Of4HK
                                                                                                    g$r$10067$Of4HK)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10077$Of4HK
                                                                                                    g$global*$10078$Of4HK
                                                                                                    g$macro*$10079$Of4HK)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10080$Of4HK
                                                                                                        g$global*$10081$Of4HK
                                                                                                        g$export-env$10082$Of4HK)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10083$Of4HK)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10084$Of4HK
                                                                                                                   g$label$10085$Of4HK)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10086$Of4HK)
                                                                                                                     (if g$p$10086$Of4HK
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10087$Of4HK)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10088$Of4HK)
                                                                                                                               (if (eq? g$type$10088$Of4HK
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7302$Of4HK
                                                                                                                                   'export
                                                                                                                                   g$errstr$10073$Of4HK
                                                                                                                                   g$name$10084$Of4HK)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10087$Of4HK))))
                                                                                                                        (cdr g$p$10086$Of4HK))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10085$Of4HK
                                                                                                                    g$export-env$10082$Of4HK))))
                                                                                                              (car g$s$10083$Of4HK)
                                                                                                              (cdr g$s$10083$Of4HK))))
                                                                                                          g$export-subst$10072$Of4HK)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10089$Of4HK
                                                                                                              g$invoke-definitions$10090$Of4HK)
                                                                                                            (values
                                                                                                              (g$itc$10019$Of4HK)
                                                                                                              (g$rtc$10043$Of4HK)
                                                                                                              (g$vtc$10044$Of4HK)
                                                                                                              (g$build-sequence$6852$Of4HK
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10090$Of4HK
                                                                                                                  (list
                                                                                                                    g$invoke-body$10089$Of4HK)))
                                                                                                              g$macro*$10080$Of4HK
                                                                                                              g$export-subst$10072$Of4HK
                                                                                                              g$export-env$10082$Of4HK)))
                                                                                                         (g$build-library-letrec*$6856$Of4HK
                                                                                                           '#f
                                                                                                           g$name$10014$Of4HK
                                                                                                           g$lex*$10065$Of4HK
                                                                                                           g$loc*$10071$Of4HK
                                                                                                           g$rhs*$10070$Of4HK
                                                                                                           (if (null?
                                                                                                                 g$init*$10069$Of4HK)
                                                                                                             (g$build-void$6853$Of4HK)
                                                                                                             (g$build-sequence$6852$Of4HK
                                                                                                               '#f
                                                                                                               g$init*$10069$Of4HK)))
                                                                                                         (map g$build-global-define$6848$Of4HK
                                                                                                              (map cdr
                                                                                                                   g$global*$10081$Of4HK))))))
                                                                                                   g$macro*$10079$Of4HK
                                                                                                   g$global*$10078$Of4HK
                                                                                                   g$export-env$10077$Of4HK)))))))
                                                                                        (map g$gen-global$6863$Of4HK
                                                                                             g$lex*$10065$Of4HK)
                                                                                        (g$make-export-subst$7293$Of4HK
                                                                                          g$exp-int*$10034$Of4HK
                                                                                          g$exp-ext*$10033$Of4HK
                                                                                          g$rib$10041$Of4HK))))))))
                                                                              (g$chi-rhs*$7222$Of4HK
                                                                                g$rhs*$10064$Of4HK
                                                                                g$r$10067$Of4HK
                                                                                g$mr$10066$Of4HK))))
                                                                          (g$chi-expr*$7212$Of4HK
                                                                            g$init*$10068$Of4HK
                                                                            g$r$10067$Of4HK
                                                                            g$mr$10066$Of4HK)))))
                                                                    g$rhs*$10063$Of4HK
                                                                    g$lex*$10062$Of4HK
                                                                    g$mr$10061$Of4HK
                                                                    g$r$10060$Of4HK
                                                                    g$init*$10059$Of4HK))))))
                                                           g$swap$10053$Of4HK)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10091$Of4HK)
                                                               (begin
                                                                 (g$inv-collector$10049$Of4HK
                                                                   g$inv-collector$10051$Of4HK)
                                                                 (set! g$inv-collector$10051$Of4HK
                                                                   g$t$10091$Of4HK))))
                                                            (g$inv-collector$10049$Of4HK))
                                                           ((case-lambda
                                                              ((g$t$10092$Of4HK)
                                                               (begin
                                                                 (g$vis-collector$10050$Of4HK
                                                                   g$vis-collector$10052$Of4HK)
                                                                 (set! g$vis-collector$10052$Of4HK
                                                                   g$t$10092$Of4HK))))
                                                            (g$vis-collector$10050$Of4HK))))))))
                                                  g$inv-collector$7248$Of4HK
                                                  g$vis-collector$7249$Of4HK
                                                  g$rtc$10043$Of4HK
                                                  g$vtc$10044$Of4HK)))
                                              (map (case-lambda
                                                     ((g$x$10093$Of4HK)
                                                      (g$make-stx$6891$Of4HK
                                                        g$x$10093$Of4HK
                                                        g$top-mark*$6860$Of4HK
                                                        (list g$rib$10041$Of4HK)
                                                        '())))
                                                   g$b*$10017$Of4HK)
                                              (g$make-collector$7247$Of4HK)
                                              (g$make-collector$7247$Of4HK))))
                                          (g$make-top-rib$7246$Of4HK
                                            g$subst-names$10040$Of4HK
                                            g$subst-labels$10039$Of4HK))))
                                      g$subst-labels$10038$Of4HK
                                      g$subst-names$10037$Of4HK))))))
                             g$exp-ext*$10032$Of4HK
                             g$exp-int*$10031$Of4HK))))))
                    g$swap$10028$Of4HK)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10094$Of4HK)
                        (begin
                          (g$imp-collector$10024$Of4HK
                            g$imp-collector$10026$Of4HK)
                          (set! g$imp-collector$10026$Of4HK g$t$10094$Of4HK))))
                     (g$imp-collector$10024$Of4HK))
                    ((case-lambda
                       ((g$t$10095$Of4HK)
                        (begin
                          (g$top-level-context$10025$Of4HK
                            g$top-level-context$10027$Of4HK)
                          (set! g$top-level-context$10027$Of4HK
                            g$t$10095$Of4HK))))
                     (g$top-level-context$10025$Of4HK))))))))
           g$imp-collector$7250$Of4HK
           g$top-level-context$7309$Of4HK
           g$itc$10019$Of4HK
           '#f)))))
   (g$core-library-expander$7254$Of4HK
     g$core-library-expander$10686$Of4HK
     (case-lambda
       ((g$e$10096$Of4HK g$verify-name$10097$Of4HK)
        (call-with-values
          (case-lambda (() (g$parse-library$7244$Of4HK g$e$10096$Of4HK)))
          (case-lambda
            ((g$name*$10102$Of4HK
               g$exp*$10103$Of4HK
               g$imp*$10104$Of4HK
               g$b*$10105$Of4HK)
             ((case-lambda
                ((g$b*$10106$Of4HK
                   g$imp*$10107$Of4HK
                   g$exp*$10108$Of4HK
                   g$name*$10109$Of4HK)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$7243$Of4HK g$name*$10109$Of4HK)))
                   (case-lambda
                     ((g$name$10112$Of4HK g$ver$10113$Of4HK)
                      ((case-lambda
                         ((g$ver$10114$Of4HK g$name$10115$Of4HK)
                          (begin
                            (g$verify-name$10097$Of4HK g$name$10115$Of4HK)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7253$Of4HK
                                   g$name$10115$Of4HK
                                   g$exp*$10108$Of4HK
                                   g$imp*$10107$Of4HK
                                   g$b*$10106$Of4HK
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10123$Of4HK
                                   g$invoke-req*$10124$Of4HK
                                   g$visit-req*$10125$Of4HK
                                   g$invoke-code$10126$Of4HK
                                   g$visit-code$10127$Of4HK
                                   g$export-subst$10128$Of4HK
                                   g$export-env$10129$Of4HK)
                                 ((case-lambda
                                    ((g$export-env$10130$Of4HK
                                       g$export-subst$10131$Of4HK
                                       g$visit-code$10132$Of4HK
                                       g$invoke-code$10133$Of4HK
                                       g$visit-req*$10134$Of4HK
                                       g$invoke-req*$10135$Of4HK
                                       g$imp*$10136$Of4HK)
                                     (values
                                       g$name$10115$Of4HK
                                       g$ver$10114$Of4HK
                                       g$imp*$10136$Of4HK
                                       g$invoke-req*$10135$Of4HK
                                       g$visit-req*$10134$Of4HK
                                       g$invoke-code$10133$Of4HK
                                       g$visit-code$10132$Of4HK
                                       g$export-subst$10131$Of4HK
                                       g$export-env$10130$Of4HK)))
                                  g$export-env$10129$Of4HK
                                  g$export-subst$10128$Of4HK
                                  g$visit-code$10127$Of4HK
                                  g$invoke-code$10126$Of4HK
                                  g$visit-req*$10125$Of4HK
                                  g$invoke-req*$10124$Of4HK
                                  g$imp*$10123$Of4HK)))))))
                       g$ver$10113$Of4HK
                       g$name$10112$Of4HK))))))
              g$b*$10105$Of4HK
              g$imp*$10104$Of4HK
              g$exp*$10103$Of4HK
              g$name*$10102$Of4HK)))))))
   (g$parse-top-level-program$7255$Of4HK
     g$parse-top-level-program$10687$Of4HK
     (case-lambda
       ((g$e*$10137$Of4HK)
        ((case-lambda
           ((g$t$10138$Of4HK)
            ((case-lambda
               ((g$ls/false$10139$Of4HK)
                (if (if g$ls/false$10139$Of4HK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10140$Of4HK
                               g$imp*$10141$Of4HK
                               g$b*$10142$Of4HK)
                             (eq? (g$syntax->datum$7305$Of4HK
                                    g$import$10140$Of4HK)
                                  'import)))
                          g$ls/false$10139$Of4HK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10143$Of4HK
                         g$imp*$10144$Of4HK
                         g$b*$10145$Of4HK)
                       (values g$imp*$10144$Of4HK g$b*$10145$Of4HK)))
                    g$ls/false$10139$Of4HK)
                  ((case-lambda
                     ((g$t$10146$Of4HK)
                      ((case-lambda
                         ((g$ls/false$10147$Of4HK)
                          (if (if g$ls/false$10147$Of4HK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10148$Of4HK
                                         g$x$10149$Of4HK
                                         g$y$10150$Of4HK)
                                       (eq? (g$syntax->datum$7305$Of4HK
                                              g$import$10148$Of4HK)
                                            'import)))
                                    g$ls/false$10147$Of4HK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10151$Of4HK
                                   g$x$10152$Of4HK
                                   g$y$10153$Of4HK)
                                 (g$syntax-violation$7302$Of4HK
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$6915$Of4HK g$e*$10137$Of4HK))))
                              g$ls/false$10147$Of4HK)
                            ((case-lambda
                               ((g$t$10154$Of4HK)
                                ((case-lambda
                                   ((g$ls/false$10155$Of4HK)
                                    (if g$ls/false$10155$Of4HK
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10155$Of4HK)
                                      (g$syntax-violation$7302$Of4HK
                                        '#f
                                        '"invalid syntax"
                                        g$t$10154$Of4HK))))
                                 (g$syntax-dispatch$7196$Of4HK
                                   g$t$10154$Of4HK
                                   '_))))
                             g$t$10146$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK
                         g$t$10146$Of4HK
                         '((any . any) . any)))))
                   g$t$10138$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK
               g$t$10138$Of4HK
               '((any . each-any) . each-any)))))
         g$e*$10137$Of4HK))))
   (g$top-level-expander$7256$Of4HK
     g$top-level-expander$10688$Of4HK
     (case-lambda
       ((g$e*$10156$Of4HK)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7255$Of4HK g$e*$10156$Of4HK)))
          (case-lambda
            ((g$imp*$10159$Of4HK g$b*$10160$Of4HK)
             ((case-lambda
                ((g$b*$10161$Of4HK g$imp*$10162$Of4HK)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7253$Of4HK
                        '()
                        '()
                        g$imp*$10162$Of4HK
                        g$b*$10161$Of4HK
                        '#t)))
                   (case-lambda
                     ((g$imp*$10170$Of4HK
                        g$invoke-req*$10171$Of4HK
                        g$visit-req*$10172$Of4HK
                        g$invoke-code$10173$Of4HK
                        g$visit-code$10174$Of4HK
                        g$export-subst$10175$Of4HK
                        g$export-env$10176$Of4HK)
                      ((case-lambda
                         ((g$export-env$10177$Of4HK
                            g$export-subst$10178$Of4HK
                            g$visit-code$10179$Of4HK
                            g$invoke-code$10180$Of4HK
                            g$visit-req*$10181$Of4HK
                            g$invoke-req*$10182$Of4HK
                            g$imp*$10183$Of4HK)
                          (values
                            g$invoke-req*$10182$Of4HK
                            g$invoke-code$10180$Of4HK)))
                       g$export-env$10176$Of4HK
                       g$export-subst$10175$Of4HK
                       g$visit-code$10174$Of4HK
                       g$invoke-code$10173$Of4HK
                       g$visit-req*$10172$Of4HK
                       g$invoke-req*$10171$Of4HK
                       g$imp*$10170$Of4HK))))))
              g$b*$10160$Of4HK
              g$imp*$10159$Of4HK)))))))
   (g$8141$7257$Of4HK
     g$8141$10689$Of4HK
     (make-record-type-descriptor
       'env
       '#f
       'g$8144$Of4HK
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8143$7258$Of4HK g$8143$10690$Of4HK '#f)
   (g$8142$7259$Of4HK
     g$8142$10691$Of4HK
     (make-record-constructor-descriptor
       g$8141$7257$Of4HK
       '#f
       g$8143$7258$Of4HK))
   (g$env?$7260$Of4HK g$env?$10692$Of4HK (record-predicate g$8141$7257$Of4HK))
   (g$make-env$7261$Of4HK
     g$make-env$10693$Of4HK
     (record-constructor g$8142$7259$Of4HK))
   (g$env-names$7262$Of4HK
     g$env-names$10694$Of4HK
     (record-accessor g$8141$7257$Of4HK '0))
   (g$env-labels$7263$Of4HK
     g$env-labels$10695$Of4HK
     (record-accessor g$8141$7257$Of4HK '1))
   (g$env-itc$7264$Of4HK
     g$env-itc$10696$Of4HK
     (record-accessor g$8141$7257$Of4HK '2))
   (g$set-env-names!$7265$Of4HK
     g$set-env-names!$10697$Of4HK
     (record-mutator g$8141$7257$Of4HK '0))
   (g$set-env-labels!$7266$Of4HK
     g$set-env-labels!$10698$Of4HK
     (record-mutator g$8141$7257$Of4HK '1))
   (g$set-env-itc!$7267$Of4HK
     g$set-env-itc!$10699$Of4HK
     (record-mutator g$8141$7257$Of4HK '2))
   (g$rp$7268$Of4HK
     g$rp$10700$Of4HK
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10184$Of4HK g$p$10185$Of4HK)
          (display '"#<environment>" g$p$10185$Of4HK)))))
   (g$8160$7269$Of4HK
     g$8160$10701$Of4HK
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8163$Of4HK
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8162$7270$Of4HK g$8162$10702$Of4HK '#f)
   (g$8161$7271$Of4HK
     g$8161$10703$Of4HK
     (make-record-constructor-descriptor
       g$8160$7269$Of4HK
       '#f
       g$8162$7270$Of4HK))
   (g$interaction-env?$7272$Of4HK
     g$interaction-env?$10704$Of4HK
     (record-predicate g$8160$7269$Of4HK))
   (g$make-interaction-env$7273$Of4HK
     g$make-interaction-env$10705$Of4HK
     (record-constructor g$8161$7271$Of4HK))
   (g$interaction-env-rib$7274$Of4HK
     g$interaction-env-rib$10706$Of4HK
     (record-accessor g$8160$7269$Of4HK '0))
   (g$interaction-env-r$7275$Of4HK
     g$interaction-env-r$10707$Of4HK
     (record-accessor g$8160$7269$Of4HK '1))
   (g$interaction-env-locs$7276$Of4HK
     g$interaction-env-locs$10708$Of4HK
     (record-accessor g$8160$7269$Of4HK '2))
   (g$set-interaction-env-rib!$7277$Of4HK
     g$set-interaction-env-rib!$10709$Of4HK
     (record-mutator g$8160$7269$Of4HK '0))
   (g$set-interaction-env-r!$7278$Of4HK
     g$set-interaction-env-r!$10710$Of4HK
     (record-mutator g$8160$7269$Of4HK '1))
   (g$set-interaction-env-locs!$7279$Of4HK
     g$set-interaction-env-locs!$10711$Of4HK
     (record-mutator g$8160$7269$Of4HK '2))
   (g$rp$7280$Of4HK
     g$rp$10712$Of4HK
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10186$Of4HK g$p$10187$Of4HK)
          (display '"#<environment>" g$p$10187$Of4HK)))))
   (g$interaction-environment-symbols$7281$Of4HK
     g$interaction-environment-symbols$10713$Of4HK
     (case-lambda
       (()
        (map (case-lambda ((g$x$10188$Of4HK) g$x$10188$Of4HK))
             (g$rib-sym*$6873$Of4HK
               (g$interaction-env-rib$7274$Of4HK
                 (g$interaction-environment$7308$Of4HK)))))))
   (g$environment-symbols$7282$Of4HK
     g$environment-symbols$10714$Of4HK
     (case-lambda
       ((g$e$10189$Of4HK)
        (vector->list (g$env-names$7262$Of4HK g$e$10189$Of4HK)))))
   (g$environment?$7283$Of4HK
     g$environment?$10715$Of4HK
     (case-lambda
       ((g$x$10190$Of4HK)
        ((case-lambda
           ((g$t$10191$Of4HK)
            (if g$t$10191$Of4HK
              g$t$10191$Of4HK
              (begin '#f (g$interaction-env?$7272$Of4HK g$x$10190$Of4HK)))))
         (g$env?$7260$Of4HK g$x$10190$Of4HK)))))
   (g$environment$7284$Of4HK
     g$environment$10716$Of4HK
     (case-lambda
       (g$imp*$10192$Of4HK
        ((case-lambda
           ((g$itc$10193$Of4HK)
            ((case-lambda
               ((g$imp-collector$10196$Of4HK g$imp-collector$10197$Of4HK)
                ((case-lambda
                   ((g$swap$10198$Of4HK)
                    (dynamic-wind
                      g$swap$10198$Of4HK
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7245$Of4HK
                                g$imp*$10192$Of4HK)))
                           (case-lambda
                             ((g$subst-names$10201$Of4HK
                                g$subst-labels$10202$Of4HK)
                              ((case-lambda
                                 ((g$subst-labels$10203$Of4HK
                                    g$subst-names$10204$Of4HK)
                                  (g$make-env$7261$Of4HK
                                    g$subst-names$10204$Of4HK
                                    g$subst-labels$10203$Of4HK
                                    g$itc$10193$Of4HK)))
                               g$subst-labels$10202$Of4HK
                               g$subst-names$10201$Of4HK))))))
                      g$swap$10198$Of4HK)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10205$Of4HK)
                        (begin
                          (g$imp-collector$10196$Of4HK
                            g$imp-collector$10197$Of4HK)
                          (set! g$imp-collector$10197$Of4HK g$t$10205$Of4HK))))
                     (g$imp-collector$10196$Of4HK)))))))
             g$imp-collector$7250$Of4HK
             g$itc$10193$Of4HK)))
         (g$make-collector$7247$Of4HK)))))
   (g$null-environment$7285$Of4HK
     g$null-environment$10717$Of4HK
     (case-lambda
       ((g$n$10206$Of4HK)
        (begin
          (if (eqv? g$n$10206$Of4HK '5)
            (void)
            (assertion-violation 'null-environment '"not 5" g$n$10206$Of4HK))
          (g$environment$7284$Of4HK '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7286$Of4HK
     g$scheme-report-environment$10718$Of4HK
     (case-lambda
       ((g$n$10207$Of4HK)
        (begin
          (if (eqv? g$n$10207$Of4HK '5)
            (void)
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10207$Of4HK))
          (g$environment$7284$Of4HK '(psyntax scheme-report-environment-5))))))
   (g$expand$7287$Of4HK
     g$expand$10719$Of4HK
     (case-lambda
       ((g$x$10208$Of4HK g$env$10209$Of4HK)
        (if (g$env?$7260$Of4HK g$env$10209$Of4HK)
          ((case-lambda
             ((g$rib$10210$Of4HK)
              ((case-lambda
                 ((g$x$10211$Of4HK
                    g$itc$10212$Of4HK
                    g$rtc$10213$Of4HK
                    g$vtc$10214$Of4HK)
                  ((case-lambda
                     ((g$x$10215$Of4HK)
                      (begin
                        (g$seal-rib!$6884$Of4HK g$rib$10210$Of4HK)
                        (values g$x$10215$Of4HK (g$rtc$10213$Of4HK)))))
                   ((case-lambda
                      ((g$inv-collector$10222$Of4HK
                         g$vis-collector$10223$Of4HK
                         g$imp-collector$10224$Of4HK
                         g$inv-collector$10225$Of4HK
                         g$vis-collector$10226$Of4HK
                         g$imp-collector$10227$Of4HK)
                       ((case-lambda
                          ((g$swap$10228$Of4HK)
                           (dynamic-wind
                             g$swap$10228$Of4HK
                             (case-lambda
                               (()
                                (g$chi-expr$7214$Of4HK
                                  g$x$10211$Of4HK
                                  '()
                                  '())))
                             g$swap$10228$Of4HK)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10229$Of4HK)
                                 (begin
                                   (g$inv-collector$10222$Of4HK
                                     g$inv-collector$10225$Of4HK)
                                   (set! g$inv-collector$10225$Of4HK
                                     g$t$10229$Of4HK))))
                              (g$inv-collector$10222$Of4HK))
                             ((case-lambda
                                ((g$t$10230$Of4HK)
                                 (begin
                                   (g$vis-collector$10223$Of4HK
                                     g$vis-collector$10226$Of4HK)
                                   (set! g$vis-collector$10226$Of4HK
                                     g$t$10230$Of4HK))))
                              (g$vis-collector$10223$Of4HK))
                             ((case-lambda
                                ((g$t$10231$Of4HK)
                                 (begin
                                   (g$imp-collector$10224$Of4HK
                                     g$imp-collector$10227$Of4HK)
                                   (set! g$imp-collector$10227$Of4HK
                                     g$t$10231$Of4HK))))
                              (g$imp-collector$10224$Of4HK))))))))
                    g$inv-collector$7248$Of4HK
                    g$vis-collector$7249$Of4HK
                    g$imp-collector$7250$Of4HK
                    g$rtc$10213$Of4HK
                    g$vtc$10214$Of4HK
                    g$itc$10212$Of4HK))))
               (g$make-stx$6891$Of4HK
                 g$x$10208$Of4HK
                 g$top-mark*$6860$Of4HK
                 (list g$rib$10210$Of4HK)
                 '())
               (g$env-itc$7264$Of4HK g$env$10209$Of4HK)
               (g$make-collector$7247$Of4HK)
               (g$make-collector$7247$Of4HK))))
           (g$make-top-rib$7246$Of4HK
             (g$env-names$7262$Of4HK g$env$10209$Of4HK)
             (g$env-labels$7263$Of4HK g$env$10209$Of4HK)))
          (if (g$interaction-env?$7272$Of4HK g$env$10209$Of4HK)
            ((case-lambda
               ((g$rib$10232$Of4HK g$r$10233$Of4HK g$rtc$10234$Of4HK)
                ((case-lambda
                   ((g$x$10235$Of4HK)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10246$Of4HK
                               g$inv-collector$10247$Of4HK
                               g$vis-collector$10248$Of4HK
                               g$imp-collector$10249$Of4HK
                               g$top-level-context$10250$Of4HK
                               g$inv-collector$10251$Of4HK
                               g$vis-collector$10252$Of4HK
                               g$imp-collector$10253$Of4HK)
                             ((case-lambda
                                ((g$swap$10254$Of4HK)
                                 (dynamic-wind
                                   g$swap$10254$Of4HK
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7252$Of4HK
                                        g$x$10235$Of4HK
                                        g$rib$10232$Of4HK
                                        g$r$10233$Of4HK)))
                                   g$swap$10254$Of4HK)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10255$Of4HK)
                                       (begin
                                         (g$top-level-context$10246$Of4HK
                                           g$top-level-context$10250$Of4HK)
                                         (set! g$top-level-context$10250$Of4HK
                                           g$t$10255$Of4HK))))
                                    (g$top-level-context$10246$Of4HK))
                                   ((case-lambda
                                      ((g$t$10256$Of4HK)
                                       (begin
                                         (g$inv-collector$10247$Of4HK
                                           g$inv-collector$10251$Of4HK)
                                         (set! g$inv-collector$10251$Of4HK
                                           g$t$10256$Of4HK))))
                                    (g$inv-collector$10247$Of4HK))
                                   ((case-lambda
                                      ((g$t$10257$Of4HK)
                                       (begin
                                         (g$vis-collector$10248$Of4HK
                                           g$vis-collector$10252$Of4HK)
                                         (set! g$vis-collector$10252$Of4HK
                                           g$t$10257$Of4HK))))
                                    (g$vis-collector$10248$Of4HK))
                                   ((case-lambda
                                      ((g$t$10258$Of4HK)
                                       (begin
                                         (g$imp-collector$10249$Of4HK
                                           g$imp-collector$10253$Of4HK)
                                         (set! g$imp-collector$10253$Of4HK
                                           g$t$10258$Of4HK))))
                                    (g$imp-collector$10249$Of4HK))))))))
                          g$top-level-context$7309$Of4HK
                          g$inv-collector$7248$Of4HK
                          g$vis-collector$7249$Of4HK
                          g$imp-collector$7250$Of4HK
                          g$env$10209$Of4HK
                          g$rtc$10234$Of4HK
                          (g$make-collector$7247$Of4HK)
                          (g$make-collector$7247$Of4HK))))
                      (case-lambda
                        ((g$e$10259$Of4HK g$r^$10260$Of4HK)
                         ((case-lambda
                            ((g$r^$10261$Of4HK g$e$10262$Of4HK)
                             (begin
                               (g$set-interaction-env-r!$7278$Of4HK
                                 g$env$10209$Of4HK
                                 g$r^$10261$Of4HK)
                               (values g$e$10262$Of4HK (g$rtc$10234$Of4HK)))))
                          g$r^$10260$Of4HK
                          g$e$10259$Of4HK))))))
                 (g$make-stx$6891$Of4HK
                   g$x$10208$Of4HK
                   g$top-mark*$6860$Of4HK
                   (list g$rib$10232$Of4HK)
                   '()))))
             (g$interaction-env-rib$7274$Of4HK g$env$10209$Of4HK)
             (g$interaction-env-r$7275$Of4HK g$env$10209$Of4HK)
             (g$make-collector$7247$Of4HK))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10209$Of4HK))))))
   (g$eval$7288$Of4HK
     g$eval$10720$Of4HK
     (case-lambda
       ((g$x$10263$Of4HK g$env$10264$Of4HK)
        (begin
          (if (g$environment?$7283$Of4HK g$env$10264$Of4HK)
            (void)
            (error 'eval '"not an environment" g$env$10264$Of4HK))
          (call-with-values
            (case-lambda
              (() (g$expand$7287$Of4HK g$x$10263$Of4HK g$env$10264$Of4HK)))
            (case-lambda
              ((g$x$10267$Of4HK g$invoke-req*$10268$Of4HK)
               ((case-lambda
                  ((g$invoke-req*$10269$Of4HK g$x$10270$Of4HK)
                   (begin
                     (for-each
                       g$invoke-library$6733$Of4HK
                       g$invoke-req*$10269$Of4HK)
                     (eval-core
                       (g$expanded->core$6432$Of4HK g$x$10270$Of4HK)))))
                g$invoke-req*$10268$Of4HK
                g$x$10267$Of4HK))))))))
   (g$library-expander$7289$Of4HK
     g$library-expander$10721$Of4HK
     (case-lambda
       ((g$x$10271$Of4HK g$filename$10272$Of4HK g$verify-name$10273$Of4HK)
        (letrec* ((g$build-visit-code$10274$Of4HK
                    (case-lambda
                      ((g$macro*$10317$Of4HK)
                       (if (null? g$macro*$10317$Of4HK)
                         (g$build-void$6853$Of4HK)
                         (g$build-sequence$6852$Of4HK
                           '#f
                           (map (case-lambda
                                  ((g$x$10318$Of4HK)
                                   ((case-lambda
                                      ((g$loc$10319$Of4HK g$src$10320$Of4HK)
                                       (list
                                         'set!
                                         g$loc$10319$Of4HK
                                         g$src$10320$Of4HK)))
                                    (car g$x$10318$Of4HK)
                                    (g$cddr$4880$Of4HK g$x$10318$Of4HK))))
                                g$macro*$10317$Of4HK))))))
                  (g$visit!$10275$Of4HK
                    (case-lambda
                      ((g$macro*$10313$Of4HK)
                       (for-each
                         (case-lambda
                           ((g$x$10314$Of4HK)
                            ((case-lambda
                               ((g$loc$10315$Of4HK g$proc$10316$Of4HK)
                                (set-symbol-value!
                                  g$loc$10315$Of4HK
                                  g$proc$10316$Of4HK)))
                             (car g$x$10314$Of4HK)
                             (g$cadr$4878$Of4HK g$x$10314$Of4HK))))
                         g$macro*$10313$Of4HK)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7254$Of4HK
                 g$x$10271$Of4HK
                 g$verify-name$10273$Of4HK)))
            (case-lambda
              ((g$name$10285$Of4HK
                 g$ver$10286$Of4HK
                 g$imp*$10287$Of4HK
                 g$inv*$10288$Of4HK
                 g$vis*$10289$Of4HK
                 g$invoke-code$10290$Of4HK
                 g$macro*$10291$Of4HK
                 g$export-subst$10292$Of4HK
                 g$export-env$10293$Of4HK)
               ((case-lambda
                  ((g$export-env$10294$Of4HK
                     g$export-subst$10295$Of4HK
                     g$macro*$10296$Of4HK
                     g$invoke-code$10297$Of4HK
                     g$vis*$10298$Of4HK
                     g$inv*$10299$Of4HK
                     g$imp*$10300$Of4HK
                     g$ver$10301$Of4HK
                     g$name$10302$Of4HK)
                   ((case-lambda
                      ((g$id$10303$Of4HK
                         g$name$10304$Of4HK
                         g$ver$10305$Of4HK
                         g$imp*$10306$Of4HK
                         g$vis*$10307$Of4HK
                         g$inv*$10308$Of4HK
                         g$visit-proc$10309$Of4HK
                         g$invoke-proc$10310$Of4HK
                         g$visit-code$10311$Of4HK
                         g$invoke-code$10312$Of4HK)
                       (begin
                         (g$install-library$6731$Of4HK
                           g$id$10303$Of4HK
                           g$name$10304$Of4HK
                           g$ver$10305$Of4HK
                           g$imp*$10306$Of4HK
                           g$vis*$10307$Of4HK
                           g$inv*$10308$Of4HK
                           g$export-subst$10295$Of4HK
                           g$export-env$10294$Of4HK
                           g$visit-proc$10309$Of4HK
                           g$invoke-proc$10310$Of4HK
                           g$visit-code$10311$Of4HK
                           g$invoke-code$10312$Of4HK
                           '#t
                           g$filename$10272$Of4HK)
                         (values
                           g$id$10303$Of4HK
                           g$name$10304$Of4HK
                           g$ver$10305$Of4HK
                           g$imp*$10306$Of4HK
                           g$vis*$10307$Of4HK
                           g$inv*$10308$Of4HK
                           g$invoke-code$10312$Of4HK
                           g$visit-code$10311$Of4HK
                           g$export-subst$10295$Of4HK
                           g$export-env$10294$Of4HK))))
                    (gensym)
                    g$name$10302$Of4HK
                    g$ver$10301$Of4HK
                    (map g$library-spec$6737$Of4HK g$imp*$10300$Of4HK)
                    (map g$library-spec$6737$Of4HK g$vis*$10298$Of4HK)
                    (map g$library-spec$6737$Of4HK g$inv*$10299$Of4HK)
                    (case-lambda
                      (() (g$visit!$10275$Of4HK g$macro*$10296$Of4HK)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6432$Of4HK
                           g$invoke-code$10297$Of4HK))))
                    (g$build-visit-code$10274$Of4HK g$macro*$10296$Of4HK)
                    g$invoke-code$10297$Of4HK)))
                g$export-env$10293$Of4HK
                g$export-subst$10292$Of4HK
                g$macro*$10291$Of4HK
                g$invoke-code$10290$Of4HK
                g$vis*$10289$Of4HK
                g$inv*$10288$Of4HK
                g$imp*$10287$Of4HK
                g$ver$10286$Of4HK
                g$name$10285$Of4HK))))))
       ((g$x$10321$Of4HK g$filename$10322$Of4HK)
        (g$library-expander$7289$Of4HK
          g$x$10321$Of4HK
          g$filename$10322$Of4HK
          (case-lambda ((g$x$10323$Of4HK) (values)))))
       ((g$x$10324$Of4HK)
        (g$library-expander$7289$Of4HK
          g$x$10324$Of4HK
          '#f
          (case-lambda ((g$x$10325$Of4HK) (values)))))))
   (g$boot-library-expand$7290$Of4HK
     g$boot-library-expand$10722$Of4HK
     (case-lambda
       ((g$x$10326$Of4HK)
        (call-with-values
          (case-lambda (() (g$library-expander$7289$Of4HK g$x$10326$Of4HK)))
          (case-lambda
            ((g$id$10337$Of4HK
               g$name$10338$Of4HK
               g$ver$10339$Of4HK
               g$imp*$10340$Of4HK
               g$vis*$10341$Of4HK
               g$inv*$10342$Of4HK
               g$invoke-code$10343$Of4HK
               g$visit-code$10344$Of4HK
               g$export-subst$10345$Of4HK
               g$export-env$10346$Of4HK)
             ((case-lambda
                ((g$export-env$10347$Of4HK
                   g$export-subst$10348$Of4HK
                   g$visit-code$10349$Of4HK
                   g$invoke-code$10350$Of4HK
                   g$inv*$10351$Of4HK
                   g$vis*$10352$Of4HK
                   g$imp*$10353$Of4HK
                   g$ver$10354$Of4HK
                   g$name$10355$Of4HK
                   g$id$10356$Of4HK)
                 (values
                   g$name$10355$Of4HK
                   g$invoke-code$10350$Of4HK
                   g$export-subst$10348$Of4HK
                   g$export-env$10347$Of4HK)))
              g$export-env$10346$Of4HK
              g$export-subst$10345$Of4HK
              g$visit-code$10344$Of4HK
              g$invoke-code$10343$Of4HK
              g$inv*$10342$Of4HK
              g$vis*$10341$Of4HK
              g$imp*$10340$Of4HK
              g$ver$10339$Of4HK
              g$name$10338$Of4HK
              g$id$10337$Of4HK)))))))
   (g$rev-map-append$7291$Of4HK
     g$rev-map-append$10723$Of4HK
     (case-lambda
       ((g$f$10357$Of4HK g$ls$10358$Of4HK g$ac$10359$Of4HK)
        (if (null? g$ls$10358$Of4HK)
          g$ac$10359$Of4HK
          (g$rev-map-append$7291$Of4HK
            g$f$10357$Of4HK
            (cdr g$ls$10358$Of4HK)
            (cons
              (g$f$10357$Of4HK (car g$ls$10358$Of4HK))
              g$ac$10359$Of4HK))))))
   (g$build-exports$7292$Of4HK
     g$build-exports$10724$Of4HK
     (case-lambda
       ((g$lex*+loc*$10360$Of4HK g$init*$10361$Of4HK)
        (g$build-sequence$6852$Of4HK
          '#f
          (cons
            (g$build-void$6853$Of4HK)
            (g$rev-map-append$7291$Of4HK
              (case-lambda
                ((g$x$10362$Of4HK)
                 (list 'set! (cdr g$x$10362$Of4HK) (car g$x$10362$Of4HK))))
              g$lex*+loc*$10360$Of4HK
              g$init*$10361$Of4HK))))))
   (g$make-export-subst$7293$Of4HK
     g$make-export-subst$10725$Of4HK
     (case-lambda
       ((g$int*$10363$Of4HK g$ext*$10364$Of4HK g$rib$10365$Of4HK)
        (map (case-lambda
               ((g$int$10366$Of4HK g$ext$10367$Of4HK)
                ((case-lambda
                   ((g$id$10368$Of4HK)
                    ((case-lambda
                       ((g$label$10369$Of4HK)
                        ((case-lambda
                           (()
                            (begin
                              (if g$label$10369$Of4HK
                                (void)
                                (g$syntax-violation$7302$Of4HK
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$10368$Of4HK))
                              (cons g$ext$10367$Of4HK g$label$10369$Of4HK)))))))
                     (g$id->label$6931$Of4HK g$id$10368$Of4HK))))
                 (g$make-stx$6891$Of4HK
                   g$int$10366$Of4HK
                   g$top-mark*$6860$Of4HK
                   (list g$rib$10365$Of4HK)
                   '()))))
             g$int*$10363$Of4HK
             g$ext*$10364$Of4HK))))
   (g$make-export-env/macros$7294$Of4HK
     g$make-export-env/macros$10726$Of4HK
     (case-lambda
       ((g$lex*$10370$Of4HK g$loc*$10371$Of4HK g$r$10372$Of4HK)
        (letrec* ((g$lookup$10373$Of4HK
                    (case-lambda
                      ((g$x$10388$Of4HK)
                       ((letrec ((g$f$10389$Of4HK
                                   (case-lambda
                                     ((g$x$10390$Of4HK
                                        g$lex*$10391$Of4HK
                                        g$loc*$10392$Of4HK)
                                      (if (pair? g$lex*$10391$Of4HK)
                                        (if (eq? g$x$10390$Of4HK
                                                 (car g$lex*$10391$Of4HK))
                                          (car g$loc*$10392$Of4HK)
                                          (g$f$10389$Of4HK
                                            g$x$10390$Of4HK
                                            (cdr g$lex*$10391$Of4HK)
                                            (cdr g$loc*$10392$Of4HK)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10389$Of4HK)
                        g$x$10388$Of4HK
                        g$lex*$10370$Of4HK
                        g$loc*$10371$Of4HK)))))
          ((letrec ((g$f$10374$Of4HK
                      (case-lambda
                        ((g$r$10375$Of4HK
                           g$env$10376$Of4HK
                           g$global*$10377$Of4HK
                           g$macro*$10378$Of4HK)
                         (if (null? g$r$10375$Of4HK)
                           (values
                             g$env$10376$Of4HK
                             g$global*$10377$Of4HK
                             g$macro*$10378$Of4HK)
                           ((case-lambda
                              ((g$x$10379$Of4HK)
                               ((case-lambda
                                  ((g$label$10380$Of4HK g$b$10381$Of4HK)
                                   ((case-lambda
                                      ((g$t$10382$Of4HK)
                                       (if (eqv? g$t$10382$Of4HK 'lexical)
                                         ((case-lambda
                                            ((g$v$10385$Of4HK)
                                             ((case-lambda
                                                ((g$loc$10386$Of4HK
                                                   g$type$10387$Of4HK)
                                                 (g$f$10374$Of4HK
                                                   (cdr g$r$10375$Of4HK)
                                                   (cons
                                                     (g$cons*$5349$Of4HK
                                                       g$label$10380$Of4HK
                                                       g$type$10387$Of4HK
                                                       g$loc$10386$Of4HK)
                                                     g$env$10376$Of4HK)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7140$Of4HK
                                                         g$v$10385$Of4HK)
                                                       g$loc$10386$Of4HK)
                                                     g$global*$10377$Of4HK)
                                                   g$macro*$10378$Of4HK)))
                                              (g$lookup$10373$Of4HK
                                                (g$lexical-var$7140$Of4HK
                                                  g$v$10385$Of4HK))
                                              (if (g$lexical-mutable?$7141$Of4HK
                                                    g$v$10385$Of4HK)
                                                'mutable
                                                'global))))
                                          (g$binding-value$6936$Of4HK
                                            g$b$10381$Of4HK))
                                         (if (eqv? g$t$10382$Of4HK 'local-macro)
                                           ((case-lambda
                                              ((g$loc$10384$Of4HK)
                                               (g$f$10374$Of4HK
                                                 (cdr g$r$10375$Of4HK)
                                                 (cons
                                                   (g$cons*$5349$Of4HK
                                                     g$label$10380$Of4HK
                                                     'global-macro
                                                     g$loc$10384$Of4HK)
                                                   g$env$10376$Of4HK)
                                                 g$global*$10377$Of4HK
                                                 (cons
                                                   (cons
                                                     g$loc$10384$Of4HK
                                                     (g$binding-value$6936$Of4HK
                                                       g$b$10381$Of4HK))
                                                   g$macro*$10378$Of4HK))))
                                            (gensym))
                                           (if (eqv?
                                                 g$t$10382$Of4HK
                                                 'local-macro!)
                                             ((case-lambda
                                                ((g$loc$10383$Of4HK)
                                                 (g$f$10374$Of4HK
                                                   (cdr g$r$10375$Of4HK)
                                                   (cons
                                                     (g$cons*$5349$Of4HK
                                                       g$label$10380$Of4HK
                                                       'global-macro!
                                                       g$loc$10383$Of4HK)
                                                     g$env$10376$Of4HK)
                                                   g$global*$10377$Of4HK
                                                   (cons
                                                     (cons
                                                       g$loc$10383$Of4HK
                                                       (g$binding-value$6936$Of4HK
                                                         g$b$10381$Of4HK))
                                                     g$macro*$10378$Of4HK))))
                                              (gensym))
                                             (if (memv
                                                   g$t$10382$Of4HK
                                                   '($rtd $module))
                                               (g$f$10374$Of4HK
                                                 (cdr g$r$10375$Of4HK)
                                                 (cons
                                                   g$x$10379$Of4HK
                                                   g$env$10376$Of4HK)
                                                 g$global*$10377$Of4HK
                                                 g$macro*$10378$Of4HK)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$6935$Of4HK
                                                   g$b$10381$Of4HK)
                                                 (g$binding-value$6936$Of4HK
                                                   g$b$10381$Of4HK))))))))
                                    (g$binding-type$6935$Of4HK
                                      g$b$10381$Of4HK))))
                                (car g$x$10379$Of4HK)
                                (cdr g$x$10379$Of4HK))))
                            (car g$r$10375$Of4HK)))))))
             g$f$10374$Of4HK)
           g$r$10372$Of4HK
           '()
           '()
           '())))))
   (g$generate-temporaries$7295$Of4HK
     g$generate-temporaries$10727$Of4HK
     (case-lambda
       ((g$ls$10393$Of4HK)
        ((case-lambda
           ((g$t$10394$Of4HK)
            ((case-lambda
               ((g$ls/false$10395$Of4HK)
                (if g$ls/false$10395$Of4HK
                  (apply
                    (case-lambda
                      ((g$ls$10396$Of4HK)
                       (map (case-lambda
                              ((g$x$10397$Of4HK)
                               (g$make-stx$6891$Of4HK
                                 ((case-lambda
                                    ((g$x$10398$Of4HK)
                                     (if ((case-lambda
                                            ((g$t$10399$Of4HK)
                                             (if g$t$10399$Of4HK
                                               g$t$10399$Of4HK
                                               (begin
                                                 '#f
                                                 (string? g$x$10398$Of4HK)))))
                                          (symbol? g$x$10398$Of4HK))
                                       (gensym g$x$10398$Of4HK)
                                       (gensym 't))))
                                  (g$syntax->datum$7305$Of4HK g$x$10397$Of4HK))
                                 g$top-mark*$6860$Of4HK
                                 '()
                                 '())))
                            g$ls$10396$Of4HK)))
                    g$ls/false$10395$Of4HK)
                  ((case-lambda
                     ((g$t$10400$Of4HK)
                      ((case-lambda
                         ((g$ls/false$10401$Of4HK)
                          (if g$ls/false$10401$Of4HK
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10401$Of4HK)
                            (g$syntax-violation$7302$Of4HK
                              '#f
                              '"invalid syntax"
                              g$t$10400$Of4HK))))
                       (g$syntax-dispatch$7196$Of4HK g$t$10400$Of4HK '_))))
                   g$t$10394$Of4HK))))
             (g$syntax-dispatch$7196$Of4HK g$t$10394$Of4HK 'each-any))))
         g$ls$10393$Of4HK))))
   (g$free-identifier=?$7296$Of4HK
     g$free-identifier=?$10728$Of4HK
     (case-lambda
       ((g$x$10402$Of4HK g$y$10403$Of4HK)
        (if (g$id?$6918$Of4HK g$x$10402$Of4HK)
          (if (g$id?$6918$Of4HK g$y$10403$Of4HK)
            (g$free-id=?$6922$Of4HK g$x$10402$Of4HK g$y$10403$Of4HK)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10403$Of4HK))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10402$Of4HK)))))
   (g$bound-identifier=?$7297$Of4HK
     g$bound-identifier=?$10729$Of4HK
     (case-lambda
       ((g$x$10404$Of4HK g$y$10405$Of4HK)
        (if (g$id?$6918$Of4HK g$x$10404$Of4HK)
          (if (g$id?$6918$Of4HK g$y$10405$Of4HK)
            (g$bound-id=?$6921$Of4HK g$x$10404$Of4HK g$y$10405$Of4HK)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10405$Of4HK))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10404$Of4HK)))))
   (g$extract-position-condition$7298$Of4HK
     g$extract-position-condition$10730$Of4HK
     (case-lambda
       ((g$x$10406$Of4HK)
        (letrec* ((g$11024$10407$Of4HK
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11027$Of4HK
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11026$10408$Of4HK '#f)
                  (g$11025$10409$Of4HK
                    (make-record-constructor-descriptor
                      g$11024$10407$Of4HK
                      &condition-rcd
                      g$11026$10408$Of4HK))
                  (g$11023$10410$Of4HK (record-predicate g$11024$10407$Of4HK))
                  (g$make-source-condition$10411$Of4HK
                    (record-constructor g$11025$10409$Of4HK))
                  (g$11021$10412$Of4HK (record-accessor g$11024$10407$Of4HK '0))
                  (g$11022$10413$Of4HK (record-accessor g$11024$10407$Of4HK '1))
                  (g$source-condition?$10414$Of4HK
                    (condition-predicate g$11024$10407$Of4HK))
                  (g$source-filename$10415$Of4HK
                    (condition-accessor
                      g$11024$10407$Of4HK
                      g$11021$10412$Of4HK))
                  (g$source-character$10416$Of4HK
                    (condition-accessor
                      g$11024$10407$Of4HK
                      g$11022$10413$Of4HK)))
          (if (g$stx?$6890$Of4HK g$x$10406$Of4HK)
            ((case-lambda
               ((g$x$10417$Of4HK)
                (if (annotation? g$x$10417$Of4HK)
                  ((case-lambda
                     ((g$src$10418$Of4HK)
                      (if (pair? g$src$10418$Of4HK)
                        (g$make-source-condition$10411$Of4HK
                          (car g$src$10418$Of4HK)
                          (cdr g$src$10418$Of4HK))
                        (condition))))
                   (annotation-source g$x$10417$Of4HK))
                  (condition))))
             (g$stx-expr$6892$Of4HK g$x$10406$Of4HK))
            (condition))))))
   (g$syntax-error$7299$Of4HK
     g$syntax-error$10731$Of4HK
     (case-lambda
       ((g$x$10419$Of4HK . g$args$10420$Of4HK)
        (begin
          (if (g$for-all$5347$Of4HK string? g$args$10420$Of4HK)
            (void)
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10420$Of4HK))
          (raise
            (condition
              (g$make-message-condition$5601$Of4HK
                (if (null? g$args$10420$Of4HK)
                  '"invalid syntax"
                  (apply string-append g$args$10420$Of4HK)))
              (g$make-syntax-violation$5673$Of4HK
                (g$syntax->datum$7305$Of4HK g$x$10419$Of4HK)
                '#f)
              (g$extract-position-condition$7298$Of4HK g$x$10419$Of4HK)
              (g$extract-trace$7300$Of4HK g$x$10419$Of4HK)))))))
   (g$extract-trace$7300$Of4HK
     g$extract-trace$10732$Of4HK
     (case-lambda
       ((g$x$10421$Of4HK)
        (letrec* ((g$11048$10422$Of4HK
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11051$Of4HK
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11050$10423$Of4HK '#f)
                  (g$11049$10424$Of4HK
                    (make-record-constructor-descriptor
                      g$11048$10422$Of4HK
                      &condition-rcd
                      g$11050$10423$Of4HK))
                  (g$11047$10425$Of4HK (record-predicate g$11048$10422$Of4HK))
                  (g$make-trace$10426$Of4HK
                    (record-constructor g$11049$10424$Of4HK))
                  (g$11046$10427$Of4HK (record-accessor g$11048$10422$Of4HK '0))
                  (g$trace?$10428$Of4HK
                    (condition-predicate g$11048$10422$Of4HK))
                  (g$trace-form$10429$Of4HK
                    (condition-accessor
                      g$11048$10422$Of4HK
                      g$11046$10427$Of4HK)))
          ((letrec ((g$f$10430$Of4HK
                      (case-lambda
                        ((g$x$10431$Of4HK)
                         (if (g$stx?$6890$Of4HK g$x$10431$Of4HK)
                           (apply
                             condition
                             (g$make-trace$10426$Of4HK g$x$10431$Of4HK)
                             (map g$f$10430$Of4HK
                                  (g$stx-ae*$6895$Of4HK g$x$10431$Of4HK)))
                           (if (annotation? g$x$10431$Of4HK)
                             (g$make-trace$10426$Of4HK
                               (g$make-stx$6891$Of4HK
                                 g$x$10431$Of4HK
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10430$Of4HK)
           g$x$10421$Of4HK)))))
   (g$syntax-violation*$7301$Of4HK
     g$syntax-violation*$10733$Of4HK
     (case-lambda
       ((g$who$10432$Of4HK
          g$msg$10433$Of4HK
          g$form$10434$Of4HK
          g$condition-object$10435$Of4HK)
        (begin
          (if (string? g$msg$10433$Of4HK)
            (void)
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10433$Of4HK))
          ((case-lambda
             ((g$who$10436$Of4HK)
              (raise
                (condition
                  (if g$who$10436$Of4HK
                    (g$make-who-condition$5647$Of4HK g$who$10436$Of4HK)
                    (condition))
                  (g$make-message-condition$5601$Of4HK g$msg$10433$Of4HK)
                  g$condition-object$10435$Of4HK
                  (g$extract-position-condition$7298$Of4HK g$form$10434$Of4HK)
                  (g$extract-trace$7300$Of4HK g$form$10434$Of4HK)))))
           (if ((case-lambda
                  ((g$t$10437$Of4HK)
                   (if g$t$10437$Of4HK
                     g$t$10437$Of4HK
                     (begin '#f (symbol? g$who$10432$Of4HK)))))
                (string? g$who$10432$Of4HK))
             g$who$10432$Of4HK
             (if (not g$who$10432$Of4HK)
               ((case-lambda
                  ((g$t$10438$Of4HK)
                   ((case-lambda
                      ((g$ls/false$10439$Of4HK)
                       (if (if g$ls/false$10439$Of4HK
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10440$Of4HK)
                                    (g$id?$6918$Of4HK g$id$10440$Of4HK)))
                                 g$ls/false$10439$Of4HK))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10441$Of4HK)
                              (g$syntax->datum$7305$Of4HK g$id$10441$Of4HK)))
                           g$ls/false$10439$Of4HK)
                         ((case-lambda
                            ((g$t$10442$Of4HK)
                             ((case-lambda
                                ((g$ls/false$10443$Of4HK)
                                 (if (if g$ls/false$10443$Of4HK
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10444$Of4HK
                                                g$rest$10445$Of4HK)
                                              (g$id?$6918$Of4HK
                                                g$id$10444$Of4HK)))
                                           g$ls/false$10443$Of4HK))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10446$Of4HK g$rest$10447$Of4HK)
                                        (g$syntax->datum$7305$Of4HK
                                          g$id$10446$Of4HK)))
                                     g$ls/false$10443$Of4HK)
                                   ((case-lambda
                                      ((g$t$10448$Of4HK)
                                       ((case-lambda
                                          ((g$ls/false$10449$Of4HK)
                                           (if g$ls/false$10449$Of4HK
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10449$Of4HK)
                                             (g$syntax-violation$7302$Of4HK
                                               '#f
                                               '"invalid syntax"
                                               g$t$10448$Of4HK))))
                                        (g$syntax-dispatch$7196$Of4HK
                                          g$t$10448$Of4HK
                                          '_))))
                                    g$t$10442$Of4HK))))
                              (g$syntax-dispatch$7196$Of4HK
                                g$t$10442$Of4HK
                                '(any . any)))))
                          g$t$10438$Of4HK))))
                    (g$syntax-dispatch$7196$Of4HK g$t$10438$Of4HK 'any))))
                g$form$10434$Of4HK)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10432$Of4HK))))))))
   (g$syntax-violation$7302$Of4HK
     g$syntax-violation$10734$Of4HK
     (case-lambda
       ((g$who$10450$Of4HK g$msg$10451$Of4HK g$form$10452$Of4HK)
        (g$syntax-violation$7302$Of4HK
          g$who$10450$Of4HK
          g$msg$10451$Of4HK
          g$form$10452$Of4HK
          '#f))
       ((g$who$10453$Of4HK
          g$msg$10454$Of4HK
          g$form$10455$Of4HK
          g$subform$10456$Of4HK)
        (g$syntax-violation*$7301$Of4HK
          g$who$10453$Of4HK
          g$msg$10454$Of4HK
          g$form$10455$Of4HK
          (g$make-syntax-violation$5673$Of4HK
            (g$syntax->datum$7305$Of4HK g$form$10455$Of4HK)
            (g$syntax->datum$7305$Of4HK g$subform$10456$Of4HK))))))
   (g$identifier?$7303$Of4HK
     g$identifier?$10735$Of4HK
     (case-lambda ((g$x$10457$Of4HK) (g$id?$6918$Of4HK g$x$10457$Of4HK))))
   (g$datum->syntax$7304$Of4HK
     g$datum->syntax$10736$Of4HK
     (case-lambda
       ((g$id$10458$Of4HK g$datum$10459$Of4HK)
        (if (g$id?$6918$Of4HK g$id$10458$Of4HK)
          (g$datum->stx$6901$Of4HK g$id$10458$Of4HK g$datum$10459$Of4HK)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10458$Of4HK)))))
   (g$syntax->datum$7305$Of4HK
     g$syntax->datum$10737$Of4HK
     (case-lambda
       ((g$x$10460$Of4HK) (g$stx->datum$6929$Of4HK g$x$10460$Of4HK))))
   (g$compile-r6rs-top-level$7306$Of4HK
     g$compile-r6rs-top-level$10738$Of4HK
     (case-lambda
       ((g$x*$10461$Of4HK)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7256$Of4HK g$x*$10461$Of4HK)))
          (case-lambda
            ((g$lib*$10464$Of4HK g$invoke-code$10465$Of4HK)
             ((case-lambda
                ((g$invoke-code$10466$Of4HK g$lib*$10467$Of4HK)
                 (case-lambda
                   (()
                    (begin
                      (for-each g$invoke-library$6733$Of4HK g$lib*$10467$Of4HK)
                      (eval-core
                        (g$expanded->core$6432$Of4HK
                          g$invoke-code$10466$Of4HK)))))))
              g$invoke-code$10465$Of4HK
              g$lib*$10464$Of4HK)))))))
   (g$pre-compile-r6rs-top-level$7307$Of4HK
     g$pre-compile-r6rs-top-level$10739$Of4HK
     (case-lambda
       ((g$x*$10468$Of4HK)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7256$Of4HK g$x*$10468$Of4HK)))
          (case-lambda
            ((g$lib*$10471$Of4HK g$invoke-code$10472$Of4HK)
             ((case-lambda
                ((g$invoke-code$10473$Of4HK g$lib*$10474$Of4HK)
                 (begin
                   (for-each g$invoke-library$6733$Of4HK g$lib*$10474$Of4HK)
                   (compile-core
                     (g$expanded->core$6432$Of4HK g$invoke-code$10473$Of4HK)))))
              g$invoke-code$10472$Of4HK
              g$lib*$10471$Of4HK)))))))
   (g$interaction-environment$7308$Of4HK
     g$interaction-environment$10740$Of4HK
     ((case-lambda
        ((g$the-env$10475$Of4HK)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10476$Of4HK)
                (if g$t$10476$Of4HK
                  g$t$10476$Of4HK
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10477$Of4HK g$rib$10478$Of4HK)
                        (begin
                          ((case-lambda
                             ((g$subst$10479$Of4HK)
                              (begin
                                (g$set-rib-sym*!$6877$Of4HK
                                  g$rib$10478$Of4HK
                                  (map car g$subst$10479$Of4HK))
                                (g$set-rib-mark**!$6878$Of4HK
                                  g$rib$10478$Of4HK
                                  (map (case-lambda
                                         ((g$x$10480$Of4HK)
                                          g$top-mark*$6860$Of4HK))
                                       g$subst$10479$Of4HK))
                                (g$set-rib-label*!$6879$Of4HK
                                  g$rib$10478$Of4HK
                                  (map cdr g$subst$10479$Of4HK)))))
                           (g$library-subst$6690$Of4HK g$lib$10477$Of4HK))
                          ((case-lambda
                             ((g$env$10481$Of4HK)
                              (begin
                                (set! g$the-env$10475$Of4HK g$env$10481$Of4HK)
                                g$env$10481$Of4HK)))
                           (g$make-interaction-env$7273$Of4HK
                             g$rib$10478$Of4HK
                             '()
                             '())))))
                     (g$find-library-by-name$6726$Of4HK '(ironscheme))
                     (g$make-empty-rib$6881$Of4HK))))))
             g$the-env$10475$Of4HK)))))
      '#f))
   (g$top-level-context$7309$Of4HK
     g$top-level-context$10741$Of4HK
     (g$make-parameter$6187$Of4HK '#f)))
  (g$current-library-expander$6723$Of4HK g$library-expander$7289$Of4HK))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6429$Of4HK
      (case-lambda
        ((g$x$10776$Of4HK)
         ((case-lambda
            ((g$t$10777$Of4HK) (if g$t$10777$Of4HK (cdr g$t$10777$Of4HK) '#f)))
          (assq
            g$x$10776$Of4HK
            '((ellipsis-map . g$ellipsis-map$10633$Of4HK)
              (ironscheme-build . g$ironscheme-build$10770$Of4HK)
              (syntax-error . g$syntax-error$10731$Of4HK)
              (syntax-dispatch . g$syntax-dispatch$10628$Of4HK)
              (compile-system-libraries
                .
                g$compile-system-libraries$10772$Of4HK)
              (compile->closure . g$compile->closure$10774$Of4HK)
              (compile . g$compile$10773$Of4HK)
              (load . g$load$10769$Of4HK)
              (interaction-environment . g$interaction-environment$10740$Of4HK)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$10566$Of4HK)
              (variable-transformer? . g$variable-transformer?$10565$Of4HK)
              (make-variable-transformer
                .
                g$make-variable-transformer$10564$Of4HK)
              (identifier? . g$identifier?$10735$Of4HK)
              (generate-temporaries . g$generate-temporaries$10727$Of4HK)
              (free-identifier=? . g$free-identifier=?$10728$Of4HK)
              (syntax->datum . g$syntax->datum$10737$Of4HK)
              (datum->syntax . g$datum->syntax$10736$Of4HK)
              (bound-identifier=? . g$bound-identifier=?$10729$Of4HK)
              (delete-file . g$delete-file$5219$Of4HK)
              (file-exists? . g$file-exists?$5218$Of4HK)
              (list-sort . g$list-sort$5735$Of4HK)
              (make-eqv-hashtable . g$make-eqv-hashtable$5141$Of4HK)
              (make-eq-hashtable . g$make-eq-hashtable$5140$Of4HK)
              (hashtable-update! . g$hashtable-update!$5147$Of4HK)
              (hashtable-size . g$hashtable-size$5142$Of4HK)
              (hashtable-set! . g$hashtable-set!$5144$Of4HK)
              (hashtable-ref . g$hashtable-ref$5143$Of4HK)
              (hashtable-delete! . g$hashtable-delete!$5145$Of4HK)
              (hashtable-contains? . g$hashtable-contains?$5146$Of4HK)
              (hashtable-clear! . g$hashtable-clear!$5148$Of4HK)
              (open-string-output-port . g$open-string-output-port$6077$Of4HK)
              (make-i/o-write-error . g$make-i/o-write-error$6006$Of4HK)
              (make-i/o-read-error . g$make-i/o-read-error$6000$Of4HK)
              (make-i/o-port-error . g$make-i/o-port-error$6052$Of4HK)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6012$Of4HK)
              (make-i/o-filename-error . g$make-i/o-filename-error$6020$Of4HK)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6028$Of4HK)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6034$Of4HK)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6046$Of4HK)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6040$Of4HK)
              (make-i/o-error . g$make-i/o-error$5994$Of4HK)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6066$Of4HK)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6060$Of4HK)
              (i/o-write-error? . g$i/o-write-error?$6007$Of4HK)
              (i/o-read-error? . g$i/o-read-error?$6001$Of4HK)
              (i/o-port-error? . g$i/o-port-error?$6054$Of4HK)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6014$Of4HK)
              (i/o-filename-error? . g$i/o-filename-error?$6022$Of4HK)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6029$Of4HK)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6035$Of4HK)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6047$Of4HK)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6041$Of4HK)
              (i/o-error? . g$i/o-error?$5995$Of4HK)
              (i/o-error-port . g$i/o-error-port$6055$Of4HK)
              (i/o-error-filename . g$i/o-error-filename$6023$Of4HK)
              (i/o-encoding-error? . g$i/o-encoding-error?$6068$Of4HK)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6069$Of4HK)
              (i/o-decoding-error? . g$i/o-decoding-error?$6061$Of4HK)
              (scheme-report-environment
                .
                g$scheme-report-environment$10718$Of4HK)
              (quotient . g$quotient$5704$Of4HK)
              (null-environment . g$null-environment$10717$Of4HK)
              (remainder . g$remainder$5705$Of4HK)
              (modulo . g$modulo$5706$Of4HK)
              (remove . g$remove$5352$Of4HK)
              (remv . g$remv$5353$Of4HK)
              (remp . g$remp$5338$Of4HK)
              (remq . g$remq$5354$Of4HK)
              (partition . g$partition$5337$Of4HK)
              (memp . g$memp$5344$Of4HK)
              (member . g$member$5343$Of4HK)
              (exists . g$exists$5348$Of4HK)
              (for-all . g$for-all$5347$Of4HK)
              (fold-right . g$fold-right$5351$Of4HK)
              (fold-left . g$fold-left$5350$Of4HK)
              (find . g$find$5336$Of4HK)
              (filter . g$filter$5339$Of4HK)
              (cons* . g$cons*$5349$Of4HK)
              (assv . g$assv$5340$Of4HK)
              (assp . g$assp$5342$Of4HK)
              (assoc . g$assoc$5341$Of4HK)
              (eval . g$eval$10720$Of4HK)
              (environment . g$environment$10716$Of4HK)
              (who-condition? . g$who-condition?$5649$Of4HK)
              (warning? . g$warning?$5610$Of4HK)
              (violation? . g$violation?$5628$Of4HK)
              (undefined-violation? . g$undefined-violation?$5684$Of4HK)
              (syntax-violation? . g$syntax-violation?$5676$Of4HK)
              (syntax-violation-subform . g$syntax-violation-subform$5678$Of4HK)
              (syntax-violation-form . g$syntax-violation-form$5677$Of4HK)
              (syntax-violation . g$syntax-violation$10734$Of4HK)
              (serious-condition? . g$serious-condition?$5616$Of4HK)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5656$Of4HK)
              (message-condition? . g$message-condition?$5603$Of4HK)
              (make-who-condition . g$make-who-condition$5647$Of4HK)
              (make-warning . g$make-warning$5609$Of4HK)
              (make-violation . g$make-violation$5627$Of4HK)
              (make-undefined-violation . g$make-undefined-violation$5683$Of4HK)
              (make-syntax-violation . g$make-syntax-violation$5673$Of4HK)
              (make-serious-condition . g$make-serious-condition$5615$Of4HK)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5655$Of4HK)
              (make-message-condition . g$make-message-condition$5601$Of4HK)
              (make-lexical-violation . g$make-lexical-violation$5667$Of4HK)
              (make-irritants-condition . g$make-irritants-condition$5639$Of4HK)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5661$Of4HK)
              (make-error . g$make-error$5621$Of4HK)
              (make-assertion-violation . g$make-assertion-violation$5633$Of4HK)
              (lexical-violation? . g$lexical-violation?$5668$Of4HK)
              (irritants-condition? . g$irritants-condition?$5641$Of4HK)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5662$Of4HK)
              (error? . g$error?$5622$Of4HK)
              (condition-who . g$condition-who$5650$Of4HK)
              (condition-message . g$condition-message$5604$Of4HK)
              (condition-irritants . g$condition-irritants$5642$Of4HK)
              (assertion-violation? . g$assertion-violation?$5634$Of4HK)
              (native-endianness . g$native-endianness$5466$Of4HK)
              (bytevector-u64-set! . g$bytevector-u64-set!$5487$Of4HK)
              (bytevector-u64-ref . g$bytevector-u64-ref$5483$Of4HK)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5489$Of4HK)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5485$Of4HK)
              (bytevector-u32-set! . g$bytevector-u32-set!$5479$Of4HK)
              (bytevector-u32-ref . g$bytevector-u32-ref$5475$Of4HK)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5481$Of4HK)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5477$Of4HK)
              (bytevector-u16-set! . g$bytevector-u16-set!$5471$Of4HK)
              (bytevector-u16-ref . g$bytevector-u16-ref$5467$Of4HK)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5473$Of4HK)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5469$Of4HK)
              (bytevector-s64-set! . g$bytevector-s64-set!$5488$Of4HK)
              (bytevector-s64-ref . g$bytevector-s64-ref$5484$Of4HK)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5490$Of4HK)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5486$Of4HK)
              (bytevector-s32-set! . g$bytevector-s32-set!$5480$Of4HK)
              (bytevector-s32-ref . g$bytevector-s32-ref$5476$Of4HK)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5482$Of4HK)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5478$Of4HK)
              (bytevector-s16-set! . g$bytevector-s16-set!$5472$Of4HK)
              (bytevector-s16-ref . g$bytevector-s16-ref$5468$Of4HK)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5474$Of4HK)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5470$Of4HK)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5493$Of4HK)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5491$Of4HK)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5494$Of4HK)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5492$Of4HK)
              (no-nans-violation? . g$no-nans-violation?$5909$Of4HK)
              (no-infinities-violation? . g$no-infinities-violation?$5903$Of4HK)
              (make-no-nans-violation . g$make-no-nans-violation$5908$Of4HK)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$5902$Of4HK)
              (fxrotate-bit-field . g$fxrotate-bit-field$5885$Of4HK)
              (fxif . g$fxif$5879$Of4HK)
              (fxcopy-bit-field . g$fxcopy-bit-field$5882$Of4HK)
              (fxcopy-bit . g$fxcopy-bit$5880$Of4HK)
              (fxbit-field . g$fxbit-field$5881$Of4HK)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$5884$Of4HK)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$5883$Of4HK)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$5830$Of4HK)
              (bitwise-reverse-bit-field
                .
                g$bitwise-reverse-bit-field$5831$Of4HK)
              (bitwise-if . g$bitwise-if$5824$Of4HK)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$5827$Of4HK)
              (bitwise-copy-bit . g$bitwise-copy-bit$5825$Of4HK)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$5829$Of4HK)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$5828$Of4HK)
              (rationalize . g$rationalize$4905$Of4HK)
              (cddddr . g$cddddr$4904$Of4HK)
              (cdddar . g$cdddar$4903$Of4HK)
              (cddadr . g$cddadr$4902$Of4HK)
              (cddaar . g$cddaar$4901$Of4HK)
              (cdaddr . g$cdaddr$4900$Of4HK)
              (cdadar . g$cdadar$4899$Of4HK)
              (cdaadr . g$cdaadr$4898$Of4HK)
              (cdaaar . g$cdaaar$4897$Of4HK)
              (cadddr . g$cadddr$4896$Of4HK)
              (caddar . g$caddar$4895$Of4HK)
              (cadadr . g$cadadr$4894$Of4HK)
              (cadaar . g$cadaar$4893$Of4HK)
              (caaddr . g$caaddr$4892$Of4HK)
              (caadar . g$caadar$4891$Of4HK)
              (caaadr . g$caaadr$4890$Of4HK)
              (caaaar . g$caaaar$4889$Of4HK)
              (cdddr . g$cdddr$4888$Of4HK)
              (cddar . g$cddar$4887$Of4HK)
              (cdadr . g$cdadr$4886$Of4HK)
              (cdaar . g$cdaar$4885$Of4HK)
              (caddr . g$caddr$4884$Of4HK)
              (cadar . g$cadar$4883$Of4HK)
              (caadr . g$caadr$4882$Of4HK)
              (caaar . g$caaar$4881$Of4HK)
              (cddr . g$cddr$4880$Of4HK)
              (cdar . g$cdar$4879$Of4HK)
              (cadr . g$cadr$4878$Of4HK)
              (caar . g$caar$4877$Of4HK)
              (printf . g$printf$6101$Of4HK)
              (fprintf . g$fprintf$6102$Of4HK)
              (format . g$format$6103$Of4HK)
              (make-traced-macro . g$make-traced-macro$6107$Of4HK)
              (make-parameter . g$make-parameter$6187$Of4HK)
              (environment-symbols . g$environment-symbols$10714$Of4HK)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$10713$Of4HK)
              (library-path . g$library-path$6715$Of4HK)
              (library-extensions . g$library-extensions$6716$Of4HK)
              (installed-libraries . g$installed-libraries$6736$Of4HK)
              (expand . g$expand$10719$Of4HK)))))))
    (g$install-library$6731$Of4HK
      'g$11796$Of4HK
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$11733$Of4HK)
        (cosh . g$11732$Of4HK)
        (sinh . g$11731$Of4HK)
        (make-guid . g$11730$Of4HK)
        (unspecified? . g$11729$Of4HK)
        (make-trace . g$11728$Of4HK)
        (make-list . g$11727$Of4HK)
        (last-pair . g$11726$Of4HK)
        (load-r5rs . g$11725$Of4HK)
        (license . g$11724$Of4HK)
        (stacktrace . g$11723$Of4HK)
        (ironscheme-build . g$11117$Of4HK)
        (set-symbol-value! . g$11709$Of4HK)
        (symbol-value . g$11708$Of4HK)
        (ungensym . g$11707$Of4HK)
        (gensym . g$11706$Of4HK)
        (void . g$11705$Of4HK)
        (compile-system-libraries . g$11119$Of4HK)
        (compile->closure . g$11121$Of4HK)
        (compile . g$11120$Of4HK)
        (load . g$11116$Of4HK)
        (interaction-environment . g$8206$Of4HK)
        (string-upcase . g$11701$Of4HK)
        (string-titlecase . g$11700$Of4HK)
        (string-normalize-nfkd . g$11699$Of4HK)
        (string-normalize-nfkc . g$11698$Of4HK)
        (string-normalize-nfd . g$11697$Of4HK)
        (string-normalize-nfc . g$11696$Of4HK)
        (string-foldcase . g$11695$Of4HK)
        (string-downcase . g$11694$Of4HK)
        (string-ci>? . g$11693$Of4HK)
        (string-ci>=? . g$11692$Of4HK)
        (string-ci=? . g$11691$Of4HK)
        (string-ci<? . g$11690$Of4HK)
        (string-ci<=? . g$11689$Of4HK)
        (char-whitespace? . g$11688$Of4HK)
        (char-upper-case? . g$11687$Of4HK)
        (char-title-case? . g$11686$Of4HK)
        (char-numeric? . g$11685$Of4HK)
        (char-lower-case? . g$11684$Of4HK)
        (char-general-category . g$11683$Of4HK)
        (char-upcase . g$11682$Of4HK)
        (char-titlecase . g$11681$Of4HK)
        (char-foldcase . g$11680$Of4HK)
        (char-downcase . g$11679$Of4HK)
        (char-ci>? . g$11678$Of4HK)
        (char-ci>=? . g$11677$Of4HK)
        (char-ci=? . g$11676$Of4HK)
        (char-ci<? . g$11675$Of4HK)
        (char-ci<=? . g$11674$Of4HK)
        (char-alphabetic? . g$11673$Of4HK)
        (variable-transformer-procedure . g$7810$Of4HK)
        (variable-transformer? . g$7809$Of4HK)
        (make-variable-transformer . g$7808$Of4HK)
        (identifier? . g$8201$Of4HK)
        (generate-temporaries . g$8193$Of4HK)
        (free-identifier=? . g$8194$Of4HK)
        (syntax->datum . g$8203$Of4HK)
        (datum->syntax . g$8202$Of4HK)
        (bound-identifier=? . g$8195$Of4HK)
        (record-type-descriptor? . g$11672$Of4HK)
        (record-predicate . g$11671$Of4HK)
        (record-mutator . g$11670$Of4HK)
        (record-constructor . g$11669$Of4HK)
        (record-accessor . g$11668$Of4HK)
        (make-record-type-descriptor . g$11667$Of4HK)
        (make-record-constructor-descriptor . g$11666$Of4HK)
        (record? . g$11665$Of4HK)
        (record-type-uid . g$11664$Of4HK)
        (record-type-sealed? . g$11663$Of4HK)
        (record-type-parent . g$11662$Of4HK)
        (record-type-opaque? . g$11661$Of4HK)
        (record-type-name . g$11660$Of4HK)
        (record-type-generative? . g$11659$Of4HK)
        (record-type-field-names . g$11658$Of4HK)
        (record-rtd . g$11657$Of4HK)
        (record-field-mutable? . g$11656$Of4HK)
        (delete-file . g$5991$Of4HK)
        (file-exists? . g$5990$Of4HK)
        (vector-sort! . g$11655$Of4HK)
        (vector-sort . g$11654$Of4HK)
        (list-sort . g$6498$Of4HK)
        (symbol-hash . g$11653$Of4HK)
        (string-ci-hash . g$11652$Of4HK)
        (string-hash . g$11651$Of4HK)
        (equal-hash . g$11650$Of4HK)
        (hashtable-equivalence-function . g$11649$Of4HK)
        (make-hashtable . g$11648$Of4HK)
        (hashtable-hash-function . g$11647$Of4HK)
        (make-eqv-hashtable . g$5958$Of4HK)
        (make-eq-hashtable . g$5957$Of4HK)
        (hashtable? . g$11646$Of4HK)
        (hashtable-update! . g$5964$Of4HK)
        (hashtable-size . g$5959$Of4HK)
        (hashtable-set! . g$5961$Of4HK)
        (hashtable-ref . g$5960$Of4HK)
        (hashtable-mutable? . g$11645$Of4HK)
        (hashtable-keys . g$11644$Of4HK)
        (hashtable-entries . g$11643$Of4HK)
        (hashtable-delete! . g$5962$Of4HK)
        (hashtable-copy . g$11642$Of4HK)
        (hashtable-contains? . g$5963$Of4HK)
        (hashtable-clear! . g$5965$Of4HK)
        (call-with-output-file . g$11641$Of4HK)
        (call-with-input-file . g$11640$Of4HK)
        (write-char . g$11639$Of4HK)
        (write . g$11638$Of4HK)
        (with-output-to-file . g$11637$Of4HK)
        (with-input-from-file . g$11636$Of4HK)
        (read-char . g$11635$Of4HK)
        (read . g$11634$Of4HK)
        (peek-char . g$11633$Of4HK)
        (open-output-file . g$11632$Of4HK)
        (open-input-file . g$11631$Of4HK)
        (newline . g$11630$Of4HK)
        (display . g$11629$Of4HK)
        (close-output-port . g$11628$Of4HK)
        (close-input-port . g$11627$Of4HK)
        (eof-object? . g$11626$Of4HK)
        (eof-object . g$11625$Of4HK)
        (current-error-port . g$11624$Of4HK)
        (current-output-port . g$11623$Of4HK)
        (current-input-port . g$11622$Of4HK)
        (output-port? . g$11621$Of4HK)
        (input-port? . g$11620$Of4HK)
        (utf-8-codec . g$11619$Of4HK)
        (utf-16-codec . g$11618$Of4HK)
        (transcoder-error-handling-mode . g$11617$Of4HK)
        (transcoder-eol-style . g$11616$Of4HK)
        (transcoder-codec . g$11615$Of4HK)
        (transcoded-port . g$11614$Of4HK)
        (textual-port? . g$11613$Of4HK)
        (string->bytevector . g$11612$Of4HK)
        (standard-output-port . g$11611$Of4HK)
        (standard-input-port . g$11610$Of4HK)
        (standard-error-port . g$11609$Of4HK)
        (set-port-position! . g$11608$Of4HK)
        (put-u8 . g$11607$Of4HK)
        (put-string . g$11606$Of4HK)
        (put-datum . g$11605$Of4HK)
        (put-char . g$11604$Of4HK)
        (put-bytevector . g$11603$Of4HK)
        (port? . g$11602$Of4HK)
        (port-transcoder . g$11601$Of4HK)
        (port-position . g$11600$Of4HK)
        (port-has-set-port-position!? . g$11599$Of4HK)
        (port-has-port-position? . g$11598$Of4HK)
        (port-eof? . g$11597$Of4HK)
        (output-port-buffer-mode . g$11596$Of4HK)
        (open-string-output-port . g$6889$Of4HK)
        (open-string-input-port . g$11595$Of4HK)
        (open-file-output-port . g$11594$Of4HK)
        (open-file-input/output-port . g$11593$Of4HK)
        (open-file-input-port . g$11592$Of4HK)
        (open-bytevector-output-port . g$11591$Of4HK)
        (open-bytevector-input-port . g$11590$Of4HK)
        (native-transcoder . g$11589$Of4HK)
        (native-eol-style . g$11588$Of4HK)
        (make-transcoder . g$11587$Of4HK)
        (latin-1-codec . g$11586$Of4HK)
        (make-i/o-write-error . g$6746$Of4HK)
        (make-i/o-read-error . g$6732$Of4HK)
        (make-i/o-port-error . g$6851$Of4HK)
        (make-i/o-invalid-position-error . g$6761$Of4HK)
        (make-i/o-filename-error . g$6778$Of4HK)
        (make-i/o-file-protection-error . g$6794$Of4HK)
        (make-i/o-file-is-read-only-error . g$6808$Of4HK)
        (make-i/o-file-does-not-exist-error . g$6836$Of4HK)
        (make-i/o-file-already-exists-error . g$6822$Of4HK)
        (make-i/o-error . g$6718$Of4HK)
        (make-i/o-encoding-error . g$6882$Of4HK)
        (make-i/o-decoding-error . g$6867$Of4HK)
        (make-custom-textual-output-port . g$11585$Of4HK)
        (make-custom-textual-input/output-port . g$11584$Of4HK)
        (make-custom-textual-input-port . g$11583$Of4HK)
        (make-custom-binary-output-port . g$11582$Of4HK)
        (make-custom-binary-input/output-port . g$11581$Of4HK)
        (make-custom-binary-input-port . g$11580$Of4HK)
        (make-bytevector . g$11579$Of4HK)
        (lookahead-u8 . g$11578$Of4HK)
        (lookahead-char . g$11577$Of4HK)
        (i/o-write-error? . g$6747$Of4HK)
        (i/o-read-error? . g$6733$Of4HK)
        (i/o-port-error? . g$6853$Of4HK)
        (i/o-invalid-position-error? . g$6763$Of4HK)
        (i/o-filename-error? . g$6780$Of4HK)
        (i/o-file-protection-error? . g$6795$Of4HK)
        (i/o-file-is-read-only-error? . g$6809$Of4HK)
        (i/o-file-does-not-exist-error? . g$6837$Of4HK)
        (i/o-file-already-exists-error? . g$6823$Of4HK)
        (i/o-error? . g$6719$Of4HK)
        (i/o-error-port . g$6854$Of4HK)
        (i/o-error-filename . g$6781$Of4HK)
        (i/o-encoding-error? . g$6884$Of4HK)
        (i/o-encoding-error-char . g$6885$Of4HK)
        (i/o-decoding-error? . g$6868$Of4HK)
        (get-u8 . g$11576$Of4HK)
        (get-string-n! . g$11575$Of4HK)
        (get-string-n . g$11574$Of4HK)
        (get-string-all . g$11573$Of4HK)
        (get-line . g$11572$Of4HK)
        (get-datum . g$11571$Of4HK)
        (get-char . g$11570$Of4HK)
        (get-bytevector-some . g$11569$Of4HK)
        (get-bytevector-n! . g$11568$Of4HK)
        (get-bytevector-n . g$11567$Of4HK)
        (get-bytevector-all . g$11566$Of4HK)
        (flush-output-port . g$11565$Of4HK)
        (close-port . g$11564$Of4HK)
        (call-with-string-output-port . g$11563$Of4HK)
        (call-with-port . g$11562$Of4HK)
        (call-with-bytevector-output-port . g$11561$Of4HK)
        (bytevector->string . g$11560$Of4HK)
        (buffer-mode? . g$11559$Of4HK)
        (binary-port? . g$11558$Of4HK)
        (scheme-report-environment . g$8184$Of4HK)
        (quotient . g$6485$Of4HK)
        (null-environment . g$8183$Of4HK)
        (remainder . g$6486$Of4HK)
        (modulo . g$6487$Of4HK)
        (inexact->exact . g$11557$Of4HK)
        (force . g$11556$Of4HK)
        (exact->inexact . g$11555$Of4HK)
        (exit . g$11554$Of4HK)
        (command-line . g$11553$Of4HK)
        (string-fill! . g$11552$Of4HK)
        (string-set! . g$11551$Of4HK)
        (set-cdr! . g$11550$Of4HK)
        (set-car! . g$11549$Of4HK)
        (remove . g$6071$Of4HK)
        (remv . g$6072$Of4HK)
        (remp . g$6057$Of4HK)
        (remq . g$6073$Of4HK)
        (partition . g$6056$Of4HK)
        (memv . g$11548$Of4HK)
        (memq . g$11547$Of4HK)
        (memp . g$6063$Of4HK)
        (member . g$6062$Of4HK)
        (exists . g$6067$Of4HK)
        (for-all . g$6066$Of4HK)
        (fold-right . g$6070$Of4HK)
        (fold-left . g$6069$Of4HK)
        (find . g$6055$Of4HK)
        (filter . g$6058$Of4HK)
        (cons* . g$6068$Of4HK)
        (assv . g$6059$Of4HK)
        (assq . g$11546$Of4HK)
        (assp . g$6061$Of4HK)
        (assoc . g$6060$Of4HK)
        (with-exception-handler . g$11545$Of4HK)
        (raise-continuable . g$11544$Of4HK)
        (raise . g$11543$Of4HK)
        (eval . g$8186$Of4HK)
        (environment . g$8182$Of4HK)
        (make-enumeration . g$11542$Of4HK)
        (enum-set=? . g$11541$Of4HK)
        (enum-set-universe . g$11540$Of4HK)
        (enum-set-union . g$11539$Of4HK)
        (enum-set-subset? . g$11538$Of4HK)
        (enum-set-projection . g$11537$Of4HK)
        (enum-set-member? . g$11536$Of4HK)
        (enum-set-intersection . g$11535$Of4HK)
        (enum-set-indexer . g$11534$Of4HK)
        (enum-set-difference . g$11533$Of4HK)
        (enum-set-constructor . g$11532$Of4HK)
        (enum-set-complement . g$11531$Of4HK)
        (enum-set->list . g$11530$Of4HK)
        (who-condition? . g$6396$Of4HK)
        (warning? . g$6307$Of4HK)
        (violation? . g$6349$Of4HK)
        (undefined-violation? . g$6473$Of4HK)
        (syntax-violation? . g$6457$Of4HK)
        (syntax-violation-subform . g$6459$Of4HK)
        (syntax-violation-form . g$6458$Of4HK)
        (syntax-violation . g$8200$Of4HK)
        (simple-conditions . g$11529$Of4HK)
        (serious-condition? . g$6321$Of4HK)
        (non-continuable-violation? . g$6411$Of4HK)
        (message-condition? . g$6292$Of4HK)
        (make-who-condition . g$6394$Of4HK)
        (make-warning . g$6306$Of4HK)
        (make-violation . g$6348$Of4HK)
        (make-undefined-violation . g$6472$Of4HK)
        (make-syntax-violation . g$6454$Of4HK)
        (make-serious-condition . g$6320$Of4HK)
        (make-non-continuable-violation . g$6410$Of4HK)
        (make-message-condition . g$6290$Of4HK)
        (make-lexical-violation . g$6438$Of4HK)
        (make-irritants-condition . g$6377$Of4HK)
        (make-implementation-restriction-violation . g$6424$Of4HK)
        (make-error . g$6334$Of4HK)
        (make-assertion-violation . g$6362$Of4HK)
        (lexical-violation? . g$6439$Of4HK)
        (irritants-condition? . g$6379$Of4HK)
        (implementation-restriction-violation? . g$6425$Of4HK)
        (error? . g$6335$Of4HK)
        (condition-who . g$6397$Of4HK)
        (condition-predicate . g$11528$Of4HK)
        (condition-message . g$6293$Of4HK)
        (condition-irritants . g$6380$Of4HK)
        (condition-accessor . g$11527$Of4HK)
        (condition . g$11526$Of4HK)
        (assertion-violation? . g$6363$Of4HK)
        (condition? . g$11525$Of4HK)
        (utf32->string . g$11524$Of4HK)
        (utf16->string . g$11523$Of4HK)
        (utf8->string . g$11522$Of4HK)
        (uint-list->bytevector . g$11521$Of4HK)
        (u8-list->bytevector . g$11520$Of4HK)
        (string->utf8 . g$11519$Of4HK)
        (string->utf32 . g$11518$Of4HK)
        (string->utf16 . g$11517$Of4HK)
        (sint-list->bytevector . g$11516$Of4HK)
        (native-endianness . g$6147$Of4HK)
        (bytevector? . g$11515$Of4HK)
        (bytevector=? . g$11514$Of4HK)
        (bytevector-uint-set! . g$11513$Of4HK)
        (bytevector-uint-ref . g$11512$Of4HK)
        (bytevector-u8-set! . g$11511$Of4HK)
        (bytevector-u8-ref . g$11510$Of4HK)
        (bytevector-u64-set! . g$6168$Of4HK)
        (bytevector-u64-ref . g$6164$Of4HK)
        (bytevector-u64-native-set! . g$6170$Of4HK)
        (bytevector-u64-native-ref . g$6166$Of4HK)
        (bytevector-u32-set! . g$6160$Of4HK)
        (bytevector-u32-ref . g$6156$Of4HK)
        (bytevector-u32-native-set! . g$6162$Of4HK)
        (bytevector-u32-native-ref . g$6158$Of4HK)
        (bytevector-u16-set! . g$6152$Of4HK)
        (bytevector-u16-ref . g$6148$Of4HK)
        (bytevector-u16-native-set! . g$6154$Of4HK)
        (bytevector-u16-native-ref . g$6150$Of4HK)
        (bytevector-sint-set! . g$11509$Of4HK)
        (bytevector-sint-ref . g$11508$Of4HK)
        (bytevector-s8-set! . g$11507$Of4HK)
        (bytevector-s8-ref . g$11506$Of4HK)
        (bytevector-s64-set! . g$6169$Of4HK)
        (bytevector-s64-ref . g$6165$Of4HK)
        (bytevector-s64-native-set! . g$6171$Of4HK)
        (bytevector-s64-native-ref . g$6167$Of4HK)
        (bytevector-s32-set! . g$6161$Of4HK)
        (bytevector-s32-ref . g$6157$Of4HK)
        (bytevector-s32-native-set! . g$6163$Of4HK)
        (bytevector-s32-native-ref . g$6159$Of4HK)
        (bytevector-s16-set! . g$6153$Of4HK)
        (bytevector-s16-ref . g$6149$Of4HK)
        (bytevector-s16-native-set! . g$6155$Of4HK)
        (bytevector-s16-native-ref . g$6151$Of4HK)
        (bytevector-length . g$11505$Of4HK)
        (bytevector-ieee-single-set! . g$11504$Of4HK)
        (bytevector-ieee-single-ref . g$11503$Of4HK)
        (bytevector-ieee-single-native-set! . g$6174$Of4HK)
        (bytevector-ieee-single-native-ref . g$6172$Of4HK)
        (bytevector-ieee-double-set! . g$11502$Of4HK)
        (bytevector-ieee-double-ref . g$11501$Of4HK)
        (bytevector-ieee-double-native-set! . g$6175$Of4HK)
        (bytevector-ieee-double-native-ref . g$6173$Of4HK)
        (bytevector-fill! . g$11500$Of4HK)
        (bytevector-copy! . g$11499$Of4HK)
        (bytevector-copy . g$11498$Of4HK)
        (bytevector->uint-list . g$11497$Of4HK)
        (bytevector->u8-list . g$11496$Of4HK)
        (bytevector->sint-list . g$11495$Of4HK)
        (no-nans-violation? . g$6704$Of4HK)
        (no-infinities-violation? . g$6690$Of4HK)
        (make-no-nans-violation . g$6703$Of4HK)
        (make-no-infinities-violation . g$6689$Of4HK)
        (real->flonum . g$11494$Of4HK)
        (flzero? . g$11493$Of4HK)
        (fltruncate . g$11492$Of4HK)
        (fltan . g$11491$Of4HK)
        (flsqrt . g$11490$Of4HK)
        (flsin . g$11489$Of4HK)
        (flround . g$11488$Of4HK)
        (flpositive? . g$11487$Of4HK)
        (flonum? . g$11486$Of4HK)
        (flodd? . g$11485$Of4HK)
        (flnumerator . g$11484$Of4HK)
        (flnegative? . g$11483$Of4HK)
        (flnan? . g$11482$Of4HK)
        (flmod0 . g$11481$Of4HK)
        (flmod . g$11480$Of4HK)
        (flmin . g$11479$Of4HK)
        (flmax . g$11478$Of4HK)
        (fllog . g$11477$Of4HK)
        (flinteger? . g$11476$Of4HK)
        (flinfinite? . g$11475$Of4HK)
        (flfloor . g$11474$Of4HK)
        (flfinite? . g$11473$Of4HK)
        (flexpt . g$11472$Of4HK)
        (flexp . g$11471$Of4HK)
        (fleven? . g$11470$Of4HK)
        (fldiv0-and-mod0 . g$11469$Of4HK)
        (fldiv0 . g$11468$Of4HK)
        (fldiv-and-mod . g$11467$Of4HK)
        (fldiv . g$11466$Of4HK)
        (fldenominator . g$11465$Of4HK)
        (flcos . g$11464$Of4HK)
        (flceiling . g$11463$Of4HK)
        (flatan . g$11462$Of4HK)
        (flasin . g$11461$Of4HK)
        (flacos . g$11460$Of4HK)
        (flabs . g$11459$Of4HK)
        (fl>? . g$11458$Of4HK)
        (fl>=? . g$11457$Of4HK)
        (fl=? . g$11456$Of4HK)
        (fl<? . g$11455$Of4HK)
        (fl<=? . g$11454$Of4HK)
        (fl/ . g$11453$Of4HK)
        (fl- . g$11452$Of4HK)
        (fl+ . g$11451$Of4HK)
        (fl* . g$11450$Of4HK)
        (fixnum->flonum . g$11449$Of4HK)
        (fxzero? . g$11448$Of4HK)
        (fxxor . g$11447$Of4HK)
        (fxrotate-bit-field . g$6635$Of4HK)
        (fxreverse-bit-field . g$11446$Of4HK)
        (fxpositive? . g$11445$Of4HK)
        (fxodd? . g$11444$Of4HK)
        (fxnot . g$11443$Of4HK)
        (fxnegative? . g$11442$Of4HK)
        (fxmod0 . g$11441$Of4HK)
        (fxmod . g$11440$Of4HK)
        (fxmin . g$11439$Of4HK)
        (fxmax . g$11438$Of4HK)
        (fxlength . g$11437$Of4HK)
        (fxior . g$11436$Of4HK)
        (fxif . g$6629$Of4HK)
        (fxfirst-bit-set . g$11435$Of4HK)
        (fxeven? . g$11434$Of4HK)
        (fxdiv0-and-mod0 . g$11433$Of4HK)
        (fxdiv0 . g$11432$Of4HK)
        (fxdiv-and-mod . g$11431$Of4HK)
        (fxdiv . g$11430$Of4HK)
        (fxcopy-bit-field . g$6632$Of4HK)
        (fxcopy-bit . g$6630$Of4HK)
        (fxbit-set? . g$11429$Of4HK)
        (fxbit-field . g$6631$Of4HK)
        (fxbit-count . g$11428$Of4HK)
        (fxarithmetic-shift-right . g$6634$Of4HK)
        (fxarithmetic-shift-left . g$6633$Of4HK)
        (fxarithmetic-shift . g$11427$Of4HK)
        (fxand . g$11426$Of4HK)
        (fx>? . g$11425$Of4HK)
        (fx>=? . g$11424$Of4HK)
        (fx=? . g$11423$Of4HK)
        (fx<? . g$11422$Of4HK)
        (fx<=? . g$11421$Of4HK)
        (fx-/carry . g$11420$Of4HK)
        (fx- . g$11419$Of4HK)
        (fx+/carry . g$11418$Of4HK)
        (fx+ . g$11417$Of4HK)
        (fx*/carry . g$11416$Of4HK)
        (fx* . g$11415$Of4HK)
        (greatest-fixnum . g$11414$Of4HK)
        (least-fixnum . g$11413$Of4HK)
        (fixnum-width . g$11412$Of4HK)
        (fixnum? . g$11411$Of4HK)
        (bitwise-rotate-bit-field . g$6583$Of4HK)
        (bitwise-reverse-bit-field . g$6584$Of4HK)
        (bitwise-length . g$11410$Of4HK)
        (bitwise-if . g$6577$Of4HK)
        (bitwise-first-bit-set . g$11409$Of4HK)
        (bitwise-copy-bit-field . g$6580$Of4HK)
        (bitwise-copy-bit . g$6578$Of4HK)
        (bitwise-bit-set? . g$11408$Of4HK)
        (bitwise-bit-field . g$11407$Of4HK)
        (bitwise-bit-count . g$11406$Of4HK)
        (bitwise-xor . g$11405$Of4HK)
        (bitwise-ior . g$11404$Of4HK)
        (bitwise-and . g$11403$Of4HK)
        (bitwise-not . g$11402$Of4HK)
        (bitwise-arithmetic-shift-right . g$6582$Of4HK)
        (bitwise-arithmetic-shift-left . g$6581$Of4HK)
        (bitwise-arithmetic-shift . g$11401$Of4HK)
        (zero? . g$11400$Of4HK)
        (vector? . g$11399$Of4HK)
        (vector-set! . g$11398$Of4HK)
        (vector-ref . g$11397$Of4HK)
        (vector-map . g$11396$Of4HK)
        (vector-length . g$11395$Of4HK)
        (vector-for-each . g$11394$Of4HK)
        (vector-fill! . g$11393$Of4HK)
        (vector->list . g$11392$Of4HK)
        (vector . g$11391$Of4HK)
        (values . g$11390$Of4HK)
        (truncate . g$11389$Of4HK)
        (tan . g$11388$Of4HK)
        (symbol? . g$11387$Of4HK)
        (symbol=? . g$11386$Of4HK)
        (symbol->string . g$11385$Of4HK)
        (substring . g$11384$Of4HK)
        (string? . g$11383$Of4HK)
        (string>? . g$11382$Of4HK)
        (string>=? . g$11381$Of4HK)
        (string=? . g$11380$Of4HK)
        (string<? . g$11379$Of4HK)
        (string<=? . g$11378$Of4HK)
        (string-ref . g$11377$Of4HK)
        (string-length . g$11376$Of4HK)
        (string-for-each . g$11375$Of4HK)
        (string-copy . g$11374$Of4HK)
        (string-append . g$11373$Of4HK)
        (string->symbol . g$11372$Of4HK)
        (string->number . g$11371$Of4HK)
        (string->list . g$11370$Of4HK)
        (string . g$11369$Of4HK)
        (sqrt . g$11368$Of4HK)
        (sin . g$11367$Of4HK)
        (round . g$11366$Of4HK)
        (reverse . g$11365$Of4HK)
        (real? . g$11364$Of4HK)
        (real-valued? . g$11363$Of4HK)
        (real-part . g$11362$Of4HK)
        (rationalize . g$5608$Of4HK)
        (rational? . g$11361$Of4HK)
        (rational-valued? . g$11360$Of4HK)
        (procedure? . g$11359$Of4HK)
        (positive? . g$11358$Of4HK)
        (pair? . g$11357$Of4HK)
        (odd? . g$11356$Of4HK)
        (numerator . g$11355$Of4HK)
        (number? . g$11354$Of4HK)
        (number->string . g$11353$Of4HK)
        (null? . g$11352$Of4HK)
        (not . g$11351$Of4HK)
        (negative? . g$11350$Of4HK)
        (nan? . g$11349$Of4HK)
        (min . g$11348$Of4HK)
        (max . g$11347$Of4HK)
        (map . g$11346$Of4HK)
        (make-vector . g$11345$Of4HK)
        (make-string . g$11344$Of4HK)
        (make-rectangular . g$11343$Of4HK)
        (make-polar . g$11342$Of4HK)
        (magnitude . g$11341$Of4HK)
        (log . g$11340$Of4HK)
        (list? . g$11339$Of4HK)
        (list-tail . g$11338$Of4HK)
        (list-ref . g$11337$Of4HK)
        (list->vector . g$11336$Of4HK)
        (list->string . g$11335$Of4HK)
        (list . g$11334$Of4HK)
        (length . g$11333$Of4HK)
        (lcm . g$11332$Of4HK)
        (integer? . g$11331$Of4HK)
        (integer-valued? . g$11330$Of4HK)
        (integer->char . g$11329$Of4HK)
        (infinite? . g$11328$Of4HK)
        (inexact? . g$11327$Of4HK)
        (inexact . g$11326$Of4HK)
        (imag-part . g$11325$Of4HK)
        (gcd . g$11324$Of4HK)
        (for-each . g$11323$Of4HK)
        (floor . g$11322$Of4HK)
        (finite? . g$11321$Of4HK)
        (expt . g$11320$Of4HK)
        (exp . g$11319$Of4HK)
        (exact? . g$11318$Of4HK)
        (exact-integer-sqrt . g$11317$Of4HK)
        (exact . g$11316$Of4HK)
        (even? . g$11315$Of4HK)
        (error . g$11314$Of4HK)
        (eqv? . g$11313$Of4HK)
        (equal? . g$11312$Of4HK)
        (eq? . g$11311$Of4HK)
        (dynamic-wind . g$11310$Of4HK)
        (div0-and-mod0 . g$11309$Of4HK)
        (mod0 . g$11308$Of4HK)
        (div0 . g$11307$Of4HK)
        (div-and-mod . g$11306$Of4HK)
        (mod . g$11305$Of4HK)
        (div . g$11304$Of4HK)
        (denominator . g$11303$Of4HK)
        (cos . g$11302$Of4HK)
        (cons . g$11301$Of4HK)
        (complex? . g$11300$Of4HK)
        (char? . g$11299$Of4HK)
        (char>? . g$11298$Of4HK)
        (char>=? . g$11297$Of4HK)
        (char=? . g$11296$Of4HK)
        (char<? . g$11295$Of4HK)
        (char<=? . g$11294$Of4HK)
        (char->integer . g$11293$Of4HK)
        (ceiling . g$11292$Of4HK)
        (call-with-values . g$11291$Of4HK)
        (call/cc . g$11290$Of4HK)
        (call-with-current-continuation . g$11289$Of4HK)
        (cddddr . g$5607$Of4HK)
        (cdddar . g$5606$Of4HK)
        (cddadr . g$5605$Of4HK)
        (cddaar . g$5604$Of4HK)
        (cdaddr . g$5603$Of4HK)
        (cdadar . g$5602$Of4HK)
        (cdaadr . g$5601$Of4HK)
        (cdaaar . g$5600$Of4HK)
        (cadddr . g$5599$Of4HK)
        (caddar . g$5598$Of4HK)
        (cadadr . g$5597$Of4HK)
        (cadaar . g$5596$Of4HK)
        (caaddr . g$5595$Of4HK)
        (caadar . g$5594$Of4HK)
        (caaadr . g$5593$Of4HK)
        (caaaar . g$5592$Of4HK)
        (cdddr . g$5591$Of4HK)
        (cddar . g$5590$Of4HK)
        (cdadr . g$5589$Of4HK)
        (cdaar . g$5588$Of4HK)
        (caddr . g$5587$Of4HK)
        (cadar . g$5586$Of4HK)
        (caadr . g$5585$Of4HK)
        (caaar . g$5584$Of4HK)
        (cddr . g$5583$Of4HK)
        (cdar . g$5582$Of4HK)
        (cadr . g$5581$Of4HK)
        (caar . g$5580$Of4HK)
        (cdr . g$11288$Of4HK)
        (car . g$11287$Of4HK)
        (boolean? . g$11286$Of4HK)
        (boolean=? . g$11285$Of4HK)
        (atan . g$11284$Of4HK)
        (assertion-violation . g$11283$Of4HK)
        (asin . g$11282$Of4HK)
        (apply . g$11281$Of4HK)
        (append . g$11280$Of4HK)
        (angle . g$11279$Of4HK)
        (acos . g$11278$Of4HK)
        (abs . g$11277$Of4HK)
        (/ . g$11276$Of4HK)
        (* . g$11275$Of4HK)
        (- . g$11274$Of4HK)
        (+ . g$11273$Of4HK)
        (>= . g$11272$Of4HK)
        (> . g$11271$Of4HK)
        (= . g$11270$Of4HK)
        (<= . g$11269$Of4HK)
        (< . g$11268$Of4HK)
        (printf . g$6898$Of4HK)
        (fprintf . g$6899$Of4HK)
        (format . g$6900$Of4HK)
        (get-arity . g$11263$Of4HK)
        (gc-collect . g$11262$Of4HK)
        (clr-type? . g$11261$Of4HK)
        (get-clr-type . g$11260$Of4HK)
        (vector-append . g$11259$Of4HK)
        (vector-filter . g$11258$Of4HK)
        (vector-reverse! . g$11257$Of4HK)
        (vector-contains? . g$11256$Of4HK)
        (vector-index-of . g$11255$Of4HK)
        (vector-copy . g$11254$Of4HK)
        (vector-binary-search . g$11253$Of4HK)
        (get-output-string . g$11252$Of4HK)
        (open-output-string . g$11251$Of4HK)
        (open-input-string . g$11250$Of4HK)
        (string-format . g$11249$Of4HK)
        (make-traced-procedure . g$11248$Of4HK)
        (make-traced-macro . g$6919$Of4HK)
        (pmap . g$11247$Of4HK)
        (time-it . g$11246$Of4HK)
        (make-parameter . g$6924$Of4HK)
        (library-locator . g$11245$Of4HK)
        (get-library-paths . g$11244$Of4HK)
        (environment-symbols . g$8180$Of4HK)
        (interaction-environment-symbols . g$8179$Of4HK)
        (library-path . g$7349$Of4HK)
        (library-extensions . g$7350$Of4HK)
        (installed-libraries . g$7370$Of4HK)
        (expand . g$8185$Of4HK)
        (&no-nans . g$11243$Of4HK)
        (&no-infinities . g$11242$Of4HK)
        (&i/o-encoding . g$11241$Of4HK)
        (&i/o-decoding . g$11240$Of4HK)
        (&i/o-port . g$11239$Of4HK)
        (&i/o-file-does-not-exist . g$11238$Of4HK)
        (&i/o-file-already-exists . g$11237$Of4HK)
        (&i/o-file-is-read-only . g$11236$Of4HK)
        (&i/o-file-protection . g$11235$Of4HK)
        (&i/o-filename . g$11234$Of4HK)
        (&i/o-invalid-position . g$11233$Of4HK)
        (&i/o-write . g$11232$Of4HK)
        (&i/o-read . g$11231$Of4HK)
        (&i/o . g$11230$Of4HK)
        (&non-continuable . g$11229$Of4HK)
        (&undefined . g$11228$Of4HK)
        (&syntax . g$11227$Of4HK)
        (&lexical . g$11226$Of4HK)
        (&implementation-restriction . g$11225$Of4HK)
        (&who . g$11223$Of4HK)
        (&irritants . g$11222$Of4HK)
        (&assertion . g$11221$Of4HK)
        (&violation . g$11220$Of4HK)
        (&error . g$11219$Of4HK)
        (&serious . g$11218$Of4HK)
        (&warning . g$11217$Of4HK)
        (&message . g$11216$Of4HK)
        (&condition . g$11215$Of4HK)
        (define-condition-type . g$11214$Of4HK)
        (define-enumeration . g$11213$Of4HK)
        (define-record-type . g$11212$Of4HK)
        (parent-rtd . g$11211$Of4HK)
        (nongenerative . g$11210$Of4HK)
        (opaque . g$11209$Of4HK)
        (sealed . g$11208$Of4HK)
        (protocol . g$11207$Of4HK)
        (parent . g$11206$Of4HK)
        (immutable . g$11205$Of4HK)
        (mutable . g$11204$Of4HK)
        (fields . g$11203$Of4HK)
        (error-handling-mode . g$11202$Of4HK)
        (file-options . g$11201$Of4HK)
        (buffer-mode . g$11200$Of4HK)
        (eol-style . g$11199$Of4HK)
        (guard . g$11198$Of4HK)
        (trace-letrec-syntax . g$11197$Of4HK)
        (trace-let-syntax . g$11196$Of4HK)
        (trace-define-syntax . g$11195$Of4HK)
        (trace-define . g$11194$Of4HK)
        (trace-lambda . g$11193$Of4HK)
        (unsyntax-splicing . g$11192$Of4HK)
        (unsyntax . g$11191$Of4HK)
        (unquote-splicing . g$11190$Of4HK)
        (unquote . g$11189$Of4HK)
        (_ . g$11188$Of4HK)
        (else . g$11187$Of4HK)
        (=> . g$11186$Of4HK)
        (... . g$11185$Of4HK)
        (assert . g$11184$Of4HK)
        (endianness . g$11183$Of4HK)
        (delay . g$11182$Of4HK)
        (time . g$11181$Of4HK)
        (or . g$11180$Of4HK)
        (and . g$11179$Of4HK)
        (do . g$11178$Of4HK)
        (cond . g$11177$Of4HK)
        (let* . g$11176$Of4HK)
        (let . g$11175$Of4HK)
        (identifier-syntax . g$11174$Of4HK)
        (with-syntax . g$11173$Of4HK)
        (quasisyntax . g$11172$Of4HK)
        (quasiquote . g$11171$Of4HK)
        (syntax-rules . g$11170$Of4HK)
        (include-into . g$11169$Of4HK)
        (include . g$11168$Of4HK)
        (let-values . g$11166$Of4HK)
        (let*-values . g$11165$Of4HK)
        (record-constructor-descriptor . g$11164$Of4HK)
        (record-type-descriptor . g$11163$Of4HK)
        (fluid-let-syntax . g$11162$Of4HK)
        (case . g$11161$Of4HK)
        (parameterize . g$11160$Of4HK)
        (unless . g$11159$Of4HK)
        (when . g$11158$Of4HK)
        (if . g$11157$Of4HK)
        (letrec* . g$11156$Of4HK)
        (letrec . g$11155$Of4HK)
        (case-lambda . g$11153$Of4HK)
        (lambda . g$11152$Of4HK)
        (syntax . g$11151$Of4HK)
        (syntax-case . g$11150$Of4HK)
        (quote . g$11149$Of4HK)
        (letrec-syntax . g$11147$Of4HK)
        (let-syntax . g$11146$Of4HK)
        (set! . g$11145$Of4HK)
        (import . g$11144$Of4HK)
        (library . g$11143$Of4HK)
        (begin . g$11142$Of4HK)
        (module . g$11141$Of4HK)
        (define-syntax . g$11140$Of4HK)
        (define . g$11139$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11797$Of4HK
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11244$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6731$Of4HK
      'g$11798$Of4HK
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$11738$Of4HK)
        (annotation-source . g$11737$Of4HK)
        (annotation-expression . g$11736$Of4HK)
        (annotation? . g$11735$Of4HK)
        (read-annotated . g$11734$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6731$Of4HK
      'g$11799$Of4HK
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$11704$Of4HK)
        (serialize-library . g$11703$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6731$Of4HK
      'g$11800$Of4HK
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$7810$Of4HK)
        (variable-transformer? . g$7809$Of4HK)
        (eqv-hash . g$11266$Of4HK)
        (eq-hash . g$11265$Of4HK)
        (reverse! . g$11264$Of4HK)
        (make-traced-procedure . g$11248$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6731$Of4HK
      'g$11801$Of4HK
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11267$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11802$Of4HK
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$11722$Of4HK)
        (clr-field-set!-internal . g$11721$Of4HK)
        (clr-field-get-internal . g$11720$Of4HK)
        (clr-cast-internal . g$11719$Of4HK)
        (clr-call-internal . g$11718$Of4HK)
        (clr-new-internal . g$11717$Of4HK)
        (clr-new-array-internal . g$11716$Of4HK)
        (clr-is-internal . g$11715$Of4HK)
        (clr-reference-internal . g$11714$Of4HK)
        (clr-using-internal . g$11713$Of4HK)
        (clr-clear-usings-internal . g$11712$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11803$Of4HK
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11190$Of4HK)
        (unquote . g$11189$Of4HK)
        (delay . g$11182$Of4HK)
        (or . g$11180$Of4HK)
        (and . g$11179$Of4HK)
        (do . g$11178$Of4HK)
        (cond . g$11177$Of4HK)
        (let* . g$11176$Of4HK)
        (let . g$11175$Of4HK)
        (quasiquote . g$11171$Of4HK)
        (syntax-rules . g$11170$Of4HK)
        (case . g$11161$Of4HK)
        (if . g$11157$Of4HK)
        (letrec . g$11155$Of4HK)
        (lambda . g$11152$Of4HK)
        (quote . g$11149$Of4HK)
        (letrec-syntax . g$11147$Of4HK)
        (let-syntax . g$11146$Of4HK)
        (set! . g$11145$Of4HK)
        (begin . g$11142$Of4HK)
        (define-syntax . g$11140$Of4HK)
        (define . g$11139$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6731$Of4HK
      'g$11804$Of4HK
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8206$Of4HK)
        (char-ready? . g$11702$Of4HK)
        (string-ci>? . g$11693$Of4HK)
        (string-ci>=? . g$11692$Of4HK)
        (string-ci=? . g$11691$Of4HK)
        (string-ci<? . g$11690$Of4HK)
        (string-ci<=? . g$11689$Of4HK)
        (char-whitespace? . g$11688$Of4HK)
        (char-upper-case? . g$11687$Of4HK)
        (char-numeric? . g$11685$Of4HK)
        (char-lower-case? . g$11684$Of4HK)
        (char-upcase . g$11682$Of4HK)
        (char-downcase . g$11679$Of4HK)
        (char-ci>? . g$11678$Of4HK)
        (char-ci>=? . g$11677$Of4HK)
        (char-ci=? . g$11676$Of4HK)
        (char-ci<? . g$11675$Of4HK)
        (char-ci<=? . g$11674$Of4HK)
        (char-alphabetic? . g$11673$Of4HK)
        (call-with-output-file . g$11641$Of4HK)
        (call-with-input-file . g$11640$Of4HK)
        (write-char . g$11639$Of4HK)
        (write . g$11638$Of4HK)
        (with-output-to-file . g$11637$Of4HK)
        (with-input-from-file . g$11636$Of4HK)
        (read-char . g$11635$Of4HK)
        (read . g$11634$Of4HK)
        (peek-char . g$11633$Of4HK)
        (open-output-file . g$11632$Of4HK)
        (open-input-file . g$11631$Of4HK)
        (newline . g$11630$Of4HK)
        (display . g$11629$Of4HK)
        (close-output-port . g$11628$Of4HK)
        (close-input-port . g$11627$Of4HK)
        (eof-object? . g$11626$Of4HK)
        (eof-object . g$11625$Of4HK)
        (current-error-port . g$11624$Of4HK)
        (current-output-port . g$11623$Of4HK)
        (current-input-port . g$11622$Of4HK)
        (output-port? . g$11621$Of4HK)
        (input-port? . g$11620$Of4HK)
        (scheme-report-environment . g$8184$Of4HK)
        (quotient . g$6485$Of4HK)
        (null-environment . g$8183$Of4HK)
        (remainder . g$6486$Of4HK)
        (modulo . g$6487$Of4HK)
        (inexact->exact . g$11557$Of4HK)
        (force . g$11556$Of4HK)
        (exact->inexact . g$11555$Of4HK)
        (string-fill! . g$11552$Of4HK)
        (string-set! . g$11551$Of4HK)
        (set-cdr! . g$11550$Of4HK)
        (set-car! . g$11549$Of4HK)
        (memv . g$11548$Of4HK)
        (memq . g$11547$Of4HK)
        (member . g$6062$Of4HK)
        (assv . g$6059$Of4HK)
        (assq . g$11546$Of4HK)
        (assoc . g$6060$Of4HK)
        (eval . g$8186$Of4HK)
        (zero? . g$11400$Of4HK)
        (vector? . g$11399$Of4HK)
        (vector-set! . g$11398$Of4HK)
        (vector-ref . g$11397$Of4HK)
        (vector-length . g$11395$Of4HK)
        (vector-fill! . g$11393$Of4HK)
        (vector->list . g$11392$Of4HK)
        (vector . g$11391$Of4HK)
        (values . g$11390$Of4HK)
        (truncate . g$11389$Of4HK)
        (tan . g$11388$Of4HK)
        (symbol? . g$11387$Of4HK)
        (symbol->string . g$11385$Of4HK)
        (substring . g$11384$Of4HK)
        (string? . g$11383$Of4HK)
        (string>? . g$11382$Of4HK)
        (string>=? . g$11381$Of4HK)
        (string=? . g$11380$Of4HK)
        (string<? . g$11379$Of4HK)
        (string<=? . g$11378$Of4HK)
        (string-ref . g$11377$Of4HK)
        (string-length . g$11376$Of4HK)
        (string-copy . g$11374$Of4HK)
        (string-append . g$11373$Of4HK)
        (string->symbol . g$11372$Of4HK)
        (string->number . g$11371$Of4HK)
        (string->list . g$11370$Of4HK)
        (string . g$11369$Of4HK)
        (sqrt . g$11368$Of4HK)
        (sin . g$11367$Of4HK)
        (round . g$11366$Of4HK)
        (reverse . g$11365$Of4HK)
        (real? . g$11364$Of4HK)
        (real-part . g$11362$Of4HK)
        (rationalize . g$5608$Of4HK)
        (rational? . g$11361$Of4HK)
        (procedure? . g$11359$Of4HK)
        (positive? . g$11358$Of4HK)
        (pair? . g$11357$Of4HK)
        (odd? . g$11356$Of4HK)
        (numerator . g$11355$Of4HK)
        (number? . g$11354$Of4HK)
        (number->string . g$11353$Of4HK)
        (null? . g$11352$Of4HK)
        (not . g$11351$Of4HK)
        (negative? . g$11350$Of4HK)
        (min . g$11348$Of4HK)
        (max . g$11347$Of4HK)
        (map . g$11346$Of4HK)
        (make-vector . g$11345$Of4HK)
        (make-string . g$11344$Of4HK)
        (make-rectangular . g$11343$Of4HK)
        (make-polar . g$11342$Of4HK)
        (magnitude . g$11341$Of4HK)
        (log . g$11340$Of4HK)
        (list? . g$11339$Of4HK)
        (list-tail . g$11338$Of4HK)
        (list-ref . g$11337$Of4HK)
        (list->vector . g$11336$Of4HK)
        (list->string . g$11335$Of4HK)
        (list . g$11334$Of4HK)
        (length . g$11333$Of4HK)
        (lcm . g$11332$Of4HK)
        (integer? . g$11331$Of4HK)
        (integer->char . g$11329$Of4HK)
        (inexact? . g$11327$Of4HK)
        (imag-part . g$11325$Of4HK)
        (gcd . g$11324$Of4HK)
        (for-each . g$11323$Of4HK)
        (floor . g$11322$Of4HK)
        (expt . g$11320$Of4HK)
        (exp . g$11319$Of4HK)
        (exact? . g$11318$Of4HK)
        (even? . g$11315$Of4HK)
        (eqv? . g$11313$Of4HK)
        (equal? . g$11312$Of4HK)
        (eq? . g$11311$Of4HK)
        (dynamic-wind . g$11310$Of4HK)
        (denominator . g$11303$Of4HK)
        (cos . g$11302$Of4HK)
        (cons . g$11301$Of4HK)
        (complex? . g$11300$Of4HK)
        (char? . g$11299$Of4HK)
        (char>? . g$11298$Of4HK)
        (char>=? . g$11297$Of4HK)
        (char=? . g$11296$Of4HK)
        (char<? . g$11295$Of4HK)
        (char<=? . g$11294$Of4HK)
        (char->integer . g$11293$Of4HK)
        (ceiling . g$11292$Of4HK)
        (call-with-values . g$11291$Of4HK)
        (call-with-current-continuation . g$11289$Of4HK)
        (cddddr . g$5607$Of4HK)
        (cdddar . g$5606$Of4HK)
        (cddadr . g$5605$Of4HK)
        (cddaar . g$5604$Of4HK)
        (cdaddr . g$5603$Of4HK)
        (cdadar . g$5602$Of4HK)
        (cdaadr . g$5601$Of4HK)
        (cdaaar . g$5600$Of4HK)
        (cadddr . g$5599$Of4HK)
        (caddar . g$5598$Of4HK)
        (cadadr . g$5597$Of4HK)
        (cadaar . g$5596$Of4HK)
        (caaddr . g$5595$Of4HK)
        (caadar . g$5594$Of4HK)
        (caaadr . g$5593$Of4HK)
        (caaaar . g$5592$Of4HK)
        (cdddr . g$5591$Of4HK)
        (cddar . g$5590$Of4HK)
        (cdadr . g$5589$Of4HK)
        (cdaar . g$5588$Of4HK)
        (caddr . g$5587$Of4HK)
        (cadar . g$5586$Of4HK)
        (caadr . g$5585$Of4HK)
        (caaar . g$5584$Of4HK)
        (cddr . g$5583$Of4HK)
        (cdar . g$5582$Of4HK)
        (cadr . g$5581$Of4HK)
        (caar . g$5580$Of4HK)
        (cdr . g$11288$Of4HK)
        (car . g$11287$Of4HK)
        (boolean? . g$11286$Of4HK)
        (atan . g$11284$Of4HK)
        (asin . g$11282$Of4HK)
        (apply . g$11281$Of4HK)
        (append . g$11280$Of4HK)
        (angle . g$11279$Of4HK)
        (acos . g$11278$Of4HK)
        (abs . g$11277$Of4HK)
        (/ . g$11276$Of4HK)
        (* . g$11275$Of4HK)
        (- . g$11274$Of4HK)
        (+ . g$11273$Of4HK)
        (>= . g$11272$Of4HK)
        (> . g$11271$Of4HK)
        (= . g$11270$Of4HK)
        (<= . g$11269$Of4HK)
        (< . g$11268$Of4HK)
        (unquote-splicing . g$11190$Of4HK)
        (unquote . g$11189$Of4HK)
        (else . g$11187$Of4HK)
        (=> . g$11186$Of4HK)
        (... . g$11185$Of4HK)
        (delay . g$11182$Of4HK)
        (or . g$11180$Of4HK)
        (and . g$11179$Of4HK)
        (do . g$11178$Of4HK)
        (cond . g$11177$Of4HK)
        (let* . g$11176$Of4HK)
        (let . g$11175$Of4HK)
        (quasiquote . g$11171$Of4HK)
        (syntax-rules . g$11170$Of4HK)
        (case . g$11161$Of4HK)
        (if . g$11157$Of4HK)
        (letrec . g$11155$Of4HK)
        (lambda . g$11152$Of4HK)
        (quote . g$11149$Of4HK)
        (letrec-syntax . g$11147$Of4HK)
        (let-syntax . g$11146$Of4HK)
        (set! . g$11145$Of4HK)
        (begin . g$11142$Of4HK)
        (define-syntax . g$11140$Of4HK)
        (define . g$11139$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6731$Of4HK
      'g$11805$Of4HK
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11701$Of4HK)
        (string-titlecase . g$11700$Of4HK)
        (string-normalize-nfkd . g$11699$Of4HK)
        (string-normalize-nfkc . g$11698$Of4HK)
        (string-normalize-nfd . g$11697$Of4HK)
        (string-normalize-nfc . g$11696$Of4HK)
        (string-foldcase . g$11695$Of4HK)
        (string-downcase . g$11694$Of4HK)
        (string-ci>? . g$11693$Of4HK)
        (string-ci>=? . g$11692$Of4HK)
        (string-ci=? . g$11691$Of4HK)
        (string-ci<? . g$11690$Of4HK)
        (string-ci<=? . g$11689$Of4HK)
        (char-whitespace? . g$11688$Of4HK)
        (char-upper-case? . g$11687$Of4HK)
        (char-title-case? . g$11686$Of4HK)
        (char-numeric? . g$11685$Of4HK)
        (char-lower-case? . g$11684$Of4HK)
        (char-general-category . g$11683$Of4HK)
        (char-upcase . g$11682$Of4HK)
        (char-titlecase . g$11681$Of4HK)
        (char-foldcase . g$11680$Of4HK)
        (char-downcase . g$11679$Of4HK)
        (char-ci>? . g$11678$Of4HK)
        (char-ci>=? . g$11677$Of4HK)
        (char-ci=? . g$11676$Of4HK)
        (char-ci<? . g$11675$Of4HK)
        (char-ci<=? . g$11674$Of4HK)
        (char-alphabetic? . g$11673$Of4HK)
        (make-variable-transformer . g$7808$Of4HK)
        (identifier? . g$8201$Of4HK)
        (generate-temporaries . g$8193$Of4HK)
        (free-identifier=? . g$8194$Of4HK)
        (syntax->datum . g$8203$Of4HK)
        (datum->syntax . g$8202$Of4HK)
        (bound-identifier=? . g$8195$Of4HK)
        (record-type-descriptor? . g$11672$Of4HK)
        (record-predicate . g$11671$Of4HK)
        (record-mutator . g$11670$Of4HK)
        (record-constructor . g$11669$Of4HK)
        (record-accessor . g$11668$Of4HK)
        (make-record-type-descriptor . g$11667$Of4HK)
        (make-record-constructor-descriptor . g$11666$Of4HK)
        (record? . g$11665$Of4HK)
        (record-type-uid . g$11664$Of4HK)
        (record-type-sealed? . g$11663$Of4HK)
        (record-type-parent . g$11662$Of4HK)
        (record-type-opaque? . g$11661$Of4HK)
        (record-type-name . g$11660$Of4HK)
        (record-type-generative? . g$11659$Of4HK)
        (record-type-field-names . g$11658$Of4HK)
        (record-rtd . g$11657$Of4HK)
        (record-field-mutable? . g$11656$Of4HK)
        (delete-file . g$5991$Of4HK)
        (file-exists? . g$5990$Of4HK)
        (vector-sort! . g$11655$Of4HK)
        (vector-sort . g$11654$Of4HK)
        (list-sort . g$6498$Of4HK)
        (symbol-hash . g$11653$Of4HK)
        (string-ci-hash . g$11652$Of4HK)
        (string-hash . g$11651$Of4HK)
        (equal-hash . g$11650$Of4HK)
        (hashtable-equivalence-function . g$11649$Of4HK)
        (make-hashtable . g$11648$Of4HK)
        (hashtable-hash-function . g$11647$Of4HK)
        (make-eqv-hashtable . g$5958$Of4HK)
        (make-eq-hashtable . g$5957$Of4HK)
        (hashtable? . g$11646$Of4HK)
        (hashtable-update! . g$5964$Of4HK)
        (hashtable-size . g$5959$Of4HK)
        (hashtable-set! . g$5961$Of4HK)
        (hashtable-ref . g$5960$Of4HK)
        (hashtable-mutable? . g$11645$Of4HK)
        (hashtable-keys . g$11644$Of4HK)
        (hashtable-entries . g$11643$Of4HK)
        (hashtable-delete! . g$5962$Of4HK)
        (hashtable-copy . g$11642$Of4HK)
        (hashtable-contains? . g$5963$Of4HK)
        (hashtable-clear! . g$5965$Of4HK)
        (call-with-output-file . g$11641$Of4HK)
        (call-with-input-file . g$11640$Of4HK)
        (write-char . g$11639$Of4HK)
        (write . g$11638$Of4HK)
        (with-output-to-file . g$11637$Of4HK)
        (with-input-from-file . g$11636$Of4HK)
        (read-char . g$11635$Of4HK)
        (read . g$11634$Of4HK)
        (peek-char . g$11633$Of4HK)
        (open-output-file . g$11632$Of4HK)
        (open-input-file . g$11631$Of4HK)
        (newline . g$11630$Of4HK)
        (display . g$11629$Of4HK)
        (close-output-port . g$11628$Of4HK)
        (close-input-port . g$11627$Of4HK)
        (eof-object? . g$11626$Of4HK)
        (eof-object . g$11625$Of4HK)
        (current-error-port . g$11624$Of4HK)
        (current-output-port . g$11623$Of4HK)
        (current-input-port . g$11622$Of4HK)
        (output-port? . g$11621$Of4HK)
        (input-port? . g$11620$Of4HK)
        (utf-8-codec . g$11619$Of4HK)
        (utf-16-codec . g$11618$Of4HK)
        (transcoder-error-handling-mode . g$11617$Of4HK)
        (transcoder-eol-style . g$11616$Of4HK)
        (transcoder-codec . g$11615$Of4HK)
        (transcoded-port . g$11614$Of4HK)
        (textual-port? . g$11613$Of4HK)
        (string->bytevector . g$11612$Of4HK)
        (standard-output-port . g$11611$Of4HK)
        (standard-input-port . g$11610$Of4HK)
        (standard-error-port . g$11609$Of4HK)
        (set-port-position! . g$11608$Of4HK)
        (put-u8 . g$11607$Of4HK)
        (put-string . g$11606$Of4HK)
        (put-datum . g$11605$Of4HK)
        (put-char . g$11604$Of4HK)
        (put-bytevector . g$11603$Of4HK)
        (port? . g$11602$Of4HK)
        (port-transcoder . g$11601$Of4HK)
        (port-position . g$11600$Of4HK)
        (port-has-set-port-position!? . g$11599$Of4HK)
        (port-has-port-position? . g$11598$Of4HK)
        (port-eof? . g$11597$Of4HK)
        (output-port-buffer-mode . g$11596$Of4HK)
        (open-string-output-port . g$6889$Of4HK)
        (open-string-input-port . g$11595$Of4HK)
        (open-file-output-port . g$11594$Of4HK)
        (open-file-input/output-port . g$11593$Of4HK)
        (open-file-input-port . g$11592$Of4HK)
        (open-bytevector-output-port . g$11591$Of4HK)
        (open-bytevector-input-port . g$11590$Of4HK)
        (native-transcoder . g$11589$Of4HK)
        (native-eol-style . g$11588$Of4HK)
        (make-transcoder . g$11587$Of4HK)
        (latin-1-codec . g$11586$Of4HK)
        (make-i/o-write-error . g$6746$Of4HK)
        (make-i/o-read-error . g$6732$Of4HK)
        (make-i/o-port-error . g$6851$Of4HK)
        (make-i/o-invalid-position-error . g$6761$Of4HK)
        (make-i/o-filename-error . g$6778$Of4HK)
        (make-i/o-file-protection-error . g$6794$Of4HK)
        (make-i/o-file-is-read-only-error . g$6808$Of4HK)
        (make-i/o-file-does-not-exist-error . g$6836$Of4HK)
        (make-i/o-file-already-exists-error . g$6822$Of4HK)
        (make-i/o-error . g$6718$Of4HK)
        (make-i/o-encoding-error . g$6882$Of4HK)
        (make-i/o-decoding-error . g$6867$Of4HK)
        (make-custom-textual-output-port . g$11585$Of4HK)
        (make-custom-textual-input/output-port . g$11584$Of4HK)
        (make-custom-textual-input-port . g$11583$Of4HK)
        (make-custom-binary-output-port . g$11582$Of4HK)
        (make-custom-binary-input/output-port . g$11581$Of4HK)
        (make-custom-binary-input-port . g$11580$Of4HK)
        (make-bytevector . g$11579$Of4HK)
        (lookahead-u8 . g$11578$Of4HK)
        (lookahead-char . g$11577$Of4HK)
        (i/o-write-error? . g$6747$Of4HK)
        (i/o-read-error? . g$6733$Of4HK)
        (i/o-port-error? . g$6853$Of4HK)
        (i/o-invalid-position-error? . g$6763$Of4HK)
        (i/o-filename-error? . g$6780$Of4HK)
        (i/o-file-protection-error? . g$6795$Of4HK)
        (i/o-file-is-read-only-error? . g$6809$Of4HK)
        (i/o-file-does-not-exist-error? . g$6837$Of4HK)
        (i/o-file-already-exists-error? . g$6823$Of4HK)
        (i/o-error? . g$6719$Of4HK)
        (i/o-error-port . g$6854$Of4HK)
        (i/o-error-filename . g$6781$Of4HK)
        (i/o-encoding-error? . g$6884$Of4HK)
        (i/o-encoding-error-char . g$6885$Of4HK)
        (i/o-decoding-error? . g$6868$Of4HK)
        (get-u8 . g$11576$Of4HK)
        (get-string-n! . g$11575$Of4HK)
        (get-string-n . g$11574$Of4HK)
        (get-string-all . g$11573$Of4HK)
        (get-line . g$11572$Of4HK)
        (get-datum . g$11571$Of4HK)
        (get-char . g$11570$Of4HK)
        (get-bytevector-some . g$11569$Of4HK)
        (get-bytevector-n! . g$11568$Of4HK)
        (get-bytevector-n . g$11567$Of4HK)
        (get-bytevector-all . g$11566$Of4HK)
        (flush-output-port . g$11565$Of4HK)
        (close-port . g$11564$Of4HK)
        (call-with-string-output-port . g$11563$Of4HK)
        (call-with-port . g$11562$Of4HK)
        (call-with-bytevector-output-port . g$11561$Of4HK)
        (bytevector->string . g$11560$Of4HK)
        (buffer-mode? . g$11559$Of4HK)
        (binary-port? . g$11558$Of4HK)
        (exit . g$11554$Of4HK)
        (command-line . g$11553$Of4HK)
        (remove . g$6071$Of4HK)
        (remv . g$6072$Of4HK)
        (remp . g$6057$Of4HK)
        (remq . g$6073$Of4HK)
        (partition . g$6056$Of4HK)
        (memv . g$11548$Of4HK)
        (memq . g$11547$Of4HK)
        (memp . g$6063$Of4HK)
        (member . g$6062$Of4HK)
        (exists . g$6067$Of4HK)
        (for-all . g$6066$Of4HK)
        (fold-right . g$6070$Of4HK)
        (fold-left . g$6069$Of4HK)
        (find . g$6055$Of4HK)
        (filter . g$6058$Of4HK)
        (cons* . g$6068$Of4HK)
        (assv . g$6059$Of4HK)
        (assq . g$11546$Of4HK)
        (assp . g$6061$Of4HK)
        (assoc . g$6060$Of4HK)
        (with-exception-handler . g$11545$Of4HK)
        (raise-continuable . g$11544$Of4HK)
        (raise . g$11543$Of4HK)
        (make-enumeration . g$11542$Of4HK)
        (enum-set=? . g$11541$Of4HK)
        (enum-set-universe . g$11540$Of4HK)
        (enum-set-union . g$11539$Of4HK)
        (enum-set-subset? . g$11538$Of4HK)
        (enum-set-projection . g$11537$Of4HK)
        (enum-set-member? . g$11536$Of4HK)
        (enum-set-intersection . g$11535$Of4HK)
        (enum-set-indexer . g$11534$Of4HK)
        (enum-set-difference . g$11533$Of4HK)
        (enum-set-constructor . g$11532$Of4HK)
        (enum-set-complement . g$11531$Of4HK)
        (enum-set->list . g$11530$Of4HK)
        (who-condition? . g$6396$Of4HK)
        (warning? . g$6307$Of4HK)
        (violation? . g$6349$Of4HK)
        (undefined-violation? . g$6473$Of4HK)
        (syntax-violation? . g$6457$Of4HK)
        (syntax-violation-subform . g$6459$Of4HK)
        (syntax-violation-form . g$6458$Of4HK)
        (syntax-violation . g$8200$Of4HK)
        (simple-conditions . g$11529$Of4HK)
        (serious-condition? . g$6321$Of4HK)
        (non-continuable-violation? . g$6411$Of4HK)
        (message-condition? . g$6292$Of4HK)
        (make-who-condition . g$6394$Of4HK)
        (make-warning . g$6306$Of4HK)
        (make-violation . g$6348$Of4HK)
        (make-undefined-violation . g$6472$Of4HK)
        (make-syntax-violation . g$6454$Of4HK)
        (make-serious-condition . g$6320$Of4HK)
        (make-non-continuable-violation . g$6410$Of4HK)
        (make-message-condition . g$6290$Of4HK)
        (make-lexical-violation . g$6438$Of4HK)
        (make-irritants-condition . g$6377$Of4HK)
        (make-implementation-restriction-violation . g$6424$Of4HK)
        (make-error . g$6334$Of4HK)
        (make-assertion-violation . g$6362$Of4HK)
        (lexical-violation? . g$6439$Of4HK)
        (irritants-condition? . g$6379$Of4HK)
        (implementation-restriction-violation? . g$6425$Of4HK)
        (error? . g$6335$Of4HK)
        (condition-who . g$6397$Of4HK)
        (condition-predicate . g$11528$Of4HK)
        (condition-message . g$6293$Of4HK)
        (condition-irritants . g$6380$Of4HK)
        (condition-accessor . g$11527$Of4HK)
        (condition . g$11526$Of4HK)
        (assertion-violation? . g$6363$Of4HK)
        (condition? . g$11525$Of4HK)
        (utf32->string . g$11524$Of4HK)
        (utf16->string . g$11523$Of4HK)
        (utf8->string . g$11522$Of4HK)
        (uint-list->bytevector . g$11521$Of4HK)
        (u8-list->bytevector . g$11520$Of4HK)
        (string->utf8 . g$11519$Of4HK)
        (string->utf32 . g$11518$Of4HK)
        (string->utf16 . g$11517$Of4HK)
        (sint-list->bytevector . g$11516$Of4HK)
        (native-endianness . g$6147$Of4HK)
        (bytevector? . g$11515$Of4HK)
        (bytevector=? . g$11514$Of4HK)
        (bytevector-uint-set! . g$11513$Of4HK)
        (bytevector-uint-ref . g$11512$Of4HK)
        (bytevector-u8-set! . g$11511$Of4HK)
        (bytevector-u8-ref . g$11510$Of4HK)
        (bytevector-u64-set! . g$6168$Of4HK)
        (bytevector-u64-ref . g$6164$Of4HK)
        (bytevector-u64-native-set! . g$6170$Of4HK)
        (bytevector-u64-native-ref . g$6166$Of4HK)
        (bytevector-u32-set! . g$6160$Of4HK)
        (bytevector-u32-ref . g$6156$Of4HK)
        (bytevector-u32-native-set! . g$6162$Of4HK)
        (bytevector-u32-native-ref . g$6158$Of4HK)
        (bytevector-u16-set! . g$6152$Of4HK)
        (bytevector-u16-ref . g$6148$Of4HK)
        (bytevector-u16-native-set! . g$6154$Of4HK)
        (bytevector-u16-native-ref . g$6150$Of4HK)
        (bytevector-sint-set! . g$11509$Of4HK)
        (bytevector-sint-ref . g$11508$Of4HK)
        (bytevector-s8-set! . g$11507$Of4HK)
        (bytevector-s8-ref . g$11506$Of4HK)
        (bytevector-s64-set! . g$6169$Of4HK)
        (bytevector-s64-ref . g$6165$Of4HK)
        (bytevector-s64-native-set! . g$6171$Of4HK)
        (bytevector-s64-native-ref . g$6167$Of4HK)
        (bytevector-s32-set! . g$6161$Of4HK)
        (bytevector-s32-ref . g$6157$Of4HK)
        (bytevector-s32-native-set! . g$6163$Of4HK)
        (bytevector-s32-native-ref . g$6159$Of4HK)
        (bytevector-s16-set! . g$6153$Of4HK)
        (bytevector-s16-ref . g$6149$Of4HK)
        (bytevector-s16-native-set! . g$6155$Of4HK)
        (bytevector-s16-native-ref . g$6151$Of4HK)
        (bytevector-length . g$11505$Of4HK)
        (bytevector-ieee-single-set! . g$11504$Of4HK)
        (bytevector-ieee-single-ref . g$11503$Of4HK)
        (bytevector-ieee-single-native-set! . g$6174$Of4HK)
        (bytevector-ieee-single-native-ref . g$6172$Of4HK)
        (bytevector-ieee-double-set! . g$11502$Of4HK)
        (bytevector-ieee-double-ref . g$11501$Of4HK)
        (bytevector-ieee-double-native-set! . g$6175$Of4HK)
        (bytevector-ieee-double-native-ref . g$6173$Of4HK)
        (bytevector-fill! . g$11500$Of4HK)
        (bytevector-copy! . g$11499$Of4HK)
        (bytevector-copy . g$11498$Of4HK)
        (bytevector->uint-list . g$11497$Of4HK)
        (bytevector->u8-list . g$11496$Of4HK)
        (bytevector->sint-list . g$11495$Of4HK)
        (no-nans-violation? . g$6704$Of4HK)
        (no-infinities-violation? . g$6690$Of4HK)
        (make-no-nans-violation . g$6703$Of4HK)
        (make-no-infinities-violation . g$6689$Of4HK)
        (real->flonum . g$11494$Of4HK)
        (flzero? . g$11493$Of4HK)
        (fltruncate . g$11492$Of4HK)
        (fltan . g$11491$Of4HK)
        (flsqrt . g$11490$Of4HK)
        (flsin . g$11489$Of4HK)
        (flround . g$11488$Of4HK)
        (flpositive? . g$11487$Of4HK)
        (flonum? . g$11486$Of4HK)
        (flodd? . g$11485$Of4HK)
        (flnumerator . g$11484$Of4HK)
        (flnegative? . g$11483$Of4HK)
        (flnan? . g$11482$Of4HK)
        (flmod0 . g$11481$Of4HK)
        (flmod . g$11480$Of4HK)
        (flmin . g$11479$Of4HK)
        (flmax . g$11478$Of4HK)
        (fllog . g$11477$Of4HK)
        (flinteger? . g$11476$Of4HK)
        (flinfinite? . g$11475$Of4HK)
        (flfloor . g$11474$Of4HK)
        (flfinite? . g$11473$Of4HK)
        (flexpt . g$11472$Of4HK)
        (flexp . g$11471$Of4HK)
        (fleven? . g$11470$Of4HK)
        (fldiv0-and-mod0 . g$11469$Of4HK)
        (fldiv0 . g$11468$Of4HK)
        (fldiv-and-mod . g$11467$Of4HK)
        (fldiv . g$11466$Of4HK)
        (fldenominator . g$11465$Of4HK)
        (flcos . g$11464$Of4HK)
        (flceiling . g$11463$Of4HK)
        (flatan . g$11462$Of4HK)
        (flasin . g$11461$Of4HK)
        (flacos . g$11460$Of4HK)
        (flabs . g$11459$Of4HK)
        (fl>? . g$11458$Of4HK)
        (fl>=? . g$11457$Of4HK)
        (fl=? . g$11456$Of4HK)
        (fl<? . g$11455$Of4HK)
        (fl<=? . g$11454$Of4HK)
        (fl/ . g$11453$Of4HK)
        (fl- . g$11452$Of4HK)
        (fl+ . g$11451$Of4HK)
        (fl* . g$11450$Of4HK)
        (fixnum->flonum . g$11449$Of4HK)
        (fxzero? . g$11448$Of4HK)
        (fxxor . g$11447$Of4HK)
        (fxrotate-bit-field . g$6635$Of4HK)
        (fxreverse-bit-field . g$11446$Of4HK)
        (fxpositive? . g$11445$Of4HK)
        (fxodd? . g$11444$Of4HK)
        (fxnot . g$11443$Of4HK)
        (fxnegative? . g$11442$Of4HK)
        (fxmod0 . g$11441$Of4HK)
        (fxmod . g$11440$Of4HK)
        (fxmin . g$11439$Of4HK)
        (fxmax . g$11438$Of4HK)
        (fxlength . g$11437$Of4HK)
        (fxior . g$11436$Of4HK)
        (fxif . g$6629$Of4HK)
        (fxfirst-bit-set . g$11435$Of4HK)
        (fxeven? . g$11434$Of4HK)
        (fxdiv0-and-mod0 . g$11433$Of4HK)
        (fxdiv0 . g$11432$Of4HK)
        (fxdiv-and-mod . g$11431$Of4HK)
        (fxdiv . g$11430$Of4HK)
        (fxcopy-bit-field . g$6632$Of4HK)
        (fxcopy-bit . g$6630$Of4HK)
        (fxbit-set? . g$11429$Of4HK)
        (fxbit-field . g$6631$Of4HK)
        (fxbit-count . g$11428$Of4HK)
        (fxarithmetic-shift-right . g$6634$Of4HK)
        (fxarithmetic-shift-left . g$6633$Of4HK)
        (fxarithmetic-shift . g$11427$Of4HK)
        (fxand . g$11426$Of4HK)
        (fx>? . g$11425$Of4HK)
        (fx>=? . g$11424$Of4HK)
        (fx=? . g$11423$Of4HK)
        (fx<? . g$11422$Of4HK)
        (fx<=? . g$11421$Of4HK)
        (fx-/carry . g$11420$Of4HK)
        (fx- . g$11419$Of4HK)
        (fx+/carry . g$11418$Of4HK)
        (fx+ . g$11417$Of4HK)
        (fx*/carry . g$11416$Of4HK)
        (fx* . g$11415$Of4HK)
        (greatest-fixnum . g$11414$Of4HK)
        (least-fixnum . g$11413$Of4HK)
        (fixnum-width . g$11412$Of4HK)
        (fixnum? . g$11411$Of4HK)
        (bitwise-rotate-bit-field . g$6583$Of4HK)
        (bitwise-reverse-bit-field . g$6584$Of4HK)
        (bitwise-length . g$11410$Of4HK)
        (bitwise-if . g$6577$Of4HK)
        (bitwise-first-bit-set . g$11409$Of4HK)
        (bitwise-copy-bit-field . g$6580$Of4HK)
        (bitwise-copy-bit . g$6578$Of4HK)
        (bitwise-bit-set? . g$11408$Of4HK)
        (bitwise-bit-field . g$11407$Of4HK)
        (bitwise-bit-count . g$11406$Of4HK)
        (bitwise-xor . g$11405$Of4HK)
        (bitwise-ior . g$11404$Of4HK)
        (bitwise-and . g$11403$Of4HK)
        (bitwise-not . g$11402$Of4HK)
        (bitwise-arithmetic-shift-right . g$6582$Of4HK)
        (bitwise-arithmetic-shift-left . g$6581$Of4HK)
        (bitwise-arithmetic-shift . g$11401$Of4HK)
        (zero? . g$11400$Of4HK)
        (vector? . g$11399$Of4HK)
        (vector-set! . g$11398$Of4HK)
        (vector-ref . g$11397$Of4HK)
        (vector-map . g$11396$Of4HK)
        (vector-length . g$11395$Of4HK)
        (vector-for-each . g$11394$Of4HK)
        (vector-fill! . g$11393$Of4HK)
        (vector->list . g$11392$Of4HK)
        (vector . g$11391$Of4HK)
        (values . g$11390$Of4HK)
        (truncate . g$11389$Of4HK)
        (tan . g$11388$Of4HK)
        (symbol? . g$11387$Of4HK)
        (symbol=? . g$11386$Of4HK)
        (symbol->string . g$11385$Of4HK)
        (substring . g$11384$Of4HK)
        (string? . g$11383$Of4HK)
        (string>? . g$11382$Of4HK)
        (string>=? . g$11381$Of4HK)
        (string=? . g$11380$Of4HK)
        (string<? . g$11379$Of4HK)
        (string<=? . g$11378$Of4HK)
        (string-ref . g$11377$Of4HK)
        (string-length . g$11376$Of4HK)
        (string-for-each . g$11375$Of4HK)
        (string-copy . g$11374$Of4HK)
        (string-append . g$11373$Of4HK)
        (string->symbol . g$11372$Of4HK)
        (string->number . g$11371$Of4HK)
        (string->list . g$11370$Of4HK)
        (string . g$11369$Of4HK)
        (sqrt . g$11368$Of4HK)
        (sin . g$11367$Of4HK)
        (round . g$11366$Of4HK)
        (reverse . g$11365$Of4HK)
        (real? . g$11364$Of4HK)
        (real-valued? . g$11363$Of4HK)
        (real-part . g$11362$Of4HK)
        (rationalize . g$5608$Of4HK)
        (rational? . g$11361$Of4HK)
        (rational-valued? . g$11360$Of4HK)
        (procedure? . g$11359$Of4HK)
        (positive? . g$11358$Of4HK)
        (pair? . g$11357$Of4HK)
        (odd? . g$11356$Of4HK)
        (numerator . g$11355$Of4HK)
        (number? . g$11354$Of4HK)
        (number->string . g$11353$Of4HK)
        (null? . g$11352$Of4HK)
        (not . g$11351$Of4HK)
        (negative? . g$11350$Of4HK)
        (nan? . g$11349$Of4HK)
        (min . g$11348$Of4HK)
        (max . g$11347$Of4HK)
        (map . g$11346$Of4HK)
        (make-vector . g$11345$Of4HK)
        (make-string . g$11344$Of4HK)
        (make-rectangular . g$11343$Of4HK)
        (make-polar . g$11342$Of4HK)
        (magnitude . g$11341$Of4HK)
        (log . g$11340$Of4HK)
        (list? . g$11339$Of4HK)
        (list-tail . g$11338$Of4HK)
        (list-ref . g$11337$Of4HK)
        (list->vector . g$11336$Of4HK)
        (list->string . g$11335$Of4HK)
        (list . g$11334$Of4HK)
        (length . g$11333$Of4HK)
        (lcm . g$11332$Of4HK)
        (integer? . g$11331$Of4HK)
        (integer-valued? . g$11330$Of4HK)
        (integer->char . g$11329$Of4HK)
        (infinite? . g$11328$Of4HK)
        (inexact? . g$11327$Of4HK)
        (inexact . g$11326$Of4HK)
        (imag-part . g$11325$Of4HK)
        (gcd . g$11324$Of4HK)
        (for-each . g$11323$Of4HK)
        (floor . g$11322$Of4HK)
        (finite? . g$11321$Of4HK)
        (expt . g$11320$Of4HK)
        (exp . g$11319$Of4HK)
        (exact? . g$11318$Of4HK)
        (exact-integer-sqrt . g$11317$Of4HK)
        (exact . g$11316$Of4HK)
        (even? . g$11315$Of4HK)
        (error . g$11314$Of4HK)
        (eqv? . g$11313$Of4HK)
        (equal? . g$11312$Of4HK)
        (eq? . g$11311$Of4HK)
        (dynamic-wind . g$11310$Of4HK)
        (div0-and-mod0 . g$11309$Of4HK)
        (mod0 . g$11308$Of4HK)
        (div0 . g$11307$Of4HK)
        (div-and-mod . g$11306$Of4HK)
        (mod . g$11305$Of4HK)
        (div . g$11304$Of4HK)
        (denominator . g$11303$Of4HK)
        (cos . g$11302$Of4HK)
        (cons . g$11301$Of4HK)
        (complex? . g$11300$Of4HK)
        (char? . g$11299$Of4HK)
        (char>? . g$11298$Of4HK)
        (char>=? . g$11297$Of4HK)
        (char=? . g$11296$Of4HK)
        (char<? . g$11295$Of4HK)
        (char<=? . g$11294$Of4HK)
        (char->integer . g$11293$Of4HK)
        (ceiling . g$11292$Of4HK)
        (call-with-values . g$11291$Of4HK)
        (call/cc . g$11290$Of4HK)
        (call-with-current-continuation . g$11289$Of4HK)
        (cddddr . g$5607$Of4HK)
        (cdddar . g$5606$Of4HK)
        (cddadr . g$5605$Of4HK)
        (cddaar . g$5604$Of4HK)
        (cdaddr . g$5603$Of4HK)
        (cdadar . g$5602$Of4HK)
        (cdaadr . g$5601$Of4HK)
        (cdaaar . g$5600$Of4HK)
        (cadddr . g$5599$Of4HK)
        (caddar . g$5598$Of4HK)
        (cadadr . g$5597$Of4HK)
        (cadaar . g$5596$Of4HK)
        (caaddr . g$5595$Of4HK)
        (caadar . g$5594$Of4HK)
        (caaadr . g$5593$Of4HK)
        (caaaar . g$5592$Of4HK)
        (cdddr . g$5591$Of4HK)
        (cddar . g$5590$Of4HK)
        (cdadr . g$5589$Of4HK)
        (cdaar . g$5588$Of4HK)
        (caddr . g$5587$Of4HK)
        (cadar . g$5586$Of4HK)
        (caadr . g$5585$Of4HK)
        (caaar . g$5584$Of4HK)
        (cddr . g$5583$Of4HK)
        (cdar . g$5582$Of4HK)
        (cadr . g$5581$Of4HK)
        (caar . g$5580$Of4HK)
        (cdr . g$11288$Of4HK)
        (car . g$11287$Of4HK)
        (boolean? . g$11286$Of4HK)
        (boolean=? . g$11285$Of4HK)
        (atan . g$11284$Of4HK)
        (assertion-violation . g$11283$Of4HK)
        (asin . g$11282$Of4HK)
        (apply . g$11281$Of4HK)
        (append . g$11280$Of4HK)
        (angle . g$11279$Of4HK)
        (acos . g$11278$Of4HK)
        (abs . g$11277$Of4HK)
        (/ . g$11276$Of4HK)
        (* . g$11275$Of4HK)
        (- . g$11274$Of4HK)
        (+ . g$11273$Of4HK)
        (>= . g$11272$Of4HK)
        (> . g$11271$Of4HK)
        (= . g$11270$Of4HK)
        (<= . g$11269$Of4HK)
        (< . g$11268$Of4HK)
        (&no-nans . g$11243$Of4HK)
        (&no-infinities . g$11242$Of4HK)
        (&i/o-encoding . g$11241$Of4HK)
        (&i/o-decoding . g$11240$Of4HK)
        (&i/o-port . g$11239$Of4HK)
        (&i/o-file-does-not-exist . g$11238$Of4HK)
        (&i/o-file-already-exists . g$11237$Of4HK)
        (&i/o-file-is-read-only . g$11236$Of4HK)
        (&i/o-file-protection . g$11235$Of4HK)
        (&i/o-filename . g$11234$Of4HK)
        (&i/o-invalid-position . g$11233$Of4HK)
        (&i/o-write . g$11232$Of4HK)
        (&i/o-read . g$11231$Of4HK)
        (&i/o . g$11230$Of4HK)
        (&non-continuable . g$11229$Of4HK)
        (&undefined . g$11228$Of4HK)
        (&syntax . g$11227$Of4HK)
        (&lexical . g$11226$Of4HK)
        (&implementation-restriction . g$11225$Of4HK)
        (&who . g$11223$Of4HK)
        (&irritants . g$11222$Of4HK)
        (&assertion . g$11221$Of4HK)
        (&violation . g$11220$Of4HK)
        (&error . g$11219$Of4HK)
        (&serious . g$11218$Of4HK)
        (&warning . g$11217$Of4HK)
        (&message . g$11216$Of4HK)
        (&condition . g$11215$Of4HK)
        (define-condition-type . g$11214$Of4HK)
        (define-enumeration . g$11213$Of4HK)
        (define-record-type . g$11212$Of4HK)
        (parent-rtd . g$11211$Of4HK)
        (nongenerative . g$11210$Of4HK)
        (opaque . g$11209$Of4HK)
        (sealed . g$11208$Of4HK)
        (protocol . g$11207$Of4HK)
        (parent . g$11206$Of4HK)
        (immutable . g$11205$Of4HK)
        (mutable . g$11204$Of4HK)
        (fields . g$11203$Of4HK)
        (error-handling-mode . g$11202$Of4HK)
        (file-options . g$11201$Of4HK)
        (buffer-mode . g$11200$Of4HK)
        (eol-style . g$11199$Of4HK)
        (guard . g$11198$Of4HK)
        (unsyntax-splicing . g$11192$Of4HK)
        (unsyntax . g$11191$Of4HK)
        (unquote-splicing . g$11190$Of4HK)
        (unquote . g$11189$Of4HK)
        (_ . g$11188$Of4HK)
        (else . g$11187$Of4HK)
        (=> . g$11186$Of4HK)
        (... . g$11185$Of4HK)
        (assert . g$11184$Of4HK)
        (endianness . g$11183$Of4HK)
        (or . g$11180$Of4HK)
        (and . g$11179$Of4HK)
        (do . g$11178$Of4HK)
        (cond . g$11177$Of4HK)
        (let* . g$11176$Of4HK)
        (let . g$11175$Of4HK)
        (identifier-syntax . g$11174$Of4HK)
        (with-syntax . g$11173$Of4HK)
        (quasisyntax . g$11172$Of4HK)
        (quasiquote . g$11171$Of4HK)
        (syntax-rules . g$11170$Of4HK)
        (let-values . g$11166$Of4HK)
        (let*-values . g$11165$Of4HK)
        (record-constructor-descriptor . g$11164$Of4HK)
        (record-type-descriptor . g$11163$Of4HK)
        (case . g$11161$Of4HK)
        (unless . g$11159$Of4HK)
        (when . g$11158$Of4HK)
        (if . g$11157$Of4HK)
        (letrec* . g$11156$Of4HK)
        (letrec . g$11155$Of4HK)
        (case-lambda . g$11153$Of4HK)
        (lambda . g$11152$Of4HK)
        (syntax . g$11151$Of4HK)
        (syntax-case . g$11150$Of4HK)
        (quote . g$11149$Of4HK)
        (letrec-syntax . g$11147$Of4HK)
        (let-syntax . g$11146$Of4HK)
        (set! . g$11145$Of4HK)
        (import . g$11144$Of4HK)
        (library . g$11143$Of4HK)
        (begin . g$11142$Of4HK)
        (define-syntax . g$11140$Of4HK)
        (define . g$11139$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11806$Of4HK
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8206$Of4HK)
        (scheme-report-environment . g$8184$Of4HK)
        (quotient . g$6485$Of4HK)
        (null-environment . g$8183$Of4HK)
        (remainder . g$6486$Of4HK)
        (modulo . g$6487$Of4HK)
        (inexact->exact . g$11557$Of4HK)
        (force . g$11556$Of4HK)
        (exact->inexact . g$11555$Of4HK)
        (delay . g$11182$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11807$Of4HK
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11178$Of4HK)
        (unless . g$11159$Of4HK)
        (when . g$11158$Of4HK)
        (case-lambda . g$11153$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11808$Of4HK
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8186$Of4HK) (environment . g$8182$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11809$Of4HK
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$11550$Of4HK) (set-car! . g$11549$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11810$Of4HK
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$11552$Of4HK) (string-set! . g$11551$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11811$Of4HK
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$11554$Of4HK) (command-line . g$11553$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11812$Of4HK
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$7808$Of4HK)
        (identifier? . g$8201$Of4HK)
        (generate-temporaries . g$8193$Of4HK)
        (free-identifier=? . g$8194$Of4HK)
        (syntax->datum . g$8203$Of4HK)
        (datum->syntax . g$8202$Of4HK)
        (bound-identifier=? . g$8195$Of4HK)
        (syntax-violation . g$8200$Of4HK)
        (unsyntax-splicing . g$11192$Of4HK)
        (unsyntax . g$11191$Of4HK)
        (_ . g$11188$Of4HK)
        (... . g$11185$Of4HK)
        (with-syntax . g$11173$Of4HK)
        (quasisyntax . g$11172$Of4HK)
        (syntax . g$11151$Of4HK)
        (syntax-case . g$11150$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11813$Of4HK
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$5991$Of4HK)
        (file-exists? . g$5990$Of4HK)
        (make-i/o-write-error . g$6746$Of4HK)
        (make-i/o-read-error . g$6732$Of4HK)
        (make-i/o-port-error . g$6851$Of4HK)
        (make-i/o-invalid-position-error . g$6761$Of4HK)
        (make-i/o-filename-error . g$6778$Of4HK)
        (make-i/o-file-protection-error . g$6794$Of4HK)
        (make-i/o-file-is-read-only-error . g$6808$Of4HK)
        (make-i/o-file-does-not-exist-error . g$6836$Of4HK)
        (make-i/o-file-already-exists-error . g$6822$Of4HK)
        (make-i/o-error . g$6718$Of4HK)
        (i/o-write-error? . g$6747$Of4HK)
        (i/o-read-error? . g$6733$Of4HK)
        (i/o-port-error? . g$6853$Of4HK)
        (i/o-invalid-position-error? . g$6763$Of4HK)
        (i/o-filename-error? . g$6780$Of4HK)
        (i/o-file-protection-error? . g$6795$Of4HK)
        (i/o-file-is-read-only-error? . g$6809$Of4HK)
        (i/o-file-does-not-exist-error? . g$6837$Of4HK)
        (i/o-file-already-exists-error? . g$6823$Of4HK)
        (i/o-error? . g$6719$Of4HK)
        (i/o-error-port . g$6854$Of4HK)
        (i/o-error-filename . g$6781$Of4HK)
        (&i/o-port . g$11239$Of4HK)
        (&i/o-file-does-not-exist . g$11238$Of4HK)
        (&i/o-file-already-exists . g$11237$Of4HK)
        (&i/o-file-is-read-only . g$11236$Of4HK)
        (&i/o-file-protection . g$11235$Of4HK)
        (&i/o-filename . g$11234$Of4HK)
        (&i/o-invalid-position . g$11233$Of4HK)
        (&i/o-write . g$11232$Of4HK)
        (&i/o-read . g$11231$Of4HK)
        (&i/o . g$11230$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11814$Of4HK
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$11655$Of4HK)
        (vector-sort . g$11654$Of4HK)
        (list-sort . g$6498$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11815$Of4HK
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$11400$Of4HK)
        (vector? . g$11399$Of4HK)
        (vector-set! . g$11398$Of4HK)
        (vector-ref . g$11397$Of4HK)
        (vector-map . g$11396$Of4HK)
        (vector-length . g$11395$Of4HK)
        (vector-for-each . g$11394$Of4HK)
        (vector-fill! . g$11393$Of4HK)
        (vector->list . g$11392$Of4HK)
        (vector . g$11391$Of4HK)
        (values . g$11390$Of4HK)
        (truncate . g$11389$Of4HK)
        (tan . g$11388$Of4HK)
        (symbol? . g$11387$Of4HK)
        (symbol=? . g$11386$Of4HK)
        (symbol->string . g$11385$Of4HK)
        (substring . g$11384$Of4HK)
        (string? . g$11383$Of4HK)
        (string>? . g$11382$Of4HK)
        (string>=? . g$11381$Of4HK)
        (string=? . g$11380$Of4HK)
        (string<? . g$11379$Of4HK)
        (string<=? . g$11378$Of4HK)
        (string-ref . g$11377$Of4HK)
        (string-length . g$11376$Of4HK)
        (string-for-each . g$11375$Of4HK)
        (string-copy . g$11374$Of4HK)
        (string-append . g$11373$Of4HK)
        (string->symbol . g$11372$Of4HK)
        (string->number . g$11371$Of4HK)
        (string->list . g$11370$Of4HK)
        (string . g$11369$Of4HK)
        (sqrt . g$11368$Of4HK)
        (sin . g$11367$Of4HK)
        (round . g$11366$Of4HK)
        (reverse . g$11365$Of4HK)
        (real? . g$11364$Of4HK)
        (real-valued? . g$11363$Of4HK)
        (real-part . g$11362$Of4HK)
        (rationalize . g$5608$Of4HK)
        (rational? . g$11361$Of4HK)
        (rational-valued? . g$11360$Of4HK)
        (procedure? . g$11359$Of4HK)
        (positive? . g$11358$Of4HK)
        (pair? . g$11357$Of4HK)
        (odd? . g$11356$Of4HK)
        (numerator . g$11355$Of4HK)
        (number? . g$11354$Of4HK)
        (number->string . g$11353$Of4HK)
        (null? . g$11352$Of4HK)
        (not . g$11351$Of4HK)
        (negative? . g$11350$Of4HK)
        (nan? . g$11349$Of4HK)
        (min . g$11348$Of4HK)
        (max . g$11347$Of4HK)
        (map . g$11346$Of4HK)
        (make-vector . g$11345$Of4HK)
        (make-string . g$11344$Of4HK)
        (make-rectangular . g$11343$Of4HK)
        (make-polar . g$11342$Of4HK)
        (magnitude . g$11341$Of4HK)
        (log . g$11340$Of4HK)
        (list? . g$11339$Of4HK)
        (list-tail . g$11338$Of4HK)
        (list-ref . g$11337$Of4HK)
        (list->vector . g$11336$Of4HK)
        (list->string . g$11335$Of4HK)
        (list . g$11334$Of4HK)
        (length . g$11333$Of4HK)
        (lcm . g$11332$Of4HK)
        (integer? . g$11331$Of4HK)
        (integer-valued? . g$11330$Of4HK)
        (integer->char . g$11329$Of4HK)
        (infinite? . g$11328$Of4HK)
        (inexact? . g$11327$Of4HK)
        (inexact . g$11326$Of4HK)
        (imag-part . g$11325$Of4HK)
        (gcd . g$11324$Of4HK)
        (for-each . g$11323$Of4HK)
        (floor . g$11322$Of4HK)
        (finite? . g$11321$Of4HK)
        (expt . g$11320$Of4HK)
        (exp . g$11319$Of4HK)
        (exact? . g$11318$Of4HK)
        (exact-integer-sqrt . g$11317$Of4HK)
        (exact . g$11316$Of4HK)
        (even? . g$11315$Of4HK)
        (error . g$11314$Of4HK)
        (eqv? . g$11313$Of4HK)
        (equal? . g$11312$Of4HK)
        (eq? . g$11311$Of4HK)
        (dynamic-wind . g$11310$Of4HK)
        (div0-and-mod0 . g$11309$Of4HK)
        (mod0 . g$11308$Of4HK)
        (div0 . g$11307$Of4HK)
        (div-and-mod . g$11306$Of4HK)
        (mod . g$11305$Of4HK)
        (div . g$11304$Of4HK)
        (denominator . g$11303$Of4HK)
        (cos . g$11302$Of4HK)
        (cons . g$11301$Of4HK)
        (complex? . g$11300$Of4HK)
        (char? . g$11299$Of4HK)
        (char>? . g$11298$Of4HK)
        (char>=? . g$11297$Of4HK)
        (char=? . g$11296$Of4HK)
        (char<? . g$11295$Of4HK)
        (char<=? . g$11294$Of4HK)
        (char->integer . g$11293$Of4HK)
        (ceiling . g$11292$Of4HK)
        (call-with-values . g$11291$Of4HK)
        (call/cc . g$11290$Of4HK)
        (call-with-current-continuation . g$11289$Of4HK)
        (cddddr . g$5607$Of4HK)
        (cdddar . g$5606$Of4HK)
        (cddadr . g$5605$Of4HK)
        (cddaar . g$5604$Of4HK)
        (cdaddr . g$5603$Of4HK)
        (cdadar . g$5602$Of4HK)
        (cdaadr . g$5601$Of4HK)
        (cdaaar . g$5600$Of4HK)
        (cadddr . g$5599$Of4HK)
        (caddar . g$5598$Of4HK)
        (cadadr . g$5597$Of4HK)
        (cadaar . g$5596$Of4HK)
        (caaddr . g$5595$Of4HK)
        (caadar . g$5594$Of4HK)
        (caaadr . g$5593$Of4HK)
        (caaaar . g$5592$Of4HK)
        (cdddr . g$5591$Of4HK)
        (cddar . g$5590$Of4HK)
        (cdadr . g$5589$Of4HK)
        (cdaar . g$5588$Of4HK)
        (caddr . g$5587$Of4HK)
        (cadar . g$5586$Of4HK)
        (caadr . g$5585$Of4HK)
        (caaar . g$5584$Of4HK)
        (cddr . g$5583$Of4HK)
        (cdar . g$5582$Of4HK)
        (cadr . g$5581$Of4HK)
        (caar . g$5580$Of4HK)
        (cdr . g$11288$Of4HK)
        (car . g$11287$Of4HK)
        (boolean? . g$11286$Of4HK)
        (boolean=? . g$11285$Of4HK)
        (atan . g$11284$Of4HK)
        (assertion-violation . g$11283$Of4HK)
        (asin . g$11282$Of4HK)
        (apply . g$11281$Of4HK)
        (append . g$11280$Of4HK)
        (angle . g$11279$Of4HK)
        (acos . g$11278$Of4HK)
        (abs . g$11277$Of4HK)
        (/ . g$11276$Of4HK)
        (* . g$11275$Of4HK)
        (- . g$11274$Of4HK)
        (+ . g$11273$Of4HK)
        (>= . g$11272$Of4HK)
        (> . g$11271$Of4HK)
        (= . g$11270$Of4HK)
        (<= . g$11269$Of4HK)
        (< . g$11268$Of4HK)
        (unquote-splicing . g$11190$Of4HK)
        (unquote . g$11189$Of4HK)
        (_ . g$11188$Of4HK)
        (else . g$11187$Of4HK)
        (=> . g$11186$Of4HK)
        (... . g$11185$Of4HK)
        (assert . g$11184$Of4HK)
        (or . g$11180$Of4HK)
        (and . g$11179$Of4HK)
        (cond . g$11177$Of4HK)
        (let* . g$11176$Of4HK)
        (let . g$11175$Of4HK)
        (identifier-syntax . g$11174$Of4HK)
        (quasiquote . g$11171$Of4HK)
        (syntax-rules . g$11170$Of4HK)
        (let-values . g$11166$Of4HK)
        (let*-values . g$11165$Of4HK)
        (case . g$11161$Of4HK)
        (if . g$11157$Of4HK)
        (letrec* . g$11156$Of4HK)
        (letrec . g$11155$Of4HK)
        (lambda . g$11152$Of4HK)
        (quote . g$11149$Of4HK)
        (letrec-syntax . g$11147$Of4HK)
        (let-syntax . g$11146$Of4HK)
        (set! . g$11145$Of4HK)
        (begin . g$11142$Of4HK)
        (define-syntax . g$11140$Of4HK)
        (define . g$11139$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11816$Of4HK
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6071$Of4HK)
        (remv . g$6072$Of4HK)
        (remp . g$6057$Of4HK)
        (remq . g$6073$Of4HK)
        (partition . g$6056$Of4HK)
        (memv . g$11548$Of4HK)
        (memq . g$11547$Of4HK)
        (memp . g$6063$Of4HK)
        (member . g$6062$Of4HK)
        (exists . g$6067$Of4HK)
        (for-all . g$6066$Of4HK)
        (fold-right . g$6070$Of4HK)
        (fold-left . g$6069$Of4HK)
        (find . g$6055$Of4HK)
        (filter . g$6058$Of4HK)
        (cons* . g$6068$Of4HK)
        (assv . g$6059$Of4HK)
        (assq . g$11546$Of4HK)
        (assp . g$6061$Of4HK)
        (assoc . g$6060$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11817$Of4HK
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$11641$Of4HK)
        (call-with-input-file . g$11640$Of4HK)
        (write-char . g$11639$Of4HK)
        (write . g$11638$Of4HK)
        (with-output-to-file . g$11637$Of4HK)
        (with-input-from-file . g$11636$Of4HK)
        (read-char . g$11635$Of4HK)
        (read . g$11634$Of4HK)
        (peek-char . g$11633$Of4HK)
        (open-output-file . g$11632$Of4HK)
        (open-input-file . g$11631$Of4HK)
        (newline . g$11630$Of4HK)
        (display . g$11629$Of4HK)
        (close-output-port . g$11628$Of4HK)
        (close-input-port . g$11627$Of4HK)
        (eof-object? . g$11626$Of4HK)
        (eof-object . g$11625$Of4HK)
        (current-error-port . g$11624$Of4HK)
        (current-output-port . g$11623$Of4HK)
        (current-input-port . g$11622$Of4HK)
        (output-port? . g$11621$Of4HK)
        (input-port? . g$11620$Of4HK)
        (make-i/o-write-error . g$6746$Of4HK)
        (make-i/o-read-error . g$6732$Of4HK)
        (make-i/o-port-error . g$6851$Of4HK)
        (make-i/o-invalid-position-error . g$6761$Of4HK)
        (make-i/o-filename-error . g$6778$Of4HK)
        (make-i/o-file-protection-error . g$6794$Of4HK)
        (make-i/o-file-is-read-only-error . g$6808$Of4HK)
        (make-i/o-file-does-not-exist-error . g$6836$Of4HK)
        (make-i/o-file-already-exists-error . g$6822$Of4HK)
        (make-i/o-error . g$6718$Of4HK)
        (i/o-write-error? . g$6747$Of4HK)
        (i/o-read-error? . g$6733$Of4HK)
        (i/o-port-error? . g$6853$Of4HK)
        (i/o-invalid-position-error? . g$6763$Of4HK)
        (i/o-filename-error? . g$6780$Of4HK)
        (i/o-file-protection-error? . g$6795$Of4HK)
        (i/o-file-is-read-only-error? . g$6809$Of4HK)
        (i/o-file-does-not-exist-error? . g$6837$Of4HK)
        (i/o-file-already-exists-error? . g$6823$Of4HK)
        (i/o-error? . g$6719$Of4HK)
        (i/o-error-port . g$6854$Of4HK)
        (i/o-error-filename . g$6781$Of4HK)
        (&i/o-port . g$11239$Of4HK)
        (&i/o-file-does-not-exist . g$11238$Of4HK)
        (&i/o-file-already-exists . g$11237$Of4HK)
        (&i/o-file-is-read-only . g$11236$Of4HK)
        (&i/o-file-protection . g$11235$Of4HK)
        (&i/o-filename . g$11234$Of4HK)
        (&i/o-invalid-position . g$11233$Of4HK)
        (&i/o-write . g$11232$Of4HK)
        (&i/o-read . g$11231$Of4HK)
        (&i/o . g$11230$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11818$Of4HK
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$11579$Of4HK)
        (utf32->string . g$11524$Of4HK)
        (utf16->string . g$11523$Of4HK)
        (utf8->string . g$11522$Of4HK)
        (uint-list->bytevector . g$11521$Of4HK)
        (u8-list->bytevector . g$11520$Of4HK)
        (string->utf8 . g$11519$Of4HK)
        (string->utf32 . g$11518$Of4HK)
        (string->utf16 . g$11517$Of4HK)
        (sint-list->bytevector . g$11516$Of4HK)
        (native-endianness . g$6147$Of4HK)
        (bytevector? . g$11515$Of4HK)
        (bytevector=? . g$11514$Of4HK)
        (bytevector-uint-set! . g$11513$Of4HK)
        (bytevector-uint-ref . g$11512$Of4HK)
        (bytevector-u8-set! . g$11511$Of4HK)
        (bytevector-u8-ref . g$11510$Of4HK)
        (bytevector-u64-set! . g$6168$Of4HK)
        (bytevector-u64-ref . g$6164$Of4HK)
        (bytevector-u64-native-set! . g$6170$Of4HK)
        (bytevector-u64-native-ref . g$6166$Of4HK)
        (bytevector-u32-set! . g$6160$Of4HK)
        (bytevector-u32-ref . g$6156$Of4HK)
        (bytevector-u32-native-set! . g$6162$Of4HK)
        (bytevector-u32-native-ref . g$6158$Of4HK)
        (bytevector-u16-set! . g$6152$Of4HK)
        (bytevector-u16-ref . g$6148$Of4HK)
        (bytevector-u16-native-set! . g$6154$Of4HK)
        (bytevector-u16-native-ref . g$6150$Of4HK)
        (bytevector-sint-set! . g$11509$Of4HK)
        (bytevector-sint-ref . g$11508$Of4HK)
        (bytevector-s8-set! . g$11507$Of4HK)
        (bytevector-s8-ref . g$11506$Of4HK)
        (bytevector-s64-set! . g$6169$Of4HK)
        (bytevector-s64-ref . g$6165$Of4HK)
        (bytevector-s64-native-set! . g$6171$Of4HK)
        (bytevector-s64-native-ref . g$6167$Of4HK)
        (bytevector-s32-set! . g$6161$Of4HK)
        (bytevector-s32-ref . g$6157$Of4HK)
        (bytevector-s32-native-set! . g$6163$Of4HK)
        (bytevector-s32-native-ref . g$6159$Of4HK)
        (bytevector-s16-set! . g$6153$Of4HK)
        (bytevector-s16-ref . g$6149$Of4HK)
        (bytevector-s16-native-set! . g$6155$Of4HK)
        (bytevector-s16-native-ref . g$6151$Of4HK)
        (bytevector-length . g$11505$Of4HK)
        (bytevector-ieee-single-set! . g$11504$Of4HK)
        (bytevector-ieee-single-ref . g$11503$Of4HK)
        (bytevector-ieee-single-native-set! . g$6174$Of4HK)
        (bytevector-ieee-single-native-ref . g$6172$Of4HK)
        (bytevector-ieee-double-set! . g$11502$Of4HK)
        (bytevector-ieee-double-ref . g$11501$Of4HK)
        (bytevector-ieee-double-native-set! . g$6175$Of4HK)
        (bytevector-ieee-double-native-ref . g$6173$Of4HK)
        (bytevector-fill! . g$11500$Of4HK)
        (bytevector-copy! . g$11499$Of4HK)
        (bytevector-copy . g$11498$Of4HK)
        (bytevector->uint-list . g$11497$Of4HK)
        (bytevector->u8-list . g$11496$Of4HK)
        (bytevector->sint-list . g$11495$Of4HK)
        (endianness . g$11183$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11819$Of4HK
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11701$Of4HK)
        (string-titlecase . g$11700$Of4HK)
        (string-normalize-nfkd . g$11699$Of4HK)
        (string-normalize-nfkc . g$11698$Of4HK)
        (string-normalize-nfd . g$11697$Of4HK)
        (string-normalize-nfc . g$11696$Of4HK)
        (string-foldcase . g$11695$Of4HK)
        (string-downcase . g$11694$Of4HK)
        (string-ci>? . g$11693$Of4HK)
        (string-ci>=? . g$11692$Of4HK)
        (string-ci=? . g$11691$Of4HK)
        (string-ci<? . g$11690$Of4HK)
        (string-ci<=? . g$11689$Of4HK)
        (char-whitespace? . g$11688$Of4HK)
        (char-upper-case? . g$11687$Of4HK)
        (char-title-case? . g$11686$Of4HK)
        (char-numeric? . g$11685$Of4HK)
        (char-lower-case? . g$11684$Of4HK)
        (char-general-category . g$11683$Of4HK)
        (char-upcase . g$11682$Of4HK)
        (char-titlecase . g$11681$Of4HK)
        (char-foldcase . g$11680$Of4HK)
        (char-downcase . g$11679$Of4HK)
        (char-ci>? . g$11678$Of4HK)
        (char-ci>=? . g$11677$Of4HK)
        (char-ci=? . g$11676$Of4HK)
        (char-ci<? . g$11675$Of4HK)
        (char-ci<=? . g$11674$Of4HK)
        (char-alphabetic? . g$11673$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11820$Of4HK
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$11545$Of4HK)
        (raise-continuable . g$11544$Of4HK)
        (raise . g$11543$Of4HK)
        (guard . g$11198$Of4HK)
        (else . g$11187$Of4HK)
        (=> . g$11186$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11821$Of4HK
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6583$Of4HK)
        (bitwise-reverse-bit-field . g$6584$Of4HK)
        (bitwise-length . g$11410$Of4HK)
        (bitwise-if . g$6577$Of4HK)
        (bitwise-first-bit-set . g$11409$Of4HK)
        (bitwise-copy-bit-field . g$6580$Of4HK)
        (bitwise-copy-bit . g$6578$Of4HK)
        (bitwise-bit-set? . g$11408$Of4HK)
        (bitwise-bit-field . g$11407$Of4HK)
        (bitwise-bit-count . g$11406$Of4HK)
        (bitwise-xor . g$11405$Of4HK)
        (bitwise-ior . g$11404$Of4HK)
        (bitwise-and . g$11403$Of4HK)
        (bitwise-not . g$11402$Of4HK)
        (bitwise-arithmetic-shift-right . g$6582$Of4HK)
        (bitwise-arithmetic-shift-left . g$6581$Of4HK)
        (bitwise-arithmetic-shift . g$11401$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11822$Of4HK
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$11448$Of4HK)
        (fxxor . g$11447$Of4HK)
        (fxrotate-bit-field . g$6635$Of4HK)
        (fxreverse-bit-field . g$11446$Of4HK)
        (fxpositive? . g$11445$Of4HK)
        (fxodd? . g$11444$Of4HK)
        (fxnot . g$11443$Of4HK)
        (fxnegative? . g$11442$Of4HK)
        (fxmod0 . g$11441$Of4HK)
        (fxmod . g$11440$Of4HK)
        (fxmin . g$11439$Of4HK)
        (fxmax . g$11438$Of4HK)
        (fxlength . g$11437$Of4HK)
        (fxior . g$11436$Of4HK)
        (fxif . g$6629$Of4HK)
        (fxfirst-bit-set . g$11435$Of4HK)
        (fxeven? . g$11434$Of4HK)
        (fxdiv0-and-mod0 . g$11433$Of4HK)
        (fxdiv0 . g$11432$Of4HK)
        (fxdiv-and-mod . g$11431$Of4HK)
        (fxdiv . g$11430$Of4HK)
        (fxcopy-bit-field . g$6632$Of4HK)
        (fxcopy-bit . g$6630$Of4HK)
        (fxbit-set? . g$11429$Of4HK)
        (fxbit-field . g$6631$Of4HK)
        (fxbit-count . g$11428$Of4HK)
        (fxarithmetic-shift-right . g$6634$Of4HK)
        (fxarithmetic-shift-left . g$6633$Of4HK)
        (fxarithmetic-shift . g$11427$Of4HK)
        (fxand . g$11426$Of4HK)
        (fx>? . g$11425$Of4HK)
        (fx>=? . g$11424$Of4HK)
        (fx=? . g$11423$Of4HK)
        (fx<? . g$11422$Of4HK)
        (fx<=? . g$11421$Of4HK)
        (fx-/carry . g$11420$Of4HK)
        (fx- . g$11419$Of4HK)
        (fx+/carry . g$11418$Of4HK)
        (fx+ . g$11417$Of4HK)
        (fx*/carry . g$11416$Of4HK)
        (fx* . g$11415$Of4HK)
        (greatest-fixnum . g$11414$Of4HK)
        (least-fixnum . g$11413$Of4HK)
        (fixnum-width . g$11412$Of4HK)
        (fixnum? . g$11411$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11823$Of4HK
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6704$Of4HK)
        (no-infinities-violation? . g$6690$Of4HK)
        (make-no-nans-violation . g$6703$Of4HK)
        (make-no-infinities-violation . g$6689$Of4HK)
        (real->flonum . g$11494$Of4HK)
        (flzero? . g$11493$Of4HK)
        (fltruncate . g$11492$Of4HK)
        (fltan . g$11491$Of4HK)
        (flsqrt . g$11490$Of4HK)
        (flsin . g$11489$Of4HK)
        (flround . g$11488$Of4HK)
        (flpositive? . g$11487$Of4HK)
        (flonum? . g$11486$Of4HK)
        (flodd? . g$11485$Of4HK)
        (flnumerator . g$11484$Of4HK)
        (flnegative? . g$11483$Of4HK)
        (flnan? . g$11482$Of4HK)
        (flmod0 . g$11481$Of4HK)
        (flmod . g$11480$Of4HK)
        (flmin . g$11479$Of4HK)
        (flmax . g$11478$Of4HK)
        (fllog . g$11477$Of4HK)
        (flinteger? . g$11476$Of4HK)
        (flinfinite? . g$11475$Of4HK)
        (flfloor . g$11474$Of4HK)
        (flfinite? . g$11473$Of4HK)
        (flexpt . g$11472$Of4HK)
        (flexp . g$11471$Of4HK)
        (fleven? . g$11470$Of4HK)
        (fldiv0-and-mod0 . g$11469$Of4HK)
        (fldiv0 . g$11468$Of4HK)
        (fldiv-and-mod . g$11467$Of4HK)
        (fldiv . g$11466$Of4HK)
        (fldenominator . g$11465$Of4HK)
        (flcos . g$11464$Of4HK)
        (flceiling . g$11463$Of4HK)
        (flatan . g$11462$Of4HK)
        (flasin . g$11461$Of4HK)
        (flacos . g$11460$Of4HK)
        (flabs . g$11459$Of4HK)
        (fl>? . g$11458$Of4HK)
        (fl>=? . g$11457$Of4HK)
        (fl=? . g$11456$Of4HK)
        (fl<? . g$11455$Of4HK)
        (fl<=? . g$11454$Of4HK)
        (fl/ . g$11453$Of4HK)
        (fl- . g$11452$Of4HK)
        (fl+ . g$11451$Of4HK)
        (fl* . g$11450$Of4HK)
        (fixnum->flonum . g$11449$Of4HK)
        (&no-nans . g$11243$Of4HK)
        (&no-infinities . g$11242$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11824$Of4HK
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$11653$Of4HK)
        (string-ci-hash . g$11652$Of4HK)
        (string-hash . g$11651$Of4HK)
        (equal-hash . g$11650$Of4HK)
        (hashtable-equivalence-function . g$11649$Of4HK)
        (make-hashtable . g$11648$Of4HK)
        (hashtable-hash-function . g$11647$Of4HK)
        (make-eqv-hashtable . g$5958$Of4HK)
        (make-eq-hashtable . g$5957$Of4HK)
        (hashtable? . g$11646$Of4HK)
        (hashtable-update! . g$5964$Of4HK)
        (hashtable-size . g$5959$Of4HK)
        (hashtable-set! . g$5961$Of4HK)
        (hashtable-ref . g$5960$Of4HK)
        (hashtable-mutable? . g$11645$Of4HK)
        (hashtable-keys . g$11644$Of4HK)
        (hashtable-entries . g$11643$Of4HK)
        (hashtable-delete! . g$5962$Of4HK)
        (hashtable-copy . g$11642$Of4HK)
        (hashtable-contains? . g$5963$Of4HK)
        (hashtable-clear! . g$5965$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11825$Of4HK
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$11626$Of4HK)
        (eof-object . g$11625$Of4HK)
        (current-error-port . g$11624$Of4HK)
        (current-output-port . g$11623$Of4HK)
        (current-input-port . g$11622$Of4HK)
        (output-port? . g$11621$Of4HK)
        (input-port? . g$11620$Of4HK)
        (utf-8-codec . g$11619$Of4HK)
        (utf-16-codec . g$11618$Of4HK)
        (transcoder-error-handling-mode . g$11617$Of4HK)
        (transcoder-eol-style . g$11616$Of4HK)
        (transcoder-codec . g$11615$Of4HK)
        (transcoded-port . g$11614$Of4HK)
        (textual-port? . g$11613$Of4HK)
        (string->bytevector . g$11612$Of4HK)
        (standard-output-port . g$11611$Of4HK)
        (standard-input-port . g$11610$Of4HK)
        (standard-error-port . g$11609$Of4HK)
        (set-port-position! . g$11608$Of4HK)
        (put-u8 . g$11607$Of4HK)
        (put-string . g$11606$Of4HK)
        (put-datum . g$11605$Of4HK)
        (put-char . g$11604$Of4HK)
        (put-bytevector . g$11603$Of4HK)
        (port? . g$11602$Of4HK)
        (port-transcoder . g$11601$Of4HK)
        (port-position . g$11600$Of4HK)
        (port-has-set-port-position!? . g$11599$Of4HK)
        (port-has-port-position? . g$11598$Of4HK)
        (port-eof? . g$11597$Of4HK)
        (output-port-buffer-mode . g$11596$Of4HK)
        (open-string-output-port . g$6889$Of4HK)
        (open-string-input-port . g$11595$Of4HK)
        (open-file-output-port . g$11594$Of4HK)
        (open-file-input/output-port . g$11593$Of4HK)
        (open-file-input-port . g$11592$Of4HK)
        (open-bytevector-output-port . g$11591$Of4HK)
        (open-bytevector-input-port . g$11590$Of4HK)
        (native-transcoder . g$11589$Of4HK)
        (native-eol-style . g$11588$Of4HK)
        (make-transcoder . g$11587$Of4HK)
        (latin-1-codec . g$11586$Of4HK)
        (make-i/o-write-error . g$6746$Of4HK)
        (make-i/o-read-error . g$6732$Of4HK)
        (make-i/o-port-error . g$6851$Of4HK)
        (make-i/o-invalid-position-error . g$6761$Of4HK)
        (make-i/o-filename-error . g$6778$Of4HK)
        (make-i/o-file-protection-error . g$6794$Of4HK)
        (make-i/o-file-is-read-only-error . g$6808$Of4HK)
        (make-i/o-file-does-not-exist-error . g$6836$Of4HK)
        (make-i/o-file-already-exists-error . g$6822$Of4HK)
        (make-i/o-error . g$6718$Of4HK)
        (make-i/o-encoding-error . g$6882$Of4HK)
        (make-i/o-decoding-error . g$6867$Of4HK)
        (make-custom-textual-output-port . g$11585$Of4HK)
        (make-custom-textual-input/output-port . g$11584$Of4HK)
        (make-custom-textual-input-port . g$11583$Of4HK)
        (make-custom-binary-output-port . g$11582$Of4HK)
        (make-custom-binary-input/output-port . g$11581$Of4HK)
        (make-custom-binary-input-port . g$11580$Of4HK)
        (lookahead-u8 . g$11578$Of4HK)
        (lookahead-char . g$11577$Of4HK)
        (i/o-write-error? . g$6747$Of4HK)
        (i/o-read-error? . g$6733$Of4HK)
        (i/o-port-error? . g$6853$Of4HK)
        (i/o-invalid-position-error? . g$6763$Of4HK)
        (i/o-filename-error? . g$6780$Of4HK)
        (i/o-file-protection-error? . g$6795$Of4HK)
        (i/o-file-is-read-only-error? . g$6809$Of4HK)
        (i/o-file-does-not-exist-error? . g$6837$Of4HK)
        (i/o-file-already-exists-error? . g$6823$Of4HK)
        (i/o-error? . g$6719$Of4HK)
        (i/o-error-port . g$6854$Of4HK)
        (i/o-error-filename . g$6781$Of4HK)
        (i/o-encoding-error? . g$6884$Of4HK)
        (i/o-encoding-error-char . g$6885$Of4HK)
        (i/o-decoding-error? . g$6868$Of4HK)
        (get-u8 . g$11576$Of4HK)
        (get-string-n! . g$11575$Of4HK)
        (get-string-n . g$11574$Of4HK)
        (get-string-all . g$11573$Of4HK)
        (get-line . g$11572$Of4HK)
        (get-datum . g$11571$Of4HK)
        (get-char . g$11570$Of4HK)
        (get-bytevector-some . g$11569$Of4HK)
        (get-bytevector-n! . g$11568$Of4HK)
        (get-bytevector-n . g$11567$Of4HK)
        (get-bytevector-all . g$11566$Of4HK)
        (flush-output-port . g$11565$Of4HK)
        (close-port . g$11564$Of4HK)
        (call-with-string-output-port . g$11563$Of4HK)
        (call-with-port . g$11562$Of4HK)
        (call-with-bytevector-output-port . g$11561$Of4HK)
        (bytevector->string . g$11560$Of4HK)
        (buffer-mode? . g$11559$Of4HK)
        (binary-port? . g$11558$Of4HK)
        (&i/o-encoding . g$11241$Of4HK)
        (&i/o-decoding . g$11240$Of4HK)
        (&i/o-port . g$11239$Of4HK)
        (&i/o-file-does-not-exist . g$11238$Of4HK)
        (&i/o-file-already-exists . g$11237$Of4HK)
        (&i/o-file-is-read-only . g$11236$Of4HK)
        (&i/o-file-protection . g$11235$Of4HK)
        (&i/o-filename . g$11234$Of4HK)
        (&i/o-invalid-position . g$11233$Of4HK)
        (&i/o-write . g$11232$Of4HK)
        (&i/o-read . g$11231$Of4HK)
        (&i/o . g$11230$Of4HK)
        (error-handling-mode . g$11202$Of4HK)
        (file-options . g$11201$Of4HK)
        (buffer-mode . g$11200$Of4HK)
        (eol-style . g$11199$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11826$Of4HK
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$11542$Of4HK)
        (enum-set=? . g$11541$Of4HK)
        (enum-set-universe . g$11540$Of4HK)
        (enum-set-union . g$11539$Of4HK)
        (enum-set-subset? . g$11538$Of4HK)
        (enum-set-projection . g$11537$Of4HK)
        (enum-set-member? . g$11536$Of4HK)
        (enum-set-intersection . g$11535$Of4HK)
        (enum-set-indexer . g$11534$Of4HK)
        (enum-set-difference . g$11533$Of4HK)
        (enum-set-constructor . g$11532$Of4HK)
        (enum-set-complement . g$11531$Of4HK)
        (enum-set->list . g$11530$Of4HK)
        (define-enumeration . g$11213$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11827$Of4HK
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6396$Of4HK)
        (warning? . g$6307$Of4HK)
        (violation? . g$6349$Of4HK)
        (undefined-violation? . g$6473$Of4HK)
        (syntax-violation? . g$6457$Of4HK)
        (syntax-violation-subform . g$6459$Of4HK)
        (syntax-violation-form . g$6458$Of4HK)
        (syntax-violation . g$8200$Of4HK)
        (simple-conditions . g$11529$Of4HK)
        (serious-condition? . g$6321$Of4HK)
        (non-continuable-violation? . g$6411$Of4HK)
        (message-condition? . g$6292$Of4HK)
        (make-who-condition . g$6394$Of4HK)
        (make-warning . g$6306$Of4HK)
        (make-violation . g$6348$Of4HK)
        (make-undefined-violation . g$6472$Of4HK)
        (make-syntax-violation . g$6454$Of4HK)
        (make-serious-condition . g$6320$Of4HK)
        (make-non-continuable-violation . g$6410$Of4HK)
        (make-message-condition . g$6290$Of4HK)
        (make-lexical-violation . g$6438$Of4HK)
        (make-irritants-condition . g$6377$Of4HK)
        (make-implementation-restriction-violation . g$6424$Of4HK)
        (make-error . g$6334$Of4HK)
        (make-assertion-violation . g$6362$Of4HK)
        (lexical-violation? . g$6439$Of4HK)
        (irritants-condition? . g$6379$Of4HK)
        (implementation-restriction-violation? . g$6425$Of4HK)
        (error? . g$6335$Of4HK)
        (condition-who . g$6397$Of4HK)
        (condition-predicate . g$11528$Of4HK)
        (condition-message . g$6293$Of4HK)
        (condition-irritants . g$6380$Of4HK)
        (condition-accessor . g$11527$Of4HK)
        (condition . g$11526$Of4HK)
        (assertion-violation? . g$6363$Of4HK)
        (condition? . g$11525$Of4HK)
        (&non-continuable . g$11229$Of4HK)
        (&undefined . g$11228$Of4HK)
        (&syntax . g$11227$Of4HK)
        (&lexical . g$11226$Of4HK)
        (&implementation-restriction . g$11225$Of4HK)
        (&who . g$11223$Of4HK)
        (&irritants . g$11222$Of4HK)
        (&assertion . g$11221$Of4HK)
        (&violation . g$11220$Of4HK)
        (&error . g$11219$Of4HK)
        (&serious . g$11218$Of4HK)
        (&warning . g$11217$Of4HK)
        (&message . g$11216$Of4HK)
        (&condition . g$11215$Of4HK)
        (define-condition-type . g$11214$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11828$Of4HK
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$11665$Of4HK)
        (record-type-uid . g$11664$Of4HK)
        (record-type-sealed? . g$11663$Of4HK)
        (record-type-parent . g$11662$Of4HK)
        (record-type-opaque? . g$11661$Of4HK)
        (record-type-name . g$11660$Of4HK)
        (record-type-generative? . g$11659$Of4HK)
        (record-type-field-names . g$11658$Of4HK)
        (record-rtd . g$11657$Of4HK)
        (record-field-mutable? . g$11656$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11829$Of4HK
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$11672$Of4HK)
        (record-predicate . g$11671$Of4HK)
        (record-mutator . g$11670$Of4HK)
        (record-constructor . g$11669$Of4HK)
        (record-accessor . g$11668$Of4HK)
        (make-record-type-descriptor . g$11667$Of4HK)
        (make-record-constructor-descriptor . g$11666$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11830$Of4HK
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11212$Of4HK)
        (parent-rtd . g$11211$Of4HK)
        (nongenerative . g$11210$Of4HK)
        (opaque . g$11209$Of4HK)
        (sealed . g$11208$Of4HK)
        (protocol . g$11207$Of4HK)
        (parent . g$11206$Of4HK)
        (immutable . g$11205$Of4HK)
        (mutable . g$11204$Of4HK)
        (fields . g$11203$Of4HK)
        (record-constructor-descriptor . g$11164$Of4HK)
        (record-type-descriptor . g$11163$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6731$Of4HK
      'g$11831$Of4HK
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8078$Of4HK)
        (&no-nans-rcd . g$11795$Of4HK)
        (&no-nans-rtd . g$11794$Of4HK)
        (&no-infinities-rcd . g$11793$Of4HK)
        (&no-infinities-rtd . g$11792$Of4HK)
        (&i/o-encoding-rcd . g$11791$Of4HK)
        (&i/o-encoding-rtd . g$11790$Of4HK)
        (&i/o-decoding-rcd . g$11789$Of4HK)
        (&i/o-decoding-rtd . g$11788$Of4HK)
        (&i/o-port-rcd . g$11787$Of4HK)
        (&i/o-port-rtd . g$11786$Of4HK)
        (&i/o-file-does-not-exist-rcd . g$11785$Of4HK)
        (&i/o-file-does-not-exist-rtd . g$11784$Of4HK)
        (&i/o-file-already-exists-rcd . g$11783$Of4HK)
        (&i/o-file-already-exists-rtd . g$11782$Of4HK)
        (&i/o-fie-is-read-only-rcd . g$11781$Of4HK)
        (&i/o-fie-is-read-only-rtd . g$11780$Of4HK)
        (&i/o-file-protection-rcd . g$11779$Of4HK)
        (&i/o-file-protection-rtd . g$11778$Of4HK)
        (&i/o-filename-rcd . g$11777$Of4HK)
        (&i/o-filename-rtd . g$11776$Of4HK)
        (&i/o-invalid-position-rcd . g$11775$Of4HK)
        (&i/o-invalid-position-rtd . g$11774$Of4HK)
        (&i/o-write-rcd . g$11773$Of4HK)
        (&i/o-write-rtd . g$11772$Of4HK)
        (&i/o-read-rcd . g$11771$Of4HK)
        (&i/o-read-rtd . g$11770$Of4HK)
        (&i/o-rcd . g$11769$Of4HK)
        (&i/o-rtd . g$11768$Of4HK)
        (&undefined-rcd . g$11767$Of4HK)
        (&undefined-rtd . g$11766$Of4HK)
        (&syntax-rcd . g$11765$Of4HK)
        (&syntax-rtd . g$11764$Of4HK)
        (&lexical-rcd . g$11763$Of4HK)
        (&lexical-rtd . g$11762$Of4HK)
        (&implementation-restriction-rcd . g$11761$Of4HK)
        (&implementation-restriction-rtd . g$11760$Of4HK)
        (&non-continuable-rcd . g$11759$Of4HK)
        (&non-continuable-rtd . g$11758$Of4HK)
        (&who-rcd . g$11757$Of4HK)
        (&who-rtd . g$11756$Of4HK)
        (&irritants-rcd . g$11755$Of4HK)
        (&irritants-rtd . g$11754$Of4HK)
        (&assertion-rcd . g$11753$Of4HK)
        (&assertion-rtd . g$11752$Of4HK)
        (&violation-rcd . g$11751$Of4HK)
        (&violation-rtd . g$11750$Of4HK)
        (&error-rcd . g$11749$Of4HK)
        (&error-rtd . g$11748$Of4HK)
        (&serious-rcd . g$11747$Of4HK)
        (&serious-rtd . g$11746$Of4HK)
        (&warning-rcd . g$11745$Of4HK)
        (&warning-rtd . g$11744$Of4HK)
        (&message-rcd . g$11743$Of4HK)
        (&message-rtd . g$11742$Of4HK)
        (&condition-rcd . g$11741$Of4HK)
        (&condition-rtd . g$11740$Of4HK)
        (library-letrec* . g$11739$Of4HK)
        (annotation-stripped . g$11738$Of4HK)
        (annotation-source . g$11737$Of4HK)
        (annotation-expression . g$11736$Of4HK)
        (annotation? . g$11735$Of4HK)
        (read-annotated . g$11734$Of4HK)
        (tanh . g$11733$Of4HK)
        (cosh . g$11732$Of4HK)
        (sinh . g$11731$Of4HK)
        (make-guid . g$11730$Of4HK)
        (unspecified? . g$11729$Of4HK)
        (make-trace . g$11728$Of4HK)
        (make-list . g$11727$Of4HK)
        (last-pair . g$11726$Of4HK)
        (load-r5rs . g$11725$Of4HK)
        (license . g$11724$Of4HK)
        (stacktrace . g$11723$Of4HK)
        (ironscheme-build . g$11117$Of4HK)
        (define-clr-class-internal . g$11722$Of4HK)
        (clr-field-set!-internal . g$11721$Of4HK)
        (clr-field-get-internal . g$11720$Of4HK)
        (clr-cast-internal . g$11719$Of4HK)
        (clr-call-internal . g$11718$Of4HK)
        (clr-new-internal . g$11717$Of4HK)
        (clr-new-array-internal . g$11716$Of4HK)
        (clr-is-internal . g$11715$Of4HK)
        (clr-reference-internal . g$11714$Of4HK)
        (clr-using-internal . g$11713$Of4HK)
        (clr-clear-usings-internal . g$11712$Of4HK)
        (syntax-error . g$8197$Of4HK)
        (syntax-dispatch . g$8073$Of4HK)
        (compile-core . g$11711$Of4HK)
        (eval-core . g$11710$Of4HK)
        (set-symbol-value! . g$11709$Of4HK)
        (symbol-value . g$11708$Of4HK)
        (ungensym . g$11707$Of4HK)
        (gensym . g$11706$Of4HK)
        (void . g$11705$Of4HK)
        (load-serialized-library . g$11704$Of4HK)
        (serialize-library . g$11703$Of4HK)
        (compile-system-libraries . g$11119$Of4HK)
        (compile->closure . g$11121$Of4HK)
        (compile . g$11120$Of4HK)
        (load . g$11116$Of4HK)
        (interaction-environment . g$8206$Of4HK)
        (char-ready? . g$11702$Of4HK)
        (string-upcase . g$11701$Of4HK)
        (string-titlecase . g$11700$Of4HK)
        (string-normalize-nfkd . g$11699$Of4HK)
        (string-normalize-nfkc . g$11698$Of4HK)
        (string-normalize-nfd . g$11697$Of4HK)
        (string-normalize-nfc . g$11696$Of4HK)
        (string-foldcase . g$11695$Of4HK)
        (string-downcase . g$11694$Of4HK)
        (string-ci>? . g$11693$Of4HK)
        (string-ci>=? . g$11692$Of4HK)
        (string-ci=? . g$11691$Of4HK)
        (string-ci<? . g$11690$Of4HK)
        (string-ci<=? . g$11689$Of4HK)
        (char-whitespace? . g$11688$Of4HK)
        (char-upper-case? . g$11687$Of4HK)
        (char-title-case? . g$11686$Of4HK)
        (char-numeric? . g$11685$Of4HK)
        (char-lower-case? . g$11684$Of4HK)
        (char-general-category . g$11683$Of4HK)
        (char-upcase . g$11682$Of4HK)
        (char-titlecase . g$11681$Of4HK)
        (char-foldcase . g$11680$Of4HK)
        (char-downcase . g$11679$Of4HK)
        (char-ci>? . g$11678$Of4HK)
        (char-ci>=? . g$11677$Of4HK)
        (char-ci=? . g$11676$Of4HK)
        (char-ci<? . g$11675$Of4HK)
        (char-ci<=? . g$11674$Of4HK)
        (char-alphabetic? . g$11673$Of4HK)
        (variable-transformer-procedure . g$7810$Of4HK)
        (variable-transformer? . g$7809$Of4HK)
        (make-variable-transformer . g$7808$Of4HK)
        (identifier? . g$8201$Of4HK)
        (generate-temporaries . g$8193$Of4HK)
        (free-identifier=? . g$8194$Of4HK)
        (syntax->datum . g$8203$Of4HK)
        (datum->syntax . g$8202$Of4HK)
        (bound-identifier=? . g$8195$Of4HK)
        (record-type-descriptor? . g$11672$Of4HK)
        (record-predicate . g$11671$Of4HK)
        (record-mutator . g$11670$Of4HK)
        (record-constructor . g$11669$Of4HK)
        (record-accessor . g$11668$Of4HK)
        (make-record-type-descriptor . g$11667$Of4HK)
        (make-record-constructor-descriptor . g$11666$Of4HK)
        (record? . g$11665$Of4HK)
        (record-type-uid . g$11664$Of4HK)
        (record-type-sealed? . g$11663$Of4HK)
        (record-type-parent . g$11662$Of4HK)
        (record-type-opaque? . g$11661$Of4HK)
        (record-type-name . g$11660$Of4HK)
        (record-type-generative? . g$11659$Of4HK)
        (record-type-field-names . g$11658$Of4HK)
        (record-rtd . g$11657$Of4HK)
        (record-field-mutable? . g$11656$Of4HK)
        (delete-file . g$5991$Of4HK)
        (file-exists? . g$5990$Of4HK)
        (vector-sort! . g$11655$Of4HK)
        (vector-sort . g$11654$Of4HK)
        (list-sort . g$6498$Of4HK)
        (symbol-hash . g$11653$Of4HK)
        (string-ci-hash . g$11652$Of4HK)
        (string-hash . g$11651$Of4HK)
        (equal-hash . g$11650$Of4HK)
        (hashtable-equivalence-function . g$11649$Of4HK)
        (make-hashtable . g$11648$Of4HK)
        (hashtable-hash-function . g$11647$Of4HK)
        (make-eqv-hashtable . g$5958$Of4HK)
        (make-eq-hashtable . g$5957$Of4HK)
        (hashtable? . g$11646$Of4HK)
        (hashtable-update! . g$5964$Of4HK)
        (hashtable-size . g$5959$Of4HK)
        (hashtable-set! . g$5961$Of4HK)
        (hashtable-ref . g$5960$Of4HK)
        (hashtable-mutable? . g$11645$Of4HK)
        (hashtable-keys . g$11644$Of4HK)
        (hashtable-entries . g$11643$Of4HK)
        (hashtable-delete! . g$5962$Of4HK)
        (hashtable-copy . g$11642$Of4HK)
        (hashtable-contains? . g$5963$Of4HK)
        (hashtable-clear! . g$5965$Of4HK)
        (call-with-output-file . g$11641$Of4HK)
        (call-with-input-file . g$11640$Of4HK)
        (write-char . g$11639$Of4HK)
        (write . g$11638$Of4HK)
        (with-output-to-file . g$11637$Of4HK)
        (with-input-from-file . g$11636$Of4HK)
        (read-char . g$11635$Of4HK)
        (read . g$11634$Of4HK)
        (peek-char . g$11633$Of4HK)
        (open-output-file . g$11632$Of4HK)
        (open-input-file . g$11631$Of4HK)
        (newline . g$11630$Of4HK)
        (display . g$11629$Of4HK)
        (close-output-port . g$11628$Of4HK)
        (close-input-port . g$11627$Of4HK)
        (eof-object? . g$11626$Of4HK)
        (eof-object . g$11625$Of4HK)
        (current-error-port . g$11624$Of4HK)
        (current-output-port . g$11623$Of4HK)
        (current-input-port . g$11622$Of4HK)
        (output-port? . g$11621$Of4HK)
        (input-port? . g$11620$Of4HK)
        (utf-8-codec . g$11619$Of4HK)
        (utf-16-codec . g$11618$Of4HK)
        (transcoder-error-handling-mode . g$11617$Of4HK)
        (transcoder-eol-style . g$11616$Of4HK)
        (transcoder-codec . g$11615$Of4HK)
        (transcoded-port . g$11614$Of4HK)
        (textual-port? . g$11613$Of4HK)
        (string->bytevector . g$11612$Of4HK)
        (standard-output-port . g$11611$Of4HK)
        (standard-input-port . g$11610$Of4HK)
        (standard-error-port . g$11609$Of4HK)
        (set-port-position! . g$11608$Of4HK)
        (put-u8 . g$11607$Of4HK)
        (put-string . g$11606$Of4HK)
        (put-datum . g$11605$Of4HK)
        (put-char . g$11604$Of4HK)
        (put-bytevector . g$11603$Of4HK)
        (port? . g$11602$Of4HK)
        (port-transcoder . g$11601$Of4HK)
        (port-position . g$11600$Of4HK)
        (port-has-set-port-position!? . g$11599$Of4HK)
        (port-has-port-position? . g$11598$Of4HK)
        (port-eof? . g$11597$Of4HK)
        (output-port-buffer-mode . g$11596$Of4HK)
        (open-string-output-port . g$6889$Of4HK)
        (open-string-input-port . g$11595$Of4HK)
        (open-file-output-port . g$11594$Of4HK)
        (open-file-input/output-port . g$11593$Of4HK)
        (open-file-input-port . g$11592$Of4HK)
        (open-bytevector-output-port . g$11591$Of4HK)
        (open-bytevector-input-port . g$11590$Of4HK)
        (native-transcoder . g$11589$Of4HK)
        (native-eol-style . g$11588$Of4HK)
        (make-transcoder . g$11587$Of4HK)
        (latin-1-codec . g$11586$Of4HK)
        (make-i/o-write-error . g$6746$Of4HK)
        (make-i/o-read-error . g$6732$Of4HK)
        (make-i/o-port-error . g$6851$Of4HK)
        (make-i/o-invalid-position-error . g$6761$Of4HK)
        (make-i/o-filename-error . g$6778$Of4HK)
        (make-i/o-file-protection-error . g$6794$Of4HK)
        (make-i/o-file-is-read-only-error . g$6808$Of4HK)
        (make-i/o-file-does-not-exist-error . g$6836$Of4HK)
        (make-i/o-file-already-exists-error . g$6822$Of4HK)
        (make-i/o-error . g$6718$Of4HK)
        (make-i/o-encoding-error . g$6882$Of4HK)
        (make-i/o-decoding-error . g$6867$Of4HK)
        (make-custom-textual-output-port . g$11585$Of4HK)
        (make-custom-textual-input/output-port . g$11584$Of4HK)
        (make-custom-textual-input-port . g$11583$Of4HK)
        (make-custom-binary-output-port . g$11582$Of4HK)
        (make-custom-binary-input/output-port . g$11581$Of4HK)
        (make-custom-binary-input-port . g$11580$Of4HK)
        (make-bytevector . g$11579$Of4HK)
        (lookahead-u8 . g$11578$Of4HK)
        (lookahead-char . g$11577$Of4HK)
        (i/o-write-error? . g$6747$Of4HK)
        (i/o-read-error? . g$6733$Of4HK)
        (i/o-port-error? . g$6853$Of4HK)
        (i/o-invalid-position-error? . g$6763$Of4HK)
        (i/o-filename-error? . g$6780$Of4HK)
        (i/o-file-protection-error? . g$6795$Of4HK)
        (i/o-file-is-read-only-error? . g$6809$Of4HK)
        (i/o-file-does-not-exist-error? . g$6837$Of4HK)
        (i/o-file-already-exists-error? . g$6823$Of4HK)
        (i/o-error? . g$6719$Of4HK)
        (i/o-error-port . g$6854$Of4HK)
        (i/o-error-filename . g$6781$Of4HK)
        (i/o-encoding-error? . g$6884$Of4HK)
        (i/o-encoding-error-char . g$6885$Of4HK)
        (i/o-decoding-error? . g$6868$Of4HK)
        (get-u8 . g$11576$Of4HK)
        (get-string-n! . g$11575$Of4HK)
        (get-string-n . g$11574$Of4HK)
        (get-string-all . g$11573$Of4HK)
        (get-line . g$11572$Of4HK)
        (get-datum . g$11571$Of4HK)
        (get-char . g$11570$Of4HK)
        (get-bytevector-some . g$11569$Of4HK)
        (get-bytevector-n! . g$11568$Of4HK)
        (get-bytevector-n . g$11567$Of4HK)
        (get-bytevector-all . g$11566$Of4HK)
        (flush-output-port . g$11565$Of4HK)
        (close-port . g$11564$Of4HK)
        (call-with-string-output-port . g$11563$Of4HK)
        (call-with-port . g$11562$Of4HK)
        (call-with-bytevector-output-port . g$11561$Of4HK)
        (bytevector->string . g$11560$Of4HK)
        (buffer-mode? . g$11559$Of4HK)
        (binary-port? . g$11558$Of4HK)
        (scheme-report-environment . g$8184$Of4HK)
        (quotient . g$6485$Of4HK)
        (null-environment . g$8183$Of4HK)
        (remainder . g$6486$Of4HK)
        (modulo . g$6487$Of4HK)
        (inexact->exact . g$11557$Of4HK)
        (force . g$11556$Of4HK)
        (exact->inexact . g$11555$Of4HK)
        (exit . g$11554$Of4HK)
        (command-line . g$11553$Of4HK)
        (string-fill! . g$11552$Of4HK)
        (string-set! . g$11551$Of4HK)
        (set-cdr! . g$11550$Of4HK)
        (set-car! . g$11549$Of4HK)
        (remove . g$6071$Of4HK)
        (remv . g$6072$Of4HK)
        (remp . g$6057$Of4HK)
        (remq . g$6073$Of4HK)
        (partition . g$6056$Of4HK)
        (memv . g$11548$Of4HK)
        (memq . g$11547$Of4HK)
        (memp . g$6063$Of4HK)
        (member . g$6062$Of4HK)
        (exists . g$6067$Of4HK)
        (for-all . g$6066$Of4HK)
        (fold-right . g$6070$Of4HK)
        (fold-left . g$6069$Of4HK)
        (find . g$6055$Of4HK)
        (filter . g$6058$Of4HK)
        (cons* . g$6068$Of4HK)
        (assv . g$6059$Of4HK)
        (assq . g$11546$Of4HK)
        (assp . g$6061$Of4HK)
        (assoc . g$6060$Of4HK)
        (with-exception-handler . g$11545$Of4HK)
        (raise-continuable . g$11544$Of4HK)
        (raise . g$11543$Of4HK)
        (eval . g$8186$Of4HK)
        (environment . g$8182$Of4HK)
        (make-enumeration . g$11542$Of4HK)
        (enum-set=? . g$11541$Of4HK)
        (enum-set-universe . g$11540$Of4HK)
        (enum-set-union . g$11539$Of4HK)
        (enum-set-subset? . g$11538$Of4HK)
        (enum-set-projection . g$11537$Of4HK)
        (enum-set-member? . g$11536$Of4HK)
        (enum-set-intersection . g$11535$Of4HK)
        (enum-set-indexer . g$11534$Of4HK)
        (enum-set-difference . g$11533$Of4HK)
        (enum-set-constructor . g$11532$Of4HK)
        (enum-set-complement . g$11531$Of4HK)
        (enum-set->list . g$11530$Of4HK)
        (who-condition? . g$6396$Of4HK)
        (warning? . g$6307$Of4HK)
        (violation? . g$6349$Of4HK)
        (undefined-violation? . g$6473$Of4HK)
        (syntax-violation? . g$6457$Of4HK)
        (syntax-violation-subform . g$6459$Of4HK)
        (syntax-violation-form . g$6458$Of4HK)
        (syntax-violation . g$8200$Of4HK)
        (simple-conditions . g$11529$Of4HK)
        (serious-condition? . g$6321$Of4HK)
        (non-continuable-violation? . g$6411$Of4HK)
        (message-condition? . g$6292$Of4HK)
        (make-who-condition . g$6394$Of4HK)
        (make-warning . g$6306$Of4HK)
        (make-violation . g$6348$Of4HK)
        (make-undefined-violation . g$6472$Of4HK)
        (make-syntax-violation . g$6454$Of4HK)
        (make-serious-condition . g$6320$Of4HK)
        (make-non-continuable-violation . g$6410$Of4HK)
        (make-message-condition . g$6290$Of4HK)
        (make-lexical-violation . g$6438$Of4HK)
        (make-irritants-condition . g$6377$Of4HK)
        (make-implementation-restriction-violation . g$6424$Of4HK)
        (make-error . g$6334$Of4HK)
        (make-assertion-violation . g$6362$Of4HK)
        (lexical-violation? . g$6439$Of4HK)
        (irritants-condition? . g$6379$Of4HK)
        (implementation-restriction-violation? . g$6425$Of4HK)
        (error? . g$6335$Of4HK)
        (condition-who . g$6397$Of4HK)
        (condition-predicate . g$11528$Of4HK)
        (condition-message . g$6293$Of4HK)
        (condition-irritants . g$6380$Of4HK)
        (condition-accessor . g$11527$Of4HK)
        (condition . g$11526$Of4HK)
        (assertion-violation? . g$6363$Of4HK)
        (condition? . g$11525$Of4HK)
        (utf32->string . g$11524$Of4HK)
        (utf16->string . g$11523$Of4HK)
        (utf8->string . g$11522$Of4HK)
        (uint-list->bytevector . g$11521$Of4HK)
        (u8-list->bytevector . g$11520$Of4HK)
        (string->utf8 . g$11519$Of4HK)
        (string->utf32 . g$11518$Of4HK)
        (string->utf16 . g$11517$Of4HK)
        (sint-list->bytevector . g$11516$Of4HK)
        (native-endianness . g$6147$Of4HK)
        (bytevector? . g$11515$Of4HK)
        (bytevector=? . g$11514$Of4HK)
        (bytevector-uint-set! . g$11513$Of4HK)
        (bytevector-uint-ref . g$11512$Of4HK)
        (bytevector-u8-set! . g$11511$Of4HK)
        (bytevector-u8-ref . g$11510$Of4HK)
        (bytevector-u64-set! . g$6168$Of4HK)
        (bytevector-u64-ref . g$6164$Of4HK)
        (bytevector-u64-native-set! . g$6170$Of4HK)
        (bytevector-u64-native-ref . g$6166$Of4HK)
        (bytevector-u32-set! . g$6160$Of4HK)
        (bytevector-u32-ref . g$6156$Of4HK)
        (bytevector-u32-native-set! . g$6162$Of4HK)
        (bytevector-u32-native-ref . g$6158$Of4HK)
        (bytevector-u16-set! . g$6152$Of4HK)
        (bytevector-u16-ref . g$6148$Of4HK)
        (bytevector-u16-native-set! . g$6154$Of4HK)
        (bytevector-u16-native-ref . g$6150$Of4HK)
        (bytevector-sint-set! . g$11509$Of4HK)
        (bytevector-sint-ref . g$11508$Of4HK)
        (bytevector-s8-set! . g$11507$Of4HK)
        (bytevector-s8-ref . g$11506$Of4HK)
        (bytevector-s64-set! . g$6169$Of4HK)
        (bytevector-s64-ref . g$6165$Of4HK)
        (bytevector-s64-native-set! . g$6171$Of4HK)
        (bytevector-s64-native-ref . g$6167$Of4HK)
        (bytevector-s32-set! . g$6161$Of4HK)
        (bytevector-s32-ref . g$6157$Of4HK)
        (bytevector-s32-native-set! . g$6163$Of4HK)
        (bytevector-s32-native-ref . g$6159$Of4HK)
        (bytevector-s16-set! . g$6153$Of4HK)
        (bytevector-s16-ref . g$6149$Of4HK)
        (bytevector-s16-native-set! . g$6155$Of4HK)
        (bytevector-s16-native-ref . g$6151$Of4HK)
        (bytevector-length . g$11505$Of4HK)
        (bytevector-ieee-single-set! . g$11504$Of4HK)
        (bytevector-ieee-single-ref . g$11503$Of4HK)
        (bytevector-ieee-single-native-set! . g$6174$Of4HK)
        (bytevector-ieee-single-native-ref . g$6172$Of4HK)
        (bytevector-ieee-double-set! . g$11502$Of4HK)
        (bytevector-ieee-double-ref . g$11501$Of4HK)
        (bytevector-ieee-double-native-set! . g$6175$Of4HK)
        (bytevector-ieee-double-native-ref . g$6173$Of4HK)
        (bytevector-fill! . g$11500$Of4HK)
        (bytevector-copy! . g$11499$Of4HK)
        (bytevector-copy . g$11498$Of4HK)
        (bytevector->uint-list . g$11497$Of4HK)
        (bytevector->u8-list . g$11496$Of4HK)
        (bytevector->sint-list . g$11495$Of4HK)
        (no-nans-violation? . g$6704$Of4HK)
        (no-infinities-violation? . g$6690$Of4HK)
        (make-no-nans-violation . g$6703$Of4HK)
        (make-no-infinities-violation . g$6689$Of4HK)
        (real->flonum . g$11494$Of4HK)
        (flzero? . g$11493$Of4HK)
        (fltruncate . g$11492$Of4HK)
        (fltan . g$11491$Of4HK)
        (flsqrt . g$11490$Of4HK)
        (flsin . g$11489$Of4HK)
        (flround . g$11488$Of4HK)
        (flpositive? . g$11487$Of4HK)
        (flonum? . g$11486$Of4HK)
        (flodd? . g$11485$Of4HK)
        (flnumerator . g$11484$Of4HK)
        (flnegative? . g$11483$Of4HK)
        (flnan? . g$11482$Of4HK)
        (flmod0 . g$11481$Of4HK)
        (flmod . g$11480$Of4HK)
        (flmin . g$11479$Of4HK)
        (flmax . g$11478$Of4HK)
        (fllog . g$11477$Of4HK)
        (flinteger? . g$11476$Of4HK)
        (flinfinite? . g$11475$Of4HK)
        (flfloor . g$11474$Of4HK)
        (flfinite? . g$11473$Of4HK)
        (flexpt . g$11472$Of4HK)
        (flexp . g$11471$Of4HK)
        (fleven? . g$11470$Of4HK)
        (fldiv0-and-mod0 . g$11469$Of4HK)
        (fldiv0 . g$11468$Of4HK)
        (fldiv-and-mod . g$11467$Of4HK)
        (fldiv . g$11466$Of4HK)
        (fldenominator . g$11465$Of4HK)
        (flcos . g$11464$Of4HK)
        (flceiling . g$11463$Of4HK)
        (flatan . g$11462$Of4HK)
        (flasin . g$11461$Of4HK)
        (flacos . g$11460$Of4HK)
        (flabs . g$11459$Of4HK)
        (fl>? . g$11458$Of4HK)
        (fl>=? . g$11457$Of4HK)
        (fl=? . g$11456$Of4HK)
        (fl<? . g$11455$Of4HK)
        (fl<=? . g$11454$Of4HK)
        (fl/ . g$11453$Of4HK)
        (fl- . g$11452$Of4HK)
        (fl+ . g$11451$Of4HK)
        (fl* . g$11450$Of4HK)
        (fixnum->flonum . g$11449$Of4HK)
        (fxzero? . g$11448$Of4HK)
        (fxxor . g$11447$Of4HK)
        (fxrotate-bit-field . g$6635$Of4HK)
        (fxreverse-bit-field . g$11446$Of4HK)
        (fxpositive? . g$11445$Of4HK)
        (fxodd? . g$11444$Of4HK)
        (fxnot . g$11443$Of4HK)
        (fxnegative? . g$11442$Of4HK)
        (fxmod0 . g$11441$Of4HK)
        (fxmod . g$11440$Of4HK)
        (fxmin . g$11439$Of4HK)
        (fxmax . g$11438$Of4HK)
        (fxlength . g$11437$Of4HK)
        (fxior . g$11436$Of4HK)
        (fxif . g$6629$Of4HK)
        (fxfirst-bit-set . g$11435$Of4HK)
        (fxeven? . g$11434$Of4HK)
        (fxdiv0-and-mod0 . g$11433$Of4HK)
        (fxdiv0 . g$11432$Of4HK)
        (fxdiv-and-mod . g$11431$Of4HK)
        (fxdiv . g$11430$Of4HK)
        (fxcopy-bit-field . g$6632$Of4HK)
        (fxcopy-bit . g$6630$Of4HK)
        (fxbit-set? . g$11429$Of4HK)
        (fxbit-field . g$6631$Of4HK)
        (fxbit-count . g$11428$Of4HK)
        (fxarithmetic-shift-right . g$6634$Of4HK)
        (fxarithmetic-shift-left . g$6633$Of4HK)
        (fxarithmetic-shift . g$11427$Of4HK)
        (fxand . g$11426$Of4HK)
        (fx>? . g$11425$Of4HK)
        (fx>=? . g$11424$Of4HK)
        (fx=? . g$11423$Of4HK)
        (fx<? . g$11422$Of4HK)
        (fx<=? . g$11421$Of4HK)
        (fx-/carry . g$11420$Of4HK)
        (fx- . g$11419$Of4HK)
        (fx+/carry . g$11418$Of4HK)
        (fx+ . g$11417$Of4HK)
        (fx*/carry . g$11416$Of4HK)
        (fx* . g$11415$Of4HK)
        (greatest-fixnum . g$11414$Of4HK)
        (least-fixnum . g$11413$Of4HK)
        (fixnum-width . g$11412$Of4HK)
        (fixnum? . g$11411$Of4HK)
        (bitwise-rotate-bit-field . g$6583$Of4HK)
        (bitwise-reverse-bit-field . g$6584$Of4HK)
        (bitwise-length . g$11410$Of4HK)
        (bitwise-if . g$6577$Of4HK)
        (bitwise-first-bit-set . g$11409$Of4HK)
        (bitwise-copy-bit-field . g$6580$Of4HK)
        (bitwise-copy-bit . g$6578$Of4HK)
        (bitwise-bit-set? . g$11408$Of4HK)
        (bitwise-bit-field . g$11407$Of4HK)
        (bitwise-bit-count . g$11406$Of4HK)
        (bitwise-xor . g$11405$Of4HK)
        (bitwise-ior . g$11404$Of4HK)
        (bitwise-and . g$11403$Of4HK)
        (bitwise-not . g$11402$Of4HK)
        (bitwise-arithmetic-shift-right . g$6582$Of4HK)
        (bitwise-arithmetic-shift-left . g$6581$Of4HK)
        (bitwise-arithmetic-shift . g$11401$Of4HK)
        (zero? . g$11400$Of4HK)
        (vector? . g$11399$Of4HK)
        (vector-set! . g$11398$Of4HK)
        (vector-ref . g$11397$Of4HK)
        (vector-map . g$11396$Of4HK)
        (vector-length . g$11395$Of4HK)
        (vector-for-each . g$11394$Of4HK)
        (vector-fill! . g$11393$Of4HK)
        (vector->list . g$11392$Of4HK)
        (vector . g$11391$Of4HK)
        (values . g$11390$Of4HK)
        (truncate . g$11389$Of4HK)
        (tan . g$11388$Of4HK)
        (symbol? . g$11387$Of4HK)
        (symbol=? . g$11386$Of4HK)
        (symbol->string . g$11385$Of4HK)
        (substring . g$11384$Of4HK)
        (string? . g$11383$Of4HK)
        (string>? . g$11382$Of4HK)
        (string>=? . g$11381$Of4HK)
        (string=? . g$11380$Of4HK)
        (string<? . g$11379$Of4HK)
        (string<=? . g$11378$Of4HK)
        (string-ref . g$11377$Of4HK)
        (string-length . g$11376$Of4HK)
        (string-for-each . g$11375$Of4HK)
        (string-copy . g$11374$Of4HK)
        (string-append . g$11373$Of4HK)
        (string->symbol . g$11372$Of4HK)
        (string->number . g$11371$Of4HK)
        (string->list . g$11370$Of4HK)
        (string . g$11369$Of4HK)
        (sqrt . g$11368$Of4HK)
        (sin . g$11367$Of4HK)
        (round . g$11366$Of4HK)
        (reverse . g$11365$Of4HK)
        (real? . g$11364$Of4HK)
        (real-valued? . g$11363$Of4HK)
        (real-part . g$11362$Of4HK)
        (rationalize . g$5608$Of4HK)
        (rational? . g$11361$Of4HK)
        (rational-valued? . g$11360$Of4HK)
        (procedure? . g$11359$Of4HK)
        (positive? . g$11358$Of4HK)
        (pair? . g$11357$Of4HK)
        (odd? . g$11356$Of4HK)
        (numerator . g$11355$Of4HK)
        (number? . g$11354$Of4HK)
        (number->string . g$11353$Of4HK)
        (null? . g$11352$Of4HK)
        (not . g$11351$Of4HK)
        (negative? . g$11350$Of4HK)
        (nan? . g$11349$Of4HK)
        (min . g$11348$Of4HK)
        (max . g$11347$Of4HK)
        (map . g$11346$Of4HK)
        (make-vector . g$11345$Of4HK)
        (make-string . g$11344$Of4HK)
        (make-rectangular . g$11343$Of4HK)
        (make-polar . g$11342$Of4HK)
        (magnitude . g$11341$Of4HK)
        (log . g$11340$Of4HK)
        (list? . g$11339$Of4HK)
        (list-tail . g$11338$Of4HK)
        (list-ref . g$11337$Of4HK)
        (list->vector . g$11336$Of4HK)
        (list->string . g$11335$Of4HK)
        (list . g$11334$Of4HK)
        (length . g$11333$Of4HK)
        (lcm . g$11332$Of4HK)
        (integer? . g$11331$Of4HK)
        (integer-valued? . g$11330$Of4HK)
        (integer->char . g$11329$Of4HK)
        (infinite? . g$11328$Of4HK)
        (inexact? . g$11327$Of4HK)
        (inexact . g$11326$Of4HK)
        (imag-part . g$11325$Of4HK)
        (gcd . g$11324$Of4HK)
        (for-each . g$11323$Of4HK)
        (floor . g$11322$Of4HK)
        (finite? . g$11321$Of4HK)
        (expt . g$11320$Of4HK)
        (exp . g$11319$Of4HK)
        (exact? . g$11318$Of4HK)
        (exact-integer-sqrt . g$11317$Of4HK)
        (exact . g$11316$Of4HK)
        (even? . g$11315$Of4HK)
        (error . g$11314$Of4HK)
        (eqv? . g$11313$Of4HK)
        (equal? . g$11312$Of4HK)
        (eq? . g$11311$Of4HK)
        (dynamic-wind . g$11310$Of4HK)
        (div0-and-mod0 . g$11309$Of4HK)
        (mod0 . g$11308$Of4HK)
        (div0 . g$11307$Of4HK)
        (div-and-mod . g$11306$Of4HK)
        (mod . g$11305$Of4HK)
        (div . g$11304$Of4HK)
        (denominator . g$11303$Of4HK)
        (cos . g$11302$Of4HK)
        (cons . g$11301$Of4HK)
        (complex? . g$11300$Of4HK)
        (char? . g$11299$Of4HK)
        (char>? . g$11298$Of4HK)
        (char>=? . g$11297$Of4HK)
        (char=? . g$11296$Of4HK)
        (char<? . g$11295$Of4HK)
        (char<=? . g$11294$Of4HK)
        (char->integer . g$11293$Of4HK)
        (ceiling . g$11292$Of4HK)
        (call-with-values . g$11291$Of4HK)
        (call/cc . g$11290$Of4HK)
        (call-with-current-continuation . g$11289$Of4HK)
        (cddddr . g$5607$Of4HK)
        (cdddar . g$5606$Of4HK)
        (cddadr . g$5605$Of4HK)
        (cddaar . g$5604$Of4HK)
        (cdaddr . g$5603$Of4HK)
        (cdadar . g$5602$Of4HK)
        (cdaadr . g$5601$Of4HK)
        (cdaaar . g$5600$Of4HK)
        (cadddr . g$5599$Of4HK)
        (caddar . g$5598$Of4HK)
        (cadadr . g$5597$Of4HK)
        (cadaar . g$5596$Of4HK)
        (caaddr . g$5595$Of4HK)
        (caadar . g$5594$Of4HK)
        (caaadr . g$5593$Of4HK)
        (caaaar . g$5592$Of4HK)
        (cdddr . g$5591$Of4HK)
        (cddar . g$5590$Of4HK)
        (cdadr . g$5589$Of4HK)
        (cdaar . g$5588$Of4HK)
        (caddr . g$5587$Of4HK)
        (cadar . g$5586$Of4HK)
        (caadr . g$5585$Of4HK)
        (caaar . g$5584$Of4HK)
        (cddr . g$5583$Of4HK)
        (cdar . g$5582$Of4HK)
        (cadr . g$5581$Of4HK)
        (caar . g$5580$Of4HK)
        (cdr . g$11288$Of4HK)
        (car . g$11287$Of4HK)
        (boolean? . g$11286$Of4HK)
        (boolean=? . g$11285$Of4HK)
        (atan . g$11284$Of4HK)
        (assertion-violation . g$11283$Of4HK)
        (asin . g$11282$Of4HK)
        (apply . g$11281$Of4HK)
        (append . g$11280$Of4HK)
        (angle . g$11279$Of4HK)
        (acos . g$11278$Of4HK)
        (abs . g$11277$Of4HK)
        (/ . g$11276$Of4HK)
        (* . g$11275$Of4HK)
        (- . g$11274$Of4HK)
        (+ . g$11273$Of4HK)
        (>= . g$11272$Of4HK)
        (> . g$11271$Of4HK)
        (= . g$11270$Of4HK)
        (<= . g$11269$Of4HK)
        (< . g$11268$Of4HK)
        (make-record-printer . g$11267$Of4HK)
        (eqv-hash . g$11266$Of4HK)
        (eq-hash . g$11265$Of4HK)
        (reverse! . g$11264$Of4HK)
        (printf . g$6898$Of4HK)
        (fprintf . g$6899$Of4HK)
        (format . g$6900$Of4HK)
        (get-arity . g$11263$Of4HK)
        (gc-collect . g$11262$Of4HK)
        (clr-type? . g$11261$Of4HK)
        (get-clr-type . g$11260$Of4HK)
        (vector-append . g$11259$Of4HK)
        (vector-filter . g$11258$Of4HK)
        (vector-reverse! . g$11257$Of4HK)
        (vector-contains? . g$11256$Of4HK)
        (vector-index-of . g$11255$Of4HK)
        (vector-copy . g$11254$Of4HK)
        (vector-binary-search . g$11253$Of4HK)
        (get-output-string . g$11252$Of4HK)
        (open-output-string . g$11251$Of4HK)
        (open-input-string . g$11250$Of4HK)
        (string-format . g$11249$Of4HK)
        (make-traced-procedure . g$11248$Of4HK)
        (make-traced-macro . g$6919$Of4HK)
        (pmap . g$11247$Of4HK)
        (time-it . g$11246$Of4HK)
        (make-parameter . g$6924$Of4HK)
        (library-locator . g$11245$Of4HK)
        (get-library-paths . g$11244$Of4HK)
        (environment-symbols . g$8180$Of4HK)
        (interaction-environment-symbols . g$8179$Of4HK)
        (library-path . g$7349$Of4HK)
        (library-extensions . g$7350$Of4HK)
        (installed-libraries . g$7370$Of4HK)
        (expand . g$8185$Of4HK)
        (&no-nans . g$11243$Of4HK)
        (&no-infinities . g$11242$Of4HK)
        (&i/o-encoding . g$11241$Of4HK)
        (&i/o-decoding . g$11240$Of4HK)
        (&i/o-port . g$11239$Of4HK)
        (&i/o-file-does-not-exist . g$11238$Of4HK)
        (&i/o-file-already-exists . g$11237$Of4HK)
        (&i/o-file-is-read-only . g$11236$Of4HK)
        (&i/o-file-protection . g$11235$Of4HK)
        (&i/o-filename . g$11234$Of4HK)
        (&i/o-invalid-position . g$11233$Of4HK)
        (&i/o-write . g$11232$Of4HK)
        (&i/o-read . g$11231$Of4HK)
        (&i/o . g$11230$Of4HK)
        (&non-continuable . g$11229$Of4HK)
        (&undefined . g$11228$Of4HK)
        (&syntax . g$11227$Of4HK)
        (&lexical . g$11226$Of4HK)
        (&implementation-restriction . g$11225$Of4HK)
        (&non . g$11224$Of4HK)
        (&who . g$11223$Of4HK)
        (&irritants . g$11222$Of4HK)
        (&assertion . g$11221$Of4HK)
        (&violation . g$11220$Of4HK)
        (&error . g$11219$Of4HK)
        (&serious . g$11218$Of4HK)
        (&warning . g$11217$Of4HK)
        (&message . g$11216$Of4HK)
        (&condition . g$11215$Of4HK)
        (define-condition-type . g$11214$Of4HK)
        (define-enumeration . g$11213$Of4HK)
        (define-record-type . g$11212$Of4HK)
        (parent-rtd . g$11211$Of4HK)
        (nongenerative . g$11210$Of4HK)
        (opaque . g$11209$Of4HK)
        (sealed . g$11208$Of4HK)
        (protocol . g$11207$Of4HK)
        (parent . g$11206$Of4HK)
        (immutable . g$11205$Of4HK)
        (mutable . g$11204$Of4HK)
        (fields . g$11203$Of4HK)
        (error-handling-mode . g$11202$Of4HK)
        (file-options . g$11201$Of4HK)
        (buffer-mode . g$11200$Of4HK)
        (eol-style . g$11199$Of4HK)
        (guard . g$11198$Of4HK)
        (trace-letrec-syntax . g$11197$Of4HK)
        (trace-let-syntax . g$11196$Of4HK)
        (trace-define-syntax . g$11195$Of4HK)
        (trace-define . g$11194$Of4HK)
        (trace-lambda . g$11193$Of4HK)
        (unsyntax-splicing . g$11192$Of4HK)
        (unsyntax . g$11191$Of4HK)
        (unquote-splicing . g$11190$Of4HK)
        (unquote . g$11189$Of4HK)
        (_ . g$11188$Of4HK)
        (else . g$11187$Of4HK)
        (=> . g$11186$Of4HK)
        (... . g$11185$Of4HK)
        (assert . g$11184$Of4HK)
        (endianness . g$11183$Of4HK)
        (delay . g$11182$Of4HK)
        (time . g$11181$Of4HK)
        (or . g$11180$Of4HK)
        (and . g$11179$Of4HK)
        (do . g$11178$Of4HK)
        (cond . g$11177$Of4HK)
        (let* . g$11176$Of4HK)
        (let . g$11175$Of4HK)
        (identifier-syntax . g$11174$Of4HK)
        (with-syntax . g$11173$Of4HK)
        (quasisyntax . g$11172$Of4HK)
        (quasiquote . g$11171$Of4HK)
        (syntax-rules . g$11170$Of4HK)
        (include-into . g$11169$Of4HK)
        (include . g$11168$Of4HK)
        (define-struct . g$11167$Of4HK)
        (let-values . g$11166$Of4HK)
        (let*-values . g$11165$Of4HK)
        (record-constructor-descriptor . g$11164$Of4HK)
        (record-type-descriptor . g$11163$Of4HK)
        (fluid-let-syntax . g$11162$Of4HK)
        (case . g$11161$Of4HK)
        (parameterize . g$11160$Of4HK)
        (unless . g$11159$Of4HK)
        (when . g$11158$Of4HK)
        (if . g$11157$Of4HK)
        (letrec* . g$11156$Of4HK)
        (letrec . g$11155$Of4HK)
        (type-descriptor . g$11154$Of4HK)
        (case-lambda . g$11153$Of4HK)
        (lambda . g$11152$Of4HK)
        (syntax . g$11151$Of4HK)
        (syntax-case . g$11150$Of4HK)
        (quote . g$11149$Of4HK)
        (foreign-call . g$11148$Of4HK)
        (letrec-syntax . g$11147$Of4HK)
        (let-syntax . g$11146$Of4HK)
        (set! . g$11145$Of4HK)
        (import . g$11144$Of4HK)
        (library . g$11143$Of4HK)
        (begin . g$11142$Of4HK)
        (module . g$11141$Of4HK)
        (define-syntax . g$11140$Of4HK)
        (define . g$11139$Of4HK))
      '((g$8078$Of4HK core-prim . ellipsis-map)
        (g$11795$Of4HK core-prim . &no-nans-rcd)
        (g$11794$Of4HK core-prim . &no-nans-rtd)
        (g$11793$Of4HK core-prim . &no-infinities-rcd)
        (g$11792$Of4HK core-prim . &no-infinities-rtd)
        (g$11791$Of4HK core-prim . &i/o-encoding-rcd)
        (g$11790$Of4HK core-prim . &i/o-encoding-rtd)
        (g$11789$Of4HK core-prim . &i/o-decoding-rcd)
        (g$11788$Of4HK core-prim . &i/o-decoding-rtd)
        (g$11787$Of4HK core-prim . &i/o-port-rcd)
        (g$11786$Of4HK core-prim . &i/o-port-rtd)
        (g$11785$Of4HK core-prim . &i/o-file-does-not-exist-rcd)
        (g$11784$Of4HK core-prim . &i/o-file-does-not-exist-rtd)
        (g$11783$Of4HK core-prim . &i/o-file-already-exists-rcd)
        (g$11782$Of4HK core-prim . &i/o-file-already-exists-rtd)
        (g$11781$Of4HK core-prim . &i/o-fie-is-read-only-rcd)
        (g$11780$Of4HK core-prim . &i/o-fie-is-read-only-rtd)
        (g$11779$Of4HK core-prim . &i/o-file-protection-rcd)
        (g$11778$Of4HK core-prim . &i/o-file-protection-rtd)
        (g$11777$Of4HK core-prim . &i/o-filename-rcd)
        (g$11776$Of4HK core-prim . &i/o-filename-rtd)
        (g$11775$Of4HK core-prim . &i/o-invalid-position-rcd)
        (g$11774$Of4HK core-prim . &i/o-invalid-position-rtd)
        (g$11773$Of4HK core-prim . &i/o-write-rcd)
        (g$11772$Of4HK core-prim . &i/o-write-rtd)
        (g$11771$Of4HK core-prim . &i/o-read-rcd)
        (g$11770$Of4HK core-prim . &i/o-read-rtd)
        (g$11769$Of4HK core-prim . &i/o-rcd)
        (g$11768$Of4HK core-prim . &i/o-rtd)
        (g$11767$Of4HK core-prim . &undefined-rcd)
        (g$11766$Of4HK core-prim . &undefined-rtd)
        (g$11765$Of4HK core-prim . &syntax-rcd)
        (g$11764$Of4HK core-prim . &syntax-rtd)
        (g$11763$Of4HK core-prim . &lexical-rcd)
        (g$11762$Of4HK core-prim . &lexical-rtd)
        (g$11761$Of4HK core-prim . &implementation-restriction-rcd)
        (g$11760$Of4HK core-prim . &implementation-restriction-rtd)
        (g$11759$Of4HK core-prim . &non-continuable-rcd)
        (g$11758$Of4HK core-prim . &non-continuable-rtd)
        (g$11757$Of4HK core-prim . &who-rcd)
        (g$11756$Of4HK core-prim . &who-rtd)
        (g$11755$Of4HK core-prim . &irritants-rcd)
        (g$11754$Of4HK core-prim . &irritants-rtd)
        (g$11753$Of4HK core-prim . &assertion-rcd)
        (g$11752$Of4HK core-prim . &assertion-rtd)
        (g$11751$Of4HK core-prim . &violation-rcd)
        (g$11750$Of4HK core-prim . &violation-rtd)
        (g$11749$Of4HK core-prim . &error-rcd)
        (g$11748$Of4HK core-prim . &error-rtd)
        (g$11747$Of4HK core-prim . &serious-rcd)
        (g$11746$Of4HK core-prim . &serious-rtd)
        (g$11745$Of4HK core-prim . &warning-rcd)
        (g$11744$Of4HK core-prim . &warning-rtd)
        (g$11743$Of4HK core-prim . &message-rcd)
        (g$11742$Of4HK core-prim . &message-rtd)
        (g$11741$Of4HK core-prim . &condition-rcd)
        (g$11740$Of4HK core-prim . &condition-rtd)
        (g$11739$Of4HK core-prim . library-letrec*)
        (g$11738$Of4HK core-prim . annotation-stripped)
        (g$11737$Of4HK core-prim . annotation-source)
        (g$11736$Of4HK core-prim . annotation-expression)
        (g$11735$Of4HK core-prim . annotation?)
        (g$11734$Of4HK core-prim . read-annotated)
        (g$11733$Of4HK core-prim . tanh)
        (g$11732$Of4HK core-prim . cosh)
        (g$11731$Of4HK core-prim . sinh)
        (g$11730$Of4HK core-prim . make-guid)
        (g$11729$Of4HK core-prim . unspecified?)
        (g$11728$Of4HK core-prim . make-trace)
        (g$11727$Of4HK core-prim . make-list)
        (g$11726$Of4HK core-prim . last-pair)
        (g$11725$Of4HK core-prim . load-r5rs)
        (g$11724$Of4HK core-prim . license)
        (g$11723$Of4HK core-prim . stacktrace)
        (g$11117$Of4HK core-prim . ironscheme-build)
        (g$11722$Of4HK core-prim . define-clr-class-internal)
        (g$11721$Of4HK core-prim . clr-field-set!-internal)
        (g$11720$Of4HK core-prim . clr-field-get-internal)
        (g$11719$Of4HK core-prim . clr-cast-internal)
        (g$11718$Of4HK core-prim . clr-call-internal)
        (g$11717$Of4HK core-prim . clr-new-internal)
        (g$11716$Of4HK core-prim . clr-new-array-internal)
        (g$11715$Of4HK core-prim . clr-is-internal)
        (g$11714$Of4HK core-prim . clr-reference-internal)
        (g$11713$Of4HK core-prim . clr-using-internal)
        (g$11712$Of4HK core-prim . clr-clear-usings-internal)
        (g$8197$Of4HK core-prim . syntax-error)
        (g$8073$Of4HK core-prim . syntax-dispatch)
        (g$11711$Of4HK core-prim . compile-core)
        (g$11710$Of4HK core-prim . eval-core)
        (g$11709$Of4HK core-prim . set-symbol-value!)
        (g$11708$Of4HK core-prim . symbol-value)
        (g$11707$Of4HK core-prim . ungensym)
        (g$11706$Of4HK core-prim . gensym)
        (g$11705$Of4HK core-prim . void)
        (g$11704$Of4HK core-prim . load-serialized-library)
        (g$11703$Of4HK core-prim . serialize-library)
        (g$11119$Of4HK core-prim . compile-system-libraries)
        (g$11121$Of4HK core-prim . compile->closure)
        (g$11120$Of4HK core-prim . compile)
        (g$11116$Of4HK core-prim . load)
        (g$8206$Of4HK core-prim . interaction-environment)
        (g$11702$Of4HK core-prim . char-ready?)
        (g$11701$Of4HK core-prim . string-upcase)
        (g$11700$Of4HK core-prim . string-titlecase)
        (g$11699$Of4HK core-prim . string-normalize-nfkd)
        (g$11698$Of4HK core-prim . string-normalize-nfkc)
        (g$11697$Of4HK core-prim . string-normalize-nfd)
        (g$11696$Of4HK core-prim . string-normalize-nfc)
        (g$11695$Of4HK core-prim . string-foldcase)
        (g$11694$Of4HK core-prim . string-downcase)
        (g$11693$Of4HK core-prim . string-ci>?)
        (g$11692$Of4HK core-prim . string-ci>=?)
        (g$11691$Of4HK core-prim . string-ci=?)
        (g$11690$Of4HK core-prim . string-ci<?)
        (g$11689$Of4HK core-prim . string-ci<=?)
        (g$11688$Of4HK core-prim . char-whitespace?)
        (g$11687$Of4HK core-prim . char-upper-case?)
        (g$11686$Of4HK core-prim . char-title-case?)
        (g$11685$Of4HK core-prim . char-numeric?)
        (g$11684$Of4HK core-prim . char-lower-case?)
        (g$11683$Of4HK core-prim . char-general-category)
        (g$11682$Of4HK core-prim . char-upcase)
        (g$11681$Of4HK core-prim . char-titlecase)
        (g$11680$Of4HK core-prim . char-foldcase)
        (g$11679$Of4HK core-prim . char-downcase)
        (g$11678$Of4HK core-prim . char-ci>?)
        (g$11677$Of4HK core-prim . char-ci>=?)
        (g$11676$Of4HK core-prim . char-ci=?)
        (g$11675$Of4HK core-prim . char-ci<?)
        (g$11674$Of4HK core-prim . char-ci<=?)
        (g$11673$Of4HK core-prim . char-alphabetic?)
        (g$7810$Of4HK core-prim . variable-transformer-procedure)
        (g$7809$Of4HK core-prim . variable-transformer?)
        (g$7808$Of4HK core-prim . make-variable-transformer)
        (g$8201$Of4HK core-prim . identifier?)
        (g$8193$Of4HK core-prim . generate-temporaries)
        (g$8194$Of4HK core-prim . free-identifier=?)
        (g$8203$Of4HK core-prim . syntax->datum)
        (g$8202$Of4HK core-prim . datum->syntax)
        (g$8195$Of4HK core-prim . bound-identifier=?)
        (g$11672$Of4HK core-prim . record-type-descriptor?)
        (g$11671$Of4HK core-prim . record-predicate)
        (g$11670$Of4HK core-prim . record-mutator)
        (g$11669$Of4HK core-prim . record-constructor)
        (g$11668$Of4HK core-prim . record-accessor)
        (g$11667$Of4HK core-prim . make-record-type-descriptor)
        (g$11666$Of4HK core-prim . make-record-constructor-descriptor)
        (g$11665$Of4HK core-prim . record?)
        (g$11664$Of4HK core-prim . record-type-uid)
        (g$11663$Of4HK core-prim . record-type-sealed?)
        (g$11662$Of4HK core-prim . record-type-parent)
        (g$11661$Of4HK core-prim . record-type-opaque?)
        (g$11660$Of4HK core-prim . record-type-name)
        (g$11659$Of4HK core-prim . record-type-generative?)
        (g$11658$Of4HK core-prim . record-type-field-names)
        (g$11657$Of4HK core-prim . record-rtd)
        (g$11656$Of4HK core-prim . record-field-mutable?)
        (g$5991$Of4HK core-prim . delete-file)
        (g$5990$Of4HK core-prim . file-exists?)
        (g$11655$Of4HK core-prim . vector-sort!)
        (g$11654$Of4HK core-prim . vector-sort)
        (g$6498$Of4HK core-prim . list-sort)
        (g$11653$Of4HK core-prim . symbol-hash)
        (g$11652$Of4HK core-prim . string-ci-hash)
        (g$11651$Of4HK core-prim . string-hash)
        (g$11650$Of4HK core-prim . equal-hash)
        (g$11649$Of4HK core-prim . hashtable-equivalence-function)
        (g$11648$Of4HK core-prim . make-hashtable)
        (g$11647$Of4HK core-prim . hashtable-hash-function)
        (g$5958$Of4HK core-prim . make-eqv-hashtable)
        (g$5957$Of4HK core-prim . make-eq-hashtable)
        (g$11646$Of4HK core-prim . hashtable?)
        (g$5964$Of4HK core-prim . hashtable-update!)
        (g$5959$Of4HK core-prim . hashtable-size)
        (g$5961$Of4HK core-prim . hashtable-set!)
        (g$5960$Of4HK core-prim . hashtable-ref)
        (g$11645$Of4HK core-prim . hashtable-mutable?)
        (g$11644$Of4HK core-prim . hashtable-keys)
        (g$11643$Of4HK core-prim . hashtable-entries)
        (g$5962$Of4HK core-prim . hashtable-delete!)
        (g$11642$Of4HK core-prim . hashtable-copy)
        (g$5963$Of4HK core-prim . hashtable-contains?)
        (g$5965$Of4HK core-prim . hashtable-clear!)
        (g$11641$Of4HK core-prim . call-with-output-file)
        (g$11640$Of4HK core-prim . call-with-input-file)
        (g$11639$Of4HK core-prim . write-char)
        (g$11638$Of4HK core-prim . write)
        (g$11637$Of4HK core-prim . with-output-to-file)
        (g$11636$Of4HK core-prim . with-input-from-file)
        (g$11635$Of4HK core-prim . read-char)
        (g$11634$Of4HK core-prim . read)
        (g$11633$Of4HK core-prim . peek-char)
        (g$11632$Of4HK core-prim . open-output-file)
        (g$11631$Of4HK core-prim . open-input-file)
        (g$11630$Of4HK core-prim . newline)
        (g$11629$Of4HK core-prim . display)
        (g$11628$Of4HK core-prim . close-output-port)
        (g$11627$Of4HK core-prim . close-input-port)
        (g$11626$Of4HK core-prim . eof-object?)
        (g$11625$Of4HK core-prim . eof-object)
        (g$11624$Of4HK core-prim . current-error-port)
        (g$11623$Of4HK core-prim . current-output-port)
        (g$11622$Of4HK core-prim . current-input-port)
        (g$11621$Of4HK core-prim . output-port?)
        (g$11620$Of4HK core-prim . input-port?)
        (g$11619$Of4HK core-prim . utf-8-codec)
        (g$11618$Of4HK core-prim . utf-16-codec)
        (g$11617$Of4HK core-prim . transcoder-error-handling-mode)
        (g$11616$Of4HK core-prim . transcoder-eol-style)
        (g$11615$Of4HK core-prim . transcoder-codec)
        (g$11614$Of4HK core-prim . transcoded-port)
        (g$11613$Of4HK core-prim . textual-port?)
        (g$11612$Of4HK core-prim . string->bytevector)
        (g$11611$Of4HK core-prim . standard-output-port)
        (g$11610$Of4HK core-prim . standard-input-port)
        (g$11609$Of4HK core-prim . standard-error-port)
        (g$11608$Of4HK core-prim . set-port-position!)
        (g$11607$Of4HK core-prim . put-u8)
        (g$11606$Of4HK core-prim . put-string)
        (g$11605$Of4HK core-prim . put-datum)
        (g$11604$Of4HK core-prim . put-char)
        (g$11603$Of4HK core-prim . put-bytevector)
        (g$11602$Of4HK core-prim . port?)
        (g$11601$Of4HK core-prim . port-transcoder)
        (g$11600$Of4HK core-prim . port-position)
        (g$11599$Of4HK core-prim . port-has-set-port-position!?)
        (g$11598$Of4HK core-prim . port-has-port-position?)
        (g$11597$Of4HK core-prim . port-eof?)
        (g$11596$Of4HK core-prim . output-port-buffer-mode)
        (g$6889$Of4HK core-prim . open-string-output-port)
        (g$11595$Of4HK core-prim . open-string-input-port)
        (g$11594$Of4HK core-prim . open-file-output-port)
        (g$11593$Of4HK core-prim . open-file-input/output-port)
        (g$11592$Of4HK core-prim . open-file-input-port)
        (g$11591$Of4HK core-prim . open-bytevector-output-port)
        (g$11590$Of4HK core-prim . open-bytevector-input-port)
        (g$11589$Of4HK core-prim . native-transcoder)
        (g$11588$Of4HK core-prim . native-eol-style)
        (g$11587$Of4HK core-prim . make-transcoder)
        (g$11586$Of4HK core-prim . latin-1-codec)
        (g$6746$Of4HK core-prim . make-i/o-write-error)
        (g$6732$Of4HK core-prim . make-i/o-read-error)
        (g$6851$Of4HK core-prim . make-i/o-port-error)
        (g$6761$Of4HK core-prim . make-i/o-invalid-position-error)
        (g$6778$Of4HK core-prim . make-i/o-filename-error)
        (g$6794$Of4HK core-prim . make-i/o-file-protection-error)
        (g$6808$Of4HK core-prim . make-i/o-file-is-read-only-error)
        (g$6836$Of4HK core-prim . make-i/o-file-does-not-exist-error)
        (g$6822$Of4HK core-prim . make-i/o-file-already-exists-error)
        (g$6718$Of4HK core-prim . make-i/o-error)
        (g$6882$Of4HK core-prim . make-i/o-encoding-error)
        (g$6867$Of4HK core-prim . make-i/o-decoding-error)
        (g$11585$Of4HK core-prim . make-custom-textual-output-port)
        (g$11584$Of4HK core-prim . make-custom-textual-input/output-port)
        (g$11583$Of4HK core-prim . make-custom-textual-input-port)
        (g$11582$Of4HK core-prim . make-custom-binary-output-port)
        (g$11581$Of4HK core-prim . make-custom-binary-input/output-port)
        (g$11580$Of4HK core-prim . make-custom-binary-input-port)
        (g$11579$Of4HK core-prim . make-bytevector)
        (g$11578$Of4HK core-prim . lookahead-u8)
        (g$11577$Of4HK core-prim . lookahead-char)
        (g$6747$Of4HK core-prim . i/o-write-error?)
        (g$6733$Of4HK core-prim . i/o-read-error?)
        (g$6853$Of4HK core-prim . i/o-port-error?)
        (g$6763$Of4HK core-prim . i/o-invalid-position-error?)
        (g$6780$Of4HK core-prim . i/o-filename-error?)
        (g$6795$Of4HK core-prim . i/o-file-protection-error?)
        (g$6809$Of4HK core-prim . i/o-file-is-read-only-error?)
        (g$6837$Of4HK core-prim . i/o-file-does-not-exist-error?)
        (g$6823$Of4HK core-prim . i/o-file-already-exists-error?)
        (g$6719$Of4HK core-prim . i/o-error?)
        (g$6854$Of4HK core-prim . i/o-error-port)
        (g$6781$Of4HK core-prim . i/o-error-filename)
        (g$6884$Of4HK core-prim . i/o-encoding-error?)
        (g$6885$Of4HK core-prim . i/o-encoding-error-char)
        (g$6868$Of4HK core-prim . i/o-decoding-error?)
        (g$11576$Of4HK core-prim . get-u8)
        (g$11575$Of4HK core-prim . get-string-n!)
        (g$11574$Of4HK core-prim . get-string-n)
        (g$11573$Of4HK core-prim . get-string-all)
        (g$11572$Of4HK core-prim . get-line)
        (g$11571$Of4HK core-prim . get-datum)
        (g$11570$Of4HK core-prim . get-char)
        (g$11569$Of4HK core-prim . get-bytevector-some)
        (g$11568$Of4HK core-prim . get-bytevector-n!)
        (g$11567$Of4HK core-prim . get-bytevector-n)
        (g$11566$Of4HK core-prim . get-bytevector-all)
        (g$11565$Of4HK core-prim . flush-output-port)
        (g$11564$Of4HK core-prim . close-port)
        (g$11563$Of4HK core-prim . call-with-string-output-port)
        (g$11562$Of4HK core-prim . call-with-port)
        (g$11561$Of4HK core-prim . call-with-bytevector-output-port)
        (g$11560$Of4HK core-prim . bytevector->string)
        (g$11559$Of4HK core-prim . buffer-mode?)
        (g$11558$Of4HK core-prim . binary-port?)
        (g$8184$Of4HK core-prim . scheme-report-environment)
        (g$6485$Of4HK core-prim . quotient)
        (g$8183$Of4HK core-prim . null-environment)
        (g$6486$Of4HK core-prim . remainder)
        (g$6487$Of4HK core-prim . modulo)
        (g$11557$Of4HK core-prim . inexact->exact)
        (g$11556$Of4HK core-prim . force)
        (g$11555$Of4HK core-prim . exact->inexact)
        (g$11554$Of4HK core-prim . exit)
        (g$11553$Of4HK core-prim . command-line)
        (g$11552$Of4HK core-prim . string-fill!)
        (g$11551$Of4HK core-prim . string-set!)
        (g$11550$Of4HK core-prim . set-cdr!)
        (g$11549$Of4HK core-prim . set-car!)
        (g$6071$Of4HK core-prim . remove)
        (g$6072$Of4HK core-prim . remv)
        (g$6057$Of4HK core-prim . remp)
        (g$6073$Of4HK core-prim . remq)
        (g$6056$Of4HK core-prim . partition)
        (g$11548$Of4HK core-prim . memv)
        (g$11547$Of4HK core-prim . memq)
        (g$6063$Of4HK core-prim . memp)
        (g$6062$Of4HK core-prim . member)
        (g$6067$Of4HK core-prim . exists)
        (g$6066$Of4HK core-prim . for-all)
        (g$6070$Of4HK core-prim . fold-right)
        (g$6069$Of4HK core-prim . fold-left)
        (g$6055$Of4HK core-prim . find)
        (g$6058$Of4HK core-prim . filter)
        (g$6068$Of4HK core-prim . cons*)
        (g$6059$Of4HK core-prim . assv)
        (g$11546$Of4HK core-prim . assq)
        (g$6061$Of4HK core-prim . assp)
        (g$6060$Of4HK core-prim . assoc)
        (g$11545$Of4HK core-prim . with-exception-handler)
        (g$11544$Of4HK core-prim . raise-continuable)
        (g$11543$Of4HK core-prim . raise)
        (g$8186$Of4HK core-prim . eval)
        (g$8182$Of4HK core-prim . environment)
        (g$11542$Of4HK core-prim . make-enumeration)
        (g$11541$Of4HK core-prim . enum-set=?)
        (g$11540$Of4HK core-prim . enum-set-universe)
        (g$11539$Of4HK core-prim . enum-set-union)
        (g$11538$Of4HK core-prim . enum-set-subset?)
        (g$11537$Of4HK core-prim . enum-set-projection)
        (g$11536$Of4HK core-prim . enum-set-member?)
        (g$11535$Of4HK core-prim . enum-set-intersection)
        (g$11534$Of4HK core-prim . enum-set-indexer)
        (g$11533$Of4HK core-prim . enum-set-difference)
        (g$11532$Of4HK core-prim . enum-set-constructor)
        (g$11531$Of4HK core-prim . enum-set-complement)
        (g$11530$Of4HK core-prim . enum-set->list)
        (g$6396$Of4HK core-prim . who-condition?)
        (g$6307$Of4HK core-prim . warning?)
        (g$6349$Of4HK core-prim . violation?)
        (g$6473$Of4HK core-prim . undefined-violation?)
        (g$6457$Of4HK core-prim . syntax-violation?)
        (g$6459$Of4HK core-prim . syntax-violation-subform)
        (g$6458$Of4HK core-prim . syntax-violation-form)
        (g$8200$Of4HK core-prim . syntax-violation)
        (g$11529$Of4HK core-prim . simple-conditions)
        (g$6321$Of4HK core-prim . serious-condition?)
        (g$6411$Of4HK core-prim . non-continuable-violation?)
        (g$6292$Of4HK core-prim . message-condition?)
        (g$6394$Of4HK core-prim . make-who-condition)
        (g$6306$Of4HK core-prim . make-warning)
        (g$6348$Of4HK core-prim . make-violation)
        (g$6472$Of4HK core-prim . make-undefined-violation)
        (g$6454$Of4HK core-prim . make-syntax-violation)
        (g$6320$Of4HK core-prim . make-serious-condition)
        (g$6410$Of4HK core-prim . make-non-continuable-violation)
        (g$6290$Of4HK core-prim . make-message-condition)
        (g$6438$Of4HK core-prim . make-lexical-violation)
        (g$6377$Of4HK core-prim . make-irritants-condition)
        (g$6424$Of4HK core-prim . make-implementation-restriction-violation)
        (g$6334$Of4HK core-prim . make-error)
        (g$6362$Of4HK core-prim . make-assertion-violation)
        (g$6439$Of4HK core-prim . lexical-violation?)
        (g$6379$Of4HK core-prim . irritants-condition?)
        (g$6425$Of4HK core-prim . implementation-restriction-violation?)
        (g$6335$Of4HK core-prim . error?)
        (g$6397$Of4HK core-prim . condition-who)
        (g$11528$Of4HK core-prim . condition-predicate)
        (g$6293$Of4HK core-prim . condition-message)
        (g$6380$Of4HK core-prim . condition-irritants)
        (g$11527$Of4HK core-prim . condition-accessor)
        (g$11526$Of4HK core-prim . condition)
        (g$6363$Of4HK core-prim . assertion-violation?)
        (g$11525$Of4HK core-prim . condition?)
        (g$11524$Of4HK core-prim . utf32->string)
        (g$11523$Of4HK core-prim . utf16->string)
        (g$11522$Of4HK core-prim . utf8->string)
        (g$11521$Of4HK core-prim . uint-list->bytevector)
        (g$11520$Of4HK core-prim . u8-list->bytevector)
        (g$11519$Of4HK core-prim . string->utf8)
        (g$11518$Of4HK core-prim . string->utf32)
        (g$11517$Of4HK core-prim . string->utf16)
        (g$11516$Of4HK core-prim . sint-list->bytevector)
        (g$6147$Of4HK core-prim . native-endianness)
        (g$11515$Of4HK core-prim . bytevector?)
        (g$11514$Of4HK core-prim . bytevector=?)
        (g$11513$Of4HK core-prim . bytevector-uint-set!)
        (g$11512$Of4HK core-prim . bytevector-uint-ref)
        (g$11511$Of4HK core-prim . bytevector-u8-set!)
        (g$11510$Of4HK core-prim . bytevector-u8-ref)
        (g$6168$Of4HK core-prim . bytevector-u64-set!)
        (g$6164$Of4HK core-prim . bytevector-u64-ref)
        (g$6170$Of4HK core-prim . bytevector-u64-native-set!)
        (g$6166$Of4HK core-prim . bytevector-u64-native-ref)
        (g$6160$Of4HK core-prim . bytevector-u32-set!)
        (g$6156$Of4HK core-prim . bytevector-u32-ref)
        (g$6162$Of4HK core-prim . bytevector-u32-native-set!)
        (g$6158$Of4HK core-prim . bytevector-u32-native-ref)
        (g$6152$Of4HK core-prim . bytevector-u16-set!)
        (g$6148$Of4HK core-prim . bytevector-u16-ref)
        (g$6154$Of4HK core-prim . bytevector-u16-native-set!)
        (g$6150$Of4HK core-prim . bytevector-u16-native-ref)
        (g$11509$Of4HK core-prim . bytevector-sint-set!)
        (g$11508$Of4HK core-prim . bytevector-sint-ref)
        (g$11507$Of4HK core-prim . bytevector-s8-set!)
        (g$11506$Of4HK core-prim . bytevector-s8-ref)
        (g$6169$Of4HK core-prim . bytevector-s64-set!)
        (g$6165$Of4HK core-prim . bytevector-s64-ref)
        (g$6171$Of4HK core-prim . bytevector-s64-native-set!)
        (g$6167$Of4HK core-prim . bytevector-s64-native-ref)
        (g$6161$Of4HK core-prim . bytevector-s32-set!)
        (g$6157$Of4HK core-prim . bytevector-s32-ref)
        (g$6163$Of4HK core-prim . bytevector-s32-native-set!)
        (g$6159$Of4HK core-prim . bytevector-s32-native-ref)
        (g$6153$Of4HK core-prim . bytevector-s16-set!)
        (g$6149$Of4HK core-prim . bytevector-s16-ref)
        (g$6155$Of4HK core-prim . bytevector-s16-native-set!)
        (g$6151$Of4HK core-prim . bytevector-s16-native-ref)
        (g$11505$Of4HK core-prim . bytevector-length)
        (g$11504$Of4HK core-prim . bytevector-ieee-single-set!)
        (g$11503$Of4HK core-prim . bytevector-ieee-single-ref)
        (g$6174$Of4HK core-prim . bytevector-ieee-single-native-set!)
        (g$6172$Of4HK core-prim . bytevector-ieee-single-native-ref)
        (g$11502$Of4HK core-prim . bytevector-ieee-double-set!)
        (g$11501$Of4HK core-prim . bytevector-ieee-double-ref)
        (g$6175$Of4HK core-prim . bytevector-ieee-double-native-set!)
        (g$6173$Of4HK core-prim . bytevector-ieee-double-native-ref)
        (g$11500$Of4HK core-prim . bytevector-fill!)
        (g$11499$Of4HK core-prim . bytevector-copy!)
        (g$11498$Of4HK core-prim . bytevector-copy)
        (g$11497$Of4HK core-prim . bytevector->uint-list)
        (g$11496$Of4HK core-prim . bytevector->u8-list)
        (g$11495$Of4HK core-prim . bytevector->sint-list)
        (g$6704$Of4HK core-prim . no-nans-violation?)
        (g$6690$Of4HK core-prim . no-infinities-violation?)
        (g$6703$Of4HK core-prim . make-no-nans-violation)
        (g$6689$Of4HK core-prim . make-no-infinities-violation)
        (g$11494$Of4HK core-prim . real->flonum)
        (g$11493$Of4HK core-prim . flzero?)
        (g$11492$Of4HK core-prim . fltruncate)
        (g$11491$Of4HK core-prim . fltan)
        (g$11490$Of4HK core-prim . flsqrt)
        (g$11489$Of4HK core-prim . flsin)
        (g$11488$Of4HK core-prim . flround)
        (g$11487$Of4HK core-prim . flpositive?)
        (g$11486$Of4HK core-prim . flonum?)
        (g$11485$Of4HK core-prim . flodd?)
        (g$11484$Of4HK core-prim . flnumerator)
        (g$11483$Of4HK core-prim . flnegative?)
        (g$11482$Of4HK core-prim . flnan?)
        (g$11481$Of4HK core-prim . flmod0)
        (g$11480$Of4HK core-prim . flmod)
        (g$11479$Of4HK core-prim . flmin)
        (g$11478$Of4HK core-prim . flmax)
        (g$11477$Of4HK core-prim . fllog)
        (g$11476$Of4HK core-prim . flinteger?)
        (g$11475$Of4HK core-prim . flinfinite?)
        (g$11474$Of4HK core-prim . flfloor)
        (g$11473$Of4HK core-prim . flfinite?)
        (g$11472$Of4HK core-prim . flexpt)
        (g$11471$Of4HK core-prim . flexp)
        (g$11470$Of4HK core-prim . fleven?)
        (g$11469$Of4HK core-prim . fldiv0-and-mod0)
        (g$11468$Of4HK core-prim . fldiv0)
        (g$11467$Of4HK core-prim . fldiv-and-mod)
        (g$11466$Of4HK core-prim . fldiv)
        (g$11465$Of4HK core-prim . fldenominator)
        (g$11464$Of4HK core-prim . flcos)
        (g$11463$Of4HK core-prim . flceiling)
        (g$11462$Of4HK core-prim . flatan)
        (g$11461$Of4HK core-prim . flasin)
        (g$11460$Of4HK core-prim . flacos)
        (g$11459$Of4HK core-prim . flabs)
        (g$11458$Of4HK core-prim . fl>?)
        (g$11457$Of4HK core-prim . fl>=?)
        (g$11456$Of4HK core-prim . fl=?)
        (g$11455$Of4HK core-prim . fl<?)
        (g$11454$Of4HK core-prim . fl<=?)
        (g$11453$Of4HK core-prim . fl/)
        (g$11452$Of4HK core-prim . fl-)
        (g$11451$Of4HK core-prim . fl+)
        (g$11450$Of4HK core-prim . fl*)
        (g$11449$Of4HK core-prim . fixnum->flonum)
        (g$11448$Of4HK core-prim . fxzero?)
        (g$11447$Of4HK core-prim . fxxor)
        (g$6635$Of4HK core-prim . fxrotate-bit-field)
        (g$11446$Of4HK core-prim . fxreverse-bit-field)
        (g$11445$Of4HK core-prim . fxpositive?)
        (g$11444$Of4HK core-prim . fxodd?)
        (g$11443$Of4HK core-prim . fxnot)
        (g$11442$Of4HK core-prim . fxnegative?)
        (g$11441$Of4HK core-prim . fxmod0)
        (g$11440$Of4HK core-prim . fxmod)
        (g$11439$Of4HK core-prim . fxmin)
        (g$11438$Of4HK core-prim . fxmax)
        (g$11437$Of4HK core-prim . fxlength)
        (g$11436$Of4HK core-prim . fxior)
        (g$6629$Of4HK core-prim . fxif)
        (g$11435$Of4HK core-prim . fxfirst-bit-set)
        (g$11434$Of4HK core-prim . fxeven?)
        (g$11433$Of4HK core-prim . fxdiv0-and-mod0)
        (g$11432$Of4HK core-prim . fxdiv0)
        (g$11431$Of4HK core-prim . fxdiv-and-mod)
        (g$11430$Of4HK core-prim . fxdiv)
        (g$6632$Of4HK core-prim . fxcopy-bit-field)
        (g$6630$Of4HK core-prim . fxcopy-bit)
        (g$11429$Of4HK core-prim . fxbit-set?)
        (g$6631$Of4HK core-prim . fxbit-field)
        (g$11428$Of4HK core-prim . fxbit-count)
        (g$6634$Of4HK core-prim . fxarithmetic-shift-right)
        (g$6633$Of4HK core-prim . fxarithmetic-shift-left)
        (g$11427$Of4HK core-prim . fxarithmetic-shift)
        (g$11426$Of4HK core-prim . fxand)
        (g$11425$Of4HK core-prim . fx>?)
        (g$11424$Of4HK core-prim . fx>=?)
        (g$11423$Of4HK core-prim . fx=?)
        (g$11422$Of4HK core-prim . fx<?)
        (g$11421$Of4HK core-prim . fx<=?)
        (g$11420$Of4HK core-prim . fx-/carry)
        (g$11419$Of4HK core-prim . fx-)
        (g$11418$Of4HK core-prim . fx+/carry)
        (g$11417$Of4HK core-prim . fx+)
        (g$11416$Of4HK core-prim . fx*/carry)
        (g$11415$Of4HK core-prim . fx*)
        (g$11414$Of4HK core-prim . greatest-fixnum)
        (g$11413$Of4HK core-prim . least-fixnum)
        (g$11412$Of4HK core-prim . fixnum-width)
        (g$11411$Of4HK core-prim . fixnum?)
        (g$6583$Of4HK core-prim . bitwise-rotate-bit-field)
        (g$6584$Of4HK core-prim . bitwise-reverse-bit-field)
        (g$11410$Of4HK core-prim . bitwise-length)
        (g$6577$Of4HK core-prim . bitwise-if)
        (g$11409$Of4HK core-prim . bitwise-first-bit-set)
        (g$6580$Of4HK core-prim . bitwise-copy-bit-field)
        (g$6578$Of4HK core-prim . bitwise-copy-bit)
        (g$11408$Of4HK core-prim . bitwise-bit-set?)
        (g$11407$Of4HK core-prim . bitwise-bit-field)
        (g$11406$Of4HK core-prim . bitwise-bit-count)
        (g$11405$Of4HK core-prim . bitwise-xor)
        (g$11404$Of4HK core-prim . bitwise-ior)
        (g$11403$Of4HK core-prim . bitwise-and)
        (g$11402$Of4HK core-prim . bitwise-not)
        (g$6582$Of4HK core-prim . bitwise-arithmetic-shift-right)
        (g$6581$Of4HK core-prim . bitwise-arithmetic-shift-left)
        (g$11401$Of4HK core-prim . bitwise-arithmetic-shift)
        (g$11400$Of4HK core-prim . zero?)
        (g$11399$Of4HK core-prim . vector?)
        (g$11398$Of4HK core-prim . vector-set!)
        (g$11397$Of4HK core-prim . vector-ref)
        (g$11396$Of4HK core-prim . vector-map)
        (g$11395$Of4HK core-prim . vector-length)
        (g$11394$Of4HK core-prim . vector-for-each)
        (g$11393$Of4HK core-prim . vector-fill!)
        (g$11392$Of4HK core-prim . vector->list)
        (g$11391$Of4HK core-prim . vector)
        (g$11390$Of4HK core-prim . values)
        (g$11389$Of4HK core-prim . truncate)
        (g$11388$Of4HK core-prim . tan)
        (g$11387$Of4HK core-prim . symbol?)
        (g$11386$Of4HK core-prim . symbol=?)
        (g$11385$Of4HK core-prim . symbol->string)
        (g$11384$Of4HK core-prim . substring)
        (g$11383$Of4HK core-prim . string?)
        (g$11382$Of4HK core-prim . string>?)
        (g$11381$Of4HK core-prim . string>=?)
        (g$11380$Of4HK core-prim . string=?)
        (g$11379$Of4HK core-prim . string<?)
        (g$11378$Of4HK core-prim . string<=?)
        (g$11377$Of4HK core-prim . string-ref)
        (g$11376$Of4HK core-prim . string-length)
        (g$11375$Of4HK core-prim . string-for-each)
        (g$11374$Of4HK core-prim . string-copy)
        (g$11373$Of4HK core-prim . string-append)
        (g$11372$Of4HK core-prim . string->symbol)
        (g$11371$Of4HK core-prim . string->number)
        (g$11370$Of4HK core-prim . string->list)
        (g$11369$Of4HK core-prim . string)
        (g$11368$Of4HK core-prim . sqrt)
        (g$11367$Of4HK core-prim . sin)
        (g$11366$Of4HK core-prim . round)
        (g$11365$Of4HK core-prim . reverse)
        (g$11364$Of4HK core-prim . real?)
        (g$11363$Of4HK core-prim . real-valued?)
        (g$11362$Of4HK core-prim . real-part)
        (g$5608$Of4HK core-prim . rationalize)
        (g$11361$Of4HK core-prim . rational?)
        (g$11360$Of4HK core-prim . rational-valued?)
        (g$11359$Of4HK core-prim . procedure?)
        (g$11358$Of4HK core-prim . positive?)
        (g$11357$Of4HK core-prim . pair?)
        (g$11356$Of4HK core-prim . odd?)
        (g$11355$Of4HK core-prim . numerator)
        (g$11354$Of4HK core-prim . number?)
        (g$11353$Of4HK core-prim . number->string)
        (g$11352$Of4HK core-prim . null?)
        (g$11351$Of4HK core-prim . not)
        (g$11350$Of4HK core-prim . negative?)
        (g$11349$Of4HK core-prim . nan?)
        (g$11348$Of4HK core-prim . min)
        (g$11347$Of4HK core-prim . max)
        (g$11346$Of4HK core-prim . map)
        (g$11345$Of4HK core-prim . make-vector)
        (g$11344$Of4HK core-prim . make-string)
        (g$11343$Of4HK core-prim . make-rectangular)
        (g$11342$Of4HK core-prim . make-polar)
        (g$11341$Of4HK core-prim . magnitude)
        (g$11340$Of4HK core-prim . log)
        (g$11339$Of4HK core-prim . list?)
        (g$11338$Of4HK core-prim . list-tail)
        (g$11337$Of4HK core-prim . list-ref)
        (g$11336$Of4HK core-prim . list->vector)
        (g$11335$Of4HK core-prim . list->string)
        (g$11334$Of4HK core-prim . list)
        (g$11333$Of4HK core-prim . length)
        (g$11332$Of4HK core-prim . lcm)
        (g$11331$Of4HK core-prim . integer?)
        (g$11330$Of4HK core-prim . integer-valued?)
        (g$11329$Of4HK core-prim . integer->char)
        (g$11328$Of4HK core-prim . infinite?)
        (g$11327$Of4HK core-prim . inexact?)
        (g$11326$Of4HK core-prim . inexact)
        (g$11325$Of4HK core-prim . imag-part)
        (g$11324$Of4HK core-prim . gcd)
        (g$11323$Of4HK core-prim . for-each)
        (g$11322$Of4HK core-prim . floor)
        (g$11321$Of4HK core-prim . finite?)
        (g$11320$Of4HK core-prim . expt)
        (g$11319$Of4HK core-prim . exp)
        (g$11318$Of4HK core-prim . exact?)
        (g$11317$Of4HK core-prim . exact-integer-sqrt)
        (g$11316$Of4HK core-prim . exact)
        (g$11315$Of4HK core-prim . even?)
        (g$11314$Of4HK core-prim . error)
        (g$11313$Of4HK core-prim . eqv?)
        (g$11312$Of4HK core-prim . equal?)
        (g$11311$Of4HK core-prim . eq?)
        (g$11310$Of4HK core-prim . dynamic-wind)
        (g$11309$Of4HK core-prim . div0-and-mod0)
        (g$11308$Of4HK core-prim . mod0)
        (g$11307$Of4HK core-prim . div0)
        (g$11306$Of4HK core-prim . div-and-mod)
        (g$11305$Of4HK core-prim . mod)
        (g$11304$Of4HK core-prim . div)
        (g$11303$Of4HK core-prim . denominator)
        (g$11302$Of4HK core-prim . cos)
        (g$11301$Of4HK core-prim . cons)
        (g$11300$Of4HK core-prim . complex?)
        (g$11299$Of4HK core-prim . char?)
        (g$11298$Of4HK core-prim . char>?)
        (g$11297$Of4HK core-prim . char>=?)
        (g$11296$Of4HK core-prim . char=?)
        (g$11295$Of4HK core-prim . char<?)
        (g$11294$Of4HK core-prim . char<=?)
        (g$11293$Of4HK core-prim . char->integer)
        (g$11292$Of4HK core-prim . ceiling)
        (g$11291$Of4HK core-prim . call-with-values)
        (g$11290$Of4HK core-prim . call/cc)
        (g$11289$Of4HK core-prim . call-with-current-continuation)
        (g$5607$Of4HK core-prim . cddddr)
        (g$5606$Of4HK core-prim . cdddar)
        (g$5605$Of4HK core-prim . cddadr)
        (g$5604$Of4HK core-prim . cddaar)
        (g$5603$Of4HK core-prim . cdaddr)
        (g$5602$Of4HK core-prim . cdadar)
        (g$5601$Of4HK core-prim . cdaadr)
        (g$5600$Of4HK core-prim . cdaaar)
        (g$5599$Of4HK core-prim . cadddr)
        (g$5598$Of4HK core-prim . caddar)
        (g$5597$Of4HK core-prim . cadadr)
        (g$5596$Of4HK core-prim . cadaar)
        (g$5595$Of4HK core-prim . caaddr)
        (g$5594$Of4HK core-prim . caadar)
        (g$5593$Of4HK core-prim . caaadr)
        (g$5592$Of4HK core-prim . caaaar)
        (g$5591$Of4HK core-prim . cdddr)
        (g$5590$Of4HK core-prim . cddar)
        (g$5589$Of4HK core-prim . cdadr)
        (g$5588$Of4HK core-prim . cdaar)
        (g$5587$Of4HK core-prim . caddr)
        (g$5586$Of4HK core-prim . cadar)
        (g$5585$Of4HK core-prim . caadr)
        (g$5584$Of4HK core-prim . caaar)
        (g$5583$Of4HK core-prim . cddr)
        (g$5582$Of4HK core-prim . cdar)
        (g$5581$Of4HK core-prim . cadr)
        (g$5580$Of4HK core-prim . caar)
        (g$11288$Of4HK core-prim . cdr)
        (g$11287$Of4HK core-prim . car)
        (g$11286$Of4HK core-prim . boolean?)
        (g$11285$Of4HK core-prim . boolean=?)
        (g$11284$Of4HK core-prim . atan)
        (g$11283$Of4HK core-prim . assertion-violation)
        (g$11282$Of4HK core-prim . asin)
        (g$11281$Of4HK core-prim . apply)
        (g$11280$Of4HK core-prim . append)
        (g$11279$Of4HK core-prim . angle)
        (g$11278$Of4HK core-prim . acos)
        (g$11277$Of4HK core-prim . abs)
        (g$11276$Of4HK core-prim . /)
        (g$11275$Of4HK core-prim . *)
        (g$11274$Of4HK core-prim . -)
        (g$11273$Of4HK core-prim . +)
        (g$11272$Of4HK core-prim . >=)
        (g$11271$Of4HK core-prim . >)
        (g$11270$Of4HK core-prim . =)
        (g$11269$Of4HK core-prim . <=)
        (g$11268$Of4HK core-prim . <)
        (g$11267$Of4HK core-prim . make-record-printer)
        (g$11266$Of4HK core-prim . eqv-hash)
        (g$11265$Of4HK core-prim . eq-hash)
        (g$11264$Of4HK core-prim . reverse!)
        (g$6898$Of4HK core-prim . printf)
        (g$6899$Of4HK core-prim . fprintf)
        (g$6900$Of4HK core-prim . format)
        (g$11263$Of4HK core-prim . get-arity)
        (g$11262$Of4HK core-prim . gc-collect)
        (g$11261$Of4HK core-prim . clr-type?)
        (g$11260$Of4HK core-prim . get-clr-type)
        (g$11259$Of4HK core-prim . vector-append)
        (g$11258$Of4HK core-prim . vector-filter)
        (g$11257$Of4HK core-prim . vector-reverse!)
        (g$11256$Of4HK core-prim . vector-contains?)
        (g$11255$Of4HK core-prim . vector-index-of)
        (g$11254$Of4HK core-prim . vector-copy)
        (g$11253$Of4HK core-prim . vector-binary-search)
        (g$11252$Of4HK core-prim . get-output-string)
        (g$11251$Of4HK core-prim . open-output-string)
        (g$11250$Of4HK core-prim . open-input-string)
        (g$11249$Of4HK core-prim . string-format)
        (g$11248$Of4HK core-prim . make-traced-procedure)
        (g$6919$Of4HK core-prim . make-traced-macro)
        (g$11247$Of4HK core-prim . pmap)
        (g$11246$Of4HK core-prim . time-it)
        (g$6924$Of4HK core-prim . make-parameter)
        (g$11245$Of4HK core-prim . library-locator)
        (g$11244$Of4HK core-prim . get-library-paths)
        (g$8180$Of4HK core-prim . environment-symbols)
        (g$8179$Of4HK core-prim . interaction-environment-symbols)
        (g$7349$Of4HK core-prim . library-path)
        (g$7350$Of4HK core-prim . library-extensions)
        (g$7370$Of4HK core-prim . installed-libraries)
        (g$8185$Of4HK core-prim . expand)
        (g$11243$Of4HK $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11242$Of4HK $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11241$Of4HK $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11240$Of4HK $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11239$Of4HK $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11238$Of4HK
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11237$Of4HK
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11236$Of4HK
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11235$Of4HK
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11234$Of4HK $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11233$Of4HK
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11232$Of4HK $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11231$Of4HK $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11230$Of4HK $core-rtd &i/o-rtd &i/o-rcd)
        (g$11229$Of4HK $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11228$Of4HK $core-rtd &undefined-rtd &undefined-rcd)
        (g$11227$Of4HK $core-rtd &syntax-rtd &syntax-rcd)
        (g$11226$Of4HK $core-rtd &lexical-rtd &lexical-rcd)
        (g$11225$Of4HK
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11224$Of4HK $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11223$Of4HK $core-rtd &who-rtd &who-rcd)
        (g$11222$Of4HK $core-rtd &irritants-rtd &irritants-rcd)
        (g$11221$Of4HK $core-rtd &assertion-rtd &assertion-rcd)
        (g$11220$Of4HK $core-rtd &violation-rtd &violation-rcd)
        (g$11219$Of4HK $core-rtd &error-rtd &error-rcd)
        (g$11218$Of4HK $core-rtd &serious-rtd &serious-rcd)
        (g$11217$Of4HK $core-rtd &warning-rtd &warning-rcd)
        (g$11216$Of4HK $core-rtd &message-rtd &message-rcd)
        (g$11215$Of4HK $core-rtd &condition-rtd &condition-rcd)
        (g$11214$Of4HK macro . define-condition-type)
        (g$11213$Of4HK macro . define-enumeration)
        (g$11212$Of4HK macro . define-record-type)
        (g$11211$Of4HK macro . parent-rtd)
        (g$11210$Of4HK macro . nongenerative)
        (g$11209$Of4HK macro . opaque)
        (g$11208$Of4HK macro . sealed)
        (g$11207$Of4HK macro . protocol)
        (g$11206$Of4HK macro . parent)
        (g$11205$Of4HK macro . immutable)
        (g$11204$Of4HK macro . mutable)
        (g$11203$Of4HK macro . fields)
        (g$11202$Of4HK macro . error-handling-mode)
        (g$11201$Of4HK macro . file-options)
        (g$11200$Of4HK macro . buffer-mode)
        (g$11199$Of4HK macro . eol-style)
        (g$11198$Of4HK macro . guard)
        (g$11197$Of4HK macro . trace-letrec-syntax)
        (g$11196$Of4HK macro . trace-let-syntax)
        (g$11195$Of4HK macro . trace-define-syntax)
        (g$11194$Of4HK macro . trace-define)
        (g$11193$Of4HK macro . trace-lambda)
        (g$11192$Of4HK macro . unsyntax-splicing)
        (g$11191$Of4HK macro . unsyntax)
        (g$11190$Of4HK macro . unquote-splicing)
        (g$11189$Of4HK macro . unquote)
        (g$11188$Of4HK macro . _)
        (g$11187$Of4HK macro . else)
        (g$11186$Of4HK macro . =>)
        (g$11185$Of4HK macro . ...)
        (g$11184$Of4HK macro . assert)
        (g$11183$Of4HK macro . endianness)
        (g$11182$Of4HK macro . delay)
        (g$11181$Of4HK macro . time)
        (g$11180$Of4HK macro . or)
        (g$11179$Of4HK macro . and)
        (g$11178$Of4HK macro . do)
        (g$11177$Of4HK macro . cond)
        (g$11176$Of4HK macro . let*)
        (g$11175$Of4HK macro . let)
        (g$11174$Of4HK macro . identifier-syntax)
        (g$11173$Of4HK macro . with-syntax)
        (g$11172$Of4HK macro . quasisyntax)
        (g$11171$Of4HK macro . quasiquote)
        (g$11170$Of4HK macro . syntax-rules)
        (g$11169$Of4HK macro . include-into)
        (g$11168$Of4HK macro . include)
        (g$11167$Of4HK macro . define-struct)
        (g$11166$Of4HK macro . let-values)
        (g$11165$Of4HK macro . let*-values)
        (g$11164$Of4HK core-macro . record-constructor-descriptor)
        (g$11163$Of4HK core-macro . record-type-descriptor)
        (g$11162$Of4HK core-macro . fluid-let-syntax)
        (g$11161$Of4HK core-macro . case)
        (g$11160$Of4HK core-macro . parameterize)
        (g$11159$Of4HK core-macro . unless)
        (g$11158$Of4HK core-macro . when)
        (g$11157$Of4HK core-macro . if)
        (g$11156$Of4HK core-macro . letrec*)
        (g$11155$Of4HK core-macro . letrec)
        (g$11154$Of4HK core-macro . type-descriptor)
        (g$11153$Of4HK core-macro . case-lambda)
        (g$11152$Of4HK core-macro . lambda)
        (g$11151$Of4HK core-macro . syntax)
        (g$11150$Of4HK core-macro . syntax-case)
        (g$11149$Of4HK core-macro . quote)
        (g$11148$Of4HK core-macro . foreign-call)
        (g$11147$Of4HK letrec-syntax)
        (g$11146$Of4HK let-syntax)
        (g$11145$Of4HK set!)
        (g$11144$Of4HK import)
        (g$11143$Of4HK library)
        (g$11142$Of4HK begin)
        (g$11141$Of4HK module)
        (g$11140$Of4HK define-syntax)
        (g$11139$Of4HK define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6731$Of4HK
      'g$11832$Of4HK
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$11711$Of4HK)
        (eval-core . g$11710$Of4HK)
        (set-symbol-value! . g$11709$Of4HK)
        (symbol-value . g$11708$Of4HK)
        (gensym . g$11706$Of4HK)
        (void . g$11705$Of4HK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$local-library-path$10742$Of4HK
     g$local-library-path$10768$Of4HK
     (case-lambda
       ((g$filename$10751$Of4HK)
        (cons
          (g$get-directory-name$5233$Of4HK g$filename$10751$Of4HK)
          (g$library-path$6715$Of4HK)))))
   (g$load$10743$Of4HK
     g$load$10769$Of4HK
     (case-lambda
       ((g$filename$10752$Of4HK)
        (begin
          (g$load-r6rs-top-level$10749$Of4HK g$filename$10752$Of4HK 'load)
          (void)))))
   (g$ironscheme-build$10744$Of4HK
     g$ironscheme-build$10770$Of4HK
     (case-lambda (() (g$load$10743$Of4HK '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$10745$Of4HK
     g$eval-top-level$10771$Of4HK
     (case-lambda
       ((g$x$10753$Of4HK)
        (g$eval$10720$Of4HK
          g$x$10753$Of4HK
          (g$interaction-environment$10740$Of4HK)))))
   (g$compile-system-libraries$10746$Of4HK
     g$compile-system-libraries$10772$Of4HK
     (case-lambda
       (()
        (g$eval-top-level$10745$Of4HK
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$10747$Of4HK
     g$compile$10773$Of4HK
     (case-lambda
       ((g$filename$10754$Of4HK)
        (g$load-r6rs-top-level$10749$Of4HK g$filename$10754$Of4HK 'compile))))
   (g$compile->closure$10748$Of4HK
     g$compile->closure$10774$Of4HK
     (case-lambda
       ((g$filename$10755$Of4HK)
        (g$load-r6rs-top-level$10749$Of4HK g$filename$10755$Of4HK 'closure))))
   (g$load-r6rs-top-level$10749$Of4HK
     g$load-r6rs-top-level$10775$Of4HK
     (case-lambda
       ((g$filename$10756$Of4HK g$how$10757$Of4HK)
        ((case-lambda
           ((g$library-path$10760$Of4HK g$library-path$10761$Of4HK)
            ((case-lambda
               ((g$swap$10762$Of4HK)
                (dynamic-wind
                  g$swap$10762$Of4HK
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$10763$Of4HK)
                         ((case-lambda
                            ((g$t$10764$Of4HK)
                             (if (eqv? g$t$10764$Of4HK 'closure)
                               (g$pre-compile-r6rs-top-level$10739$Of4HK
                                 g$x*$10763$Of4HK)
                               (if (eqv? g$t$10764$Of4HK 'load)
                                 ((g$compile-r6rs-top-level$10738$Of4HK
                                    g$x*$10763$Of4HK))
                                 (if (eqv? g$t$10764$Of4HK 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$10738$Of4HK
                                       g$x*$10763$Of4HK)
                                     (g$serialize-all$6719$Of4HK
                                       serialize-library
                                       g$compile-core-expr$6433$Of4HK))
                                   (void))))))
                          g$how$10757$Of4HK)))
                      (with-input-from-file
                        g$filename$10756$Of4HK
                        (case-lambda
                          (()
                           ((letrec ((g$f$10765$Of4HK
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$10766$Of4HK)
                                              (if (eof-object? g$x$10766$Of4HK)
                                                '()
                                                (cons
                                                  g$x$10766$Of4HK
                                                  (g$f$10765$Of4HK)))))
                                           (read-annotated))))))
                              g$f$10765$Of4HK))))))))
                  g$swap$10762$Of4HK)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$10767$Of4HK)
                    (begin
                      (g$library-path$10760$Of4HK g$library-path$10761$Of4HK)
                      (set! g$library-path$10761$Of4HK g$t$10767$Of4HK))))
                 (g$library-path$10760$Of4HK)))))))
         g$library-path$6715$Of4HK
         (g$local-library-path$10742$Of4HK g$filename$10756$Of4HK))))))
  (begin
    (g$current-precompiled-library-loader$6720$Of4HK load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$10750$Of4HK)
         (if (g$serious-condition?$5616$Of4HK g$ex$10750$Of4HK)
           (raise g$ex$10750$Of4HK)
           (begin (display g$ex$10750$Of4HK) (newline))))))
    (set-symbol-value! 'load g$load$10743$Of4HK)
    (set-symbol-value! 'compile g$compile$10747$Of4HK)
    (set-symbol-value! 'compile->closure g$compile->closure$10748$Of4HK)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$10745$Of4HK)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$10713$Of4HK)
    (set-symbol-value! 'expanded2core g$expanded->core$6432$Of4HK)
    (g$library-path$6715$Of4HK (get-library-paths))))

