;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$5782$CQIRF
     g$list-tail$5926$CQIRF
     (case-lambda
       ((g$lst$5810$CQIRF g$index$5811$CQIRF)
        (if ((case-lambda
               ((g$t$5812$CQIRF)
                (if g$t$5812$CQIRF
                  g$t$5812$CQIRF
                  (begin '#f (g$negative?$6654$CQIRF g$index$5811$CQIRF)))))
             (null? g$lst$5810$CQIRF))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$5810$CQIRF
            g$index$5811$CQIRF)
          (if (g$zero?$6655$CQIRF g$index$5811$CQIRF)
            g$lst$5810$CQIRF
            (g$list-tail$5782$CQIRF
              (cdr g$lst$5810$CQIRF)
              (- g$index$5811$CQIRF '1)))))))
   (g$list-ref$5783$CQIRF
     g$list-ref$5927$CQIRF
     (case-lambda
       ((g$lst$5813$CQIRF g$index$5814$CQIRF)
        (car (g$list-tail$5782$CQIRF g$lst$5813$CQIRF g$index$5814$CQIRF)))))
   (g$last-pair$5784$CQIRF
     g$last-pair$5928$CQIRF
     (case-lambda
       ((g$lst$5815$CQIRF)
        (if (null? g$lst$5815$CQIRF)
          g$lst$5815$CQIRF
          (if (null? (cdr g$lst$5815$CQIRF))
            g$lst$5815$CQIRF
            (g$last-pair$5784$CQIRF (cdr g$lst$5815$CQIRF)))))))
   (g$make-list$5785$CQIRF
     g$make-list$5929$CQIRF
     (case-lambda
       ((g$n$5816$CQIRF) (vector->list (make-vector g$n$5816$CQIRF)))
       ((g$n$5817$CQIRF g$fill$5818$CQIRF)
        (vector->list (make-vector g$n$5817$CQIRF g$fill$5818$CQIRF)))))
   (g$find$5786$CQIRF
     g$find$5930$CQIRF
     (case-lambda
       ((g$proc$5819$CQIRF g$l$5820$CQIRF)
        (if (null? g$l$5820$CQIRF)
          '#f
          ((case-lambda
             ((g$e$5821$CQIRF g$r$5822$CQIRF g$proc$5823$CQIRF)
              (if (g$proc$5823$CQIRF g$e$5821$CQIRF)
                g$e$5821$CQIRF
                (g$find$5786$CQIRF g$proc$5823$CQIRF g$r$5822$CQIRF))))
           (car g$l$5820$CQIRF)
           (cdr g$l$5820$CQIRF)
           g$proc$5819$CQIRF)))))
   (g$partition$5787$CQIRF
     g$partition$5931$CQIRF
     (case-lambda
       ((g$proc$5824$CQIRF g$l$5825$CQIRF)
        ((letrec ((g$f$5826$CQIRF
                    (case-lambda
                      ((g$l$5827$CQIRF g$a$5828$CQIRF g$b$5829$CQIRF)
                       (if (null? g$l$5827$CQIRF)
                         (values
                           (reverse! g$a$5828$CQIRF)
                           (reverse! g$b$5829$CQIRF))
                         ((case-lambda
                            ((g$e$5830$CQIRF)
                             (if (g$proc$5824$CQIRF g$e$5830$CQIRF)
                               (g$f$5826$CQIRF
                                 (cdr g$l$5827$CQIRF)
                                 (cons g$e$5830$CQIRF g$a$5828$CQIRF)
                                 g$b$5829$CQIRF)
                               (g$f$5826$CQIRF
                                 (cdr g$l$5827$CQIRF)
                                 g$a$5828$CQIRF
                                 (cons g$e$5830$CQIRF g$b$5829$CQIRF)))))
                          (car g$l$5827$CQIRF)))))))
           g$f$5826$CQIRF)
         g$l$5825$CQIRF
         '()
         '()))))
   (g$remp$5788$CQIRF
     g$remp$5932$CQIRF
     (case-lambda
       ((g$proc$5831$CQIRF g$l$5832$CQIRF)
        ((letrec ((g$f$5833$CQIRF
                    (case-lambda
                      ((g$l$5834$CQIRF g$a$5835$CQIRF)
                       (if (null? g$l$5834$CQIRF)
                         (reverse! g$a$5835$CQIRF)
                         ((case-lambda
                            ((g$e$5836$CQIRF)
                             (if (g$proc$5831$CQIRF g$e$5836$CQIRF)
                               (g$f$5833$CQIRF
                                 (cdr g$l$5834$CQIRF)
                                 g$a$5835$CQIRF)
                               (g$f$5833$CQIRF
                                 (cdr g$l$5834$CQIRF)
                                 (cons g$e$5836$CQIRF g$a$5835$CQIRF)))))
                          (car g$l$5834$CQIRF)))))))
           g$f$5833$CQIRF)
         g$l$5832$CQIRF
         '()))))
   (g$filter$5789$CQIRF
     g$filter$5933$CQIRF
     (case-lambda
       ((g$proc$5837$CQIRF g$l$5838$CQIRF)
        ((letrec ((g$f$5839$CQIRF
                    (case-lambda
                      ((g$l$5840$CQIRF g$a$5841$CQIRF)
                       (if (null? g$l$5840$CQIRF)
                         (reverse! g$a$5841$CQIRF)
                         ((case-lambda
                            ((g$e$5842$CQIRF)
                             (if (g$proc$5837$CQIRF g$e$5842$CQIRF)
                               (g$f$5839$CQIRF
                                 (cdr g$l$5840$CQIRF)
                                 (cons g$e$5842$CQIRF g$a$5841$CQIRF))
                               (g$f$5839$CQIRF
                                 (cdr g$l$5840$CQIRF)
                                 g$a$5841$CQIRF))))
                          (car g$l$5840$CQIRF)))))))
           g$f$5839$CQIRF)
         g$l$5838$CQIRF
         '()))))
   (g$assq$5790$CQIRF
     g$assq$5934$CQIRF
     (case-lambda
       ((g$obj$5843$CQIRF g$lst$5844$CQIRF)
        (if (null? g$lst$5844$CQIRF)
          '#f
          ((case-lambda
             ((g$obj$5845$CQIRF g$t$5846$CQIRF g$r$5847$CQIRF)
              (if (eq? g$obj$5845$CQIRF (car g$t$5846$CQIRF))
                g$t$5846$CQIRF
                (g$assq$5790$CQIRF g$obj$5845$CQIRF g$r$5847$CQIRF))))
           g$obj$5843$CQIRF
           (car g$lst$5844$CQIRF)
           (cdr g$lst$5844$CQIRF))))))
   (g$assv$5791$CQIRF
     g$assv$5935$CQIRF
     (case-lambda
       ((g$obj$5848$CQIRF g$lst$5849$CQIRF)
        (if (null? g$lst$5849$CQIRF)
          '#f
          ((case-lambda
             ((g$obj$5850$CQIRF g$t$5851$CQIRF g$r$5852$CQIRF)
              (if (eqv? g$obj$5850$CQIRF (car g$t$5851$CQIRF))
                g$t$5851$CQIRF
                (g$assv$5791$CQIRF g$obj$5850$CQIRF g$r$5852$CQIRF))))
           g$obj$5848$CQIRF
           (car g$lst$5849$CQIRF)
           (cdr g$lst$5849$CQIRF))))))
   (g$assoc$5792$CQIRF
     g$assoc$5936$CQIRF
     (case-lambda
       ((g$obj$5853$CQIRF g$lst$5854$CQIRF)
        (if (null? g$lst$5854$CQIRF)
          '#f
          ((case-lambda
             ((g$obj$5855$CQIRF g$t$5856$CQIRF g$r$5857$CQIRF)
              (if (equal? g$obj$5855$CQIRF (car g$t$5856$CQIRF))
                g$t$5856$CQIRF
                (g$assoc$5792$CQIRF g$obj$5855$CQIRF g$r$5857$CQIRF))))
           g$obj$5853$CQIRF
           (car g$lst$5854$CQIRF)
           (cdr g$lst$5854$CQIRF))))))
   (g$assp$5793$CQIRF
     g$assp$5937$CQIRF
     (case-lambda
       ((g$p?$5858$CQIRF g$lst$5859$CQIRF)
        (if (null? g$lst$5859$CQIRF)
          '#f
          ((case-lambda
             ((g$p?$5860$CQIRF g$t$5861$CQIRF g$r$5862$CQIRF)
              (if (g$p?$5860$CQIRF (car g$t$5861$CQIRF))
                g$t$5861$CQIRF
                (g$assp$5793$CQIRF g$p?$5860$CQIRF g$r$5862$CQIRF))))
           g$p?$5858$CQIRF
           (car g$lst$5859$CQIRF)
           (cdr g$lst$5859$CQIRF))))))
   (g$memq$5794$CQIRF
     g$memq$5938$CQIRF
     (case-lambda
       ((g$obj$5863$CQIRF g$lst$5864$CQIRF)
        (if (null? g$lst$5864$CQIRF)
          '#f
          (if (eq? g$obj$5863$CQIRF (car g$lst$5864$CQIRF))
            g$lst$5864$CQIRF
            (g$memq$5794$CQIRF g$obj$5863$CQIRF (cdr g$lst$5864$CQIRF)))))))
   (g$memv$5795$CQIRF
     g$memv$5939$CQIRF
     (case-lambda
       ((g$obj$5865$CQIRF g$lst$5866$CQIRF)
        (if (null? g$lst$5866$CQIRF)
          '#f
          (if (eqv? g$obj$5865$CQIRF (car g$lst$5866$CQIRF))
            g$lst$5866$CQIRF
            (g$memv$5795$CQIRF g$obj$5865$CQIRF (cdr g$lst$5866$CQIRF)))))))
   (g$member$5796$CQIRF
     g$member$5940$CQIRF
     (case-lambda
       ((g$obj$5867$CQIRF g$lst$5868$CQIRF)
        (if (null? g$lst$5868$CQIRF)
          '#f
          (if (equal? g$obj$5867$CQIRF (car g$lst$5868$CQIRF))
            g$lst$5868$CQIRF
            (g$member$5796$CQIRF g$obj$5867$CQIRF (cdr g$lst$5868$CQIRF)))))))
   (g$memp$5797$CQIRF
     g$memp$5941$CQIRF
     (case-lambda
       ((g$p?$5869$CQIRF g$lst$5870$CQIRF)
        (if (null? g$lst$5870$CQIRF)
          '#f
          (if (g$p?$5869$CQIRF (car g$lst$5870$CQIRF))
            g$lst$5870$CQIRF
            (g$memp$5797$CQIRF g$p?$5869$CQIRF (cdr g$lst$5870$CQIRF)))))))
   (g$all-empty?$5798$CQIRF
     g$all-empty?$5942$CQIRF
     (case-lambda
       ((g$ls$5871$CQIRF)
        ((case-lambda
           ((g$t$5872$CQIRF)
            (if g$t$5872$CQIRF
              g$t$5872$CQIRF
              (begin
                '#f
                (if (null? (car g$ls$5871$CQIRF))
                  (begin '#f (g$all-empty?$5798$CQIRF (cdr g$ls$5871$CQIRF)))
                  '#f)))))
         (null? g$ls$5871$CQIRF)))))
   (g$split$5799$CQIRF
     g$split$5943$CQIRF
     (case-lambda
       ((g$ls$5873$CQIRF)
        (if (null? g$ls$5873$CQIRF)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5799$CQIRF (cdr g$ls$5873$CQIRF))))
            (case-lambda
              ((g$cars$5874$CQIRF g$cdrs$5875$CQIRF)
               ((case-lambda
                  ((g$a$5876$CQIRF)
                   (values
                     (cons (car g$a$5876$CQIRF) g$cars$5874$CQIRF)
                     (cons (cdr g$a$5876$CQIRF) g$cdrs$5875$CQIRF))))
                (car g$ls$5873$CQIRF)))))))))
   (g$for-all$5800$CQIRF
     g$for-all$5944$CQIRF
     (case-lambda
       ((g$f$5877$CQIRF g$arg1$5878$CQIRF . g$args$5879$CQIRF)
        ((case-lambda
           ((g$args$5880$CQIRF)
            (if (g$all-empty?$5798$CQIRF g$args$5880$CQIRF)
              '#t
              (call-with-values
                (case-lambda (() (g$split$5799$CQIRF g$args$5880$CQIRF)))
                (case-lambda
                  ((g$cars$5881$CQIRF g$cdrs$5882$CQIRF)
                   (if (g$all-empty?$5798$CQIRF g$cdrs$5882$CQIRF)
                     (apply g$f$5877$CQIRF g$cars$5881$CQIRF)
                     (if (apply g$f$5877$CQIRF g$cars$5881$CQIRF)
                       (begin
                         '#f
                         (apply
                           g$for-all$5800$CQIRF
                           g$f$5877$CQIRF
                           g$cdrs$5882$CQIRF))
                       '#f))))))))
         (cons g$arg1$5878$CQIRF g$args$5879$CQIRF)))))
   (g$exists$5801$CQIRF
     g$exists$5945$CQIRF
     (case-lambda
       ((g$f$5883$CQIRF g$arg1$5884$CQIRF . g$args$5885$CQIRF)
        ((case-lambda
           ((g$args$5886$CQIRF)
            (if (g$all-empty?$5798$CQIRF g$args$5886$CQIRF)
              '#f
              (call-with-values
                (case-lambda (() (g$split$5799$CQIRF g$args$5886$CQIRF)))
                (case-lambda
                  ((g$cars$5887$CQIRF g$cdrs$5888$CQIRF)
                   ((case-lambda
                      ((g$t$5889$CQIRF)
                       (if g$t$5889$CQIRF
                         g$t$5889$CQIRF
                         (begin
                           '#f
                           (apply
                             g$exists$5801$CQIRF
                             g$f$5883$CQIRF
                             g$cdrs$5888$CQIRF)))))
                    (apply g$f$5883$CQIRF g$cars$5887$CQIRF))))))))
         (cons g$arg1$5884$CQIRF g$args$5885$CQIRF)))))
   (g$map$5802$CQIRF
     g$map$5946$CQIRF
     (case-lambda
       ((g$proc$5890$CQIRF g$list1$5891$CQIRF . g$lists$5892$CQIRF)
        ((letrec ((g$f$5893$CQIRF
                    (case-lambda
                      ((g$lists$5894$CQIRF g$a$5895$CQIRF)
                       (if (g$all-empty?$5798$CQIRF g$lists$5894$CQIRF)
                         (reverse! g$a$5895$CQIRF)
                         (call-with-values
                           (case-lambda
                             (() (g$split$5799$CQIRF g$lists$5894$CQIRF)))
                           (case-lambda
                             ((g$cars$5896$CQIRF g$cdrs$5897$CQIRF)
                              (g$f$5893$CQIRF
                                g$cdrs$5897$CQIRF
                                (cons
                                  (apply g$proc$5890$CQIRF g$cars$5896$CQIRF)
                                  g$a$5895$CQIRF))))))))))
           g$f$5893$CQIRF)
         (cons g$list1$5891$CQIRF g$lists$5892$CQIRF)
         '()))))
   (g$for-each$5803$CQIRF
     g$for-each$5947$CQIRF
     (case-lambda
       ((g$f$5898$CQIRF g$arg1$5899$CQIRF . g$args$5900$CQIRF)
        ((case-lambda
           ((g$args$5901$CQIRF)
            (if (not (g$all-empty?$5798$CQIRF g$args$5901$CQIRF))
              (call-with-values
                (case-lambda (() (g$split$5799$CQIRF g$args$5901$CQIRF)))
                (case-lambda
                  ((g$cars$5902$CQIRF g$cdrs$5903$CQIRF)
                   (begin
                     (apply g$f$5898$CQIRF g$cars$5902$CQIRF)
                     (apply
                       g$for-each$5803$CQIRF
                       g$f$5898$CQIRF
                       g$cdrs$5903$CQIRF)))))
              (void))))
         (cons g$arg1$5899$CQIRF g$args$5900$CQIRF)))))
   (g$cons*$5804$CQIRF
     g$cons*$5948$CQIRF
     (case-lambda
       ((g$a$5904$CQIRF . g$rest$5905$CQIRF)
        ((letrec ((g$f$5906$CQIRF
                    (case-lambda
                      ((g$a$5907$CQIRF g$rest$5908$CQIRF)
                       (if (null? g$rest$5908$CQIRF)
                         g$a$5907$CQIRF
                         (cons
                           g$a$5907$CQIRF
                           (g$f$5906$CQIRF
                             (car g$rest$5908$CQIRF)
                             (cdr g$rest$5908$CQIRF))))))))
           g$f$5906$CQIRF)
         g$a$5904$CQIRF
         g$rest$5905$CQIRF))))
   (g$fold-left$5805$CQIRF
     g$fold-left$5949$CQIRF
     (case-lambda
       ((g$combine$5909$CQIRF
          g$nil$5910$CQIRF
          g$list1$5911$CQIRF
          .
          g$lists$5912$CQIRF)
        (if (null? g$list1$5911$CQIRF)
          g$nil$5910$CQIRF
          (apply
            g$fold-left$5805$CQIRF
            (g$cons*$5804$CQIRF
              g$combine$5909$CQIRF
              (apply
                g$combine$5909$CQIRF
                (g$cons*$5804$CQIRF
                  g$nil$5910$CQIRF
                  (car g$list1$5911$CQIRF)
                  (g$map$5802$CQIRF car g$lists$5912$CQIRF)))
              (cdr g$list1$5911$CQIRF)
              (g$map$5802$CQIRF cdr g$lists$5912$CQIRF)))))))
   (g$fold-right$5806$CQIRF
     g$fold-right$5950$CQIRF
     (case-lambda
       ((g$combine$5913$CQIRF
          g$nil$5914$CQIRF
          g$list1$5915$CQIRF
          .
          g$lists$5916$CQIRF)
        (if (null? g$list1$5915$CQIRF)
          g$nil$5914$CQIRF
          (apply
            g$combine$5913$CQIRF
            (append
              (list (car g$list1$5915$CQIRF))
              (g$map$5802$CQIRF car g$lists$5916$CQIRF)
              (list
                (apply
                  g$fold-right$5806$CQIRF
                  (g$cons*$5804$CQIRF
                    g$combine$5913$CQIRF
                    g$nil$5914$CQIRF
                    (cdr g$list1$5915$CQIRF)
                    (g$map$5802$CQIRF cdr g$lists$5916$CQIRF))))))))))
   (g$remove$5807$CQIRF
     g$remove$5951$CQIRF
     (case-lambda
       ((g$obj$5917$CQIRF g$list$5918$CQIRF)
        (g$remp$5788$CQIRF
          (case-lambda
            ((g$x$5919$CQIRF) (equal? g$obj$5917$CQIRF g$x$5919$CQIRF)))
          g$list$5918$CQIRF))))
   (g$remv$5808$CQIRF
     g$remv$5952$CQIRF
     (case-lambda
       ((g$obj$5920$CQIRF g$list$5921$CQIRF)
        (g$remp$5788$CQIRF
          (case-lambda
            ((g$x$5922$CQIRF) (eqv? g$obj$5920$CQIRF g$x$5922$CQIRF)))
          g$list$5921$CQIRF))))
   (g$remq$5809$CQIRF
     g$remq$5953$CQIRF
     (case-lambda
       ((g$obj$5923$CQIRF g$list$5924$CQIRF)
        (g$remp$5788$CQIRF
          (case-lambda ((g$x$5925$CQIRF) (eq? g$obj$5923$CQIRF g$x$5925$CQIRF)))
          g$list$5924$CQIRF)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$div$6262$CQIRF
     g$div$6608$CQIRF
     (case-lambda
       ((g$x1$6408$CQIRF g$x2$6409$CQIRF)
        (call-with-values
          (case-lambda (() (div-and-mod g$x1$6408$CQIRF g$x2$6409$CQIRF)))
          (case-lambda
            ((g$n$6412$CQIRF g$d$6413$CQIRF)
             ((case-lambda ((g$d$6414$CQIRF g$n$6415$CQIRF) g$n$6415$CQIRF))
              g$d$6413$CQIRF
              g$n$6412$CQIRF)))))))
   (g$div0$6263$CQIRF
     g$div0$6609$CQIRF
     (case-lambda
       ((g$x1$6416$CQIRF g$x2$6417$CQIRF)
        (call-with-values
          (case-lambda (() (div0-and-mod0 g$x1$6416$CQIRF g$x2$6417$CQIRF)))
          (case-lambda
            ((g$n$6420$CQIRF g$d$6421$CQIRF)
             ((case-lambda ((g$d$6422$CQIRF g$n$6423$CQIRF) g$n$6423$CQIRF))
              g$d$6421$CQIRF
              g$n$6420$CQIRF)))))))
   (g$mod$6264$CQIRF
     g$mod$6610$CQIRF
     (case-lambda
       ((g$x1$6424$CQIRF g$x2$6425$CQIRF)
        (call-with-values
          (case-lambda (() (div-and-mod g$x1$6424$CQIRF g$x2$6425$CQIRF)))
          (case-lambda
            ((g$n$6428$CQIRF g$d$6429$CQIRF)
             ((case-lambda ((g$d$6430$CQIRF g$n$6431$CQIRF) g$d$6430$CQIRF))
              g$d$6429$CQIRF
              g$n$6428$CQIRF)))))))
   (g$mod0$6265$CQIRF
     g$mod0$6611$CQIRF
     (case-lambda
       ((g$x1$6432$CQIRF g$x2$6433$CQIRF)
        (call-with-values
          (case-lambda (() (div0-and-mod0 g$x1$6432$CQIRF g$x2$6433$CQIRF)))
          (case-lambda
            ((g$n$6436$CQIRF g$d$6437$CQIRF)
             ((case-lambda ((g$d$6438$CQIRF g$n$6439$CQIRF) g$d$6438$CQIRF))
              g$d$6437$CQIRF
              g$n$6436$CQIRF)))))))
   (g$list->vector$6266$CQIRF
     g$list->vector$6612$CQIRF
     (case-lambda ((g$lst$6440$CQIRF) (apply vector g$lst$6440$CQIRF))))
   (g$list->string$6267$CQIRF
     g$list->string$6613$CQIRF
     (case-lambda ((g$lst$6441$CQIRF) (apply string g$lst$6441$CQIRF))))
   (g$char?$6268$CQIRF
     g$char?$6614$CQIRF
     (case-lambda
       ((g$obj$6442$CQIRF) (clr-is-internal 'system.char g$obj$6442$CQIRF))))
   (g$vector?$6269$CQIRF
     g$vector?$6615$CQIRF
     (case-lambda
       ((g$obj$6443$CQIRF)
        (clr-is-internal 'system.object[] g$obj$6443$CQIRF))))
   (g$bytevector?$6270$CQIRF
     g$bytevector?$6616$CQIRF
     (case-lambda
       ((g$obj$6444$CQIRF) (clr-is-internal 'system.byte[] g$obj$6444$CQIRF))))
   (g$symbol?$6271$CQIRF
     g$symbol?$6617$CQIRF
     (case-lambda
       ((g$obj$6445$CQIRF)
        (clr-is-internal 'microsoft.scripting.symbolid g$obj$6445$CQIRF))))
   (g$boolean?$6272$CQIRF
     g$boolean?$6618$CQIRF
     (case-lambda
       ((g$obj$6446$CQIRF) (clr-is-internal 'system.boolean g$obj$6446$CQIRF))))
   (g$procedure?$6273$CQIRF
     g$procedure?$6619$CQIRF
     (case-lambda
       ((g$obj$6447$CQIRF)
        (clr-is-internal 'ironscheme.runtime.icallable g$obj$6447$CQIRF))))
   (g$fixnum?$6274$CQIRF
     g$fixnum?$6620$CQIRF
     (case-lambda
       ((g$obj$6448$CQIRF) (clr-is-internal 'system.int32 g$obj$6448$CQIRF))))
   (g$flonum?$6275$CQIRF
     g$flonum?$6621$CQIRF
     (case-lambda
       ((g$obj$6449$CQIRF) (clr-is-internal 'system.double g$obj$6449$CQIRF))))
   (g$fixnum-width$6276$CQIRF
     g$fixnum-width$6622$CQIRF
     (case-lambda (() '32)))
   (g$vector-fill!$6277$CQIRF
     g$vector-fill!$6623$CQIRF
     (case-lambda
       ((g$vec$6450$CQIRF g$val$6451$CQIRF)
        ((case-lambda
           ((g$len$6452$CQIRF)
            (letrec ((g$loop$6453$CQIRF
                       (case-lambda
                         ((g$i$6454$CQIRF)
                          (if (fx=? g$i$6454$CQIRF g$len$6452$CQIRF)
                            (if '#f '#f (void))
                            (begin
                              (vector-set!
                                g$vec$6450$CQIRF
                                g$i$6454$CQIRF
                                g$val$6451$CQIRF)
                              (g$loop$6453$CQIRF (fx+ g$i$6454$CQIRF '1))))))))
              (g$loop$6453$CQIRF '0))))
         (vector-length g$vec$6450$CQIRF)))))
   (g$reverse$6278$CQIRF
     g$reverse$6624$CQIRF
     (case-lambda
       ((g$lst$6455$CQIRF)
        (g$fold-left$5949$CQIRF
          (case-lambda
            ((g$x$6456$CQIRF g$y$6457$CQIRF)
             (cons g$y$6457$CQIRF g$x$6456$CQIRF)))
          '()
          g$lst$6455$CQIRF))))
   (g$caar$6279$CQIRF
     g$caar$6625$CQIRF
     (case-lambda ((g$x$6458$CQIRF) (car (car g$x$6458$CQIRF)))))
   (g$cadr$6280$CQIRF
     g$cadr$6626$CQIRF
     (case-lambda ((g$x$6459$CQIRF) (car (cdr g$x$6459$CQIRF)))))
   (g$cdar$6281$CQIRF
     g$cdar$6627$CQIRF
     (case-lambda ((g$x$6460$CQIRF) (cdr (car g$x$6460$CQIRF)))))
   (g$cddr$6282$CQIRF
     g$cddr$6628$CQIRF
     (case-lambda ((g$x$6461$CQIRF) (cdr (cdr g$x$6461$CQIRF)))))
   (g$caaar$6283$CQIRF
     g$caaar$6629$CQIRF
     (case-lambda
       ((g$x$6462$CQIRF) (g$caar$6279$CQIRF (car g$x$6462$CQIRF)))))
   (g$caadr$6284$CQIRF
     g$caadr$6630$CQIRF
     (case-lambda
       ((g$x$6463$CQIRF) (g$caar$6279$CQIRF (cdr g$x$6463$CQIRF)))))
   (g$cadar$6285$CQIRF
     g$cadar$6631$CQIRF
     (case-lambda
       ((g$x$6464$CQIRF) (g$cadr$6280$CQIRF (car g$x$6464$CQIRF)))))
   (g$caddr$6286$CQIRF
     g$caddr$6632$CQIRF
     (case-lambda
       ((g$x$6465$CQIRF) (g$cadr$6280$CQIRF (cdr g$x$6465$CQIRF)))))
   (g$cdaar$6287$CQIRF
     g$cdaar$6633$CQIRF
     (case-lambda
       ((g$x$6466$CQIRF) (g$cdar$6281$CQIRF (car g$x$6466$CQIRF)))))
   (g$cdadr$6288$CQIRF
     g$cdadr$6634$CQIRF
     (case-lambda
       ((g$x$6467$CQIRF) (g$cdar$6281$CQIRF (cdr g$x$6467$CQIRF)))))
   (g$cddar$6289$CQIRF
     g$cddar$6635$CQIRF
     (case-lambda
       ((g$x$6468$CQIRF) (g$cddr$6282$CQIRF (car g$x$6468$CQIRF)))))
   (g$cdddr$6290$CQIRF
     g$cdddr$6636$CQIRF
     (case-lambda
       ((g$x$6469$CQIRF) (g$cddr$6282$CQIRF (cdr g$x$6469$CQIRF)))))
   (g$caaaar$6291$CQIRF
     g$caaaar$6637$CQIRF
     (case-lambda
       ((g$x$6470$CQIRF) (g$caaar$6283$CQIRF (car g$x$6470$CQIRF)))))
   (g$caaadr$6292$CQIRF
     g$caaadr$6638$CQIRF
     (case-lambda
       ((g$x$6471$CQIRF) (g$caaar$6283$CQIRF (cdr g$x$6471$CQIRF)))))
   (g$caadar$6293$CQIRF
     g$caadar$6639$CQIRF
     (case-lambda
       ((g$x$6472$CQIRF) (g$caadr$6284$CQIRF (car g$x$6472$CQIRF)))))
   (g$caaddr$6294$CQIRF
     g$caaddr$6640$CQIRF
     (case-lambda
       ((g$x$6473$CQIRF) (g$caadr$6284$CQIRF (cdr g$x$6473$CQIRF)))))
   (g$cadaar$6295$CQIRF
     g$cadaar$6641$CQIRF
     (case-lambda
       ((g$x$6474$CQIRF) (g$cadar$6285$CQIRF (car g$x$6474$CQIRF)))))
   (g$cadadr$6296$CQIRF
     g$cadadr$6642$CQIRF
     (case-lambda
       ((g$x$6475$CQIRF) (g$cadar$6285$CQIRF (cdr g$x$6475$CQIRF)))))
   (g$caddar$6297$CQIRF
     g$caddar$6643$CQIRF
     (case-lambda
       ((g$x$6476$CQIRF) (g$caddr$6286$CQIRF (car g$x$6476$CQIRF)))))
   (g$cadddr$6298$CQIRF
     g$cadddr$6644$CQIRF
     (case-lambda
       ((g$x$6477$CQIRF) (g$caddr$6286$CQIRF (cdr g$x$6477$CQIRF)))))
   (g$cdaaar$6299$CQIRF
     g$cdaaar$6645$CQIRF
     (case-lambda
       ((g$x$6478$CQIRF) (g$cdaar$6287$CQIRF (car g$x$6478$CQIRF)))))
   (g$cdaadr$6300$CQIRF
     g$cdaadr$6646$CQIRF
     (case-lambda
       ((g$x$6479$CQIRF) (g$cdaar$6287$CQIRF (cdr g$x$6479$CQIRF)))))
   (g$cdadar$6301$CQIRF
     g$cdadar$6647$CQIRF
     (case-lambda
       ((g$x$6480$CQIRF) (g$cdadr$6288$CQIRF (car g$x$6480$CQIRF)))))
   (g$cdaddr$6302$CQIRF
     g$cdaddr$6648$CQIRF
     (case-lambda
       ((g$x$6481$CQIRF) (g$cdadr$6288$CQIRF (cdr g$x$6481$CQIRF)))))
   (g$cddaar$6303$CQIRF
     g$cddaar$6649$CQIRF
     (case-lambda
       ((g$x$6482$CQIRF) (g$cddar$6289$CQIRF (car g$x$6482$CQIRF)))))
   (g$cddadr$6304$CQIRF
     g$cddadr$6650$CQIRF
     (case-lambda
       ((g$x$6483$CQIRF) (g$cddar$6289$CQIRF (cdr g$x$6483$CQIRF)))))
   (g$cdddar$6305$CQIRF
     g$cdddar$6651$CQIRF
     (case-lambda
       ((g$x$6484$CQIRF) (g$cdddr$6290$CQIRF (car g$x$6484$CQIRF)))))
   (g$cddddr$6306$CQIRF
     g$cddddr$6652$CQIRF
     (case-lambda
       ((g$x$6485$CQIRF) (g$cdddr$6290$CQIRF (cdr g$x$6485$CQIRF)))))
   (g$positive?$6307$CQIRF
     g$positive?$6653$CQIRF
     (case-lambda
       ((g$r$6486$CQIRF)
        (begin
          (if (not (real-valued? g$r$6486$CQIRF))
            (assertion-violation 'positive? '"not a real" g$r$6486$CQIRF)
            (void))
          (< '0 g$r$6486$CQIRF)))))
   (g$negative?$6308$CQIRF
     g$negative?$6654$CQIRF
     (case-lambda
       ((g$r$6487$CQIRF)
        (begin
          (if (not (real-valued? g$r$6487$CQIRF))
            (assertion-violation 'negative? '"not a real" g$r$6487$CQIRF)
            (void))
          (> '0 g$r$6487$CQIRF)))))
   (g$zero?$6309$CQIRF
     g$zero?$6655$CQIRF
     (case-lambda
       ((g$z$6488$CQIRF)
        (begin
          (if (not (number? g$z$6488$CQIRF))
            (assertion-violation 'zero? '"not a number" g$z$6488$CQIRF)
            (void))
          (= '0 g$z$6488$CQIRF)))))
   (g$even?$6310$CQIRF
     g$even?$6656$CQIRF
     (case-lambda
       ((g$n$6489$CQIRF)
        (begin
          (if (not (integer-valued? g$n$6489$CQIRF))
            (assertion-violation 'even? '"not a integer" g$n$6489$CQIRF)
            (void))
          (= '0 (g$mod$6264$CQIRF g$n$6489$CQIRF '2))))))
   (g$odd?$6311$CQIRF
     g$odd?$6657$CQIRF
     (case-lambda
       ((g$n$6490$CQIRF)
        (begin
          (if (not (integer-valued? g$n$6490$CQIRF))
            (assertion-violation 'odd? '"not a integer" g$n$6490$CQIRF)
            (void))
          (= '1 (g$mod$6264$CQIRF g$n$6490$CQIRF '2))))))
   (g$max$6312$CQIRF
     g$max$6658$CQIRF
     (case-lambda
       ((g$a$6491$CQIRF . g$rest$6492$CQIRF)
        (begin
          (if (not (real-valued? g$a$6491$CQIRF))
            (assertion-violation 'max '"not a real" g$a$6491$CQIRF)
            (void))
          (g$fold-left$5949$CQIRF
            (case-lambda
              ((g$a$6493$CQIRF g$b$6494$CQIRF)
               ((case-lambda
                  ((g$r$6495$CQIRF)
                   (if ((case-lambda
                          ((g$t$6496$CQIRF)
                           (if g$t$6496$CQIRF
                             g$t$6496$CQIRF
                             (begin '#f (inexact? g$b$6494$CQIRF)))))
                        (inexact? g$a$6493$CQIRF))
                     (inexact g$r$6495$CQIRF)
                     g$r$6495$CQIRF)))
                (if (< g$a$6493$CQIRF g$b$6494$CQIRF)
                  g$b$6494$CQIRF
                  g$a$6493$CQIRF))))
            g$a$6491$CQIRF
            g$rest$6492$CQIRF)))))
   (g$min$6313$CQIRF
     g$min$6659$CQIRF
     (case-lambda
       ((g$a$6497$CQIRF . g$rest$6498$CQIRF)
        (begin
          (if (not (real-valued? g$a$6497$CQIRF))
            (assertion-violation 'min '"not a real" g$a$6497$CQIRF)
            (void))
          (g$fold-left$5949$CQIRF
            (case-lambda
              ((g$a$6499$CQIRF g$b$6500$CQIRF)
               ((case-lambda
                  ((g$r$6501$CQIRF)
                   (if ((case-lambda
                          ((g$t$6502$CQIRF)
                           (if g$t$6502$CQIRF
                             g$t$6502$CQIRF
                             (begin '#f (inexact? g$b$6500$CQIRF)))))
                        (inexact? g$a$6499$CQIRF))
                     (inexact g$r$6501$CQIRF)
                     g$r$6501$CQIRF)))
                (if (> g$a$6499$CQIRF g$b$6500$CQIRF)
                  g$b$6500$CQIRF
                  g$a$6499$CQIRF))))
            g$a$6497$CQIRF
            g$rest$6498$CQIRF)))))
   (g$gcd$6314$CQIRF
     g$gcd$6660$CQIRF
     (case-lambda
       (g$nums$6503$CQIRF
        ((case-lambda
           ((g$t$6504$CQIRF)
            (if (eqv? g$t$6504$CQIRF '0)
              '0
              (if (eqv? g$t$6504$CQIRF '1)
                ((case-lambda
                   ((g$n$6505$CQIRF)
                    (begin
                      (if (not (integer-valued? g$n$6505$CQIRF))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$6505$CQIRF)
                        (void))
                      (abs g$n$6505$CQIRF))))
                 (car g$nums$6503$CQIRF))
                (if (eqv? g$t$6504$CQIRF '2)
                  ((case-lambda
                     ((g$a$6506$CQIRF g$b$6507$CQIRF)
                      (begin
                        (if (not (integer-valued? g$a$6506$CQIRF))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$6506$CQIRF)
                          (void))
                        (if (not (integer-valued? g$b$6507$CQIRF))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$6507$CQIRF)
                          (void))
                        (if (g$zero?$6309$CQIRF g$b$6507$CQIRF)
                          (abs g$a$6506$CQIRF)
                          (abs (g$gcd$6314$CQIRF
                                 g$b$6507$CQIRF
                                 (g$mod$6264$CQIRF
                                   g$a$6506$CQIRF
                                   g$b$6507$CQIRF)))))))
                   (car g$nums$6503$CQIRF)
                   (g$cadr$6280$CQIRF g$nums$6503$CQIRF))
                  (g$fold-left$5949$CQIRF
                    g$gcd$6314$CQIRF
                    (abs (car g$nums$6503$CQIRF))
                    (cdr g$nums$6503$CQIRF)))))))
         (length g$nums$6503$CQIRF)))))
   (g$lcm$6315$CQIRF
     g$lcm$6661$CQIRF
     (case-lambda
       (g$nums$6508$CQIRF
        ((case-lambda
           ((g$t$6509$CQIRF)
            (if (eqv? g$t$6509$CQIRF '0)
              '1
              (if (eqv? g$t$6509$CQIRF '1)
                ((case-lambda
                   ((g$n$6510$CQIRF)
                    (begin
                      (if (not (integer-valued? g$n$6510$CQIRF))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$6510$CQIRF)
                        (void))
                      (abs g$n$6510$CQIRF))))
                 (car g$nums$6508$CQIRF))
                (if (eqv? g$t$6509$CQIRF '2)
                  ((case-lambda
                     ((g$a$6511$CQIRF g$b$6512$CQIRF)
                      (begin
                        (if (not (integer-valued? g$a$6511$CQIRF))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$6511$CQIRF)
                          (void))
                        (if (not (integer-valued? g$b$6512$CQIRF))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$6512$CQIRF)
                          (void))
                        (if ((case-lambda
                               ((g$t$6513$CQIRF)
                                (if g$t$6513$CQIRF
                                  g$t$6513$CQIRF
                                  (begin
                                    '#f
                                    (g$zero?$6309$CQIRF g$b$6512$CQIRF)))))
                             (g$zero?$6309$CQIRF g$a$6511$CQIRF))
                          '0
                          (abs (* (/ g$a$6511$CQIRF
                                     (g$gcd$6314$CQIRF
                                       g$a$6511$CQIRF
                                       g$b$6512$CQIRF))
                                  g$b$6512$CQIRF))))))
                   (car g$nums$6508$CQIRF)
                   (g$cadr$6280$CQIRF g$nums$6508$CQIRF))
                  (g$fold-left$5949$CQIRF
                    g$lcm$6315$CQIRF
                    (abs (car g$nums$6508$CQIRF))
                    (cdr g$nums$6508$CQIRF)))))))
         (length g$nums$6508$CQIRF)))))
   (g$string=?$6353$CQIRF
     g$string=?$6662$CQIRF
     (case-lambda
       ((g$a$6514$CQIRF g$b$6515$CQIRF . g$rest$6516$CQIRF)
        (begin
          (if (not (string? g$a$6514$CQIRF))
            (assertion-violation 'string=? '"not a string" g$a$6514$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$6517$CQIRF)
               (begin
                 (if (not (string? g$x$6517$CQIRF))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$6517$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$6518$CQIRF)
                     (begin
                       (set! g$a$6514$CQIRF g$x$6517$CQIRF)
                       g$r$6518$CQIRF)))
                  (fx=? (string-compare g$a$6514$CQIRF g$x$6517$CQIRF) '0)))))
            (cons g$b$6515$CQIRF g$rest$6516$CQIRF))))))
   (g$string<?$6354$CQIRF
     g$string<?$6663$CQIRF
     (case-lambda
       ((g$a$6519$CQIRF g$b$6520$CQIRF . g$rest$6521$CQIRF)
        (begin
          (if (not (string? g$a$6519$CQIRF))
            (assertion-violation 'string<? '"not a string" g$a$6519$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$6522$CQIRF)
               (begin
                 (if (not (string? g$x$6522$CQIRF))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$6522$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$6523$CQIRF)
                     (begin
                       (set! g$a$6519$CQIRF g$x$6522$CQIRF)
                       g$r$6523$CQIRF)))
                  (fx<? (string-compare g$a$6519$CQIRF g$x$6522$CQIRF) '0)))))
            (cons g$b$6520$CQIRF g$rest$6521$CQIRF))))))
   (g$string>?$6355$CQIRF
     g$string>?$6664$CQIRF
     (case-lambda
       ((g$a$6524$CQIRF g$b$6525$CQIRF . g$rest$6526$CQIRF)
        (begin
          (if (not (string? g$a$6524$CQIRF))
            (assertion-violation 'string>? '"not a string" g$a$6524$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$6527$CQIRF)
               (begin
                 (if (not (string? g$x$6527$CQIRF))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$6527$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$6528$CQIRF)
                     (begin
                       (set! g$a$6524$CQIRF g$x$6527$CQIRF)
                       g$r$6528$CQIRF)))
                  (fx>? (string-compare g$a$6524$CQIRF g$x$6527$CQIRF) '0)))))
            (cons g$b$6525$CQIRF g$rest$6526$CQIRF))))))
   (g$string<=?$6356$CQIRF
     g$string<=?$6665$CQIRF
     (case-lambda
       ((g$a$6529$CQIRF g$b$6530$CQIRF . g$rest$6531$CQIRF)
        (begin
          (if (not (string? g$a$6529$CQIRF))
            (assertion-violation 'string<=? '"not a string" g$a$6529$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$6532$CQIRF)
               (begin
                 (if (not (string? g$x$6532$CQIRF))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$6532$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$6533$CQIRF)
                     (begin
                       (set! g$a$6529$CQIRF g$x$6532$CQIRF)
                       g$r$6533$CQIRF)))
                  (fx<=? (string-compare g$a$6529$CQIRF g$x$6532$CQIRF) '0)))))
            (cons g$b$6530$CQIRF g$rest$6531$CQIRF))))))
   (g$string>=?$6357$CQIRF
     g$string>=?$6666$CQIRF
     (case-lambda
       ((g$a$6534$CQIRF g$b$6535$CQIRF . g$rest$6536$CQIRF)
        (begin
          (if (not (string? g$a$6534$CQIRF))
            (assertion-violation 'string>=? '"not a string" g$a$6534$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$6537$CQIRF)
               (begin
                 (if (not (string? g$x$6537$CQIRF))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$6537$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$6538$CQIRF)
                     (begin
                       (set! g$a$6534$CQIRF g$x$6537$CQIRF)
                       g$r$6538$CQIRF)))
                  (fx>=? (string-compare g$a$6534$CQIRF g$x$6537$CQIRF) '0)))))
            (cons g$b$6535$CQIRF g$rest$6536$CQIRF))))))
   (g$symbol=?$6358$CQIRF
     g$symbol=?$6667$CQIRF
     (case-lambda
       ((g$a$6539$CQIRF g$b$6540$CQIRF . g$rest$6541$CQIRF)
        (begin
          (if (not (g$symbol?$6271$CQIRF g$a$6539$CQIRF))
            (assertion-violation 'symbol=? '"not a symbol" g$a$6539$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$6542$CQIRF)
               (begin
                 (if (not (g$symbol?$6271$CQIRF g$x$6542$CQIRF))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$6542$CQIRF)
                   (void))
                 (eq? g$a$6539$CQIRF g$x$6542$CQIRF))))
            (cons g$b$6540$CQIRF g$rest$6541$CQIRF))))))
   (g$boolean=?$6359$CQIRF
     g$boolean=?$6668$CQIRF
     (case-lambda
       ((g$a$6543$CQIRF g$b$6544$CQIRF . g$rest$6545$CQIRF)
        (begin
          (if (not (g$boolean?$6272$CQIRF g$a$6543$CQIRF))
            (assertion-violation 'boolean=? '"not a boolean" g$a$6543$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$6546$CQIRF)
               (begin
                 (if (not (g$boolean?$6272$CQIRF g$x$6546$CQIRF))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$6546$CQIRF)
                   (void))
                 (eq? g$a$6543$CQIRF g$x$6546$CQIRF))))
            (cons g$b$6544$CQIRF g$rest$6545$CQIRF))))))
   (g$char=?$6397$CQIRF
     g$char=?$6669$CQIRF
     (case-lambda
       ((g$a$6547$CQIRF g$b$6548$CQIRF . g$rest$6549$CQIRF)
        (begin
          (if (not (g$char?$6268$CQIRF g$a$6547$CQIRF))
            (assertion-violation 'char=? '"not a char" g$a$6547$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$6550$CQIRF)
               (begin
                 (if (not (g$char?$6268$CQIRF g$x$6550$CQIRF))
                   (assertion-violation 'char=? '"not a char" g$x$6550$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$6551$CQIRF)
                     (begin
                       (set! g$a$6547$CQIRF g$x$6550$CQIRF)
                       g$r$6551$CQIRF)))
                  (fx=?
                    (char->integer g$a$6547$CQIRF)
                    (char->integer g$x$6550$CQIRF))))))
            (cons g$b$6548$CQIRF g$rest$6549$CQIRF))))))
   (g$char<?$6398$CQIRF
     g$char<?$6670$CQIRF
     (case-lambda
       ((g$a$6552$CQIRF g$b$6553$CQIRF . g$rest$6554$CQIRF)
        (begin
          (if (not (g$char?$6268$CQIRF g$a$6552$CQIRF))
            (assertion-violation 'char<? '"not a char" g$a$6552$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$6555$CQIRF)
               (begin
                 (if (not (g$char?$6268$CQIRF g$x$6555$CQIRF))
                   (assertion-violation 'char<? '"not a char" g$x$6555$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$6556$CQIRF)
                     (begin
                       (set! g$a$6552$CQIRF g$x$6555$CQIRF)
                       g$r$6556$CQIRF)))
                  (fx<?
                    (char->integer g$a$6552$CQIRF)
                    (char->integer g$x$6555$CQIRF))))))
            (cons g$b$6553$CQIRF g$rest$6554$CQIRF))))))
   (g$char>?$6399$CQIRF
     g$char>?$6671$CQIRF
     (case-lambda
       ((g$a$6557$CQIRF g$b$6558$CQIRF . g$rest$6559$CQIRF)
        (begin
          (if (not (g$char?$6268$CQIRF g$a$6557$CQIRF))
            (assertion-violation 'char>? '"not a char" g$a$6557$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$6560$CQIRF)
               (begin
                 (if (not (g$char?$6268$CQIRF g$x$6560$CQIRF))
                   (assertion-violation 'char>? '"not a char" g$x$6560$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$6561$CQIRF)
                     (begin
                       (set! g$a$6557$CQIRF g$x$6560$CQIRF)
                       g$r$6561$CQIRF)))
                  (fx>?
                    (char->integer g$a$6557$CQIRF)
                    (char->integer g$x$6560$CQIRF))))))
            (cons g$b$6558$CQIRF g$rest$6559$CQIRF))))))
   (g$char<=?$6400$CQIRF
     g$char<=?$6672$CQIRF
     (case-lambda
       ((g$a$6562$CQIRF g$b$6563$CQIRF . g$rest$6564$CQIRF)
        (begin
          (if (not (g$char?$6268$CQIRF g$a$6562$CQIRF))
            (assertion-violation 'char<=? '"not a char" g$a$6562$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$6565$CQIRF)
               (begin
                 (if (not (g$char?$6268$CQIRF g$x$6565$CQIRF))
                   (assertion-violation 'char<=? '"not a char" g$x$6565$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$6566$CQIRF)
                     (begin
                       (set! g$a$6562$CQIRF g$x$6565$CQIRF)
                       g$r$6566$CQIRF)))
                  (fx<=?
                    (char->integer g$a$6562$CQIRF)
                    (char->integer g$x$6565$CQIRF))))))
            (cons g$b$6563$CQIRF g$rest$6564$CQIRF))))))
   (g$char>=?$6401$CQIRF
     g$char>=?$6673$CQIRF
     (case-lambda
       ((g$a$6567$CQIRF g$b$6568$CQIRF . g$rest$6569$CQIRF)
        (begin
          (if (not (g$char?$6268$CQIRF g$a$6567$CQIRF))
            (assertion-violation 'char>=? '"not a char" g$a$6567$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$6570$CQIRF)
               (begin
                 (if (not (g$char?$6268$CQIRF g$x$6570$CQIRF))
                   (assertion-violation 'char>=? '"not a char" g$x$6570$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$6571$CQIRF)
                     (begin
                       (set! g$a$6567$CQIRF g$x$6570$CQIRF)
                       g$r$6571$CQIRF)))
                  (fx>=?
                    (char->integer g$a$6567$CQIRF)
                    (char->integer g$x$6570$CQIRF))))))
            (cons g$b$6568$CQIRF g$rest$6569$CQIRF))))))
   (g$rationalize$6402$CQIRF
     g$rationalize$6674$CQIRF
     (case-lambda
       ((g$x$6572$CQIRF g$e$6573$CQIRF)
        (if (if (infinite? g$x$6572$CQIRF)
              (begin '#f (infinite? g$e$6573$CQIRF))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$6574$CQIRF)
              (if (if (exact? g$x$6572$CQIRF)
                    (begin '#f (exact? g$e$6573$CQIRF))
                    '#f)
                g$r$6574$CQIRF
                (inexact g$r$6574$CQIRF))))
           (apply
             /
             (g$find-ratio$6403$CQIRF g$x$6572$CQIRF g$e$6573$CQIRF)))))))
   (g$find-ratio$6403$CQIRF
     g$find-ratio$6675$CQIRF
     (case-lambda
       ((g$x$6575$CQIRF g$e$6576$CQIRF)
        (g$find-ratio-between$6404$CQIRF
          (- g$x$6575$CQIRF g$e$6576$CQIRF)
          (+ g$x$6575$CQIRF g$e$6576$CQIRF)))))
   (g$find-ratio-between$6404$CQIRF
     g$find-ratio-between$6676$CQIRF
     (case-lambda
       ((g$x$6577$CQIRF g$y$6578$CQIRF)
        (letrec* ((g$sr$6579$CQIRF
                    (case-lambda
                      ((g$x$6581$CQIRF g$y$6582$CQIRF)
                       ((case-lambda
                          ((g$fx$6583$CQIRF g$fy$6584$CQIRF)
                           (if (>= g$fx$6583$CQIRF g$x$6581$CQIRF)
                             (list g$fx$6583$CQIRF '1)
                             (if (= g$fx$6583$CQIRF g$fy$6584$CQIRF)
                               ((case-lambda
                                  ((g$rat$6585$CQIRF)
                                   (list
                                     (+ (g$cadr$6280$CQIRF g$rat$6585$CQIRF)
                                        (* g$fx$6583$CQIRF
                                           (car g$rat$6585$CQIRF)))
                                     (car g$rat$6585$CQIRF))))
                                (g$sr$6579$CQIRF
                                  (/ (- g$y$6582$CQIRF g$fy$6584$CQIRF))
                                  (/ (- g$x$6581$CQIRF g$fx$6583$CQIRF))))
                               (list (+ '1 g$fx$6583$CQIRF) '1)))))
                        (exact (floor g$x$6581$CQIRF))
                        (exact (floor g$y$6582$CQIRF)))))))
          (if (< g$y$6578$CQIRF g$x$6577$CQIRF)
            (g$find-ratio-between$6404$CQIRF g$y$6578$CQIRF g$x$6577$CQIRF)
            (if (>= g$x$6577$CQIRF g$y$6578$CQIRF)
              (list g$x$6577$CQIRF '1)
              (if (g$positive?$6307$CQIRF g$x$6577$CQIRF)
                (g$sr$6579$CQIRF g$x$6577$CQIRF g$y$6578$CQIRF)
                (if (g$negative?$6308$CQIRF g$y$6578$CQIRF)
                  ((case-lambda
                     ((g$rat$6580$CQIRF)
                      (list
                        (- (car g$rat$6580$CQIRF))
                        (g$cadr$6280$CQIRF g$rat$6580$CQIRF))))
                   (g$sr$6579$CQIRF (- g$y$6578$CQIRF) (- g$x$6577$CQIRF)))
                  '(0 1)))))))))
   (g$vector-map$6405$CQIRF
     g$vector-map$6677$CQIRF
     (case-lambda
       ((g$p$6586$CQIRF g$vec1$6587$CQIRF . g$vecs$6588$CQIRF)
        ((case-lambda
           ((g$len$6589$CQIRF)
            ((case-lambda
               ((g$res$6590$CQIRF)
                (letrec ((g$loop$6591$CQIRF
                           (case-lambda
                             ((g$i$6592$CQIRF)
                              (if (fx=? g$i$6592$CQIRF g$len$6589$CQIRF)
                                (begin (if '#f '#f (void)) g$res$6590$CQIRF)
                                (begin
                                  (vector-set!
                                    g$res$6590$CQIRF
                                    g$i$6592$CQIRF
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (apply
                                           values
                                           (g$map$5946$CQIRF
                                             (case-lambda
                                               ((g$x$6593$CQIRF)
                                                (vector-ref
                                                  g$x$6593$CQIRF
                                                  g$i$6592$CQIRF)))
                                             (cons
                                               g$vec1$6587$CQIRF
                                               g$vecs$6588$CQIRF)))))
                                      g$p$6586$CQIRF))
                                  (g$loop$6591$CQIRF
                                    (fx+ g$i$6592$CQIRF '1))))))))
                  (g$loop$6591$CQIRF '0))))
             (make-vector g$len$6589$CQIRF))))
         (vector-length g$vec1$6587$CQIRF)))))
   (g$vector-for-each$6406$CQIRF
     g$vector-for-each$6678$CQIRF
     (case-lambda
       ((g$p$6594$CQIRF g$vec1$6595$CQIRF . g$vecs$6596$CQIRF)
        ((case-lambda
           ((g$len$6597$CQIRF)
            (letrec ((g$loop$6598$CQIRF
                       (case-lambda
                         ((g$i$6599$CQIRF)
                          (if (fx=? g$i$6599$CQIRF g$len$6597$CQIRF)
                            (if '#f '#f (void))
                            (begin
                              (call-with-values
                                (case-lambda
                                  (()
                                   (apply
                                     values
                                     (g$map$5946$CQIRF
                                       (case-lambda
                                         ((g$x$6600$CQIRF)
                                          (vector-ref
                                            g$x$6600$CQIRF
                                            g$i$6599$CQIRF)))
                                       (cons
                                         g$vec1$6595$CQIRF
                                         g$vecs$6596$CQIRF)))))
                                g$p$6594$CQIRF)
                              (g$loop$6598$CQIRF (fx+ g$i$6599$CQIRF '1))))))))
              (g$loop$6598$CQIRF '0))))
         (vector-length g$vec1$6595$CQIRF)))))
   (g$string-for-each$6407$CQIRF
     g$string-for-each$6679$CQIRF
     (case-lambda
       ((g$p$6601$CQIRF g$str1$6602$CQIRF . g$strs$6603$CQIRF)
        ((case-lambda
           ((g$len$6604$CQIRF)
            (letrec ((g$loop$6605$CQIRF
                       (case-lambda
                         ((g$i$6606$CQIRF)
                          (if (fx=? g$i$6606$CQIRF g$len$6604$CQIRF)
                            (if '#f '#f (void))
                            (begin
                              (call-with-values
                                (case-lambda
                                  (()
                                   (apply
                                     values
                                     (g$map$5946$CQIRF
                                       (case-lambda
                                         ((g$x$6607$CQIRF)
                                          (string-ref
                                            g$x$6607$CQIRF
                                            g$i$6606$CQIRF)))
                                       (cons
                                         g$str1$6602$CQIRF
                                         g$strs$6603$CQIRF)))))
                                g$p$6601$CQIRF)
                              (g$loop$6605$CQIRF (fx+ g$i$6606$CQIRF '1))))))))
              (g$loop$6605$CQIRF '0))))
         (string-length g$str1$6602$CQIRF))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$6681$CQIRF g$using$6714$CQIRF (clr-using-internal 'system))
   (g$using$6683$CQIRF
     g$using$6715$CQIRF
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$6684$CQIRF
     g$make-eq-hashtable$6716$CQIRF
     (case-lambda
       (() (g$make-eq-hashtable$6684$CQIRF '32))
       ((g$k$6693$CQIRF)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$6693$CQIRF)))))
   (g$make-eqv-hashtable$6685$CQIRF
     g$make-eqv-hashtable$6717$CQIRF
     (case-lambda
       (() (g$make-eqv-hashtable$6685$CQIRF '32))
       ((g$k$6694$CQIRF) (make-hashtable eqv-hash eqv? g$k$6694$CQIRF))))
   (g$hashtable-size$6686$CQIRF
     g$hashtable-size$6718$CQIRF
     (case-lambda
       ((g$ht$6695$CQIRF)
        (clr-call-internal 'hashtable 'get_count g$ht$6695$CQIRF))))
   (g$hashtable-ref$6687$CQIRF
     g$hashtable-ref$6719$CQIRF
     (case-lambda
       ((g$ht$6696$CQIRF g$key$6697$CQIRF g$default$6698$CQIRF)
        (letrec* ((g$r$6699$CQIRF
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$6696$CQIRF
                      g$key$6697$CQIRF)))
          (if (not (null? g$r$6699$CQIRF))
            g$r$6699$CQIRF
            g$default$6698$CQIRF)))))
   (g$hashtable-set!$6688$CQIRF
     g$hashtable-set!$6720$CQIRF
     (case-lambda
       ((g$ht$6700$CQIRF g$key$6701$CQIRF g$obj$6702$CQIRF)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$6700$CQIRF
          g$key$6701$CQIRF
          g$obj$6702$CQIRF))))
   (g$hashtable-delete!$6689$CQIRF
     g$hashtable-delete!$6721$CQIRF
     (case-lambda
       ((g$ht$6703$CQIRF g$key$6704$CQIRF)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$6703$CQIRF
          g$key$6704$CQIRF))))
   (g$hashtable-contains?$6690$CQIRF
     g$hashtable-contains?$6722$CQIRF
     (case-lambda
       ((g$ht$6705$CQIRF g$key$6706$CQIRF)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$6705$CQIRF
          g$key$6706$CQIRF))))
   (g$hashtable-update!$6691$CQIRF
     g$hashtable-update!$6723$CQIRF
     (case-lambda
       ((g$ht$6707$CQIRF
          g$key$6708$CQIRF
          g$proc$6709$CQIRF
          g$default$6710$CQIRF)
        (g$hashtable-set!$6688$CQIRF
          g$ht$6707$CQIRF
          g$key$6708$CQIRF
          (g$proc$6709$CQIRF
            (g$hashtable-ref$6687$CQIRF
              g$ht$6707$CQIRF
              g$key$6708$CQIRF
              g$default$6710$CQIRF))))))
   (g$hashtable-clear!$6692$CQIRF
     g$hashtable-clear!$6724$CQIRF
     (case-lambda
       ((g$ht$6711$CQIRF) (g$hashtable-clear!$6692$CQIRF g$ht$6711$CQIRF '32))
       ((g$ht$6712$CQIRF g$k$6713$CQIRF)
        (clr-call-internal 'hashtable 'clear g$ht$6712$CQIRF)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$6726$CQIRF g$using$6733$CQIRF (clr-using-internal 'system.io))
   (g$file-exists?$6727$CQIRF
     g$file-exists?$6734$CQIRF
     (case-lambda
       ((g$fn$6730$CQIRF)
        (clr-call-internal 'file 'exists '() g$fn$6730$CQIRF))))
   (g$delete-file$6728$CQIRF
     g$delete-file$6735$CQIRF
     (case-lambda
       ((g$fn$6731$CQIRF)
        (clr-call-internal 'file 'delete '() g$fn$6731$CQIRF))))
   (g$get-directory-name$6729$CQIRF
     g$get-directory-name$6736$CQIRF
     (case-lambda
       ((g$path$6732$CQIRF)
        (clr-call-internal 'path 'getdirectoryname '() g$path$6732$CQIRF)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$6737$CQIRF
     g$native-endianness$6848$CQIRF
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$6738$CQIRF
     g$bytevector-u16-ref$6849$CQIRF
     (case-lambda
       ((g$bytevector$6766$CQIRF g$k$6767$CQIRF g$endianness$6768$CQIRF)
        (bytevector-uint-ref
          g$bytevector$6766$CQIRF
          g$k$6767$CQIRF
          g$endianness$6768$CQIRF
          '2))))
   (g$bytevector-s16-ref$6739$CQIRF
     g$bytevector-s16-ref$6850$CQIRF
     (case-lambda
       ((g$bytevector$6769$CQIRF g$k$6770$CQIRF g$endianness$6771$CQIRF)
        (bytevector-sint-ref
          g$bytevector$6769$CQIRF
          g$k$6770$CQIRF
          g$endianness$6771$CQIRF
          '2))))
   (g$bytevector-u16-native-ref$6740$CQIRF
     g$bytevector-u16-native-ref$6851$CQIRF
     (case-lambda
       ((g$bytevector$6772$CQIRF g$k$6773$CQIRF)
        (bytevector-uint-ref
          g$bytevector$6772$CQIRF
          g$k$6773$CQIRF
          (g$native-endianness$6737$CQIRF)
          '2))))
   (g$bytevector-s16-native-ref$6741$CQIRF
     g$bytevector-s16-native-ref$6852$CQIRF
     (case-lambda
       ((g$bytevector$6774$CQIRF g$k$6775$CQIRF)
        (bytevector-sint-ref
          g$bytevector$6774$CQIRF
          g$k$6775$CQIRF
          (g$native-endianness$6737$CQIRF)
          '2))))
   (g$bytevector-u16-set!$6742$CQIRF
     g$bytevector-u16-set!$6853$CQIRF
     (case-lambda
       ((g$bytevector$6776$CQIRF
          g$k$6777$CQIRF
          g$n$6778$CQIRF
          g$endianness$6779$CQIRF)
        (bytevector-uint-set!
          g$bytevector$6776$CQIRF
          g$k$6777$CQIRF
          g$n$6778$CQIRF
          g$endianness$6779$CQIRF
          '2))))
   (g$bytevector-s16-set!$6743$CQIRF
     g$bytevector-s16-set!$6854$CQIRF
     (case-lambda
       ((g$bytevector$6780$CQIRF
          g$k$6781$CQIRF
          g$n$6782$CQIRF
          g$endianness$6783$CQIRF)
        (bytevector-sint-set!
          g$bytevector$6780$CQIRF
          g$k$6781$CQIRF
          g$n$6782$CQIRF
          g$endianness$6783$CQIRF
          '2))))
   (g$bytevector-u16-native-set!$6744$CQIRF
     g$bytevector-u16-native-set!$6855$CQIRF
     (case-lambda
       ((g$bytevector$6784$CQIRF g$k$6785$CQIRF g$n$6786$CQIRF)
        (bytevector-uint-set!
          g$bytevector$6784$CQIRF
          g$k$6785$CQIRF
          g$n$6786$CQIRF
          (g$native-endianness$6737$CQIRF)
          '2))))
   (g$bytevector-s16-native-set!$6745$CQIRF
     g$bytevector-s16-native-set!$6856$CQIRF
     (case-lambda
       ((g$bytevector$6787$CQIRF g$k$6788$CQIRF g$n$6789$CQIRF)
        (bytevector-sint-set!
          g$bytevector$6787$CQIRF
          g$k$6788$CQIRF
          g$n$6789$CQIRF
          (g$native-endianness$6737$CQIRF)
          '2))))
   (g$bytevector-u32-ref$6746$CQIRF
     g$bytevector-u32-ref$6857$CQIRF
     (case-lambda
       ((g$bytevector$6790$CQIRF g$k$6791$CQIRF g$endianness$6792$CQIRF)
        (bytevector-uint-ref
          g$bytevector$6790$CQIRF
          g$k$6791$CQIRF
          g$endianness$6792$CQIRF
          '4))))
   (g$bytevector-s32-ref$6747$CQIRF
     g$bytevector-s32-ref$6858$CQIRF
     (case-lambda
       ((g$bytevector$6793$CQIRF g$k$6794$CQIRF g$endianness$6795$CQIRF)
        (bytevector-sint-ref
          g$bytevector$6793$CQIRF
          g$k$6794$CQIRF
          g$endianness$6795$CQIRF
          '4))))
   (g$bytevector-u32-native-ref$6748$CQIRF
     g$bytevector-u32-native-ref$6859$CQIRF
     (case-lambda
       ((g$bytevector$6796$CQIRF g$k$6797$CQIRF)
        (bytevector-uint-ref
          g$bytevector$6796$CQIRF
          g$k$6797$CQIRF
          (g$native-endianness$6737$CQIRF)
          '4))))
   (g$bytevector-s32-native-ref$6749$CQIRF
     g$bytevector-s32-native-ref$6860$CQIRF
     (case-lambda
       ((g$bytevector$6798$CQIRF g$k$6799$CQIRF)
        (bytevector-sint-ref
          g$bytevector$6798$CQIRF
          g$k$6799$CQIRF
          (g$native-endianness$6737$CQIRF)
          '4))))
   (g$bytevector-u32-set!$6750$CQIRF
     g$bytevector-u32-set!$6861$CQIRF
     (case-lambda
       ((g$bytevector$6800$CQIRF
          g$k$6801$CQIRF
          g$n$6802$CQIRF
          g$endianness$6803$CQIRF)
        (bytevector-uint-set!
          g$bytevector$6800$CQIRF
          g$k$6801$CQIRF
          g$n$6802$CQIRF
          g$endianness$6803$CQIRF
          '4))))
   (g$bytevector-s32-set!$6751$CQIRF
     g$bytevector-s32-set!$6862$CQIRF
     (case-lambda
       ((g$bytevector$6804$CQIRF
          g$k$6805$CQIRF
          g$n$6806$CQIRF
          g$endianness$6807$CQIRF)
        (bytevector-sint-set!
          g$bytevector$6804$CQIRF
          g$k$6805$CQIRF
          g$n$6806$CQIRF
          g$endianness$6807$CQIRF
          '4))))
   (g$bytevector-u32-native-set!$6752$CQIRF
     g$bytevector-u32-native-set!$6863$CQIRF
     (case-lambda
       ((g$bytevector$6808$CQIRF g$k$6809$CQIRF g$n$6810$CQIRF)
        (bytevector-uint-set!
          g$bytevector$6808$CQIRF
          g$k$6809$CQIRF
          g$n$6810$CQIRF
          (g$native-endianness$6737$CQIRF)
          '4))))
   (g$bytevector-s32-native-set!$6753$CQIRF
     g$bytevector-s32-native-set!$6864$CQIRF
     (case-lambda
       ((g$bytevector$6811$CQIRF g$k$6812$CQIRF g$n$6813$CQIRF)
        (bytevector-sint-set!
          g$bytevector$6811$CQIRF
          g$k$6812$CQIRF
          g$n$6813$CQIRF
          (g$native-endianness$6737$CQIRF)
          '4))))
   (g$bytevector-u64-ref$6754$CQIRF
     g$bytevector-u64-ref$6865$CQIRF
     (case-lambda
       ((g$bytevector$6814$CQIRF g$k$6815$CQIRF g$endianness$6816$CQIRF)
        (bytevector-uint-ref
          g$bytevector$6814$CQIRF
          g$k$6815$CQIRF
          g$endianness$6816$CQIRF
          '8))))
   (g$bytevector-s64-ref$6755$CQIRF
     g$bytevector-s64-ref$6866$CQIRF
     (case-lambda
       ((g$bytevector$6817$CQIRF g$k$6818$CQIRF g$endianness$6819$CQIRF)
        (bytevector-sint-ref
          g$bytevector$6817$CQIRF
          g$k$6818$CQIRF
          g$endianness$6819$CQIRF
          '8))))
   (g$bytevector-u64-native-ref$6756$CQIRF
     g$bytevector-u64-native-ref$6867$CQIRF
     (case-lambda
       ((g$bytevector$6820$CQIRF g$k$6821$CQIRF)
        (bytevector-uint-ref
          g$bytevector$6820$CQIRF
          g$k$6821$CQIRF
          (g$native-endianness$6737$CQIRF)
          '8))))
   (g$bytevector-s64-native-ref$6757$CQIRF
     g$bytevector-s64-native-ref$6868$CQIRF
     (case-lambda
       ((g$bytevector$6822$CQIRF g$k$6823$CQIRF)
        (bytevector-sint-ref
          g$bytevector$6822$CQIRF
          g$k$6823$CQIRF
          (g$native-endianness$6737$CQIRF)
          '8))))
   (g$bytevector-u64-set!$6758$CQIRF
     g$bytevector-u64-set!$6869$CQIRF
     (case-lambda
       ((g$bytevector$6824$CQIRF
          g$k$6825$CQIRF
          g$n$6826$CQIRF
          g$endianness$6827$CQIRF)
        (bytevector-uint-set!
          g$bytevector$6824$CQIRF
          g$k$6825$CQIRF
          g$n$6826$CQIRF
          g$endianness$6827$CQIRF
          '8))))
   (g$bytevector-s64-set!$6759$CQIRF
     g$bytevector-s64-set!$6870$CQIRF
     (case-lambda
       ((g$bytevector$6828$CQIRF
          g$k$6829$CQIRF
          g$n$6830$CQIRF
          g$endianness$6831$CQIRF)
        (bytevector-sint-set!
          g$bytevector$6828$CQIRF
          g$k$6829$CQIRF
          g$n$6830$CQIRF
          g$endianness$6831$CQIRF
          '8))))
   (g$bytevector-u64-native-set!$6760$CQIRF
     g$bytevector-u64-native-set!$6871$CQIRF
     (case-lambda
       ((g$bytevector$6832$CQIRF g$k$6833$CQIRF g$n$6834$CQIRF)
        (bytevector-uint-set!
          g$bytevector$6832$CQIRF
          g$k$6833$CQIRF
          g$n$6834$CQIRF
          (g$native-endianness$6737$CQIRF)
          '8))))
   (g$bytevector-s64-native-set!$6761$CQIRF
     g$bytevector-s64-native-set!$6872$CQIRF
     (case-lambda
       ((g$bytevector$6835$CQIRF g$k$6836$CQIRF g$n$6837$CQIRF)
        (bytevector-sint-set!
          g$bytevector$6835$CQIRF
          g$k$6836$CQIRF
          g$n$6837$CQIRF
          (g$native-endianness$6737$CQIRF)
          '8))))
   (g$bytevector-ieee-single-native-ref$6762$CQIRF
     g$bytevector-ieee-single-native-ref$6873$CQIRF
     (case-lambda
       ((g$bytevector$6838$CQIRF g$k$6839$CQIRF)
        (if (not (g$zero?$6655$CQIRF (g$mod$6610$CQIRF g$k$6839$CQIRF '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$6839$CQIRF)
          (bytevector-ieee-single-ref
            g$bytevector$6838$CQIRF
            g$k$6839$CQIRF
            (g$native-endianness$6737$CQIRF))))))
   (g$bytevector-ieee-double-native-ref$6763$CQIRF
     g$bytevector-ieee-double-native-ref$6874$CQIRF
     (case-lambda
       ((g$bytevector$6840$CQIRF g$k$6841$CQIRF)
        (if (not (g$zero?$6655$CQIRF (g$mod$6610$CQIRF g$k$6841$CQIRF '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$6841$CQIRF)
          (bytevector-ieee-double-ref
            g$bytevector$6840$CQIRF
            g$k$6841$CQIRF
            (g$native-endianness$6737$CQIRF))))))
   (g$bytevector-ieee-single-native-set!$6764$CQIRF
     g$bytevector-ieee-single-native-set!$6875$CQIRF
     (case-lambda
       ((g$bytevector$6842$CQIRF g$k$6843$CQIRF g$x$6844$CQIRF)
        (if (not (g$zero?$6655$CQIRF (g$mod$6610$CQIRF g$k$6843$CQIRF '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$6843$CQIRF)
          (bytevector-ieee-single-set!
            g$bytevector$6842$CQIRF
            g$k$6843$CQIRF
            g$x$6844$CQIRF
            (g$native-endianness$6737$CQIRF))))))
   (g$bytevector-ieee-double-native-set!$6765$CQIRF
     g$bytevector-ieee-double-native-set!$6876$CQIRF
     (case-lambda
       ((g$bytevector$6845$CQIRF g$k$6846$CQIRF g$x$6847$CQIRF)
        (if (not (g$zero?$6655$CQIRF (g$mod$6610$CQIRF g$k$6846$CQIRF '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$6846$CQIRF)
          (bytevector-ieee-double-set!
            g$bytevector$6845$CQIRF
            g$k$6846$CQIRF
            g$x$6847$CQIRF
            (g$native-endianness$6737$CQIRF)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$5786$6877$CQIRF
     g$5786$7255$CQIRF
     (make-record-type-descriptor
       '&condition
       '#f
       'g$5789$CQIRF
       '#f
       '#f
       '#()))
   (g$5788$6878$CQIRF g$5788$7256$CQIRF '#f)
   (g$5787$6879$CQIRF
     g$5787$7257$CQIRF
     (make-record-constructor-descriptor
       g$5786$6877$CQIRF
       '#f
       g$5788$6878$CQIRF))
   (g$&condition?$6882$CQIRF
     g$&condition?$7258$CQIRF
     (record-predicate g$5786$6877$CQIRF))
   (g$make-&condition$6883$CQIRF
     g$make-&condition$7259$CQIRF
     (record-constructor g$5787$6879$CQIRF))
   (g$&condition-rtd$6884$CQIRF
     g$&condition-rtd$7260$CQIRF
     g$5786$6877$CQIRF)
   (g$&condition-rcd$6885$CQIRF
     g$&condition-rcd$7261$CQIRF
     g$5787$6879$CQIRF)
   (g$5823$6959$CQIRF
     g$5823$7262$CQIRF
     (make-record-type-descriptor
       '&message
       g$5786$6877$CQIRF
       'g$5826$CQIRF
       '#f
       '#f
       '#((immutable message))))
   (g$5825$6960$CQIRF g$5825$7263$CQIRF '#f)
   (g$5824$6961$CQIRF
     g$5824$7264$CQIRF
     (make-record-constructor-descriptor
       g$5823$6959$CQIRF
       g$5787$6879$CQIRF
       g$5825$6960$CQIRF))
   (g$p?$6964$CQIRF g$p?$7265$CQIRF (record-predicate g$5823$6959$CQIRF))
   (g$make-message-condition$6965$CQIRF
     g$make-message-condition$7266$CQIRF
     (record-constructor g$5824$6961$CQIRF))
   (g$condition-message$6966$CQIRF
     g$condition-message$7267$CQIRF
     (record-accessor g$5823$6959$CQIRF '0))
   (g$message-condition?$6967$CQIRF
     g$message-condition?$7268$CQIRF
     (condition-predicate g$5823$6959$CQIRF))
   (g$condition-message$6968$CQIRF
     g$condition-message$7269$CQIRF
     (condition-accessor g$5823$6959$CQIRF g$condition-message$6966$CQIRF))
   (g$&message-rtd$6969$CQIRF g$&message-rtd$7270$CQIRF g$5823$6959$CQIRF)
   (g$&message-rcd$6970$CQIRF g$&message-rcd$7271$CQIRF g$5824$6961$CQIRF)
   (g$5838$6971$CQIRF
     g$5838$7272$CQIRF
     (make-record-type-descriptor
       '&warning
       g$5786$6877$CQIRF
       'g$5841$CQIRF
       '#f
       '#f
       '#()))
   (g$5840$6972$CQIRF g$5840$7273$CQIRF '#f)
   (g$5839$6973$CQIRF
     g$5839$7274$CQIRF
     (make-record-constructor-descriptor
       g$5838$6971$CQIRF
       g$5787$6879$CQIRF
       g$5840$6972$CQIRF))
   (g$p?$6976$CQIRF g$p?$7275$CQIRF (record-predicate g$5838$6971$CQIRF))
   (g$make-warning$6977$CQIRF
     g$make-warning$7276$CQIRF
     (record-constructor g$5839$6973$CQIRF))
   (g$warning?$6978$CQIRF
     g$warning?$7277$CQIRF
     (condition-predicate g$5838$6971$CQIRF))
   (g$&warning-rtd$6979$CQIRF g$&warning-rtd$7278$CQIRF g$5838$6971$CQIRF)
   (g$&warning-rcd$6980$CQIRF g$&warning-rcd$7279$CQIRF g$5839$6973$CQIRF)
   (g$5851$6981$CQIRF
     g$5851$7280$CQIRF
     (make-record-type-descriptor
       '&serious
       g$5786$6877$CQIRF
       'g$5854$CQIRF
       '#f
       '#f
       '#()))
   (g$5853$6982$CQIRF g$5853$7281$CQIRF '#f)
   (g$5852$6983$CQIRF
     g$5852$7282$CQIRF
     (make-record-constructor-descriptor
       g$5851$6981$CQIRF
       g$5787$6879$CQIRF
       g$5853$6982$CQIRF))
   (g$p?$6986$CQIRF g$p?$7283$CQIRF (record-predicate g$5851$6981$CQIRF))
   (g$make-serious-condition$6987$CQIRF
     g$make-serious-condition$7284$CQIRF
     (record-constructor g$5852$6983$CQIRF))
   (g$serious-condition?$6988$CQIRF
     g$serious-condition?$7285$CQIRF
     (condition-predicate g$5851$6981$CQIRF))
   (g$&serious-rtd$6989$CQIRF g$&serious-rtd$7286$CQIRF g$5851$6981$CQIRF)
   (g$&serious-rcd$6990$CQIRF g$&serious-rcd$7287$CQIRF g$5852$6983$CQIRF)
   (g$5864$6991$CQIRF
     g$5864$7288$CQIRF
     (make-record-type-descriptor
       '&error
       g$5851$6981$CQIRF
       'g$5867$CQIRF
       '#f
       '#f
       '#()))
   (g$5866$6992$CQIRF g$5866$7289$CQIRF '#f)
   (g$5865$6993$CQIRF
     g$5865$7290$CQIRF
     (make-record-constructor-descriptor
       g$5864$6991$CQIRF
       g$5852$6983$CQIRF
       g$5866$6992$CQIRF))
   (g$p?$6996$CQIRF g$p?$7291$CQIRF (record-predicate g$5864$6991$CQIRF))
   (g$make-error$6997$CQIRF
     g$make-error$7292$CQIRF
     (record-constructor g$5865$6993$CQIRF))
   (g$error?$6998$CQIRF
     g$error?$7293$CQIRF
     (condition-predicate g$5864$6991$CQIRF))
   (g$&error-rtd$6999$CQIRF g$&error-rtd$7294$CQIRF g$5864$6991$CQIRF)
   (g$&error-rcd$7000$CQIRF g$&error-rcd$7295$CQIRF g$5865$6993$CQIRF)
   (g$5877$7001$CQIRF
     g$5877$7296$CQIRF
     (make-record-type-descriptor
       '&violation
       g$5851$6981$CQIRF
       'g$5880$CQIRF
       '#f
       '#f
       '#()))
   (g$5879$7002$CQIRF g$5879$7297$CQIRF '#f)
   (g$5878$7003$CQIRF
     g$5878$7298$CQIRF
     (make-record-constructor-descriptor
       g$5877$7001$CQIRF
       g$5852$6983$CQIRF
       g$5879$7002$CQIRF))
   (g$p?$7006$CQIRF g$p?$7299$CQIRF (record-predicate g$5877$7001$CQIRF))
   (g$make-violation$7007$CQIRF
     g$make-violation$7300$CQIRF
     (record-constructor g$5878$7003$CQIRF))
   (g$violation?$7008$CQIRF
     g$violation?$7301$CQIRF
     (condition-predicate g$5877$7001$CQIRF))
   (g$&violation-rtd$7009$CQIRF
     g$&violation-rtd$7302$CQIRF
     g$5877$7001$CQIRF)
   (g$&violation-rcd$7010$CQIRF
     g$&violation-rcd$7303$CQIRF
     g$5878$7003$CQIRF)
   (g$5890$7011$CQIRF
     g$5890$7304$CQIRF
     (make-record-type-descriptor
       '&assertion
       g$5877$7001$CQIRF
       'g$5893$CQIRF
       '#f
       '#f
       '#()))
   (g$5892$7012$CQIRF g$5892$7305$CQIRF '#f)
   (g$5891$7013$CQIRF
     g$5891$7306$CQIRF
     (make-record-constructor-descriptor
       g$5890$7011$CQIRF
       g$5878$7003$CQIRF
       g$5892$7012$CQIRF))
   (g$p?$7016$CQIRF g$p?$7307$CQIRF (record-predicate g$5890$7011$CQIRF))
   (g$make-assertion-violation$7017$CQIRF
     g$make-assertion-violation$7308$CQIRF
     (record-constructor g$5891$7013$CQIRF))
   (g$assertion-violation?$7018$CQIRF
     g$assertion-violation?$7309$CQIRF
     (condition-predicate g$5890$7011$CQIRF))
   (g$&assertion-rtd$7019$CQIRF
     g$&assertion-rtd$7310$CQIRF
     g$5890$7011$CQIRF)
   (g$&assertion-rcd$7020$CQIRF
     g$&assertion-rcd$7311$CQIRF
     g$5891$7013$CQIRF)
   (g$5903$7022$CQIRF
     g$5903$7312$CQIRF
     (make-record-type-descriptor
       '&irritants
       g$5786$6877$CQIRF
       'g$5906$CQIRF
       '#f
       '#f
       '#((immutable irritants))))
   (g$5905$7023$CQIRF g$5905$7313$CQIRF '#f)
   (g$5904$7024$CQIRF
     g$5904$7314$CQIRF
     (make-record-constructor-descriptor
       g$5903$7022$CQIRF
       g$5787$6879$CQIRF
       g$5905$7023$CQIRF))
   (g$p?$7027$CQIRF g$p?$7315$CQIRF (record-predicate g$5903$7022$CQIRF))
   (g$make-irritants-condition$7028$CQIRF
     g$make-irritants-condition$7316$CQIRF
     (record-constructor g$5904$7024$CQIRF))
   (g$condition-irritants$7029$CQIRF
     g$condition-irritants$7317$CQIRF
     (record-accessor g$5903$7022$CQIRF '0))
   (g$irritants-condition?$7030$CQIRF
     g$irritants-condition?$7318$CQIRF
     (condition-predicate g$5903$7022$CQIRF))
   (g$condition-irritants$7031$CQIRF
     g$condition-irritants$7319$CQIRF
     (condition-accessor g$5903$7022$CQIRF g$condition-irritants$7029$CQIRF))
   (g$&irritants-rtd$7032$CQIRF
     g$&irritants-rtd$7320$CQIRF
     g$5903$7022$CQIRF)
   (g$&irritants-rcd$7033$CQIRF
     g$&irritants-rcd$7321$CQIRF
     g$5904$7024$CQIRF)
   (g$5918$7035$CQIRF
     g$5918$7322$CQIRF
     (make-record-type-descriptor
       '&who
       g$5786$6877$CQIRF
       'g$5921$CQIRF
       '#f
       '#f
       '#((immutable who))))
   (g$5920$7036$CQIRF g$5920$7323$CQIRF '#f)
   (g$5919$7037$CQIRF
     g$5919$7324$CQIRF
     (make-record-constructor-descriptor
       g$5918$7035$CQIRF
       g$5787$6879$CQIRF
       g$5920$7036$CQIRF))
   (g$p?$7040$CQIRF g$p?$7325$CQIRF (record-predicate g$5918$7035$CQIRF))
   (g$make-who-condition$7041$CQIRF
     g$make-who-condition$7326$CQIRF
     (record-constructor g$5919$7037$CQIRF))
   (g$condition-who$7042$CQIRF
     g$condition-who$7327$CQIRF
     (record-accessor g$5918$7035$CQIRF '0))
   (g$who-condition?$7043$CQIRF
     g$who-condition?$7328$CQIRF
     (condition-predicate g$5918$7035$CQIRF))
   (g$condition-who$7044$CQIRF
     g$condition-who$7329$CQIRF
     (condition-accessor g$5918$7035$CQIRF g$condition-who$7042$CQIRF))
   (g$&who-rtd$7045$CQIRF g$&who-rtd$7330$CQIRF g$5918$7035$CQIRF)
   (g$&who-rcd$7046$CQIRF g$&who-rcd$7331$CQIRF g$5919$7037$CQIRF)
   (g$5933$7047$CQIRF
     g$5933$7332$CQIRF
     (make-record-type-descriptor
       '&non-continuable
       g$5877$7001$CQIRF
       'g$5936$CQIRF
       '#f
       '#f
       '#()))
   (g$5935$7048$CQIRF g$5935$7333$CQIRF '#f)
   (g$5934$7049$CQIRF
     g$5934$7334$CQIRF
     (make-record-constructor-descriptor
       g$5933$7047$CQIRF
       g$5878$7003$CQIRF
       g$5935$7048$CQIRF))
   (g$p?$7052$CQIRF g$p?$7335$CQIRF (record-predicate g$5933$7047$CQIRF))
   (g$make-non-continuable-violation$7053$CQIRF
     g$make-non-continuable-violation$7336$CQIRF
     (record-constructor g$5934$7049$CQIRF))
   (g$non-continuable-violation?$7054$CQIRF
     g$non-continuable-violation?$7337$CQIRF
     (condition-predicate g$5933$7047$CQIRF))
   (g$&non-continuable-rtd$7055$CQIRF
     g$&non-continuable-rtd$7338$CQIRF
     g$5933$7047$CQIRF)
   (g$&non-continuable-rcd$7056$CQIRF
     g$&non-continuable-rcd$7339$CQIRF
     g$5934$7049$CQIRF)
   (g$5946$7057$CQIRF
     g$5946$7340$CQIRF
     (make-record-type-descriptor
       '&implementation-restriction
       g$5877$7001$CQIRF
       'g$5949$CQIRF
       '#f
       '#f
       '#()))
   (g$5948$7058$CQIRF g$5948$7341$CQIRF '#f)
   (g$5947$7059$CQIRF
     g$5947$7342$CQIRF
     (make-record-constructor-descriptor
       g$5946$7057$CQIRF
       g$5878$7003$CQIRF
       g$5948$7058$CQIRF))
   (g$p?$7062$CQIRF g$p?$7343$CQIRF (record-predicate g$5946$7057$CQIRF))
   (g$make-implementation-restriction-violation$7063$CQIRF
     g$make-implementation-restriction-violation$7344$CQIRF
     (record-constructor g$5947$7059$CQIRF))
   (g$implementation-restriction-violation?$7064$CQIRF
     g$implementation-restriction-violation?$7345$CQIRF
     (condition-predicate g$5946$7057$CQIRF))
   (g$&implementation-restriction-rtd$7065$CQIRF
     g$&implementation-restriction-rtd$7346$CQIRF
     g$5946$7057$CQIRF)
   (g$&implementation-restriction-rcd$7066$CQIRF
     g$&implementation-restriction-rcd$7347$CQIRF
     g$5947$7059$CQIRF)
   (g$5959$7067$CQIRF
     g$5959$7348$CQIRF
     (make-record-type-descriptor
       '&lexical
       g$5877$7001$CQIRF
       'g$5962$CQIRF
       '#f
       '#f
       '#()))
   (g$5961$7068$CQIRF g$5961$7349$CQIRF '#f)
   (g$5960$7069$CQIRF
     g$5960$7350$CQIRF
     (make-record-constructor-descriptor
       g$5959$7067$CQIRF
       g$5878$7003$CQIRF
       g$5961$7068$CQIRF))
   (g$p?$7072$CQIRF g$p?$7351$CQIRF (record-predicate g$5959$7067$CQIRF))
   (g$make-lexical-violation$7073$CQIRF
     g$make-lexical-violation$7352$CQIRF
     (record-constructor g$5960$7069$CQIRF))
   (g$lexical-violation?$7074$CQIRF
     g$lexical-violation?$7353$CQIRF
     (condition-predicate g$5959$7067$CQIRF))
   (g$&lexical-rtd$7075$CQIRF g$&lexical-rtd$7354$CQIRF g$5959$7067$CQIRF)
   (g$&lexical-rcd$7076$CQIRF g$&lexical-rcd$7355$CQIRF g$5960$7069$CQIRF)
   (g$5972$7079$CQIRF
     g$5972$7356$CQIRF
     (make-record-type-descriptor
       '&syntax
       g$5877$7001$CQIRF
       'g$5975$CQIRF
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$5974$7080$CQIRF g$5974$7357$CQIRF '#f)
   (g$5973$7081$CQIRF
     g$5973$7358$CQIRF
     (make-record-constructor-descriptor
       g$5972$7079$CQIRF
       g$5878$7003$CQIRF
       g$5974$7080$CQIRF))
   (g$p?$7084$CQIRF g$p?$7359$CQIRF (record-predicate g$5972$7079$CQIRF))
   (g$make-syntax-violation$7085$CQIRF
     g$make-syntax-violation$7360$CQIRF
     (record-constructor g$5973$7081$CQIRF))
   (g$syntax-violation-form$7086$CQIRF
     g$syntax-violation-form$7361$CQIRF
     (record-accessor g$5972$7079$CQIRF '0))
   (g$syntax-violation-subform$7087$CQIRF
     g$syntax-violation-subform$7362$CQIRF
     (record-accessor g$5972$7079$CQIRF '1))
   (g$syntax-violation?$7088$CQIRF
     g$syntax-violation?$7363$CQIRF
     (condition-predicate g$5972$7079$CQIRF))
   (g$syntax-violation-form$7089$CQIRF
     g$syntax-violation-form$7364$CQIRF
     (condition-accessor
       g$5972$7079$CQIRF
       g$syntax-violation-form$7086$CQIRF))
   (g$syntax-violation-subform$7090$CQIRF
     g$syntax-violation-subform$7365$CQIRF
     (condition-accessor
       g$5972$7079$CQIRF
       g$syntax-violation-subform$7087$CQIRF))
   (g$&syntax-rtd$7091$CQIRF g$&syntax-rtd$7366$CQIRF g$5972$7079$CQIRF)
   (g$&syntax-rcd$7092$CQIRF g$&syntax-rcd$7367$CQIRF g$5973$7081$CQIRF)
   (g$5989$7093$CQIRF
     g$5989$7368$CQIRF
     (make-record-type-descriptor
       '&undefined
       g$5877$7001$CQIRF
       'g$5992$CQIRF
       '#f
       '#f
       '#()))
   (g$5991$7094$CQIRF g$5991$7369$CQIRF '#f)
   (g$5990$7095$CQIRF
     g$5990$7370$CQIRF
     (make-record-constructor-descriptor
       g$5989$7093$CQIRF
       g$5878$7003$CQIRF
       g$5991$7094$CQIRF))
   (g$p?$7098$CQIRF g$p?$7371$CQIRF (record-predicate g$5989$7093$CQIRF))
   (g$make-undefined-violation$7099$CQIRF
     g$make-undefined-violation$7372$CQIRF
     (record-constructor g$5990$7095$CQIRF))
   (g$undefined-violation?$7100$CQIRF
     g$undefined-violation?$7373$CQIRF
     (condition-predicate g$5989$7093$CQIRF))
   (g$&undefined-rtd$7101$CQIRF
     g$&undefined-rtd$7374$CQIRF
     g$5989$7093$CQIRF)
   (g$&undefined-rcd$7102$CQIRF
     g$&undefined-rcd$7375$CQIRF
     g$5990$7095$CQIRF)
   (g$6002$7103$CQIRF
     g$6002$7376$CQIRF
     (make-record-type-descriptor
       '&i/o
       g$5864$6991$CQIRF
       'g$6005$CQIRF
       '#f
       '#f
       '#()))
   (g$6004$7104$CQIRF g$6004$7377$CQIRF '#f)
   (g$6003$7105$CQIRF
     g$6003$7378$CQIRF
     (make-record-constructor-descriptor
       g$6002$7103$CQIRF
       g$5865$6993$CQIRF
       g$6004$7104$CQIRF))
   (g$p?$7108$CQIRF g$p?$7379$CQIRF (record-predicate g$6002$7103$CQIRF))
   (g$make-i/o-error$7109$CQIRF
     g$make-i/o-error$7380$CQIRF
     (record-constructor g$6003$7105$CQIRF))
   (g$i/o-error?$7110$CQIRF
     g$i/o-error?$7381$CQIRF
     (condition-predicate g$6002$7103$CQIRF))
   (g$&i/o-rtd$7111$CQIRF g$&i/o-rtd$7382$CQIRF g$6002$7103$CQIRF)
   (g$&i/o-rcd$7112$CQIRF g$&i/o-rcd$7383$CQIRF g$6003$7105$CQIRF)
   (g$6015$7113$CQIRF
     g$6015$7384$CQIRF
     (make-record-type-descriptor
       '&i/o-read
       g$6002$7103$CQIRF
       'g$6018$CQIRF
       '#f
       '#f
       '#()))
   (g$6017$7114$CQIRF g$6017$7385$CQIRF '#f)
   (g$6016$7115$CQIRF
     g$6016$7386$CQIRF
     (make-record-constructor-descriptor
       g$6015$7113$CQIRF
       g$6003$7105$CQIRF
       g$6017$7114$CQIRF))
   (g$p?$7118$CQIRF g$p?$7387$CQIRF (record-predicate g$6015$7113$CQIRF))
   (g$make-i/o-read-error$7119$CQIRF
     g$make-i/o-read-error$7388$CQIRF
     (record-constructor g$6016$7115$CQIRF))
   (g$i/o-read-error?$7120$CQIRF
     g$i/o-read-error?$7389$CQIRF
     (condition-predicate g$6015$7113$CQIRF))
   (g$&i/o-read-rtd$7121$CQIRF
     g$&i/o-read-rtd$7390$CQIRF
     g$6015$7113$CQIRF)
   (g$&i/o-read-rcd$7122$CQIRF
     g$&i/o-read-rcd$7391$CQIRF
     g$6016$7115$CQIRF)
   (g$6028$7123$CQIRF
     g$6028$7392$CQIRF
     (make-record-type-descriptor
       '&i/o-write
       g$6002$7103$CQIRF
       'g$6031$CQIRF
       '#f
       '#f
       '#()))
   (g$6030$7124$CQIRF g$6030$7393$CQIRF '#f)
   (g$6029$7125$CQIRF
     g$6029$7394$CQIRF
     (make-record-constructor-descriptor
       g$6028$7123$CQIRF
       g$6003$7105$CQIRF
       g$6030$7124$CQIRF))
   (g$p?$7128$CQIRF g$p?$7395$CQIRF (record-predicate g$6028$7123$CQIRF))
   (g$make-i/o-write-error$7129$CQIRF
     g$make-i/o-write-error$7396$CQIRF
     (record-constructor g$6029$7125$CQIRF))
   (g$i/o-write-error?$7130$CQIRF
     g$i/o-write-error?$7397$CQIRF
     (condition-predicate g$6028$7123$CQIRF))
   (g$&i/o-write-rtd$7131$CQIRF
     g$&i/o-write-rtd$7398$CQIRF
     g$6028$7123$CQIRF)
   (g$&i/o-write-rcd$7132$CQIRF
     g$&i/o-write-rcd$7399$CQIRF
     g$6029$7125$CQIRF)
   (g$6041$7134$CQIRF
     g$6041$7400$CQIRF
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6002$7103$CQIRF
       'g$6044$CQIRF
       '#f
       '#f
       '#((immutable position))))
   (g$6043$7135$CQIRF g$6043$7401$CQIRF '#f)
   (g$6042$7136$CQIRF
     g$6042$7402$CQIRF
     (make-record-constructor-descriptor
       g$6041$7134$CQIRF
       g$6003$7105$CQIRF
       g$6043$7135$CQIRF))
   (g$p?$7139$CQIRF g$p?$7403$CQIRF (record-predicate g$6041$7134$CQIRF))
   (g$make-i/o-invalid-position-error$7140$CQIRF
     g$make-i/o-invalid-position-error$7404$CQIRF
     (record-constructor g$6042$7136$CQIRF))
   (g$i/o-error-position$7141$CQIRF
     g$i/o-error-position$7405$CQIRF
     (record-accessor g$6041$7134$CQIRF '0))
   (g$i/o-invalid-position-error?$7142$CQIRF
     g$i/o-invalid-position-error?$7406$CQIRF
     (condition-predicate g$6041$7134$CQIRF))
   (g$i/o-error-position$7143$CQIRF
     g$i/o-error-position$7407$CQIRF
     (condition-accessor g$6041$7134$CQIRF g$i/o-error-position$7141$CQIRF))
   (g$&i/o-invalid-position-rtd$7144$CQIRF
     g$&i/o-invalid-position-rtd$7408$CQIRF
     g$6041$7134$CQIRF)
   (g$&i/o-invalid-position-rcd$7145$CQIRF
     g$&i/o-invalid-position-rcd$7409$CQIRF
     g$6042$7136$CQIRF)
   (g$6056$7147$CQIRF
     g$6056$7410$CQIRF
     (make-record-type-descriptor
       '&i/o-filename
       g$6002$7103$CQIRF
       'g$6059$CQIRF
       '#f
       '#f
       '#((immutable filename))))
   (g$6058$7148$CQIRF g$6058$7411$CQIRF '#f)
   (g$6057$7149$CQIRF
     g$6057$7412$CQIRF
     (make-record-constructor-descriptor
       g$6056$7147$CQIRF
       g$6003$7105$CQIRF
       g$6058$7148$CQIRF))
   (g$p?$7152$CQIRF g$p?$7413$CQIRF (record-predicate g$6056$7147$CQIRF))
   (g$make-i/o-filename-error$7153$CQIRF
     g$make-i/o-filename-error$7414$CQIRF
     (record-constructor g$6057$7149$CQIRF))
   (g$i/o-error-filename$7154$CQIRF
     g$i/o-error-filename$7415$CQIRF
     (record-accessor g$6056$7147$CQIRF '0))
   (g$i/o-filename-error?$7155$CQIRF
     g$i/o-filename-error?$7416$CQIRF
     (condition-predicate g$6056$7147$CQIRF))
   (g$i/o-error-filename$7156$CQIRF
     g$i/o-error-filename$7417$CQIRF
     (condition-accessor g$6056$7147$CQIRF g$i/o-error-filename$7154$CQIRF))
   (g$&i/o-filename-rtd$7157$CQIRF
     g$&i/o-filename-rtd$7418$CQIRF
     g$6056$7147$CQIRF)
   (g$&i/o-filename-rcd$7158$CQIRF
     g$&i/o-filename-rcd$7419$CQIRF
     g$6057$7149$CQIRF)
   (g$6071$7159$CQIRF
     g$6071$7420$CQIRF
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6056$7147$CQIRF
       'g$6074$CQIRF
       '#f
       '#f
       '#()))
   (g$6073$7160$CQIRF g$6073$7421$CQIRF '#f)
   (g$6072$7161$CQIRF
     g$6072$7422$CQIRF
     (make-record-constructor-descriptor
       g$6071$7159$CQIRF
       g$6057$7149$CQIRF
       g$6073$7160$CQIRF))
   (g$p?$7164$CQIRF g$p?$7423$CQIRF (record-predicate g$6071$7159$CQIRF))
   (g$make-i/o-file-protection-error$7165$CQIRF
     g$make-i/o-file-protection-error$7424$CQIRF
     (record-constructor g$6072$7161$CQIRF))
   (g$i/o-file-protection-error?$7166$CQIRF
     g$i/o-file-protection-error?$7425$CQIRF
     (condition-predicate g$6071$7159$CQIRF))
   (g$&i/o-file-protection-rtd$7167$CQIRF
     g$&i/o-file-protection-rtd$7426$CQIRF
     g$6071$7159$CQIRF)
   (g$&i/o-file-protection-rcd$7168$CQIRF
     g$&i/o-file-protection-rcd$7427$CQIRF
     g$6072$7161$CQIRF)
   (g$6084$7169$CQIRF
     g$6084$7428$CQIRF
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6071$7159$CQIRF
       'g$6087$CQIRF
       '#f
       '#f
       '#()))
   (g$6086$7170$CQIRF g$6086$7429$CQIRF '#f)
   (g$6085$7171$CQIRF
     g$6085$7430$CQIRF
     (make-record-constructor-descriptor
       g$6084$7169$CQIRF
       g$6072$7161$CQIRF
       g$6086$7170$CQIRF))
   (g$p?$7174$CQIRF g$p?$7431$CQIRF (record-predicate g$6084$7169$CQIRF))
   (g$make-i/o-file-is-read-only-error$7175$CQIRF
     g$make-i/o-file-is-read-only-error$7432$CQIRF
     (record-constructor g$6085$7171$CQIRF))
   (g$i/o-file-is-read-only-error?$7176$CQIRF
     g$i/o-file-is-read-only-error?$7433$CQIRF
     (condition-predicate g$6084$7169$CQIRF))
   (g$&i/o-file-is-read-only-rtd$7177$CQIRF
     g$&i/o-file-is-read-only-rtd$7434$CQIRF
     g$6084$7169$CQIRF)
   (g$&i/o-file-is-read-only-rcd$7178$CQIRF
     g$&i/o-file-is-read-only-rcd$7435$CQIRF
     g$6085$7171$CQIRF)
   (g$6097$7179$CQIRF
     g$6097$7436$CQIRF
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6056$7147$CQIRF
       'g$6100$CQIRF
       '#f
       '#f
       '#()))
   (g$6099$7180$CQIRF g$6099$7437$CQIRF '#f)
   (g$6098$7181$CQIRF
     g$6098$7438$CQIRF
     (make-record-constructor-descriptor
       g$6097$7179$CQIRF
       g$6057$7149$CQIRF
       g$6099$7180$CQIRF))
   (g$p?$7184$CQIRF g$p?$7439$CQIRF (record-predicate g$6097$7179$CQIRF))
   (g$make-i/o-file-already-exists-error$7185$CQIRF
     g$make-i/o-file-already-exists-error$7440$CQIRF
     (record-constructor g$6098$7181$CQIRF))
   (g$i/o-file-already-exists-error?$7186$CQIRF
     g$i/o-file-already-exists-error?$7441$CQIRF
     (condition-predicate g$6097$7179$CQIRF))
   (g$&i/o-file-already-exists-rtd$7187$CQIRF
     g$&i/o-file-already-exists-rtd$7442$CQIRF
     g$6097$7179$CQIRF)
   (g$&i/o-file-already-exists-rcd$7188$CQIRF
     g$&i/o-file-already-exists-rcd$7443$CQIRF
     g$6098$7181$CQIRF)
   (g$6110$7189$CQIRF
     g$6110$7444$CQIRF
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6056$7147$CQIRF
       'g$6113$CQIRF
       '#f
       '#f
       '#()))
   (g$6112$7190$CQIRF g$6112$7445$CQIRF '#f)
   (g$6111$7191$CQIRF
     g$6111$7446$CQIRF
     (make-record-constructor-descriptor
       g$6110$7189$CQIRF
       g$6057$7149$CQIRF
       g$6112$7190$CQIRF))
   (g$p?$7194$CQIRF g$p?$7447$CQIRF (record-predicate g$6110$7189$CQIRF))
   (g$make-i/o-file-does-not-exist-error$7195$CQIRF
     g$make-i/o-file-does-not-exist-error$7448$CQIRF
     (record-constructor g$6111$7191$CQIRF))
   (g$i/o-file-does-not-exist-error?$7196$CQIRF
     g$i/o-file-does-not-exist-error?$7449$CQIRF
     (condition-predicate g$6110$7189$CQIRF))
   (g$&i/o-file-does-not-exist-rtd$7197$CQIRF
     g$&i/o-file-does-not-exist-rtd$7450$CQIRF
     g$6110$7189$CQIRF)
   (g$&i/o-file-does-not-exist-rcd$7198$CQIRF
     g$&i/o-file-does-not-exist-rcd$7451$CQIRF
     g$6111$7191$CQIRF)
   (g$6123$7200$CQIRF
     g$6123$7452$CQIRF
     (make-record-type-descriptor
       '&i/o-port
       g$6002$7103$CQIRF
       'g$6126$CQIRF
       '#f
       '#f
       '#((immutable port))))
   (g$6125$7201$CQIRF g$6125$7453$CQIRF '#f)
   (g$6124$7202$CQIRF
     g$6124$7454$CQIRF
     (make-record-constructor-descriptor
       g$6123$7200$CQIRF
       g$6003$7105$CQIRF
       g$6125$7201$CQIRF))
   (g$p?$7205$CQIRF g$p?$7455$CQIRF (record-predicate g$6123$7200$CQIRF))
   (g$make-i/o-port-error$7206$CQIRF
     g$make-i/o-port-error$7456$CQIRF
     (record-constructor g$6124$7202$CQIRF))
   (g$i/o-error-port$7207$CQIRF
     g$i/o-error-port$7457$CQIRF
     (record-accessor g$6123$7200$CQIRF '0))
   (g$i/o-port-error?$7208$CQIRF
     g$i/o-port-error?$7458$CQIRF
     (condition-predicate g$6123$7200$CQIRF))
   (g$i/o-error-port$7209$CQIRF
     g$i/o-error-port$7459$CQIRF
     (condition-accessor g$6123$7200$CQIRF g$i/o-error-port$7207$CQIRF))
   (g$&i/o-port-rtd$7210$CQIRF
     g$&i/o-port-rtd$7460$CQIRF
     g$6123$7200$CQIRF)
   (g$&i/o-port-rcd$7211$CQIRF
     g$&i/o-port-rcd$7461$CQIRF
     g$6124$7202$CQIRF)
   (g$6138$7212$CQIRF
     g$6138$7462$CQIRF
     (make-record-type-descriptor
       '&i/o-decoding
       g$6123$7200$CQIRF
       'g$6141$CQIRF
       '#f
       '#f
       '#()))
   (g$6140$7213$CQIRF g$6140$7463$CQIRF '#f)
   (g$6139$7214$CQIRF
     g$6139$7464$CQIRF
     (make-record-constructor-descriptor
       g$6138$7212$CQIRF
       g$6124$7202$CQIRF
       g$6140$7213$CQIRF))
   (g$p?$7217$CQIRF g$p?$7465$CQIRF (record-predicate g$6138$7212$CQIRF))
   (g$make-i/o-decoding-error$7218$CQIRF
     g$make-i/o-decoding-error$7466$CQIRF
     (record-constructor g$6139$7214$CQIRF))
   (g$i/o-decoding-error?$7219$CQIRF
     g$i/o-decoding-error?$7467$CQIRF
     (condition-predicate g$6138$7212$CQIRF))
   (g$&i/o-decoding-rtd$7220$CQIRF
     g$&i/o-decoding-rtd$7468$CQIRF
     g$6138$7212$CQIRF)
   (g$&i/o-decoding-rcd$7221$CQIRF
     g$&i/o-decoding-rcd$7469$CQIRF
     g$6139$7214$CQIRF)
   (g$6151$7223$CQIRF
     g$6151$7470$CQIRF
     (make-record-type-descriptor
       '&i/o-encoding
       g$6123$7200$CQIRF
       'g$6154$CQIRF
       '#f
       '#f
       '#((immutable char))))
   (g$6153$7224$CQIRF g$6153$7471$CQIRF '#f)
   (g$6152$7225$CQIRF
     g$6152$7472$CQIRF
     (make-record-constructor-descriptor
       g$6151$7223$CQIRF
       g$6124$7202$CQIRF
       g$6153$7224$CQIRF))
   (g$p?$7228$CQIRF g$p?$7473$CQIRF (record-predicate g$6151$7223$CQIRF))
   (g$make-i/o-encoding-error$7229$CQIRF
     g$make-i/o-encoding-error$7474$CQIRF
     (record-constructor g$6152$7225$CQIRF))
   (g$i/o-encoding-error-char$7230$CQIRF
     g$i/o-encoding-error-char$7475$CQIRF
     (record-accessor g$6151$7223$CQIRF '0))
   (g$i/o-encoding-error?$7231$CQIRF
     g$i/o-encoding-error?$7476$CQIRF
     (condition-predicate g$6151$7223$CQIRF))
   (g$i/o-encoding-error-char$7232$CQIRF
     g$i/o-encoding-error-char$7477$CQIRF
     (condition-accessor
       g$6151$7223$CQIRF
       g$i/o-encoding-error-char$7230$CQIRF))
   (g$&i/o-encoding-rtd$7233$CQIRF
     g$&i/o-encoding-rtd$7478$CQIRF
     g$6151$7223$CQIRF)
   (g$&i/o-encoding-rcd$7234$CQIRF
     g$&i/o-encoding-rcd$7479$CQIRF
     g$6152$7225$CQIRF)
   (g$6166$7235$CQIRF
     g$6166$7480$CQIRF
     (make-record-type-descriptor
       '&no-infinities
       g$5946$7057$CQIRF
       'g$6169$CQIRF
       '#f
       '#f
       '#()))
   (g$6168$7236$CQIRF g$6168$7481$CQIRF '#f)
   (g$6167$7237$CQIRF
     g$6167$7482$CQIRF
     (make-record-constructor-descriptor
       g$6166$7235$CQIRF
       g$5947$7059$CQIRF
       g$6168$7236$CQIRF))
   (g$p?$7240$CQIRF g$p?$7483$CQIRF (record-predicate g$6166$7235$CQIRF))
   (g$make-no-infinities-violation$7241$CQIRF
     g$make-no-infinities-violation$7484$CQIRF
     (record-constructor g$6167$7237$CQIRF))
   (g$no-infinities-violation?$7242$CQIRF
     g$no-infinities-violation?$7485$CQIRF
     (condition-predicate g$6166$7235$CQIRF))
   (g$&no-infinities-rtd$7243$CQIRF
     g$&no-infinities-rtd$7486$CQIRF
     g$6166$7235$CQIRF)
   (g$&no-infinities-rcd$7244$CQIRF
     g$&no-infinities-rcd$7487$CQIRF
     g$6167$7237$CQIRF)
   (g$6179$7245$CQIRF
     g$6179$7488$CQIRF
     (make-record-type-descriptor
       '&no-nans
       g$5946$7057$CQIRF
       'g$6182$CQIRF
       '#f
       '#f
       '#()))
   (g$6181$7246$CQIRF g$6181$7489$CQIRF '#f)
   (g$6180$7247$CQIRF
     g$6180$7490$CQIRF
     (make-record-constructor-descriptor
       g$6179$7245$CQIRF
       g$5947$7059$CQIRF
       g$6181$7246$CQIRF))
   (g$p?$7250$CQIRF g$p?$7491$CQIRF (record-predicate g$6179$7245$CQIRF))
   (g$make-no-nans-violation$7251$CQIRF
     g$make-no-nans-violation$7492$CQIRF
     (record-constructor g$6180$7247$CQIRF))
   (g$no-nans-violation?$7252$CQIRF
     g$no-nans-violation?$7493$CQIRF
     (condition-predicate g$6179$7245$CQIRF))
   (g$&no-nans-rtd$7253$CQIRF g$&no-nans-rtd$7494$CQIRF g$6179$7245$CQIRF)
   (g$&no-nans-rcd$7254$CQIRF g$&no-nans-rcd$7495$CQIRF g$6180$7247$CQIRF))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$7496$CQIRF
     g$append!$7502$CQIRF
     (case-lambda
       ((g$a$7497$CQIRF . g$b$7498$CQIRF)
        (if (null? g$a$7497$CQIRF)
          g$b$7498$CQIRF
          (if (null? g$b$7498$CQIRF)
            g$a$7497$CQIRF
            (begin
              ((letrec ((g$f$7499$CQIRF
                          (case-lambda
                            ((g$a$7500$CQIRF)
                             ((case-lambda
                                ((g$n$7501$CQIRF)
                                 (if (null? g$n$7501$CQIRF)
                                   (set-cdr! g$a$7500$CQIRF g$b$7498$CQIRF)
                                   (g$f$7499$CQIRF g$n$7501$CQIRF))))
                              (cdr g$a$7500$CQIRF))))))
                 g$f$7499$CQIRF)
               g$a$7497$CQIRF)
              g$a$7497$CQIRF)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$7503$CQIRF g$inexact->exact$7523$CQIRF exact)
   (g$exact->inexact$7504$CQIRF g$exact->inexact$7524$CQIRF inexact)
   (g$sign$7505$CQIRF
     g$sign$7525$CQIRF
     (case-lambda
       ((g$n$7511$CQIRF)
        (if (> g$n$7511$CQIRF '0) '1 (if (< g$n$7511$CQIRF '0) '-1 '0)))))
   (g$quotient$7506$CQIRF
     g$quotient$7526$CQIRF
     (case-lambda
       ((g$n1$7512$CQIRF g$n2$7513$CQIRF)
        (begin
          (if (not (integer-valued? g$n1$7512$CQIRF))
            (assertion-violation 'quotient '"not an integer" g$n1$7512$CQIRF)
            (void))
          (if (not (integer-valued? g$n2$7513$CQIRF))
            (assertion-violation 'quotient '"not an integer" g$n2$7513$CQIRF)
            (void))
          (* (g$sign$7505$CQIRF g$n1$7512$CQIRF)
             (g$sign$7505$CQIRF g$n2$7513$CQIRF)
             (g$div$6608$CQIRF (abs g$n1$7512$CQIRF) (abs g$n2$7513$CQIRF)))))))
   (g$remainder$7507$CQIRF
     g$remainder$7527$CQIRF
     (case-lambda
       ((g$n1$7514$CQIRF g$n2$7515$CQIRF)
        (begin
          (if (not (integer-valued? g$n1$7514$CQIRF))
            (assertion-violation 'remainder '"not an integer" g$n1$7514$CQIRF)
            (void))
          (if (not (integer-valued? g$n2$7515$CQIRF))
            (assertion-violation 'remainder '"not an integer" g$n2$7515$CQIRF)
            (void))
          (* (g$sign$7505$CQIRF g$n1$7514$CQIRF)
             (g$mod$6610$CQIRF (abs g$n1$7514$CQIRF) (abs g$n2$7515$CQIRF)))))))
   (g$modulo$7508$CQIRF
     g$modulo$7528$CQIRF
     (case-lambda
       ((g$n1$7516$CQIRF g$n2$7517$CQIRF)
        (begin
          (if (not (integer-valued? g$n1$7516$CQIRF))
            (assertion-violation 'modulo '"not an integer" g$n1$7516$CQIRF)
            (void))
          (if (not (integer-valued? g$n2$7517$CQIRF))
            (assertion-violation 'modulo '"not an integer" g$n2$7517$CQIRF)
            (void))
          (* (g$sign$7505$CQIRF g$n2$7517$CQIRF)
             (g$mod$6610$CQIRF
               (* (g$sign$7505$CQIRF g$n2$7517$CQIRF) g$n1$7516$CQIRF)
               (abs g$n2$7517$CQIRF)))))))
   (g$make-promise$7509$CQIRF
     g$make-promise$7529$CQIRF
     (case-lambda
       ((g$proc$7518$CQIRF)
        ((case-lambda
           ((g$result-ready?$7519$CQIRF g$result$7520$CQIRF)
            (case-lambda
              (()
               (if g$result-ready?$7519$CQIRF
                 g$result$7520$CQIRF
                 ((case-lambda
                    ((g$x$7521$CQIRF)
                     (if g$result-ready?$7519$CQIRF
                       g$result$7520$CQIRF
                       (begin
                         (set! g$result-ready?$7519$CQIRF '#t)
                         (set! g$result$7520$CQIRF g$x$7521$CQIRF)
                         g$result$7520$CQIRF))))
                  (g$proc$7518$CQIRF)))))))
         '#f
         '#f))))
   (g$force$7510$CQIRF
     g$force$7530$CQIRF
     (case-lambda ((g$object$7522$CQIRF) (g$object$7522$CQIRF)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$7531$CQIRF
     g$split$7556$CQIRF
     (case-lambda
       ((g$ls$7535$CQIRF)
        ((letrec ((g$loop$7536$CQIRF
                    (case-lambda
                      ((g$rest$7537$CQIRF g$left$7538$CQIRF g$right$7539$CQIRF)
                       (if (null? g$rest$7537$CQIRF)
                         (cons g$left$7538$CQIRF g$right$7539$CQIRF)
                         (if (null? (cdr g$rest$7537$CQIRF))
                           (cons
                             (cons (car g$rest$7537$CQIRF) g$left$7538$CQIRF)
                             g$right$7539$CQIRF)
                           (g$loop$7536$CQIRF
                             (g$cddr$6628$CQIRF g$rest$7537$CQIRF)
                             (cons (car g$rest$7537$CQIRF) g$left$7538$CQIRF)
                             (cons
                               (g$cadr$6626$CQIRF g$rest$7537$CQIRF)
                               g$right$7539$CQIRF))))))))
           g$loop$7536$CQIRF)
         g$ls$7535$CQIRF
         '()
         '()))))
   (g$reverse-it$7532$CQIRF
     g$reverse-it$7557$CQIRF
     (case-lambda
       ((g$head$7540$CQIRF g$tail$7541$CQIRF)
        (if (null? g$head$7540$CQIRF)
          g$tail$7541$CQIRF
          (g$reverse-it$7532$CQIRF
            (cdr g$head$7540$CQIRF)
            (cons (car g$head$7540$CQIRF) g$tail$7541$CQIRF))))))
   (g$merge$7533$CQIRF
     g$merge$7558$CQIRF
     (case-lambda
       ((g$list-1$7542$CQIRF g$list-2$7543$CQIRF g$precedes?$7544$CQIRF)
        ((letrec ((g$loop$7545$CQIRF
                    (case-lambda
                      ((g$source-1$7546$CQIRF
                         g$source-2$7547$CQIRF
                         g$so-far$7548$CQIRF)
                       (if (null? g$source-1$7546$CQIRF)
                         (g$reverse-it$7532$CQIRF
                           g$so-far$7548$CQIRF
                           g$source-2$7547$CQIRF)
                         (if (null? g$source-2$7547$CQIRF)
                           (g$reverse-it$7532$CQIRF
                             g$so-far$7548$CQIRF
                             g$source-1$7546$CQIRF)
                           ((case-lambda
                              ((g$car-1$7549$CQIRF g$car-2$7550$CQIRF)
                               (if (g$precedes?$7544$CQIRF
                                     g$car-2$7550$CQIRF
                                     g$car-1$7549$CQIRF)
                                 (g$loop$7545$CQIRF
                                   g$source-1$7546$CQIRF
                                   (cdr g$source-2$7547$CQIRF)
                                   (cons
                                     g$car-2$7550$CQIRF
                                     g$so-far$7548$CQIRF))
                                 (g$loop$7545$CQIRF
                                   g$source-2$7547$CQIRF
                                   (cdr g$source-1$7546$CQIRF)
                                   (cons
                                     g$car-1$7549$CQIRF
                                     g$so-far$7548$CQIRF)))))
                            (car g$source-1$7546$CQIRF)
                            (car g$source-2$7547$CQIRF))))))))
           g$loop$7545$CQIRF)
         g$list-1$7542$CQIRF
         g$list-2$7543$CQIRF
         '()))))
   (g$list-sort$7534$CQIRF
     g$list-sort$7559$CQIRF
     (case-lambda
       ((g$precedes?$7551$CQIRF g$ls$7552$CQIRF)
        (if (null? g$ls$7552$CQIRF)
          '()
          ((letrec ((g$helper$7553$CQIRF
                      (case-lambda
                        ((g$piece$7554$CQIRF)
                         (if (null? (cdr g$piece$7554$CQIRF))
                           g$piece$7554$CQIRF
                           ((case-lambda
                              ((g$parts$7555$CQIRF)
                               (g$merge$7533$CQIRF
                                 (g$helper$7553$CQIRF (car g$parts$7555$CQIRF))
                                 (g$helper$7553$CQIRF (cdr g$parts$7555$CQIRF))
                                 g$precedes?$7551$CQIRF)))
                            (g$split$7531$CQIRF g$piece$7554$CQIRF)))))))
             g$helper$7553$CQIRF)
           g$ls$7552$CQIRF))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$7595$CQIRF
     g$string-ci=?$7698$CQIRF
     (case-lambda
       ((g$a$7644$CQIRF g$b$7645$CQIRF . g$rest$7646$CQIRF)
        (begin
          (if (not (string? g$a$7644$CQIRF))
            (assertion-violation 'string-ci=? '"not a string" g$a$7644$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$7647$CQIRF)
               (begin
                 (if (not (string? g$x$7647$CQIRF))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$7647$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$7648$CQIRF)
                     (begin
                       (set! g$a$7644$CQIRF g$x$7647$CQIRF)
                       g$r$7648$CQIRF)))
                  (= (string-ci-compare g$a$7644$CQIRF g$x$7647$CQIRF) '0)))))
            (cons g$b$7645$CQIRF g$rest$7646$CQIRF))))))
   (g$string-ci<?$7596$CQIRF
     g$string-ci<?$7699$CQIRF
     (case-lambda
       ((g$a$7649$CQIRF g$b$7650$CQIRF . g$rest$7651$CQIRF)
        (begin
          (if (not (string? g$a$7649$CQIRF))
            (assertion-violation 'string-ci<? '"not a string" g$a$7649$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$7652$CQIRF)
               (begin
                 (if (not (string? g$x$7652$CQIRF))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$7652$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$7653$CQIRF)
                     (begin
                       (set! g$a$7649$CQIRF g$x$7652$CQIRF)
                       g$r$7653$CQIRF)))
                  (< (string-ci-compare g$a$7649$CQIRF g$x$7652$CQIRF) '0)))))
            (cons g$b$7650$CQIRF g$rest$7651$CQIRF))))))
   (g$string-ci>?$7597$CQIRF
     g$string-ci>?$7700$CQIRF
     (case-lambda
       ((g$a$7654$CQIRF g$b$7655$CQIRF . g$rest$7656$CQIRF)
        (begin
          (if (not (string? g$a$7654$CQIRF))
            (assertion-violation 'string-ci>? '"not a string" g$a$7654$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$7657$CQIRF)
               (begin
                 (if (not (string? g$x$7657$CQIRF))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$7657$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$7658$CQIRF)
                     (begin
                       (set! g$a$7654$CQIRF g$x$7657$CQIRF)
                       g$r$7658$CQIRF)))
                  (> (string-ci-compare g$a$7654$CQIRF g$x$7657$CQIRF) '0)))))
            (cons g$b$7655$CQIRF g$rest$7656$CQIRF))))))
   (g$string-ci<=?$7598$CQIRF
     g$string-ci<=?$7701$CQIRF
     (case-lambda
       ((g$a$7659$CQIRF g$b$7660$CQIRF . g$rest$7661$CQIRF)
        (begin
          (if (not (string? g$a$7659$CQIRF))
            (assertion-violation 'string-ci<=? '"not a string" g$a$7659$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$7662$CQIRF)
               (begin
                 (if (not (string? g$x$7662$CQIRF))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$7662$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$7663$CQIRF)
                     (begin
                       (set! g$a$7659$CQIRF g$x$7662$CQIRF)
                       g$r$7663$CQIRF)))
                  (<= (string-ci-compare g$a$7659$CQIRF g$x$7662$CQIRF) '0)))))
            (cons g$b$7660$CQIRF g$rest$7661$CQIRF))))))
   (g$string-ci>=?$7599$CQIRF
     g$string-ci>=?$7702$CQIRF
     (case-lambda
       ((g$a$7664$CQIRF g$b$7665$CQIRF . g$rest$7666$CQIRF)
        (begin
          (if (not (string? g$a$7664$CQIRF))
            (assertion-violation 'string-ci>=? '"not a string" g$a$7664$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$7667$CQIRF)
               (begin
                 (if (not (string? g$x$7667$CQIRF))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$7667$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$7668$CQIRF)
                     (begin
                       (set! g$a$7664$CQIRF g$x$7667$CQIRF)
                       g$r$7668$CQIRF)))
                  (>= (string-ci-compare g$a$7664$CQIRF g$x$7667$CQIRF) '0)))))
            (cons g$b$7665$CQIRF g$rest$7666$CQIRF))))))
   (g$char-ci=?$7635$CQIRF
     g$char-ci=?$7703$CQIRF
     (case-lambda
       ((g$a$7669$CQIRF g$b$7670$CQIRF . g$rest$7671$CQIRF)
        (begin
          (if (not (g$char?$6614$CQIRF g$a$7669$CQIRF))
            (assertion-violation 'char-ci=? '"not a char" g$a$7669$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$7672$CQIRF)
               (begin
                 (if (not (g$char?$6614$CQIRF g$x$7672$CQIRF))
                   (assertion-violation 'char-ci=? '"not a char" g$x$7672$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$7673$CQIRF)
                     (begin
                       (set! g$a$7669$CQIRF g$x$7672$CQIRF)
                       g$r$7673$CQIRF)))
                  (= (char->integer (char-upcase g$a$7669$CQIRF))
                     (char->integer (char-upcase g$x$7672$CQIRF)))))))
            (cons g$b$7670$CQIRF g$rest$7671$CQIRF))))))
   (g$char-ci<?$7636$CQIRF
     g$char-ci<?$7704$CQIRF
     (case-lambda
       ((g$a$7674$CQIRF g$b$7675$CQIRF . g$rest$7676$CQIRF)
        (begin
          (if (not (g$char?$6614$CQIRF g$a$7674$CQIRF))
            (assertion-violation 'char-ci<? '"not a char" g$a$7674$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$7677$CQIRF)
               (begin
                 (if (not (g$char?$6614$CQIRF g$x$7677$CQIRF))
                   (assertion-violation 'char-ci<? '"not a char" g$x$7677$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$7678$CQIRF)
                     (begin
                       (set! g$a$7674$CQIRF g$x$7677$CQIRF)
                       g$r$7678$CQIRF)))
                  (< (char->integer (char-upcase g$a$7674$CQIRF))
                     (char->integer (char-upcase g$x$7677$CQIRF)))))))
            (cons g$b$7675$CQIRF g$rest$7676$CQIRF))))))
   (g$char-ci>?$7637$CQIRF
     g$char-ci>?$7705$CQIRF
     (case-lambda
       ((g$a$7679$CQIRF g$b$7680$CQIRF . g$rest$7681$CQIRF)
        (begin
          (if (not (g$char?$6614$CQIRF g$a$7679$CQIRF))
            (assertion-violation 'char-ci>? '"not a char" g$a$7679$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$7682$CQIRF)
               (begin
                 (if (not (g$char?$6614$CQIRF g$x$7682$CQIRF))
                   (assertion-violation 'char-ci>? '"not a char" g$x$7682$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$7683$CQIRF)
                     (begin
                       (set! g$a$7679$CQIRF g$x$7682$CQIRF)
                       g$r$7683$CQIRF)))
                  (> (char->integer (char-upcase g$a$7679$CQIRF))
                     (char->integer (char-upcase g$x$7682$CQIRF)))))))
            (cons g$b$7680$CQIRF g$rest$7681$CQIRF))))))
   (g$char-ci<=?$7638$CQIRF
     g$char-ci<=?$7706$CQIRF
     (case-lambda
       ((g$a$7684$CQIRF g$b$7685$CQIRF . g$rest$7686$CQIRF)
        (begin
          (if (not (g$char?$6614$CQIRF g$a$7684$CQIRF))
            (assertion-violation 'char-ci<=? '"not a char" g$a$7684$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$7687$CQIRF)
               (begin
                 (if (not (g$char?$6614$CQIRF g$x$7687$CQIRF))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$7687$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$7688$CQIRF)
                     (begin
                       (set! g$a$7684$CQIRF g$x$7687$CQIRF)
                       g$r$7688$CQIRF)))
                  (<= (char->integer (char-upcase g$a$7684$CQIRF))
                      (char->integer (char-upcase g$x$7687$CQIRF)))))))
            (cons g$b$7685$CQIRF g$rest$7686$CQIRF))))))
   (g$char-ci>=?$7639$CQIRF
     g$char-ci>=?$7707$CQIRF
     (case-lambda
       ((g$a$7689$CQIRF g$b$7690$CQIRF . g$rest$7691$CQIRF)
        (begin
          (if (not (g$char?$6614$CQIRF g$a$7689$CQIRF))
            (assertion-violation 'char-ci>=? '"not a char" g$a$7689$CQIRF)
            (void))
          (g$for-all$5944$CQIRF
            (case-lambda
              ((g$x$7692$CQIRF)
               (begin
                 (if (not (g$char?$6614$CQIRF g$x$7692$CQIRF))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$7692$CQIRF)
                   (void))
                 ((case-lambda
                    ((g$r$7693$CQIRF)
                     (begin
                       (set! g$a$7689$CQIRF g$x$7692$CQIRF)
                       g$r$7693$CQIRF)))
                  (>= (char->integer (char-upcase g$a$7689$CQIRF))
                      (char->integer (char-upcase g$x$7692$CQIRF)))))))
            (cons g$b$7690$CQIRF g$rest$7691$CQIRF))))))
   (g$string-normalize-nfc$7640$CQIRF
     g$string-normalize-nfc$7708$CQIRF
     (case-lambda
       ((g$s$7694$CQIRF) (string-normalize g$s$7694$CQIRF 'formc))))
   (g$string-normalize-nfd$7641$CQIRF
     g$string-normalize-nfd$7709$CQIRF
     (case-lambda
       ((g$s$7695$CQIRF) (string-normalize g$s$7695$CQIRF 'formd))))
   (g$string-normalize-nfkc$7642$CQIRF
     g$string-normalize-nfkc$7710$CQIRF
     (case-lambda
       ((g$s$7696$CQIRF) (string-normalize g$s$7696$CQIRF 'formkc))))
   (g$string-normalize-nfkd$7643$CQIRF
     g$string-normalize-nfkd$7711$CQIRF
     (case-lambda
       ((g$s$7697$CQIRF) (string-normalize g$s$7697$CQIRF 'formkd)))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$7712$CQIRF
     g$bitwise-if$7743$CQIRF
     (case-lambda
       ((g$ei1$7719$CQIRF g$ei2$7720$CQIRF g$ei3$7721$CQIRF)
        (bitwise-ior
          (bitwise-and g$ei1$7719$CQIRF g$ei2$7720$CQIRF)
          (bitwise-and (bitwise-not g$ei1$7719$CQIRF) g$ei3$7721$CQIRF)))))
   (g$bitwise-copy-bit$7713$CQIRF
     g$bitwise-copy-bit$7744$CQIRF
     (case-lambda
       ((g$ei1$7722$CQIRF g$ei2$7723$CQIRF g$ei3$7724$CQIRF)
        (g$bitwise-if$7712$CQIRF
          (g$bitwise-arithmetic-shift-left$7716$CQIRF '1 g$ei2$7723$CQIRF)
          (g$bitwise-arithmetic-shift-left$7716$CQIRF
            g$ei3$7724$CQIRF
            g$ei2$7723$CQIRF)
          g$ei1$7722$CQIRF))))
   (g$bitwise-bit-field$7714$CQIRF
     g$bitwise-bit-field$7745$CQIRF
     (case-lambda
       ((g$ei1$7725$CQIRF g$ei2$7726$CQIRF g$ei3$7727$CQIRF)
        (g$bitwise-arithmetic-shift-right$7717$CQIRF
          (bitwise-and
            g$ei1$7725$CQIRF
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$7716$CQIRF
                '-1
                g$ei3$7727$CQIRF)))
          g$ei2$7726$CQIRF))))
   (g$bitwise-copy-bit-field$7715$CQIRF
     g$bitwise-copy-bit-field$7746$CQIRF
     (case-lambda
       ((g$to$7728$CQIRF g$start$7729$CQIRF g$end$7730$CQIRF g$from$7731$CQIRF)
        (g$bitwise-if$7712$CQIRF
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$7716$CQIRF '-1 g$start$7729$CQIRF)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$7716$CQIRF
                '-1
                g$end$7730$CQIRF)))
          (g$bitwise-arithmetic-shift-left$7716$CQIRF
            g$from$7731$CQIRF
            g$start$7729$CQIRF)
          g$to$7728$CQIRF))))
   (g$bitwise-arithmetic-shift-left$7716$CQIRF
     g$bitwise-arithmetic-shift-left$7747$CQIRF
     (case-lambda
       ((g$ei1$7732$CQIRF g$ei2$7733$CQIRF)
        (bitwise-arithmetic-shift g$ei1$7732$CQIRF g$ei2$7733$CQIRF))))
   (g$bitwise-arithmetic-shift-right$7717$CQIRF
     g$bitwise-arithmetic-shift-right$7748$CQIRF
     (case-lambda
       ((g$ei1$7734$CQIRF g$ei2$7735$CQIRF)
        (bitwise-arithmetic-shift g$ei1$7734$CQIRF (- g$ei2$7735$CQIRF)))))
   (g$bitwise-rotate-bit-field$7718$CQIRF
     g$bitwise-rotate-bit-field$7749$CQIRF
     (case-lambda
       ((g$n$7736$CQIRF g$start$7737$CQIRF g$end$7738$CQIRF g$count$7739$CQIRF)
        ((case-lambda
           ((g$width$7740$CQIRF)
            (if (g$positive?$6653$CQIRF g$width$7740$CQIRF)
              ((case-lambda
                 ((g$count$7741$CQIRF g$field$7742$CQIRF)
                  (g$bitwise-copy-bit-field$7715$CQIRF
                    g$n$7736$CQIRF
                    g$start$7737$CQIRF
                    g$end$7738$CQIRF
                    (bitwise-ior
                      (g$bitwise-arithmetic-shift-left$7716$CQIRF
                        g$field$7742$CQIRF
                        g$count$7741$CQIRF)
                      (g$bitwise-arithmetic-shift-right$7717$CQIRF
                        g$field$7742$CQIRF
                        (- g$width$7740$CQIRF g$count$7741$CQIRF))))))
               (g$mod$6610$CQIRF g$count$7739$CQIRF g$width$7740$CQIRF)
               (g$bitwise-bit-field$7714$CQIRF
                 g$n$7736$CQIRF
                 g$start$7737$CQIRF
                 g$end$7738$CQIRF))
              g$n$7736$CQIRF)))
         (- g$end$7738$CQIRF g$start$7737$CQIRF))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxdiv$7750$CQIRF
     g$fxdiv$7855$CQIRF
     (case-lambda
       ((g$fx1$7771$CQIRF g$fx2$7772$CQIRF)
        (call-with-values
          (case-lambda (() (fxdiv-and-mod g$fx1$7771$CQIRF g$fx2$7772$CQIRF)))
          (case-lambda
            ((g$n$7775$CQIRF g$d$7776$CQIRF)
             ((case-lambda ((g$d$7777$CQIRF g$n$7778$CQIRF) g$n$7778$CQIRF))
              g$d$7776$CQIRF
              g$n$7775$CQIRF)))))))
   (g$fxdiv0$7751$CQIRF
     g$fxdiv0$7856$CQIRF
     (case-lambda
       ((g$fx1$7779$CQIRF g$fx2$7780$CQIRF)
        (call-with-values
          (case-lambda (() (fxdiv0-and-mod0 g$fx1$7779$CQIRF g$fx2$7780$CQIRF)))
          (case-lambda
            ((g$n$7783$CQIRF g$d$7784$CQIRF)
             ((case-lambda ((g$d$7785$CQIRF g$n$7786$CQIRF) g$n$7786$CQIRF))
              g$d$7784$CQIRF
              g$n$7783$CQIRF)))))))
   (g$fxmod$7752$CQIRF
     g$fxmod$7857$CQIRF
     (case-lambda
       ((g$fx1$7787$CQIRF g$fx2$7788$CQIRF)
        (call-with-values
          (case-lambda (() (fxdiv-and-mod g$fx1$7787$CQIRF g$fx2$7788$CQIRF)))
          (case-lambda
            ((g$n$7791$CQIRF g$d$7792$CQIRF)
             ((case-lambda ((g$d$7793$CQIRF g$n$7794$CQIRF) g$d$7793$CQIRF))
              g$d$7792$CQIRF
              g$n$7791$CQIRF)))))))
   (g$fxmod0$7753$CQIRF
     g$fxmod0$7858$CQIRF
     (case-lambda
       ((g$fx1$7795$CQIRF g$fx2$7796$CQIRF)
        (call-with-values
          (case-lambda (() (fxdiv0-and-mod0 g$fx1$7795$CQIRF g$fx2$7796$CQIRF)))
          (case-lambda
            ((g$n$7799$CQIRF g$d$7800$CQIRF)
             ((case-lambda ((g$d$7801$CQIRF g$n$7802$CQIRF) g$d$7801$CQIRF))
              g$d$7800$CQIRF
              g$n$7799$CQIRF)))))))
   (g$fxpositive?$7754$CQIRF
     g$fxpositive?$7859$CQIRF
     (case-lambda
       ((g$r$7803$CQIRF)
        (begin
          (if (not (g$fixnum?$6620$CQIRF g$r$7803$CQIRF))
            (assertion-violation 'fxpositive? '"not a fixnum" g$r$7803$CQIRF)
            (void))
          (fx<? '0 g$r$7803$CQIRF)))))
   (g$fxnegative?$7755$CQIRF
     g$fxnegative?$7860$CQIRF
     (case-lambda
       ((g$r$7804$CQIRF)
        (begin
          (if (not (g$fixnum?$6620$CQIRF g$r$7804$CQIRF))
            (assertion-violation 'fxnegative? '"not a fixnum" g$r$7804$CQIRF)
            (void))
          (fx>? '0 g$r$7804$CQIRF)))))
   (g$fxzero?$7756$CQIRF
     g$fxzero?$7861$CQIRF
     (case-lambda
       ((g$r$7805$CQIRF)
        (begin
          (if (not (g$fixnum?$6620$CQIRF g$r$7805$CQIRF))
            (assertion-violation 'fxzero? '"not a fixnum" g$r$7805$CQIRF)
            (void))
          (fx=? '0 g$r$7805$CQIRF)))))
   (g$fxeven?$7757$CQIRF
     g$fxeven?$7862$CQIRF
     (case-lambda
       ((g$n$7806$CQIRF)
        (begin
          (if (not (g$fixnum?$6620$CQIRF g$n$7806$CQIRF))
            (assertion-violation 'fxeven? '"not a fixnum" g$n$7806$CQIRF)
            (void))
          (fx=? '0 (g$fxmod$7752$CQIRF g$n$7806$CQIRF '2))))))
   (g$fxodd?$7758$CQIRF
     g$fxodd?$7863$CQIRF
     (case-lambda
       ((g$n$7807$CQIRF)
        (begin
          (if (not (g$fixnum?$6620$CQIRF g$n$7807$CQIRF))
            (assertion-violation 'fxodd? '"not a fixnum" g$n$7807$CQIRF)
            (void))
          (fx=? '1 (g$fxmod$7752$CQIRF g$n$7807$CQIRF '2))))))
   (g$fxmax$7759$CQIRF
     g$fxmax$7864$CQIRF
     (case-lambda
       ((g$a$7808$CQIRF . g$rest$7809$CQIRF)
        (begin
          (if (not (g$fixnum?$6620$CQIRF g$a$7808$CQIRF))
            (assertion-violation 'fxmax '"not a fixnum" g$a$7808$CQIRF)
            (void))
          (g$fold-left$5949$CQIRF
            (case-lambda
              ((g$a$7810$CQIRF g$b$7811$CQIRF)
               (if (fx<? g$a$7810$CQIRF g$b$7811$CQIRF)
                 g$b$7811$CQIRF
                 g$a$7810$CQIRF)))
            g$a$7808$CQIRF
            g$rest$7809$CQIRF)))))
   (g$fxmin$7760$CQIRF
     g$fxmin$7865$CQIRF
     (case-lambda
       ((g$a$7812$CQIRF . g$rest$7813$CQIRF)
        (begin
          (if (not (g$fixnum?$6620$CQIRF g$a$7812$CQIRF))
            (assertion-violation 'fxmin '"not a fixnum" g$a$7812$CQIRF)
            (void))
          (g$fold-left$5949$CQIRF
            (case-lambda
              ((g$a$7814$CQIRF g$b$7815$CQIRF)
               (if (fx>? g$a$7814$CQIRF g$b$7815$CQIRF)
                 g$b$7815$CQIRF
                 g$a$7814$CQIRF)))
            g$a$7812$CQIRF
            g$rest$7813$CQIRF)))))
   (g$fx*/carry$7761$CQIRF
     g$fx*/carry$7866$CQIRF
     (case-lambda
       ((g$fx1$7816$CQIRF g$fx2$7817$CQIRF g$fx3$7818$CQIRF)
        ((case-lambda
           ((g$s$7819$CQIRF g$e$7820$CQIRF)
            (values
              (g$mod0$6611$CQIRF g$s$7819$CQIRF g$e$7820$CQIRF)
              (g$div0$6609$CQIRF g$s$7819$CQIRF g$e$7820$CQIRF))))
         (+ (* g$fx1$7816$CQIRF g$fx2$7817$CQIRF) g$fx3$7818$CQIRF)
         (expt '2 (g$fixnum-width$6622$CQIRF))))))
   (g$fx-/carry$7762$CQIRF
     g$fx-/carry$7867$CQIRF
     (case-lambda
       ((g$fx1$7821$CQIRF g$fx2$7822$CQIRF g$fx3$7823$CQIRF)
        ((case-lambda
           ((g$s$7824$CQIRF g$e$7825$CQIRF)
            (values
              (g$mod0$6611$CQIRF g$s$7824$CQIRF g$e$7825$CQIRF)
              (g$div0$6609$CQIRF g$s$7824$CQIRF g$e$7825$CQIRF))))
         (- g$fx1$7821$CQIRF g$fx2$7822$CQIRF g$fx3$7823$CQIRF)
         (expt '2 (g$fixnum-width$6622$CQIRF))))))
   (g$fx+/carry$7763$CQIRF
     g$fx+/carry$7868$CQIRF
     (case-lambda
       ((g$fx1$7826$CQIRF g$fx2$7827$CQIRF g$fx3$7828$CQIRF)
        ((case-lambda
           ((g$s$7829$CQIRF g$e$7830$CQIRF)
            (values
              (g$mod0$6611$CQIRF g$s$7829$CQIRF g$e$7830$CQIRF)
              (g$div0$6609$CQIRF g$s$7829$CQIRF g$e$7830$CQIRF))))
         (+ g$fx1$7826$CQIRF g$fx2$7827$CQIRF g$fx3$7828$CQIRF)
         (expt '2 (g$fixnum-width$6622$CQIRF))))))
   (g$fxif$7764$CQIRF
     g$fxif$7869$CQIRF
     (case-lambda
       ((g$fx1$7831$CQIRF g$fx2$7832$CQIRF g$fx3$7833$CQIRF)
        (fxior
          (fxand g$fx1$7831$CQIRF g$fx2$7832$CQIRF)
          (fxand (fxnot g$fx1$7831$CQIRF) g$fx3$7833$CQIRF)))))
   (g$fxcopy-bit$7765$CQIRF
     g$fxcopy-bit$7870$CQIRF
     (case-lambda
       ((g$fx1$7834$CQIRF g$fx2$7835$CQIRF g$fx3$7836$CQIRF)
        (g$fxif$7764$CQIRF
          (g$fxarithmetic-shift-left$7768$CQIRF '1 g$fx2$7835$CQIRF)
          (g$fxarithmetic-shift-left$7768$CQIRF
            g$fx3$7836$CQIRF
            g$fx2$7835$CQIRF)
          g$fx1$7834$CQIRF))))
   (g$fxbit-field$7766$CQIRF
     g$fxbit-field$7871$CQIRF
     (case-lambda
       ((g$fx1$7837$CQIRF g$fx2$7838$CQIRF g$fx3$7839$CQIRF)
        (g$fxarithmetic-shift-right$7769$CQIRF
          (fxand
            g$fx1$7837$CQIRF
            (fxnot (g$fxarithmetic-shift-left$7768$CQIRF '-1 g$fx3$7839$CQIRF)))
          g$fx2$7838$CQIRF))))
   (g$fxcopy-bit-field$7767$CQIRF
     g$fxcopy-bit-field$7872$CQIRF
     (case-lambda
       ((g$to$7840$CQIRF g$start$7841$CQIRF g$end$7842$CQIRF g$from$7843$CQIRF)
        (g$fxif$7764$CQIRF
          (fxand
            (g$fxarithmetic-shift-left$7768$CQIRF '-1 g$start$7841$CQIRF)
            (fxnot (g$fxarithmetic-shift-left$7768$CQIRF '-1 g$end$7842$CQIRF)))
          (g$fxarithmetic-shift-left$7768$CQIRF
            g$from$7843$CQIRF
            g$start$7841$CQIRF)
          g$to$7840$CQIRF))))
   (g$fxarithmetic-shift-left$7768$CQIRF
     g$fxarithmetic-shift-left$7873$CQIRF
     (case-lambda
       ((g$fx1$7844$CQIRF g$fx2$7845$CQIRF)
        (fxarithmetic-shift g$fx1$7844$CQIRF g$fx2$7845$CQIRF))))
   (g$fxarithmetic-shift-right$7769$CQIRF
     g$fxarithmetic-shift-right$7874$CQIRF
     (case-lambda
       ((g$fx1$7846$CQIRF g$fx2$7847$CQIRF)
        (fxarithmetic-shift g$fx1$7846$CQIRF (fx- g$fx2$7847$CQIRF)))))
   (g$fxrotate-bit-field$7770$CQIRF
     g$fxrotate-bit-field$7875$CQIRF
     (case-lambda
       ((g$n$7848$CQIRF g$start$7849$CQIRF g$end$7850$CQIRF g$count$7851$CQIRF)
        ((case-lambda
           ((g$width$7852$CQIRF)
            (if (g$fxpositive?$7754$CQIRF g$width$7852$CQIRF)
              ((case-lambda
                 ((g$count$7853$CQIRF g$field$7854$CQIRF)
                  (g$fxcopy-bit-field$7767$CQIRF
                    g$n$7848$CQIRF
                    g$start$7849$CQIRF
                    g$end$7850$CQIRF
                    (fxior
                      (g$fxarithmetic-shift-left$7768$CQIRF
                        g$field$7854$CQIRF
                        g$count$7853$CQIRF)
                      (g$fxarithmetic-shift-right$7769$CQIRF
                        g$field$7854$CQIRF
                        (fx- g$width$7852$CQIRF g$count$7853$CQIRF))))))
               (g$fxmod$7752$CQIRF g$count$7851$CQIRF g$width$7852$CQIRF)
               (g$fxbit-field$7766$CQIRF
                 g$n$7848$CQIRF
                 g$start$7849$CQIRF
                 g$end$7850$CQIRF))
              g$n$7848$CQIRF)))
         (fx- g$end$7850$CQIRF g$start$7849$CQIRF))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fldiv-and-mod$7876$CQIRF
     g$fldiv-and-mod$7993$CQIRF
     (case-lambda
       ((g$fl1$7908$CQIRF g$fl2$7909$CQIRF)
        (call-with-values
          (case-lambda (() (div-and-mod g$fl1$7908$CQIRF g$fl2$7909$CQIRF)))
          (case-lambda
            ((g$n$7912$CQIRF g$d$7913$CQIRF)
             ((case-lambda
                ((g$d$7914$CQIRF g$n$7915$CQIRF)
                 (values (real->flonum g$n$7915$CQIRF) g$d$7914$CQIRF)))
              g$d$7913$CQIRF
              g$n$7912$CQIRF)))))))
   (g$fldiv0-and-mod0$7877$CQIRF
     g$fldiv0-and-mod0$7994$CQIRF
     (case-lambda
       ((g$fl1$7916$CQIRF g$fl2$7917$CQIRF)
        (call-with-values
          (case-lambda (() (div0-and-mod0 g$fl1$7916$CQIRF g$fl2$7917$CQIRF)))
          (case-lambda
            ((g$n$7920$CQIRF g$d$7921$CQIRF)
             ((case-lambda
                ((g$d$7922$CQIRF g$n$7923$CQIRF)
                 (values (real->flonum g$n$7923$CQIRF) g$d$7922$CQIRF)))
              g$d$7921$CQIRF
              g$n$7920$CQIRF)))))))
   (g$fldiv$7878$CQIRF
     g$fldiv$7995$CQIRF
     (case-lambda
       ((g$fl1$7924$CQIRF g$fl2$7925$CQIRF)
        (call-with-values
          (case-lambda
            (() (g$fldiv-and-mod$7876$CQIRF g$fl1$7924$CQIRF g$fl2$7925$CQIRF)))
          (case-lambda
            ((g$n$7928$CQIRF g$d$7929$CQIRF)
             ((case-lambda ((g$d$7930$CQIRF g$n$7931$CQIRF) g$n$7931$CQIRF))
              g$d$7929$CQIRF
              g$n$7928$CQIRF)))))))
   (g$fldiv0$7879$CQIRF
     g$fldiv0$7996$CQIRF
     (case-lambda
       ((g$fl1$7932$CQIRF g$fl2$7933$CQIRF)
        (call-with-values
          (case-lambda
            (()
             (g$fldiv0-and-mod0$7877$CQIRF g$fl1$7932$CQIRF g$fl2$7933$CQIRF)))
          (case-lambda
            ((g$n$7936$CQIRF g$d$7937$CQIRF)
             ((case-lambda ((g$d$7938$CQIRF g$n$7939$CQIRF) g$n$7939$CQIRF))
              g$d$7937$CQIRF
              g$n$7936$CQIRF)))))))
   (g$flmod$7880$CQIRF
     g$flmod$7997$CQIRF
     (case-lambda
       ((g$fl1$7940$CQIRF g$fl2$7941$CQIRF)
        (call-with-values
          (case-lambda
            (() (g$fldiv-and-mod$7876$CQIRF g$fl1$7940$CQIRF g$fl2$7941$CQIRF)))
          (case-lambda
            ((g$n$7944$CQIRF g$d$7945$CQIRF)
             ((case-lambda ((g$d$7946$CQIRF g$n$7947$CQIRF) g$d$7946$CQIRF))
              g$d$7945$CQIRF
              g$n$7944$CQIRF)))))))
   (g$flmod0$7881$CQIRF
     g$flmod0$7998$CQIRF
     (case-lambda
       ((g$fl1$7948$CQIRF g$fl2$7949$CQIRF)
        (call-with-values
          (case-lambda
            (()
             (g$fldiv0-and-mod0$7877$CQIRF g$fl1$7948$CQIRF g$fl2$7949$CQIRF)))
          (case-lambda
            ((g$n$7952$CQIRF g$d$7953$CQIRF)
             ((case-lambda ((g$d$7954$CQIRF g$n$7955$CQIRF) g$d$7954$CQIRF))
              g$d$7953$CQIRF
              g$n$7952$CQIRF)))))))
   (g$flinteger?$7882$CQIRF
     g$flinteger?$7999$CQIRF
     (case-lambda
       ((g$fl$7956$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7956$CQIRF))
            (assertion-violation 'flinteger? '"not a flonum" g$fl$7956$CQIRF)
            (void))
          (fl=? '0.0 (g$flmod$7880$CQIRF g$fl$7956$CQIRF '1.0))))))
   (g$flfinite?$7883$CQIRF
     g$flfinite?$8000$CQIRF
     (case-lambda
       ((g$fl$7957$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7957$CQIRF))
            (assertion-violation 'flfinite? '"not a flonum" g$fl$7957$CQIRF)
            (void))
          (not (g$flinfinite?$7884$CQIRF g$fl$7957$CQIRF))))))
   (g$flinfinite?$7884$CQIRF
     g$flinfinite?$8001$CQIRF
     (case-lambda
       ((g$fl$7958$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7958$CQIRF))
            (assertion-violation 'flinfinite? '"not a flonum" g$fl$7958$CQIRF)
            (void))
          (clr-call-internal 'system.double 'isinfinity '() g$fl$7958$CQIRF)))))
   (g$flnan?$7885$CQIRF
     g$flnan?$8002$CQIRF
     (case-lambda
       ((g$fl$7959$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7959$CQIRF))
            (assertion-violation 'flnan? '"not a flonum" g$fl$7959$CQIRF)
            (void))
          (clr-call-internal 'system.double 'isnan '() g$fl$7959$CQIRF)))))
   (g$flsin$7886$CQIRF
     g$flsin$8003$CQIRF
     (case-lambda
       ((g$fl$7960$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7960$CQIRF))
            (assertion-violation 'flsin '"not a flonum" g$fl$7960$CQIRF)
            (void))
          (clr-call-internal 'system.math 'sin '() g$fl$7960$CQIRF)))))
   (g$flcos$7887$CQIRF
     g$flcos$8004$CQIRF
     (case-lambda
       ((g$fl$7961$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7961$CQIRF))
            (assertion-violation 'flcos '"not a flonum" g$fl$7961$CQIRF)
            (void))
          (clr-call-internal 'system.math 'cos '() g$fl$7961$CQIRF)))))
   (g$fltan$7888$CQIRF
     g$fltan$8005$CQIRF
     (case-lambda
       ((g$fl$7962$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7962$CQIRF))
            (assertion-violation 'fltan '"not a flonum" g$fl$7962$CQIRF)
            (void))
          (clr-call-internal 'system.math 'tan '() g$fl$7962$CQIRF)))))
   (g$flasin$7889$CQIRF
     g$flasin$8006$CQIRF
     (case-lambda
       ((g$fl$7963$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7963$CQIRF))
            (assertion-violation 'flasin '"not a flonum" g$fl$7963$CQIRF)
            (void))
          (clr-call-internal 'system.math 'asin '() g$fl$7963$CQIRF)))))
   (g$flacos$7890$CQIRF
     g$flacos$8007$CQIRF
     (case-lambda
       ((g$fl$7964$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7964$CQIRF))
            (assertion-violation 'flacos '"not a flonum" g$fl$7964$CQIRF)
            (void))
          (clr-call-internal 'system.math 'acos '() g$fl$7964$CQIRF)))))
   (g$flatan$7891$CQIRF
     g$flatan$8008$CQIRF
     (case-lambda
       ((g$fl$7965$CQIRF)
        (clr-call-internal 'system.math 'atan '() g$fl$7965$CQIRF))
       ((g$fl1$7966$CQIRF g$fl2$7967$CQIRF)
        (clr-call-internal
          'system.math
          'atan2
          '()
          g$fl1$7966$CQIRF
          g$fl2$7967$CQIRF))))
   (g$fllog$7892$CQIRF
     g$fllog$8009$CQIRF
     (case-lambda
       ((g$fl$7968$CQIRF)
        (clr-call-internal 'system.math 'log '() g$fl$7968$CQIRF))
       ((g$fl1$7969$CQIRF g$fl2$7970$CQIRF)
        (clr-call-internal
          'system.math
          'log
          '()
          g$fl1$7969$CQIRF
          g$fl2$7970$CQIRF))))
   (g$flsqrt$7893$CQIRF
     g$flsqrt$8010$CQIRF
     (case-lambda
       ((g$fl$7971$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7971$CQIRF))
            (assertion-violation 'flsqrt '"not a flonum" g$fl$7971$CQIRF)
            (void))
          (clr-call-internal 'system.math 'sqrt '() g$fl$7971$CQIRF)))))
   (g$flexp$7894$CQIRF
     g$flexp$8011$CQIRF
     (case-lambda
       ((g$fl$7972$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7972$CQIRF))
            (assertion-violation 'flexp '"not a flonum" g$fl$7972$CQIRF)
            (void))
          (clr-call-internal 'system.math 'exp '() g$fl$7972$CQIRF)))))
   (g$flexpt$7895$CQIRF
     g$flexpt$8012$CQIRF
     (case-lambda
       ((g$fl$7973$CQIRF g$n$7974$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7973$CQIRF))
            (assertion-violation 'flexpt '"not a flonum" g$fl$7973$CQIRF)
            (void))
          (clr-call-internal
            'system.math
            'pow
            '()
            g$fl$7973$CQIRF
            g$n$7974$CQIRF)))))
   (g$flceiling$7896$CQIRF
     g$flceiling$8013$CQIRF
     (case-lambda
       ((g$fl$7975$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7975$CQIRF))
            (assertion-violation 'flceiling '"not a flonum" g$fl$7975$CQIRF)
            (void))
          (clr-call-internal
            'system.math
            '"ceiling(double)"
            '()
            g$fl$7975$CQIRF)))))
   (g$flfloor$7897$CQIRF
     g$flfloor$8014$CQIRF
     (case-lambda
       ((g$fl$7976$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7976$CQIRF))
            (assertion-violation 'flfloor '"not a flonum" g$fl$7976$CQIRF)
            (void))
          (clr-call-internal
            'system.math
            '"floor(double)"
            '()
            g$fl$7976$CQIRF)))))
   (g$fltruncate$7898$CQIRF
     g$fltruncate$8015$CQIRF
     (case-lambda
       ((g$fl$7977$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7977$CQIRF))
            (assertion-violation 'fltruncate '"not a flonum" g$fl$7977$CQIRF)
            (void))
          (clr-call-internal
            'system.math
            '"truncate(double)"
            '()
            g$fl$7977$CQIRF)))))
   (g$flround$7899$CQIRF
     g$flround$8016$CQIRF
     (case-lambda
       ((g$fl$7978$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7978$CQIRF))
            (assertion-violation 'flround '"not a flonum" g$fl$7978$CQIRF)
            (void))
          (clr-call-internal
            'system.math
            '"round(double)"
            '()
            g$fl$7978$CQIRF)))))
   (g$flabs$7900$CQIRF
     g$flabs$8017$CQIRF
     (case-lambda
       ((g$fl$7979$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$fl$7979$CQIRF))
            (assertion-violation 'flabs '"not a flonum" g$fl$7979$CQIRF)
            (void))
          (clr-call-internal
            'system.math
            '"abs(double)"
            '()
            g$fl$7979$CQIRF)))))
   (g$flpositive?$7901$CQIRF
     g$flpositive?$8018$CQIRF
     (case-lambda
       ((g$r$7980$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$r$7980$CQIRF))
            (assertion-violation 'flpositive? '"not a flonum" g$r$7980$CQIRF)
            (void))
          (fl<? '0.0 g$r$7980$CQIRF)))))
   (g$flnegative?$7902$CQIRF
     g$flnegative?$8019$CQIRF
     (case-lambda
       ((g$r$7981$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$r$7981$CQIRF))
            (assertion-violation 'flnegative? '"not a flonum" g$r$7981$CQIRF)
            (void))
          (fl>? '0.0 g$r$7981$CQIRF)))))
   (g$flzero?$7903$CQIRF
     g$flzero?$8020$CQIRF
     (case-lambda
       ((g$r$7982$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$r$7982$CQIRF))
            (assertion-violation 'flzero? '"not a flonum" g$r$7982$CQIRF)
            (void))
          (fl=? '0.0 g$r$7982$CQIRF)))))
   (g$fleven?$7904$CQIRF
     g$fleven?$8021$CQIRF
     (case-lambda
       ((g$n$7983$CQIRF)
        (begin
          (if (not (integer-valued? g$n$7983$CQIRF))
            (assertion-violation 'fleven? '"not integer valued" g$n$7983$CQIRF)
            (void))
          (fl=? '0.0 (g$flmod$7880$CQIRF g$n$7983$CQIRF '2.0))))))
   (g$flodd?$7905$CQIRF
     g$flodd?$8022$CQIRF
     (case-lambda
       ((g$n$7984$CQIRF)
        (begin
          (if (not (integer-valued? g$n$7984$CQIRF))
            (assertion-violation 'flodd? '"not integer valued" g$n$7984$CQIRF)
            (void))
          (fl=? '1.0 (g$flmod$7880$CQIRF g$n$7984$CQIRF '2.0))))))
   (g$flmax$7906$CQIRF
     g$flmax$8023$CQIRF
     (case-lambda
       ((g$a$7985$CQIRF . g$rest$7986$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$a$7985$CQIRF))
            (assertion-violation 'flmax '"not a flonum" g$a$7985$CQIRF)
            (void))
          (g$fold-left$5949$CQIRF
            (case-lambda
              ((g$a$7987$CQIRF g$b$7988$CQIRF)
               (if (fl<? g$a$7987$CQIRF g$b$7988$CQIRF)
                 g$b$7988$CQIRF
                 g$a$7987$CQIRF)))
            g$a$7985$CQIRF
            g$rest$7986$CQIRF)))))
   (g$flmin$7907$CQIRF
     g$flmin$8024$CQIRF
     (case-lambda
       ((g$a$7989$CQIRF . g$rest$7990$CQIRF)
        (begin
          (if (not (g$flonum?$6621$CQIRF g$a$7989$CQIRF))
            (assertion-violation 'flmin '"not a flonum" g$a$7989$CQIRF)
            (void))
          (g$fold-left$5949$CQIRF
            (case-lambda
              ((g$a$7991$CQIRF g$b$7992$CQIRF)
               (if (fl>? g$a$7991$CQIRF g$b$7992$CQIRF)
                 g$b$7992$CQIRF
                 g$a$7991$CQIRF)))
            g$a$7989$CQIRF
            g$rest$7990$CQIRF))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$8026$CQIRF
     g$using$8046$CQIRF
     (clr-using-internal 'ironscheme.runtime))
   (g$put-datum$8027$CQIRF
     g$put-datum$8047$CQIRF
     (case-lambda
       ((g$p$8035$CQIRF g$datum$8036$CQIRF)
        (write g$datum$8036$CQIRF g$p$8035$CQIRF))))
   (g$get-datum$8028$CQIRF g$get-datum$8048$CQIRF read)
   (g$get-output-string$8029$CQIRF
     g$get-output-string$8049$CQIRF
     (case-lambda
       ((g$port$8037$CQIRF)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$8037$CQIRF))))
   (g$open-output-string$8030$CQIRF
     g$open-output-string$8050$CQIRF
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$8031$CQIRF
     g$open-string-output-port$8051$CQIRF
     (case-lambda
       (()
        ((case-lambda
           ((g$p$8038$CQIRF)
            (values
              g$p$8038$CQIRF
              (case-lambda
                (() (g$get-output-string$8029$CQIRF g$p$8038$CQIRF))))))
         (g$open-output-string$8030$CQIRF)))))
   (g$port?$8032$CQIRF
     g$port?$8052$CQIRF
     (case-lambda
       ((g$obj$8039$CQIRF)
        ((case-lambda
           ((g$t$8040$CQIRF)
            (if g$t$8040$CQIRF
              g$t$8040$CQIRF
              (begin '#f (binary-port? g$obj$8039$CQIRF)))))
         (textual-port? g$obj$8039$CQIRF)))))
   (g$call-with-string-output-port$8033$CQIRF
     g$call-with-string-output-port$8053$CQIRF
     (case-lambda
       ((g$proc$8041$CQIRF)
        ((case-lambda
           ((g$p$8042$CQIRF)
            (begin
              (g$call-with-port$8034$CQIRF g$p$8042$CQIRF g$proc$8041$CQIRF)
              (g$get-output-string$8029$CQIRF g$p$8042$CQIRF))))
         (g$open-output-string$8030$CQIRF)))))
   (g$call-with-port$8034$CQIRF
     g$call-with-port$8054$CQIRF
     (case-lambda
       ((g$port$8043$CQIRF g$proc$8044$CQIRF)
        ((case-lambda
           ((g$r$8045$CQIRF)
            (begin (close-port g$port$8043$CQIRF) g$r$8045$CQIRF)))
         (g$proc$8044$CQIRF g$port$8043$CQIRF))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$8055$CQIRF
     g$peek-char$8107$CQIRF
     (case-lambda
       (() (g$peek-char$8055$CQIRF (current-input-port)))
       ((g$port$8079$CQIRF) (lookahead-char g$port$8079$CQIRF))))
   (g$read-char$8056$CQIRF
     g$read-char$8108$CQIRF
     (case-lambda
       (() (g$read-char$8056$CQIRF (current-input-port)))
       ((g$port$8080$CQIRF) (get-char g$port$8080$CQIRF))))
   (g$write-char$8057$CQIRF
     g$write-char$8109$CQIRF
     (case-lambda
       ((g$chr$8081$CQIRF)
        (g$write-char$8057$CQIRF g$chr$8081$CQIRF (current-output-port)))
       ((g$chr$8082$CQIRF g$port$8083$CQIRF)
        (put-char g$port$8083$CQIRF g$chr$8082$CQIRF))))
   (g$with-input-from-file$8074$CQIRF
     g$with-input-from-file$8110$CQIRF
     (case-lambda
       ((g$filename$8084$CQIRF g$thunk$8085$CQIRF)
        ((case-lambda
           ((g$current-input-port$8088$CQIRF g$t$8089$CQIRF)
            ((case-lambda
               ((g$swap$8090$CQIRF)
                (dynamic-wind
                  g$swap$8090$CQIRF
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$8085$CQIRF)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$8090$CQIRF)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$8091$CQIRF)
                    (begin
                      (g$current-input-port$8088$CQIRF g$t$8089$CQIRF)
                      (set! g$t$8089$CQIRF g$t$8091$CQIRF))))
                 (g$current-input-port$8088$CQIRF)))))))
         current-input-port
         (open-input-file g$filename$8084$CQIRF)))))
   (g$with-output-to-file$8075$CQIRF
     g$with-output-to-file$8111$CQIRF
     (case-lambda
       ((g$filename$8092$CQIRF g$thunk$8093$CQIRF)
        ((case-lambda
           ((g$current-output-port$8096$CQIRF g$t$8097$CQIRF)
            ((case-lambda
               ((g$swap$8098$CQIRF)
                (dynamic-wind
                  g$swap$8098$CQIRF
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$8093$CQIRF)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$8098$CQIRF)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$8099$CQIRF)
                    (begin
                      (g$current-output-port$8096$CQIRF g$t$8097$CQIRF)
                      (set! g$t$8097$CQIRF g$t$8099$CQIRF))))
                 (g$current-output-port$8096$CQIRF)))))))
         current-output-port
         (open-output-file g$filename$8092$CQIRF)))))
   (g$call-with-input-file$8076$CQIRF
     g$call-with-input-file$8112$CQIRF
     (case-lambda
       ((g$filename$8100$CQIRF g$proc$8101$CQIRF)
        ((case-lambda
           ((g$p$8102$CQIRF)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$8101$CQIRF g$p$8102$CQIRF)))
              (case-lambda (() (close-input-port g$p$8102$CQIRF))))))
         (open-input-file g$filename$8100$CQIRF)))))
   (g$call-with-output-file$8077$CQIRF
     g$call-with-output-file$8113$CQIRF
     (case-lambda
       ((g$filename$8103$CQIRF g$proc$8104$CQIRF)
        ((case-lambda
           ((g$p$8105$CQIRF)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$8104$CQIRF g$p$8105$CQIRF)))
              (case-lambda (() (close-output-port g$p$8105$CQIRF))))))
         (open-output-file g$filename$8103$CQIRF)))))
   (g$newline$8078$CQIRF
     g$newline$8114$CQIRF
     (case-lambda
       (() (g$newline$8078$CQIRF (current-output-port)))
       ((g$port$8106$CQIRF) (display '"
" g$port$8106$CQIRF)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$6631$8115$CQIRF
     g$6631$8228$CQIRF
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$6633$8116$CQIRF g$6633$8229$CQIRF '#f)
   (g$6632$8117$CQIRF
     g$6632$8230$CQIRF
     (make-record-constructor-descriptor
       g$6631$8115$CQIRF
       '#f
       g$6633$8116$CQIRF))
   (g$enum?$8120$CQIRF
     g$enum?$8231$CQIRF
     (record-predicate g$6631$8115$CQIRF))
   (g$make-enum$8121$CQIRF
     g$make-enum$8232$CQIRF
     (record-constructor g$6632$8117$CQIRF))
   (g$enum-value$8122$CQIRF
     g$enum-value$8233$CQIRF
     (record-accessor g$6631$8115$CQIRF '0))
   (g$enum-info$8123$CQIRF
     g$enum-info$8234$CQIRF
     (record-accessor g$6631$8115$CQIRF '1))
   (g$6642$8124$CQIRF
     g$6642$8235$CQIRF
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$6644$8125$CQIRF g$6644$8236$CQIRF '#f)
   (g$6643$8126$CQIRF
     g$6643$8237$CQIRF
     (make-record-constructor-descriptor
       g$6642$8124$CQIRF
       '#f
       g$6644$8125$CQIRF))
   (g$enum-universe?$8129$CQIRF
     g$enum-universe?$8238$CQIRF
     (record-predicate g$6642$8124$CQIRF))
   (g$make-enum-universe$8130$CQIRF
     g$make-enum-universe$8239$CQIRF
     (record-constructor g$6643$8126$CQIRF))
   (g$enum-universe-id$8131$CQIRF
     g$enum-universe-id$8240$CQIRF
     (record-accessor g$6642$8124$CQIRF '0))
   (g$enum-universe-symbols$8132$CQIRF
     g$enum-universe-symbols$8241$CQIRF
     (record-accessor g$6642$8124$CQIRF '1))
   (g$enum-universe-mapping$8133$CQIRF
     g$enum-universe-mapping$8242$CQIRF
     (record-accessor g$6642$8124$CQIRF '2))
   (g$enum-universe-value$8134$CQIRF
     g$enum-universe-value$8243$CQIRF
     (record-accessor g$6642$8124$CQIRF '3))
   (g$enum-type=?$8135$CQIRF
     g$enum-type=?$8244$CQIRF
     (case-lambda
       ((g$enumset1$8157$CQIRF g$enumset2$8158$CQIRF)
        (eq? (g$enum-universe-id$8131$CQIRF
               (g$enum-info$8123$CQIRF g$enumset1$8157$CQIRF))
             (g$enum-universe-id$8131$CQIRF
               (g$enum-info$8123$CQIRF g$enumset2$8158$CQIRF))))))
   (g$get-symbols$8136$CQIRF
     g$get-symbols$8245$CQIRF
     (case-lambda
       ((g$enumset$8159$CQIRF)
        (g$enum-universe-symbols$8132$CQIRF
          (g$enum-info$8123$CQIRF g$enumset$8159$CQIRF)))))
   (g$get-value$8137$CQIRF
     g$get-value$8246$CQIRF
     (case-lambda
       ((g$enumset$8160$CQIRF g$s$8161$CQIRF)
        (g$hashtable-ref$6719$CQIRF
          (g$enum-universe-mapping$8133$CQIRF
            (g$enum-info$8123$CQIRF g$enumset$8160$CQIRF))
          g$s$8161$CQIRF
          '#f))))
   (g$assert-enum$8138$CQIRF
     g$assert-enum$8247$CQIRF
     (case-lambda
       ((g$who$8162$CQIRF g$enumset$8163$CQIRF)
        (if (not (g$enum?$8120$CQIRF g$enumset$8163$CQIRF))
          (assertion-violation
            g$who$8162$CQIRF
            '"not an enumeration"
            g$enumset$8163$CQIRF)
          (void)))))
   (g$make-info$8139$CQIRF
     g$make-info$8248$CQIRF
     (case-lambda
       ((g$symbols$8164$CQIRF)
        ((case-lambda
           ((g$ht$8165$CQIRF)
            ((letrec ((g$f$8166$CQIRF
                        (case-lambda
                          ((g$s$8167$CQIRF g$a$8168$CQIRF g$mask$8169$CQIRF)
                           (if (null? g$s$8167$CQIRF)
                             (values
                               (reverse! g$a$8168$CQIRF)
                               g$ht$8165$CQIRF
                               (- g$mask$8169$CQIRF '1))
                             ((case-lambda
                                ((g$n$8170$CQIRF)
                                 (if (g$symbol?$6617$CQIRF g$n$8170$CQIRF)
                                   (if (g$hashtable-contains?$6722$CQIRF
                                         g$ht$8165$CQIRF
                                         g$n$8170$CQIRF)
                                     (g$f$8166$CQIRF
                                       (cdr g$s$8167$CQIRF)
                                       g$a$8168$CQIRF
                                       g$mask$8169$CQIRF)
                                     (begin
                                       (g$hashtable-set!$6720$CQIRF
                                         g$ht$8165$CQIRF
                                         g$n$8170$CQIRF
                                         g$mask$8169$CQIRF)
                                       (g$f$8166$CQIRF
                                         (cdr g$s$8167$CQIRF)
                                         (cons g$n$8170$CQIRF g$a$8168$CQIRF)
                                         (g$bitwise-arithmetic-shift-left$7747$CQIRF
                                           g$mask$8169$CQIRF
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$8170$CQIRF))))
                              (car g$s$8167$CQIRF)))))))
               g$f$8166$CQIRF)
             g$symbols$8164$CQIRF
             '()
             '1)))
         (g$make-eq-hashtable$6716$CQIRF)))))
   (g$make-name$8140$CQIRF
     g$make-name$8249$CQIRF
     (case-lambda
       ((g$symbols$8171$CQIRF)
        (string->symbol (g$format$8288$CQIRF '"~a" g$symbols$8171$CQIRF)))))
   (g$make-enumeration$8141$CQIRF
     g$make-enumeration$8250$CQIRF
     (case-lambda
       ((g$symbols$8172$CQIRF)
        (call-with-values
          (case-lambda (() (g$make-info$8139$CQIRF g$symbols$8172$CQIRF)))
          (case-lambda
            ((g$s$8176$CQIRF g$mapping$8177$CQIRF g$mask$8178$CQIRF)
             ((case-lambda
                ((g$mask$8179$CQIRF g$mapping$8180$CQIRF g$s$8181$CQIRF)
                 (g$make-enum$8121$CQIRF
                   g$mask$8179$CQIRF
                   (g$make-enum-universe$8130$CQIRF
                     (g$make-name$8140$CQIRF g$s$8181$CQIRF)
                     g$s$8181$CQIRF
                     g$mapping$8180$CQIRF
                     g$mask$8179$CQIRF))))
              g$mask$8178$CQIRF
              g$mapping$8177$CQIRF
              g$s$8176$CQIRF)))))))
   (g$enum-set-universe$8142$CQIRF
     g$enum-set-universe$8251$CQIRF
     (case-lambda
       ((g$enumset$8182$CQIRF)
        (begin
          (g$assert-enum$8138$CQIRF 'enum-set-universe g$enumset$8182$CQIRF)
          ((case-lambda
             ((g$ei$8183$CQIRF)
              (g$make-enum$8121$CQIRF
                (g$enum-universe-value$8134$CQIRF g$ei$8183$CQIRF)
                g$ei$8183$CQIRF)))
           (g$enum-info$8123$CQIRF g$enumset$8182$CQIRF))))))
   (g$enum-set-indexer$8143$CQIRF
     g$enum-set-indexer$8252$CQIRF
     (case-lambda
       ((g$enumset$8184$CQIRF)
        (begin
          (g$assert-enum$8138$CQIRF 'enum-set-indexer g$enumset$8184$CQIRF)
          (case-lambda
            ((g$symbol$8185$CQIRF)
             (begin
               (if (not (g$symbol?$6617$CQIRF g$symbol$8185$CQIRF))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$8185$CQIRF)
                 (void))
               ((case-lambda
                  ((g$v$8186$CQIRF)
                   (if g$v$8186$CQIRF
                     (- (bitwise-length g$v$8186$CQIRF) '1)
                     '#f)))
                (g$get-value$8137$CQIRF
                  g$enumset$8184$CQIRF
                  g$symbol$8185$CQIRF)))))))))
   (g$enum-set-constructor$8144$CQIRF
     g$enum-set-constructor$8253$CQIRF
     (case-lambda
       ((g$enumset$8187$CQIRF)
        (begin
          (g$assert-enum$8138$CQIRF 'enum-set-constructor g$enumset$8187$CQIRF)
          (case-lambda
            ((g$symbols$8188$CQIRF)
             ((letrec ((g$f$8189$CQIRF
                         (case-lambda
                           ((g$v$8190$CQIRF g$s$8191$CQIRF)
                            (if (null? g$s$8191$CQIRF)
                              (g$make-enum$8121$CQIRF
                                g$v$8190$CQIRF
                                (g$enum-info$8123$CQIRF g$enumset$8187$CQIRF))
                              ((case-lambda
                                 ((g$n$8192$CQIRF)
                                  (if (g$symbol?$6617$CQIRF g$n$8192$CQIRF)
                                    ((case-lambda
                                       ((g$v*$8193$CQIRF)
                                        (if g$v*$8193$CQIRF
                                          (g$f$8189$CQIRF
                                            (bitwise-ior
                                              g$v$8190$CQIRF
                                              g$v*$8193$CQIRF)
                                            (cdr g$s$8191$CQIRF))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$8192$CQIRF))))
                                     (g$get-value$8137$CQIRF
                                       g$enumset$8187$CQIRF
                                       g$n$8192$CQIRF))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$8192$CQIRF))))
                               (car g$s$8191$CQIRF)))))))
                g$f$8189$CQIRF)
              '0
              g$symbols$8188$CQIRF)))))))
   (g$enum-set->list$8145$CQIRF
     g$enum-set->list$8254$CQIRF
     (case-lambda
       ((g$enumset$8194$CQIRF)
        (begin
          (g$assert-enum$8138$CQIRF 'enum-set->list g$enumset$8194$CQIRF)
          ((case-lambda
             ((g$value$8195$CQIRF)
              ((letrec ((g$f$8196$CQIRF
                          (case-lambda
                            ((g$s$8197$CQIRF g$l$8198$CQIRF)
                             (if (null? g$s$8197$CQIRF)
                               (reverse! g$l$8198$CQIRF)
                               (if (g$zero?$6655$CQIRF
                                     (bitwise-and
                                       (g$get-value$8137$CQIRF
                                         g$enumset$8194$CQIRF
                                         (car g$s$8197$CQIRF))
                                       g$value$8195$CQIRF))
                                 (g$f$8196$CQIRF
                                   (cdr g$s$8197$CQIRF)
                                   g$l$8198$CQIRF)
                                 (g$f$8196$CQIRF
                                   (cdr g$s$8197$CQIRF)
                                   (cons
                                     (car g$s$8197$CQIRF)
                                     g$l$8198$CQIRF))))))))
                 g$f$8196$CQIRF)
               (g$get-symbols$8136$CQIRF g$enumset$8194$CQIRF)
               '())))
           (g$enum-value$8122$CQIRF g$enumset$8194$CQIRF))))))
   (g$enum-set-member?$8146$CQIRF
     g$enum-set-member?$8255$CQIRF
     (case-lambda
       ((g$symbol$8199$CQIRF g$enumset$8200$CQIRF)
        (begin
          (if (not (g$symbol?$6617$CQIRF g$symbol$8199$CQIRF))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$8199$CQIRF)
            (void))
          (g$assert-enum$8138$CQIRF 'enum-set-member? g$enumset$8200$CQIRF)
          ((case-lambda
             ((g$v$8201$CQIRF)
              (if g$v$8201$CQIRF
                (not (g$zero?$6655$CQIRF
                       (bitwise-and
                         g$v$8201$CQIRF
                         (g$enum-value$8122$CQIRF g$enumset$8200$CQIRF))))
                '#f)))
           (g$get-value$8137$CQIRF
             g$enumset$8200$CQIRF
             g$symbol$8199$CQIRF))))))
   (g$enum-set-subset?$8147$CQIRF
     g$enum-set-subset?$8256$CQIRF
     (case-lambda
       ((g$enumset1$8202$CQIRF g$enumset2$8203$CQIRF)
        (begin
          (g$assert-enum$8138$CQIRF 'enum-set-subset? g$enumset1$8202$CQIRF)
          (g$assert-enum$8138$CQIRF 'enum-set-subset? g$enumset2$8203$CQIRF)
          ((case-lambda
             ((g$v1$8204$CQIRF g$v2$8205$CQIRF)
              (if (g$enum-type=?$8135$CQIRF
                    g$enumset1$8202$CQIRF
                    g$enumset2$8203$CQIRF)
                (= (bitwise-and g$v1$8204$CQIRF g$v2$8205$CQIRF)
                   g$v1$8204$CQIRF)
                ((letrec ((g$f$8206$CQIRF
                            (case-lambda
                              ((g$s$8207$CQIRF)
                               (if (null? g$s$8207$CQIRF)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$8208$CQIRF g$v2*$8209$CQIRF)
                                     (if g$v2*$8209$CQIRF
                                       ((case-lambda
                                          ((g$has1$8210$CQIRF g$has2$8211$CQIRF)
                                           (if (if g$has1$8210$CQIRF
                                                 (begin
                                                   '#f
                                                   (not g$has2$8211$CQIRF))
                                                 '#f)
                                             '#f
                                             (g$f$8206$CQIRF
                                               (cdr g$s$8207$CQIRF)))))
                                        (not (g$zero?$6655$CQIRF
                                               (bitwise-and
                                                 g$v1$8204$CQIRF
                                                 g$v1*$8208$CQIRF)))
                                        (not (g$zero?$6655$CQIRF
                                               (bitwise-and
                                                 g$v2$8205$CQIRF
                                                 g$v2*$8209$CQIRF))))
                                       '#f)))
                                  (g$get-value$8137$CQIRF
                                    g$enumset1$8202$CQIRF
                                    (car g$s$8207$CQIRF))
                                  (g$get-value$8137$CQIRF
                                    g$enumset2$8203$CQIRF
                                    (car g$s$8207$CQIRF))))))))
                   g$f$8206$CQIRF)
                 (g$get-symbols$8136$CQIRF g$enumset1$8202$CQIRF)))))
           (g$enum-value$8122$CQIRF g$enumset1$8202$CQIRF)
           (g$enum-value$8122$CQIRF g$enumset2$8203$CQIRF))))))
   (g$enum-set=?$8148$CQIRF
     g$enum-set=?$8257$CQIRF
     (case-lambda
       ((g$enumset1$8212$CQIRF g$enumset2$8213$CQIRF)
        (begin
          (g$assert-enum$8138$CQIRF 'enum-set=? g$enumset1$8212$CQIRF)
          (g$assert-enum$8138$CQIRF 'enum-set=? g$enumset2$8213$CQIRF)
          (if (g$enum-set-subset?$8147$CQIRF
                g$enumset1$8212$CQIRF
                g$enumset2$8213$CQIRF)
            (begin
              '#f
              (g$enum-set-subset?$8147$CQIRF
                g$enumset2$8213$CQIRF
                g$enumset1$8212$CQIRF))
            '#f)))))
   (g$enum-set-union$8149$CQIRF
     g$enum-set-union$8258$CQIRF
     (case-lambda
       ((g$enumset1$8214$CQIRF g$enumset2$8215$CQIRF)
        (begin
          (g$assert-enum$8138$CQIRF 'enum-set-union g$enumset1$8214$CQIRF)
          (g$assert-enum$8138$CQIRF 'enum-set-union g$enumset2$8215$CQIRF)
          (if (g$enum-type=?$8135$CQIRF
                g$enumset1$8214$CQIRF
                g$enumset2$8215$CQIRF)
            (g$make-enum$8121$CQIRF
              (bitwise-ior
                (g$enum-value$8122$CQIRF g$enumset1$8214$CQIRF)
                (g$enum-value$8122$CQIRF g$enumset2$8215$CQIRF))
              (g$enum-info$8123$CQIRF g$enumset1$8214$CQIRF))
            '#f)))))
   (g$enum-set-intersection$8150$CQIRF
     g$enum-set-intersection$8259$CQIRF
     (case-lambda
       ((g$enumset1$8216$CQIRF g$enumset2$8217$CQIRF)
        (begin
          (g$assert-enum$8138$CQIRF
            'enum-set-intersection
            g$enumset1$8216$CQIRF)
          (g$assert-enum$8138$CQIRF
            'enum-set-intersection
            g$enumset2$8217$CQIRF)
          (if (g$enum-type=?$8135$CQIRF
                g$enumset1$8216$CQIRF
                g$enumset2$8217$CQIRF)
            (g$make-enum$8121$CQIRF
              (bitwise-and
                (g$enum-value$8122$CQIRF g$enumset1$8216$CQIRF)
                (g$enum-value$8122$CQIRF g$enumset2$8217$CQIRF))
              (g$enum-info$8123$CQIRF g$enumset1$8216$CQIRF))
            '#f)))))
   (g$enum-set-difference$8151$CQIRF
     g$enum-set-difference$8260$CQIRF
     (case-lambda
       ((g$enumset1$8218$CQIRF g$enumset2$8219$CQIRF)
        (begin
          (g$assert-enum$8138$CQIRF 'enum-set-difference g$enumset1$8218$CQIRF)
          (g$assert-enum$8138$CQIRF 'enum-set-difference g$enumset2$8219$CQIRF)
          (if (g$enum-type=?$8135$CQIRF
                g$enumset1$8218$CQIRF
                g$enumset2$8219$CQIRF)
            (g$make-enum$8121$CQIRF
              (bitwise-and
                (g$enum-value$8122$CQIRF g$enumset1$8218$CQIRF)
                (bitwise-not (g$enum-value$8122$CQIRF g$enumset2$8219$CQIRF)))
              (g$enum-info$8123$CQIRF g$enumset1$8218$CQIRF))
            '#f)))))
   (g$enum-set-complement$8152$CQIRF
     g$enum-set-complement$8261$CQIRF
     (case-lambda
       ((g$enumset$8220$CQIRF)
        (begin
          (g$assert-enum$8138$CQIRF 'enum-set-complement g$enumset$8220$CQIRF)
          (g$make-enum$8121$CQIRF
            (bitwise-not (g$enum-value$8122$CQIRF g$enumset$8220$CQIRF))
            (g$enum-info$8123$CQIRF g$enumset$8220$CQIRF))))))
   (g$enum-set-projection$8153$CQIRF
     g$enum-set-projection$8262$CQIRF
     (case-lambda
       ((g$enumset1$8221$CQIRF g$enumset2$8222$CQIRF)
        (begin
          (g$assert-enum$8138$CQIRF 'enum-set-projection g$enumset1$8221$CQIRF)
          (g$assert-enum$8138$CQIRF 'enum-set-projection g$enumset2$8222$CQIRF)
          ((case-lambda
             ((g$v1$8223$CQIRF)
              ((letrec ((g$f$8224$CQIRF
                          (case-lambda
                            ((g$s$8225$CQIRF g$v$8226$CQIRF)
                             (if (null? g$s$8225$CQIRF)
                               (g$make-enum$8121$CQIRF
                                 g$v$8226$CQIRF
                                 (g$enum-info$8123$CQIRF g$enumset2$8222$CQIRF))
                               (if (g$zero?$6655$CQIRF
                                     (bitwise-and
                                       g$v1$8223$CQIRF
                                       (g$get-value$8137$CQIRF
                                         g$enumset1$8221$CQIRF
                                         (car g$s$8225$CQIRF))))
                                 (g$f$8224$CQIRF
                                   (cdr g$s$8225$CQIRF)
                                   g$v$8226$CQIRF)
                                 ((case-lambda
                                    ((g$v2$8227$CQIRF)
                                     (if g$v2$8227$CQIRF
                                       (g$f$8224$CQIRF
                                         (cdr g$s$8225$CQIRF)
                                         (bitwise-ior
                                           g$v$8226$CQIRF
                                           g$v2$8227$CQIRF))
                                       (g$f$8224$CQIRF
                                         (cdr g$s$8225$CQIRF)
                                         g$v$8226$CQIRF))))
                                  (g$get-value$8137$CQIRF
                                    g$enumset2$8222$CQIRF
                                    (car g$s$8225$CQIRF)))))))))
                 g$f$8224$CQIRF)
               (g$get-symbols$8136$CQIRF g$enumset1$8221$CQIRF)
               '0)))
           (g$enum-value$8122$CQIRF g$enumset1$8221$CQIRF)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$8154$CQIRF g$p$8155$CQIRF g$wr$8156$CQIRF)
       (g$fprintf$8287$CQIRF
         g$p$8155$CQIRF
         '"#[enum-set ~a]"
         (g$enum-set->list$8145$CQIRF g$x$8154$CQIRF))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$8263$CQIRF
     g$dofmt$8285$CQIRF
     (case-lambda
       ((g$p$8267$CQIRF g$cntl$8268$CQIRF g$args$8269$CQIRF)
        ((case-lambda
           ((g$nmax$8270$CQIRF)
            ((letrec ((g$loop$8271$CQIRF
                        (case-lambda
                          ((g$n$8272$CQIRF g$a$8273$CQIRF)
                           (if (fx<=? g$n$8272$CQIRF g$nmax$8270$CQIRF)
                             ((case-lambda
                                ((g$c$8274$CQIRF)
                                 (if (if (g$char=?$6669$CQIRF
                                           g$c$8274$CQIRF
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$8272$CQIRF
                                           g$nmax$8270$CQIRF))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$8275$CQIRF)
                                       (if (eqv? g$t$8275$CQIRF '#\a)
                                         (begin
                                           (display
                                             (car g$a$8273$CQIRF)
                                             g$p$8267$CQIRF)
                                           (g$loop$8271$CQIRF
                                             (fx+ g$n$8272$CQIRF '2)
                                             (cdr g$a$8273$CQIRF)))
                                         (if (eqv? g$t$8275$CQIRF '#\s)
                                           (begin
                                             (write
                                               (car g$a$8273$CQIRF)
                                               g$p$8267$CQIRF)
                                             (g$loop$8271$CQIRF
                                               (fx+ g$n$8272$CQIRF '2)
                                               (cdr g$a$8273$CQIRF)))
                                           (if (eqv? g$t$8275$CQIRF '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$8273$CQIRF)
                                                   '2)
                                                 g$p$8267$CQIRF)
                                               (g$loop$8271$CQIRF
                                                 (fx+ g$n$8272$CQIRF '2)
                                                 (cdr g$a$8273$CQIRF)))
                                             (if (eqv? g$t$8275$CQIRF '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$8273$CQIRF)
                                                     '8)
                                                   g$p$8267$CQIRF)
                                                 (g$loop$8271$CQIRF
                                                   (fx+ g$n$8272$CQIRF '2)
                                                   (cdr g$a$8273$CQIRF)))
                                               (if (eqv? g$t$8275$CQIRF '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$8273$CQIRF)
                                                       '16)
                                                     g$p$8267$CQIRF)
                                                   (g$loop$8271$CQIRF
                                                     (fx+ g$n$8272$CQIRF '2)
                                                     (cdr g$a$8273$CQIRF)))
                                                 (if (eqv? g$t$8275$CQIRF '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$8273$CQIRF)
                                                         '10)
                                                       g$p$8267$CQIRF)
                                                     (g$loop$8271$CQIRF
                                                       (fx+ g$n$8272$CQIRF '2)
                                                       (cdr g$a$8273$CQIRF)))
                                                   (if (eqv?
                                                         g$t$8275$CQIRF
                                                         '#\~)
                                                     (begin
                                                       (g$write-char$8109$CQIRF
                                                         '#\~
                                                         g$p$8267$CQIRF)
                                                       (g$loop$8271$CQIRF
                                                         (fx+ g$n$8272$CQIRF '2)
                                                         g$a$8273$CQIRF))
                                                     (begin
                                                       (g$write-char$8109$CQIRF
                                                         g$c$8274$CQIRF
                                                         g$p$8267$CQIRF)
                                                       (g$loop$8271$CQIRF
                                                         (fx+ g$n$8272$CQIRF '1)
                                                         g$a$8273$CQIRF)))))))))))
                                    (string-ref
                                      g$cntl$8268$CQIRF
                                      (fx+ g$n$8272$CQIRF '1)))
                                   (begin
                                     (g$write-char$8109$CQIRF
                                       g$c$8274$CQIRF
                                       g$p$8267$CQIRF)
                                     (g$loop$8271$CQIRF
                                       (fx+ g$n$8272$CQIRF '1)
                                       g$a$8273$CQIRF)))))
                              (string-ref g$cntl$8268$CQIRF g$n$8272$CQIRF))
                             (void))))))
               g$loop$8271$CQIRF)
             '0
             g$args$8269$CQIRF)))
         (fx- (string-length g$cntl$8268$CQIRF) '1)))))
   (g$printf$8264$CQIRF
     g$printf$8286$CQIRF
     (case-lambda
       ((g$control$8276$CQIRF . g$args$8277$CQIRF)
        (g$dofmt$8263$CQIRF
          (current-output-port)
          g$control$8276$CQIRF
          g$args$8277$CQIRF))))
   (g$fprintf$8265$CQIRF
     g$fprintf$8287$CQIRF
     (case-lambda
       ((g$p$8278$CQIRF g$control$8279$CQIRF . g$args$8280$CQIRF)
        (g$dofmt$8263$CQIRF
          g$p$8278$CQIRF
          g$control$8279$CQIRF
          g$args$8280$CQIRF))))
   (g$format$8266$CQIRF
     g$format$8288$CQIRF
     (case-lambda
       ((g$control$8281$CQIRF . g$args$8282$CQIRF)
        (call-with-values
          g$open-string-output-port$8051$CQIRF
          (case-lambda
            ((g$p$8283$CQIRF g$c$8284$CQIRF)
             (begin
               (g$dofmt$8263$CQIRF
                 g$p$8283$CQIRF
                 g$control$8281$CQIRF
                 g$args$8282$CQIRF)
               (g$c$8284$CQIRF)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$8289$CQIRF
     g$make-traced-macro$8292$CQIRF
     (case-lambda
       ((g$name$8290$CQIRF g$x$8291$CQIRF)
        (if (g$procedure?$6619$CQIRF g$x$8291$CQIRF)
          (make-traced-procedure
            g$name$8290$CQIRF
            g$x$8291$CQIRF
            g$syntax->datum$13566$CQIRF)
          (if (g$variable-transformer?$13388$CQIRF g$x$8291$CQIRF)
            (g$make-variable-transformer$13386$CQIRF
              (make-traced-procedure
                g$name$8290$CQIRF
                (g$variable-transformer-procedure$13389$CQIRF g$x$8291$CQIRF)
                g$syntax->datum$13566$CQIRF))
            g$x$8291$CQIRF))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$8293$CQIRF
     g$cps/generate-reference$8558$CQIRF
     (case-lambda
       ((g$variable$8346$CQIRF)
        (g$cps/generate-operand$8297$CQIRF
          (g$make-reference$8323$CQIRF g$variable$8346$CQIRF)))))
   (g$cps/generate-literal$8294$CQIRF
     g$cps/generate-literal$8559$CQIRF
     (case-lambda
       ((g$datum$8347$CQIRF)
        (g$cps/generate-operand$8297$CQIRF
          (g$make-literal$8322$CQIRF g$datum$8347$CQIRF)))))
   (g$cps/generate-abstraction$8295$CQIRF
     g$cps/generate-abstraction$8560$CQIRF
     (case-lambda
       ((g$bvl$8348$CQIRF g$body-generator$8349$CQIRF)
        (g$cps/generate-operand$8297$CQIRF
          (g$make-user-abstraction$8324$CQIRF
            g$bvl$8348$CQIRF
            (case-lambda
              ((g$continuation-variable$8350$CQIRF)
               (g$body-generator$8349$CQIRF
                 (g$variable-continuator$8310$CQIRF
                   g$continuation-variable$8350$CQIRF)))))))))
   (g$cps/generate-abstractions$8296$CQIRF
     g$cps/generate-abstractions$8561$CQIRF
     (case-lambda
       ((g$bvls$8351$CQIRF g$body-generators$8352$CQIRF)
        (g$cps/generate-operand$8297$CQIRF
          (g$make-user-abstractions$8325$CQIRF
            g$bvls$8351$CQIRF
            (g$map$5946$CQIRF
              (case-lambda
                ((g$body-generator$8353$CQIRF)
                 (case-lambda
                   ((g$continuation-variable$8354$CQIRF)
                    (g$body-generator$8353$CQIRF
                      (g$variable-continuator$8310$CQIRF
                        g$continuation-variable$8354$CQIRF))))))
              g$body-generators$8352$CQIRF))))))
   (g$cps/generate-operand$8297$CQIRF
     g$cps/generate-operand$8562$CQIRF
     (case-lambda
       ((g$operand$8355$CQIRF)
        (case-lambda
          ((g$continuator$8356$CQIRF)
           (g$continue-with-operand$8313$CQIRF
             g$continuator$8356$CQIRF
             g$operand$8355$CQIRF))))))
   (g$cps/generate-conditional$8298$CQIRF
     g$cps/generate-conditional$8563$CQIRF
     (case-lambda
       ((g$condition-generator$8357$CQIRF
          g$consequent-generator$8358$CQIRF
          g$alternative-generator$8359$CQIRF)
        (case-lambda
          ((g$continuator$8360$CQIRF)
           (letrec* ((g$if-variable$8361$CQIRF
                       (case-lambda
                         ((g$continuation-variable$8363$CQIRF)
                          ((case-lambda
                             ((g$continuator*$8364$CQIRF)
                              (g$condition-generator$8357$CQIRF
                                (g$conditional-continuator$8309$CQIRF
                                  (case-lambda
                                    ((g$condition$8365$CQIRF)
                                     (g$make-conditional$8332$CQIRF
                                       g$condition$8365$CQIRF
                                       (g$consequent-generator$8358$CQIRF
                                         g$continuator*$8364$CQIRF)
                                       (g$alternative-generator$8359$CQIRF
                                         g$continuator*$8364$CQIRF))))))))
                           (g$variable-continuator$8310$CQIRF
                             g$continuation-variable$8363$CQIRF))))))
             (g$reify-continuation*$8315$CQIRF
               g$continuator$8360$CQIRF
               g$if-variable$8361$CQIRF
               (case-lambda
                 ((g$continuation-abstraction$8362$CQIRF)
                  (g$make-conditional-join$8333$CQIRF
                    g$continuation-abstraction$8362$CQIRF
                    g$if-variable$8361$CQIRF))))))))))
   (g$cps/generate-recursive-bind$8299$CQIRF
     g$cps/generate-recursive-bind$8564$CQIRF
     (case-lambda
       ((g$variables$8366$CQIRF
          g$generators$8367$CQIRF
          g$body-generator$8368$CQIRF)
        (case-lambda
          ((g$continuator$8369$CQIRF)
           (g$make-recursive-bind$8327$CQIRF
             g$variables$8366$CQIRF
             (g$map$5946$CQIRF
               (case-lambda
                 ((g$generator$8370$CQIRF)
                  (case-lambda
                    ((g$continuation-variable$8371$CQIRF)
                     (g$generator$8370$CQIRF
                       (g$variable-continuator$8310$CQIRF
                         g$continuation-variable$8371$CQIRF))))))
               g$generators$8367$CQIRF)
             (g$body-generator$8368$CQIRF
               (g$reified-continuator$8312$CQIRF
                 g$continuator$8369$CQIRF))))))))
   (g$cps/generate-recursive*-bind$8300$CQIRF
     g$cps/generate-recursive*-bind$8565$CQIRF
     (case-lambda
       ((g$variables$8372$CQIRF
          g$generators$8373$CQIRF
          g$body-generator$8374$CQIRF)
        (case-lambda
          ((g$continuator$8375$CQIRF)
           (g$make-recursive*-bind$8328$CQIRF
             g$variables$8372$CQIRF
             (g$map$5946$CQIRF
               (case-lambda
                 ((g$generator$8376$CQIRF)
                  (case-lambda
                    ((g$continuation-variable$8377$CQIRF)
                     (g$generator$8376$CQIRF
                       (g$variable-continuator$8310$CQIRF
                         g$continuation-variable$8377$CQIRF))))))
               g$generators$8373$CQIRF)
             (g$body-generator$8374$CQIRF
               (g$reified-continuator$8312$CQIRF
                 g$continuator$8375$CQIRF))))))))
   (g$cps/generate-recursive*-library-bind$8301$CQIRF
     g$cps/generate-recursive*-library-bind$8566$CQIRF
     (case-lambda
       ((g$name$8378$CQIRF
          g$variables$8379$CQIRF
          g$variables*$8380$CQIRF
          g$generators$8381$CQIRF
          g$body-generator$8382$CQIRF)
        (case-lambda
          ((g$continuator$8383$CQIRF)
           (g$make-recursive*-library-bind$8329$CQIRF
             g$name$8378$CQIRF
             g$variables$8379$CQIRF
             g$variables*$8380$CQIRF
             (g$map$5946$CQIRF
               (case-lambda
                 ((g$generator$8384$CQIRF)
                  (case-lambda
                    ((g$continuation-variable$8385$CQIRF)
                     (g$generator$8384$CQIRF
                       (g$variable-continuator$8310$CQIRF
                         g$continuation-variable$8385$CQIRF))))))
               g$generators$8381$CQIRF)
             (g$body-generator$8382$CQIRF
               (g$reified-continuator$8312$CQIRF
                 g$continuator$8383$CQIRF))))))))
   (g$cps/generate-sequence$8302$CQIRF
     g$cps/generate-sequence$8567$CQIRF
     (case-lambda
       ((g$generators$8386$CQIRF)
        (case-lambda
          ((g$continuator$8387$CQIRF)
           ((letrec ((g$recur$8388$CQIRF
                       (case-lambda
                         ((g$generators$8389$CQIRF)
                          ((car g$generators$8389$CQIRF)
                           ((case-lambda
                              ((g$generators$8390$CQIRF)
                               (if (pair? g$generators$8390$CQIRF)
                                 (g$effect-continuator$8308$CQIRF
                                   (case-lambda
                                     (()
                                      (g$recur$8388$CQIRF
                                        g$generators$8390$CQIRF))))
                                 g$continuator$8387$CQIRF)))
                            (cdr g$generators$8389$CQIRF)))))))
              g$recur$8388$CQIRF)
            g$generators$8386$CQIRF))))))
   (g$cps/generate-assignment$8303$CQIRF
     g$cps/generate-assignment$8568$CQIRF
     (case-lambda
       ((g$location$8391$CQIRF g$expression-generator$8392$CQIRF)
        (case-lambda
          ((g$continuator$8393$CQIRF)
           (g$expression-generator$8392$CQIRF
             (g$operand-continuator$8307$CQIRF
               (case-lambda
                 ((g$operand$8394$CQIRF)
                  (g$make-assignment$8335$CQIRF
                    g$location$8391$CQIRF
                    g$operand$8394$CQIRF
                    (g$continue-with-operand$8313$CQIRF
                      g$continuator$8393$CQIRF
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$8304$CQIRF
     g$cps/generate-declaration$8569$CQIRF
     (case-lambda
       ((g$location$8395$CQIRF g$expression-generator$8396$CQIRF)
        (case-lambda
          ((g$continuator$8397$CQIRF)
           (g$expression-generator$8396$CQIRF
             (g$operand-continuator$8307$CQIRF
               (case-lambda
                 ((g$operand$8398$CQIRF)
                  (g$make-declaration$8336$CQIRF
                    g$location$8395$CQIRF
                    g$operand$8398$CQIRF
                    (g$continue-with-operand$8313$CQIRF
                      g$continuator$8397$CQIRF
                      '(cps-void))))))))))))
   (g$cps/generate-combination$8305$CQIRF
     g$cps/generate-combination$8570$CQIRF
     (case-lambda
       ((g$operator-generator$8399$CQIRF g$operand-generators$8400$CQIRF)
        (g$cps/generate-subproblems$8306$CQIRF
          (g$reverse$6624$CQIRF
            (cons
              g$operator-generator$8399$CQIRF
              g$operand-generators$8400$CQIRF))
          (case-lambda
            ((g$operands$8401$CQIRF g$continuator$8402$CQIRF)
             (g$make-combination$8330$CQIRF
               (car g$operands$8401$CQIRF)
               (g$reify-continuation$8314$CQIRF g$continuator$8402$CQIRF)
               (cdr g$operands$8401$CQIRF))))))))
   (g$cps/generate-subproblems$8306$CQIRF
     g$cps/generate-subproblems$8571$CQIRF
     (case-lambda
       ((g$generators$8403$CQIRF g$combiner$8404$CQIRF)
        (case-lambda
          ((g$continuator$8405$CQIRF)
           ((letrec ((g$recur$8406$CQIRF
                       (case-lambda
                         ((g$generators$8407$CQIRF g$operands$8408$CQIRF)
                          (if (pair? g$generators$8407$CQIRF)
                            ((car g$generators$8407$CQIRF)
                             ((case-lambda
                                ((g$generators$8409$CQIRF)
                                 (g$operand-continuator$8307$CQIRF
                                   (case-lambda
                                     ((g$operand$8410$CQIRF)
                                      (g$recur$8406$CQIRF
                                        g$generators$8409$CQIRF
                                        (cons
                                          g$operand$8410$CQIRF
                                          g$operands$8408$CQIRF)))))))
                              (cdr g$generators$8407$CQIRF)))
                            (g$combiner$8404$CQIRF
                              g$operands$8408$CQIRF
                              g$continuator$8405$CQIRF))))))
              g$recur$8406$CQIRF)
            g$generators$8403$CQIRF
            '()))))))
   (g$operand-continuator$8307$CQIRF
     g$operand-continuator$8572$CQIRF
     (case-lambda
       ((g$generator$8411$CQIRF)
        (case-lambda
          ((g$if-operand$8412$CQIRF
             g$if-effect$8413$CQIRF
             g$if-conditional$8414$CQIRF
             g$if-variable$8415$CQIRF
             g$if-inline$8416$CQIRF)
           (begin
             g$if-effect$8413$CQIRF
             g$if-conditional$8414$CQIRF
             g$if-variable$8415$CQIRF
             g$if-inline$8416$CQIRF
             (g$if-operand$8412$CQIRF g$generator$8411$CQIRF)))))))
   (g$effect-continuator$8308$CQIRF
     g$effect-continuator$8573$CQIRF
     (case-lambda
       ((g$generator$8417$CQIRF)
        (case-lambda
          ((g$if-operand$8418$CQIRF
             g$if-effect$8419$CQIRF
             g$if-conditional$8420$CQIRF
             g$if-variable$8421$CQIRF
             g$if-inline$8422$CQIRF)
           (begin
             g$if-operand$8418$CQIRF
             g$if-conditional$8420$CQIRF
             g$if-variable$8421$CQIRF
             g$if-inline$8422$CQIRF
             (g$if-effect$8419$CQIRF g$generator$8417$CQIRF)))))))
   (g$conditional-continuator$8309$CQIRF
     g$conditional-continuator$8574$CQIRF
     (case-lambda
       ((g$generator$8423$CQIRF)
        (case-lambda
          ((g$if-operand$8424$CQIRF
             g$if-effect$8425$CQIRF
             g$if-conditional$8426$CQIRF
             g$if-variable$8427$CQIRF
             g$if-inline$8428$CQIRF)
           (begin
             g$if-operand$8424$CQIRF
             g$if-effect$8425$CQIRF
             g$if-variable$8427$CQIRF
             g$if-inline$8428$CQIRF
             (g$if-conditional$8426$CQIRF g$generator$8423$CQIRF)))))))
   (g$variable-continuator$8310$CQIRF
     g$variable-continuator$8575$CQIRF
     (case-lambda
       ((g$variable$8429$CQIRF)
        (case-lambda
          ((g$if-operand$8430$CQIRF
             g$if-effect$8431$CQIRF
             g$if-conditional$8432$CQIRF
             g$if-variable$8433$CQIRF
             g$if-inline$8434$CQIRF)
           (begin
             g$if-operand$8430$CQIRF
             g$if-effect$8431$CQIRF
             g$if-variable$8433$CQIRF
             g$if-inline$8434$CQIRF
             (g$if-variable$8433$CQIRF g$variable$8429$CQIRF)))))))
   (g$inline-continuator$8311$CQIRF
     g$inline-continuator$8576$CQIRF
     (case-lambda
       ((g$continuation$8435$CQIRF)
        (case-lambda
          ((g$if-operand$8436$CQIRF
             g$if-effect$8437$CQIRF
             g$if-conditional$8438$CQIRF
             g$if-variable$8439$CQIRF
             g$if-inline$8440$CQIRF)
           (begin
             g$if-operand$8436$CQIRF
             g$if-effect$8437$CQIRF
             g$if-conditional$8438$CQIRF
             g$if-variable$8439$CQIRF
             (g$if-inline$8440$CQIRF g$continuation$8435$CQIRF)))))))
   (g$reified-continuator$8312$CQIRF
     g$reified-continuator$8577$CQIRF
     (case-lambda
       ((g$continuator$8441$CQIRF)
        (case-lambda
          ((g$if-operand$8442$CQIRF
             g$if-effect$8443$CQIRF
             g$if-conditional$8444$CQIRF
             g$if-variable$8445$CQIRF
             g$if-inline$8446$CQIRF)
           (begin
             g$if-operand$8442$CQIRF
             g$if-effect$8443$CQIRF
             g$if-conditional$8444$CQIRF
             (g$reify-continuation*$8315$CQIRF
               g$continuator$8441$CQIRF
               g$if-variable$8445$CQIRF
               g$if-inline$8446$CQIRF)))))))
   (g$continue-with-operand$8313$CQIRF
     g$continue-with-operand$8578$CQIRF
     (case-lambda
       ((g$continuator$8447$CQIRF g$operand$8448$CQIRF)
        (g$continuator$8447$CQIRF
          (case-lambda
            ((g$generator$8449$CQIRF)
             (g$generator$8449$CQIRF g$operand$8448$CQIRF)))
          (case-lambda ((g$generator$8450$CQIRF) (g$generator$8450$CQIRF)))
          (case-lambda
            ((g$generator$8451$CQIRF)
             (g$generator$8451$CQIRF
               (g$make-truth-test$8337$CQIRF g$operand$8448$CQIRF))))
          (case-lambda
            ((g$continuation-variable$8452$CQIRF)
             (g$make-return$8331$CQIRF
               (g$make-reference$8323$CQIRF g$continuation-variable$8452$CQIRF)
               (list g$operand$8448$CQIRF))))
          (case-lambda
            ((g$continuation-abstraction$8453$CQIRF)
             (g$make-return$8331$CQIRF
               g$continuation-abstraction$8453$CQIRF
               (list g$operand$8448$CQIRF))))))))
   (g$reify-continuation$8314$CQIRF
     g$reify-continuation$8579$CQIRF
     (case-lambda
       ((g$continuator$8454$CQIRF)
        (g$continuator$8454$CQIRF
          g$operand-continuation-reifier$8317$CQIRF
          g$effect-continuation-reifier$8319$CQIRF
          g$conditional-continuation-reifier$8321$CQIRF
          (case-lambda
            ((g$variable$8455$CQIRF)
             (g$make-reference$8323$CQIRF g$variable$8455$CQIRF)))
          (case-lambda
            ((g$continuation$8456$CQIRF) g$continuation$8456$CQIRF))))))
   (g$reify-continuation*$8315$CQIRF
     g$reify-continuation*$8580$CQIRF
     (case-lambda
       ((g$continuator$8457$CQIRF
          g$if-variable$8458$CQIRF
          g$if-inline$8459$CQIRF)
        (g$continuator$8457$CQIRF
          (g$operand-continuation-reifier*$8316$CQIRF g$if-inline$8459$CQIRF)
          (g$effect-continuation-reifier*$8318$CQIRF g$if-inline$8459$CQIRF)
          (g$conditional-continuation-reifier*$8320$CQIRF
            g$if-inline$8459$CQIRF)
          g$if-variable$8458$CQIRF
          g$if-inline$8459$CQIRF))))
   (g$operand-continuation-reifier*$8316$CQIRF
     g$operand-continuation-reifier*$8581$CQIRF
     (case-lambda
       ((g$receiver$8460$CQIRF)
        (case-lambda
          ((g$generator$8461$CQIRF)
           (g$receiver$8460$CQIRF
             ((case-lambda
                ((g$variable$8462$CQIRF)
                 (g$make-continuation-abstraction$8326$CQIRF
                   (list g$variable$8462$CQIRF)
                   (g$generator$8461$CQIRF
                     (g$make-reference$8323$CQIRF g$variable$8462$CQIRF)))))
              (g$generate-variable$8338$CQIRF 'V))))))))
   (g$operand-continuation-reifier$8317$CQIRF
     g$operand-continuation-reifier$8582$CQIRF
     (g$operand-continuation-reifier*$8316$CQIRF values))
   (g$effect-continuation-reifier*$8318$CQIRF
     g$effect-continuation-reifier*$8583$CQIRF
     (case-lambda
       ((g$receiver$8463$CQIRF)
        (case-lambda
          ((g$generator$8464$CQIRF)
           (g$receiver$8463$CQIRF
             ((case-lambda
                ((g$variable$8465$CQIRF)
                 (g$make-continuation-abstraction$8326$CQIRF
                   g$variable$8465$CQIRF
                   (g$generator$8464$CQIRF))))
              (g$generate-variable$8338$CQIRF 'IGNORE))))))))
   (g$effect-continuation-reifier$8319$CQIRF
     g$effect-continuation-reifier$8584$CQIRF
     (g$effect-continuation-reifier*$8318$CQIRF values))
   (g$conditional-continuation-reifier*$8320$CQIRF
     g$conditional-continuation-reifier*$8585$CQIRF
     (case-lambda
       ((g$receiver$8466$CQIRF)
        (case-lambda
          ((g$generator$8467$CQIRF)
           (g$receiver$8466$CQIRF
             ((case-lambda
                ((g$variable$8468$CQIRF)
                 (g$make-continuation-abstraction$8326$CQIRF
                   (list g$variable$8468$CQIRF)
                   (g$generator$8467$CQIRF
                     (g$make-truth-test$8337$CQIRF
                       (g$make-reference$8323$CQIRF g$variable$8468$CQIRF))))))
              (g$generate-variable$8338$CQIRF 'T))))))))
   (g$conditional-continuation-reifier$8321$CQIRF
     g$conditional-continuation-reifier$8586$CQIRF
     (g$conditional-continuation-reifier*$8320$CQIRF values))
   (g$make-literal$8322$CQIRF
     g$make-literal$8587$CQIRF
     (case-lambda ((g$datum$8469$CQIRF) (list 'quote g$datum$8469$CQIRF))))
   (g$make-reference$8323$CQIRF
     g$make-reference$8588$CQIRF
     (case-lambda ((g$variable$8470$CQIRF) g$variable$8470$CQIRF)))
   (g$make-user-abstraction$8324$CQIRF
     g$make-user-abstraction$8589$CQIRF
     (case-lambda
       ((g$bvl$8471$CQIRF g$body-constructor$8472$CQIRF)
        ((case-lambda
           ((g$continuation$8473$CQIRF)
            (list
              'case-lambda
              (list
                (cons g$continuation$8473$CQIRF g$bvl$8471$CQIRF)
                (g$body-constructor$8472$CQIRF g$continuation$8473$CQIRF)))))
         (g$generate-variable$8338$CQIRF 'C)))))
   (g$make-user-abstractions$8325$CQIRF
     g$make-user-abstractions$8590$CQIRF
     (case-lambda
       ((g$bvls$8474$CQIRF g$body-constructors$8475$CQIRF)
        ((case-lambda
           ((g$continuation$8476$CQIRF)
            (cons
              'case-lambda
              (g$map$5946$CQIRF
                (case-lambda
                  ((g$bvl$8477$CQIRF g$body-constructor$8478$CQIRF)
                   (list
                     (cons g$continuation$8476$CQIRF g$bvl$8477$CQIRF)
                     (g$body-constructor$8478$CQIRF
                       g$continuation$8476$CQIRF))))
                g$bvls$8474$CQIRF
                g$body-constructors$8475$CQIRF))))
         (g$generate-variable$8338$CQIRF 'C)))))
   (g$make-continuation-abstraction$8326$CQIRF
     g$make-continuation-abstraction$8591$CQIRF
     (case-lambda
       ((g$bvl$8479$CQIRF g$body$8480$CQIRF)
        (list 'case-lambda (list g$bvl$8479$CQIRF g$body$8480$CQIRF)))))
   (g$make-recursive-bind$8327$CQIRF
     g$make-recursive-bind$8592$CQIRF
     (case-lambda
       ((g$variables$8481$CQIRF g$constructors$8482$CQIRF g$body$8483$CQIRF)
        (list
          'letrec
          (g$map$5946$CQIRF
            (case-lambda
              ((g$variable$8484$CQIRF g$constructor$8485$CQIRF)
               (list
                 g$variable$8484$CQIRF
                 (list
                   (g$make-user-abstraction$8324$CQIRF
                     '()
                     g$constructor$8485$CQIRF)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$8484$CQIRF))))))
            g$variables$8481$CQIRF
            g$constructors$8482$CQIRF)
          g$body$8483$CQIRF))))
   (g$make-recursive*-bind$8328$CQIRF
     g$make-recursive*-bind$8593$CQIRF
     (case-lambda
       ((g$variables$8486$CQIRF g$constructors$8487$CQIRF g$body$8488$CQIRF)
        (list
          'letrec*
          (g$map$5946$CQIRF
            (case-lambda
              ((g$variable$8489$CQIRF g$constructor$8490$CQIRF)
               (list
                 g$variable$8489$CQIRF
                 (list
                   (g$make-user-abstraction$8324$CQIRF
                     '()
                     g$constructor$8490$CQIRF)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$8489$CQIRF))))))
            g$variables$8486$CQIRF
            g$constructors$8487$CQIRF)
          g$body$8488$CQIRF))))
   (g$make-recursive*-library-bind$8329$CQIRF
     g$make-recursive*-library-bind$8594$CQIRF
     (case-lambda
       ((g$name$8491$CQIRF
          g$variables$8492$CQIRF
          g$variables*$8493$CQIRF
          g$constructors$8494$CQIRF
          g$body$8495$CQIRF)
        (list
          'library-letrec*
          g$name$8491$CQIRF
          (g$map$5946$CQIRF
            (case-lambda
              ((g$variable$8496$CQIRF
                 g$variable*$8497$CQIRF
                 g$constructor$8498$CQIRF)
               (list
                 g$variable$8496$CQIRF
                 g$variable*$8497$CQIRF
                 (list
                   (g$make-user-abstraction$8324$CQIRF
                     '()
                     g$constructor$8498$CQIRF)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$8496$CQIRF))))))
            g$variables$8492$CQIRF
            g$variables*$8493$CQIRF
            g$constructors$8494$CQIRF)
          g$body$8495$CQIRF))))
   (g$make-combination$8330$CQIRF
     g$make-combination$8595$CQIRF
     (case-lambda
       ((g$operator$8499$CQIRF g$continuation$8500$CQIRF g$operands$8501$CQIRF)
        (cons
          g$operator$8499$CQIRF
          (cons g$continuation$8500$CQIRF g$operands$8501$CQIRF)))))
   (g$make-return$8331$CQIRF
     g$make-return$8596$CQIRF
     (case-lambda
       ((g$continuation$8502$CQIRF g$operands$8503$CQIRF)
        (cons g$continuation$8502$CQIRF g$operands$8503$CQIRF))))
   (g$make-conditional$8332$CQIRF
     g$make-conditional$8597$CQIRF
     (case-lambda
       ((g$condition$8504$CQIRF
          g$consequent$8505$CQIRF
          g$alternative$8506$CQIRF)
        (list
          'if
          g$condition$8504$CQIRF
          g$consequent$8505$CQIRF
          g$alternative$8506$CQIRF))))
   (g$make-conditional-join$8333$CQIRF
     g$make-conditional-join$8598$CQIRF
     (case-lambda
       ((g$continuation$8507$CQIRF g$constructor$8508$CQIRF)
        ((case-lambda
           ((g$variable$8509$CQIRF)
            (g$make-let$8334$CQIRF
              (list g$variable$8509$CQIRF)
              (list g$continuation$8507$CQIRF)
              (g$constructor$8508$CQIRF g$variable$8509$CQIRF))))
         (g$generate-variable$8338$CQIRF 'J)))))
   (g$make-let$8334$CQIRF
     g$make-let$8599$CQIRF
     (case-lambda
       ((g$variables$8510$CQIRF g$expressions$8511$CQIRF g$body$8512$CQIRF)
        (cons
          (list 'case-lambda (list g$variables$8510$CQIRF g$body$8512$CQIRF))
          g$expressions$8511$CQIRF))))
   (g$make-assignment$8335$CQIRF
     g$make-assignment$8600$CQIRF
     (case-lambda
       ((g$location$8513$CQIRF g$operand$8514$CQIRF g$expression$8515$CQIRF)
        (list
          'begin
          (list 'set! g$location$8513$CQIRF g$operand$8514$CQIRF)
          g$expression$8515$CQIRF))))
   (g$make-declaration$8336$CQIRF
     g$make-declaration$8601$CQIRF
     (case-lambda
       ((g$location$8516$CQIRF g$operand$8517$CQIRF g$expression$8518$CQIRF)
        (list
          'begin
          (list 'define g$location$8516$CQIRF g$operand$8517$CQIRF)
          g$expression$8518$CQIRF))))
   (g$make-truth-test$8337$CQIRF
     g$make-truth-test$8602$CQIRF
     (case-lambda ((g$operand$8519$CQIRF) g$operand$8519$CQIRF)))
   (g$generate-variable$8338$CQIRF
     g$generate-variable$8603$CQIRF
     (case-lambda ((g$name$8520$CQIRF) (gensym g$name$8520$CQIRF))))
   (g$parse$8339$CQIRF
     g$parse$8604$CQIRF
     (case-lambda
       ((g$x$8521$CQIRF)
        (if (pair? g$x$8521$CQIRF)
          ((case-lambda
             ((g$t$8522$CQIRF)
              (if (eqv? g$t$8522$CQIRF 'quote)
                (g$cps/generate-literal$8294$CQIRF
                  (g$cadr$6626$CQIRF g$x$8521$CQIRF))
                (if (eqv? g$t$8522$CQIRF 'if)
                  (g$cps/generate-conditional$8298$CQIRF
                    (g$parse$8339$CQIRF (g$cadr$6626$CQIRF g$x$8521$CQIRF))
                    (g$parse$8339$CQIRF (g$caddr$6632$CQIRF g$x$8521$CQIRF))
                    (g$parse$8339$CQIRF (g$cadddr$6644$CQIRF g$x$8521$CQIRF)))
                  (if (eqv? g$t$8522$CQIRF 'case-lambda)
                    ((case-lambda
                       ((g$d$8523$CQIRF)
                        (g$cps/generate-abstractions$8296$CQIRF
                          (g$map$5946$CQIRF car g$d$8523$CQIRF)
                          (g$map$5946$CQIRF
                            (case-lambda
                              ((g$e$8524$CQIRF)
                               (g$cps/generate-sequence$8302$CQIRF
                                 (g$map$5946$CQIRF
                                   g$parse$8339$CQIRF
                                   (cdr g$e$8524$CQIRF)))))
                            g$d$8523$CQIRF))))
                     (cdr g$x$8521$CQIRF))
                    (if (eqv? g$t$8522$CQIRF 'letrec)
                      ((case-lambda
                         ((g$bindings$8525$CQIRF g$body*$8526$CQIRF)
                          ((case-lambda
                             ((g$lhs*$8527$CQIRF g$rhs*$8528$CQIRF)
                              ((case-lambda
                                 ((g$t*$8529$CQIRF g$tmps$8530$CQIRF)
                                  ((case-lambda
                                     ((g$s*$8531$CQIRF)
                                      (g$parse$8339$CQIRF
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$8527$CQIRF
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$8529$CQIRF
                                                    (append
                                                      g$s*$8531$CQIRF
                                                      g$body*$8526$CQIRF)))
                                                g$rhs*$8528$CQIRF)))
                                          g$tmps$8530$CQIRF))))
                                   (g$map$5946$CQIRF
                                     (case-lambda
                                       ((g$i$8532$CQIRF g$t$8533$CQIRF)
                                        (list
                                          'set!
                                          g$i$8532$CQIRF
                                          g$t$8533$CQIRF)))
                                     g$lhs*$8527$CQIRF
                                     g$t*$8529$CQIRF))))
                               (g$map$5946$CQIRF gensym g$lhs*$8527$CQIRF)
                               (g$map$5946$CQIRF
                                 (case-lambda ((g$x$8534$CQIRF) 'uninitialized))
                                 g$lhs*$8527$CQIRF))))
                           (g$map$5946$CQIRF car g$bindings$8525$CQIRF)
                           (g$map$5946$CQIRF
                             g$cadr$6626$CQIRF
                             g$bindings$8525$CQIRF))))
                       (g$cadr$6626$CQIRF g$x$8521$CQIRF)
                       (g$cddr$6628$CQIRF g$x$8521$CQIRF))
                      (if (eqv? g$t$8522$CQIRF 'letrec*)
                        ((case-lambda
                           ((g$bindings$8535$CQIRF g$body*$8536$CQIRF)
                            ((case-lambda
                               ((g$lhs*$8537$CQIRF g$rhs*$8538$CQIRF)
                                (g$cps/generate-recursive*-bind$8300$CQIRF
                                  g$lhs*$8537$CQIRF
                                  (g$map$5946$CQIRF
                                    g$parse$8339$CQIRF
                                    g$rhs*$8538$CQIRF)
                                  (g$parse$8339$CQIRF
                                    (cons 'begin g$body*$8536$CQIRF)))))
                             (g$map$5946$CQIRF car g$bindings$8535$CQIRF)
                             (g$map$5946$CQIRF
                               g$cadr$6626$CQIRF
                               g$bindings$8535$CQIRF))))
                         (g$cadr$6626$CQIRF g$x$8521$CQIRF)
                         (g$cddr$6628$CQIRF g$x$8521$CQIRF))
                        (if (eqv? g$t$8522$CQIRF 'library-letrec*)
                          ((case-lambda
                             ((g$name$8539$CQIRF g$x$8540$CQIRF)
                              ((case-lambda
                                 ((g$bindings$8541$CQIRF g$body*$8542$CQIRF)
                                  ((case-lambda
                                     ((g$lhs*$8543$CQIRF
                                        g$lhs**$8544$CQIRF
                                        g$rhs*$8545$CQIRF)
                                      (g$cps/generate-recursive*-library-bind$8301$CQIRF
                                        g$name$8539$CQIRF
                                        g$lhs*$8543$CQIRF
                                        g$lhs**$8544$CQIRF
                                        (g$map$5946$CQIRF
                                          g$parse$8339$CQIRF
                                          g$rhs*$8545$CQIRF)
                                        (g$parse$8339$CQIRF
                                          (cons 'begin g$body*$8542$CQIRF)))))
                                   (g$map$5946$CQIRF car g$bindings$8541$CQIRF)
                                   (g$map$5946$CQIRF
                                     g$cadr$6626$CQIRF
                                     g$bindings$8541$CQIRF)
                                   (g$map$5946$CQIRF
                                     g$caddr$6632$CQIRF
                                     g$bindings$8541$CQIRF))))
                               (g$cadr$6626$CQIRF g$x$8540$CQIRF)
                               (g$cddr$6628$CQIRF g$x$8540$CQIRF))))
                           (g$cadr$6626$CQIRF g$x$8521$CQIRF)
                           (cdr g$x$8521$CQIRF))
                          (if (eqv? g$t$8522$CQIRF 'begin)
                            (g$cps/generate-sequence$8302$CQIRF
                              (g$map$5946$CQIRF
                                g$parse$8339$CQIRF
                                (cdr g$x$8521$CQIRF)))
                            (if (eqv? g$t$8522$CQIRF 'set!)
                              (g$cps/generate-assignment$8303$CQIRF
                                (g$cadr$6626$CQIRF g$x$8521$CQIRF)
                                (g$parse$8339$CQIRF
                                  (g$caddr$6632$CQIRF g$x$8521$CQIRF)))
                              (if (eqv? g$t$8522$CQIRF 'define)
                                (g$cps/generate-declaration$8304$CQIRF
                                  (g$cadr$6626$CQIRF g$x$8521$CQIRF)
                                  (g$parse$8339$CQIRF
                                    (g$caddr$6632$CQIRF g$x$8521$CQIRF)))
                                (if (list? g$x$8521$CQIRF)
                                  (g$cps/generate-combination$8305$CQIRF
                                    (g$parse$8339$CQIRF (car g$x$8521$CQIRF))
                                    (g$map$5946$CQIRF
                                      g$parse$8339$CQIRF
                                      (cdr g$x$8521$CQIRF)))
                                  (error
                                    'rewrite
                                    '"invalid form ~s ~s"
                                    g$x$8521$CQIRF
                                    (list? g$x$8521$CQIRF))))))))))))))
           (car g$x$8521$CQIRF))
          (if (g$symbol?$6617$CQIRF g$x$8521$CQIRF)
            (g$cps/generate-reference$8293$CQIRF g$x$8521$CQIRF)
            (g$cps/generate-literal$8294$CQIRF g$x$8521$CQIRF))))))
   (g$starts-with?$8340$CQIRF
     g$starts-with?$8605$CQIRF
     (case-lambda
       ((g$str$8546$CQIRF g$sub$8547$CQIRF)
        (clr-call-internal
          'system.string
          'startswith
          g$str$8546$CQIRF
          g$sub$8547$CQIRF))))
   (g$ends-with?$8341$CQIRF
     g$ends-with?$8606$CQIRF
     (case-lambda
       ((g$str$8548$CQIRF g$sub$8549$CQIRF)
        (clr-call-internal
          'system.string
          'endswith
          g$str$8548$CQIRF
          g$sub$8549$CQIRF))))
   (g$clr-generator?$8342$CQIRF
     g$clr-generator?$8607$CQIRF
     (case-lambda
       ((g$o$8550$CQIRF)
        (if (g$symbol?$6617$CQIRF g$o$8550$CQIRF)
          (begin
            '#f
            ((case-lambda
               ((g$o$8551$CQIRF)
                (if (g$starts-with?$8340$CQIRF g$o$8551$CQIRF '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$8341$CQIRF g$o$8551$CQIRF '"-internal"))
                  '#f)))
             (symbol->string g$o$8550$CQIRF)))
          '#f))))
   (g$fix-primitives$8343$CQIRF
     g$fix-primitives$8608$CQIRF
     (case-lambda
       ((g$e$8552$CQIRF)
        (if (if (pair? g$e$8552$CQIRF) (begin '#f (list? g$e$8552$CQIRF)) '#f)
          ((case-lambda
             ((g$o$8553$CQIRF)
              (if (eq? g$o$8553$CQIRF 'quote)
                g$e$8552$CQIRF
                (if (begin '#f (g$clr-generator?$8342$CQIRF g$o$8553$CQIRF))
                  (if (pair? (cdr g$e$8552$CQIRF))
                    (list
                      (g$fix-primitives$8343$CQIRF
                        (g$cadr$6626$CQIRF g$e$8552$CQIRF))
                      (cons
                        g$o$8553$CQIRF
                        (g$map$5946$CQIRF
                          g$fix-primitives$8343$CQIRF
                          (g$cddr$6628$CQIRF g$e$8552$CQIRF))))
                    g$e$8552$CQIRF)
                  (cons
                    (g$fix-primitives$8343$CQIRF g$o$8553$CQIRF)
                    (g$map$5946$CQIRF
                      g$fix-primitives$8343$CQIRF
                      (cdr g$e$8552$CQIRF)))))))
           (car g$e$8552$CQIRF))
          g$e$8552$CQIRF))))
   (g$parse->cps$8344$CQIRF
     g$parse->cps$8609$CQIRF
     (case-lambda
       ((g$e$8554$CQIRF g$var$8555$CQIRF)
        ((g$parse$8339$CQIRF g$e$8554$CQIRF)
         (g$variable-continuator$8310$CQIRF g$var$8555$CQIRF)))))
   (g$convert->cps$8345$CQIRF
     g$convert->cps$8610$CQIRF
     (case-lambda
       ((g$e$8556$CQIRF g$var$8557$CQIRF)
        (g$fix-primitives$8343$CQIRF
          (g$parse->cps$8344$CQIRF g$e$8556$CQIRF g$var$8557$CQIRF))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$8611$CQIRF
     g$library-version-mismatch-warning$8768$CQIRF
     (case-lambda
       ((g$name$8740$CQIRF g$depname$8741$CQIRF g$filename$8742$CQIRF)
        (g$fprintf$8287$CQIRF
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$8740$CQIRF
          g$depname$8741$CQIRF
          g$filename$8742$CQIRF))))
   (g$file-locator-resolution-error$8612$CQIRF
     g$file-locator-resolution-error$8769$CQIRF
     (case-lambda
       ((g$libname$8743$CQIRF g$failed-list$8744$CQIRF)
        (letrec* ((g$7086$8745$CQIRF
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$7260$CQIRF
                      'g$7089$CQIRF
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$7088$8746$CQIRF '#f)
                  (g$7087$8747$CQIRF
                    (make-record-constructor-descriptor
                      g$7086$8745$CQIRF
                      g$&condition-rcd$7261$CQIRF
                      g$7088$8746$CQIRF))
                  (g$7085$8750$CQIRF (record-predicate g$7086$8745$CQIRF))
                  (g$make-library-resolution-condition$8751$CQIRF
                    (record-constructor g$7087$8747$CQIRF))
                  (g$7083$8752$CQIRF (record-accessor g$7086$8745$CQIRF '0))
                  (g$7084$8753$CQIRF (record-accessor g$7086$8745$CQIRF '1))
                  (g$library-resolution-condition?$8754$CQIRF
                    (condition-predicate g$7086$8745$CQIRF))
                  (g$condition-library$8755$CQIRF
                    (condition-accessor g$7086$8745$CQIRF g$7083$8752$CQIRF))
                  (g$condition-files$8756$CQIRF
                    (condition-accessor g$7086$8745$CQIRF g$7084$8753$CQIRF)))
          (raise
            (condition
              (g$make-error$7292$CQIRF)
              (g$make-who-condition$7326$CQIRF 'expander)
              (g$make-message-condition$7266$CQIRF
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$8751$CQIRF
                g$libname$8743$CQIRF
                g$failed-list$8744$CQIRF)))))))
   (g$read-library-source-file$8613$CQIRF
     g$read-library-source-file$8770$CQIRF
     (case-lambda
       ((g$file-name$8757$CQIRF)
        (g$with-input-from-file$8110$CQIRF
          g$file-name$8757$CQIRF
          read-annotated))))
   (g$make-parameter$8614$CQIRF
     g$make-parameter$8771$CQIRF
     (case-lambda
       ((g$x$8758$CQIRF)
        (g$make-parameter$8614$CQIRF
          g$x$8758$CQIRF
          (case-lambda ((g$x$8759$CQIRF) g$x$8759$CQIRF))))
       ((g$x$8760$CQIRF g$fender$8761$CQIRF)
        (begin
          (if (not (g$procedure?$6619$CQIRF g$fender$8761$CQIRF))
            (g$assertion-error$13559$CQIRF
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$8762$CQIRF)
              (case-lambda
                (() g$x$8762$CQIRF)
                ((g$v$8763$CQIRF)
                 (set! g$x$8762$CQIRF (g$fender$8761$CQIRF g$v$8763$CQIRF))))))
           (g$fender$8761$CQIRF g$x$8760$CQIRF))))))
   (g$file-options-constructor$8736$CQIRF
     g$file-options-constructor$8772$CQIRF
     (g$make-parameter$8614$CQIRF '#f))
   (g$file-options-spec$8737$CQIRF
     g$file-options-spec$8773$CQIRF
     (case-lambda
       ((g$x$8764$CQIRF)
        ((g$file-options-constructor$8736$CQIRF) g$x$8764$CQIRF))))
   (g$set-label-binding!$8738$CQIRF
     g$set-label-binding!$8774$CQIRF
     (case-lambda
       ((g$label$8765$CQIRF g$binding$8766$CQIRF)
        (set-symbol-value! g$label$8765$CQIRF g$binding$8766$CQIRF))))
   (g$label-binding$8739$CQIRF
     g$label-binding$8775$CQIRF
     (case-lambda
       ((g$label$8767$CQIRF)
        (if (symbol-bound? g$label$8767$CQIRF)
          (begin '#f (symbol-value g$label$8767$CQIRF))
          '#f)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$8971$CQIRF
     g$current-primitive-locations$9016$CQIRF
     (g$make-parameter$8771$CQIRF
       (case-lambda ((g$x$8977$CQIRF) '#f))
       (case-lambda
         ((g$p$8978$CQIRF)
          (begin
            (if (not (g$procedure?$6619$CQIRF g$p$8978$CQIRF))
              (g$assertion-error$13559$CQIRF
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$8978$CQIRF)))))
   (g$mutable?$8972$CQIRF
     g$mutable?$9017$CQIRF
     (case-lambda
       ((g$x$8979$CQIRF)
        (letrec* ((g$simple?$8980$CQIRF
                    (case-lambda
                      ((g$x$8981$CQIRF)
                       ((case-lambda
                          ((g$t$8982$CQIRF)
                           (if g$t$8982$CQIRF
                             g$t$8982$CQIRF
                             ((case-lambda
                                ((g$t$8983$CQIRF)
                                 (if g$t$8983$CQIRF
                                   g$t$8983$CQIRF
                                   ((case-lambda
                                      ((g$t$8984$CQIRF)
                                       (if g$t$8984$CQIRF
                                         g$t$8984$CQIRF
                                         ((case-lambda
                                            ((g$t$8985$CQIRF)
                                             (if g$t$8985$CQIRF
                                               g$t$8985$CQIRF
                                               ((case-lambda
                                                  ((g$t$8986$CQIRF)
                                                   (if g$t$8986$CQIRF
                                                     g$t$8986$CQIRF
                                                     ((case-lambda
                                                        ((g$t$8987$CQIRF)
                                                         (if g$t$8987$CQIRF
                                                           g$t$8987$CQIRF
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$8981$CQIRF)))))
                                                      (g$bytevector?$6616$CQIRF
                                                        g$x$8981$CQIRF)))))
                                                (string? g$x$8981$CQIRF)))))
                                          (g$boolean?$6618$CQIRF
                                            g$x$8981$CQIRF)))))
                                    (g$symbol?$6617$CQIRF g$x$8981$CQIRF)))))
                              (g$char?$6614$CQIRF g$x$8981$CQIRF)))))
                        (null? g$x$8981$CQIRF))))))
          (not (g$simple?$8980$CQIRF g$x$8979$CQIRF))))))
   (g$rewriter$8973$CQIRF
     g$rewriter$9018$CQIRF
     (case-lambda
       ((g$quote-hack?$8988$CQIRF)
        (letrec* ((g$f$8989$CQIRF
                    (case-lambda
                      ((g$x$8990$CQIRF)
                       (if (pair? g$x$8990$CQIRF)
                         ((case-lambda
                            ((g$t$8991$CQIRF)
                             (if (eqv? g$t$8991$CQIRF 'quote)
                               (if (if g$quote-hack?$8988$CQIRF
                                     (begin
                                       '#f
                                       (g$mutable?$8972$CQIRF
                                         (g$cadr$6626$CQIRF g$x$8990$CQIRF)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$8992$CQIRF)
                                     (begin
                                       (set-symbol-value!
                                         g$g$8992$CQIRF
                                         (g$cadr$6626$CQIRF g$x$8990$CQIRF))
                                       g$g$8992$CQIRF)))
                                  (gensym 'weak-temp))
                                 g$x$8990$CQIRF)
                               (if (eqv? g$t$8991$CQIRF 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (g$map$5946$CQIRF
                                     (case-lambda
                                       ((g$x$8993$CQIRF)
                                        (cons
                                          (car g$x$8993$CQIRF)
                                          (g$map$5946$CQIRF
                                            g$f$8989$CQIRF
                                            (cdr g$x$8993$CQIRF)))))
                                     (cdr g$x$8990$CQIRF)))
                                 (if (eqv? g$t$8991$CQIRF 'lambda)
                                   (g$cons*$5948$CQIRF
                                     'lambda
                                     (g$cadr$6626$CQIRF g$x$8990$CQIRF)
                                     (g$map$5946$CQIRF
                                       g$f$8989$CQIRF
                                       (g$cddr$6628$CQIRF g$x$8990$CQIRF)))
                                   (if (eqv? g$t$8991$CQIRF 'letrec)
                                     ((case-lambda
                                        ((g$bindings$8994$CQIRF
                                           g$body*$8995$CQIRF)
                                         ((case-lambda
                                            ((g$lhs*$8996$CQIRF
                                               g$rhs*$8997$CQIRF)
                                             (g$cons*$5948$CQIRF
                                               'letrec
                                               (g$map$5946$CQIRF
                                                 list
                                                 g$lhs*$8996$CQIRF
                                                 (g$map$5946$CQIRF
                                                   g$f$8989$CQIRF
                                                   g$rhs*$8997$CQIRF))
                                               (g$map$5946$CQIRF
                                                 g$f$8989$CQIRF
                                                 g$body*$8995$CQIRF))))
                                          (g$map$5946$CQIRF
                                            car
                                            g$bindings$8994$CQIRF)
                                          (g$map$5946$CQIRF
                                            g$cadr$6626$CQIRF
                                            g$bindings$8994$CQIRF))))
                                      (g$cadr$6626$CQIRF g$x$8990$CQIRF)
                                      (g$cddr$6628$CQIRF g$x$8990$CQIRF))
                                     (if (eqv? g$t$8991$CQIRF 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$8998$CQIRF
                                             g$body*$8999$CQIRF)
                                           ((case-lambda
                                              ((g$lhs*$9000$CQIRF
                                                 g$rhs*$9001$CQIRF)
                                               (g$cons*$5948$CQIRF
                                                 'letrec*
                                                 (g$map$5946$CQIRF
                                                   list
                                                   g$lhs*$9000$CQIRF
                                                   (g$map$5946$CQIRF
                                                     g$f$8989$CQIRF
                                                     g$rhs*$9001$CQIRF))
                                                 (g$map$5946$CQIRF
                                                   g$f$8989$CQIRF
                                                   g$body*$8999$CQIRF))))
                                            (g$map$5946$CQIRF
                                              car
                                              g$bindings$8998$CQIRF)
                                            (g$map$5946$CQIRF
                                              g$cadr$6626$CQIRF
                                              g$bindings$8998$CQIRF))))
                                        (g$cadr$6626$CQIRF g$x$8990$CQIRF)
                                        (g$cddr$6628$CQIRF g$x$8990$CQIRF))
                                       (if (eqv?
                                             g$t$8991$CQIRF
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$9002$CQIRF g$x$9003$CQIRF)
                                             ((case-lambda
                                                ((g$bindings$9004$CQIRF
                                                   g$body*$9005$CQIRF)
                                                 ((case-lambda
                                                    ((g$lhs*$9006$CQIRF
                                                       g$lhs**$9007$CQIRF
                                                       g$rhs*$9008$CQIRF)
                                                     (g$cons*$5948$CQIRF
                                                       'library-letrec*
                                                       g$name$9002$CQIRF
                                                       (g$map$5946$CQIRF
                                                         list
                                                         g$lhs*$9006$CQIRF
                                                         g$lhs**$9007$CQIRF
                                                         (g$map$5946$CQIRF
                                                           g$f$8989$CQIRF
                                                           g$rhs*$9008$CQIRF))
                                                       (g$map$5946$CQIRF
                                                         g$f$8989$CQIRF
                                                         g$body*$9005$CQIRF))))
                                                  (g$map$5946$CQIRF
                                                    car
                                                    g$bindings$9004$CQIRF)
                                                  (g$map$5946$CQIRF
                                                    g$cadr$6626$CQIRF
                                                    g$bindings$9004$CQIRF)
                                                  (g$map$5946$CQIRF
                                                    g$caddr$6632$CQIRF
                                                    g$bindings$9004$CQIRF))))
                                              (g$cadr$6626$CQIRF g$x$9003$CQIRF)
                                              (g$cddr$6628$CQIRF
                                                g$x$9003$CQIRF))))
                                          (g$cadr$6626$CQIRF g$x$8990$CQIRF)
                                          (cdr g$x$8990$CQIRF))
                                         (if (eqv? g$t$8991$CQIRF 'begin)
                                           (cons
                                             'begin
                                             (g$map$5946$CQIRF
                                               g$f$8989$CQIRF
                                               (cdr g$x$8990$CQIRF)))
                                           (if (eqv? g$t$8991$CQIRF 'set!)
                                             (list
                                               'set!
                                               (g$cadr$6626$CQIRF
                                                 g$x$8990$CQIRF)
                                               (g$f$8989$CQIRF
                                                 (g$caddr$6632$CQIRF
                                                   g$x$8990$CQIRF)))
                                             (if (eqv?
                                                   g$t$8991$CQIRF
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$9009$CQIRF)
                                                   ((case-lambda
                                                      ((g$t$9010$CQIRF)
                                                       (if g$t$9010$CQIRF
                                                         ((case-lambda
                                                            ((g$loc$9011$CQIRF)
                                                             g$loc$9011$CQIRF))
                                                          g$t$9010$CQIRF)
                                                         g$op$9009$CQIRF)))
                                                    ((g$current-primitive-locations$8971$CQIRF)
                                                     g$op$9009$CQIRF))))
                                                (g$cadr$6626$CQIRF
                                                  g$x$8990$CQIRF))
                                               (if (eqv? g$t$8991$CQIRF 'define)
                                                 g$x$8990$CQIRF
                                                 (if (list? g$x$8990$CQIRF)
                                                   (g$map$5946$CQIRF
                                                     g$f$8989$CQIRF
                                                     g$x$8990$CQIRF)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$8990$CQIRF
                                                     (list?
                                                       g$x$8990$CQIRF)))))))))))))))
                          (car g$x$8990$CQIRF))
                         g$x$8990$CQIRF)))))
          g$f$8989$CQIRF))))
   (g$expanded->core$8974$CQIRF
     g$expanded->core$9019$CQIRF
     (case-lambda
       ((g$x$9012$CQIRF) ((g$rewriter$8973$CQIRF '#t) g$x$9012$CQIRF))))
   (g$compile-core-expr$8975$CQIRF
     g$compile-core-expr$9020$CQIRF
     (case-lambda
       ((g$x$9013$CQIRF) ((g$rewriter$8973$CQIRF '#f) g$x$9013$CQIRF))))
   (g$compile-core-expr-to-port$8976$CQIRF
     g$compile-core-expr-to-port$9021$CQIRF
     (case-lambda
       ((g$x$9014$CQIRF g$p$9015$CQIRF)
        (g$pretty-print$8970$CQIRF
          ((g$rewriter$8973$CQIRF '#f) g$x$9014$CQIRF)
          g$p$9015$CQIRF)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$9022$CQIRF
     g$make-collection$9230$CQIRF
     (case-lambda
       (()
        ((case-lambda
           ((g$set$9085$CQIRF)
            (letrec* ((g$set-cons$9086$CQIRF
                        (case-lambda
                          ((g$x$9090$CQIRF g$ls$9091$CQIRF)
                           (if (g$memq$5938$CQIRF
                                 g$x$9090$CQIRF
                                 g$ls$9091$CQIRF)
                             g$ls$9091$CQIRF
                             (cons g$x$9090$CQIRF g$ls$9091$CQIRF))))))
              (case-lambda
                (() g$set$9085$CQIRF)
                ((g$x$9087$CQIRF)
                 (set! g$set$9085$CQIRF
                   (g$set-cons$9086$CQIRF g$x$9087$CQIRF g$set$9085$CQIRF)))
                ((g$x$9088$CQIRF g$del?$9089$CQIRF)
                 (if g$del?$9089$CQIRF
                   (set! g$set$9085$CQIRF
                     (g$remq$5953$CQIRF g$x$9088$CQIRF g$set$9085$CQIRF))
                   (set! g$set$9085$CQIRF
                     (g$set-cons$9086$CQIRF
                       g$x$9088$CQIRF
                       g$set$9085$CQIRF))))))))
         '()))))
   (g$current-library-collection$9023$CQIRF
     g$current-library-collection$9231$CQIRF
     (g$make-parameter$8771$CQIRF
       (g$make-collection$9022$CQIRF)
       (case-lambda
         ((g$x$9092$CQIRF)
          (begin
            (if (not (g$procedure?$6619$CQIRF g$x$9092$CQIRF))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$9092$CQIRF)
              (void))
            g$x$9092$CQIRF)))))
   (g$7354$9024$CQIRF
     g$7354$9232$CQIRF
     (make-record-type-descriptor
       'library
       '#f
       'g$7357$CQIRF
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7356$9025$CQIRF g$7356$9233$CQIRF '#f)
   (g$7355$9026$CQIRF
     g$7355$9234$CQIRF
     (make-record-constructor-descriptor
       g$7354$9024$CQIRF
       '#f
       g$7356$9025$CQIRF))
   (g$library?$9029$CQIRF
     g$library?$9235$CQIRF
     (record-predicate g$7354$9024$CQIRF))
   (g$make-library$9030$CQIRF
     g$make-library$9236$CQIRF
     (record-constructor g$7355$9026$CQIRF))
   (g$library-id$9031$CQIRF
     g$library-id$9237$CQIRF
     (record-accessor g$7354$9024$CQIRF '0))
   (g$library-name$9032$CQIRF
     g$library-name$9238$CQIRF
     (record-accessor g$7354$9024$CQIRF '1))
   (g$library-version$9033$CQIRF
     g$library-version$9239$CQIRF
     (record-accessor g$7354$9024$CQIRF '2))
   (g$library-imp*$9034$CQIRF
     g$library-imp*$9240$CQIRF
     (record-accessor g$7354$9024$CQIRF '3))
   (g$library-vis*$9035$CQIRF
     g$library-vis*$9241$CQIRF
     (record-accessor g$7354$9024$CQIRF '4))
   (g$library-inv*$9036$CQIRF
     g$library-inv*$9242$CQIRF
     (record-accessor g$7354$9024$CQIRF '5))
   (g$library-subst$9037$CQIRF
     g$library-subst$9243$CQIRF
     (record-accessor g$7354$9024$CQIRF '6))
   (g$library-env$9038$CQIRF
     g$library-env$9244$CQIRF
     (record-accessor g$7354$9024$CQIRF '7))
   (g$library-visit-state$9039$CQIRF
     g$library-visit-state$9245$CQIRF
     (record-accessor g$7354$9024$CQIRF '8))
   (g$library-invoke-state$9040$CQIRF
     g$library-invoke-state$9246$CQIRF
     (record-accessor g$7354$9024$CQIRF '9))
   (g$library-visit-code$9041$CQIRF
     g$library-visit-code$9247$CQIRF
     (record-accessor g$7354$9024$CQIRF '10))
   (g$library-invoke-code$9042$CQIRF
     g$library-invoke-code$9248$CQIRF
     (record-accessor g$7354$9024$CQIRF '11))
   (g$library-visible?$9043$CQIRF
     g$library-visible?$9249$CQIRF
     (record-accessor g$7354$9024$CQIRF '12))
   (g$library-source-file-name$9044$CQIRF
     g$library-source-file-name$9250$CQIRF
     (record-accessor g$7354$9024$CQIRF '13))
   (g$set-library-id!$9045$CQIRF
     g$set-library-id!$9251$CQIRF
     (record-mutator g$7354$9024$CQIRF '0))
   (g$set-library-name!$9046$CQIRF
     g$set-library-name!$9252$CQIRF
     (record-mutator g$7354$9024$CQIRF '1))
   (g$set-library-version!$9047$CQIRF
     g$set-library-version!$9253$CQIRF
     (record-mutator g$7354$9024$CQIRF '2))
   (g$set-library-imp*!$9048$CQIRF
     g$set-library-imp*!$9254$CQIRF
     (record-mutator g$7354$9024$CQIRF '3))
   (g$set-library-vis*!$9049$CQIRF
     g$set-library-vis*!$9255$CQIRF
     (record-mutator g$7354$9024$CQIRF '4))
   (g$set-library-inv*!$9050$CQIRF
     g$set-library-inv*!$9256$CQIRF
     (record-mutator g$7354$9024$CQIRF '5))
   (g$set-library-subst!$9051$CQIRF
     g$set-library-subst!$9257$CQIRF
     (record-mutator g$7354$9024$CQIRF '6))
   (g$set-library-env!$9052$CQIRF
     g$set-library-env!$9258$CQIRF
     (record-mutator g$7354$9024$CQIRF '7))
   (g$set-library-visit-state!$9053$CQIRF
     g$set-library-visit-state!$9259$CQIRF
     (record-mutator g$7354$9024$CQIRF '8))
   (g$set-library-invoke-state!$9054$CQIRF
     g$set-library-invoke-state!$9260$CQIRF
     (record-mutator g$7354$9024$CQIRF '9))
   (g$set-library-visit-code!$9055$CQIRF
     g$set-library-visit-code!$9261$CQIRF
     (record-mutator g$7354$9024$CQIRF '10))
   (g$set-library-invoke-code!$9056$CQIRF
     g$set-library-invoke-code!$9262$CQIRF
     (record-mutator g$7354$9024$CQIRF '11))
   (g$set-library-visible?!$9057$CQIRF
     g$set-library-visible?!$9263$CQIRF
     (record-mutator g$7354$9024$CQIRF '12))
   (g$set-library-source-file-name!$9058$CQIRF
     g$set-library-source-file-name!$9264$CQIRF
     (record-mutator g$7354$9024$CQIRF '13))
   (g$rp$9059$CQIRF
     g$rp$9265$CQIRF
     (make-record-printer
       'library
       (case-lambda
         ((g$x$9093$CQIRF g$p$9094$CQIRF g$wr$9095$CQIRF)
          (begin
            (if (not (g$library?$9029$CQIRF g$x$9093$CQIRF))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$8288$CQIRF
                '"#<library ~s>"
                (if (null? (g$library-version$9033$CQIRF g$x$9093$CQIRF))
                  (g$library-name$9032$CQIRF g$x$9093$CQIRF)
                  (append
                    (g$library-name$9032$CQIRF g$x$9093$CQIRF)
                    (list (g$library-version$9033$CQIRF g$x$9093$CQIRF)))))
              g$p$9094$CQIRF))))))
   (g$find-dependencies$9060$CQIRF
     g$find-dependencies$9266$CQIRF
     (case-lambda
       ((g$ls$9096$CQIRF)
        (if (null? g$ls$9096$CQIRF)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$9061$CQIRF
     g$find-library-by$9267$CQIRF
     (case-lambda
       ((g$pred$9097$CQIRF)
        ((letrec ((g$f$9098$CQIRF
                    (case-lambda
                      ((g$ls$9099$CQIRF)
                       (if (null? g$ls$9099$CQIRF)
                         '#f
                         (if (g$pred$9097$CQIRF (car g$ls$9099$CQIRF))
                           (car g$ls$9099$CQIRF)
                           (g$f$9098$CQIRF (cdr g$ls$9099$CQIRF))))))))
           g$f$9098$CQIRF)
         ((g$current-library-collection$9023$CQIRF))))))
   (g$library-path$9062$CQIRF
     g$library-path$9268$CQIRF
     (g$make-parameter$8771$CQIRF
       '(".")
       (case-lambda
         ((g$x$9100$CQIRF)
          (if (if (list? g$x$9100$CQIRF)
                (begin '#f (g$for-all$5944$CQIRF string? g$x$9100$CQIRF))
                '#f)
            (g$map$5946$CQIRF
              (case-lambda ((g$x$9101$CQIRF) g$x$9101$CQIRF))
              g$x$9100$CQIRF)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$9100$CQIRF))))))
   (g$library-extensions$9063$CQIRF
     g$library-extensions$9269$CQIRF
     (g$make-parameter$8771$CQIRF
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$9102$CQIRF)
          (if (if (list? g$x$9102$CQIRF)
                (begin '#f (g$for-all$5944$CQIRF string? g$x$9102$CQIRF))
                '#f)
            (g$map$5946$CQIRF
              (case-lambda ((g$x$9103$CQIRF) g$x$9103$CQIRF))
              g$x$9102$CQIRF)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$9102$CQIRF))))))
   (g$library-name->file-name$9064$CQIRF
     g$library-name->file-name$9270$CQIRF
     (case-lambda
       ((g$x$9104$CQIRF)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$8051$CQIRF)))
          (case-lambda
            ((g$p$9107$CQIRF g$extract$9108$CQIRF)
             ((case-lambda
                ((g$extract$9109$CQIRF g$p$9110$CQIRF)
                 (letrec* ((g$display-hex$9111$CQIRF
                             (case-lambda
                               ((g$n$9119$CQIRF)
                                (if (<= '0 g$n$9119$CQIRF '9)
                                  (display g$n$9119$CQIRF g$p$9110$CQIRF)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$9119$CQIRF '10)))
                                    g$p$9110$CQIRF))))))
                   (begin
                     ((letrec ((g$f$9112$CQIRF
                                 (case-lambda
                                   ((g$ls$9113$CQIRF)
                                    (if (not (null? g$ls$9113$CQIRF))
                                      (begin
                                        (display '"/" g$p$9110$CQIRF)
                                        (g$for-each$5947$CQIRF
                                          (case-lambda
                                            ((g$c$9114$CQIRF)
                                             (if ((case-lambda
                                                    ((g$t$9115$CQIRF)
                                                     (if g$t$9115$CQIRF
                                                       g$t$9115$CQIRF
                                                       ((case-lambda
                                                          ((g$t$9116$CQIRF)
                                                           (if g$t$9116$CQIRF
                                                             g$t$9116$CQIRF
                                                             ((case-lambda
                                                                ((g$t$9117$CQIRF)
                                                                 (if g$t$9117$CQIRF
                                                                   g$t$9117$CQIRF
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$5939$CQIRF
                                                                       g$c$9114$CQIRF
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$6672$CQIRF
                                                                '#\0
                                                                g$c$9114$CQIRF
                                                                '#\9)))))
                                                        (g$char<=?$6672$CQIRF
                                                          '#\A
                                                          g$c$9114$CQIRF
                                                          '#\Z)))))
                                                  (g$char<=?$6672$CQIRF
                                                    '#\a
                                                    g$c$9114$CQIRF
                                                    '#\z))
                                               (display
                                                 g$c$9114$CQIRF
                                                 g$p$9110$CQIRF)
                                               (begin
                                                 (display '"%" g$p$9110$CQIRF)
                                                 ((case-lambda
                                                    ((g$n$9118$CQIRF)
                                                     (begin
                                                       (g$display-hex$9111$CQIRF
                                                         (g$quotient$7526$CQIRF
                                                           g$n$9118$CQIRF
                                                           '16))
                                                       (g$display-hex$9111$CQIRF
                                                         (g$remainder$7527$CQIRF
                                                           g$n$9118$CQIRF
                                                           '16)))))
                                                  (char->integer
                                                    g$c$9114$CQIRF))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$9113$CQIRF))))
                                        (g$f$9112$CQIRF (cdr g$ls$9113$CQIRF)))
                                      (void))))))
                        g$f$9112$CQIRF)
                      g$x$9104$CQIRF)
                     (g$extract$9109$CQIRF)))))
              g$extract$9108$CQIRF
              g$p$9107$CQIRF)))))))
   (g$file-locator$9065$CQIRF
     g$file-locator$9271$CQIRF
     (g$make-parameter$8771$CQIRF
       (case-lambda
         ((g$x$9120$CQIRF)
          ((case-lambda
             ((g$str$9121$CQIRF)
              ((letrec ((g$f$9122$CQIRF
                          (case-lambda
                            ((g$ls$9123$CQIRF
                               g$exts$9124$CQIRF
                               g$failed-list$9125$CQIRF)
                             (if (null? g$ls$9123$CQIRF)
                               (g$file-locator-resolution-error$8769$CQIRF
                                 g$x$9120$CQIRF
                                 (g$reverse$6624$CQIRF
                                   g$failed-list$9125$CQIRF))
                               (if (null? g$exts$9124$CQIRF)
                                 (g$f$9122$CQIRF
                                   (cdr g$ls$9123$CQIRF)
                                   (g$library-extensions$9063$CQIRF)
                                   g$failed-list$9125$CQIRF)
                                 ((case-lambda
                                    ((g$name$9126$CQIRF)
                                     (if (g$file-exists?$6734$CQIRF
                                           g$name$9126$CQIRF)
                                       g$name$9126$CQIRF
                                       (g$f$9122$CQIRF
                                         g$ls$9123$CQIRF
                                         (cdr g$exts$9124$CQIRF)
                                         (cons
                                           g$name$9126$CQIRF
                                           g$failed-list$9125$CQIRF)))))
                                  (string-append
                                    (car g$ls$9123$CQIRF)
                                    g$str$9121$CQIRF
                                    (car g$exts$9124$CQIRF)))))))))
                 g$f$9122$CQIRF)
               (g$library-path$9062$CQIRF)
               (g$library-extensions$9063$CQIRF)
               '())))
           (g$library-name->file-name$9064$CQIRF g$x$9120$CQIRF))))
       (case-lambda
         ((g$f$9127$CQIRF)
          (if (g$procedure?$6619$CQIRF g$f$9127$CQIRF)
            g$f$9127$CQIRF
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$9127$CQIRF))))))
   (g$serialize-all$9066$CQIRF
     g$serialize-all$9272$CQIRF
     (case-lambda
       ((g$serialize$9128$CQIRF g$compile$9129$CQIRF)
        (letrec* ((g$library-desc$9130$CQIRF
                    (case-lambda
                      ((g$x$9132$CQIRF)
                       (list
                         (g$library-id$9031$CQIRF g$x$9132$CQIRF)
                         (g$library-name$9032$CQIRF g$x$9132$CQIRF))))))
          (g$for-each$5947$CQIRF
            (case-lambda
              ((g$x$9131$CQIRF)
               (if (g$library-source-file-name$9044$CQIRF g$x$9131$CQIRF)
                 (g$serialize$9128$CQIRF
                   (g$library-source-file-name$9044$CQIRF g$x$9131$CQIRF)
                   (list
                     (g$library-id$9031$CQIRF g$x$9131$CQIRF)
                     (g$library-name$9032$CQIRF g$x$9131$CQIRF)
                     (g$library-version$9033$CQIRF g$x$9131$CQIRF)
                     (g$map$5946$CQIRF
                       g$library-desc$9130$CQIRF
                       (g$library-imp*$9034$CQIRF g$x$9131$CQIRF))
                     (g$map$5946$CQIRF
                       g$library-desc$9130$CQIRF
                       (g$library-vis*$9035$CQIRF g$x$9131$CQIRF))
                     (g$map$5946$CQIRF
                       g$library-desc$9130$CQIRF
                       (g$library-inv*$9036$CQIRF g$x$9131$CQIRF))
                     (g$library-subst$9037$CQIRF g$x$9131$CQIRF)
                     (g$library-env$9038$CQIRF g$x$9131$CQIRF)
                     (g$compile$9129$CQIRF
                       (g$library-visit-code$9041$CQIRF g$x$9131$CQIRF))
                     (g$compile$9129$CQIRF
                       (g$library-invoke-code$9042$CQIRF g$x$9131$CQIRF))
                     (g$library-visible?$9043$CQIRF g$x$9131$CQIRF)))
                 (void))))
            ((g$current-library-collection$9023$CQIRF)))))))
   (g$current-precompiled-library-loader$9067$CQIRF
     g$current-precompiled-library-loader$9273$CQIRF
     (g$make-parameter$8771$CQIRF
       (case-lambda ((g$filename$9133$CQIRF g$sk$9134$CQIRF) '#f))))
   (g$try-load-from-file$9068$CQIRF
     g$try-load-from-file$9274$CQIRF
     (case-lambda
       ((g$filename$9135$CQIRF)
        ((g$current-precompiled-library-loader$9067$CQIRF)
         g$filename$9135$CQIRF
         (case-lambda
           ((g$id$9136$CQIRF
              g$name$9137$CQIRF
              g$ver$9138$CQIRF
              g$imp*$9139$CQIRF
              g$vis*$9140$CQIRF
              g$inv*$9141$CQIRF
              g$exp-subst$9142$CQIRF
              g$exp-env$9143$CQIRF
              g$visit-proc$9144$CQIRF
              g$invoke-proc$9145$CQIRF
              g$visible?$9146$CQIRF)
            ((letrec ((g$f$9147$CQIRF
                        (case-lambda
                          ((g$deps$9148$CQIRF)
                           (if (null? g$deps$9148$CQIRF)
                             (begin
                               (g$install-library$9078$CQIRF
                                 g$id$9136$CQIRF
                                 g$name$9137$CQIRF
                                 g$ver$9138$CQIRF
                                 g$imp*$9139$CQIRF
                                 g$vis*$9140$CQIRF
                                 g$inv*$9141$CQIRF
                                 g$exp-subst$9142$CQIRF
                                 g$exp-env$9143$CQIRF
                                 g$visit-proc$9144$CQIRF
                                 g$invoke-proc$9145$CQIRF
                                 '#f
                                 '#f
                                 g$visible?$9146$CQIRF
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$9149$CQIRF)
                                 ((case-lambda
                                    ((g$label$9150$CQIRF g$dname$9151$CQIRF)
                                     ((case-lambda
                                        ((g$l$9152$CQIRF)
                                         (if (if (g$library?$9029$CQIRF
                                                   g$l$9152$CQIRF)
                                               (begin
                                                 '#f
                                                 (eq? g$label$9150$CQIRF
                                                      (g$library-id$9031$CQIRF
                                                        g$l$9152$CQIRF)))
                                               '#f)
                                           (g$f$9147$CQIRF
                                             (cdr g$deps$9148$CQIRF))
                                           (begin
                                             (g$library-version-mismatch-warning$8768$CQIRF
                                               g$name$9137$CQIRF
                                               g$dname$9151$CQIRF
                                               g$filename$9135$CQIRF)
                                             '#f))))
                                      (g$find-library-by-name$9073$CQIRF
                                        g$dname$9151$CQIRF))))
                                  (car g$d$9149$CQIRF)
                                  (g$cadr$6626$CQIRF g$d$9149$CQIRF))))
                              (car g$deps$9148$CQIRF)))))))
               g$f$9147$CQIRF)
             (append g$imp*$9139$CQIRF g$vis*$9140$CQIRF g$inv*$9141$CQIRF)))
           (g$others$9153$CQIRF '#f))))))
   (g$library-loader$9069$CQIRF
     g$library-loader$9275$CQIRF
     (g$make-parameter$8771$CQIRF
       (case-lambda
         ((g$x$9154$CQIRF)
          ((case-lambda
             ((g$file-name$9155$CQIRF)
              (if (not g$file-name$9155$CQIRF)
                (assertion-violation '#f '"cannot find library" g$x$9154$CQIRF)
                ((case-lambda
                   ((g$t$9156$CQIRF)
                    (if g$t$9156$CQIRF
                      g$t$9156$CQIRF
                      (begin
                        '#f
                        ((g$current-library-expander$9070$CQIRF)
                         (g$read-library-source-file$8770$CQIRF
                           g$file-name$9155$CQIRF)
                         g$file-name$9155$CQIRF
                         (case-lambda
                           ((g$name$9157$CQIRF)
                            (if (not (equal? g$name$9157$CQIRF g$x$9154$CQIRF))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$8051$CQIRF)))
                                  (case-lambda
                                    ((g$p$9160$CQIRF g$e$9161$CQIRF)
                                     ((case-lambda
                                        ((g$e$9162$CQIRF g$p$9163$CQIRF)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$9163$CQIRF)
                                           (write g$x$9154$CQIRF g$p$9163$CQIRF)
                                           (display '" in file " g$p$9163$CQIRF)
                                           (display
                                             g$file-name$9155$CQIRF
                                             g$p$9163$CQIRF)
                                           (display '", found " g$p$9163$CQIRF)
                                           (write
                                             g$name$9157$CQIRF
                                             g$p$9163$CQIRF)
                                           (display '" instead" g$p$9163$CQIRF)
                                           (g$e$9162$CQIRF))))
                                      g$e$9161$CQIRF
                                      g$p$9160$CQIRF)))))
                              (void)))))))))
                 (g$try-load-from-file$9068$CQIRF g$file-name$9155$CQIRF)))))
           ((g$file-locator$9065$CQIRF) g$x$9154$CQIRF))))
       (case-lambda
         ((g$f$9164$CQIRF)
          (if (g$procedure?$6619$CQIRF g$f$9164$CQIRF)
            g$f$9164$CQIRF
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$9164$CQIRF))))))
   (g$current-library-expander$9070$CQIRF
     g$current-library-expander$9276$CQIRF
     (g$make-parameter$8771$CQIRF
       (case-lambda
         ((g$x$9165$CQIRF)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$9166$CQIRF)
          (if (g$procedure?$6619$CQIRF g$f$9166$CQIRF)
            g$f$9166$CQIRF
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$9166$CQIRF))))))
   (g$external-pending-libraries$9071$CQIRF
     g$external-pending-libraries$9277$CQIRF
     (g$make-parameter$8771$CQIRF '()))
   (g$find-external-library$9072$CQIRF
     g$find-external-library$9278$CQIRF
     (case-lambda
       ((g$name$9167$CQIRF)
        (begin
          (if (g$member$5940$CQIRF
                g$name$9167$CQIRF
                (g$external-pending-libraries$9071$CQIRF))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$9167$CQIRF)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$9170$CQIRF
                g$external-pending-libraries$9171$CQIRF)
              ((case-lambda
                 ((g$swap$9172$CQIRF)
                  (dynamic-wind
                    g$swap$9172$CQIRF
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$9069$CQIRF) g$name$9167$CQIRF)
                         ((case-lambda
                            ((g$t$9173$CQIRF)
                             (if g$t$9173$CQIRF
                               g$t$9173$CQIRF
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$9167$CQIRF)))))
                          (g$find-library-by$9061$CQIRF
                            (case-lambda
                              ((g$x$9174$CQIRF)
                               (equal?
                                 (g$library-name$9032$CQIRF g$x$9174$CQIRF)
                                 g$name$9167$CQIRF))))))))
                    g$swap$9172$CQIRF)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$9175$CQIRF)
                      (begin
                        (g$external-pending-libraries$9170$CQIRF
                          g$external-pending-libraries$9171$CQIRF)
                        (set! g$external-pending-libraries$9171$CQIRF
                          g$t$9175$CQIRF))))
                   (g$external-pending-libraries$9170$CQIRF)))))))
           g$external-pending-libraries$9071$CQIRF
           (cons
             g$name$9167$CQIRF
             (g$external-pending-libraries$9071$CQIRF)))))))
   (g$find-library-by-name$9073$CQIRF
     g$find-library-by-name$9279$CQIRF
     (case-lambda
       ((g$name$9176$CQIRF)
        ((case-lambda
           ((g$t$9177$CQIRF)
            (if g$t$9177$CQIRF
              g$t$9177$CQIRF
              (begin
                '#f
                (g$find-external-library$9072$CQIRF g$name$9176$CQIRF)))))
         (g$find-library-by$9061$CQIRF
           (case-lambda
             ((g$x$9178$CQIRF)
              (equal?
                (g$library-name$9032$CQIRF g$x$9178$CQIRF)
                g$name$9176$CQIRF))))))))
   (g$uninstall-library$9074$CQIRF
     g$uninstall-library$9280$CQIRF
     (case-lambda
       ((g$name$9179$CQIRF g$err?$9180$CQIRF)
        (letrec* ((g$who$9181$CQIRF 'uninstall-library))
          ((case-lambda
             ((g$lib$9182$CQIRF)
              (begin
                (if (if g$err?$9180$CQIRF
                      (begin '#f (not g$lib$9182$CQIRF))
                      '#f)
                  (assertion-violation
                    g$who$9181$CQIRF
                    '"library not installed"
                    g$name$9179$CQIRF)
                  (void))
                ((g$current-library-collection$9023$CQIRF) g$lib$9182$CQIRF '#t)
                (g$for-each$5947$CQIRF
                  (case-lambda
                    ((g$x$9183$CQIRF)
                     ((case-lambda
                        ((g$label$9184$CQIRF g$binding$9185$CQIRF)
                         (begin
                           (remove-location g$label$9184$CQIRF)
                           (if (g$memq$5938$CQIRF
                                 (car g$binding$9185$CQIRF)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location (cdr g$binding$9185$CQIRF))
                             (void)))))
                      (car g$x$9183$CQIRF)
                      (cdr g$x$9183$CQIRF))))
                  (g$library-env$9038$CQIRF g$lib$9182$CQIRF)))))
           (g$find-library-by$9061$CQIRF
             (case-lambda
               ((g$x$9186$CQIRF)
                (equal?
                  (g$library-name$9032$CQIRF g$x$9186$CQIRF)
                  g$name$9179$CQIRF)))))))
       ((g$name$9187$CQIRF)
        (g$uninstall-library$9074$CQIRF g$name$9187$CQIRF '#t))))
   (g$library-exists?$9075$CQIRF
     g$library-exists?$9281$CQIRF
     (case-lambda
       ((g$name$9188$CQIRF)
        (if (g$find-library-by$9061$CQIRF
              (case-lambda
                ((g$x$9189$CQIRF)
                 (equal?
                   (g$library-name$9032$CQIRF g$x$9189$CQIRF)
                   g$name$9188$CQIRF))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$9076$CQIRF
     g$find-library-by-spec/die$9282$CQIRF
     (case-lambda
       ((g$spec$9190$CQIRF)
        ((case-lambda
           ((g$id$9191$CQIRF)
            ((case-lambda
               ((g$t$9192$CQIRF)
                (if g$t$9192$CQIRF
                  g$t$9192$CQIRF
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$9190$CQIRF)))))
             (g$find-library-by$9061$CQIRF
               (case-lambda
                 ((g$x$9193$CQIRF)
                  (eq? g$id$9191$CQIRF
                       (g$library-id$9031$CQIRF g$x$9193$CQIRF))))))))
         (car g$spec$9190$CQIRF)))))
   (g$install-library-record$9077$CQIRF
     g$install-library-record$9283$CQIRF
     (case-lambda
       ((g$lib$9194$CQIRF)
        (begin
          ((case-lambda
             ((g$exp-env$9195$CQIRF)
              (g$for-each$5947$CQIRF
                (case-lambda
                  ((g$x$9196$CQIRF)
                   ((case-lambda
                      ((g$label$9197$CQIRF g$binding$9198$CQIRF)
                       ((case-lambda
                          ((g$binding$9199$CQIRF)
                           (g$set-label-binding!$8774$CQIRF
                             g$label$9197$CQIRF
                             g$binding$9199$CQIRF)))
                        ((case-lambda
                           ((g$t$9200$CQIRF)
                            (if (eqv? g$t$9200$CQIRF 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$9194$CQIRF
                                  (cdr g$binding$9198$CQIRF)))
                              (if (eqv? g$t$9200$CQIRF 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$9194$CQIRF
                                    (cdr g$binding$9198$CQIRF)))
                                (if (eqv? g$t$9200$CQIRF 'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$9194$CQIRF
                                      (cdr g$binding$9198$CQIRF)))
                                  (if (eqv? g$t$9200$CQIRF 'global-ctv)
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$9194$CQIRF
                                        (cdr g$binding$9198$CQIRF)))
                                    g$binding$9198$CQIRF))))))
                         (car g$binding$9198$CQIRF)))))
                    (car g$x$9196$CQIRF)
                    (cdr g$x$9196$CQIRF))))
                g$exp-env$9195$CQIRF)))
           (g$library-env$9038$CQIRF g$lib$9194$CQIRF))
          ((g$current-library-collection$9023$CQIRF) g$lib$9194$CQIRF)))))
   (g$install-library$9078$CQIRF
     g$install-library$9284$CQIRF
     (case-lambda
       ((g$id$9201$CQIRF
          g$name$9202$CQIRF
          g$ver$9203$CQIRF
          g$imp*$9204$CQIRF
          g$vis*$9205$CQIRF
          g$inv*$9206$CQIRF
          g$exp-subst$9207$CQIRF
          g$exp-env$9208$CQIRF
          g$visit-proc$9209$CQIRF
          g$invoke-proc$9210$CQIRF
          g$visit-code$9211$CQIRF
          g$invoke-code$9212$CQIRF
          g$visible?$9213$CQIRF
          g$source-file-name$9214$CQIRF)
        ((case-lambda
           ((g$imp-lib*$9215$CQIRF g$vis-lib*$9216$CQIRF g$inv-lib*$9217$CQIRF)
            (begin
              (if (not (if (g$symbol?$6617$CQIRF g$id$9201$CQIRF)
                         (if (list? g$name$9202$CQIRF)
                           (begin '#f (list? g$ver$9203$CQIRF))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$9201$CQIRF
                  g$name$9202$CQIRF
                  g$ver$9203$CQIRF)
                (void))
              (if (g$library-exists?$9075$CQIRF g$name$9202$CQIRF)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$9202$CQIRF)
                (void))
              ((case-lambda
                 ((g$lib$9218$CQIRF)
                  (g$install-library-record$9077$CQIRF g$lib$9218$CQIRF)))
               (g$make-library$9030$CQIRF
                 g$id$9201$CQIRF
                 g$name$9202$CQIRF
                 g$ver$9203$CQIRF
                 g$imp-lib*$9215$CQIRF
                 g$vis-lib*$9216$CQIRF
                 g$inv-lib*$9217$CQIRF
                 g$exp-subst$9207$CQIRF
                 g$exp-env$9208$CQIRF
                 g$visit-proc$9209$CQIRF
                 g$invoke-proc$9210$CQIRF
                 g$visit-code$9211$CQIRF
                 g$invoke-code$9212$CQIRF
                 g$visible?$9213$CQIRF
                 g$source-file-name$9214$CQIRF)))))
         (g$map$5946$CQIRF
           g$find-library-by-spec/die$9076$CQIRF
           g$imp*$9204$CQIRF)
         (g$map$5946$CQIRF
           g$find-library-by-spec/die$9076$CQIRF
           g$vis*$9205$CQIRF)
         (g$map$5946$CQIRF
           g$find-library-by-spec/die$9076$CQIRF
           g$inv*$9206$CQIRF)))))
   (g$imported-label->binding$9079$CQIRF
     g$imported-label->binding$9285$CQIRF
     (case-lambda
       ((g$lab$9219$CQIRF) (g$label-binding$8775$CQIRF g$lab$9219$CQIRF))))
   (g$invoke-library$9080$CQIRF
     g$invoke-library$9286$CQIRF
     (case-lambda
       ((g$lib$9220$CQIRF)
        ((case-lambda
           ((g$invoke$9221$CQIRF)
            (if (g$procedure?$6619$CQIRF g$invoke$9221$CQIRF)
              (begin
                (g$set-library-invoke-state!$9054$CQIRF
                  g$lib$9220$CQIRF
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$9220$CQIRF))))
                (g$for-each$5947$CQIRF
                  g$invoke-library$9080$CQIRF
                  (g$library-inv*$9036$CQIRF g$lib$9220$CQIRF))
                (g$set-library-invoke-state!$9054$CQIRF
                  g$lib$9220$CQIRF
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$9220$CQIRF))))
                (g$invoke$9221$CQIRF)
                (g$set-library-invoke-state!$9054$CQIRF g$lib$9220$CQIRF '#t))
              (void))))
         (g$library-invoke-state$9040$CQIRF g$lib$9220$CQIRF)))))
   (g$visit-library$9081$CQIRF
     g$visit-library$9287$CQIRF
     (case-lambda
       ((g$lib$9222$CQIRF)
        ((case-lambda
           ((g$visit$9223$CQIRF)
            (if (g$procedure?$6619$CQIRF g$visit$9223$CQIRF)
              (begin
                (g$set-library-visit-state!$9053$CQIRF
                  g$lib$9222$CQIRF
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$9222$CQIRF))))
                (g$for-each$5947$CQIRF
                  g$invoke-library$9080$CQIRF
                  (g$library-vis*$9035$CQIRF g$lib$9222$CQIRF))
                (g$set-library-visit-state!$9053$CQIRF
                  g$lib$9222$CQIRF
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$9222$CQIRF))))
                (g$visit$9223$CQIRF)
                (g$set-library-visit-state!$9053$CQIRF g$lib$9222$CQIRF '#t))
              (void))))
         (g$library-visit-state$9039$CQIRF g$lib$9222$CQIRF)))))
   (g$invoke-library-by-spec$9082$CQIRF
     g$invoke-library-by-spec$9288$CQIRF
     (case-lambda
       ((g$spec$9224$CQIRF)
        (g$invoke-library$9080$CQIRF
          (g$find-library-by-spec/die$9076$CQIRF g$spec$9224$CQIRF)))))
   (g$installed-libraries$9083$CQIRF
     g$installed-libraries$9289$CQIRF
     (case-lambda
       ((g$all?$9225$CQIRF)
        ((letrec ((g$f$9226$CQIRF
                    (case-lambda
                      ((g$ls$9227$CQIRF)
                       (if (null? g$ls$9227$CQIRF)
                         '()
                         (if ((case-lambda
                                ((g$t$9228$CQIRF)
                                 (if g$t$9228$CQIRF
                                   g$t$9228$CQIRF
                                   (begin
                                     '#f
                                     (g$library-visible?$9043$CQIRF
                                       (car g$ls$9227$CQIRF))))))
                              g$all?$9225$CQIRF)
                           (cons
                             (g$library-name$9032$CQIRF (car g$ls$9227$CQIRF))
                             (g$f$9226$CQIRF (cdr g$ls$9227$CQIRF)))
                           (g$f$9226$CQIRF (cdr g$ls$9227$CQIRF))))))))
           g$f$9226$CQIRF)
         ((g$current-library-collection$9023$CQIRF))))
       (() (g$installed-libraries$9083$CQIRF '#f))))
   (g$library-spec$9084$CQIRF
     g$library-spec$9290$CQIRF
     (case-lambda
       ((g$x$9229$CQIRF)
        (begin
          (if (not (g$library?$9029$CQIRF g$x$9229$CQIRF))
            (assertion-violation 'library-spec '"not a library" g$x$9229$CQIRF)
            (void))
          (list
            (g$library-id$9031$CQIRF g$x$9229$CQIRF)
            (g$library-name$9032$CQIRF g$x$9229$CQIRF)
            (g$library-version$9033$CQIRF g$x$9229$CQIRF)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$9291$CQIRF
     g$build-global-define$9468$CQIRF
     (case-lambda ((g$x$9439$CQIRF) (g$build-void$9435$CQIRF))))
   (g$build-lambda$9381$CQIRF
     g$build-lambda$9469$CQIRF
     (case-lambda
       ((g$ae$9440$CQIRF g$vars$9441$CQIRF g$exp$9442$CQIRF)
        (list 'case-lambda (list g$vars$9441$CQIRF g$exp$9442$CQIRF)))))
   (g$build-case-lambda$9382$CQIRF
     g$build-case-lambda$9470$CQIRF
     (case-lambda
       ((g$ae$9443$CQIRF g$vars*$9444$CQIRF g$exp*$9445$CQIRF)
        (cons
          'case-lambda
          (g$map$5946$CQIRF list g$vars*$9444$CQIRF g$exp*$9445$CQIRF)))))
   (g$build-let$9383$CQIRF
     g$build-let$9471$CQIRF
     (case-lambda
       ((g$ae$9446$CQIRF g$lhs*$9447$CQIRF g$rhs*$9448$CQIRF g$body$9449$CQIRF)
        (cons
          (g$build-lambda$9381$CQIRF
            g$ae$9446$CQIRF
            g$lhs*$9447$CQIRF
            g$body$9449$CQIRF)
          g$rhs*$9448$CQIRF))))
   (g$build-sequence$9434$CQIRF
     g$build-sequence$9472$CQIRF
     (case-lambda
       ((g$ae$9450$CQIRF g$exps$9451$CQIRF)
        ((letrec ((g$loop$9452$CQIRF
                    (case-lambda
                      ((g$exps$9453$CQIRF)
                       (if (null? (cdr g$exps$9453$CQIRF))
                         (car g$exps$9453$CQIRF)
                         (if (equal?
                               (car g$exps$9453$CQIRF)
                               (g$build-void$9435$CQIRF))
                           (g$loop$9452$CQIRF (cdr g$exps$9453$CQIRF))
                           (cons 'begin g$exps$9453$CQIRF)))))))
           g$loop$9452$CQIRF)
         g$exps$9451$CQIRF))))
   (g$build-void$9435$CQIRF
     g$build-void$9473$CQIRF
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$9436$CQIRF
     g$build-letrec$9474$CQIRF
     (case-lambda
       ((g$ae$9454$CQIRF
          g$vars$9455$CQIRF
          g$val-exps$9456$CQIRF
          g$body-exp$9457$CQIRF)
        (if (null? g$vars$9455$CQIRF)
          g$body-exp$9457$CQIRF
          (list
            'letrec
            (g$map$5946$CQIRF list g$vars$9455$CQIRF g$val-exps$9456$CQIRF)
            g$body-exp$9457$CQIRF)))))
   (g$build-letrec*$9437$CQIRF
     g$build-letrec*$9475$CQIRF
     (case-lambda
       ((g$ae$9458$CQIRF
          g$vars$9459$CQIRF
          g$val-exps$9460$CQIRF
          g$body-exp$9461$CQIRF)
        (if (null? g$vars$9459$CQIRF)
          g$body-exp$9461$CQIRF
          (list
            'letrec*
            (g$map$5946$CQIRF list g$vars$9459$CQIRF g$val-exps$9460$CQIRF)
            g$body-exp$9461$CQIRF)))))
   (g$build-library-letrec*$9438$CQIRF
     g$build-library-letrec*$9476$CQIRF
     (case-lambda
       ((g$ae$9462$CQIRF
          g$name$9463$CQIRF
          g$vars$9464$CQIRF
          g$locs$9465$CQIRF
          g$val-exps$9466$CQIRF
          g$body-exp$9467$CQIRF)
        (list
          'library-letrec*
          g$name$9463$CQIRF
          (g$map$5946$CQIRF
            list
            g$vars$9464$CQIRF
            g$locs$9465$CQIRF
            g$val-exps$9466$CQIRF)
          g$body-exp$9467$CQIRF)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$9477$CQIRF
     g$set-cons$13299$CQIRF
     (case-lambda
       ((g$x$10037$CQIRF g$ls$10038$CQIRF)
        (if (g$memq$5938$CQIRF g$x$10037$CQIRF g$ls$10038$CQIRF)
          g$ls$10038$CQIRF
          (cons g$x$10037$CQIRF g$ls$10038$CQIRF)))))
   (g$set-union$9478$CQIRF
     g$set-union$13300$CQIRF
     (case-lambda
       ((g$ls1$10039$CQIRF g$ls2$10040$CQIRF)
        (if (null? g$ls1$10039$CQIRF)
          g$ls2$10040$CQIRF
          (if (g$memq$5938$CQIRF (car g$ls1$10039$CQIRF) g$ls2$10040$CQIRF)
            (g$set-union$9478$CQIRF (cdr g$ls1$10039$CQIRF) g$ls2$10040$CQIRF)
            (cons
              (car g$ls1$10039$CQIRF)
              (g$set-union$9478$CQIRF
                (cdr g$ls1$10039$CQIRF)
                g$ls2$10040$CQIRF)))))))
   (g$top-mark*$9480$CQIRF g$top-mark*$13301$CQIRF '(top))
   (g$top-marked?$9481$CQIRF
     g$top-marked?$13302$CQIRF
     (case-lambda
       ((g$m*$10041$CQIRF) (g$memq$5938$CQIRF 'top g$m*$10041$CQIRF))))
   (g$gen-lexical$9482$CQIRF
     g$gen-lexical$13303$CQIRF
     (case-lambda
       ((g$sym$10042$CQIRF)
        (if (g$symbol?$6617$CQIRF g$sym$10042$CQIRF)
          (gensym g$sym$10042$CQIRF)
          (if (g$stx?$9519$CQIRF g$sym$10042$CQIRF)
            (g$gen-lexical$9482$CQIRF (g$id->sym$9548$CQIRF g$sym$10042$CQIRF))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$10042$CQIRF))))))
   (g$gen-global$9483$CQIRF
     g$gen-global$13304$CQIRF
     (case-lambda
       ((g$x$10043$CQIRF) (g$gen-lexical$9482$CQIRF g$x$10043$CQIRF))))
   (g$gen-label$9484$CQIRF
     g$gen-label$13305$CQIRF
     (case-lambda ((g$_$10044$CQIRF) (gensym))))
   (g$gen-top-level-label$9485$CQIRF
     g$gen-top-level-label$13306$CQIRF
     (case-lambda
       ((g$id$10045$CQIRF g$rib$10046$CQIRF)
        (letrec* ((g$find$10047$CQIRF
                    (case-lambda
                      ((g$sym$10053$CQIRF
                         g$mark*$10054$CQIRF
                         g$sym*$10055$CQIRF
                         g$mark**$10056$CQIRF
                         g$label*$10057$CQIRF)
                       (if (pair? g$sym*$10055$CQIRF)
                         (begin
                           '#f
                           (if (if (eq? g$sym$10053$CQIRF
                                        (car g$sym*$10055$CQIRF))
                                 (begin
                                   '#f
                                   (g$same-marks?$9549$CQIRF
                                     g$mark*$10054$CQIRF
                                     (car g$mark**$10056$CQIRF)))
                                 '#f)
                             (car g$label*$10057$CQIRF)
                             (g$find$10047$CQIRF
                               g$sym$10053$CQIRF
                               g$mark*$10054$CQIRF
                               (cdr g$sym*$10055$CQIRF)
                               (cdr g$mark**$10056$CQIRF)
                               (cdr g$label*$10057$CQIRF))))
                         '#f)))))
          ((case-lambda
             ((g$sym$10048$CQIRF g$mark*$10049$CQIRF)
              ((case-lambda
                 ((g$sym*$10050$CQIRF)
                  ((case-lambda
                     ((g$t$10051$CQIRF)
                      (if g$t$10051$CQIRF
                        ((case-lambda
                           ((g$label$10052$CQIRF)
                            (if (g$imported-label->binding$9285$CQIRF
                                  g$label$10052$CQIRF)
                              (gensym)
                              g$label$10052$CQIRF)))
                         g$t$10051$CQIRF)
                        (gensym))))
                   (if (g$memq$5938$CQIRF
                         g$sym$10048$CQIRF
                         (g$rib-sym*$9495$CQIRF g$rib$10046$CQIRF))
                     (begin
                       '#f
                       (g$find$10047$CQIRF
                         g$sym$10048$CQIRF
                         g$mark*$10049$CQIRF
                         g$sym*$10050$CQIRF
                         (g$rib-mark**$9496$CQIRF g$rib$10046$CQIRF)
                         (g$rib-label*$9497$CQIRF g$rib$10046$CQIRF)))
                     '#f))))
               (g$rib-sym*$9495$CQIRF g$rib$10046$CQIRF))))
           (g$id->sym$9548$CQIRF g$id$10045$CQIRF)
           (g$stx-mark*$9522$CQIRF g$id$10045$CQIRF))))))
   (g$gen-define-label+loc$9486$CQIRF
     g$gen-define-label+loc$13307$CQIRF
     (case-lambda
       ((g$id$10058$CQIRF g$rib$10059$CQIRF g$sd?$10060$CQIRF)
        (if g$sd?$10060$CQIRF
          (values (gensym) (g$gen-lexical$9482$CQIRF g$id$10058$CQIRF))
          ((case-lambda
             ((g$env$10061$CQIRF)
              ((case-lambda
                 ((g$label$10062$CQIRF g$locs$10063$CQIRF)
                  (values
                    g$label$10062$CQIRF
                    ((case-lambda
                       ((g$t$10064$CQIRF)
                        (if g$t$10064$CQIRF
                          (cdr g$t$10064$CQIRF)
                          ((case-lambda
                             ((g$loc$10065$CQIRF)
                              (begin
                                (g$set-interaction-env-locs!$9999$CQIRF
                                  g$env$10061$CQIRF
                                  (cons
                                    (cons g$label$10062$CQIRF g$loc$10065$CQIRF)
                                    g$locs$10063$CQIRF))
                                g$loc$10065$CQIRF)))
                           (g$gen-lexical$9482$CQIRF g$id$10058$CQIRF)))))
                     (g$assq$5934$CQIRF
                       g$label$10062$CQIRF
                       g$locs$10063$CQIRF)))))
               (g$gen-top-level-label$9485$CQIRF
                 g$id$10058$CQIRF
                 g$rib$10059$CQIRF)
               (g$interaction-env-locs$9996$CQIRF g$env$10061$CQIRF))))
           (g$top-level-context$10036$CQIRF))))))
   (g$gen-define-label$9487$CQIRF
     g$gen-define-label$13308$CQIRF
     (case-lambda
       ((g$id$10066$CQIRF g$rib$10067$CQIRF g$sd?$10068$CQIRF)
        (if g$sd?$10068$CQIRF
          (gensym)
          (g$gen-top-level-label$9485$CQIRF
            g$id$10066$CQIRF
            g$rib$10067$CQIRF)))))
   (g$7680$9488$CQIRF
     g$7680$13309$CQIRF
     (make-record-type-descriptor
       'rib
       '#f
       'g$7683$CQIRF
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$7682$9489$CQIRF g$7682$13310$CQIRF '#f)
   (g$7681$9490$CQIRF
     g$7681$13311$CQIRF
     (make-record-constructor-descriptor
       g$7680$9488$CQIRF
       '#f
       g$7682$9489$CQIRF))
   (g$rib?$9493$CQIRF
     g$rib?$13312$CQIRF
     (record-predicate g$7680$9488$CQIRF))
   (g$make-rib$9494$CQIRF
     g$make-rib$13313$CQIRF
     (record-constructor g$7681$9490$CQIRF))
   (g$rib-sym*$9495$CQIRF
     g$rib-sym*$13314$CQIRF
     (record-accessor g$7680$9488$CQIRF '0))
   (g$rib-mark**$9496$CQIRF
     g$rib-mark**$13315$CQIRF
     (record-accessor g$7680$9488$CQIRF '1))
   (g$rib-label*$9497$CQIRF
     g$rib-label*$13316$CQIRF
     (record-accessor g$7680$9488$CQIRF '2))
   (g$rib-sealed/freq$9498$CQIRF
     g$rib-sealed/freq$13317$CQIRF
     (record-accessor g$7680$9488$CQIRF '3))
   (g$rib-cache$9499$CQIRF
     g$rib-cache$13318$CQIRF
     (record-accessor g$7680$9488$CQIRF '4))
   (g$set-rib-sym*!$9500$CQIRF
     g$set-rib-sym*!$13319$CQIRF
     (record-mutator g$7680$9488$CQIRF '0))
   (g$set-rib-mark**!$9501$CQIRF
     g$set-rib-mark**!$13320$CQIRF
     (record-mutator g$7680$9488$CQIRF '1))
   (g$set-rib-label*!$9502$CQIRF
     g$set-rib-label*!$13321$CQIRF
     (record-mutator g$7680$9488$CQIRF '2))
   (g$set-rib-sealed/freq!$9503$CQIRF
     g$set-rib-sealed/freq!$13322$CQIRF
     (record-mutator g$7680$9488$CQIRF '3))
   (g$set-rib-cache!$9504$CQIRF
     g$set-rib-cache!$13323$CQIRF
     (record-mutator g$7680$9488$CQIRF '4))
   (g$make-empty-rib$9505$CQIRF
     g$make-empty-rib$13324$CQIRF
     (case-lambda (() (g$make-rib$9494$CQIRF '() '() '() '#f '#f))))
   (g$make-cache-rib$9506$CQIRF
     g$make-cache-rib$13325$CQIRF
     (case-lambda
       (()
        (g$make-rib$9494$CQIRF
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$6716$CQIRF)))))
   (g$find-label$9507$CQIRF
     g$find-label$13326$CQIRF
     (case-lambda
       ((g$rib$10069$CQIRF g$sym$10070$CQIRF g$mark*$10071$CQIRF)
        ((case-lambda
           ((g$ht$10072$CQIRF)
            (if g$ht$10072$CQIRF
              (begin
                '#f
                ((case-lambda
                   ((g$cv$10073$CQIRF)
                    ((case-lambda
                       ((g$t$10074$CQIRF)
                        (if g$t$10074$CQIRF (cdr g$t$10074$CQIRF) '#f)))
                     (if g$cv$10073$CQIRF
                       (begin
                         '#f
                         (g$assp$5937$CQIRF
                           (case-lambda
                             ((g$m$10075$CQIRF)
                              (g$same-marks?$9549$CQIRF
                                g$mark*$10071$CQIRF
                                g$m$10075$CQIRF)))
                           g$cv$10073$CQIRF))
                       '#f))))
                 (g$hashtable-ref$6719$CQIRF
                   g$ht$10072$CQIRF
                   g$sym$10070$CQIRF
                   '#f)))
              '#f)))
         (g$rib-cache$9499$CQIRF g$rib$10069$CQIRF)))))
   (g$extend-rib!$9508$CQIRF
     g$extend-rib!$13327$CQIRF
     (case-lambda
       ((g$rib$10076$CQIRF
          g$id$10077$CQIRF
          g$label$10078$CQIRF
          g$sd?$10079$CQIRF)
        (letrec* ((g$find$10080$CQIRF
                    (case-lambda
                      ((g$sym$10089$CQIRF
                         g$mark*$10090$CQIRF
                         g$sym*$10091$CQIRF
                         g$mark**$10092$CQIRF
                         g$label*$10093$CQIRF)
                       (if (pair? g$sym*$10091$CQIRF)
                         (begin
                           '#f
                           (if (if (eq? g$sym$10089$CQIRF
                                        (car g$sym*$10091$CQIRF))
                                 (begin
                                   '#f
                                   (g$same-marks?$9549$CQIRF
                                     g$mark*$10090$CQIRF
                                     (car g$mark**$10092$CQIRF)))
                                 '#f)
                             g$label*$10093$CQIRF
                             (g$find$10080$CQIRF
                               g$sym$10089$CQIRF
                               g$mark*$10090$CQIRF
                               (cdr g$sym*$10091$CQIRF)
                               (cdr g$mark**$10092$CQIRF)
                               (cdr g$label*$10093$CQIRF))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$9498$CQIRF g$rib$10076$CQIRF)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$10076$CQIRF)
              (void))
            ((case-lambda
               ((g$sym$10081$CQIRF g$mark*$10082$CQIRF)
                ((case-lambda
                   ((g$sym*$10083$CQIRF)
                    ((case-lambda
                       ((g$t$10084$CQIRF)
                        (if g$t$10084$CQIRF
                          ((case-lambda
                             ((g$p$10085$CQIRF)
                              (if (not (eq? g$label$10078$CQIRF
                                            g$p$10085$CQIRF))
                                (g$syntax-violation$10028$CQIRF
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$10077$CQIRF)
                                (void))))
                           g$t$10084$CQIRF)
                          ((case-lambda
                             ((g$t$10086$CQIRF)
                              (if g$t$10086$CQIRF
                                ((case-lambda
                                   ((g$p$10087$CQIRF)
                                    (if (not (eq? g$label$10078$CQIRF
                                                  (car g$p$10087$CQIRF)))
                                      (if (not g$sd?$10079$CQIRF)
                                        (set-car!
                                          g$p$10087$CQIRF
                                          g$label$10078$CQIRF)
                                        (g$syntax-violation$10028$CQIRF
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$10077$CQIRF))
                                      (void))))
                                 g$t$10086$CQIRF)
                                (begin
                                  (if (g$rib-cache$9499$CQIRF g$rib$10076$CQIRF)
                                    (g$hashtable-update!$6723$CQIRF
                                      (g$rib-cache$9499$CQIRF g$rib$10076$CQIRF)
                                      g$sym$10081$CQIRF
                                      (case-lambda
                                        ((g$e$10088$CQIRF)
                                         (cons
                                           (cons
                                             g$mark*$10082$CQIRF
                                             g$label$10078$CQIRF)
                                           g$e$10088$CQIRF)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$9500$CQIRF
                                    g$rib$10076$CQIRF
                                    (cons g$sym$10081$CQIRF g$sym*$10083$CQIRF))
                                  (g$set-rib-mark**!$9501$CQIRF
                                    g$rib$10076$CQIRF
                                    (cons
                                      g$mark*$10082$CQIRF
                                      (g$rib-mark**$9496$CQIRF
                                        g$rib$10076$CQIRF)))
                                  (g$set-rib-label*!$9502$CQIRF
                                    g$rib$10076$CQIRF
                                    (cons
                                      g$label$10078$CQIRF
                                      (g$rib-label*$9497$CQIRF
                                        g$rib$10076$CQIRF)))))))
                           (if (g$memq$5938$CQIRF
                                 g$sym$10081$CQIRF
                                 (g$rib-sym*$9495$CQIRF g$rib$10076$CQIRF))
                             (begin
                               '#f
                               (g$find$10080$CQIRF
                                 g$sym$10081$CQIRF
                                 g$mark*$10082$CQIRF
                                 g$sym*$10083$CQIRF
                                 (g$rib-mark**$9496$CQIRF g$rib$10076$CQIRF)
                                 (g$rib-label*$9497$CQIRF g$rib$10076$CQIRF)))
                             '#f)))))
                     (g$find-label$9507$CQIRF
                       g$rib$10076$CQIRF
                       g$sym$10081$CQIRF
                       g$mark*$10082$CQIRF))))
                 (g$rib-sym*$9495$CQIRF g$rib$10076$CQIRF))))
             (g$id->sym$9548$CQIRF g$id$10077$CQIRF)
             (g$stx-mark*$9522$CQIRF g$id$10077$CQIRF)))))))
   (g$extend-rib/nc!$9509$CQIRF
     g$extend-rib/nc!$13328$CQIRF
     (case-lambda
       ((g$rib$10094$CQIRF g$id$10095$CQIRF g$label$10096$CQIRF)
        ((case-lambda
           ((g$sym$10097$CQIRF g$mark*$10098$CQIRF)
            ((case-lambda
               ((g$sym*$10099$CQIRF)
                (begin
                  (if (g$rib-cache$9499$CQIRF g$rib$10094$CQIRF)
                    (g$hashtable-update!$6723$CQIRF
                      (g$rib-cache$9499$CQIRF g$rib$10094$CQIRF)
                      g$sym$10097$CQIRF
                      (case-lambda
                        ((g$e$10100$CQIRF)
                         (cons
                           (cons g$mark*$10098$CQIRF g$label$10096$CQIRF)
                           g$e$10100$CQIRF)))
                      '())
                    (void))
                  (g$set-rib-sym*!$9500$CQIRF
                    g$rib$10094$CQIRF
                    (cons g$sym$10097$CQIRF g$sym*$10099$CQIRF))
                  (g$set-rib-mark**!$9501$CQIRF
                    g$rib$10094$CQIRF
                    (cons
                      g$mark*$10098$CQIRF
                      (g$rib-mark**$9496$CQIRF g$rib$10094$CQIRF)))
                  (g$set-rib-label*!$9502$CQIRF
                    g$rib$10094$CQIRF
                    (cons
                      g$label$10096$CQIRF
                      (g$rib-label*$9497$CQIRF g$rib$10094$CQIRF))))))
             (g$rib-sym*$9495$CQIRF g$rib$10094$CQIRF))))
         (g$id->sym$9548$CQIRF g$id$10095$CQIRF)
         (g$stx-mark*$9522$CQIRF g$id$10095$CQIRF)))))
   (g$make-rib-map$9510$CQIRF
     g$make-rib-map$13329$CQIRF
     (case-lambda
       ((g$sym*$10101$CQIRF)
        ((case-lambda
           ((g$ht$10102$CQIRF)
            ((letrec ((g$f$10103$CQIRF
                        (case-lambda
                          ((g$i$10104$CQIRF g$sym*$10105$CQIRF)
                           (if (null? g$sym*$10105$CQIRF)
                             g$ht$10102$CQIRF
                             (begin
                               (g$hashtable-update!$6723$CQIRF
                                 g$ht$10102$CQIRF
                                 (car g$sym*$10105$CQIRF)
                                 (case-lambda
                                   ((g$x$10106$CQIRF)
                                    (cons g$i$10104$CQIRF g$x$10106$CQIRF)))
                                 '())
                               (g$f$10103$CQIRF
                                 (+ g$i$10104$CQIRF '1)
                                 (cdr g$sym*$10105$CQIRF))))))))
               g$f$10103$CQIRF)
             '0
             g$sym*$10101$CQIRF)))
         (g$make-eq-hashtable$6716$CQIRF)))))
   (g$seal-rib!$9511$CQIRF
     g$seal-rib!$13330$CQIRF
     (case-lambda
       ((g$rib$10107$CQIRF)
        ((case-lambda
           ((g$sym*$10108$CQIRF)
            (if (not (null? g$sym*$10108$CQIRF))
              (begin
                (g$set-rib-sym*!$9500$CQIRF
                  g$rib$10107$CQIRF
                  (g$list->vector$6612$CQIRF g$sym*$10108$CQIRF))
                (g$set-rib-mark**!$9501$CQIRF
                  g$rib$10107$CQIRF
                  (g$list->vector$6612$CQIRF
                    (g$rib-mark**$9496$CQIRF g$rib$10107$CQIRF)))
                (g$set-rib-label*!$9502$CQIRF
                  g$rib$10107$CQIRF
                  (g$list->vector$6612$CQIRF
                    (g$rib-label*$9497$CQIRF g$rib$10107$CQIRF)))
                (g$set-rib-sealed/freq!$9503$CQIRF
                  g$rib$10107$CQIRF
                  (g$make-rib-map$9510$CQIRF g$sym*$10108$CQIRF)))
              (void))))
         (g$rib-sym*$9495$CQIRF g$rib$10107$CQIRF)))))
   (g$unseal-rib!$9512$CQIRF
     g$unseal-rib!$13331$CQIRF
     (case-lambda
       ((g$rib$10109$CQIRF)
        (if (g$rib-sealed/freq$9498$CQIRF g$rib$10109$CQIRF)
          (begin
            (g$set-rib-sealed/freq!$9503$CQIRF g$rib$10109$CQIRF '#f)
            (g$set-rib-sym*!$9500$CQIRF
              g$rib$10109$CQIRF
              (vector->list (g$rib-sym*$9495$CQIRF g$rib$10109$CQIRF)))
            (g$set-rib-mark**!$9501$CQIRF
              g$rib$10109$CQIRF
              (vector->list (g$rib-mark**$9496$CQIRF g$rib$10109$CQIRF)))
            (g$set-rib-label*!$9502$CQIRF
              g$rib$10109$CQIRF
              (vector->list (g$rib-label*$9497$CQIRF g$rib$10109$CQIRF))))
          (void)))))
   (g$make-full-rib$9513$CQIRF
     g$make-full-rib$13332$CQIRF
     (case-lambda
       ((g$id*$10110$CQIRF g$label*$10111$CQIRF)
        ((case-lambda
           ((g$r$10112$CQIRF)
            (begin (g$seal-rib!$9511$CQIRF g$r$10112$CQIRF) g$r$10112$CQIRF)))
         (g$make-rib$9494$CQIRF
           (g$map$5946$CQIRF g$id->sym$9548$CQIRF g$id*$10110$CQIRF)
           (g$map$5946$CQIRF g$stx-mark*$9522$CQIRF g$id*$10110$CQIRF)
           g$label*$10111$CQIRF
           '#f
           '#f)))))
   (g$7709$9514$CQIRF
     g$7709$13333$CQIRF
     (make-record-type-descriptor
       'stx
       '#f
       'g$7712$CQIRF
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$7711$9515$CQIRF g$7711$13334$CQIRF '#f)
   (g$7710$9516$CQIRF
     g$7710$13335$CQIRF
     (make-record-constructor-descriptor
       g$7709$9514$CQIRF
       '#f
       g$7711$9515$CQIRF))
   (g$stx?$9519$CQIRF
     g$stx?$13336$CQIRF
     (record-predicate g$7709$9514$CQIRF))
   (g$make-stx$9520$CQIRF
     g$make-stx$13337$CQIRF
     (record-constructor g$7710$9516$CQIRF))
   (g$stx-expr$9521$CQIRF
     g$stx-expr$13338$CQIRF
     (record-accessor g$7709$9514$CQIRF '0))
   (g$stx-mark*$9522$CQIRF
     g$stx-mark*$13339$CQIRF
     (record-accessor g$7709$9514$CQIRF '1))
   (g$stx-subst*$9523$CQIRF
     g$stx-subst*$13340$CQIRF
     (record-accessor g$7709$9514$CQIRF '2))
   (g$stx-ae*$9524$CQIRF
     g$stx-ae*$13341$CQIRF
     (record-accessor g$7709$9514$CQIRF '3))
   (g$set-stx-expr!$9525$CQIRF
     g$set-stx-expr!$13342$CQIRF
     (record-mutator g$7709$9514$CQIRF '0))
   (g$set-stx-mark*!$9526$CQIRF
     g$set-stx-mark*!$13343$CQIRF
     (record-mutator g$7709$9514$CQIRF '1))
   (g$set-stx-subst*!$9527$CQIRF
     g$set-stx-subst*!$13344$CQIRF
     (record-mutator g$7709$9514$CQIRF '2))
   (g$set-stx-ae*!$9528$CQIRF
     g$set-stx-ae*!$13345$CQIRF
     (record-mutator g$7709$9514$CQIRF '3))
   (g$rp$9529$CQIRF
     g$rp$13346$CQIRF
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$10113$CQIRF g$p$10114$CQIRF g$wr$10115$CQIRF)
          (begin
            (display '"#<syntax " g$p$10114$CQIRF)
            (write (g$stx->datum$9558$CQIRF g$x$10113$CQIRF) g$p$10114$CQIRF)
            ((case-lambda
               ((g$expr$10116$CQIRF)
                (if (annotation? g$expr$10116$CQIRF)
                  ((case-lambda
                     ((g$src$10117$CQIRF)
                      (if (pair? g$src$10117$CQIRF)
                        (begin
                          (display '" (" g$p$10114$CQIRF)
                          (display (cdr g$src$10117$CQIRF) g$p$10114$CQIRF)
                          (display '" of " g$p$10114$CQIRF)
                          (display (car g$src$10117$CQIRF) g$p$10114$CQIRF)
                          (display '")" g$p$10114$CQIRF))
                        (void))))
                   (annotation-source g$expr$10116$CQIRF))
                  (void))))
             (g$stx-expr$9521$CQIRF g$x$10113$CQIRF))
            (display '">" g$p$10114$CQIRF))))))
   (g$datum->stx$9530$CQIRF
     g$datum->stx$13347$CQIRF
     (case-lambda
       ((g$id$10118$CQIRF g$datum$10119$CQIRF)
        (g$make-stx$9520$CQIRF
          g$datum$10119$CQIRF
          (g$stx-mark*$9522$CQIRF g$id$10118$CQIRF)
          (g$stx-subst*$9523$CQIRF g$id$10118$CQIRF)
          (g$stx-ae*$9524$CQIRF g$id$10118$CQIRF)))))
   (g$gen-mark$9531$CQIRF
     g$gen-mark$13348$CQIRF
     (case-lambda (() (string '#\m))))
   (g$anti-mark$9532$CQIRF g$anti-mark$13349$CQIRF '#f)
   (g$anti-mark?$9533$CQIRF g$anti-mark?$13350$CQIRF not)
   (g$join-wraps$9534$CQIRF
     g$join-wraps$13351$CQIRF
     (case-lambda
       ((g$m1*$10120$CQIRF
          g$s1*$10121$CQIRF
          g$ae1*$10122$CQIRF
          g$e$10123$CQIRF)
        (letrec* ((g$cancel$10124$CQIRF
                    (case-lambda
                      ((g$ls1$10128$CQIRF g$ls2$10129$CQIRF)
                       ((letrec ((g$f$10130$CQIRF
                                   (case-lambda
                                     ((g$x$10131$CQIRF g$ls1$10132$CQIRF)
                                      (if (null? g$ls1$10132$CQIRF)
                                        (cdr g$ls2$10129$CQIRF)
                                        (cons
                                          g$x$10131$CQIRF
                                          (g$f$10130$CQIRF
                                            (car g$ls1$10132$CQIRF)
                                            (cdr g$ls1$10132$CQIRF))))))))
                          g$f$10130$CQIRF)
                        (car g$ls1$10128$CQIRF)
                        (cdr g$ls1$10128$CQIRF))))))
          ((case-lambda
             ((g$m2*$10125$CQIRF g$s2*$10126$CQIRF g$ae2*$10127$CQIRF)
              (if (if (not (null? g$m1*$10120$CQIRF))
                    (if (not (null? g$m2*$10125$CQIRF))
                      (begin
                        '#f
                        (g$anti-mark?$9533$CQIRF (car g$m2*$10125$CQIRF)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$10124$CQIRF g$m1*$10120$CQIRF g$m2*$10125$CQIRF)
                  (g$cancel$10124$CQIRF g$s1*$10121$CQIRF g$s2*$10126$CQIRF)
                  (g$cancel$10124$CQIRF g$ae1*$10122$CQIRF g$ae2*$10127$CQIRF))
                (values
                  (append g$m1*$10120$CQIRF g$m2*$10125$CQIRF)
                  (append g$s1*$10121$CQIRF g$s2*$10126$CQIRF)
                  (append g$ae1*$10122$CQIRF g$ae2*$10127$CQIRF)))))
           (g$stx-mark*$9522$CQIRF g$e$10123$CQIRF)
           (g$stx-subst*$9523$CQIRF g$e$10123$CQIRF)
           (g$stx-ae*$9524$CQIRF g$e$10123$CQIRF))))))
   (g$mkstx$9535$CQIRF
     g$mkstx$13352$CQIRF
     (case-lambda
       ((g$e$10133$CQIRF g$m*$10134$CQIRF g$s*$10135$CQIRF g$ae*$10136$CQIRF)
        (if (if (g$stx?$9519$CQIRF g$e$10133$CQIRF)
              (begin '#f (not (g$top-marked?$9481$CQIRF g$m*$10134$CQIRF)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$9534$CQIRF
                 g$m*$10134$CQIRF
                 g$s*$10135$CQIRF
                 g$ae*$10136$CQIRF
                 g$e$10133$CQIRF)))
            (case-lambda
              ((g$m*$10140$CQIRF g$s*$10141$CQIRF g$ae*$10142$CQIRF)
               ((case-lambda
                  ((g$ae*$10143$CQIRF g$s*$10144$CQIRF g$m*$10145$CQIRF)
                   (g$make-stx$9520$CQIRF
                     (g$stx-expr$9521$CQIRF g$e$10133$CQIRF)
                     g$m*$10145$CQIRF
                     g$s*$10144$CQIRF
                     g$ae*$10143$CQIRF)))
                g$ae*$10142$CQIRF
                g$s*$10141$CQIRF
                g$m*$10140$CQIRF))))
          (g$make-stx$9520$CQIRF
            g$e$10133$CQIRF
            g$m*$10134$CQIRF
            g$s*$10135$CQIRF
            g$ae*$10136$CQIRF)))))
   (g$add-mark$9536$CQIRF
     g$add-mark$13353$CQIRF
     (case-lambda
       ((g$m$10146$CQIRF g$e$10147$CQIRF g$ae$10148$CQIRF)
        (g$mkstx$9535$CQIRF
          g$e$10147$CQIRF
          (list g$m$10146$CQIRF)
          '(shift)
          (list g$ae$10148$CQIRF)))))
   (g$add-subst$9537$CQIRF
     g$add-subst$13354$CQIRF
     (case-lambda
       ((g$subst$10149$CQIRF g$e$10150$CQIRF)
        (g$mkstx$9535$CQIRF
          g$e$10150$CQIRF
          '()
          (list g$subst$10149$CQIRF)
          '()))))
   (g$syntax-kind?$9538$CQIRF
     g$syntax-kind?$13355$CQIRF
     (case-lambda
       ((g$x$10151$CQIRF g$p?$10152$CQIRF)
        (if (g$stx?$9519$CQIRF g$x$10151$CQIRF)
          (g$syntax-kind?$9538$CQIRF
            (g$stx-expr$9521$CQIRF g$x$10151$CQIRF)
            g$p?$10152$CQIRF)
          (if (annotation? g$x$10151$CQIRF)
            (g$syntax-kind?$9538$CQIRF
              (annotation-expression g$x$10151$CQIRF)
              g$p?$10152$CQIRF)
            (g$p?$10152$CQIRF g$x$10151$CQIRF))))))
   (g$syntax-vector->list$9539$CQIRF
     g$syntax-vector->list$13356$CQIRF
     (case-lambda
       ((g$x$10153$CQIRF)
        (if (g$stx?$9519$CQIRF g$x$10153$CQIRF)
          ((case-lambda
             ((g$ls$10154$CQIRF
                g$m*$10155$CQIRF
                g$s*$10156$CQIRF
                g$ae*$10157$CQIRF)
              (g$map$5946$CQIRF
                (case-lambda
                  ((g$x$10158$CQIRF)
                   (g$mkstx$9535$CQIRF
                     g$x$10158$CQIRF
                     g$m*$10155$CQIRF
                     g$s*$10156$CQIRF
                     g$ae*$10157$CQIRF)))
                g$ls$10154$CQIRF)))
           (g$syntax-vector->list$9539$CQIRF
             (g$stx-expr$9521$CQIRF g$x$10153$CQIRF))
           (g$stx-mark*$9522$CQIRF g$x$10153$CQIRF)
           (g$stx-subst*$9523$CQIRF g$x$10153$CQIRF)
           (g$stx-ae*$9524$CQIRF g$x$10153$CQIRF))
          (if (annotation? g$x$10153$CQIRF)
            (g$syntax-vector->list$9539$CQIRF
              (annotation-expression g$x$10153$CQIRF))
            (if (g$vector?$6615$CQIRF g$x$10153$CQIRF)
              (vector->list g$x$10153$CQIRF)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$10153$CQIRF)))))))
   (g$syntax-pair?$9540$CQIRF
     g$syntax-pair?$13357$CQIRF
     (case-lambda
       ((g$x$10159$CQIRF) (g$syntax-kind?$9538$CQIRF g$x$10159$CQIRF pair?))))
   (g$syntax-vector?$9541$CQIRF
     g$syntax-vector?$13358$CQIRF
     (case-lambda
       ((g$x$10160$CQIRF)
        (g$syntax-kind?$9538$CQIRF g$x$10160$CQIRF g$vector?$6615$CQIRF))))
   (g$syntax-null?$9542$CQIRF
     g$syntax-null?$13359$CQIRF
     (case-lambda
       ((g$x$10161$CQIRF) (g$syntax-kind?$9538$CQIRF g$x$10161$CQIRF null?))))
   (g$syntax-list?$9543$CQIRF
     g$syntax-list?$13360$CQIRF
     (case-lambda
       ((g$x$10162$CQIRF)
        ((case-lambda
           ((g$t$10163$CQIRF)
            (if g$t$10163$CQIRF
              g$t$10163$CQIRF
              (begin
                '#f
                (if (g$syntax-pair?$9540$CQIRF g$x$10162$CQIRF)
                  (begin
                    '#f
                    (g$syntax-list?$9543$CQIRF
                      (g$syntax-cdr$9545$CQIRF g$x$10162$CQIRF)))
                  '#f)))))
         (g$syntax-null?$9542$CQIRF g$x$10162$CQIRF)))))
   (g$syntax-car$9544$CQIRF
     g$syntax-car$13361$CQIRF
     (case-lambda
       ((g$x$10164$CQIRF)
        (if (g$stx?$9519$CQIRF g$x$10164$CQIRF)
          (g$mkstx$9535$CQIRF
            (g$syntax-car$9544$CQIRF (g$stx-expr$9521$CQIRF g$x$10164$CQIRF))
            (g$stx-mark*$9522$CQIRF g$x$10164$CQIRF)
            (g$stx-subst*$9523$CQIRF g$x$10164$CQIRF)
            (g$stx-ae*$9524$CQIRF g$x$10164$CQIRF))
          (if (annotation? g$x$10164$CQIRF)
            (g$syntax-car$9544$CQIRF (annotation-expression g$x$10164$CQIRF))
            (if (pair? g$x$10164$CQIRF)
              (car g$x$10164$CQIRF)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$10164$CQIRF)))))))
   (g$syntax-cdr$9545$CQIRF
     g$syntax-cdr$13362$CQIRF
     (case-lambda
       ((g$x$10165$CQIRF)
        (if (g$stx?$9519$CQIRF g$x$10165$CQIRF)
          (g$mkstx$9535$CQIRF
            (g$syntax-cdr$9545$CQIRF (g$stx-expr$9521$CQIRF g$x$10165$CQIRF))
            (g$stx-mark*$9522$CQIRF g$x$10165$CQIRF)
            (g$stx-subst*$9523$CQIRF g$x$10165$CQIRF)
            (g$stx-ae*$9524$CQIRF g$x$10165$CQIRF))
          (if (annotation? g$x$10165$CQIRF)
            (g$syntax-cdr$9545$CQIRF (annotation-expression g$x$10165$CQIRF))
            (if (pair? g$x$10165$CQIRF)
              (cdr g$x$10165$CQIRF)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$10165$CQIRF)))))))
   (g$syntax->list$9546$CQIRF
     g$syntax->list$13363$CQIRF
     (case-lambda
       ((g$x$10166$CQIRF)
        (if (g$syntax-pair?$9540$CQIRF g$x$10166$CQIRF)
          (cons
            (g$syntax-car$9544$CQIRF g$x$10166$CQIRF)
            (g$syntax->list$9546$CQIRF
              (g$syntax-cdr$9545$CQIRF g$x$10166$CQIRF)))
          (if (g$syntax-null?$9542$CQIRF g$x$10166$CQIRF)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$10166$CQIRF))))))
   (g$id?$9547$CQIRF
     g$id?$13364$CQIRF
     (case-lambda
       ((g$x$10167$CQIRF)
        (if (g$stx?$9519$CQIRF g$x$10167$CQIRF)
          (begin
            '#f
            ((case-lambda
               ((g$expr$10168$CQIRF)
                (g$symbol?$6617$CQIRF
                  (if (annotation? g$expr$10168$CQIRF)
                    (annotation-stripped g$expr$10168$CQIRF)
                    g$expr$10168$CQIRF))))
             (g$stx-expr$9521$CQIRF g$x$10167$CQIRF)))
          '#f))))
   (g$id->sym$9548$CQIRF
     g$id->sym$13365$CQIRF
     (case-lambda
       ((g$x$10169$CQIRF)
        (begin
          (if (not (g$stx?$9519$CQIRF g$x$10169$CQIRF))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$10169$CQIRF)
            (void))
          ((case-lambda
             ((g$expr$10170$CQIRF)
              ((case-lambda
                 ((g$sym$10171$CQIRF)
                  (if (g$symbol?$6617$CQIRF g$sym$10171$CQIRF)
                    g$sym$10171$CQIRF
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$10169$CQIRF))))
               (if (annotation? g$expr$10170$CQIRF)
                 (annotation-stripped g$expr$10170$CQIRF)
                 g$expr$10170$CQIRF))))
           (g$stx-expr$9521$CQIRF g$x$10169$CQIRF))))))
   (g$same-marks?$9549$CQIRF
     g$same-marks?$13366$CQIRF
     (case-lambda
       ((g$x$10172$CQIRF g$y$10173$CQIRF)
        ((case-lambda
           ((g$t$10174$CQIRF)
            (if g$t$10174$CQIRF
              g$t$10174$CQIRF
              (begin
                '#f
                (if (pair? g$x$10172$CQIRF)
                  (if (pair? g$y$10173$CQIRF)
                    (if (eq? (car g$x$10172$CQIRF) (car g$y$10173$CQIRF))
                      (begin
                        '#f
                        (g$same-marks?$9549$CQIRF
                          (cdr g$x$10172$CQIRF)
                          (cdr g$y$10173$CQIRF)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$10172$CQIRF)
           (begin '#f (null? g$y$10173$CQIRF))
           '#f)))))
   (g$bound-id=?$9550$CQIRF
     g$bound-id=?$13367$CQIRF
     (case-lambda
       ((g$x$10175$CQIRF g$y$10176$CQIRF)
        (if (eq? (g$id->sym$9548$CQIRF g$x$10175$CQIRF)
                 (g$id->sym$9548$CQIRF g$y$10176$CQIRF))
          (begin
            '#f
            (g$same-marks?$9549$CQIRF
              (g$stx-mark*$9522$CQIRF g$x$10175$CQIRF)
              (g$stx-mark*$9522$CQIRF g$y$10176$CQIRF)))
          '#f))))
   (g$free-id=?$9551$CQIRF
     g$free-id=?$13368$CQIRF
     (case-lambda
       ((g$i$10177$CQIRF g$j$10178$CQIRF)
        ((case-lambda
           ((g$t0$10179$CQIRF g$t1$10180$CQIRF)
            (if ((case-lambda
                   ((g$t$10181$CQIRF)
                    (if g$t$10181$CQIRF
                      g$t$10181$CQIRF
                      (begin '#f g$t1$10180$CQIRF))))
                 g$t0$10179$CQIRF)
              (eq? g$t0$10179$CQIRF g$t1$10180$CQIRF)
              (eq? (g$id->sym$9548$CQIRF g$i$10177$CQIRF)
                   (g$id->sym$9548$CQIRF g$j$10178$CQIRF)))))
         (g$id->real-label$9561$CQIRF g$i$10177$CQIRF)
         (g$id->real-label$9561$CQIRF g$j$10178$CQIRF)))))
   (g$valid-bound-ids?$9552$CQIRF
     g$valid-bound-ids?$13369$CQIRF
     (case-lambda
       ((g$id*$10182$CQIRF)
        (if (g$for-all$5944$CQIRF g$id?$9547$CQIRF g$id*$10182$CQIRF)
          (begin '#f (g$distinct-bound-ids?$9553$CQIRF g$id*$10182$CQIRF))
          '#f))))
   (g$distinct-bound-ids?$9553$CQIRF
     g$distinct-bound-ids?$13370$CQIRF
     (case-lambda
       ((g$id*$10183$CQIRF)
        ((case-lambda
           ((g$t$10184$CQIRF)
            (if g$t$10184$CQIRF
              g$t$10184$CQIRF
              (begin
                '#f
                (if (not (g$bound-id-member?$9554$CQIRF
                           (car g$id*$10183$CQIRF)
                           (cdr g$id*$10183$CQIRF)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$9553$CQIRF (cdr g$id*$10183$CQIRF)))
                  '#f)))))
         (null? g$id*$10183$CQIRF)))))
   (g$bound-id-member?$9554$CQIRF
     g$bound-id-member?$13371$CQIRF
     (case-lambda
       ((g$id$10185$CQIRF g$id*$10186$CQIRF)
        (if (pair? g$id*$10186$CQIRF)
          (begin
            '#f
            ((case-lambda
               ((g$t$10187$CQIRF)
                (if g$t$10187$CQIRF
                  g$t$10187$CQIRF
                  (begin
                    '#f
                    (g$bound-id-member?$9554$CQIRF
                      g$id$10185$CQIRF
                      (cdr g$id*$10186$CQIRF))))))
             (g$bound-id=?$9550$CQIRF
               g$id$10185$CQIRF
               (car g$id*$10186$CQIRF))))
          '#f))))
   (g$self-evaluating?$9555$CQIRF
     g$self-evaluating?$13372$CQIRF
     (case-lambda
       ((g$x$10188$CQIRF)
        ((case-lambda
           ((g$t$10189$CQIRF)
            (if g$t$10189$CQIRF
              g$t$10189$CQIRF
              ((case-lambda
                 ((g$t$10190$CQIRF)
                  (if g$t$10190$CQIRF
                    g$t$10190$CQIRF
                    ((case-lambda
                       ((g$t$10191$CQIRF)
                        (if g$t$10191$CQIRF
                          g$t$10191$CQIRF
                          ((case-lambda
                             ((g$t$10192$CQIRF)
                              (if g$t$10192$CQIRF
                                g$t$10192$CQIRF
                                (begin
                                  '#f
                                  (g$bytevector?$6616$CQIRF g$x$10188$CQIRF)))))
                           (g$boolean?$6618$CQIRF g$x$10188$CQIRF)))))
                     (g$char?$6614$CQIRF g$x$10188$CQIRF)))))
               (string? g$x$10188$CQIRF)))))
         (number? g$x$10188$CQIRF)))))
   (g$strip-annotations$9556$CQIRF
     g$strip-annotations$13373$CQIRF
     (case-lambda
       ((g$x$10193$CQIRF)
        (if (pair? g$x$10193$CQIRF)
          (cons
            (g$strip-annotations$9556$CQIRF (car g$x$10193$CQIRF))
            (g$strip-annotations$9556$CQIRF (cdr g$x$10193$CQIRF)))
          (if (g$vector?$6615$CQIRF g$x$10193$CQIRF)
            (g$vector-map$6677$CQIRF
              g$strip-annotations$9556$CQIRF
              g$x$10193$CQIRF)
            (if (annotation? g$x$10193$CQIRF)
              (annotation-stripped g$x$10193$CQIRF)
              g$x$10193$CQIRF))))))
   (g$strip$9557$CQIRF
     g$strip$13374$CQIRF
     (case-lambda
       ((g$x$10194$CQIRF g$m*$10195$CQIRF)
        (if (g$top-marked?$9481$CQIRF g$m*$10195$CQIRF)
          (if ((case-lambda
                 ((g$t$10196$CQIRF)
                  (if g$t$10196$CQIRF
                    g$t$10196$CQIRF
                    ((case-lambda
                       ((g$t$10197$CQIRF)
                        (if g$t$10197$CQIRF
                          g$t$10197$CQIRF
                          (begin
                            '#f
                            (if (g$vector?$6615$CQIRF g$x$10194$CQIRF)
                              (if (> (vector-length g$x$10194$CQIRF) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$10194$CQIRF '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$10194$CQIRF)
                       (begin '#f (annotation? (car g$x$10194$CQIRF)))
                       '#f)))))
               (annotation? g$x$10194$CQIRF))
            (g$strip-annotations$9556$CQIRF g$x$10194$CQIRF)
            g$x$10194$CQIRF)
          ((letrec ((g$f$10198$CQIRF
                      (case-lambda
                        ((g$x$10199$CQIRF)
                         (if (g$stx?$9519$CQIRF g$x$10199$CQIRF)
                           (g$strip$9557$CQIRF
                             (g$stx-expr$9521$CQIRF g$x$10199$CQIRF)
                             (g$stx-mark*$9522$CQIRF g$x$10199$CQIRF))
                           (if (annotation? g$x$10199$CQIRF)
                             (annotation-stripped g$x$10199$CQIRF)
                             (if (pair? g$x$10199$CQIRF)
                               ((case-lambda
                                  ((g$a$10200$CQIRF g$d$10201$CQIRF)
                                   (if (if (eq? g$a$10200$CQIRF
                                                (car g$x$10199$CQIRF))
                                         (begin
                                           '#f
                                           (eq? g$d$10201$CQIRF
                                                (cdr g$x$10199$CQIRF)))
                                         '#f)
                                     g$x$10199$CQIRF
                                     (cons g$a$10200$CQIRF g$d$10201$CQIRF))))
                                (g$f$10198$CQIRF (car g$x$10199$CQIRF))
                                (g$f$10198$CQIRF (cdr g$x$10199$CQIRF)))
                               (if (g$vector?$6615$CQIRF g$x$10199$CQIRF)
                                 ((case-lambda
                                    ((g$old$10202$CQIRF)
                                     ((case-lambda
                                        ((g$new$10203$CQIRF)
                                         (if (g$for-all$5944$CQIRF
                                               eq?
                                               g$old$10202$CQIRF
                                               g$new$10203$CQIRF)
                                           g$x$10199$CQIRF
                                           (g$list->vector$6612$CQIRF
                                             g$new$10203$CQIRF))))
                                      (g$map$5946$CQIRF
                                        g$f$10198$CQIRF
                                        g$old$10202$CQIRF))))
                                  (vector->list g$x$10199$CQIRF))
                                 g$x$10199$CQIRF))))))))
             g$f$10198$CQIRF)
           g$x$10194$CQIRF)))))
   (g$stx->datum$9558$CQIRF
     g$stx->datum$13375$CQIRF
     (case-lambda
       ((g$x$10204$CQIRF) (g$strip$9557$CQIRF g$x$10204$CQIRF '()))))
   (g$same-marks*?$9559$CQIRF
     g$same-marks*?$13376$CQIRF
     (case-lambda
       ((g$mark*$10205$CQIRF g$mark**$10206$CQIRF g$si$10207$CQIRF)
        (if (null? g$si$10207$CQIRF)
          '#f
          (if (g$same-marks?$9549$CQIRF
                g$mark*$10205$CQIRF
                (vector-ref g$mark**$10206$CQIRF (car g$si$10207$CQIRF)))
            (car g$si$10207$CQIRF)
            (g$same-marks*?$9559$CQIRF
              g$mark*$10205$CQIRF
              g$mark**$10206$CQIRF
              (cdr g$si$10207$CQIRF)))))))
   (g$id->label$9560$CQIRF
     g$id->label$13377$CQIRF
     (case-lambda
       ((g$id$10208$CQIRF)
        ((case-lambda
           ((g$t$10209$CQIRF)
            (if g$t$10209$CQIRF
              g$t$10209$CQIRF
              (begin
                '#f
                ((case-lambda
                   ((g$t$10210$CQIRF)
                    (if g$t$10210$CQIRF
                      ((case-lambda
                         ((g$env$10211$CQIRF)
                          ((case-lambda
                             ((g$rib$10212$CQIRF)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$9486$CQIRF
                                     g$id$10208$CQIRF
                                     g$rib$10212$CQIRF
                                     '#f)))
                                (case-lambda
                                  ((g$lab$10215$CQIRF g$_loc$10216$CQIRF)
                                   ((case-lambda
                                      ((g$_loc$10217$CQIRF g$lab$10218$CQIRF)
                                       (begin
                                         (g$extend-rib!$9508$CQIRF
                                           g$rib$10212$CQIRF
                                           g$id$10208$CQIRF
                                           g$lab$10218$CQIRF
                                           '#t)
                                         g$lab$10218$CQIRF)))
                                    g$_loc$10216$CQIRF
                                    g$lab$10215$CQIRF))))))
                           (g$interaction-env-rib$9994$CQIRF
                             g$env$10211$CQIRF))))
                       g$t$10210$CQIRF)
                      '#f)))
                 (g$top-level-context$10036$CQIRF))))))
         (g$id->real-label$9561$CQIRF g$id$10208$CQIRF)))))
   (g$id->real-label$9561$CQIRF
     g$id->real-label$13378$CQIRF
     (case-lambda
       ((g$id$10219$CQIRF)
        ((case-lambda
           ((g$sym$10220$CQIRF)
            ((letrec ((g$search$10221$CQIRF
                        (case-lambda
                          ((g$subst*$10222$CQIRF g$mark*$10223$CQIRF)
                           (if (null? g$subst*$10222$CQIRF)
                             '#f
                             (if (eq? (car g$subst*$10222$CQIRF) 'shift)
                               (g$search$10221$CQIRF
                                 (cdr g$subst*$10222$CQIRF)
                                 (cdr g$mark*$10223$CQIRF))
                               ((case-lambda
                                  ((g$rib$10224$CQIRF)
                                   ((case-lambda
                                      ((g$t$10225$CQIRF)
                                       (if g$t$10225$CQIRF
                                         ((case-lambda
                                            ((g$ht$10226$CQIRF)
                                             ((case-lambda
                                                ((g$si$10227$CQIRF)
                                                 ((case-lambda
                                                    ((g$i$10228$CQIRF)
                                                     (if g$i$10228$CQIRF
                                                       (vector-ref
                                                         (g$rib-label*$9497$CQIRF
                                                           g$rib$10224$CQIRF)
                                                         g$i$10228$CQIRF)
                                                       (g$search$10221$CQIRF
                                                         (cdr g$subst*$10222$CQIRF)
                                                         g$mark*$10223$CQIRF))))
                                                  (if g$si$10227$CQIRF
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$9559$CQIRF
                                                        g$mark*$10223$CQIRF
                                                        (g$rib-mark**$9496$CQIRF
                                                          g$rib$10224$CQIRF)
                                                        (g$reverse$6624$CQIRF
                                                          g$si$10227$CQIRF)))
                                                    '#f))))
                                              (g$hashtable-ref$6719$CQIRF
                                                g$ht$10226$CQIRF
                                                g$sym$10220$CQIRF
                                                '#f))))
                                          g$t$10225$CQIRF)
                                         ((case-lambda
                                            ((g$t$10229$CQIRF)
                                             (if g$t$10229$CQIRF
                                               g$t$10229$CQIRF
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$10230$CQIRF
                                                             (case-lambda
                                                               ((g$sym*$10231$CQIRF
                                                                  g$mark**$10232$CQIRF
                                                                  g$label*$10233$CQIRF)
                                                                (if (null?
                                                                      g$sym*$10231$CQIRF)
                                                                  (g$search$10221$CQIRF
                                                                    (cdr g$subst*$10222$CQIRF)
                                                                    g$mark*$10223$CQIRF)
                                                                  (if (if (eq? (car g$sym*$10231$CQIRF)
                                                                               g$sym$10220$CQIRF)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$9549$CQIRF
                                                                            (car g$mark**$10232$CQIRF)
                                                                            g$mark*$10223$CQIRF))
                                                                        '#f)
                                                                    (car g$label*$10233$CQIRF)
                                                                    (g$f$10230$CQIRF
                                                                      (cdr g$sym*$10231$CQIRF)
                                                                      (cdr g$mark**$10232$CQIRF)
                                                                      (cdr g$label*$10233$CQIRF))))))))
                                                    g$f$10230$CQIRF)
                                                  (g$rib-sym*$9495$CQIRF
                                                    g$rib$10224$CQIRF)
                                                  (g$rib-mark**$9496$CQIRF
                                                    g$rib$10224$CQIRF)
                                                  (g$rib-label*$9497$CQIRF
                                                    g$rib$10224$CQIRF))))))
                                          (g$find-label$9507$CQIRF
                                            g$rib$10224$CQIRF
                                            g$sym$10220$CQIRF
                                            g$mark*$10223$CQIRF)))))
                                    (g$rib-sealed/freq$9498$CQIRF
                                      g$rib$10224$CQIRF))))
                                (car g$subst*$10222$CQIRF))))))))
               g$search$10221$CQIRF)
             (g$stx-subst*$9523$CQIRF g$id$10219$CQIRF)
             (g$stx-mark*$9522$CQIRF g$id$10219$CQIRF))))
         (g$id->sym$9548$CQIRF g$id$10219$CQIRF)))))
   (g$label->binding$9562$CQIRF
     g$label->binding$13379$CQIRF
     (case-lambda
       ((g$x$10234$CQIRF g$r$10235$CQIRF)
        (if (not g$x$10234$CQIRF)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$10236$CQIRF)
              (if g$t$10236$CQIRF
                ((case-lambda
                   ((g$b$10237$CQIRF)
                    (if (if (pair? g$b$10237$CQIRF)
                          (begin '#f (eq? (car g$b$10237$CQIRF) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$5946$CQIRF
                          g$bless$9873$CQIRF
                          (cdr g$b$10237$CQIRF)))
                      (if (if (pair? g$b$10237$CQIRF)
                            (begin '#f (eq? (car g$b$10237$CQIRF) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$10238$CQIRF g$loc$10239$CQIRF)
                            (cons '$rtd (symbol-value g$loc$10239$CQIRF))))
                         (g$cadr$6626$CQIRF g$b$10237$CQIRF)
                         (g$cddr$6628$CQIRF g$b$10237$CQIRF))
                        g$b$10237$CQIRF))))
                 g$t$10236$CQIRF)
                ((case-lambda
                   ((g$t$10240$CQIRF)
                    (if g$t$10240$CQIRF
                      (cdr g$t$10240$CQIRF)
                      ((case-lambda
                         ((g$t$10241$CQIRF)
                          (if g$t$10241$CQIRF
                            ((case-lambda
                               ((g$env$10242$CQIRF)
                                ((case-lambda
                                   ((g$t$10243$CQIRF)
                                    (if g$t$10243$CQIRF
                                      ((case-lambda
                                         ((g$p$10244$CQIRF)
                                          (g$cons*$5948$CQIRF
                                            'lexical
                                            (cdr g$p$10244$CQIRF)
                                            '#f)))
                                       g$t$10243$CQIRF)
                                      '(displaced-lexical . #f))))
                                 (g$assq$5934$CQIRF
                                   g$x$10234$CQIRF
                                   (g$interaction-env-locs$9996$CQIRF
                                     g$env$10242$CQIRF)))))
                             g$t$10241$CQIRF)
                            '(displaced-lexical . #f))))
                       (g$top-level-context$10036$CQIRF)))))
                 (g$assq$5934$CQIRF g$x$10234$CQIRF g$r$10235$CQIRF)))))
           (g$imported-label->binding$9285$CQIRF g$x$10234$CQIRF))))))
   (g$make-binding$9563$CQIRF g$make-binding$13380$CQIRF cons)
   (g$binding-type$9564$CQIRF g$binding-type$13381$CQIRF car)
   (g$binding-value$9565$CQIRF g$binding-value$13382$CQIRF cdr)
   (g$raise-unbound-error$9566$CQIRF
     g$raise-unbound-error$13383$CQIRF
     (case-lambda
       ((g$id$10245$CQIRF)
        (g$syntax-violation*$10027$CQIRF
          '#f
          '"unbound identifier"
          g$id$10245$CQIRF
          (g$make-undefined-violation$7372$CQIRF)))))
   (g$syntax-type$9567$CQIRF
     g$syntax-type$13384$CQIRF
     (case-lambda
       ((g$e$10246$CQIRF g$r$10247$CQIRF)
        (if (g$id?$9547$CQIRF g$e$10246$CQIRF)
          ((case-lambda
             ((g$id$10248$CQIRF)
              ((case-lambda
                 ((g$label$10249$CQIRF)
                  ((case-lambda
                     ((g$b$10250$CQIRF)
                      ((case-lambda
                         ((g$type$10251$CQIRF)
                          (begin
                            (if (not g$label$10249$CQIRF)
                              (g$raise-unbound-error$9566$CQIRF
                                g$id$10248$CQIRF)
                              (void))
                            ((case-lambda
                               ((g$t$10252$CQIRF)
                                (if (g$memv$5939$CQIRF
                                      g$t$10252$CQIRF
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$10251$CQIRF
                                    (g$binding-value$9565$CQIRF g$b$10250$CQIRF)
                                    g$id$10248$CQIRF)
                                  (values 'other '#f '#f))))
                             g$type$10251$CQIRF))))
                       (g$binding-type$9564$CQIRF g$b$10250$CQIRF))))
                   (g$label->binding$9562$CQIRF
                     g$label$10249$CQIRF
                     g$r$10247$CQIRF))))
               (g$id->label$9560$CQIRF g$id$10248$CQIRF))))
           g$e$10246$CQIRF)
          (if (g$syntax-pair?$9540$CQIRF g$e$10246$CQIRF)
            ((case-lambda
               ((g$id$10253$CQIRF)
                (if (g$id?$9547$CQIRF g$id$10253$CQIRF)
                  ((case-lambda
                     ((g$label$10254$CQIRF)
                      ((case-lambda
                         ((g$b$10255$CQIRF)
                          ((case-lambda
                             ((g$type$10256$CQIRF)
                              (begin
                                (if (not g$label$10254$CQIRF)
                                  (g$raise-unbound-error$9566$CQIRF
                                    g$id$10253$CQIRF)
                                  (void))
                                ((case-lambda
                                   ((g$t$10257$CQIRF)
                                    (if (g$memv$5939$CQIRF
                                          g$t$10257$CQIRF
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$10256$CQIRF
                                        (g$binding-value$9565$CQIRF
                                          g$b$10255$CQIRF)
                                        g$id$10253$CQIRF)
                                      (values 'call '#f '#f))))
                                 g$type$10256$CQIRF))))
                           (g$binding-type$9564$CQIRF g$b$10255$CQIRF))))
                       (g$label->binding$9562$CQIRF
                         g$label$10254$CQIRF
                         g$r$10247$CQIRF))))
                   (g$id->label$9560$CQIRF g$id$10253$CQIRF))
                  (values 'call '#f '#f))))
             (g$syntax-car$9544$CQIRF g$e$10246$CQIRF))
            ((case-lambda
               ((g$d$10258$CQIRF)
                (if (g$self-evaluating?$9555$CQIRF g$d$10258$CQIRF)
                  (values 'constant g$d$10258$CQIRF '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$9558$CQIRF g$e$10246$CQIRF)))))))
   (g$sanitize-binding$9584$CQIRF
     g$sanitize-binding$13385$CQIRF
     (case-lambda
       ((g$x$10259$CQIRF g$src$10260$CQIRF)
        (if (g$procedure?$6619$CQIRF g$x$10259$CQIRF)
          (g$cons*$5948$CQIRF 'local-macro g$x$10259$CQIRF g$src$10260$CQIRF)
          (if (if (pair? g$x$10259$CQIRF)
                (if (eq? (car g$x$10259$CQIRF) 'macro!)
                  (begin '#f (g$procedure?$6619$CQIRF (cdr g$x$10259$CQIRF)))
                  '#f)
                '#f)
            (g$cons*$5948$CQIRF
              'local-macro!
              (cdr g$x$10259$CQIRF)
              g$src$10260$CQIRF)
            (if (if (pair? g$x$10259$CQIRF)
                  (begin '#f (eq? (car g$x$10259$CQIRF) '$rtd))
                  '#f)
              g$x$10259$CQIRF
              (if (if (pair? g$x$10259$CQIRF)
                    (begin '#f (eq? (car g$x$10259$CQIRF) 'ctv))
                    '#f)
                (g$cons*$5948$CQIRF
                  'local-ctv
                  (cdr g$x$10259$CQIRF)
                  g$src$10260$CQIRF)
                (assertion-violation
                  'expand
                  '"invalid transformer"
                  g$x$10259$CQIRF))))))))
   (g$make-variable-transformer$9585$CQIRF
     g$make-variable-transformer$13386$CQIRF
     (case-lambda
       ((g$x$10261$CQIRF)
        (if (g$procedure?$6619$CQIRF g$x$10261$CQIRF)
          (cons 'macro! g$x$10261$CQIRF)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$10261$CQIRF)))))
   (g$make-compile-time-value$9586$CQIRF
     g$make-compile-time-value$13387$CQIRF
     (case-lambda ((g$x$10262$CQIRF) (cons 'ctv g$x$10262$CQIRF))))
   (g$variable-transformer?$9587$CQIRF
     g$variable-transformer?$13388$CQIRF
     (case-lambda
       ((g$x$10263$CQIRF)
        (if (pair? g$x$10263$CQIRF)
          (if (eq? (car g$x$10263$CQIRF) 'macro!)
            (begin '#f (g$procedure?$6619$CQIRF (cdr g$x$10263$CQIRF)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$9588$CQIRF
     g$variable-transformer-procedure$13389$CQIRF
     (case-lambda
       ((g$x$10264$CQIRF)
        (if (g$variable-transformer?$9587$CQIRF g$x$10264$CQIRF)
          (cdr g$x$10264$CQIRF)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$10264$CQIRF)))))
   (g$make-eval-transformer$9589$CQIRF
     g$make-eval-transformer$13390$CQIRF
     (case-lambda
       ((g$x$10265$CQIRF)
        (g$sanitize-binding$9584$CQIRF
          (eval-core (g$expanded->core$9019$CQIRF g$x$10265$CQIRF))
          g$x$10265$CQIRF))))
   (g$parse-define$9850$CQIRF
     g$parse-define$13391$CQIRF
     (case-lambda
       ((g$x$10266$CQIRF)
        ((case-lambda
           ((g$t$10267$CQIRF)
            ((case-lambda
               ((g$ls/false$10268$CQIRF)
                (if (if g$ls/false$10268$CQIRF
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$10269$CQIRF
                               g$fmls$10270$CQIRF
                               g$b$10271$CQIRF
                               g$b*$10272$CQIRF)
                             (g$id?$9547$CQIRF g$id$10269$CQIRF)))
                          g$ls/false$10268$CQIRF))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$10273$CQIRF
                         g$fmls$10274$CQIRF
                         g$b$10275$CQIRF
                         g$b*$10276$CQIRF)
                       (begin
                         (g$verify-formals$9930$CQIRF
                           g$fmls$10274$CQIRF
                           g$x$10266$CQIRF)
                         (values
                           g$id$10273$CQIRF
                           (cons
                             'defun
                             (cons
                               g$fmls$10274$CQIRF
                               (cons g$b$10275$CQIRF g$b*$10276$CQIRF)))))))
                    g$ls/false$10268$CQIRF)
                  ((case-lambda
                     ((g$t$10277$CQIRF)
                      ((case-lambda
                         ((g$ls/false$10278$CQIRF)
                          (if (if g$ls/false$10278$CQIRF
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$10279$CQIRF g$val$10280$CQIRF)
                                       (g$id?$9547$CQIRF g$id$10279$CQIRF)))
                                    g$ls/false$10278$CQIRF))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$10281$CQIRF g$val$10282$CQIRF)
                                 (values
                                   g$id$10281$CQIRF
                                   (cons 'expr g$val$10282$CQIRF))))
                              g$ls/false$10278$CQIRF)
                            ((case-lambda
                               ((g$t$10283$CQIRF)
                                ((case-lambda
                                   ((g$ls/false$10284$CQIRF)
                                    (if (if g$ls/false$10284$CQIRF
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$10285$CQIRF)
                                                 (g$id?$9547$CQIRF
                                                   g$id$10285$CQIRF)))
                                              g$ls/false$10284$CQIRF))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$10286$CQIRF)
                                           (values
                                             g$id$10286$CQIRF
                                             (cons
                                               'expr
                                               (g$bless$9873$CQIRF '(void))))))
                                        g$ls/false$10284$CQIRF)
                                      (g$syntax-violation$10028$CQIRF
                                        '#f
                                        '"invalid syntax"
                                        g$t$10283$CQIRF))))
                                 (g$syntax-dispatch$9910$CQIRF
                                   g$t$10283$CQIRF
                                   '(_ any)))))
                             g$t$10277$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$10277$CQIRF
                         '(_ any any)))))
                   g$t$10267$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10267$CQIRF
               '(_ (any . any) any . each-any)))))
         g$x$10266$CQIRF))))
   (g$parse-define-syntax$9851$CQIRF
     g$parse-define-syntax$13392$CQIRF
     (case-lambda
       ((g$x$10287$CQIRF)
        ((case-lambda
           ((g$t$10288$CQIRF)
            ((case-lambda
               ((g$ls/false$10289$CQIRF)
                (if (if g$ls/false$10289$CQIRF
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$10290$CQIRF g$val$10291$CQIRF)
                             (g$id?$9547$CQIRF g$id$10290$CQIRF)))
                          g$ls/false$10289$CQIRF))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$10292$CQIRF g$val$10293$CQIRF)
                       (values g$id$10292$CQIRF g$val$10293$CQIRF)))
                    g$ls/false$10289$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10288$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10288$CQIRF '(_ any any)))))
         g$x$10287$CQIRF))))
   (g$scheme-stx-hashtable$9852$CQIRF
     g$scheme-stx-hashtable$13393$CQIRF
     (g$make-eq-hashtable$6716$CQIRF))
   (g$scheme-stx$9853$CQIRF
     g$scheme-stx$13394$CQIRF
     (case-lambda
       ((g$sym$10294$CQIRF)
        ((case-lambda
           ((g$t$10295$CQIRF)
            (if g$t$10295$CQIRF
              g$t$10295$CQIRF
              (begin
                '#f
                ((case-lambda
                   ((g$subst$10296$CQIRF)
                    ((case-lambda
                       ((g$stx$10297$CQIRF)
                        ((case-lambda
                           ((g$stx$10298$CQIRF)
                            (begin
                              (g$hashtable-set!$6720$CQIRF
                                g$scheme-stx-hashtable$9852$CQIRF
                                g$sym$10294$CQIRF
                                g$stx$10298$CQIRF)
                              g$stx$10298$CQIRF)))
                         ((case-lambda
                            ((g$t$10299$CQIRF)
                             (if g$t$10299$CQIRF
                               ((case-lambda
                                  ((g$x$10300$CQIRF)
                                   ((case-lambda
                                      ((g$name$10301$CQIRF g$label$10302$CQIRF)
                                       (g$add-subst$9537$CQIRF
                                         (g$make-rib$9494$CQIRF
                                           (list g$name$10301$CQIRF)
                                           (list g$top-mark*$9480$CQIRF)
                                           (list g$label$10302$CQIRF)
                                           '#f
                                           '#f)
                                         g$stx$10297$CQIRF)))
                                    (car g$x$10300$CQIRF)
                                    (cdr g$x$10300$CQIRF))))
                                g$t$10299$CQIRF)
                               g$stx$10297$CQIRF)))
                          (g$assq$5934$CQIRF
                            g$sym$10294$CQIRF
                            g$subst$10296$CQIRF)))))
                     (g$make-stx$9520$CQIRF
                       g$sym$10294$CQIRF
                       g$top-mark*$9480$CQIRF
                       '()
                       '()))))
                 (g$library-subst$9243$CQIRF
                   (g$find-library-by-name$9279$CQIRF
                     '(psyntax system $all))))))))
         (g$hashtable-ref$6719$CQIRF
           g$scheme-stx-hashtable$9852$CQIRF
           g$sym$10294$CQIRF
           '#f)))))
   (g$lexical-var$9854$CQIRF g$lexical-var$13395$CQIRF car)
   (g$lexical-mutable?$9855$CQIRF g$lexical-mutable?$13396$CQIRF cdr)
   (g$set-lexical-mutable!$9856$CQIRF
     g$set-lexical-mutable!$13397$CQIRF
     set-cdr!)
   (g$add-lexical$9857$CQIRF
     g$add-lexical$13398$CQIRF
     (case-lambda
       ((g$lab$10303$CQIRF g$lex$10304$CQIRF g$r$10305$CQIRF)
        (cons
          (g$cons*$5948$CQIRF g$lab$10303$CQIRF 'lexical g$lex$10304$CQIRF '#f)
          g$r$10305$CQIRF))))
   (g$add-lexicals$9858$CQIRF
     g$add-lexicals$13399$CQIRF
     (case-lambda
       ((g$lab*$10306$CQIRF g$lex*$10307$CQIRF g$r$10308$CQIRF)
        (if (null? g$lab*$10306$CQIRF)
          g$r$10308$CQIRF
          (g$add-lexicals$9858$CQIRF
            (cdr g$lab*$10306$CQIRF)
            (cdr g$lex*$10307$CQIRF)
            (g$add-lexical$9857$CQIRF
              (car g$lab*$10306$CQIRF)
              (car g$lex*$10307$CQIRF)
              g$r$10308$CQIRF))))))
   (g$letrec-helper$9859$CQIRF
     g$letrec-helper$13400$CQIRF
     (case-lambda
       ((g$e$10309$CQIRF g$r$10310$CQIRF g$mr$10311$CQIRF g$build$10312$CQIRF)
        ((case-lambda
           ((g$t$10313$CQIRF)
            ((case-lambda
               ((g$ls/false$10314$CQIRF)
                (if g$ls/false$10314$CQIRF
                  (apply
                    (case-lambda
                      ((g$lhs*$10315$CQIRF
                         g$rhs*$10316$CQIRF
                         g$b$10317$CQIRF
                         g$b*$10318$CQIRF)
                       (if (not (g$valid-bound-ids?$9552$CQIRF
                                  g$lhs*$10315$CQIRF))
                         (g$invalid-fmls-error$9875$CQIRF
                           g$e$10309$CQIRF
                           g$lhs*$10315$CQIRF)
                         ((case-lambda
                            ((g$lex*$10319$CQIRF g$lab*$10320$CQIRF)
                             ((case-lambda
                                ((g$rib$10321$CQIRF g$r$10322$CQIRF)
                                 ((case-lambda
                                    ((g$body$10323$CQIRF g$rhs*$10324$CQIRF)
                                     (g$build$10312$CQIRF
                                       '#f
                                       g$lex*$10319$CQIRF
                                       g$rhs*$10324$CQIRF
                                       g$body$10323$CQIRF)))
                                  (g$chi-internal$9939$CQIRF
                                    (g$add-subst$9537$CQIRF
                                      g$rib$10321$CQIRF
                                      (cons g$b$10317$CQIRF g$b*$10318$CQIRF))
                                    g$r$10322$CQIRF
                                    g$mr$10311$CQIRF)
                                  (g$chi-expr*$9926$CQIRF
                                    (g$map$5946$CQIRF
                                      (case-lambda
                                        ((g$x$10325$CQIRF)
                                         (g$add-subst$9537$CQIRF
                                           g$rib$10321$CQIRF
                                           g$x$10325$CQIRF)))
                                      g$rhs*$10316$CQIRF)
                                    g$r$10322$CQIRF
                                    g$mr$10311$CQIRF))))
                              (g$make-full-rib$9513$CQIRF
                                g$lhs*$10315$CQIRF
                                g$lab*$10320$CQIRF)
                              (g$add-lexicals$9858$CQIRF
                                g$lab*$10320$CQIRF
                                g$lex*$10319$CQIRF
                                g$r$10310$CQIRF))))
                          (g$map$5946$CQIRF
                            g$gen-lexical$9482$CQIRF
                            g$lhs*$10315$CQIRF)
                          (g$map$5946$CQIRF
                            g$gen-label$9484$CQIRF
                            g$lhs*$10315$CQIRF)))))
                    g$ls/false$10314$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10313$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10313$CQIRF
               '(_ #(each (any any)) any . each-any)))))
         g$e$10309$CQIRF))))
   (g$letrec-transformer$9860$CQIRF
     g$letrec-transformer$13401$CQIRF
     (case-lambda
       ((g$e$10326$CQIRF g$r$10327$CQIRF g$mr$10328$CQIRF)
        (g$letrec-helper$9859$CQIRF
          g$e$10326$CQIRF
          g$r$10327$CQIRF
          g$mr$10328$CQIRF
          g$build-letrec$9474$CQIRF))))
   (g$letrec*-transformer$9861$CQIRF
     g$letrec*-transformer$13402$CQIRF
     (case-lambda
       ((g$e$10329$CQIRF g$r$10330$CQIRF g$mr$10331$CQIRF)
        (g$letrec-helper$9859$CQIRF
          g$e$10329$CQIRF
          g$r$10330$CQIRF
          g$mr$10331$CQIRF
          g$build-letrec*$9475$CQIRF))))
   (g$fluid-let-syntax-transformer$9862$CQIRF
     g$fluid-let-syntax-transformer$13403$CQIRF
     (case-lambda
       ((g$e$10332$CQIRF g$r$10333$CQIRF g$mr$10334$CQIRF)
        (letrec* ((g$lookup$10335$CQIRF
                    (case-lambda
                      ((g$x$10345$CQIRF)
                       ((case-lambda
                          ((g$t$10346$CQIRF)
                           (if g$t$10346$CQIRF
                             g$t$10346$CQIRF
                             (begin
                               '#f
                               (g$syntax-violation$10028$CQIRF
                                 '#f
                                 '"unbound identifier"
                                 g$e$10332$CQIRF
                                 g$x$10345$CQIRF)))))
                        (g$id->label$9560$CQIRF g$x$10345$CQIRF))))))
          ((case-lambda
             ((g$t$10336$CQIRF)
              ((case-lambda
                 ((g$ls/false$10337$CQIRF)
                  (if g$ls/false$10337$CQIRF
                    (apply
                      (case-lambda
                        ((g$lhs*$10338$CQIRF
                           g$rhs*$10339$CQIRF
                           g$b$10340$CQIRF
                           g$b*$10341$CQIRF)
                         (if (not (g$valid-bound-ids?$9552$CQIRF
                                    g$lhs*$10338$CQIRF))
                           (g$invalid-fmls-error$9875$CQIRF
                             g$e$10332$CQIRF
                             g$lhs*$10338$CQIRF)
                           ((case-lambda
                              ((g$lab*$10342$CQIRF g$rhs*$10343$CQIRF)
                               (g$chi-internal$9939$CQIRF
                                 (cons g$b$10340$CQIRF g$b*$10341$CQIRF)
                                 (append
                                   (g$map$5946$CQIRF
                                     cons
                                     g$lab*$10342$CQIRF
                                     g$rhs*$10343$CQIRF)
                                   g$r$10333$CQIRF)
                                 (append
                                   (g$map$5946$CQIRF
                                     cons
                                     g$lab*$10342$CQIRF
                                     g$rhs*$10343$CQIRF)
                                   g$mr$10334$CQIRF))))
                            (g$map$5946$CQIRF
                              g$lookup$10335$CQIRF
                              g$lhs*$10338$CQIRF)
                            (g$map$5946$CQIRF
                              (case-lambda
                                ((g$x$10344$CQIRF)
                                 (g$make-eval-transformer$9589$CQIRF
                                   (g$expand-transformer$9957$CQIRF
                                     g$x$10344$CQIRF
                                     g$mr$10334$CQIRF))))
                              g$rhs*$10339$CQIRF)))))
                      g$ls/false$10337$CQIRF)
                    (g$syntax-violation$10028$CQIRF
                      '#f
                      '"invalid syntax"
                      g$t$10336$CQIRF))))
               (g$syntax-dispatch$9910$CQIRF
                 g$t$10336$CQIRF
                 '(_ #(each (any any)) any . each-any)))))
           g$e$10332$CQIRF)))))
   (g$type-descriptor-transformer$9863$CQIRF
     g$type-descriptor-transformer$13404$CQIRF
     (case-lambda
       ((g$e$10347$CQIRF g$r$10348$CQIRF g$mr$10349$CQIRF)
        ((case-lambda
           ((g$t$10350$CQIRF)
            ((case-lambda
               ((g$ls/false$10351$CQIRF)
                (if (if g$ls/false$10351$CQIRF
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$10352$CQIRF)
                             (g$id?$9547$CQIRF g$id$10352$CQIRF)))
                          g$ls/false$10351$CQIRF))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$10353$CQIRF)
                       ((case-lambda
                          ((g$lab$10354$CQIRF)
                           ((case-lambda
                              ((g$b$10355$CQIRF)
                               ((case-lambda
                                  ((g$type$10356$CQIRF)
                                   (begin
                                     (if (not g$lab$10354$CQIRF)
                                       (g$raise-unbound-error$9566$CQIRF
                                         g$id$10353$CQIRF)
                                       (void))
                                     (if (not (if (eq? g$type$10356$CQIRF '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$9565$CQIRF
                                                           g$b$10355$CQIRF))))
                                                '#f))
                                       (g$syntax-violation$10028$CQIRF
                                         '#f
                                         '"not a record type"
                                         g$e$10347$CQIRF)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$9565$CQIRF
                                         g$b$10355$CQIRF)))))
                                (g$binding-type$9564$CQIRF g$b$10355$CQIRF))))
                            (g$label->binding$9562$CQIRF
                              g$lab$10354$CQIRF
                              g$r$10348$CQIRF))))
                        (g$id->label$9560$CQIRF g$id$10353$CQIRF))))
                    g$ls/false$10351$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10350$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10350$CQIRF '(_ any)))))
         g$e$10347$CQIRF))))
   (g$record-type-descriptor-transformer$9864$CQIRF
     g$record-type-descriptor-transformer$13405$CQIRF
     (case-lambda
       ((g$e$10357$CQIRF g$r$10358$CQIRF g$mr$10359$CQIRF)
        ((case-lambda
           ((g$t$10360$CQIRF)
            ((case-lambda
               ((g$ls/false$10361$CQIRF)
                (if (if g$ls/false$10361$CQIRF
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$10362$CQIRF)
                             (g$id?$9547$CQIRF g$id$10362$CQIRF)))
                          g$ls/false$10361$CQIRF))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$10363$CQIRF)
                       ((case-lambda
                          ((g$lab$10364$CQIRF)
                           ((case-lambda
                              ((g$b$10365$CQIRF)
                               ((case-lambda
                                  ((g$type$10366$CQIRF)
                                   (begin
                                     (if (not g$lab$10364$CQIRF)
                                       (g$raise-unbound-error$9566$CQIRF
                                         g$id$10363$CQIRF)
                                       (void))
                                     (if (not (if (eq? g$type$10366$CQIRF '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$9565$CQIRF
                                                      g$b$10365$CQIRF)))
                                                '#f))
                                       (g$syntax-violation$10028$CQIRF
                                         '#f
                                         '"not a record type"
                                         g$e$10357$CQIRF)
                                       (void))
                                     (g$chi-expr$9928$CQIRF
                                       (car (g$binding-value$9565$CQIRF
                                              g$b$10365$CQIRF))
                                       g$r$10358$CQIRF
                                       g$mr$10359$CQIRF))))
                                (g$binding-type$9564$CQIRF g$b$10365$CQIRF))))
                            (g$label->binding$9562$CQIRF
                              g$lab$10364$CQIRF
                              g$r$10358$CQIRF))))
                        (g$id->label$9560$CQIRF g$id$10363$CQIRF))))
                    g$ls/false$10361$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10360$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10360$CQIRF '(_ any)))))
         g$e$10357$CQIRF))))
   (g$record-constructor-descriptor-transformer$9865$CQIRF
     g$record-constructor-descriptor-transformer$13406$CQIRF
     (case-lambda
       ((g$e$10367$CQIRF g$r$10368$CQIRF g$mr$10369$CQIRF)
        ((case-lambda
           ((g$t$10370$CQIRF)
            ((case-lambda
               ((g$ls/false$10371$CQIRF)
                (if (if g$ls/false$10371$CQIRF
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$10372$CQIRF)
                             (g$id?$9547$CQIRF g$id$10372$CQIRF)))
                          g$ls/false$10371$CQIRF))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$10373$CQIRF)
                       ((case-lambda
                          ((g$lab$10374$CQIRF)
                           ((case-lambda
                              ((g$b$10375$CQIRF)
                               ((case-lambda
                                  ((g$type$10376$CQIRF)
                                   (begin
                                     (if (not g$lab$10374$CQIRF)
                                       (g$raise-unbound-error$9566$CQIRF
                                         g$id$10373$CQIRF)
                                       (void))
                                     (if (not (if (eq? g$type$10376$CQIRF '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$9565$CQIRF
                                                      g$b$10375$CQIRF)))
                                                '#f))
                                       (g$syntax-violation$10028$CQIRF
                                         '#f
                                         '"invalid type"
                                         g$e$10367$CQIRF)
                                       (void))
                                     (g$chi-expr$9928$CQIRF
                                       (g$cadr$6626$CQIRF
                                         (g$binding-value$9565$CQIRF
                                           g$b$10375$CQIRF))
                                       g$r$10368$CQIRF
                                       g$mr$10369$CQIRF))))
                                (g$binding-type$9564$CQIRF g$b$10375$CQIRF))))
                            (g$label->binding$9562$CQIRF
                              g$lab$10374$CQIRF
                              g$r$10368$CQIRF))))
                        (g$id->label$9560$CQIRF g$id$10373$CQIRF))))
                    g$ls/false$10371$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10370$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10370$CQIRF '(_ any)))))
         g$e$10367$CQIRF))))
   (g$when-macro$9866$CQIRF
     g$when-macro$13407$CQIRF
     (case-lambda
       ((g$e$10377$CQIRF)
        ((case-lambda
           ((g$t$10378$CQIRF)
            ((case-lambda
               ((g$ls/false$10379$CQIRF)
                (if g$ls/false$10379$CQIRF
                  (apply
                    (case-lambda
                      ((g$test$10380$CQIRF g$e$10381$CQIRF g$e*$10382$CQIRF)
                       (g$bless$9873$CQIRF
                         (list
                           'if
                           g$test$10380$CQIRF
                           (cons
                             'begin
                             (cons g$e$10381$CQIRF g$e*$10382$CQIRF))))))
                    g$ls/false$10379$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10378$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10378$CQIRF
               '(_ any any . each-any)))))
         g$e$10377$CQIRF))))
   (g$unless-macro$9867$CQIRF
     g$unless-macro$13408$CQIRF
     (case-lambda
       ((g$e$10383$CQIRF)
        ((case-lambda
           ((g$t$10384$CQIRF)
            ((case-lambda
               ((g$ls/false$10385$CQIRF)
                (if g$ls/false$10385$CQIRF
                  (apply
                    (case-lambda
                      ((g$test$10386$CQIRF g$e$10387$CQIRF g$e*$10388$CQIRF)
                       (g$bless$9873$CQIRF
                         (list
                           'if
                           (list 'not g$test$10386$CQIRF)
                           (cons
                             'begin
                             (cons g$e$10387$CQIRF g$e*$10388$CQIRF))))))
                    g$ls/false$10385$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10384$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10384$CQIRF
               '(_ any any . each-any)))))
         g$e$10383$CQIRF))))
   (g$if-transformer$9868$CQIRF
     g$if-transformer$13409$CQIRF
     (case-lambda
       ((g$e$10389$CQIRF g$r$10390$CQIRF g$mr$10391$CQIRF)
        ((case-lambda
           ((g$t$10392$CQIRF)
            ((case-lambda
               ((g$ls/false$10393$CQIRF)
                (if g$ls/false$10393$CQIRF
                  (apply
                    (case-lambda
                      ((g$e0$10394$CQIRF g$e1$10395$CQIRF g$e2$10396$CQIRF)
                       (list
                         'if
                         (g$chi-expr$9928$CQIRF
                           g$e0$10394$CQIRF
                           g$r$10390$CQIRF
                           g$mr$10391$CQIRF)
                         (g$chi-expr$9928$CQIRF
                           g$e1$10395$CQIRF
                           g$r$10390$CQIRF
                           g$mr$10391$CQIRF)
                         (g$chi-expr$9928$CQIRF
                           g$e2$10396$CQIRF
                           g$r$10390$CQIRF
                           g$mr$10391$CQIRF))))
                    g$ls/false$10393$CQIRF)
                  ((case-lambda
                     ((g$t$10397$CQIRF)
                      ((case-lambda
                         ((g$ls/false$10398$CQIRF)
                          (if g$ls/false$10398$CQIRF
                            (apply
                              (case-lambda
                                ((g$e0$10399$CQIRF g$e1$10400$CQIRF)
                                 (list
                                   'if
                                   (g$chi-expr$9928$CQIRF
                                     g$e0$10399$CQIRF
                                     g$r$10390$CQIRF
                                     g$mr$10391$CQIRF)
                                   (g$chi-expr$9928$CQIRF
                                     g$e1$10400$CQIRF
                                     g$r$10390$CQIRF
                                     g$mr$10391$CQIRF)
                                   (g$build-void$9473$CQIRF))))
                              g$ls/false$10398$CQIRF)
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"invalid syntax"
                              g$t$10397$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$10397$CQIRF
                         '(_ any any)))))
                   g$t$10392$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10392$CQIRF '(_ any any any)))))
         g$e$10389$CQIRF))))
   (g$case-macro$9869$CQIRF
     g$case-macro$13410$CQIRF
     (case-lambda
       ((g$e$10401$CQIRF)
        (letrec* ((g$build-last$10402$CQIRF
                    (case-lambda
                      ((g$cls$10422$CQIRF)
                       ((case-lambda
                          ((g$t$10423$CQIRF)
                           ((case-lambda
                              ((g$ls/false$10424$CQIRF)
                               (if g$ls/false$10424$CQIRF
                                 (apply
                                   (case-lambda
                                     ((g$e$10425$CQIRF g$e*$10426$CQIRF)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$10425$CQIRF
                                          g$e*$10426$CQIRF))))
                                   g$ls/false$10424$CQIRF)
                                 ((case-lambda
                                    ((g$t$10427$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$10428$CQIRF)
                                         (if g$ls/false$10428$CQIRF
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$10403$CQIRF
                                                  g$cls$10422$CQIRF
                                                  '(if #f #f))))
                                             g$ls/false$10428$CQIRF)
                                           (g$syntax-violation$10028$CQIRF
                                             '#f
                                             '"invalid syntax"
                                             g$t$10427$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$10427$CQIRF
                                        '_))))
                                  g$t$10423$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$10423$CQIRF
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$10422$CQIRF))))
                  (g$build-one$10403$CQIRF
                    (case-lambda
                      ((g$cls$10415$CQIRF g$k$10416$CQIRF)
                       ((case-lambda
                          ((g$t$10417$CQIRF)
                           ((case-lambda
                              ((g$ls/false$10418$CQIRF)
                               (if g$ls/false$10418$CQIRF
                                 (apply
                                   (case-lambda
                                     ((g$d*$10419$CQIRF
                                        g$e$10420$CQIRF
                                        g$e*$10421$CQIRF)
                                      (if (= '1 (length g$d*$10419$CQIRF))
                                        (list
                                          'if
                                          (list
                                            'eqv?
                                            't
                                            (list
                                              'quote
                                              (car g$d*$10419$CQIRF)))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$10420$CQIRF
                                              g$e*$10421$CQIRF))
                                          g$k$10416$CQIRF)
                                        (list
                                          'if
                                          (list
                                            'memv
                                            't
                                            (list 'quote g$d*$10419$CQIRF))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$10420$CQIRF
                                              g$e*$10421$CQIRF))
                                          g$k$10416$CQIRF))))
                                   g$ls/false$10418$CQIRF)
                                 (g$syntax-violation$10028$CQIRF
                                   '#f
                                   '"invalid syntax"
                                   g$t$10417$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$10417$CQIRF
                              '(each-any any . each-any)))))
                        g$cls$10415$CQIRF)))))
          ((case-lambda
             ((g$t$10404$CQIRF)
              ((case-lambda
                 ((g$ls/false$10405$CQIRF)
                  (if g$ls/false$10405$CQIRF
                    (apply
                      (case-lambda
                        ((g$expr$10406$CQIRF)
                         (g$bless$9873$CQIRF
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$10406$CQIRF))
                               '((if #f #f)))))))
                      g$ls/false$10405$CQIRF)
                    ((case-lambda
                       ((g$t$10407$CQIRF)
                        ((case-lambda
                           ((g$ls/false$10408$CQIRF)
                            (if g$ls/false$10408$CQIRF
                              (apply
                                (case-lambda
                                  ((g$expr$10409$CQIRF
                                     g$cls$10410$CQIRF
                                     g$cls*$10411$CQIRF)
                                   (g$bless$9873$CQIRF
                                     (list
                                       'let
                                       (list (list 't g$expr$10409$CQIRF))
                                       ((letrec ((g$f$10412$CQIRF
                                                   (case-lambda
                                                     ((g$cls$10413$CQIRF
                                                        g$cls*$10414$CQIRF)
                                                      (if (null?
                                                            g$cls*$10414$CQIRF)
                                                        (g$build-last$10402$CQIRF
                                                          g$cls$10413$CQIRF)
                                                        (g$build-one$10403$CQIRF
                                                          g$cls$10413$CQIRF
                                                          (g$f$10412$CQIRF
                                                            (car g$cls*$10414$CQIRF)
                                                            (cdr g$cls*$10414$CQIRF))))))))
                                          g$f$10412$CQIRF)
                                        g$cls$10410$CQIRF
                                        g$cls*$10411$CQIRF)))))
                                g$ls/false$10408$CQIRF)
                              (g$syntax-violation$10028$CQIRF
                                '#f
                                '"invalid syntax"
                                g$t$10407$CQIRF))))
                         (g$syntax-dispatch$9910$CQIRF
                           g$t$10407$CQIRF
                           '(_ any any . each-any)))))
                     g$t$10404$CQIRF))))
               (g$syntax-dispatch$9910$CQIRF g$t$10404$CQIRF '(_ any)))))
           g$e$10401$CQIRF)))))
   (g$quote-transformer$9870$CQIRF
     g$quote-transformer$13411$CQIRF
     (case-lambda
       ((g$e$10429$CQIRF g$r$10430$CQIRF g$mr$10431$CQIRF)
        ((case-lambda
           ((g$t$10432$CQIRF)
            ((case-lambda
               ((g$ls/false$10433$CQIRF)
                (if g$ls/false$10433$CQIRF
                  (apply
                    (case-lambda
                      ((g$datum$10434$CQIRF)
                       (list
                         'quote
                         (g$stx->datum$9558$CQIRF g$datum$10434$CQIRF))))
                    g$ls/false$10433$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10432$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10432$CQIRF '(_ any)))))
         g$e$10429$CQIRF))))
   (g$case-lambda-transformer$9871$CQIRF
     g$case-lambda-transformer$13412$CQIRF
     (case-lambda
       ((g$e$10435$CQIRF g$r$10436$CQIRF g$mr$10437$CQIRF)
        ((case-lambda
           ((g$t$10438$CQIRF)
            ((case-lambda
               ((g$ls/false$10439$CQIRF)
                (if g$ls/false$10439$CQIRF
                  (apply
                    (case-lambda
                      ((g$fmls*$10440$CQIRF g$b*$10441$CQIRF g$b**$10442$CQIRF)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$9932$CQIRF
                              g$e$10435$CQIRF
                              g$fmls*$10440$CQIRF
                              (g$map$5946$CQIRF
                                cons
                                g$b*$10441$CQIRF
                                g$b**$10442$CQIRF)
                              g$r$10436$CQIRF
                              g$mr$10437$CQIRF)))
                         (case-lambda
                           ((g$fmls*$10445$CQIRF g$body*$10446$CQIRF)
                            ((case-lambda
                               ((g$body*$10447$CQIRF g$fmls*$10448$CQIRF)
                                (g$build-case-lambda$9470$CQIRF
                                  '#f
                                  g$fmls*$10448$CQIRF
                                  g$body*$10447$CQIRF)))
                             g$body*$10446$CQIRF
                             g$fmls*$10445$CQIRF))))))
                    g$ls/false$10439$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10438$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10438$CQIRF
               '(_ . #(each (any any . each-any)))))))
         g$e$10435$CQIRF))))
   (g$lambda-transformer$9872$CQIRF
     g$lambda-transformer$13413$CQIRF
     (case-lambda
       ((g$e$10449$CQIRF g$r$10450$CQIRF g$mr$10451$CQIRF)
        ((case-lambda
           ((g$t$10452$CQIRF)
            ((case-lambda
               ((g$ls/false$10453$CQIRF)
                (if g$ls/false$10453$CQIRF
                  (apply
                    (case-lambda
                      ((g$fmls$10454$CQIRF g$b$10455$CQIRF g$b*$10456$CQIRF)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$9931$CQIRF
                              g$e$10449$CQIRF
                              g$fmls$10454$CQIRF
                              (cons g$b$10455$CQIRF g$b*$10456$CQIRF)
                              g$r$10450$CQIRF
                              g$mr$10451$CQIRF)))
                         (case-lambda
                           ((g$fmls$10459$CQIRF g$body$10460$CQIRF)
                            ((case-lambda
                               ((g$body$10461$CQIRF g$fmls$10462$CQIRF)
                                (g$build-lambda$9469$CQIRF
                                  '#f
                                  g$fmls$10462$CQIRF
                                  g$body$10461$CQIRF)))
                             g$body$10460$CQIRF
                             g$fmls$10459$CQIRF))))))
                    g$ls/false$10453$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10452$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10452$CQIRF
               '(_ any any . each-any)))))
         g$e$10449$CQIRF))))
   (g$bless$9873$CQIRF
     g$bless$13414$CQIRF
     (case-lambda
       ((g$x$10463$CQIRF)
        (g$mkstx$9535$CQIRF
          ((letrec ((g$f$10464$CQIRF
                      (case-lambda
                        ((g$x$10465$CQIRF)
                         (if (g$stx?$9519$CQIRF g$x$10465$CQIRF)
                           g$x$10465$CQIRF
                           (if (pair? g$x$10465$CQIRF)
                             (cons
                               (g$f$10464$CQIRF (car g$x$10465$CQIRF))
                               (g$f$10464$CQIRF (cdr g$x$10465$CQIRF)))
                             (if (g$symbol?$6617$CQIRF g$x$10465$CQIRF)
                               (g$scheme-stx$9853$CQIRF g$x$10465$CQIRF)
                               (if (g$vector?$6615$CQIRF g$x$10465$CQIRF)
                                 (g$vector-map$6677$CQIRF
                                   g$f$10464$CQIRF
                                   g$x$10465$CQIRF)
                                 g$x$10465$CQIRF))))))))
             g$f$10464$CQIRF)
           g$x$10463$CQIRF)
          '()
          '()
          '()))))
   (g$with-syntax-macro$9874$CQIRF
     g$with-syntax-macro$13415$CQIRF
     (case-lambda
       ((g$e$10466$CQIRF)
        ((case-lambda
           ((g$t$10467$CQIRF)
            ((case-lambda
               ((g$ls/false$10468$CQIRF)
                (if g$ls/false$10468$CQIRF
                  (apply
                    (case-lambda
                      ((g$pat*$10469$CQIRF
                         g$expr*$10470$CQIRF
                         g$b$10471$CQIRF
                         g$b*$10472$CQIRF)
                       ((case-lambda
                          ((g$idn*$10473$CQIRF)
                           (begin
                             (g$verify-formals$9930$CQIRF
                               (g$map$5946$CQIRF car g$idn*$10473$CQIRF)
                               g$e$10466$CQIRF)
                             ((case-lambda
                                ((g$t*$10474$CQIRF)
                                 (g$bless$9873$CQIRF
                                   (list
                                     'let
                                     (g$map$5946$CQIRF
                                       list
                                       g$t*$10474$CQIRF
                                       g$expr*$10470$CQIRF)
                                     ((letrec ((g$f$10475$CQIRF
                                                 (case-lambda
                                                   ((g$pat*$10476$CQIRF
                                                      g$t*$10477$CQIRF)
                                                    (if (null?
                                                          g$pat*$10476$CQIRF)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$10471$CQIRF
                                                            g$b*$10472$CQIRF)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$10477$CQIRF)
                                                        '()
                                                        (list
                                                          (car g$pat*$10476$CQIRF)
                                                          (g$f$10475$CQIRF
                                                            (cdr g$pat*$10476$CQIRF)
                                                            (cdr g$t*$10477$CQIRF)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$10476$CQIRF))
                                                            (car g$t*$10477$CQIRF)))))))))
                                        g$f$10475$CQIRF)
                                      g$pat*$10469$CQIRF
                                      g$t*$10474$CQIRF)))))
                              (g$generate-temporaries$10018$CQIRF
                                g$expr*$10470$CQIRF)))))
                        ((letrec ((g$f$10478$CQIRF
                                    (case-lambda
                                      ((g$pat*$10479$CQIRF)
                                       (if (null? g$pat*$10479$CQIRF)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$9909$CQIRF
                                                (car g$pat*$10479$CQIRF)
                                                '())))
                                           (case-lambda
                                             ((g$pat$10482$CQIRF
                                                g$idn*$10483$CQIRF)
                                              ((case-lambda
                                                 ((g$idn*$10484$CQIRF
                                                    g$pat$10485$CQIRF)
                                                  (append
                                                    g$idn*$10484$CQIRF
                                                    (g$f$10478$CQIRF
                                                      (cdr g$pat*$10479$CQIRF)))))
                                               g$idn*$10483$CQIRF
                                               g$pat$10482$CQIRF)))))))))
                           g$f$10478$CQIRF)
                         g$pat*$10469$CQIRF))))
                    g$ls/false$10468$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10467$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10467$CQIRF
               '(_ #(each (any any)) any . each-any)))))
         g$e$10466$CQIRF))))
   (g$invalid-fmls-error$9875$CQIRF
     g$invalid-fmls-error$13416$CQIRF
     (case-lambda
       ((g$stx$10486$CQIRF g$fmls$10487$CQIRF)
        ((case-lambda
           ((g$t$10488$CQIRF)
            ((case-lambda
               ((g$ls/false$10489$CQIRF)
                (if g$ls/false$10489$CQIRF
                  (apply
                    (case-lambda
                      ((g$id*$10490$CQIRF g$last$10491$CQIRF)
                       ((letrec ((g$f$10492$CQIRF
                                   (case-lambda
                                     ((g$id*$10493$CQIRF)
                                      (if (null? g$id*$10493$CQIRF)
                                        (values)
                                        (if (not (g$id?$9547$CQIRF
                                                   (car g$id*$10493$CQIRF)))
                                          (g$syntax-violation$10028$CQIRF
                                            '#f
                                            '"not an identifier"
                                            g$stx$10486$CQIRF
                                            (car g$id*$10493$CQIRF))
                                          (begin
                                            (g$f$10492$CQIRF
                                              (cdr g$id*$10493$CQIRF))
                                            (if (g$bound-id-member?$9554$CQIRF
                                                  (car g$id*$10493$CQIRF)
                                                  (cdr g$id*$10493$CQIRF))
                                              (g$syntax-violation$10028$CQIRF
                                                '#f
                                                '"duplicate binding"
                                                g$stx$10486$CQIRF
                                                (car g$id*$10493$CQIRF))
                                              (void)))))))))
                          g$f$10492$CQIRF)
                        (if (g$id?$9547$CQIRF g$last$10491$CQIRF)
                          (cons g$last$10491$CQIRF g$id*$10490$CQIRF)
                          (if (g$syntax-null?$9542$CQIRF g$last$10491$CQIRF)
                            g$id*$10490$CQIRF
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"not an identifier"
                              g$stx$10486$CQIRF
                              g$last$10491$CQIRF))))))
                    g$ls/false$10489$CQIRF)
                  ((case-lambda
                     ((g$t$10494$CQIRF)
                      ((case-lambda
                         ((g$ls/false$10495$CQIRF)
                          (if g$ls/false$10495$CQIRF
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$10028$CQIRF
                                   '#f
                                   '"malformed binding form"
                                   g$stx$10486$CQIRF
                                   g$fmls$10487$CQIRF)))
                              g$ls/false$10495$CQIRF)
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"invalid syntax"
                              g$t$10494$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF g$t$10494$CQIRF '_))))
                   g$t$10488$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10488$CQIRF
               '#(each+ any () any)))))
         g$fmls$10487$CQIRF))))
   (g$let-macro$9876$CQIRF
     g$let-macro$13417$CQIRF
     (case-lambda
       ((g$stx$10496$CQIRF)
        ((case-lambda
           ((g$t$10497$CQIRF)
            ((case-lambda
               ((g$ls/false$10498$CQIRF)
                (if g$ls/false$10498$CQIRF
                  (apply
                    (case-lambda
                      ((g$lhs*$10499$CQIRF
                         g$rhs*$10500$CQIRF
                         g$b$10501$CQIRF
                         g$b*$10502$CQIRF)
                       (if (g$valid-bound-ids?$9552$CQIRF g$lhs*$10499$CQIRF)
                         (g$bless$9873$CQIRF
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$10499$CQIRF
                                 (cons g$b$10501$CQIRF g$b*$10502$CQIRF)))
                             g$rhs*$10500$CQIRF))
                         (g$invalid-fmls-error$9875$CQIRF
                           g$stx$10496$CQIRF
                           g$lhs*$10499$CQIRF))))
                    g$ls/false$10498$CQIRF)
                  ((case-lambda
                     ((g$t$10503$CQIRF)
                      ((case-lambda
                         ((g$ls/false$10504$CQIRF)
                          (if (if g$ls/false$10504$CQIRF
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$10505$CQIRF
                                         g$lhs*$10506$CQIRF
                                         g$rhs*$10507$CQIRF
                                         g$b$10508$CQIRF
                                         g$b*$10509$CQIRF)
                                       (g$id?$9547$CQIRF g$f$10505$CQIRF)))
                                    g$ls/false$10504$CQIRF))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$10510$CQIRF
                                   g$lhs*$10511$CQIRF
                                   g$rhs*$10512$CQIRF
                                   g$b$10513$CQIRF
                                   g$b*$10514$CQIRF)
                                 (if (g$valid-bound-ids?$9552$CQIRF
                                       g$lhs*$10511$CQIRF)
                                   (g$bless$9873$CQIRF
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$10510$CQIRF
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$10511$CQIRF
                                                 (cons
                                                   g$b$10513$CQIRF
                                                   g$b*$10514$CQIRF)))))
                                         g$f$10510$CQIRF)
                                       g$rhs*$10512$CQIRF))
                                   (g$invalid-fmls-error$9875$CQIRF
                                     g$stx$10496$CQIRF
                                     g$lhs*$10511$CQIRF))))
                              g$ls/false$10504$CQIRF)
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"invalid syntax"
                              g$t$10503$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$10503$CQIRF
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$10497$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10497$CQIRF
               '(_ #(each (any any)) any . each-any)))))
         g$stx$10496$CQIRF))))
   (g$let-values-macro$9877$CQIRF
     g$let-values-macro$13418$CQIRF
     (case-lambda
       ((g$stx$10515$CQIRF)
        (letrec* ((g$rename$10516$CQIRF
                    (case-lambda
                      ((g$x$10567$CQIRF g$old*$10568$CQIRF g$new*$10569$CQIRF)
                       (begin
                         (if (not (g$id?$9547$CQIRF g$x$10567$CQIRF))
                           (g$syntax-violation$10028$CQIRF
                             '#f
                             '"not an indentifier"
                             g$stx$10515$CQIRF
                             g$x$10567$CQIRF)
                           (void))
                         (if (g$bound-id-member?$9554$CQIRF
                               g$x$10567$CQIRF
                               g$old*$10568$CQIRF)
                           (g$syntax-violation$10028$CQIRF
                             '#f
                             '"duplicate binding"
                             g$stx$10515$CQIRF
                             g$x$10567$CQIRF)
                           (void))
                         ((case-lambda
                            ((g$y$10570$CQIRF)
                             (values
                               g$y$10570$CQIRF
                               (cons g$x$10567$CQIRF g$old*$10568$CQIRF)
                               (cons g$y$10570$CQIRF g$new*$10569$CQIRF))))
                          (gensym
                            (g$syntax->datum$10031$CQIRF g$x$10567$CQIRF)))))))
                  (g$rename*$10517$CQIRF
                    (case-lambda
                      ((g$x*$10558$CQIRF g$old*$10559$CQIRF g$new*$10560$CQIRF)
                       (if (null? g$x*$10558$CQIRF)
                         (values '() g$old*$10559$CQIRF g$new*$10560$CQIRF)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$10516$CQIRF
                                (car g$x*$10558$CQIRF)
                                g$old*$10559$CQIRF
                                g$new*$10560$CQIRF)))
                           (case-lambda
                             ((g$x$10561$CQIRF
                                g$old*$10562$CQIRF
                                g$new*$10563$CQIRF)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$10517$CQIRF
                                     (cdr g$x*$10558$CQIRF)
                                     g$old*$10562$CQIRF
                                     g$new*$10563$CQIRF)))
                                (case-lambda
                                  ((g$x*$10564$CQIRF
                                     g$old*$10565$CQIRF
                                     g$new*$10566$CQIRF)
                                   (values
                                     (cons g$x$10561$CQIRF g$x*$10564$CQIRF)
                                     g$old*$10565$CQIRF
                                     g$new*$10566$CQIRF))))))))))))
          ((case-lambda
             ((g$t$10518$CQIRF)
              ((case-lambda
                 ((g$ls/false$10519$CQIRF)
                  (if g$ls/false$10519$CQIRF
                    (apply
                      (case-lambda
                        ((g$b$10520$CQIRF g$b*$10521$CQIRF)
                         (g$cons*$5948$CQIRF
                           (g$bless$9873$CQIRF 'let)
                           '()
                           g$b$10520$CQIRF
                           g$b*$10521$CQIRF)))
                      g$ls/false$10519$CQIRF)
                    ((case-lambda
                       ((g$t$10522$CQIRF)
                        ((case-lambda
                           ((g$ls/false$10523$CQIRF)
                            (if g$ls/false$10523$CQIRF
                              (apply
                                (case-lambda
                                  ((g$lhs*$10524$CQIRF
                                     g$rhs*$10525$CQIRF
                                     g$b$10526$CQIRF
                                     g$b*$10527$CQIRF)
                                   (g$bless$9873$CQIRF
                                     ((letrec ((g$f$10528$CQIRF
                                                 (case-lambda
                                                   ((g$lhs*$10529$CQIRF
                                                      g$rhs*$10530$CQIRF
                                                      g$old*$10531$CQIRF
                                                      g$new*$10532$CQIRF)
                                                    (if (null?
                                                          g$lhs*$10529$CQIRF)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$5946$CQIRF
                                                            list
                                                            g$old*$10531$CQIRF
                                                            g$new*$10532$CQIRF)
                                                          (cons
                                                            g$b$10526$CQIRF
                                                            g$b*$10527$CQIRF)))
                                                      ((case-lambda
                                                         ((g$t$10533$CQIRF)
                                                          ((case-lambda
                                                             ((g$ls/false$10534$CQIRF)
                                                              (if g$ls/false$10534$CQIRF
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$10535$CQIRF)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$10517$CQIRF
                                                                            g$x*$10535$CQIRF
                                                                            g$old*$10531$CQIRF
                                                                            g$new*$10532$CQIRF)))
                                                                       (case-lambda
                                                                         ((g$y*$10539$CQIRF
                                                                            g$old*$10540$CQIRF
                                                                            g$new*$10541$CQIRF)
                                                                          ((case-lambda
                                                                             ((g$new*$10542$CQIRF
                                                                                g$old*$10543$CQIRF
                                                                                g$y*$10544$CQIRF)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$10530$CQIRF))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$10544$CQIRF
                                                                                  (g$f$10528$CQIRF
                                                                                    (cdr g$lhs*$10529$CQIRF)
                                                                                    (cdr g$rhs*$10530$CQIRF)
                                                                                    g$old*$10543$CQIRF
                                                                                    g$new*$10542$CQIRF)))))
                                                                           g$new*$10541$CQIRF
                                                                           g$old*$10540$CQIRF
                                                                           g$y*$10539$CQIRF))))))
                                                                  g$ls/false$10534$CQIRF)
                                                                ((case-lambda
                                                                   ((g$t$10545$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10546$CQIRF)
                                                                        (if g$ls/false$10546$CQIRF
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$10547$CQIRF
                                                                                 g$x$10548$CQIRF)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$10516$CQIRF
                                                                                      g$x$10548$CQIRF
                                                                                      g$old*$10531$CQIRF
                                                                                      g$new*$10532$CQIRF)))
                                                                                 (case-lambda
                                                                                   ((g$y$10549$CQIRF
                                                                                      g$old*$10550$CQIRF
                                                                                      g$new*$10551$CQIRF)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$10517$CQIRF
                                                                                           g$x*$10547$CQIRF
                                                                                           g$old*$10550$CQIRF
                                                                                           g$new*$10551$CQIRF)))
                                                                                      (case-lambda
                                                                                        ((g$y*$10552$CQIRF
                                                                                           g$old*$10553$CQIRF
                                                                                           g$new*$10554$CQIRF)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$10530$CQIRF))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$10552$CQIRF
                                                                                               g$y$10549$CQIRF)
                                                                                             (g$f$10528$CQIRF
                                                                                               (cdr g$lhs*$10529$CQIRF)
                                                                                               (cdr g$rhs*$10530$CQIRF)
                                                                                               g$old*$10553$CQIRF
                                                                                               g$new*$10554$CQIRF)))))))))))
                                                                            g$ls/false$10546$CQIRF)
                                                                          ((case-lambda
                                                                             ((g$t$10555$CQIRF)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10556$CQIRF)
                                                                                  (if g$ls/false$10556$CQIRF
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$10557$CQIRF)
                                                                                         (g$syntax-violation$10028$CQIRF
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$10515$CQIRF
                                                                                           g$others$10557$CQIRF)))
                                                                                      g$ls/false$10556$CQIRF)
                                                                                    (g$syntax-violation$10028$CQIRF
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$10555$CQIRF))))
                                                                               (g$syntax-dispatch$9910$CQIRF
                                                                                 g$t$10555$CQIRF
                                                                                 'any))))
                                                                           g$t$10545$CQIRF))))
                                                                     (g$syntax-dispatch$9910$CQIRF
                                                                       g$t$10545$CQIRF
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$10533$CQIRF))))
                                                           (g$syntax-dispatch$9910$CQIRF
                                                             g$t$10533$CQIRF
                                                             'each-any))))
                                                       (car g$lhs*$10529$CQIRF)))))))
                                        g$f$10528$CQIRF)
                                      g$lhs*$10524$CQIRF
                                      g$rhs*$10525$CQIRF
                                      '()
                                      '()))))
                                g$ls/false$10523$CQIRF)
                              (g$syntax-violation$10028$CQIRF
                                '#f
                                '"invalid syntax"
                                g$t$10522$CQIRF))))
                         (g$syntax-dispatch$9910$CQIRF
                           g$t$10522$CQIRF
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$10518$CQIRF))))
               (g$syntax-dispatch$9910$CQIRF
                 g$t$10518$CQIRF
                 '(_ () any . each-any)))))
           g$stx$10515$CQIRF)))))
   (g$let*-values-macro$9878$CQIRF
     g$let*-values-macro$13419$CQIRF
     (case-lambda
       ((g$stx$10571$CQIRF)
        (letrec* ((g$check$10572$CQIRF
                    (case-lambda
                      ((g$x*$10596$CQIRF)
                       (if (not (null? g$x*$10596$CQIRF))
                         ((case-lambda
                            ((g$x$10597$CQIRF)
                             (begin
                               (if (not (g$id?$9547$CQIRF g$x$10597$CQIRF))
                                 (g$syntax-violation$10028$CQIRF
                                   '#f
                                   '"not an identifier"
                                   g$stx$10571$CQIRF
                                   g$x$10597$CQIRF)
                                 (void))
                               (g$check$10572$CQIRF (cdr g$x*$10596$CQIRF))
                               (if (g$bound-id-member?$9554$CQIRF
                                     g$x$10597$CQIRF
                                     (cdr g$x*$10596$CQIRF))
                                 (g$syntax-violation$10028$CQIRF
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$10571$CQIRF
                                   g$x$10597$CQIRF)
                                 (void)))))
                          (car g$x*$10596$CQIRF))
                         (void))))))
          ((case-lambda
             ((g$t$10573$CQIRF)
              ((case-lambda
                 ((g$ls/false$10574$CQIRF)
                  (if g$ls/false$10574$CQIRF
                    (apply
                      (case-lambda
                        ((g$b$10575$CQIRF g$b*$10576$CQIRF)
                         (g$cons*$5948$CQIRF
                           (g$bless$9873$CQIRF 'let)
                           '()
                           g$b$10575$CQIRF
                           g$b*$10576$CQIRF)))
                      g$ls/false$10574$CQIRF)
                    ((case-lambda
                       ((g$t$10577$CQIRF)
                        ((case-lambda
                           ((g$ls/false$10578$CQIRF)
                            (if g$ls/false$10578$CQIRF
                              (apply
                                (case-lambda
                                  ((g$lhs*$10579$CQIRF
                                     g$rhs*$10580$CQIRF
                                     g$b$10581$CQIRF
                                     g$b*$10582$CQIRF)
                                   (g$bless$9873$CQIRF
                                     ((letrec ((g$f$10583$CQIRF
                                                 (case-lambda
                                                   ((g$lhs*$10584$CQIRF
                                                      g$rhs*$10585$CQIRF)
                                                    (if (null?
                                                          g$lhs*$10584$CQIRF)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$10581$CQIRF
                                                          g$b*$10582$CQIRF))
                                                      ((case-lambda
                                                         ((g$t$10586$CQIRF)
                                                          ((case-lambda
                                                             ((g$ls/false$10587$CQIRF)
                                                              (if g$ls/false$10587$CQIRF
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$10588$CQIRF)
                                                                     (begin
                                                                       (g$check$10572$CQIRF
                                                                         g$x*$10588$CQIRF)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$10585$CQIRF))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$10588$CQIRF
                                                                           (g$f$10583$CQIRF
                                                                             (cdr g$lhs*$10584$CQIRF)
                                                                             (cdr g$rhs*$10585$CQIRF)))))))
                                                                  g$ls/false$10587$CQIRF)
                                                                ((case-lambda
                                                                   ((g$t$10589$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10590$CQIRF)
                                                                        (if g$ls/false$10590$CQIRF
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$10591$CQIRF
                                                                                 g$x$10592$CQIRF)
                                                                               (begin
                                                                                 (g$check$10572$CQIRF
                                                                                   (cons
                                                                                     g$x$10592$CQIRF
                                                                                     g$x*$10591$CQIRF))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$10585$CQIRF))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$10591$CQIRF
                                                                                       g$x$10592$CQIRF)
                                                                                     (g$f$10583$CQIRF
                                                                                       (cdr g$lhs*$10584$CQIRF)
                                                                                       (cdr g$rhs*$10585$CQIRF)))))))
                                                                            g$ls/false$10590$CQIRF)
                                                                          ((case-lambda
                                                                             ((g$t$10593$CQIRF)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10594$CQIRF)
                                                                                  (if g$ls/false$10594$CQIRF
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$10595$CQIRF)
                                                                                         (g$syntax-violation$10028$CQIRF
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$10571$CQIRF
                                                                                           g$others$10595$CQIRF)))
                                                                                      g$ls/false$10594$CQIRF)
                                                                                    (g$syntax-violation$10028$CQIRF
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$10593$CQIRF))))
                                                                               (g$syntax-dispatch$9910$CQIRF
                                                                                 g$t$10593$CQIRF
                                                                                 'any))))
                                                                           g$t$10589$CQIRF))))
                                                                     (g$syntax-dispatch$9910$CQIRF
                                                                       g$t$10589$CQIRF
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$10586$CQIRF))))
                                                           (g$syntax-dispatch$9910$CQIRF
                                                             g$t$10586$CQIRF
                                                             'each-any))))
                                                       (car g$lhs*$10584$CQIRF)))))))
                                        g$f$10583$CQIRF)
                                      g$lhs*$10579$CQIRF
                                      g$rhs*$10580$CQIRF))))
                                g$ls/false$10578$CQIRF)
                              (g$syntax-violation$10028$CQIRF
                                '#f
                                '"invalid syntax"
                                g$t$10577$CQIRF))))
                         (g$syntax-dispatch$9910$CQIRF
                           g$t$10577$CQIRF
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$10573$CQIRF))))
               (g$syntax-dispatch$9910$CQIRF
                 g$t$10573$CQIRF
                 '(_ () any . each-any)))))
           g$stx$10571$CQIRF)))))
   (g$trace-lambda-macro$9879$CQIRF
     g$trace-lambda-macro$13420$CQIRF
     (case-lambda
       ((g$stx$10598$CQIRF)
        ((case-lambda
           ((g$t$10599$CQIRF)
            ((case-lambda
               ((g$ls/false$10600$CQIRF)
                (if g$ls/false$10600$CQIRF
                  (apply
                    (case-lambda
                      ((g$who$10601$CQIRF
                         g$fmls$10602$CQIRF
                         g$b$10603$CQIRF
                         g$b*$10604$CQIRF)
                       (if (g$valid-bound-ids?$9552$CQIRF g$fmls$10602$CQIRF)
                         (g$bless$9873$CQIRF
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$10601$CQIRF)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$10602$CQIRF
                                 (cons g$b$10603$CQIRF g$b*$10604$CQIRF)))))
                         (g$invalid-fmls-error$9875$CQIRF
                           g$stx$10598$CQIRF
                           g$fmls$10602$CQIRF))))
                    g$ls/false$10600$CQIRF)
                  ((case-lambda
                     ((g$t$10605$CQIRF)
                      ((case-lambda
                         ((g$ls/false$10606$CQIRF)
                          (if g$ls/false$10606$CQIRF
                            (apply
                              (case-lambda
                                ((g$who$10607$CQIRF
                                   g$fmls$10608$CQIRF
                                   g$last$10609$CQIRF
                                   g$b$10610$CQIRF
                                   g$b*$10611$CQIRF)
                                 (if (g$valid-bound-ids?$9552$CQIRF
                                       (cons
                                         g$last$10609$CQIRF
                                         g$fmls$10608$CQIRF))
                                   (g$bless$9873$CQIRF
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$10607$CQIRF)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$10608$CQIRF
                                             g$last$10609$CQIRF)
                                           (cons
                                             g$b$10610$CQIRF
                                             g$b*$10611$CQIRF)))))
                                   (g$invalid-fmls-error$9875$CQIRF
                                     g$stx$10598$CQIRF
                                     (append
                                       g$fmls$10608$CQIRF
                                       g$last$10609$CQIRF)))))
                              g$ls/false$10606$CQIRF)
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"invalid syntax"
                              g$t$10605$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$10605$CQIRF
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$10599$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10599$CQIRF
               '(_ any each-any any . each-any)))))
         g$stx$10598$CQIRF))))
   (g$trace-define-macro$9880$CQIRF
     g$trace-define-macro$13421$CQIRF
     (case-lambda
       ((g$stx$10612$CQIRF)
        ((case-lambda
           ((g$t$10613$CQIRF)
            ((case-lambda
               ((g$ls/false$10614$CQIRF)
                (if g$ls/false$10614$CQIRF
                  (apply
                    (case-lambda
                      ((g$who$10615$CQIRF
                         g$fmls$10616$CQIRF
                         g$b$10617$CQIRF
                         g$b*$10618$CQIRF)
                       (if (g$valid-bound-ids?$9552$CQIRF g$fmls$10616$CQIRF)
                         (g$bless$9873$CQIRF
                           (list
                             'define
                             g$who$10615$CQIRF
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$10615$CQIRF)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$10616$CQIRF
                                   (cons g$b$10617$CQIRF g$b*$10618$CQIRF))))))
                         (g$invalid-fmls-error$9875$CQIRF
                           g$stx$10612$CQIRF
                           g$fmls$10616$CQIRF))))
                    g$ls/false$10614$CQIRF)
                  ((case-lambda
                     ((g$t$10619$CQIRF)
                      ((case-lambda
                         ((g$ls/false$10620$CQIRF)
                          (if g$ls/false$10620$CQIRF
                            (apply
                              (case-lambda
                                ((g$who$10621$CQIRF
                                   g$fmls$10622$CQIRF
                                   g$last$10623$CQIRF
                                   g$b$10624$CQIRF
                                   g$b*$10625$CQIRF)
                                 (if (g$valid-bound-ids?$9552$CQIRF
                                       (cons
                                         g$last$10623$CQIRF
                                         g$fmls$10622$CQIRF))
                                   (g$bless$9873$CQIRF
                                     (list
                                       'define
                                       g$who$10621$CQIRF
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$10621$CQIRF)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$10622$CQIRF
                                               g$last$10623$CQIRF)
                                             (cons
                                               g$b$10624$CQIRF
                                               g$b*$10625$CQIRF))))))
                                   (g$invalid-fmls-error$9875$CQIRF
                                     g$stx$10612$CQIRF
                                     (append
                                       g$fmls$10622$CQIRF
                                       g$last$10623$CQIRF)))))
                              g$ls/false$10620$CQIRF)
                            ((case-lambda
                               ((g$t$10626$CQIRF)
                                ((case-lambda
                                   ((g$ls/false$10627$CQIRF)
                                    (if g$ls/false$10627$CQIRF
                                      (apply
                                        (case-lambda
                                          ((g$who$10628$CQIRF
                                             g$expr$10629$CQIRF)
                                           (if (g$id?$9547$CQIRF
                                                 g$who$10628$CQIRF)
                                             (g$bless$9873$CQIRF
                                               (list
                                                 'define
                                                 g$who$10628$CQIRF
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$10629$CQIRF))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$10628$CQIRF)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$10028$CQIRF
                                               '#f
                                               '"invalid name"
                                               g$stx$10612$CQIRF))))
                                        g$ls/false$10627$CQIRF)
                                      (g$syntax-violation$10028$CQIRF
                                        '#f
                                        '"invalid syntax"
                                        g$t$10626$CQIRF))))
                                 (g$syntax-dispatch$9910$CQIRF
                                   g$t$10626$CQIRF
                                   '(_ any any)))))
                             g$t$10619$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$10619$CQIRF
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$10613$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10613$CQIRF
               '(_ (any . each-any) any . each-any)))))
         g$stx$10612$CQIRF))))
   (g$trace-define-syntax-macro$9881$CQIRF
     g$trace-define-syntax-macro$13422$CQIRF
     (case-lambda
       ((g$stx$10630$CQIRF)
        ((case-lambda
           ((g$t$10631$CQIRF)
            ((case-lambda
               ((g$ls/false$10632$CQIRF)
                (if g$ls/false$10632$CQIRF
                  (apply
                    (case-lambda
                      ((g$who$10633$CQIRF g$expr$10634$CQIRF)
                       (if (g$id?$9547$CQIRF g$who$10633$CQIRF)
                         (g$bless$9873$CQIRF
                           (list
                             'define-syntax
                             g$who$10633$CQIRF
                             (list
                               'make-traced-macro
                               (list 'quote g$who$10633$CQIRF)
                               g$expr$10634$CQIRF)))
                         (g$syntax-violation$10028$CQIRF
                           '#f
                           '"invalid name"
                           g$stx$10630$CQIRF))))
                    g$ls/false$10632$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10631$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10631$CQIRF '(_ any any)))))
         g$stx$10630$CQIRF))))
   (g$trace-let/rec-syntax$9882$CQIRF
     g$trace-let/rec-syntax$13423$CQIRF
     (case-lambda
       ((g$who$10635$CQIRF)
        (case-lambda
          ((g$stx$10636$CQIRF)
           ((case-lambda
              ((g$t$10637$CQIRF)
               ((case-lambda
                  ((g$ls/false$10638$CQIRF)
                   (if g$ls/false$10638$CQIRF
                     (apply
                       (case-lambda
                         ((g$lhs*$10639$CQIRF
                            g$rhs*$10640$CQIRF
                            g$b$10641$CQIRF
                            g$b*$10642$CQIRF)
                          (if (g$valid-bound-ids?$9552$CQIRF g$lhs*$10639$CQIRF)
                            ((case-lambda
                               ((g$rhs*$10643$CQIRF)
                                (g$bless$9873$CQIRF
                                  (cons
                                    g$who$10635$CQIRF
                                    (cons
                                      (g$map$5946$CQIRF
                                        list
                                        g$lhs*$10639$CQIRF
                                        g$rhs*$10643$CQIRF)
                                      (cons
                                        g$b$10641$CQIRF
                                        g$b*$10642$CQIRF))))))
                             (g$map$5946$CQIRF
                               (case-lambda
                                 ((g$lhs$10644$CQIRF g$rhs$10645$CQIRF)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$10644$CQIRF)
                                    g$rhs$10645$CQIRF)))
                               g$lhs*$10639$CQIRF
                               g$rhs*$10640$CQIRF))
                            (g$invalid-fmls-error$9875$CQIRF
                              g$stx$10636$CQIRF
                              g$lhs*$10639$CQIRF))))
                       g$ls/false$10638$CQIRF)
                     (g$syntax-violation$10028$CQIRF
                       '#f
                       '"invalid syntax"
                       g$t$10637$CQIRF))))
                (g$syntax-dispatch$9910$CQIRF
                  g$t$10637$CQIRF
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$10636$CQIRF))))))
   (g$trace-let-syntax-macro$9883$CQIRF
     g$trace-let-syntax-macro$13424$CQIRF
     (g$trace-let/rec-syntax$9882$CQIRF 'let-syntax))
   (g$trace-letrec-syntax-macro$9884$CQIRF
     g$trace-letrec-syntax-macro$13425$CQIRF
     (g$trace-let/rec-syntax$9882$CQIRF 'letrec-syntax))
   (g$guard-macro$9885$CQIRF
     g$guard-macro$13426$CQIRF
     (case-lambda
       ((g$x$10646$CQIRF)
        (letrec* ((g$gen-clauses$10647$CQIRF
                    (case-lambda
                      ((g$con$10659$CQIRF
                         g$outerk$10660$CQIRF
                         g$clause*$10661$CQIRF)
                       (letrec* ((g$f$10662$CQIRF
                                   (case-lambda
                                     ((g$x$10690$CQIRF g$k$10691$CQIRF)
                                      ((case-lambda
                                         ((g$t$10692$CQIRF)
                                          ((case-lambda
                                             ((g$ls/false$10693$CQIRF)
                                              (if g$ls/false$10693$CQIRF
                                                (apply
                                                  (case-lambda
                                                    ((g$e$10694$CQIRF
                                                       g$p$10695$CQIRF)
                                                     ((case-lambda
                                                        ((g$t$10696$CQIRF)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$10696$CQIRF
                                                               g$e$10694$CQIRF))
                                                           (list
                                                             'if
                                                             g$t$10696$CQIRF
                                                             (list
                                                               g$p$10695$CQIRF
                                                               g$t$10696$CQIRF)
                                                             g$k$10691$CQIRF))))
                                                      (gensym))))
                                                  g$ls/false$10693$CQIRF)
                                                ((case-lambda
                                                   ((g$t$10697$CQIRF)
                                                    ((case-lambda
                                                       ((g$ls/false$10698$CQIRF)
                                                        (if g$ls/false$10698$CQIRF
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$10699$CQIRF)
                                                               ((case-lambda
                                                                  ((g$t$10700$CQIRF)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$10700$CQIRF
                                                                         g$e$10699$CQIRF))
                                                                     (list
                                                                       'if
                                                                       g$t$10700$CQIRF
                                                                       g$t$10700$CQIRF
                                                                       g$k$10691$CQIRF))))
                                                                (gensym))))
                                                            g$ls/false$10698$CQIRF)
                                                          ((case-lambda
                                                             ((g$t$10701$CQIRF)
                                                              ((case-lambda
                                                                 ((g$ls/false$10702$CQIRF)
                                                                  (if g$ls/false$10702$CQIRF
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$10703$CQIRF
                                                                           g$v$10704$CQIRF
                                                                           g$v*$10705$CQIRF)
                                                                         (list
                                                                           'if
                                                                           g$e$10703$CQIRF
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$10704$CQIRF
                                                                               g$v*$10705$CQIRF))
                                                                           g$k$10691$CQIRF)))
                                                                      g$ls/false$10702$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$t$10706$CQIRF)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10707$CQIRF)
                                                                            (if g$ls/false$10707$CQIRF
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$10028$CQIRF
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$10690$CQIRF)))
                                                                                g$ls/false$10707$CQIRF)
                                                                              (g$syntax-violation$10028$CQIRF
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$10706$CQIRF))))
                                                                         (g$syntax-dispatch$9910$CQIRF
                                                                           g$t$10706$CQIRF
                                                                           '_))))
                                                                     g$t$10701$CQIRF))))
                                                               (g$syntax-dispatch$9910$CQIRF
                                                                 g$t$10701$CQIRF
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$10697$CQIRF))))
                                                     (g$syntax-dispatch$9910$CQIRF
                                                       g$t$10697$CQIRF
                                                       '(any)))))
                                                 g$t$10692$CQIRF))))
                                           (g$syntax-dispatch$9910$CQIRF
                                             g$t$10692$CQIRF
                                             '(any #(scheme-id =>) any)))))
                                       g$x$10690$CQIRF))))
                                 (g$f*$10663$CQIRF
                                   (case-lambda
                                     ((g$x*$10670$CQIRF)
                                      ((case-lambda
                                         ((g$t$10671$CQIRF)
                                          ((case-lambda
                                             ((g$ls/false$10672$CQIRF)
                                              (if g$ls/false$10672$CQIRF
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$10659$CQIRF)
                                                       '#t)))
                                                  g$ls/false$10672$CQIRF)
                                                ((case-lambda
                                                   ((g$t$10673$CQIRF)
                                                    ((case-lambda
                                                       ((g$ls/false$10674$CQIRF)
                                                        (if g$ls/false$10674$CQIRF
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$10675$CQIRF
                                                                 g$e*$10676$CQIRF)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$10675$CQIRF
                                                                     g$e*$10676$CQIRF))
                                                                 '#f)))
                                                            g$ls/false$10674$CQIRF)
                                                          ((case-lambda
                                                             ((g$t$10677$CQIRF)
                                                              ((case-lambda
                                                                 ((g$ls/false$10678$CQIRF)
                                                                  (if g$ls/false$10678$CQIRF
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$10679$CQIRF
                                                                           g$cls*$10680$CQIRF)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$10663$CQIRF
                                                                                g$cls*$10680$CQIRF)))
                                                                           (case-lambda
                                                                             ((g$e$10683$CQIRF
                                                                                g$g$10684$CQIRF)
                                                                              ((case-lambda
                                                                                 ((g$g$10685$CQIRF
                                                                                    g$e$10686$CQIRF)
                                                                                  (values
                                                                                    (g$f$10662$CQIRF
                                                                                      g$cls$10679$CQIRF
                                                                                      g$e$10686$CQIRF)
                                                                                    g$g$10685$CQIRF)))
                                                                               g$g$10684$CQIRF
                                                                               g$e$10683$CQIRF))))))
                                                                      g$ls/false$10678$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$t$10687$CQIRF)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10688$CQIRF)
                                                                            (if g$ls/false$10688$CQIRF
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$10689$CQIRF)
                                                                                   (g$syntax-violation$10028$CQIRF
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$10689$CQIRF)))
                                                                                g$ls/false$10688$CQIRF)
                                                                              (g$syntax-violation$10028$CQIRF
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$10687$CQIRF))))
                                                                         (g$syntax-dispatch$9910$CQIRF
                                                                           g$t$10687$CQIRF
                                                                           'any))))
                                                                     g$t$10677$CQIRF))))
                                                               (g$syntax-dispatch$9910$CQIRF
                                                                 g$t$10677$CQIRF
                                                                 '(any .
                                                                       any)))))
                                                           g$t$10673$CQIRF))))
                                                     (g$syntax-dispatch$9910$CQIRF
                                                       g$t$10673$CQIRF
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$10671$CQIRF))))
                                           (g$syntax-dispatch$9910$CQIRF
                                             g$t$10671$CQIRF
                                             '()))))
                                       g$x*$10670$CQIRF)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$10663$CQIRF g$clause*$10661$CQIRF)))
                           (case-lambda
                             ((g$code$10666$CQIRF g$raisek$10667$CQIRF)
                              ((case-lambda
                                 ((g$raisek$10668$CQIRF g$code$10669$CQIRF)
                                  (if g$raisek$10668$CQIRF
                                    (list
                                      g$outerk$10660$CQIRF
                                      g$code$10669$CQIRF)
                                    g$code$10669$CQIRF)))
                               g$raisek$10667$CQIRF
                               g$code$10666$CQIRF)))))))))
          ((case-lambda
             ((g$t$10648$CQIRF)
              ((case-lambda
                 ((g$ls/false$10649$CQIRF)
                  (if (if g$ls/false$10649$CQIRF
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$10650$CQIRF
                                 g$clause*$10651$CQIRF
                                 g$b$10652$CQIRF
                                 g$b*$10653$CQIRF)
                               (g$id?$9547$CQIRF g$con$10650$CQIRF)))
                            g$ls/false$10649$CQIRF))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$10654$CQIRF
                           g$clause*$10655$CQIRF
                           g$b$10656$CQIRF
                           g$b*$10657$CQIRF)
                         ((case-lambda
                            ((g$outerk$10658$CQIRF)
                             (g$bless$9873$CQIRF
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$10658$CQIRF)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$10654$CQIRF)
                                           (g$gen-clauses$10647$CQIRF
                                             g$con$10654$CQIRF
                                             g$outerk$10658$CQIRF
                                             g$clause*$10655$CQIRF))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$10656$CQIRF
                                                 g$b*$10657$CQIRF))))))))))))
                          (gensym))))
                      g$ls/false$10649$CQIRF)
                    (g$syntax-violation$10028$CQIRF
                      '#f
                      '"invalid syntax"
                      g$t$10648$CQIRF))))
               (g$syntax-dispatch$9910$CQIRF
                 g$t$10648$CQIRF
                 '(_ (any . each-any) any . each-any)))))
           g$x$10646$CQIRF)))))
   (g$define-enumeration-macro$9886$CQIRF
     g$define-enumeration-macro$13427$CQIRF
     (case-lambda
       ((g$stx$10708$CQIRF)
        (letrec* ((g$set?$10709$CQIRF
                    (case-lambda
                      ((g$x$10722$CQIRF)
                       ((case-lambda
                          ((g$t$10723$CQIRF)
                           (if g$t$10723$CQIRF
                             g$t$10723$CQIRF
                             (begin
                               '#f
                               (if (not (g$memq$5938$CQIRF
                                          (car g$x$10722$CQIRF)
                                          (cdr g$x$10722$CQIRF)))
                                 (begin
                                   '#f
                                   (g$set?$10709$CQIRF (cdr g$x$10722$CQIRF)))
                                 '#f)))))
                        (null? g$x$10722$CQIRF)))))
                  (g$remove-dups$10710$CQIRF
                    (case-lambda
                      ((g$ls$10721$CQIRF)
                       (if (null? g$ls$10721$CQIRF)
                         '()
                         (cons
                           (car g$ls$10721$CQIRF)
                           (g$remove-dups$10710$CQIRF
                             (g$remq$5953$CQIRF
                               (car g$ls$10721$CQIRF)
                               (cdr g$ls$10721$CQIRF)))))))))
          ((case-lambda
             ((g$t$10711$CQIRF)
              ((case-lambda
                 ((g$ls/false$10712$CQIRF)
                  (if (if g$ls/false$10712$CQIRF
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$10713$CQIRF
                                 g$id*$10714$CQIRF
                                 g$maker$10715$CQIRF)
                               (if (g$id?$9547$CQIRF g$name$10713$CQIRF)
                                 (if (g$id?$9547$CQIRF g$maker$10715$CQIRF)
                                   (begin
                                     '#f
                                     (g$for-all$5944$CQIRF
                                       g$id?$9547$CQIRF
                                       g$id*$10714$CQIRF))
                                   '#f)
                                 '#f)))
                            g$ls/false$10712$CQIRF))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$10716$CQIRF
                           g$id*$10717$CQIRF
                           g$maker$10718$CQIRF)
                         ((case-lambda
                            ((g$name*$10719$CQIRF g$mk$10720$CQIRF)
                             (g$bless$9873$CQIRF
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$10720$CQIRF
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$10719$CQIRF))))
                                 (list
                                   'define-syntax
                                   g$name$10716$CQIRF
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$10719$CQIRF))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$10716$CQIRF)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$10718$CQIRF
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$10718$CQIRF)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$10719$CQIRF))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$10718$CQIRF)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$10720$CQIRF
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$10710$CQIRF
                            (g$syntax->datum$10031$CQIRF g$id*$10717$CQIRF))
                          (gensym))))
                      g$ls/false$10712$CQIRF)
                    (g$syntax-violation$10028$CQIRF
                      '#f
                      '"invalid syntax"
                      g$t$10711$CQIRF))))
               (g$syntax-dispatch$9910$CQIRF
                 g$t$10711$CQIRF
                 '(_ any each-any any)))))
           g$stx$10708$CQIRF)))))
   (g$time-macro$9887$CQIRF
     g$time-macro$13428$CQIRF
     (case-lambda
       ((g$stx$10724$CQIRF)
        ((case-lambda
           ((g$t$10725$CQIRF)
            ((case-lambda
               ((g$ls/false$10726$CQIRF)
                (if g$ls/false$10726$CQIRF
                  (apply
                    (case-lambda
                      ((g$expr$10727$CQIRF)
                       ((case-lambda
                          ((g$str$10728$CQIRF)
                           (g$bless$9873$CQIRF
                             (list
                               'time-it
                               g$str$10728$CQIRF
                               (list 'lambda '() g$expr$10727$CQIRF)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$8051$CQIRF)))
                          (case-lambda
                            ((g$p$10731$CQIRF g$e$10732$CQIRF)
                             ((case-lambda
                                ((g$e$10733$CQIRF g$p$10734$CQIRF)
                                 (begin
                                   (write
                                     (g$syntax->datum$10031$CQIRF
                                       g$expr$10727$CQIRF)
                                     g$p$10734$CQIRF)
                                   (g$e$10733$CQIRF))))
                              g$e$10732$CQIRF
                              g$p$10731$CQIRF)))))))
                    g$ls/false$10726$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10725$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10725$CQIRF '(_ any)))))
         g$stx$10724$CQIRF))))
   (g$delay-macro$9888$CQIRF
     g$delay-macro$13429$CQIRF
     (case-lambda
       ((g$stx$10735$CQIRF)
        ((case-lambda
           ((g$t$10736$CQIRF)
            ((case-lambda
               ((g$ls/false$10737$CQIRF)
                (if g$ls/false$10737$CQIRF
                  (apply
                    (case-lambda
                      ((g$expr$10738$CQIRF)
                       (g$bless$9873$CQIRF
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$10738$CQIRF)))))
                    g$ls/false$10737$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10736$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10736$CQIRF '(_ any)))))
         g$stx$10735$CQIRF))))
   (g$assert-macro$9889$CQIRF
     g$assert-macro$13430$CQIRF
     (case-lambda
       ((g$stx$10739$CQIRF)
        ((case-lambda
           ((g$t$10740$CQIRF)
            ((case-lambda
               ((g$ls/false$10741$CQIRF)
                (if g$ls/false$10741$CQIRF
                  (apply
                    (case-lambda
                      ((g$expr$10742$CQIRF)
                       ((case-lambda
                          ((g$pos$10743$CQIRF)
                           (g$bless$9873$CQIRF
                             (list
                               'unless
                               g$expr$10742$CQIRF
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$10742$CQIRF)
                                 (list 'quote g$pos$10743$CQIRF))))))
                        ((case-lambda
                           ((g$t$10744$CQIRF)
                            (if g$t$10744$CQIRF
                              g$t$10744$CQIRF
                              (begin
                                '#f
                                (g$expression-position$10023$CQIRF
                                  g$expr$10742$CQIRF)))))
                         (g$expression-position$10023$CQIRF
                           g$stx$10739$CQIRF)))))
                    g$ls/false$10741$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10740$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10740$CQIRF '(_ any)))))
         g$stx$10739$CQIRF))))
   (g$endianness-macro$9890$CQIRF
     g$endianness-macro$13431$CQIRF
     (case-lambda
       ((g$stx$10745$CQIRF)
        ((case-lambda
           ((g$t$10746$CQIRF)
            ((case-lambda
               ((g$ls/false$10747$CQIRF)
                (if g$ls/false$10747$CQIRF
                  (apply
                    (case-lambda
                      ((g$e$10748$CQIRF)
                       ((case-lambda
                          ((g$t$10749$CQIRF)
                           (if (eqv? g$t$10749$CQIRF 'little)
                             (g$bless$9873$CQIRF ''little)
                             (if (eqv? g$t$10749$CQIRF 'big)
                               (g$bless$9873$CQIRF ''big)
                               (g$syntax-violation$10028$CQIRF
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$10745$CQIRF)))))
                        (g$syntax->datum$10031$CQIRF g$e$10748$CQIRF))))
                    g$ls/false$10747$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10746$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10746$CQIRF '(_ any)))))
         g$stx$10745$CQIRF))))
   (g$identifier-syntax-macro$9891$CQIRF
     g$identifier-syntax-macro$13432$CQIRF
     (case-lambda
       ((g$stx$10750$CQIRF)
        ((case-lambda
           ((g$t$10751$CQIRF)
            ((case-lambda
               ((g$ls/false$10752$CQIRF)
                (if g$ls/false$10752$CQIRF
                  (apply
                    (case-lambda
                      ((g$expr$10753$CQIRF)
                       (g$bless$9873$CQIRF
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$10753$CQIRF))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$10753$CQIRF)
                                   '(#'(e* ...))))))))))
                    g$ls/false$10752$CQIRF)
                  ((case-lambda
                     ((g$t$10754$CQIRF)
                      ((case-lambda
                         ((g$ls/false$10755$CQIRF)
                          (if (if g$ls/false$10755$CQIRF
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$10756$CQIRF
                                         g$expr1$10757$CQIRF
                                         g$id2$10758$CQIRF
                                         g$expr2$10759$CQIRF
                                         g$expr3$10760$CQIRF)
                                       (if (g$id?$9547$CQIRF g$id1$10756$CQIRF)
                                         (if (g$id?$9547$CQIRF
                                               g$id2$10758$CQIRF)
                                           (begin
                                             '#f
                                             (g$id?$9547$CQIRF
                                               g$expr2$10759$CQIRF))
                                           '#f)
                                         '#f)))
                                    g$ls/false$10755$CQIRF))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$10761$CQIRF
                                   g$expr1$10762$CQIRF
                                   g$id2$10763$CQIRF
                                   g$expr2$10764$CQIRF
                                   g$expr3$10765$CQIRF)
                                 (g$bless$9873$CQIRF
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$10762$CQIRF))
                                         (list
                                           (list 'set! 'id g$expr2$10764$CQIRF)
                                           (list 'syntax g$expr3$10765$CQIRF))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$10762$CQIRF
                                               '(e* ...))))))))))
                              g$ls/false$10755$CQIRF)
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"invalid syntax"
                              g$t$10754$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$10754$CQIRF
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$10751$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10751$CQIRF '(_ any)))))
         g$stx$10750$CQIRF))))
   (g$do-macro$9892$CQIRF
     g$do-macro$13433$CQIRF
     (case-lambda
       ((g$stx$10766$CQIRF)
        (letrec* ((g$bind$10767$CQIRF
                    (case-lambda
                      ((g$x$10779$CQIRF)
                       ((case-lambda
                          ((g$t$10780$CQIRF)
                           ((case-lambda
                              ((g$ls/false$10781$CQIRF)
                               (if g$ls/false$10781$CQIRF
                                 (apply
                                   (case-lambda
                                     ((g$x$10782$CQIRF g$init$10783$CQIRF)
                                      (list
                                        g$x$10782$CQIRF
                                        g$init$10783$CQIRF
                                        g$x$10782$CQIRF)))
                                   g$ls/false$10781$CQIRF)
                                 ((case-lambda
                                    ((g$t$10784$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$10785$CQIRF)
                                         (if g$ls/false$10785$CQIRF
                                           (apply
                                             (case-lambda
                                               ((g$x$10786$CQIRF
                                                  g$init$10787$CQIRF
                                                  g$step$10788$CQIRF)
                                                (list
                                                  g$x$10786$CQIRF
                                                  g$init$10787$CQIRF
                                                  g$step$10788$CQIRF)))
                                             g$ls/false$10785$CQIRF)
                                           ((case-lambda
                                              ((g$t$10789$CQIRF)
                                               ((case-lambda
                                                  ((g$ls/false$10790$CQIRF)
                                                   (if g$ls/false$10790$CQIRF
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$10028$CQIRF
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$10766$CQIRF)))
                                                       g$ls/false$10790$CQIRF)
                                                     (g$syntax-violation$10028$CQIRF
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$10789$CQIRF))))
                                                (g$syntax-dispatch$9910$CQIRF
                                                  g$t$10789$CQIRF
                                                  '_))))
                                            g$t$10784$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$10784$CQIRF
                                        '(any any any)))))
                                  g$t$10780$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$10780$CQIRF
                              '(any any)))))
                        g$x$10779$CQIRF)))))
          ((case-lambda
             ((g$t$10768$CQIRF)
              ((case-lambda
                 ((g$ls/false$10769$CQIRF)
                  (if g$ls/false$10769$CQIRF
                    (apply
                      (case-lambda
                        ((g$binding*$10770$CQIRF
                           g$test$10771$CQIRF
                           g$expr*$10772$CQIRF
                           g$command*$10773$CQIRF)
                         ((case-lambda
                            ((g$t$10774$CQIRF)
                             ((case-lambda
                                ((g$ls/false$10775$CQIRF)
                                 (if g$ls/false$10775$CQIRF
                                   (apply
                                     (case-lambda
                                       ((g$x*$10776$CQIRF
                                          g$init*$10777$CQIRF
                                          g$step*$10778$CQIRF)
                                        (if (g$valid-bound-ids?$9552$CQIRF
                                              g$x*$10776$CQIRF)
                                          (g$bless$9873$CQIRF
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$10776$CQIRF
                                                    (list
                                                      'if
                                                      g$test$10771$CQIRF
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$10772$CQIRF))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$10773$CQIRF
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$10778$CQIRF))))))))
                                              (cons 'loop g$init*$10777$CQIRF)))
                                          (g$syntax-violation$10028$CQIRF
                                            '#f
                                            '"invalid bindings"
                                            g$stx$10766$CQIRF))))
                                     g$ls/false$10775$CQIRF)
                                   (g$syntax-violation$10028$CQIRF
                                     '#f
                                     '"invalid syntax"
                                     g$t$10774$CQIRF))))
                              (g$syntax-dispatch$9910$CQIRF
                                g$t$10774$CQIRF
                                '#(each (any any any))))))
                          (g$map$5946$CQIRF
                            g$bind$10767$CQIRF
                            g$binding*$10770$CQIRF))))
                      g$ls/false$10769$CQIRF)
                    (g$syntax-violation$10028$CQIRF
                      '#f
                      '"invalid syntax"
                      g$t$10768$CQIRF))))
               (g$syntax-dispatch$9910$CQIRF
                 g$t$10768$CQIRF
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$10766$CQIRF)))))
   (g$let*-macro$9893$CQIRF
     g$let*-macro$13434$CQIRF
     (case-lambda
       ((g$stx$10791$CQIRF)
        ((case-lambda
           ((g$t$10792$CQIRF)
            ((case-lambda
               ((g$ls/false$10793$CQIRF)
                (if (if g$ls/false$10793$CQIRF
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$10794$CQIRF
                               g$rhs*$10795$CQIRF
                               g$b$10796$CQIRF
                               g$b*$10797$CQIRF)
                             (g$for-all$5944$CQIRF
                               g$id?$9547$CQIRF
                               g$lhs*$10794$CQIRF)))
                          g$ls/false$10793$CQIRF))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$10798$CQIRF
                         g$rhs*$10799$CQIRF
                         g$b$10800$CQIRF
                         g$b*$10801$CQIRF)
                       (g$bless$9873$CQIRF
                         ((letrec ((g$f$10802$CQIRF
                                     (case-lambda
                                       ((g$x*$10803$CQIRF)
                                        (if (null? g$x*$10803$CQIRF)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$10800$CQIRF
                                                g$b*$10801$CQIRF)))
                                          (if (null? (cdr g$x*$10803$CQIRF))
                                            (cons
                                              'let
                                              (cons
                                                (list (car g$x*$10803$CQIRF))
                                                (cons
                                                  g$b$10800$CQIRF
                                                  g$b*$10801$CQIRF)))
                                            (list
                                              'let
                                              (list (car g$x*$10803$CQIRF))
                                              (g$f$10802$CQIRF
                                                (cdr g$x*$10803$CQIRF)))))))))
                            g$f$10802$CQIRF)
                          (g$map$5946$CQIRF
                            list
                            g$lhs*$10798$CQIRF
                            g$rhs*$10799$CQIRF)))))
                    g$ls/false$10793$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10792$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10792$CQIRF
               '(_ #(each (any any)) any . each-any)))))
         g$stx$10791$CQIRF))))
   (g$or-macro$9894$CQIRF
     g$or-macro$13435$CQIRF
     (case-lambda
       ((g$stx$10804$CQIRF)
        ((case-lambda
           ((g$t$10805$CQIRF)
            ((case-lambda
               ((g$ls/false$10806$CQIRF)
                (if g$ls/false$10806$CQIRF
                  (apply (case-lambda (() '#f)) g$ls/false$10806$CQIRF)
                  ((case-lambda
                     ((g$t$10807$CQIRF)
                      ((case-lambda
                         ((g$ls/false$10808$CQIRF)
                          (if g$ls/false$10808$CQIRF
                            (apply
                              (case-lambda
                                ((g$e$10809$CQIRF g$e*$10810$CQIRF)
                                 (g$bless$9873$CQIRF
                                   ((letrec ((g$f$10811$CQIRF
                                               (case-lambda
                                                 ((g$e$10812$CQIRF
                                                    g$e*$10813$CQIRF)
                                                  (if (null? g$e*$10813$CQIRF)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$10812$CQIRF)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$10812$CQIRF))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$10811$CQIRF
                                                          (car g$e*$10813$CQIRF)
                                                          (cdr g$e*$10813$CQIRF)))))))))
                                      g$f$10811$CQIRF)
                                    g$e$10809$CQIRF
                                    g$e*$10810$CQIRF))))
                              g$ls/false$10808$CQIRF)
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"invalid syntax"
                              g$t$10807$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$10807$CQIRF
                         '(_ any . each-any)))))
                   g$t$10805$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10805$CQIRF '(_)))))
         g$stx$10804$CQIRF))))
   (g$and-macro$9895$CQIRF
     g$and-macro$13436$CQIRF
     (case-lambda
       ((g$stx$10814$CQIRF)
        ((case-lambda
           ((g$t$10815$CQIRF)
            ((case-lambda
               ((g$ls/false$10816$CQIRF)
                (if g$ls/false$10816$CQIRF
                  (apply (case-lambda (() '#t)) g$ls/false$10816$CQIRF)
                  ((case-lambda
                     ((g$t$10817$CQIRF)
                      ((case-lambda
                         ((g$ls/false$10818$CQIRF)
                          (if g$ls/false$10818$CQIRF
                            (apply
                              (case-lambda
                                ((g$e$10819$CQIRF g$e*$10820$CQIRF)
                                 (g$bless$9873$CQIRF
                                   ((letrec ((g$f$10821$CQIRF
                                               (case-lambda
                                                 ((g$e$10822$CQIRF
                                                    g$e*$10823$CQIRF)
                                                  (if (null? g$e*$10823$CQIRF)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$10822$CQIRF)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$10822$CQIRF
                                                        (cons
                                                          (g$f$10821$CQIRF
                                                            (car g$e*$10823$CQIRF)
                                                            (cdr g$e*$10823$CQIRF))
                                                          '(#f)))))))))
                                      g$f$10821$CQIRF)
                                    g$e$10819$CQIRF
                                    g$e*$10820$CQIRF))))
                              g$ls/false$10818$CQIRF)
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"invalid syntax"
                              g$t$10817$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$10817$CQIRF
                         '(_ any . each-any)))))
                   g$t$10815$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10815$CQIRF '(_)))))
         g$stx$10814$CQIRF))))
   (g$cond-macro$9896$CQIRF
     g$cond-macro$13437$CQIRF
     (case-lambda
       ((g$stx$10824$CQIRF)
        ((case-lambda
           ((g$t$10825$CQIRF)
            ((case-lambda
               ((g$ls/false$10826$CQIRF)
                (if g$ls/false$10826$CQIRF
                  (apply
                    (case-lambda
                      ((g$cls$10827$CQIRF g$cls*$10828$CQIRF)
                       (g$bless$9873$CQIRF
                         ((letrec ((g$f$10829$CQIRF
                                     (case-lambda
                                       ((g$cls$10830$CQIRF g$cls*$10831$CQIRF)
                                        (if (null? g$cls*$10831$CQIRF)
                                          ((case-lambda
                                             ((g$t$10832$CQIRF)
                                              ((case-lambda
                                                 ((g$ls/false$10833$CQIRF)
                                                  (if g$ls/false$10833$CQIRF
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$10834$CQIRF
                                                           g$e*$10835$CQIRF)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$10834$CQIRF
                                                             g$e*$10835$CQIRF))))
                                                      g$ls/false$10833$CQIRF)
                                                    ((case-lambda
                                                       ((g$t$10836$CQIRF)
                                                        ((case-lambda
                                                           ((g$ls/false$10837$CQIRF)
                                                            (if g$ls/false$10837$CQIRF
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$10838$CQIRF
                                                                     g$p$10839$CQIRF)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$10838$CQIRF))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$10839$CQIRF
                                                                         '(t))))))
                                                                g$ls/false$10837$CQIRF)
                                                              ((case-lambda
                                                                 ((g$t$10840$CQIRF)
                                                                  ((case-lambda
                                                                     ((g$ls/false$10841$CQIRF)
                                                                      (if g$ls/false$10841$CQIRF
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$10842$CQIRF)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$10842$CQIRF
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$10841$CQIRF)
                                                                        ((case-lambda
                                                                           ((g$t$10843$CQIRF)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10844$CQIRF)
                                                                                (if g$ls/false$10844$CQIRF
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$10845$CQIRF
                                                                                         g$e*$10846$CQIRF)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$10845$CQIRF
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$10846$CQIRF))))
                                                                                    g$ls/false$10844$CQIRF)
                                                                                  ((case-lambda
                                                                                     ((g$t$10847$CQIRF)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10848$CQIRF)
                                                                                          (if g$ls/false$10848$CQIRF
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$10028$CQIRF
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$10824$CQIRF)))
                                                                                              g$ls/false$10848$CQIRF)
                                                                                            (g$syntax-violation$10028$CQIRF
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10847$CQIRF))))
                                                                                       (g$syntax-dispatch$9910$CQIRF
                                                                                         g$t$10847$CQIRF
                                                                                         '_))))
                                                                                   g$t$10843$CQIRF))))
                                                                             (g$syntax-dispatch$9910$CQIRF
                                                                               g$t$10843$CQIRF
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$10840$CQIRF))))
                                                                   (g$syntax-dispatch$9910$CQIRF
                                                                     g$t$10840$CQIRF
                                                                     '(any)))))
                                                               g$t$10836$CQIRF))))
                                                         (g$syntax-dispatch$9910$CQIRF
                                                           g$t$10836$CQIRF
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$10832$CQIRF))))
                                               (g$syntax-dispatch$9910$CQIRF
                                                 g$t$10832$CQIRF
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$10830$CQIRF)
                                          ((case-lambda
                                             ((g$t$10849$CQIRF)
                                              ((case-lambda
                                                 ((g$ls/false$10850$CQIRF)
                                                  (if g$ls/false$10850$CQIRF
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$10851$CQIRF
                                                           g$e*$10852$CQIRF)
                                                         (g$syntax-violation$10028$CQIRF
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$10824$CQIRF)))
                                                      g$ls/false$10850$CQIRF)
                                                    ((case-lambda
                                                       ((g$t$10853$CQIRF)
                                                        ((case-lambda
                                                           ((g$ls/false$10854$CQIRF)
                                                            (if g$ls/false$10854$CQIRF
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$10855$CQIRF
                                                                     g$p$10856$CQIRF)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$10855$CQIRF))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$10856$CQIRF
                                                                         '(t))
                                                                       (g$f$10829$CQIRF
                                                                         (car g$cls*$10831$CQIRF)
                                                                         (cdr g$cls*$10831$CQIRF))))))
                                                                g$ls/false$10854$CQIRF)
                                                              ((case-lambda
                                                                 ((g$t$10857$CQIRF)
                                                                  ((case-lambda
                                                                     ((g$ls/false$10858$CQIRF)
                                                                      (if g$ls/false$10858$CQIRF
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$10859$CQIRF)
                                                                             (list
                                                                               'or
                                                                               g$e$10859$CQIRF
                                                                               (g$f$10829$CQIRF
                                                                                 (car g$cls*$10831$CQIRF)
                                                                                 (cdr g$cls*$10831$CQIRF)))))
                                                                          g$ls/false$10858$CQIRF)
                                                                        ((case-lambda
                                                                           ((g$t$10860$CQIRF)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10861$CQIRF)
                                                                                (if g$ls/false$10861$CQIRF
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$10862$CQIRF
                                                                                         g$e*$10863$CQIRF)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$10862$CQIRF
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$10863$CQIRF)
                                                                                         (g$f$10829$CQIRF
                                                                                           (car g$cls*$10831$CQIRF)
                                                                                           (cdr g$cls*$10831$CQIRF)))))
                                                                                    g$ls/false$10861$CQIRF)
                                                                                  ((case-lambda
                                                                                     ((g$t$10864$CQIRF)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10865$CQIRF)
                                                                                          (if g$ls/false$10865$CQIRF
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$10028$CQIRF
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$10824$CQIRF)))
                                                                                              g$ls/false$10865$CQIRF)
                                                                                            (g$syntax-violation$10028$CQIRF
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10864$CQIRF))))
                                                                                       (g$syntax-dispatch$9910$CQIRF
                                                                                         g$t$10864$CQIRF
                                                                                         '_))))
                                                                                   g$t$10860$CQIRF))))
                                                                             (g$syntax-dispatch$9910$CQIRF
                                                                               g$t$10860$CQIRF
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$10857$CQIRF))))
                                                                   (g$syntax-dispatch$9910$CQIRF
                                                                     g$t$10857$CQIRF
                                                                     '(any)))))
                                                               g$t$10853$CQIRF))))
                                                         (g$syntax-dispatch$9910$CQIRF
                                                           g$t$10853$CQIRF
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$10849$CQIRF))))
                                               (g$syntax-dispatch$9910$CQIRF
                                                 g$t$10849$CQIRF
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$10830$CQIRF))))))
                            g$f$10829$CQIRF)
                          g$cls$10827$CQIRF
                          g$cls*$10828$CQIRF))))
                    g$ls/false$10826$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10825$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10825$CQIRF
               '(_ any . each-any)))))
         g$stx$10824$CQIRF))))
   (g$do-include$9897$CQIRF
     g$do-include$13438$CQIRF
     (case-lambda
       ((g$stx$10866$CQIRF g$id$10867$CQIRF g$filename$10868$CQIRF)
        ((case-lambda
           ((g$filename$10869$CQIRF)
            (begin
              (if (not (if (string? g$filename$10869$CQIRF)
                         (begin '#f (g$id?$9547$CQIRF g$id$10867$CQIRF))
                         '#f))
                (g$syntax-violation$10028$CQIRF
                  '#f
                  '"invalid syntax"
                  g$stx$10866$CQIRF)
                (void))
              (cons
                (g$bless$9873$CQIRF 'begin)
                (g$with-input-from-file$8110$CQIRF
                  g$filename$10869$CQIRF
                  (case-lambda
                    (()
                     ((letrec ((g$f$10870$CQIRF
                                 (case-lambda
                                   ((g$ls$10871$CQIRF)
                                    ((case-lambda
                                       ((g$x$10872$CQIRF)
                                        (if (eof-object? g$x$10872$CQIRF)
                                          (g$reverse$6624$CQIRF
                                            g$ls$10871$CQIRF)
                                          (g$f$10870$CQIRF
                                            (cons
                                              (g$datum->stx$9530$CQIRF
                                                g$id$10867$CQIRF
                                                g$x$10872$CQIRF)
                                              g$ls$10871$CQIRF)))))
                                     (read-annotated))))))
                        g$f$10870$CQIRF)
                      '()))))))))
         (g$stx->datum$9558$CQIRF g$filename$10868$CQIRF)))))
   (g$include-macro$9898$CQIRF
     g$include-macro$13439$CQIRF
     (case-lambda
       ((g$e$10873$CQIRF)
        ((case-lambda
           ((g$t$10874$CQIRF)
            ((case-lambda
               ((g$ls/false$10875$CQIRF)
                (if g$ls/false$10875$CQIRF
                  (apply
                    (case-lambda
                      ((g$id$10876$CQIRF g$filename$10877$CQIRF)
                       (g$do-include$9897$CQIRF
                         g$e$10873$CQIRF
                         g$id$10876$CQIRF
                         g$filename$10877$CQIRF)))
                    g$ls/false$10875$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10874$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10874$CQIRF '(any any)))))
         g$e$10873$CQIRF))))
   (g$include-into-macro$9899$CQIRF
     g$include-into-macro$13440$CQIRF
     (case-lambda
       ((g$e$10878$CQIRF)
        ((case-lambda
           ((g$t$10879$CQIRF)
            ((case-lambda
               ((g$ls/false$10880$CQIRF)
                (if g$ls/false$10880$CQIRF
                  (apply
                    (case-lambda
                      ((g$id$10881$CQIRF g$filename$10882$CQIRF)
                       (g$do-include$9897$CQIRF
                         g$e$10878$CQIRF
                         g$id$10881$CQIRF
                         g$filename$10882$CQIRF)))
                    g$ls/false$10880$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10879$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$10879$CQIRF '(_ any any)))))
         g$e$10878$CQIRF))))
   (g$syntax-rules-macro$9900$CQIRF
     g$syntax-rules-macro$13441$CQIRF
     (case-lambda
       ((g$e$10883$CQIRF)
        ((case-lambda
           ((g$t$10884$CQIRF)
            ((case-lambda
               ((g$ls/false$10885$CQIRF)
                (if g$ls/false$10885$CQIRF
                  (apply
                    (case-lambda
                      ((g$lits$10886$CQIRF
                         g$pat*$10887$CQIRF
                         g$tmp*$10888$CQIRF)
                       (begin
                         (g$verify-literals$9913$CQIRF
                           g$lits$10886$CQIRF
                           g$e$10883$CQIRF)
                         (g$bless$9873$CQIRF
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$10886$CQIRF
                                   (g$map$5946$CQIRF
                                     (case-lambda
                                       ((g$pat$10889$CQIRF g$tmp$10890$CQIRF)
                                        ((case-lambda
                                           ((g$t$10891$CQIRF)
                                            ((case-lambda
                                               ((g$ls/false$10892$CQIRF)
                                                (if g$ls/false$10892$CQIRF
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$10893$CQIRF)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$10893$CQIRF)
                                                         (list
                                                           'syntax
                                                           g$tmp$10890$CQIRF))))
                                                    g$ls/false$10892$CQIRF)
                                                  ((case-lambda
                                                     ((g$t$10894$CQIRF)
                                                      ((case-lambda
                                                         ((g$ls/false$10895$CQIRF)
                                                          (if g$ls/false$10895$CQIRF
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$10028$CQIRF
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$10883$CQIRF
                                                                   g$pat$10889$CQIRF)))
                                                              g$ls/false$10895$CQIRF)
                                                            (g$syntax-violation$10028$CQIRF
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$10894$CQIRF))))
                                                       (g$syntax-dispatch$9910$CQIRF
                                                         g$t$10894$CQIRF
                                                         '_))))
                                                   g$t$10891$CQIRF))))
                                             (g$syntax-dispatch$9910$CQIRF
                                               g$t$10891$CQIRF
                                               '(_ . any)))))
                                         g$pat$10889$CQIRF)))
                                     g$pat*$10887$CQIRF
                                     g$tmp*$10888$CQIRF)))))))))
                    g$ls/false$10885$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$10884$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$10884$CQIRF
               '(_ each-any . #(each (any any)))))))
         g$e$10883$CQIRF))))
   (g$quasiquote-macro$9901$CQIRF
     g$quasiquote-macro$13442$CQIRF
     ((case-lambda
        (()
         (letrec* ((g$datum$10896$CQIRF
                     (case-lambda
                       ((g$x$11040$CQIRF)
                        (list
                          (g$scheme-stx$9853$CQIRF 'quote)
                          (g$mkstx$9535$CQIRF g$x$11040$CQIRF '() '() '())))))
                   (g$quasicons*$10925$CQIRF
                     (case-lambda
                       ((g$x$11036$CQIRF g$y$11037$CQIRF)
                        ((letrec ((g$f$11038$CQIRF
                                    (case-lambda
                                      ((g$x$11039$CQIRF)
                                       (if (null? g$x$11039$CQIRF)
                                         g$y$11037$CQIRF
                                         (g$quasicons$10926$CQIRF
                                           (car g$x$11039$CQIRF)
                                           (g$f$11038$CQIRF
                                             (cdr g$x$11039$CQIRF))))))))
                           g$f$11038$CQIRF)
                         g$x$11036$CQIRF))))
                   (g$quasicons$10926$CQIRF
                     (case-lambda
                       ((g$x$11017$CQIRF g$y$11018$CQIRF)
                        ((case-lambda
                           ((g$t$11019$CQIRF)
                            ((case-lambda
                               ((g$ls/false$11020$CQIRF)
                                (if g$ls/false$11020$CQIRF
                                  (apply
                                    (case-lambda
                                      ((g$dy$11021$CQIRF)
                                       ((case-lambda
                                          ((g$t$11022$CQIRF)
                                           ((case-lambda
                                              ((g$ls/false$11023$CQIRF)
                                               (if g$ls/false$11023$CQIRF
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$11024$CQIRF)
                                                      (list
                                                        (g$scheme-stx$9853$CQIRF
                                                          'quote)
                                                        (cons
                                                          g$dx$11024$CQIRF
                                                          g$dy$11021$CQIRF))))
                                                   g$ls/false$11023$CQIRF)
                                                 ((case-lambda
                                                    ((g$t$11025$CQIRF)
                                                     ((case-lambda
                                                        ((g$ls/false$11026$CQIRF)
                                                         (if g$ls/false$11026$CQIRF
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$11027$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$ls/false$11028$CQIRF)
                                                                        (if g$ls/false$11028$CQIRF
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$9853$CQIRF
                                                                                   'list)
                                                                                 g$x$11017$CQIRF)))
                                                                            g$ls/false$11028$CQIRF)
                                                                          ((case-lambda
                                                                             ((g$t$11029$CQIRF)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$11030$CQIRF)
                                                                                  (if g$ls/false$11030$CQIRF
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$9853$CQIRF
                                                                                             'cons)
                                                                                           g$x$11017$CQIRF
                                                                                           g$y$11018$CQIRF)))
                                                                                      g$ls/false$11030$CQIRF)
                                                                                    (g$syntax-violation$10028$CQIRF
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$11029$CQIRF))))
                                                                               (g$syntax-dispatch$9910$CQIRF
                                                                                 g$t$11029$CQIRF
                                                                                 '_))))
                                                                           g$t$11027$CQIRF))))
                                                                     (g$syntax-dispatch$9910$CQIRF
                                                                       g$t$11027$CQIRF
                                                                       '()))))
                                                                 g$dy$11021$CQIRF)))
                                                             g$ls/false$11026$CQIRF)
                                                           (g$syntax-violation$10028$CQIRF
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$11025$CQIRF))))
                                                      (g$syntax-dispatch$9910$CQIRF
                                                        g$t$11025$CQIRF
                                                        '_))))
                                                  g$t$11022$CQIRF))))
                                            (g$syntax-dispatch$9910$CQIRF
                                              g$t$11022$CQIRF
                                              '(#(scheme-id quote) any)))))
                                        g$x$11017$CQIRF)))
                                    g$ls/false$11020$CQIRF)
                                  ((case-lambda
                                     ((g$t$11031$CQIRF)
                                      ((case-lambda
                                         ((g$ls/false$11032$CQIRF)
                                          (if g$ls/false$11032$CQIRF
                                            (apply
                                              (case-lambda
                                                ((g$stuff$11033$CQIRF)
                                                 (g$cons*$5948$CQIRF
                                                   (g$scheme-stx$9853$CQIRF
                                                     'list)
                                                   g$x$11017$CQIRF
                                                   g$stuff$11033$CQIRF)))
                                              g$ls/false$11032$CQIRF)
                                            ((case-lambda
                                               ((g$t$11034$CQIRF)
                                                ((case-lambda
                                                   ((g$ls/false$11035$CQIRF)
                                                    (if g$ls/false$11035$CQIRF
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$9853$CQIRF
                                                               'cons)
                                                             g$x$11017$CQIRF
                                                             g$y$11018$CQIRF)))
                                                        g$ls/false$11035$CQIRF)
                                                      (g$syntax-violation$10028$CQIRF
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$11034$CQIRF))))
                                                 (g$syntax-dispatch$9910$CQIRF
                                                   g$t$11034$CQIRF
                                                   '_))))
                                             g$t$11031$CQIRF))))
                                       (g$syntax-dispatch$9910$CQIRF
                                         g$t$11031$CQIRF
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$11019$CQIRF))))
                             (g$syntax-dispatch$9910$CQIRF
                               g$t$11019$CQIRF
                               '(#(scheme-id quote) any)))))
                         g$y$11018$CQIRF))))
                   (g$quasiappend$10927$CQIRF
                     (case-lambda
                       ((g$x$11004$CQIRF g$y$11005$CQIRF)
                        ((case-lambda
                           ((g$ls$11006$CQIRF)
                            (if (null? g$ls$11006$CQIRF)
                              (list (g$scheme-stx$9853$CQIRF 'quote) '())
                              (if (null? (cdr g$ls$11006$CQIRF))
                                (car g$ls$11006$CQIRF)
                                (g$cons*$5948$CQIRF
                                  (g$scheme-stx$9853$CQIRF 'append)
                                  g$ls$11006$CQIRF)))))
                         ((letrec ((g$f$11007$CQIRF
                                     (case-lambda
                                       ((g$x$11008$CQIRF)
                                        (if (null? g$x$11008$CQIRF)
                                          ((case-lambda
                                             ((g$t$11009$CQIRF)
                                              ((case-lambda
                                                 ((g$ls/false$11010$CQIRF)
                                                  (if g$ls/false$11010$CQIRF
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$11010$CQIRF)
                                                    ((case-lambda
                                                       ((g$t$11011$CQIRF)
                                                        ((case-lambda
                                                           ((g$ls/false$11012$CQIRF)
                                                            (if g$ls/false$11012$CQIRF
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$11005$CQIRF)))
                                                                g$ls/false$11012$CQIRF)
                                                              (g$syntax-violation$10028$CQIRF
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$11011$CQIRF))))
                                                         (g$syntax-dispatch$9910$CQIRF
                                                           g$t$11011$CQIRF
                                                           '_))))
                                                     g$t$11009$CQIRF))))
                                               (g$syntax-dispatch$9910$CQIRF
                                                 g$t$11009$CQIRF
                                                 '(#(scheme-id quote) ())))))
                                           g$y$11005$CQIRF)
                                          ((case-lambda
                                             ((g$t$11013$CQIRF)
                                              ((case-lambda
                                                 ((g$ls/false$11014$CQIRF)
                                                  (if g$ls/false$11014$CQIRF
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$11007$CQIRF
                                                           (cdr g$x$11008$CQIRF))))
                                                      g$ls/false$11014$CQIRF)
                                                    ((case-lambda
                                                       ((g$t$11015$CQIRF)
                                                        ((case-lambda
                                                           ((g$ls/false$11016$CQIRF)
                                                            (if g$ls/false$11016$CQIRF
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$11008$CQIRF)
                                                                     (g$f$11007$CQIRF
                                                                       (cdr g$x$11008$CQIRF)))))
                                                                g$ls/false$11016$CQIRF)
                                                              (g$syntax-violation$10028$CQIRF
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$11015$CQIRF))))
                                                         (g$syntax-dispatch$9910$CQIRF
                                                           g$t$11015$CQIRF
                                                           '_))))
                                                     g$t$11013$CQIRF))))
                                               (g$syntax-dispatch$9910$CQIRF
                                                 g$t$11013$CQIRF
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$11008$CQIRF)))))))
                            g$f$11007$CQIRF)
                          g$x$11004$CQIRF)))))
                   (g$quasivector$10928$CQIRF
                     (case-lambda
                       ((g$x$10979$CQIRF)
                        ((case-lambda
                           ((g$pat-x$10980$CQIRF)
                            ((case-lambda
                               ((g$t$10981$CQIRF)
                                ((case-lambda
                                   ((g$ls/false$10982$CQIRF)
                                    (if g$ls/false$10982$CQIRF
                                      (apply
                                        (case-lambda
                                          ((g$x*$10983$CQIRF)
                                           (list
                                             (g$scheme-stx$9853$CQIRF 'quote)
                                             (g$list->vector$6612$CQIRF
                                               g$x*$10983$CQIRF))))
                                        g$ls/false$10982$CQIRF)
                                      ((case-lambda
                                         ((g$t$10984$CQIRF)
                                          ((case-lambda
                                             ((g$ls/false$10985$CQIRF)
                                              (if g$ls/false$10985$CQIRF
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$10986$CQIRF
                                                                 (case-lambda
                                                                   ((g$x$10987$CQIRF
                                                                      g$k$10988$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$t$10989$CQIRF)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10990$CQIRF)
                                                                            (if g$ls/false$10990$CQIRF
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$10991$CQIRF)
                                                                                   (g$k$10988$CQIRF
                                                                                     (g$map$5946$CQIRF
                                                                                       (case-lambda
                                                                                         ((g$x$10992$CQIRF)
                                                                                          (list
                                                                                            (g$scheme-stx$9853$CQIRF
                                                                                              'quote)
                                                                                            g$x$10992$CQIRF)))
                                                                                       g$x*$10991$CQIRF))))
                                                                                g$ls/false$10990$CQIRF)
                                                                              ((case-lambda
                                                                                 ((g$t$10993$CQIRF)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10994$CQIRF)
                                                                                      (if g$ls/false$10994$CQIRF
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$10995$CQIRF)
                                                                                             (g$k$10988$CQIRF
                                                                                               g$x*$10995$CQIRF)))
                                                                                          g$ls/false$10994$CQIRF)
                                                                                        ((case-lambda
                                                                                           ((g$t$10996$CQIRF)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10997$CQIRF)
                                                                                                (if g$ls/false$10997$CQIRF
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$10998$CQIRF
                                                                                                         g$y$10999$CQIRF)
                                                                                                       (g$f$10986$CQIRF
                                                                                                         g$y$10999$CQIRF
                                                                                                         (case-lambda
                                                                                                           ((g$ls$11000$CQIRF)
                                                                                                            (g$k$10988$CQIRF
                                                                                                              (cons
                                                                                                                g$x$10998$CQIRF
                                                                                                                g$ls$11000$CQIRF)))))))
                                                                                                    g$ls/false$10997$CQIRF)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$11001$CQIRF)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$11002$CQIRF)
                                                                                                          (if g$ls/false$11002$CQIRF
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$9853$CQIRF
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$10980$CQIRF)))
                                                                                                              g$ls/false$11002$CQIRF)
                                                                                                            (g$syntax-violation$10028$CQIRF
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$11001$CQIRF))))
                                                                                                       (g$syntax-dispatch$9910$CQIRF
                                                                                                         g$t$11001$CQIRF
                                                                                                         '_))))
                                                                                                   g$t$10996$CQIRF))))
                                                                                             (g$syntax-dispatch$9910$CQIRF
                                                                                               g$t$10996$CQIRF
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$10993$CQIRF))))
                                                                                   (g$syntax-dispatch$9910$CQIRF
                                                                                     g$t$10993$CQIRF
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$10989$CQIRF))))
                                                                         (g$syntax-dispatch$9910$CQIRF
                                                                           g$t$10989$CQIRF
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$10987$CQIRF)))))
                                                        g$f$10986$CQIRF)
                                                      g$x$10979$CQIRF
                                                      (case-lambda
                                                        ((g$ls$11003$CQIRF)
                                                         (g$cons*$5948$CQIRF
                                                           (g$scheme-stx$9853$CQIRF
                                                             'vector)
                                                           g$ls$11003$CQIRF))))))
                                                  g$ls/false$10985$CQIRF)
                                                (g$syntax-violation$10028$CQIRF
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$10984$CQIRF))))
                                           (g$syntax-dispatch$9910$CQIRF
                                             g$t$10984$CQIRF
                                             '_))))
                                       g$t$10981$CQIRF))))
                                 (g$syntax-dispatch$9910$CQIRF
                                   g$t$10981$CQIRF
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$10980$CQIRF)))
                         g$x$10979$CQIRF))))
                   (g$vquasi$10929$CQIRF
                     (case-lambda
                       ((g$p$10962$CQIRF g$lev$10963$CQIRF)
                        ((case-lambda
                           ((g$t$10964$CQIRF)
                            ((case-lambda
                               ((g$ls/false$10965$CQIRF)
                                (if g$ls/false$10965$CQIRF
                                  (apply
                                    (case-lambda
                                      ((g$p$10966$CQIRF g$q$10967$CQIRF)
                                       ((case-lambda
                                          ((g$t$10968$CQIRF)
                                           ((case-lambda
                                              ((g$ls/false$10969$CQIRF)
                                               (if g$ls/false$10969$CQIRF
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$10970$CQIRF)
                                                      (if (= g$lev$10963$CQIRF
                                                             '0)
                                                        (g$quasicons*$10925$CQIRF
                                                          g$p$10970$CQIRF
                                                          (g$vquasi$10929$CQIRF
                                                            g$q$10967$CQIRF
                                                            g$lev$10963$CQIRF))
                                                        (g$quasicons$10926$CQIRF
                                                          (g$quasicons$10926$CQIRF
                                                            (g$datum$10896$CQIRF
                                                              'unquote)
                                                            (g$quasi$10930$CQIRF
                                                              g$p$10970$CQIRF
                                                              (- g$lev$10963$CQIRF
                                                                 '1)))
                                                          (g$vquasi$10929$CQIRF
                                                            g$q$10967$CQIRF
                                                            g$lev$10963$CQIRF)))))
                                                   g$ls/false$10969$CQIRF)
                                                 ((case-lambda
                                                    ((g$t$10971$CQIRF)
                                                     ((case-lambda
                                                        ((g$ls/false$10972$CQIRF)
                                                         (if g$ls/false$10972$CQIRF
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$10973$CQIRF)
                                                                (if (= g$lev$10963$CQIRF
                                                                       '0)
                                                                  (g$quasiappend$10927$CQIRF
                                                                    g$p$10973$CQIRF
                                                                    (g$vquasi$10929$CQIRF
                                                                      g$q$10967$CQIRF
                                                                      g$lev$10963$CQIRF))
                                                                  (g$quasicons$10926$CQIRF
                                                                    (g$quasicons$10926$CQIRF
                                                                      (g$datum$10896$CQIRF
                                                                        'unquote-splicing)
                                                                      (g$quasi$10930$CQIRF
                                                                        g$p$10973$CQIRF
                                                                        (- g$lev$10963$CQIRF
                                                                           '1)))
                                                                    (g$vquasi$10929$CQIRF
                                                                      g$q$10967$CQIRF
                                                                      g$lev$10963$CQIRF)))))
                                                             g$ls/false$10972$CQIRF)
                                                           ((case-lambda
                                                              ((g$t$10974$CQIRF)
                                                               ((case-lambda
                                                                  ((g$ls/false$10975$CQIRF)
                                                                   (if g$ls/false$10975$CQIRF
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$10976$CQIRF)
                                                                          (g$quasicons$10926$CQIRF
                                                                            (g$quasi$10930$CQIRF
                                                                              g$p$10976$CQIRF
                                                                              g$lev$10963$CQIRF)
                                                                            (g$vquasi$10929$CQIRF
                                                                              g$q$10967$CQIRF
                                                                              g$lev$10963$CQIRF))))
                                                                       g$ls/false$10975$CQIRF)
                                                                     (g$syntax-violation$10028$CQIRF
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$10974$CQIRF))))
                                                                (g$syntax-dispatch$9910$CQIRF
                                                                  g$t$10974$CQIRF
                                                                  'any))))
                                                            g$t$10971$CQIRF))))
                                                      (g$syntax-dispatch$9910$CQIRF
                                                        g$t$10971$CQIRF
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$10968$CQIRF))))
                                            (g$syntax-dispatch$9910$CQIRF
                                              g$t$10968$CQIRF
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$10966$CQIRF)))
                                    g$ls/false$10965$CQIRF)
                                  ((case-lambda
                                     ((g$t$10977$CQIRF)
                                      ((case-lambda
                                         ((g$ls/false$10978$CQIRF)
                                          (if g$ls/false$10978$CQIRF
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$9853$CQIRF
                                                     'quote)
                                                   '())))
                                              g$ls/false$10978$CQIRF)
                                            (g$syntax-violation$10028$CQIRF
                                              '#f
                                              '"invalid syntax"
                                              g$t$10977$CQIRF))))
                                       (g$syntax-dispatch$9910$CQIRF
                                         g$t$10977$CQIRF
                                         '()))))
                                   g$t$10964$CQIRF))))
                             (g$syntax-dispatch$9910$CQIRF
                               g$t$10964$CQIRF
                               '(any . any)))))
                         g$p$10962$CQIRF))))
                   (g$quasi$10930$CQIRF
                     (case-lambda
                       ((g$p$10935$CQIRF g$lev$10936$CQIRF)
                        ((case-lambda
                           ((g$t$10937$CQIRF)
                            ((case-lambda
                               ((g$ls/false$10938$CQIRF)
                                (if g$ls/false$10938$CQIRF
                                  (apply
                                    (case-lambda
                                      ((g$p$10939$CQIRF)
                                       (if (= g$lev$10936$CQIRF '0)
                                         g$p$10939$CQIRF
                                         (g$quasicons$10926$CQIRF
                                           (g$datum$10896$CQIRF 'unquote)
                                           (g$quasi$10930$CQIRF
                                             (list g$p$10939$CQIRF)
                                             (- g$lev$10936$CQIRF '1))))))
                                    g$ls/false$10938$CQIRF)
                                  ((case-lambda
                                     ((g$t$10940$CQIRF)
                                      ((case-lambda
                                         ((g$ls/false$10941$CQIRF)
                                          (if g$ls/false$10941$CQIRF
                                            (apply
                                              (case-lambda
                                                ((g$p$10942$CQIRF
                                                   g$q$10943$CQIRF)
                                                 (if (= g$lev$10936$CQIRF '0)
                                                   (g$quasicons*$10925$CQIRF
                                                     g$p$10942$CQIRF
                                                     (g$quasi$10930$CQIRF
                                                       g$q$10943$CQIRF
                                                       g$lev$10936$CQIRF))
                                                   (g$quasicons$10926$CQIRF
                                                     (g$quasicons$10926$CQIRF
                                                       (g$datum$10896$CQIRF
                                                         'unquote)
                                                       (g$quasi$10930$CQIRF
                                                         g$p$10942$CQIRF
                                                         (- g$lev$10936$CQIRF
                                                            '1)))
                                                     (g$quasi$10930$CQIRF
                                                       g$q$10943$CQIRF
                                                       g$lev$10936$CQIRF)))))
                                              g$ls/false$10941$CQIRF)
                                            ((case-lambda
                                               ((g$t$10944$CQIRF)
                                                ((case-lambda
                                                   ((g$ls/false$10945$CQIRF)
                                                    (if g$ls/false$10945$CQIRF
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$10946$CQIRF
                                                             g$q$10947$CQIRF)
                                                           (if (= g$lev$10936$CQIRF
                                                                  '0)
                                                             (g$quasiappend$10927$CQIRF
                                                               g$p$10946$CQIRF
                                                               (g$quasi$10930$CQIRF
                                                                 g$q$10947$CQIRF
                                                                 g$lev$10936$CQIRF))
                                                             (g$quasicons$10926$CQIRF
                                                               (g$quasicons$10926$CQIRF
                                                                 (g$datum$10896$CQIRF
                                                                   'unquote-splicing)
                                                                 (g$quasi$10930$CQIRF
                                                                   g$p$10946$CQIRF
                                                                   (- g$lev$10936$CQIRF
                                                                      '1)))
                                                               (g$quasi$10930$CQIRF
                                                                 g$q$10947$CQIRF
                                                                 g$lev$10936$CQIRF)))))
                                                        g$ls/false$10945$CQIRF)
                                                      ((case-lambda
                                                         ((g$t$10948$CQIRF)
                                                          ((case-lambda
                                                             ((g$ls/false$10949$CQIRF)
                                                              (if g$ls/false$10949$CQIRF
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$10950$CQIRF)
                                                                     (g$quasicons$10926$CQIRF
                                                                       (g$datum$10896$CQIRF
                                                                         'quasiquote)
                                                                       (g$quasi$10930$CQIRF
                                                                         (list
                                                                           g$p$10950$CQIRF)
                                                                         (+ g$lev$10936$CQIRF
                                                                            '1)))))
                                                                  g$ls/false$10949$CQIRF)
                                                                ((case-lambda
                                                                   ((g$t$10951$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10952$CQIRF)
                                                                        (if g$ls/false$10952$CQIRF
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$10953$CQIRF
                                                                                 g$q$10954$CQIRF)
                                                                               (g$quasicons$10926$CQIRF
                                                                                 (g$quasi$10930$CQIRF
                                                                                   g$p$10953$CQIRF
                                                                                   g$lev$10936$CQIRF)
                                                                                 (g$quasi$10930$CQIRF
                                                                                   g$q$10954$CQIRF
                                                                                   g$lev$10936$CQIRF))))
                                                                            g$ls/false$10952$CQIRF)
                                                                          ((case-lambda
                                                                             ((g$t$10955$CQIRF)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10956$CQIRF)
                                                                                  (if (if g$ls/false$10956$CQIRF
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$10957$CQIRF)
                                                                                               (not (g$stx?$9519$CQIRF
                                                                                                      g$x$10957$CQIRF))))
                                                                                            g$ls/false$10956$CQIRF))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$10958$CQIRF)
                                                                                         (g$quasivector$10928$CQIRF
                                                                                           (g$vquasi$10929$CQIRF
                                                                                             g$x$10958$CQIRF
                                                                                             g$lev$10936$CQIRF))))
                                                                                      g$ls/false$10956$CQIRF)
                                                                                    ((case-lambda
                                                                                       ((g$t$10959$CQIRF)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10960$CQIRF)
                                                                                            (if g$ls/false$10960$CQIRF
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$10961$CQIRF)
                                                                                                   (list
                                                                                                     (g$scheme-stx$9853$CQIRF
                                                                                                       'quote)
                                                                                                     g$p$10961$CQIRF)))
                                                                                                g$ls/false$10960$CQIRF)
                                                                                              (g$syntax-violation$10028$CQIRF
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$10959$CQIRF))))
                                                                                         (g$syntax-dispatch$9910$CQIRF
                                                                                           g$t$10959$CQIRF
                                                                                           'any))))
                                                                                     g$t$10955$CQIRF))))
                                                                               (g$syntax-dispatch$9910$CQIRF
                                                                                 g$t$10955$CQIRF
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$10951$CQIRF))))
                                                                     (g$syntax-dispatch$9910$CQIRF
                                                                       g$t$10951$CQIRF
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$10948$CQIRF))))
                                                           (g$syntax-dispatch$9910$CQIRF
                                                             g$t$10948$CQIRF
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$10944$CQIRF))))
                                                 (g$syntax-dispatch$9910$CQIRF
                                                   g$t$10944$CQIRF
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$10940$CQIRF))))
                                       (g$syntax-dispatch$9910$CQIRF
                                         g$t$10940$CQIRF
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$10937$CQIRF))))
                             (g$syntax-dispatch$9910$CQIRF
                               g$t$10937$CQIRF
                               '(#(scheme-id unquote) any)))))
                         g$p$10935$CQIRF)))))
           (case-lambda
             ((g$x$10931$CQIRF)
              ((case-lambda
                 ((g$t$10932$CQIRF)
                  ((case-lambda
                     ((g$ls/false$10933$CQIRF)
                      (if g$ls/false$10933$CQIRF
                        (apply
                          (case-lambda
                            ((g$e$10934$CQIRF)
                             (g$quasi$10930$CQIRF g$e$10934$CQIRF '0)))
                          g$ls/false$10933$CQIRF)
                        (g$syntax-violation$10028$CQIRF
                          '#f
                          '"invalid syntax"
                          g$t$10932$CQIRF))))
                   (g$syntax-dispatch$9910$CQIRF g$t$10932$CQIRF '(_ any)))))
               g$x$10931$CQIRF))))))))
   (g$quasisyntax-macro$9902$CQIRF
     g$quasisyntax-macro$13443$CQIRF
     ((case-lambda
        (()
         (letrec* ((g$quasi$11041$CQIRF
                     (case-lambda
                       ((g$p$11055$CQIRF g$lev$11056$CQIRF)
                        ((case-lambda
                           ((g$t$11057$CQIRF)
                            ((case-lambda
                               ((g$ls/false$11058$CQIRF)
                                (if g$ls/false$11058$CQIRF
                                  (apply
                                    (case-lambda
                                      ((g$p$11059$CQIRF)
                                       (if (= g$lev$11056$CQIRF '0)
                                         ((case-lambda
                                            ((g$g$11060$CQIRF)
                                             (values
                                               (list g$g$11060$CQIRF)
                                               (list g$p$11059$CQIRF)
                                               g$g$11060$CQIRF)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$11041$CQIRF
                                                g$p$11059$CQIRF
                                                (- g$lev$11056$CQIRF '1))))
                                           (case-lambda
                                             ((g$lhs*$11064$CQIRF
                                                g$rhs*$11065$CQIRF
                                                g$p$11066$CQIRF)
                                              ((case-lambda
                                                 ((g$p$11067$CQIRF
                                                    g$rhs*$11068$CQIRF
                                                    g$lhs*$11069$CQIRF)
                                                  (values
                                                    g$lhs*$11069$CQIRF
                                                    g$rhs*$11068$CQIRF
                                                    (list
                                                      'unsyntax
                                                      g$p$11067$CQIRF))))
                                               g$p$11066$CQIRF
                                               g$rhs*$11065$CQIRF
                                               g$lhs*$11064$CQIRF)))))))
                                    g$ls/false$11058$CQIRF)
                                  ((case-lambda
                                     ((g$t$11070$CQIRF)
                                      ((case-lambda
                                         ((g$ls/false$11071$CQIRF)
                                          (if (if g$ls/false$11071$CQIRF
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$11056$CQIRF
                                                          '0)))
                                                    g$ls/false$11071$CQIRF))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$10028$CQIRF
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$11055$CQIRF)))
                                              g$ls/false$11071$CQIRF)
                                            ((case-lambda
                                               ((g$t$11072$CQIRF)
                                                ((case-lambda
                                                   ((g$ls/false$11073$CQIRF)
                                                    (if g$ls/false$11073$CQIRF
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$11074$CQIRF
                                                             g$q$11075$CQIRF)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$11041$CQIRF
                                                                  g$q$11075$CQIRF
                                                                  g$lev$11056$CQIRF)))
                                                             (case-lambda
                                                               ((g$lhs*$11079$CQIRF
                                                                  g$rhs*$11080$CQIRF
                                                                  g$q$11081$CQIRF)
                                                                ((case-lambda
                                                                   ((g$q$11082$CQIRF
                                                                      g$rhs*$11083$CQIRF
                                                                      g$lhs*$11084$CQIRF)
                                                                    (if (= g$lev$11056$CQIRF
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$11085$CQIRF)
                                                                          (values
                                                                            (append
                                                                              g$g*$11085$CQIRF
                                                                              g$lhs*$11084$CQIRF)
                                                                            (append
                                                                              g$p*$11074$CQIRF
                                                                              g$rhs*$11083$CQIRF)
                                                                            (append
                                                                              g$g*$11085$CQIRF
                                                                              g$q$11082$CQIRF))))
                                                                       (g$map$5946$CQIRF
                                                                         (case-lambda
                                                                           ((g$x$11086$CQIRF)
                                                                            (gensym)))
                                                                         g$p*$11074$CQIRF))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$11041$CQIRF
                                                                             g$p*$11074$CQIRF
                                                                             (- g$lev$11056$CQIRF
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$11090$CQIRF
                                                                             g$rhs2*$11091$CQIRF
                                                                             g$p*$11092$CQIRF)
                                                                           ((case-lambda
                                                                              ((g$p*$11093$CQIRF
                                                                                 g$rhs2*$11094$CQIRF
                                                                                 g$lhs2*$11095$CQIRF)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$11095$CQIRF
                                                                                   g$lhs*$11084$CQIRF)
                                                                                 (append
                                                                                   g$rhs2*$11094$CQIRF
                                                                                   g$rhs*$11083$CQIRF)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$11093$CQIRF)
                                                                                   g$q$11082$CQIRF))))
                                                                            g$p*$11092$CQIRF
                                                                            g$rhs2*$11091$CQIRF
                                                                            g$lhs2*$11090$CQIRF)))))))
                                                                 g$q$11081$CQIRF
                                                                 g$rhs*$11080$CQIRF
                                                                 g$lhs*$11079$CQIRF))))))
                                                        g$ls/false$11073$CQIRF)
                                                      ((case-lambda
                                                         ((g$t$11096$CQIRF)
                                                          ((case-lambda
                                                             ((g$ls/false$11097$CQIRF)
                                                              (if g$ls/false$11097$CQIRF
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$11098$CQIRF
                                                                       g$q$11099$CQIRF)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$11041$CQIRF
                                                                            g$q$11099$CQIRF
                                                                            g$lev$11056$CQIRF)))
                                                                       (case-lambda
                                                                         ((g$lhs*$11103$CQIRF
                                                                            g$rhs*$11104$CQIRF
                                                                            g$q$11105$CQIRF)
                                                                          ((case-lambda
                                                                             ((g$q$11106$CQIRF
                                                                                g$rhs*$11107$CQIRF
                                                                                g$lhs*$11108$CQIRF)
                                                                              (if (= g$lev$11056$CQIRF
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$11109$CQIRF)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$5946$CQIRF
                                                                                          (case-lambda
                                                                                            ((g$g$11110$CQIRF)
                                                                                             (cons
                                                                                               g$g$11110$CQIRF
                                                                                               '(...))))
                                                                                          g$g*$11109$CQIRF)
                                                                                        g$lhs*$11108$CQIRF)
                                                                                      (append
                                                                                        g$p*$11098$CQIRF
                                                                                        g$rhs*$11107$CQIRF)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$5946$CQIRF
                                                                                            (case-lambda
                                                                                              ((g$g$11111$CQIRF)
                                                                                               (cons
                                                                                                 g$g$11111$CQIRF
                                                                                                 '(...))))
                                                                                            g$g*$11109$CQIRF))
                                                                                        g$q$11106$CQIRF))))
                                                                                 (g$map$5946$CQIRF
                                                                                   (case-lambda
                                                                                     ((g$x$11112$CQIRF)
                                                                                      (gensym)))
                                                                                   g$p*$11098$CQIRF))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$11041$CQIRF
                                                                                       g$p*$11098$CQIRF
                                                                                       (- g$lev$11056$CQIRF
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$11116$CQIRF
                                                                                       g$rhs2*$11117$CQIRF
                                                                                       g$p*$11118$CQIRF)
                                                                                     ((case-lambda
                                                                                        ((g$p*$11119$CQIRF
                                                                                           g$rhs2*$11120$CQIRF
                                                                                           g$lhs2*$11121$CQIRF)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$11121$CQIRF
                                                                                             g$lhs*$11108$CQIRF)
                                                                                           (append
                                                                                             g$rhs2*$11120$CQIRF
                                                                                             g$rhs*$11107$CQIRF)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$11119$CQIRF)
                                                                                             g$q$11106$CQIRF))))
                                                                                      g$p*$11118$CQIRF
                                                                                      g$rhs2*$11117$CQIRF
                                                                                      g$lhs2*$11116$CQIRF)))))))
                                                                           g$q$11105$CQIRF
                                                                           g$rhs*$11104$CQIRF
                                                                           g$lhs*$11103$CQIRF))))))
                                                                  g$ls/false$11097$CQIRF)
                                                                ((case-lambda
                                                                   ((g$t$11122$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$ls/false$11123$CQIRF)
                                                                        (if (if g$ls/false$11123$CQIRF
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$11056$CQIRF
                                                                                        '0)))
                                                                                  g$ls/false$11123$CQIRF))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$10028$CQIRF
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$11055$CQIRF)))
                                                                            g$ls/false$11123$CQIRF)
                                                                          ((case-lambda
                                                                             ((g$t$11124$CQIRF)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$11125$CQIRF)
                                                                                  (if g$ls/false$11125$CQIRF
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$11126$CQIRF)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$11041$CQIRF
                                                                                                g$p$11126$CQIRF
                                                                                                (+ g$lev$11056$CQIRF
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$11130$CQIRF
                                                                                                g$rhs*$11131$CQIRF
                                                                                                g$p$11132$CQIRF)
                                                                                              ((case-lambda
                                                                                                 ((g$p$11133$CQIRF
                                                                                                    g$rhs*$11134$CQIRF
                                                                                                    g$lhs*$11135$CQIRF)
                                                                                                  (values
                                                                                                    g$lhs*$11135$CQIRF
                                                                                                    g$rhs*$11134$CQIRF
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$11133$CQIRF))))
                                                                                               g$p$11132$CQIRF
                                                                                               g$rhs*$11131$CQIRF
                                                                                               g$lhs*$11130$CQIRF))))))
                                                                                      g$ls/false$11125$CQIRF)
                                                                                    ((case-lambda
                                                                                       ((g$t$11136$CQIRF)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$11137$CQIRF)
                                                                                            (if g$ls/false$11137$CQIRF
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$11138$CQIRF
                                                                                                     g$q$11139$CQIRF)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$11041$CQIRF
                                                                                                          g$p$11138$CQIRF
                                                                                                          g$lev$11056$CQIRF)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$11146$CQIRF
                                                                                                          g$rhs*$11147$CQIRF
                                                                                                          g$p$11148$CQIRF)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$11041$CQIRF
                                                                                                               g$q$11139$CQIRF
                                                                                                               g$lev$11056$CQIRF)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$11149$CQIRF
                                                                                                               g$rhs2*$11150$CQIRF
                                                                                                               g$q$11151$CQIRF)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$11152$CQIRF
                                                                                                                   g$rhs2*$11153$CQIRF
                                                                                                                   g$lhs2*$11154$CQIRF
                                                                                                                   g$p$11155$CQIRF
                                                                                                                   g$rhs*$11156$CQIRF
                                                                                                                   g$lhs*$11157$CQIRF)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$11154$CQIRF
                                                                                                                     g$lhs*$11157$CQIRF)
                                                                                                                   (append
                                                                                                                     g$rhs2*$11153$CQIRF
                                                                                                                     g$rhs*$11156$CQIRF)
                                                                                                                   (cons
                                                                                                                     g$p$11155$CQIRF
                                                                                                                     g$q$11152$CQIRF))))
                                                                                                              g$q$11151$CQIRF
                                                                                                              g$rhs2*$11150$CQIRF
                                                                                                              g$lhs2*$11149$CQIRF
                                                                                                              g$p$11148$CQIRF
                                                                                                              g$rhs*$11147$CQIRF
                                                                                                              g$lhs*$11146$CQIRF)))))))))
                                                                                                g$ls/false$11137$CQIRF)
                                                                                              ((case-lambda
                                                                                                 ((g$t$11158$CQIRF)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$11159$CQIRF)
                                                                                                      (if g$ls/false$11159$CQIRF
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$11160$CQIRF)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$11041$CQIRF
                                                                                                                    g$x*$11160$CQIRF
                                                                                                                    g$lev$11056$CQIRF)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$11164$CQIRF
                                                                                                                    g$rhs*$11165$CQIRF
                                                                                                                    g$x*$11166$CQIRF)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$11167$CQIRF
                                                                                                                        g$rhs*$11168$CQIRF
                                                                                                                        g$lhs*$11169$CQIRF)
                                                                                                                      (values
                                                                                                                        g$lhs*$11169$CQIRF
                                                                                                                        g$rhs*$11168$CQIRF
                                                                                                                        (g$list->vector$6612$CQIRF
                                                                                                                          g$x*$11167$CQIRF))))
                                                                                                                   g$x*$11166$CQIRF
                                                                                                                   g$rhs*$11165$CQIRF
                                                                                                                   g$lhs*$11164$CQIRF))))))
                                                                                                          g$ls/false$11159$CQIRF)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$11170$CQIRF)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$11171$CQIRF)
                                                                                                                (if g$ls/false$11171$CQIRF
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$11055$CQIRF)))
                                                                                                                    g$ls/false$11171$CQIRF)
                                                                                                                  (g$syntax-violation$10028$CQIRF
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$11170$CQIRF))))
                                                                                                             (g$syntax-dispatch$9910$CQIRF
                                                                                                               g$t$11170$CQIRF
                                                                                                               '_))))
                                                                                                         g$t$11158$CQIRF))))
                                                                                                   (g$syntax-dispatch$9910$CQIRF
                                                                                                     g$t$11158$CQIRF
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$11136$CQIRF))))
                                                                                         (g$syntax-dispatch$9910$CQIRF
                                                                                           g$t$11136$CQIRF
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$11124$CQIRF))))
                                                                               (g$syntax-dispatch$9910$CQIRF
                                                                                 g$t$11124$CQIRF
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$11122$CQIRF))))
                                                                     (g$syntax-dispatch$9910$CQIRF
                                                                       g$t$11122$CQIRF
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$11096$CQIRF))))
                                                           (g$syntax-dispatch$9910$CQIRF
                                                             g$t$11096$CQIRF
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$11072$CQIRF))))
                                                 (g$syntax-dispatch$9910$CQIRF
                                                   g$t$11072$CQIRF
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$11070$CQIRF))))
                                       (g$syntax-dispatch$9910$CQIRF
                                         g$t$11070$CQIRF
                                         '#(scheme-id unsyntax)))))
                                   g$t$11057$CQIRF))))
                             (g$syntax-dispatch$9910$CQIRF
                               g$t$11057$CQIRF
                               '(#(scheme-id unsyntax) any)))))
                         g$p$11055$CQIRF)))))
           (case-lambda
             ((g$x$11042$CQIRF)
              ((case-lambda
                 ((g$t$11043$CQIRF)
                  ((case-lambda
                     ((g$ls/false$11044$CQIRF)
                      (if g$ls/false$11044$CQIRF
                        (apply
                          (case-lambda
                            ((g$e$11045$CQIRF)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$11041$CQIRF g$e$11045$CQIRF '0)))
                               (case-lambda
                                 ((g$lhs*$11049$CQIRF
                                    g$rhs*$11050$CQIRF
                                    g$v$11051$CQIRF)
                                  ((case-lambda
                                     ((g$v$11052$CQIRF
                                        g$rhs*$11053$CQIRF
                                        g$lhs*$11054$CQIRF)
                                      (g$bless$9873$CQIRF
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$11053$CQIRF)
                                          '()
                                          (list
                                            g$lhs*$11054$CQIRF
                                            (list 'syntax g$v$11052$CQIRF))))))
                                   g$v$11051$CQIRF
                                   g$rhs*$11050$CQIRF
                                   g$lhs*$11049$CQIRF))))))
                          g$ls/false$11044$CQIRF)
                        (g$syntax-violation$10028$CQIRF
                          '#f
                          '"invalid syntax"
                          g$t$11043$CQIRF))))
                   (g$syntax-dispatch$9910$CQIRF g$t$11043$CQIRF '(_ any)))))
               g$x$11042$CQIRF))))))))
   (g$define-struct-macro$9903$CQIRF
     g$define-struct-macro$13444$CQIRF
     (case-lambda
       ((g$stx$11172$CQIRF)
        (g$syntax-violation$10028$CQIRF
          '#f
          '"define-struct not supported"
          g$stx$11172$CQIRF))))
   (g$define-record-type-macro$9904$CQIRF
     g$define-record-type-macro$13445$CQIRF
     (case-lambda
       ((g$x$11173$CQIRF)
        (letrec* ((g$id$11174$CQIRF
                    (case-lambda
                      ((g$ctxt$11426$CQIRF . g$str*$11427$CQIRF)
                       (g$datum->syntax$10030$CQIRF
                         g$ctxt$11426$CQIRF
                         (string->symbol
                           (apply
                             string-append
                             (g$map$5946$CQIRF
                               (case-lambda
                                 ((g$x$11428$CQIRF)
                                  (if (g$symbol?$6617$CQIRF g$x$11428$CQIRF)
                                    (symbol->string g$x$11428$CQIRF)
                                    (if (string? g$x$11428$CQIRF)
                                      g$x$11428$CQIRF
                                      (assertion-violation
                                        'define-record-type
                                        '"BUG")))))
                               g$str*$11427$CQIRF)))))))
                  (g$get-record-name$11175$CQIRF
                    (case-lambda
                      ((g$spec$11417$CQIRF)
                       ((case-lambda
                          ((g$t$11418$CQIRF)
                           ((case-lambda
                              ((g$ls/false$11419$CQIRF)
                               (if g$ls/false$11419$CQIRF
                                 (apply
                                   (case-lambda
                                     ((g$foo$11420$CQIRF
                                        g$make-foo$11421$CQIRF
                                        g$foo?$11422$CQIRF)
                                      g$foo$11420$CQIRF))
                                   g$ls/false$11419$CQIRF)
                                 ((case-lambda
                                    ((g$t$11423$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$11424$CQIRF)
                                         (if g$ls/false$11424$CQIRF
                                           (apply
                                             (case-lambda
                                               ((g$foo$11425$CQIRF)
                                                g$foo$11425$CQIRF))
                                             g$ls/false$11424$CQIRF)
                                           (g$syntax-violation$10028$CQIRF
                                             '#f
                                             '"invalid syntax"
                                             g$t$11423$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$11423$CQIRF
                                        'any))))
                                  g$t$11418$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$11418$CQIRF
                              '(any any any)))))
                        g$spec$11417$CQIRF))))
                  (g$get-record-constructor-name$11176$CQIRF
                    (case-lambda
                      ((g$spec$11407$CQIRF)
                       ((case-lambda
                          ((g$t$11408$CQIRF)
                           ((case-lambda
                              ((g$ls/false$11409$CQIRF)
                               (if g$ls/false$11409$CQIRF
                                 (apply
                                   (case-lambda
                                     ((g$foo$11410$CQIRF
                                        g$make-foo$11411$CQIRF
                                        g$foo?$11412$CQIRF)
                                      g$make-foo$11411$CQIRF))
                                   g$ls/false$11409$CQIRF)
                                 ((case-lambda
                                    ((g$t$11413$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$11414$CQIRF)
                                         (if (if g$ls/false$11414$CQIRF
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$11415$CQIRF)
                                                      (g$id?$9547$CQIRF
                                                        g$foo$11415$CQIRF)))
                                                   g$ls/false$11414$CQIRF))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$11416$CQIRF)
                                                (g$id$11174$CQIRF
                                                  g$foo$11416$CQIRF
                                                  '"make-"
                                                  (g$stx->datum$9558$CQIRF
                                                    g$foo$11416$CQIRF))))
                                             g$ls/false$11414$CQIRF)
                                           (g$syntax-violation$10028$CQIRF
                                             '#f
                                             '"invalid syntax"
                                             g$t$11413$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$11413$CQIRF
                                        'any))))
                                  g$t$11408$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$11408$CQIRF
                              '(any any any)))))
                        g$spec$11407$CQIRF))))
                  (g$get-record-predicate-name$11177$CQIRF
                    (case-lambda
                      ((g$spec$11397$CQIRF)
                       ((case-lambda
                          ((g$t$11398$CQIRF)
                           ((case-lambda
                              ((g$ls/false$11399$CQIRF)
                               (if g$ls/false$11399$CQIRF
                                 (apply
                                   (case-lambda
                                     ((g$foo$11400$CQIRF
                                        g$make-foo$11401$CQIRF
                                        g$foo?$11402$CQIRF)
                                      g$foo?$11402$CQIRF))
                                   g$ls/false$11399$CQIRF)
                                 ((case-lambda
                                    ((g$t$11403$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$11404$CQIRF)
                                         (if (if g$ls/false$11404$CQIRF
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$11405$CQIRF)
                                                      (g$id?$9547$CQIRF
                                                        g$foo$11405$CQIRF)))
                                                   g$ls/false$11404$CQIRF))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$11406$CQIRF)
                                                (g$id$11174$CQIRF
                                                  g$foo$11406$CQIRF
                                                  (g$stx->datum$9558$CQIRF
                                                    g$foo$11406$CQIRF)
                                                  '"?")))
                                             g$ls/false$11404$CQIRF)
                                           (g$syntax-violation$10028$CQIRF
                                             '#f
                                             '"invalid syntax"
                                             g$t$11403$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$11403$CQIRF
                                        'any))))
                                  g$t$11398$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$11398$CQIRF
                              '(any any any)))))
                        g$spec$11397$CQIRF))))
                  (g$get-clause$11178$CQIRF
                    (case-lambda
                      ((g$id$11388$CQIRF g$ls$11389$CQIRF)
                       ((case-lambda
                          ((g$t$11390$CQIRF)
                           ((case-lambda
                              ((g$ls/false$11391$CQIRF)
                               (if g$ls/false$11391$CQIRF
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$11391$CQIRF)
                                 ((case-lambda
                                    ((g$t$11392$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$11393$CQIRF)
                                         (if g$ls/false$11393$CQIRF
                                           (apply
                                             (case-lambda
                                               ((g$x$11394$CQIRF
                                                  g$rest$11395$CQIRF
                                                  g$ls$11396$CQIRF)
                                                (if (g$free-id=?$9551$CQIRF
                                                      (g$bless$9873$CQIRF
                                                        g$id$11388$CQIRF)
                                                      g$x$11394$CQIRF)
                                                  (cons
                                                    g$x$11394$CQIRF
                                                    g$rest$11395$CQIRF)
                                                  (g$get-clause$11178$CQIRF
                                                    g$id$11388$CQIRF
                                                    g$ls$11396$CQIRF))))
                                             g$ls/false$11393$CQIRF)
                                           (g$syntax-violation$10028$CQIRF
                                             '#f
                                             '"invalid syntax"
                                             g$t$11392$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$11392$CQIRF
                                        '((any . any) . any)))))
                                  g$t$11390$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$11390$CQIRF
                              '()))))
                        g$ls$11389$CQIRF))))
                  (g$foo-rtd-code$11179$CQIRF
                    (case-lambda
                      ((g$name$11347$CQIRF
                         g$clause*$11348$CQIRF
                         g$parent-rtd-code$11349$CQIRF)
                       (letrec* ((g$convert-field-spec*$11350$CQIRF
                                   (case-lambda
                                     ((g$ls$11375$CQIRF)
                                      (g$list->vector$6612$CQIRF
                                        (g$map$5946$CQIRF
                                          (case-lambda
                                            ((g$x$11376$CQIRF)
                                             ((case-lambda
                                                ((g$t$11377$CQIRF)
                                                 ((case-lambda
                                                    ((g$ls/false$11378$CQIRF)
                                                     (if g$ls/false$11378$CQIRF
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$11379$CQIRF
                                                              g$rest$11380$CQIRF)
                                                            (list
                                                              'mutable
                                                              g$name$11379$CQIRF)))
                                                         g$ls/false$11378$CQIRF)
                                                       ((case-lambda
                                                          ((g$t$11381$CQIRF)
                                                           ((case-lambda
                                                              ((g$ls/false$11382$CQIRF)
                                                               (if g$ls/false$11382$CQIRF
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$11383$CQIRF
                                                                        g$rest$11384$CQIRF)
                                                                      (list
                                                                        'immutable
                                                                        g$name$11383$CQIRF)))
                                                                   g$ls/false$11382$CQIRF)
                                                                 ((case-lambda
                                                                    ((g$t$11385$CQIRF)
                                                                     ((case-lambda
                                                                        ((g$ls/false$11386$CQIRF)
                                                                         (if g$ls/false$11386$CQIRF
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$11387$CQIRF)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$11387$CQIRF)))
                                                                             g$ls/false$11386$CQIRF)
                                                                           (g$syntax-violation$10028$CQIRF
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$11385$CQIRF))))
                                                                      (g$syntax-dispatch$9910$CQIRF
                                                                        g$t$11385$CQIRF
                                                                        'any))))
                                                                  g$t$11381$CQIRF))))
                                                            (g$syntax-dispatch$9910$CQIRF
                                                              g$t$11381$CQIRF
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$11377$CQIRF))))
                                                  (g$syntax-dispatch$9910$CQIRF
                                                    g$t$11377$CQIRF
                                                    '(#(scheme-id mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$11376$CQIRF)))
                                          g$ls$11375$CQIRF))))))
                         ((case-lambda
                            ((g$uid-code$11351$CQIRF
                               g$sealed?$11352$CQIRF
                               g$opaque?$11353$CQIRF
                               g$fields$11354$CQIRF)
                             (g$bless$9873$CQIRF
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$11347$CQIRF)
                                 g$parent-rtd-code$11349$CQIRF
                                 g$uid-code$11351$CQIRF
                                 g$sealed?$11352$CQIRF
                                 g$opaque?$11353$CQIRF
                                 g$fields$11354$CQIRF))))
                          ((case-lambda
                             ((g$t$11355$CQIRF)
                              ((case-lambda
                                 ((g$ls/false$11356$CQIRF)
                                  (if g$ls/false$11356$CQIRF
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$11356$CQIRF)
                                    ((case-lambda
                                       ((g$t$11357$CQIRF)
                                        ((case-lambda
                                           ((g$ls/false$11358$CQIRF)
                                            (if g$ls/false$11358$CQIRF
                                              (apply
                                                (case-lambda
                                                  ((g$uid$11359$CQIRF)
                                                   (list
                                                     'quote
                                                     g$uid$11359$CQIRF)))
                                                g$ls/false$11358$CQIRF)
                                              ((case-lambda
                                                 ((g$t$11360$CQIRF)
                                                  ((case-lambda
                                                     ((g$ls/false$11361$CQIRF)
                                                      (if g$ls/false$11361$CQIRF
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$11361$CQIRF)
                                                        (g$syntax-violation$10028$CQIRF
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$11360$CQIRF))))
                                                   (g$syntax-dispatch$9910$CQIRF
                                                     g$t$11360$CQIRF
                                                     '_))))
                                               g$t$11357$CQIRF))))
                                         (g$syntax-dispatch$9910$CQIRF
                                           g$t$11357$CQIRF
                                           '(_ any)))))
                                     g$t$11355$CQIRF))))
                               (g$syntax-dispatch$9910$CQIRF
                                 g$t$11355$CQIRF
                                 '(_)))))
                           (g$get-clause$11178$CQIRF
                             'nongenerative
                             g$clause*$11348$CQIRF))
                          ((case-lambda
                             ((g$t$11362$CQIRF)
                              ((case-lambda
                                 ((g$ls/false$11363$CQIRF)
                                  (if g$ls/false$11363$CQIRF
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$11363$CQIRF)
                                    ((case-lambda
                                       ((g$t$11364$CQIRF)
                                        ((case-lambda
                                           ((g$ls/false$11365$CQIRF)
                                            (if g$ls/false$11365$CQIRF
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$11365$CQIRF)
                                              (g$syntax-violation$10028$CQIRF
                                                '#f
                                                '"invalid syntax"
                                                g$t$11364$CQIRF))))
                                         (g$syntax-dispatch$9910$CQIRF
                                           g$t$11364$CQIRF
                                           '_))))
                                     g$t$11362$CQIRF))))
                               (g$syntax-dispatch$9910$CQIRF
                                 g$t$11362$CQIRF
                                 '(_ #(atom #t))))))
                           (g$get-clause$11178$CQIRF
                             'sealed
                             g$clause*$11348$CQIRF))
                          ((case-lambda
                             ((g$t$11366$CQIRF)
                              ((case-lambda
                                 ((g$ls/false$11367$CQIRF)
                                  (if g$ls/false$11367$CQIRF
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$11367$CQIRF)
                                    ((case-lambda
                                       ((g$t$11368$CQIRF)
                                        ((case-lambda
                                           ((g$ls/false$11369$CQIRF)
                                            (if g$ls/false$11369$CQIRF
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$11369$CQIRF)
                                              (g$syntax-violation$10028$CQIRF
                                                '#f
                                                '"invalid syntax"
                                                g$t$11368$CQIRF))))
                                         (g$syntax-dispatch$9910$CQIRF
                                           g$t$11368$CQIRF
                                           '_))))
                                     g$t$11366$CQIRF))))
                               (g$syntax-dispatch$9910$CQIRF
                                 g$t$11366$CQIRF
                                 '(_ #(atom #t))))))
                           (g$get-clause$11178$CQIRF
                             'opaque
                             g$clause*$11348$CQIRF))
                          ((case-lambda
                             ((g$t$11370$CQIRF)
                              ((case-lambda
                                 ((g$ls/false$11371$CQIRF)
                                  (if g$ls/false$11371$CQIRF
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$11372$CQIRF)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$11350$CQIRF
                                             g$field-spec*$11372$CQIRF))))
                                      g$ls/false$11371$CQIRF)
                                    ((case-lambda
                                       ((g$t$11373$CQIRF)
                                        ((case-lambda
                                           ((g$ls/false$11374$CQIRF)
                                            (if g$ls/false$11374$CQIRF
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$11374$CQIRF)
                                              (g$syntax-violation$10028$CQIRF
                                                '#f
                                                '"invalid syntax"
                                                g$t$11373$CQIRF))))
                                         (g$syntax-dispatch$9910$CQIRF
                                           g$t$11373$CQIRF
                                           '_))))
                                     g$t$11370$CQIRF))))
                               (g$syntax-dispatch$9910$CQIRF
                                 g$t$11370$CQIRF
                                 '(_ . each-any)))))
                           (g$get-clause$11178$CQIRF
                             'fields
                             g$clause*$11348$CQIRF)))))))
                  (g$parent-rtd-code$11180$CQIRF
                    (case-lambda
                      ((g$clause*$11335$CQIRF)
                       ((case-lambda
                          ((g$t$11336$CQIRF)
                           ((case-lambda
                              ((g$ls/false$11337$CQIRF)
                               (if g$ls/false$11337$CQIRF
                                 (apply
                                   (case-lambda
                                     ((g$name$11338$CQIRF)
                                      (list
                                        'record-type-descriptor
                                        g$name$11338$CQIRF)))
                                   g$ls/false$11337$CQIRF)
                                 ((case-lambda
                                    ((g$t$11339$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$11340$CQIRF)
                                         (if g$ls/false$11340$CQIRF
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$11341$CQIRF)
                                                    ((case-lambda
                                                       ((g$ls/false$11342$CQIRF)
                                                        (if g$ls/false$11342$CQIRF
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$11343$CQIRF
                                                                 g$rcd$11344$CQIRF)
                                                               g$rtd$11343$CQIRF))
                                                            g$ls/false$11342$CQIRF)
                                                          ((case-lambda
                                                             ((g$t$11345$CQIRF)
                                                              ((case-lambda
                                                                 ((g$ls/false$11346$CQIRF)
                                                                  (if g$ls/false$11346$CQIRF
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$11346$CQIRF)
                                                                    (g$syntax-violation$10028$CQIRF
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$11345$CQIRF))))
                                                               (g$syntax-dispatch$9910$CQIRF
                                                                 g$t$11345$CQIRF
                                                                 '#(atom #f)))))
                                                           g$t$11341$CQIRF))))
                                                     (g$syntax-dispatch$9910$CQIRF
                                                       g$t$11341$CQIRF
                                                       '(_ any any)))))
                                                 (g$get-clause$11178$CQIRF
                                                   'parent-rtd
                                                   g$clause*$11335$CQIRF))))
                                             g$ls/false$11340$CQIRF)
                                           (g$syntax-violation$10028$CQIRF
                                             '#f
                                             '"invalid syntax"
                                             g$t$11339$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$11339$CQIRF
                                        '#(atom #f)))))
                                  g$t$11336$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$11336$CQIRF
                              '(_ any)))))
                        (g$get-clause$11178$CQIRF
                          'parent
                          g$clause*$11335$CQIRF)))))
                  (g$parent-rcd-code$11181$CQIRF
                    (case-lambda
                      ((g$clause*$11323$CQIRF)
                       ((case-lambda
                          ((g$t$11324$CQIRF)
                           ((case-lambda
                              ((g$ls/false$11325$CQIRF)
                               (if g$ls/false$11325$CQIRF
                                 (apply
                                   (case-lambda
                                     ((g$name$11326$CQIRF)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$11326$CQIRF)))
                                   g$ls/false$11325$CQIRF)
                                 ((case-lambda
                                    ((g$t$11327$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$11328$CQIRF)
                                         (if g$ls/false$11328$CQIRF
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$11329$CQIRF)
                                                    ((case-lambda
                                                       ((g$ls/false$11330$CQIRF)
                                                        (if g$ls/false$11330$CQIRF
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$11331$CQIRF
                                                                 g$rcd$11332$CQIRF)
                                                               g$rcd$11332$CQIRF))
                                                            g$ls/false$11330$CQIRF)
                                                          ((case-lambda
                                                             ((g$t$11333$CQIRF)
                                                              ((case-lambda
                                                                 ((g$ls/false$11334$CQIRF)
                                                                  (if g$ls/false$11334$CQIRF
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$11334$CQIRF)
                                                                    (g$syntax-violation$10028$CQIRF
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$11333$CQIRF))))
                                                               (g$syntax-dispatch$9910$CQIRF
                                                                 g$t$11333$CQIRF
                                                                 '#(atom #f)))))
                                                           g$t$11329$CQIRF))))
                                                     (g$syntax-dispatch$9910$CQIRF
                                                       g$t$11329$CQIRF
                                                       '(_ any any)))))
                                                 (g$get-clause$11178$CQIRF
                                                   'parent-rtd
                                                   g$clause*$11323$CQIRF))))
                                             g$ls/false$11328$CQIRF)
                                           (g$syntax-violation$10028$CQIRF
                                             '#f
                                             '"invalid syntax"
                                             g$t$11327$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$11327$CQIRF
                                        '#(atom #f)))))
                                  g$t$11324$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$11324$CQIRF
                              '(_ any)))))
                        (g$get-clause$11178$CQIRF
                          'parent
                          g$clause*$11323$CQIRF)))))
                  (g$foo-rcd-code$11182$CQIRF
                    (case-lambda
                      ((g$clause*$11319$CQIRF
                         g$foo-rtd$11320$CQIRF
                         g$protocol$11321$CQIRF
                         g$parent-rcd-code$11322$CQIRF)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$11320$CQIRF
                         g$parent-rcd-code$11322$CQIRF
                         g$protocol$11321$CQIRF))))
                  (g$get-protocol-code$11183$CQIRF
                    (case-lambda
                      ((g$clause*$11313$CQIRF)
                       ((case-lambda
                          ((g$t$11314$CQIRF)
                           ((case-lambda
                              ((g$ls/false$11315$CQIRF)
                               (if g$ls/false$11315$CQIRF
                                 (apply
                                   (case-lambda
                                     ((g$expr$11316$CQIRF) g$expr$11316$CQIRF))
                                   g$ls/false$11315$CQIRF)
                                 ((case-lambda
                                    ((g$t$11317$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$11318$CQIRF)
                                         (if g$ls/false$11318$CQIRF
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$11318$CQIRF)
                                           (g$syntax-violation$10028$CQIRF
                                             '#f
                                             '"invalid syntax"
                                             g$t$11317$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$11317$CQIRF
                                        '_))))
                                  g$t$11314$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$11314$CQIRF
                              '(_ any)))))
                        (g$get-clause$11178$CQIRF
                          'protocol
                          g$clause*$11313$CQIRF)))))
                  (g$get-fields$11184$CQIRF
                    (case-lambda
                      ((g$clause*$11304$CQIRF)
                       ((case-lambda
                          ((g$t$11305$CQIRF)
                           ((case-lambda
                              ((g$ls/false$11306$CQIRF)
                               (if g$ls/false$11306$CQIRF
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$11306$CQIRF)
                                 ((case-lambda
                                    ((g$t$11307$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$11308$CQIRF)
                                         (if g$ls/false$11308$CQIRF
                                           (apply
                                             (case-lambda
                                               ((g$f*$11309$CQIRF)
                                                g$f*$11309$CQIRF))
                                             g$ls/false$11308$CQIRF)
                                           ((case-lambda
                                              ((g$t$11310$CQIRF)
                                               ((case-lambda
                                                  ((g$ls/false$11311$CQIRF)
                                                   (if g$ls/false$11311$CQIRF
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$11312$CQIRF)
                                                          (g$get-fields$11184$CQIRF
                                                            g$rest$11312$CQIRF)))
                                                       g$ls/false$11311$CQIRF)
                                                     (g$syntax-violation$10028$CQIRF
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$11310$CQIRF))))
                                                (g$syntax-dispatch$9910$CQIRF
                                                  g$t$11310$CQIRF
                                                  '(_ . any)))))
                                            g$t$11307$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$11307$CQIRF
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$11305$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$11305$CQIRF
                              '()))))
                        g$clause*$11304$CQIRF))))
                  (g$get-mutator-indices$11185$CQIRF
                    (case-lambda
                      ((g$fields$11292$CQIRF)
                       ((letrec ((g$f$11293$CQIRF
                                   (case-lambda
                                     ((g$fields$11294$CQIRF g$i$11295$CQIRF)
                                      ((case-lambda
                                         ((g$t$11296$CQIRF)
                                          ((case-lambda
                                             ((g$ls/false$11297$CQIRF)
                                              (if g$ls/false$11297$CQIRF
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$11297$CQIRF)
                                                ((case-lambda
                                                   ((g$t$11298$CQIRF)
                                                    ((case-lambda
                                                       ((g$ls/false$11299$CQIRF)
                                                        (if g$ls/false$11299$CQIRF
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$11300$CQIRF)
                                                               (cons
                                                                 g$i$11295$CQIRF
                                                                 (g$f$11293$CQIRF
                                                                   g$rest$11300$CQIRF
                                                                   (+ g$i$11295$CQIRF
                                                                      '1)))))
                                                            g$ls/false$11299$CQIRF)
                                                          ((case-lambda
                                                             ((g$t$11301$CQIRF)
                                                              ((case-lambda
                                                                 ((g$ls/false$11302$CQIRF)
                                                                  (if g$ls/false$11302$CQIRF
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$11303$CQIRF)
                                                                         (g$f$11293$CQIRF
                                                                           g$rest$11303$CQIRF
                                                                           (+ g$i$11295$CQIRF
                                                                              '1))))
                                                                      g$ls/false$11302$CQIRF)
                                                                    (g$syntax-violation$10028$CQIRF
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$11301$CQIRF))))
                                                               (g$syntax-dispatch$9910$CQIRF
                                                                 g$t$11301$CQIRF
                                                                 '(_ . any)))))
                                                           g$t$11298$CQIRF))))
                                                     (g$syntax-dispatch$9910$CQIRF
                                                       g$t$11298$CQIRF
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$11296$CQIRF))))
                                           (g$syntax-dispatch$9910$CQIRF
                                             g$t$11296$CQIRF
                                             '()))))
                                       g$fields$11294$CQIRF)))))
                          g$f$11293$CQIRF)
                        g$fields$11292$CQIRF
                        '0))))
                  (g$get-mutators$11186$CQIRF
                    (case-lambda
                      ((g$foo$11271$CQIRF g$fields$11272$CQIRF)
                       (letrec* ((g$gen-name$11273$CQIRF
                                   (case-lambda
                                     ((g$x$11291$CQIRF)
                                      (g$datum->syntax$10030$CQIRF
                                        g$foo$11271$CQIRF
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$10031$CQIRF
                                                g$foo$11271$CQIRF))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$10031$CQIRF
                                                g$x$11291$CQIRF))
                                            '"-set!")))))))
                         ((letrec ((g$f$11274$CQIRF
                                     (case-lambda
                                       ((g$fields$11275$CQIRF)
                                        ((case-lambda
                                           ((g$t$11276$CQIRF)
                                            ((case-lambda
                                               ((g$ls/false$11277$CQIRF)
                                                (if g$ls/false$11277$CQIRF
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$11277$CQIRF)
                                                  ((case-lambda
                                                     ((g$t$11278$CQIRF)
                                                      ((case-lambda
                                                         ((g$ls/false$11279$CQIRF)
                                                          (if g$ls/false$11279$CQIRF
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$11280$CQIRF
                                                                   g$accessor$11281$CQIRF
                                                                   g$mutator$11282$CQIRF
                                                                   g$rest$11283$CQIRF)
                                                                 (cons
                                                                   g$mutator$11282$CQIRF
                                                                   (g$f$11274$CQIRF
                                                                     g$rest$11283$CQIRF))))
                                                              g$ls/false$11279$CQIRF)
                                                            ((case-lambda
                                                               ((g$t$11284$CQIRF)
                                                                ((case-lambda
                                                                   ((g$ls/false$11285$CQIRF)
                                                                    (if g$ls/false$11285$CQIRF
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$11286$CQIRF
                                                                             g$rest$11287$CQIRF)
                                                                           (cons
                                                                             (g$gen-name$11273$CQIRF
                                                                               g$name$11286$CQIRF)
                                                                             (g$f$11274$CQIRF
                                                                               g$rest$11287$CQIRF))))
                                                                        g$ls/false$11285$CQIRF)
                                                                      ((case-lambda
                                                                         ((g$t$11288$CQIRF)
                                                                          ((case-lambda
                                                                             ((g$ls/false$11289$CQIRF)
                                                                              (if g$ls/false$11289$CQIRF
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$11290$CQIRF)
                                                                                     (g$f$11274$CQIRF
                                                                                       g$rest$11290$CQIRF)))
                                                                                  g$ls/false$11289$CQIRF)
                                                                                (g$syntax-violation$10028$CQIRF
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$11288$CQIRF))))
                                                                           (g$syntax-dispatch$9910$CQIRF
                                                                             g$t$11288$CQIRF
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$11284$CQIRF))))
                                                                 (g$syntax-dispatch$9910$CQIRF
                                                                   g$t$11284$CQIRF
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$11278$CQIRF))))
                                                       (g$syntax-dispatch$9910$CQIRF
                                                         g$t$11278$CQIRF
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$11276$CQIRF))))
                                             (g$syntax-dispatch$9910$CQIRF
                                               g$t$11276$CQIRF
                                               '()))))
                                         g$fields$11275$CQIRF)))))
                            g$f$11274$CQIRF)
                          g$fields$11272$CQIRF)))))
                  (g$get-accessors$11187$CQIRF
                    (case-lambda
                      ((g$foo$11237$CQIRF g$fields$11238$CQIRF)
                       (letrec* ((g$gen-name$11239$CQIRF
                                   (case-lambda
                                     ((g$x$11270$CQIRF)
                                      (g$datum->syntax$10030$CQIRF
                                        g$foo$11237$CQIRF
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$10031$CQIRF
                                                g$foo$11237$CQIRF))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$10031$CQIRF
                                                g$x$11270$CQIRF)))))))))
                         (g$map$5946$CQIRF
                           (case-lambda
                             ((g$field$11240$CQIRF)
                              ((case-lambda
                                 ((g$t$11241$CQIRF)
                                  ((case-lambda
                                     ((g$ls/false$11242$CQIRF)
                                      (if (if g$ls/false$11242$CQIRF
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$11243$CQIRF
                                                     g$accessor$11244$CQIRF
                                                     g$mutator$11245$CQIRF)
                                                   (g$id?$9547$CQIRF
                                                     g$accessor$11244$CQIRF)))
                                                g$ls/false$11242$CQIRF))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$11246$CQIRF
                                               g$accessor$11247$CQIRF
                                               g$mutator$11248$CQIRF)
                                             g$accessor$11247$CQIRF))
                                          g$ls/false$11242$CQIRF)
                                        ((case-lambda
                                           ((g$t$11249$CQIRF)
                                            ((case-lambda
                                               ((g$ls/false$11250$CQIRF)
                                                (if (if g$ls/false$11250$CQIRF
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$11251$CQIRF
                                                               g$accessor$11252$CQIRF)
                                                             (g$id?$9547$CQIRF
                                                               g$accessor$11252$CQIRF)))
                                                          g$ls/false$11250$CQIRF))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$11253$CQIRF
                                                         g$accessor$11254$CQIRF)
                                                       g$accessor$11254$CQIRF))
                                                    g$ls/false$11250$CQIRF)
                                                  ((case-lambda
                                                     ((g$t$11255$CQIRF)
                                                      ((case-lambda
                                                         ((g$ls/false$11256$CQIRF)
                                                          (if (if g$ls/false$11256$CQIRF
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$11257$CQIRF)
                                                                       (g$id?$9547$CQIRF
                                                                         g$name$11257$CQIRF)))
                                                                    g$ls/false$11256$CQIRF))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$11258$CQIRF)
                                                                 (g$gen-name$11239$CQIRF
                                                                   g$name$11258$CQIRF)))
                                                              g$ls/false$11256$CQIRF)
                                                            ((case-lambda
                                                               ((g$t$11259$CQIRF)
                                                                ((case-lambda
                                                                   ((g$ls/false$11260$CQIRF)
                                                                    (if (if g$ls/false$11260$CQIRF
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$11261$CQIRF)
                                                                                 (g$id?$9547$CQIRF
                                                                                   g$name$11261$CQIRF)))
                                                                              g$ls/false$11260$CQIRF))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$11262$CQIRF)
                                                                           (g$gen-name$11239$CQIRF
                                                                             g$name$11262$CQIRF)))
                                                                        g$ls/false$11260$CQIRF)
                                                                      ((case-lambda
                                                                         ((g$t$11263$CQIRF)
                                                                          ((case-lambda
                                                                             ((g$ls/false$11264$CQIRF)
                                                                              (if (if g$ls/false$11264$CQIRF
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$11265$CQIRF)
                                                                                           (g$id?$9547$CQIRF
                                                                                             g$name$11265$CQIRF)))
                                                                                        g$ls/false$11264$CQIRF))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$11266$CQIRF)
                                                                                     (g$gen-name$11239$CQIRF
                                                                                       g$name$11266$CQIRF)))
                                                                                  g$ls/false$11264$CQIRF)
                                                                                ((case-lambda
                                                                                   ((g$t$11267$CQIRF)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$11268$CQIRF)
                                                                                        (if g$ls/false$11268$CQIRF
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$11269$CQIRF)
                                                                                               (g$syntax-violation$10028$CQIRF
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$11240$CQIRF)))
                                                                                            g$ls/false$11268$CQIRF)
                                                                                          (g$syntax-violation$10028$CQIRF
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$11267$CQIRF))))
                                                                                     (g$syntax-dispatch$9910$CQIRF
                                                                                       g$t$11267$CQIRF
                                                                                       'any))))
                                                                                 g$t$11263$CQIRF))))
                                                                           (g$syntax-dispatch$9910$CQIRF
                                                                             g$t$11263$CQIRF
                                                                             'any))))
                                                                       g$t$11259$CQIRF))))
                                                                 (g$syntax-dispatch$9910$CQIRF
                                                                   g$t$11259$CQIRF
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$11255$CQIRF))))
                                                       (g$syntax-dispatch$9910$CQIRF
                                                         g$t$11255$CQIRF
                                                         '(#(scheme-id mutable)
                                                           any)))))
                                                   g$t$11249$CQIRF))))
                                             (g$syntax-dispatch$9910$CQIRF
                                               g$t$11249$CQIRF
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$11241$CQIRF))))
                                   (g$syntax-dispatch$9910$CQIRF
                                     g$t$11241$CQIRF
                                     '(#(scheme-id mutable) any any any)))))
                               g$field$11240$CQIRF)))
                           g$fields$11238$CQIRF)))))
                  (g$enumerate$11188$CQIRF
                    (case-lambda
                      ((g$ls$11233$CQIRF)
                       ((letrec ((g$f$11234$CQIRF
                                   (case-lambda
                                     ((g$ls$11235$CQIRF g$i$11236$CQIRF)
                                      (if (null? g$ls$11235$CQIRF)
                                        '()
                                        (cons
                                          g$i$11236$CQIRF
                                          (g$f$11234$CQIRF
                                            (cdr g$ls$11235$CQIRF)
                                            (+ g$i$11236$CQIRF '1))))))))
                          g$f$11234$CQIRF)
                        g$ls$11233$CQIRF
                        '0))))
                  (g$do-define-record$11189$CQIRF
                    (case-lambda
                      ((g$namespec$11213$CQIRF g$clause*$11214$CQIRF)
                       ((case-lambda
                          ((g$foo$11215$CQIRF)
                           ((case-lambda
                              ((g$foo-rtd$11216$CQIRF)
                               ((case-lambda
                                  ((g$foo-rcd$11217$CQIRF)
                                   ((case-lambda
                                      ((g$protocol$11218$CQIRF)
                                       ((case-lambda
                                          ((g$make-foo$11219$CQIRF)
                                           ((case-lambda
                                              ((g$fields$11220$CQIRF)
                                               ((case-lambda
                                                  ((g$idx*$11221$CQIRF)
                                                   ((case-lambda
                                                      ((g$foo-x*$11222$CQIRF)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$11223$CQIRF)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$11224$CQIRF)
                                                               ((case-lambda
                                                                  ((g$foo?$11225$CQIRF)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$11226$CQIRF)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$11227$CQIRF)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$11228$CQIRF)
                                                                               (g$bless$9873$CQIRF
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$11216$CQIRF
                                                                                       g$foo-rtd-code$11226$CQIRF)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$11218$CQIRF
                                                                                         g$protocol-code$11228$CQIRF)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$11217$CQIRF
                                                                                           g$foo-rcd-code$11227$CQIRF)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$11215$CQIRF
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$11216$CQIRF)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$11217$CQIRF)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$11225$CQIRF
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$11216$CQIRF))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$11219$CQIRF
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$11217$CQIRF))
                                                                                               (append
                                                                                                 (g$map$5946$CQIRF
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$11229$CQIRF
                                                                                                        g$idx$11230$CQIRF)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$11229$CQIRF
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$11216$CQIRF
                                                                                                          g$idx$11230$CQIRF))))
                                                                                                   g$foo-x*$11222$CQIRF
                                                                                                   g$idx*$11221$CQIRF)
                                                                                                 (g$map$5946$CQIRF
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$11231$CQIRF
                                                                                                        g$idx$11232$CQIRF)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$11231$CQIRF
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$11216$CQIRF
                                                                                                          g$idx$11232$CQIRF))))
                                                                                                   g$set-foo-x!*$11223$CQIRF
                                                                                                   g$set-foo-idx*$11224$CQIRF))))))))))))
                                                                            (g$get-protocol-code$11183$CQIRF
                                                                              g$clause*$11214$CQIRF))))
                                                                        (g$foo-rcd-code$11182$CQIRF
                                                                          g$clause*$11214$CQIRF
                                                                          g$foo-rtd$11216$CQIRF
                                                                          g$protocol$11218$CQIRF
                                                                          (g$parent-rcd-code$11181$CQIRF
                                                                            g$clause*$11214$CQIRF)))))
                                                                    (g$foo-rtd-code$11179$CQIRF
                                                                      g$foo$11215$CQIRF
                                                                      g$clause*$11214$CQIRF
                                                                      (g$parent-rtd-code$11180$CQIRF
                                                                        g$clause*$11214$CQIRF)))))
                                                                (g$get-record-predicate-name$11177$CQIRF
                                                                  g$namespec$11213$CQIRF))))
                                                            (g$get-mutator-indices$11185$CQIRF
                                                              g$fields$11220$CQIRF))))
                                                        (g$get-mutators$11186$CQIRF
                                                          g$foo$11215$CQIRF
                                                          g$fields$11220$CQIRF))))
                                                    (g$get-accessors$11187$CQIRF
                                                      g$foo$11215$CQIRF
                                                      g$fields$11220$CQIRF))))
                                                (g$enumerate$11188$CQIRF
                                                  g$fields$11220$CQIRF))))
                                            (g$get-fields$11184$CQIRF
                                              g$clause*$11214$CQIRF))))
                                        (g$get-record-constructor-name$11176$CQIRF
                                          g$namespec$11213$CQIRF))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$11175$CQIRF
                          g$namespec$11213$CQIRF)))))
                  (g$verify-clauses$11190$CQIRF
                    (case-lambda
                      ((g$x$11195$CQIRF g$cls*$11196$CQIRF)
                       (letrec* ((g$valid-kwds$11197$CQIRF
                                   (g$map$5946$CQIRF
                                     g$bless$9873$CQIRF
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$11198$CQIRF
                                   (case-lambda
                                     ((g$x$11210$CQIRF g$ls$11211$CQIRF)
                                      (if (pair? g$ls$11211$CQIRF)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$11212$CQIRF)
                                              (if g$t$11212$CQIRF
                                                g$t$11212$CQIRF
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$11198$CQIRF
                                                    g$x$11210$CQIRF
                                                    (cdr g$ls$11211$CQIRF))))))
                                           (g$free-id=?$9551$CQIRF
                                             g$x$11210$CQIRF
                                             (car g$ls$11211$CQIRF))))
                                        '#f)))))
                         ((letrec ((g$f$11199$CQIRF
                                     (case-lambda
                                       ((g$cls*$11200$CQIRF g$seen*$11201$CQIRF)
                                        (if (not (null? g$cls*$11200$CQIRF))
                                          ((case-lambda
                                             ((g$t$11202$CQIRF)
                                              ((case-lambda
                                                 ((g$ls/false$11203$CQIRF)
                                                  (if g$ls/false$11203$CQIRF
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$11204$CQIRF
                                                           g$rest$11205$CQIRF)
                                                         (if ((case-lambda
                                                                ((g$t$11206$CQIRF)
                                                                 (if g$t$11206$CQIRF
                                                                   g$t$11206$CQIRF
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$11198$CQIRF
                                                                            g$kwd$11204$CQIRF
                                                                            g$valid-kwds$11197$CQIRF))))))
                                                              (not (g$id?$9547$CQIRF
                                                                     g$kwd$11204$CQIRF)))
                                                           (g$syntax-violation$10028$CQIRF
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$11204$CQIRF)
                                                           (if (g$bound-id-member?$9554$CQIRF
                                                                 g$kwd$11204$CQIRF
                                                                 g$seen*$11201$CQIRF)
                                                             (g$syntax-violation$10028$CQIRF
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$11195$CQIRF
                                                               g$kwd$11204$CQIRF)
                                                             (g$f$11199$CQIRF
                                                               (cdr g$cls*$11200$CQIRF)
                                                               (cons
                                                                 g$kwd$11204$CQIRF
                                                                 g$seen*$11201$CQIRF))))))
                                                      g$ls/false$11203$CQIRF)
                                                    ((case-lambda
                                                       ((g$t$11207$CQIRF)
                                                        ((case-lambda
                                                           ((g$ls/false$11208$CQIRF)
                                                            (if g$ls/false$11208$CQIRF
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$11209$CQIRF)
                                                                   (g$syntax-violation$10028$CQIRF
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$11209$CQIRF)))
                                                                g$ls/false$11208$CQIRF)
                                                              (g$syntax-violation$10028$CQIRF
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$11207$CQIRF))))
                                                         (g$syntax-dispatch$9910$CQIRF
                                                           g$t$11207$CQIRF
                                                           'any))))
                                                     g$t$11202$CQIRF))))
                                               (g$syntax-dispatch$9910$CQIRF
                                                 g$t$11202$CQIRF
                                                 '(any . any)))))
                                           (car g$cls*$11200$CQIRF))
                                          (void))))))
                            g$f$11199$CQIRF)
                          g$cls*$11196$CQIRF
                          '()))))))
          ((case-lambda
             ((g$t$11191$CQIRF)
              ((case-lambda
                 ((g$ls/false$11192$CQIRF)
                  (if g$ls/false$11192$CQIRF
                    (apply
                      (case-lambda
                        ((g$namespec$11193$CQIRF g$clause*$11194$CQIRF)
                         (begin
                           (g$verify-clauses$11190$CQIRF
                             g$x$11173$CQIRF
                             g$clause*$11194$CQIRF)
                           (g$do-define-record$11189$CQIRF
                             g$namespec$11193$CQIRF
                             g$clause*$11194$CQIRF))))
                      g$ls/false$11192$CQIRF)
                    (g$syntax-violation$10028$CQIRF
                      '#f
                      '"invalid syntax"
                      g$t$11191$CQIRF))))
               (g$syntax-dispatch$9910$CQIRF
                 g$t$11191$CQIRF
                 '(_ any . each-any)))))
           g$x$11173$CQIRF)))))
   (g$define-condition-type-macro$9905$CQIRF
     g$define-condition-type-macro$13446$CQIRF
     (case-lambda
       ((g$x$11429$CQIRF)
        (letrec* ((g$mkname$11430$CQIRF
                    (case-lambda
                      ((g$name$11453$CQIRF g$suffix$11454$CQIRF)
                       (g$datum->syntax$10030$CQIRF
                         g$name$11453$CQIRF
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$10031$CQIRF g$name$11453$CQIRF))
                             g$suffix$11454$CQIRF)))))))
          ((case-lambda
             ((g$t$11431$CQIRF)
              ((case-lambda
                 ((g$ls/false$11432$CQIRF)
                  (if (if g$ls/false$11432$CQIRF
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$11433$CQIRF
                                 g$name$11434$CQIRF
                                 g$super$11435$CQIRF
                                 g$constructor$11436$CQIRF
                                 g$predicate$11437$CQIRF
                                 g$field*$11438$CQIRF
                                 g$accessor*$11439$CQIRF)
                               (if (g$id?$9547$CQIRF g$name$11434$CQIRF)
                                 (if (g$id?$9547$CQIRF g$super$11435$CQIRF)
                                   (if (g$id?$9547$CQIRF
                                         g$constructor$11436$CQIRF)
                                     (if (g$id?$9547$CQIRF
                                           g$predicate$11437$CQIRF)
                                       (if (g$for-all$5944$CQIRF
                                             g$id?$9547$CQIRF
                                             g$field*$11438$CQIRF)
                                         (begin
                                           '#f
                                           (g$for-all$5944$CQIRF
                                             g$id?$9547$CQIRF
                                             g$accessor*$11439$CQIRF))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$11432$CQIRF))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$11440$CQIRF
                           g$name$11441$CQIRF
                           g$super$11442$CQIRF
                           g$constructor$11443$CQIRF
                           g$predicate$11444$CQIRF
                           g$field*$11445$CQIRF
                           g$accessor*$11446$CQIRF)
                         ((case-lambda
                            ((g$aux-accessor*$11447$CQIRF)
                             (g$bless$9873$CQIRF
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$11441$CQIRF
                                         g$constructor$11443$CQIRF
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$11442$CQIRF)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$5946$CQIRF
                                               (case-lambda
                                                 ((g$field$11448$CQIRF
                                                    g$aux$11449$CQIRF)
                                                  (list
                                                    'immutable
                                                    g$field$11448$CQIRF
                                                    g$aux$11449$CQIRF)))
                                               g$field*$11445$CQIRF
                                               g$aux-accessor*$11447$CQIRF))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$11444$CQIRF
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$11441$CQIRF)))
                                     (g$map$5946$CQIRF
                                       (case-lambda
                                         ((g$accessor$11450$CQIRF
                                            g$aux$11451$CQIRF)
                                          (list
                                            'define
                                            g$accessor$11450$CQIRF
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$11441$CQIRF)
                                              g$aux$11451$CQIRF))))
                                       g$accessor*$11446$CQIRF
                                       g$aux-accessor*$11447$CQIRF)))))))
                          (g$map$5946$CQIRF
                            (case-lambda ((g$x$11452$CQIRF) (gensym)))
                            g$accessor*$11446$CQIRF))))
                      g$ls/false$11432$CQIRF)
                    (g$syntax-violation$10028$CQIRF
                      '#f
                      '"invalid syntax"
                      g$t$11431$CQIRF))))
               (g$syntax-dispatch$9910$CQIRF
                 g$t$11431$CQIRF
                 '(any any any any any . #(each (any any)))))))
           g$x$11429$CQIRF)))))
   (g$incorrect-usage-macro$9906$CQIRF
     g$incorrect-usage-macro$13447$CQIRF
     (case-lambda
       ((g$e$11455$CQIRF)
        (g$syntax-violation$10028$CQIRF
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$11455$CQIRF))))
   (g$parameterize-macro$9907$CQIRF
     g$parameterize-macro$13448$CQIRF
     (case-lambda
       ((g$e$11456$CQIRF)
        ((case-lambda
           ((g$t$11457$CQIRF)
            ((case-lambda
               ((g$ls/false$11458$CQIRF)
                (if g$ls/false$11458$CQIRF
                  (apply
                    (case-lambda
                      ((g$b$11459$CQIRF g$b*$11460$CQIRF)
                       (g$bless$9873$CQIRF
                         (cons
                           'let
                           (cons
                             '()
                             (cons g$b$11459$CQIRF g$b*$11460$CQIRF))))))
                    g$ls/false$11458$CQIRF)
                  ((case-lambda
                     ((g$t$11461$CQIRF)
                      ((case-lambda
                         ((g$ls/false$11462$CQIRF)
                          (if g$ls/false$11462$CQIRF
                            (apply
                              (case-lambda
                                ((g$olhs*$11463$CQIRF
                                   g$orhs*$11464$CQIRF
                                   g$b$11465$CQIRF
                                   g$b*$11466$CQIRF)
                                 ((case-lambda
                                    ((g$lhs*$11467$CQIRF g$rhs*$11468$CQIRF)
                                     (g$bless$9873$CQIRF
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$11467$CQIRF
                                             g$rhs*$11468$CQIRF)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$5946$CQIRF
                                                       (case-lambda
                                                         ((g$lhs$11469$CQIRF
                                                            g$rhs$11470$CQIRF)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$11469$CQIRF)))
                                                            (list
                                                              g$lhs$11469$CQIRF
                                                              g$rhs$11470$CQIRF)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$11470$CQIRF
                                                                '(t))))))
                                                       g$lhs*$11467$CQIRF
                                                       g$rhs*$11468$CQIRF)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$11465$CQIRF
                                                         g$b*$11466$CQIRF)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$11463$CQIRF
                                           g$orhs*$11464$CQIRF)))))
                                  (g$generate-temporaries$10018$CQIRF
                                    g$olhs*$11463$CQIRF)
                                  (g$generate-temporaries$10018$CQIRF
                                    g$orhs*$11464$CQIRF))))
                              g$ls/false$11462$CQIRF)
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"invalid syntax"
                              g$t$11461$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$11461$CQIRF
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$11457$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$11457$CQIRF
               '(_ () any . each-any)))))
         g$e$11456$CQIRF))))
   (g$foreign-call-transformer$9908$CQIRF
     g$foreign-call-transformer$13449$CQIRF
     (case-lambda
       ((g$e$11471$CQIRF g$r$11472$CQIRF g$mr$11473$CQIRF)
        ((case-lambda
           ((g$t$11474$CQIRF)
            ((case-lambda
               ((g$ls/false$11475$CQIRF)
                (if g$ls/false$11475$CQIRF
                  (apply
                    (case-lambda
                      ((g$name$11476$CQIRF g$arg*$11477$CQIRF)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$9928$CQIRF
                             g$name$11476$CQIRF
                             g$r$11472$CQIRF
                             g$mr$11473$CQIRF)
                           (g$chi-expr*$9926$CQIRF
                             g$arg*$11477$CQIRF
                             g$r$11472$CQIRF
                             g$mr$11473$CQIRF)))))
                    g$ls/false$11475$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$11474$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$11474$CQIRF
               '(_ any . each-any)))))
         g$e$11471$CQIRF))))
   (g$convert-pattern$9909$CQIRF
     g$convert-pattern$13450$CQIRF
     (case-lambda
       ((g$pattern$11478$CQIRF g$keys$11479$CQIRF)
        (letrec* ((g$cvt*$11480$CQIRF
                    (case-lambda
                      ((g$p*$11560$CQIRF g$n$11561$CQIRF g$ids$11562$CQIRF)
                       (if (null? g$p*$11560$CQIRF)
                         (values '() g$ids$11562$CQIRF)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$11480$CQIRF
                                (cdr g$p*$11560$CQIRF)
                                g$n$11561$CQIRF
                                g$ids$11562$CQIRF)))
                           (case-lambda
                             ((g$y$11565$CQIRF g$ids$11566$CQIRF)
                              ((case-lambda
                                 ((g$ids$11567$CQIRF g$y$11568$CQIRF)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$11481$CQIRF
                                         (car g$p*$11560$CQIRF)
                                         g$n$11561$CQIRF
                                         g$ids$11567$CQIRF)))
                                    (case-lambda
                                      ((g$x$11571$CQIRF g$ids$11572$CQIRF)
                                       ((case-lambda
                                          ((g$ids$11573$CQIRF g$x$11574$CQIRF)
                                           (values
                                             (cons
                                               g$x$11574$CQIRF
                                               g$y$11568$CQIRF)
                                             g$ids$11573$CQIRF)))
                                        g$ids$11572$CQIRF
                                        g$x$11571$CQIRF))))))
                               g$ids$11566$CQIRF
                               g$y$11565$CQIRF))))))))
                  (g$cvt$11481$CQIRF
                    (case-lambda
                      ((g$p$11482$CQIRF g$n$11483$CQIRF g$ids$11484$CQIRF)
                       ((case-lambda
                          ((g$t$11485$CQIRF)
                           ((case-lambda
                              ((g$ls/false$11486$CQIRF)
                               (if (if g$ls/false$11486$CQIRF
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$11487$CQIRF)
                                            (g$id?$9547$CQIRF
                                              g$id$11487$CQIRF)))
                                         g$ls/false$11486$CQIRF))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$11488$CQIRF)
                                      (if (g$bound-id-member?$9554$CQIRF
                                            g$p$11482$CQIRF
                                            g$keys$11479$CQIRF)
                                        (values
                                          (vector 'free-id g$p$11482$CQIRF)
                                          g$ids$11484$CQIRF)
                                        (if (g$free-id=?$9551$CQIRF
                                              g$p$11482$CQIRF
                                              (g$scheme-stx$9853$CQIRF '_))
                                          (values '_ g$ids$11484$CQIRF)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$11482$CQIRF
                                                g$n$11483$CQIRF)
                                              g$ids$11484$CQIRF))))))
                                   g$ls/false$11486$CQIRF)
                                 ((case-lambda
                                    ((g$t$11489$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$11490$CQIRF)
                                         (if (if g$ls/false$11490$CQIRF
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$11491$CQIRF
                                                        g$dots$11492$CQIRF)
                                                      (g$ellipsis?$9911$CQIRF
                                                        g$dots$11492$CQIRF)))
                                                   g$ls/false$11490$CQIRF))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$11493$CQIRF
                                                  g$dots$11494$CQIRF)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$11481$CQIRF
                                                       g$p$11493$CQIRF
                                                       (+ g$n$11483$CQIRF '1)
                                                       g$ids$11484$CQIRF)))
                                                  (case-lambda
                                                    ((g$p$11497$CQIRF
                                                       g$ids$11498$CQIRF)
                                                     ((case-lambda
                                                        ((g$ids$11499$CQIRF
                                                           g$p$11500$CQIRF)
                                                         (values
                                                           (if (eq? g$p$11500$CQIRF
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$11500$CQIRF))
                                                           g$ids$11499$CQIRF)))
                                                      g$ids$11498$CQIRF
                                                      g$p$11497$CQIRF))))))
                                             g$ls/false$11490$CQIRF)
                                           ((case-lambda
                                              ((g$t$11501$CQIRF)
                                               ((case-lambda
                                                  ((g$ls/false$11502$CQIRF)
                                                   (if (if g$ls/false$11502$CQIRF
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$11503$CQIRF
                                                                  g$dots$11504$CQIRF
                                                                  g$ys$11505$CQIRF
                                                                  g$z$11506$CQIRF)
                                                                (g$ellipsis?$9911$CQIRF
                                                                  g$dots$11504$CQIRF)))
                                                             g$ls/false$11502$CQIRF))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$11507$CQIRF
                                                            g$dots$11508$CQIRF
                                                            g$ys$11509$CQIRF
                                                            g$z$11510$CQIRF)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$11481$CQIRF
                                                                 g$z$11510$CQIRF
                                                                 g$n$11483$CQIRF
                                                                 g$ids$11484$CQIRF)))
                                                            (case-lambda
                                                              ((g$z$11513$CQIRF
                                                                 g$ids$11514$CQIRF)
                                                               ((case-lambda
                                                                  ((g$ids$11515$CQIRF
                                                                     g$z$11516$CQIRF)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$11480$CQIRF
                                                                          g$ys$11509$CQIRF
                                                                          g$n$11483$CQIRF
                                                                          g$ids$11515$CQIRF)))
                                                                     (case-lambda
                                                                       ((g$ys$11519$CQIRF
                                                                          g$ids$11520$CQIRF)
                                                                        ((case-lambda
                                                                           ((g$ids$11521$CQIRF
                                                                              g$ys$11522$CQIRF)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$11481$CQIRF
                                                                                   g$x$11507$CQIRF
                                                                                   (+ g$n$11483$CQIRF
                                                                                      '1)
                                                                                   g$ids$11521$CQIRF)))
                                                                              (case-lambda
                                                                                ((g$x$11525$CQIRF
                                                                                   g$ids$11526$CQIRF)
                                                                                 ((case-lambda
                                                                                    ((g$ids$11527$CQIRF
                                                                                       g$x$11528$CQIRF)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$11528$CQIRF
                                                                                         (g$reverse$6624$CQIRF
                                                                                           g$ys$11522$CQIRF)
                                                                                         g$z$11516$CQIRF)
                                                                                       g$ids$11527$CQIRF)))
                                                                                  g$ids$11526$CQIRF
                                                                                  g$x$11525$CQIRF))))))
                                                                         g$ids$11520$CQIRF
                                                                         g$ys$11519$CQIRF))))))
                                                                g$ids$11514$CQIRF
                                                                g$z$11513$CQIRF))))))
                                                       g$ls/false$11502$CQIRF)
                                                     ((case-lambda
                                                        ((g$t$11529$CQIRF)
                                                         ((case-lambda
                                                            ((g$ls/false$11530$CQIRF)
                                                             (if g$ls/false$11530$CQIRF
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$11531$CQIRF
                                                                      g$y$11532$CQIRF)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$11481$CQIRF
                                                                           g$y$11532$CQIRF
                                                                           g$n$11483$CQIRF
                                                                           g$ids$11484$CQIRF)))
                                                                      (case-lambda
                                                                        ((g$y$11535$CQIRF
                                                                           g$ids$11536$CQIRF)
                                                                         ((case-lambda
                                                                            ((g$ids$11537$CQIRF
                                                                               g$y$11538$CQIRF)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$11481$CQIRF
                                                                                    g$x$11531$CQIRF
                                                                                    g$n$11483$CQIRF
                                                                                    g$ids$11537$CQIRF)))
                                                                               (case-lambda
                                                                                 ((g$x$11541$CQIRF
                                                                                    g$ids$11542$CQIRF)
                                                                                  ((case-lambda
                                                                                     ((g$ids$11543$CQIRF
                                                                                        g$x$11544$CQIRF)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$11544$CQIRF
                                                                                          g$y$11538$CQIRF)
                                                                                        g$ids$11543$CQIRF)))
                                                                                   g$ids$11542$CQIRF
                                                                                   g$x$11541$CQIRF))))))
                                                                          g$ids$11536$CQIRF
                                                                          g$y$11535$CQIRF))))))
                                                                 g$ls/false$11530$CQIRF)
                                                               ((case-lambda
                                                                  ((g$t$11545$CQIRF)
                                                                   ((case-lambda
                                                                      ((g$ls/false$11546$CQIRF)
                                                                       (if g$ls/false$11546$CQIRF
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$11484$CQIRF)))
                                                                           g$ls/false$11546$CQIRF)
                                                                         ((case-lambda
                                                                            ((g$t$11547$CQIRF)
                                                                             ((case-lambda
                                                                                ((g$ls/false$11548$CQIRF)
                                                                                 (if (if g$ls/false$11548$CQIRF
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$11549$CQIRF)
                                                                                              (not (g$stx?$9519$CQIRF
                                                                                                     g$p$11549$CQIRF))))
                                                                                           g$ls/false$11548$CQIRF))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$11550$CQIRF)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$11481$CQIRF
                                                                                               g$p$11550$CQIRF
                                                                                               g$n$11483$CQIRF
                                                                                               g$ids$11484$CQIRF)))
                                                                                          (case-lambda
                                                                                            ((g$p$11553$CQIRF
                                                                                               g$ids$11554$CQIRF)
                                                                                             ((case-lambda
                                                                                                ((g$ids$11555$CQIRF
                                                                                                   g$p$11556$CQIRF)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$11556$CQIRF)
                                                                                                   g$ids$11555$CQIRF)))
                                                                                              g$ids$11554$CQIRF
                                                                                              g$p$11553$CQIRF))))))
                                                                                     g$ls/false$11548$CQIRF)
                                                                                   ((case-lambda
                                                                                      ((g$t$11557$CQIRF)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$11558$CQIRF)
                                                                                           (if g$ls/false$11558$CQIRF
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$11559$CQIRF)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$9558$CQIRF
                                                                                                        g$datum$11559$CQIRF))
                                                                                                    g$ids$11484$CQIRF)))
                                                                                               g$ls/false$11558$CQIRF)
                                                                                             (g$syntax-violation$10028$CQIRF
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$11557$CQIRF))))
                                                                                        (g$syntax-dispatch$9910$CQIRF
                                                                                          g$t$11557$CQIRF
                                                                                          'any))))
                                                                                    g$t$11547$CQIRF))))
                                                                              (g$syntax-dispatch$9910$CQIRF
                                                                                g$t$11547$CQIRF
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$11545$CQIRF))))
                                                                    (g$syntax-dispatch$9910$CQIRF
                                                                      g$t$11545$CQIRF
                                                                      '()))))
                                                                g$t$11529$CQIRF))))
                                                          (g$syntax-dispatch$9910$CQIRF
                                                            g$t$11529$CQIRF
                                                            '(any . any)))))
                                                      g$t$11501$CQIRF))))
                                                (g$syntax-dispatch$9910$CQIRF
                                                  g$t$11501$CQIRF
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$11489$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$11489$CQIRF
                                        '(any any)))))
                                  g$t$11485$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$11485$CQIRF
                              'any))))
                        g$p$11482$CQIRF)))))
          (g$cvt$11481$CQIRF g$pattern$11478$CQIRF '0 '())))))
   (g$syntax-dispatch$9910$CQIRF
     g$syntax-dispatch$13451$CQIRF
     ((case-lambda
        (()
         (letrec* ((g$stx^$11575$CQIRF
                     (case-lambda
                       ((g$e$11685$CQIRF
                          g$m*$11686$CQIRF
                          g$s*$11687$CQIRF
                          g$ae*$11688$CQIRF)
                        (if (if (null? g$m*$11686$CQIRF)
                              (if (null? g$s*$11687$CQIRF)
                                (begin '#f (null? g$ae*$11688$CQIRF))
                                '#f)
                              '#f)
                          g$e$11685$CQIRF
                          (g$mkstx$9535$CQIRF
                            g$e$11685$CQIRF
                            g$m*$11686$CQIRF
                            g$s*$11687$CQIRF
                            g$ae*$11688$CQIRF)))))
                   (g$match-each$11576$CQIRF
                     (case-lambda
                       ((g$e$11669$CQIRF
                          g$p$11670$CQIRF
                          g$m*$11671$CQIRF
                          g$s*$11672$CQIRF
                          g$ae*$11673$CQIRF)
                        (if (pair? g$e$11669$CQIRF)
                          ((case-lambda
                             ((g$first$11674$CQIRF)
                              (if g$first$11674$CQIRF
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$rest$11675$CQIRF)
                                      (if g$rest$11675$CQIRF
                                        (begin
                                          '#f
                                          (cons
                                            g$first$11674$CQIRF
                                            g$rest$11675$CQIRF))
                                        '#f)))
                                   (g$match-each$11576$CQIRF
                                     (cdr g$e$11669$CQIRF)
                                     g$p$11670$CQIRF
                                     g$m*$11671$CQIRF
                                     g$s*$11672$CQIRF
                                     g$ae*$11673$CQIRF)))
                                '#f)))
                           (g$match$11582$CQIRF
                             (car g$e$11669$CQIRF)
                             g$p$11670$CQIRF
                             g$m*$11671$CQIRF
                             g$s*$11672$CQIRF
                             g$ae*$11673$CQIRF
                             '()))
                          (if (null? g$e$11669$CQIRF)
                            '()
                            (if (g$stx?$9519$CQIRF g$e$11669$CQIRF)
                              (if (not (g$top-marked?$9481$CQIRF
                                         g$m*$11671$CQIRF))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$9534$CQIRF
                                         g$m*$11671$CQIRF
                                         g$s*$11672$CQIRF
                                         g$ae*$11673$CQIRF
                                         g$e$11669$CQIRF)))
                                    (case-lambda
                                      ((g$m*$11679$CQIRF
                                         g$s*$11680$CQIRF
                                         g$ae*$11681$CQIRF)
                                       ((case-lambda
                                          ((g$ae*$11682$CQIRF
                                             g$s*$11683$CQIRF
                                             g$m*$11684$CQIRF)
                                           (g$match-each$11576$CQIRF
                                             (g$stx-expr$9521$CQIRF
                                               g$e$11669$CQIRF)
                                             g$p$11670$CQIRF
                                             g$m*$11684$CQIRF
                                             g$s*$11683$CQIRF
                                             g$ae*$11682$CQIRF)))
                                        g$ae*$11681$CQIRF
                                        g$s*$11680$CQIRF
                                        g$m*$11679$CQIRF)))))
                                '#f)
                              (if (annotation? g$e$11669$CQIRF)
                                (g$match-each$11576$CQIRF
                                  (annotation-expression g$e$11669$CQIRF)
                                  g$p$11670$CQIRF
                                  g$m*$11671$CQIRF
                                  g$s*$11672$CQIRF
                                  g$ae*$11673$CQIRF)
                                '#f)))))))
                   (g$match-each+$11577$CQIRF
                     (case-lambda
                       ((g$e$11637$CQIRF
                          g$x-pat$11638$CQIRF
                          g$y-pat$11639$CQIRF
                          g$z-pat$11640$CQIRF
                          g$m*$11641$CQIRF
                          g$s*$11642$CQIRF
                          g$ae*$11643$CQIRF
                          g$r$11644$CQIRF)
                        ((letrec ((g$f$11645$CQIRF
                                    (case-lambda
                                      ((g$e$11646$CQIRF
                                         g$m*$11647$CQIRF
                                         g$s*$11648$CQIRF
                                         g$ae*$11649$CQIRF)
                                       (if (pair? g$e$11646$CQIRF)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$f$11645$CQIRF
                                                (cdr g$e$11646$CQIRF)
                                                g$m*$11647$CQIRF
                                                g$s*$11648$CQIRF
                                                g$ae*$11649$CQIRF)))
                                           (case-lambda
                                             ((g$xr*$11653$CQIRF
                                                g$y-pat$11654$CQIRF
                                                g$r$11655$CQIRF)
                                              ((case-lambda
                                                 ((g$r$11656$CQIRF
                                                    g$y-pat$11657$CQIRF
                                                    g$xr*$11658$CQIRF)
                                                  (if g$r$11656$CQIRF
                                                    (if (null?
                                                          g$y-pat$11657$CQIRF)
                                                      ((case-lambda
                                                         ((g$xr$11659$CQIRF)
                                                          (if g$xr$11659$CQIRF
                                                            (values
                                                              (cons
                                                                g$xr$11659$CQIRF
                                                                g$xr*$11658$CQIRF)
                                                              g$y-pat$11657$CQIRF
                                                              g$r$11656$CQIRF)
                                                            (values
                                                              '#f
                                                              '#f
                                                              '#f))))
                                                       (g$match$11582$CQIRF
                                                         (car g$e$11646$CQIRF)
                                                         g$x-pat$11638$CQIRF
                                                         g$m*$11647$CQIRF
                                                         g$s*$11648$CQIRF
                                                         g$ae*$11649$CQIRF
                                                         '()))
                                                      (values
                                                        '()
                                                        (cdr g$y-pat$11657$CQIRF)
                                                        (g$match$11582$CQIRF
                                                          (car g$e$11646$CQIRF)
                                                          (car g$y-pat$11657$CQIRF)
                                                          g$m*$11647$CQIRF
                                                          g$s*$11648$CQIRF
                                                          g$ae*$11649$CQIRF
                                                          g$r$11656$CQIRF)))
                                                    (values '#f '#f '#f))))
                                               g$r$11655$CQIRF
                                               g$y-pat$11654$CQIRF
                                               g$xr*$11653$CQIRF))))
                                         (if (g$stx?$9519$CQIRF g$e$11646$CQIRF)
                                           (if (g$top-marked?$9481$CQIRF
                                                 g$m*$11647$CQIRF)
                                             (values
                                               '()
                                               g$y-pat$11639$CQIRF
                                               (g$match$11582$CQIRF
                                                 g$e$11646$CQIRF
                                                 g$z-pat$11640$CQIRF
                                                 g$m*$11647$CQIRF
                                                 g$s*$11648$CQIRF
                                                 g$ae*$11649$CQIRF
                                                 g$r$11644$CQIRF))
                                             (call-with-values
                                               (case-lambda
                                                 (()
                                                  (g$join-wraps$9534$CQIRF
                                                    g$m*$11647$CQIRF
                                                    g$s*$11648$CQIRF
                                                    g$ae*$11649$CQIRF
                                                    g$e$11646$CQIRF)))
                                               (case-lambda
                                                 ((g$m*$11663$CQIRF
                                                    g$s*$11664$CQIRF
                                                    g$ae*$11665$CQIRF)
                                                  ((case-lambda
                                                     ((g$ae*$11666$CQIRF
                                                        g$s*$11667$CQIRF
                                                        g$m*$11668$CQIRF)
                                                      (g$f$11645$CQIRF
                                                        (g$stx-expr$9521$CQIRF
                                                          g$e$11646$CQIRF)
                                                        g$m*$11668$CQIRF
                                                        g$s*$11667$CQIRF
                                                        g$ae*$11666$CQIRF)))
                                                   g$ae*$11665$CQIRF
                                                   g$s*$11664$CQIRF
                                                   g$m*$11663$CQIRF)))))
                                           (if (annotation? g$e$11646$CQIRF)
                                             (g$f$11645$CQIRF
                                               (annotation-expression
                                                 g$e$11646$CQIRF)
                                               g$m*$11647$CQIRF
                                               g$s*$11648$CQIRF
                                               g$ae*$11649$CQIRF)
                                             (values
                                               '()
                                               g$y-pat$11639$CQIRF
                                               (g$match$11582$CQIRF
                                                 g$e$11646$CQIRF
                                                 g$z-pat$11640$CQIRF
                                                 g$m*$11647$CQIRF
                                                 g$s*$11648$CQIRF
                                                 g$ae*$11649$CQIRF
                                                 g$r$11644$CQIRF)))))))))
                           g$f$11645$CQIRF)
                         g$e$11637$CQIRF
                         g$m*$11641$CQIRF
                         g$s*$11642$CQIRF
                         g$ae*$11643$CQIRF))))
                   (g$match-each-any$11578$CQIRF
                     (case-lambda
                       ((g$e$11623$CQIRF
                          g$m*$11624$CQIRF
                          g$s*$11625$CQIRF
                          g$ae*$11626$CQIRF)
                        (if (pair? g$e$11623$CQIRF)
                          ((case-lambda
                             ((g$l$11627$CQIRF)
                              (if g$l$11627$CQIRF
                                (begin
                                  '#f
                                  (cons
                                    (g$stx^$11575$CQIRF
                                      (car g$e$11623$CQIRF)
                                      g$m*$11624$CQIRF
                                      g$s*$11625$CQIRF
                                      g$ae*$11626$CQIRF)
                                    g$l$11627$CQIRF))
                                '#f)))
                           (g$match-each-any$11578$CQIRF
                             (cdr g$e$11623$CQIRF)
                             g$m*$11624$CQIRF
                             g$s*$11625$CQIRF
                             g$ae*$11626$CQIRF))
                          (if (null? g$e$11623$CQIRF)
                            '()
                            (if (g$stx?$9519$CQIRF g$e$11623$CQIRF)
                              (if (not (g$top-marked?$9481$CQIRF
                                         g$m*$11624$CQIRF))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$9534$CQIRF
                                         g$m*$11624$CQIRF
                                         g$s*$11625$CQIRF
                                         g$ae*$11626$CQIRF
                                         g$e$11623$CQIRF)))
                                    (case-lambda
                                      ((g$m*$11631$CQIRF
                                         g$s*$11632$CQIRF
                                         g$ae*$11633$CQIRF)
                                       ((case-lambda
                                          ((g$ae*$11634$CQIRF
                                             g$s*$11635$CQIRF
                                             g$m*$11636$CQIRF)
                                           (g$match-each-any$11578$CQIRF
                                             (g$stx-expr$9521$CQIRF
                                               g$e$11623$CQIRF)
                                             g$m*$11636$CQIRF
                                             g$s*$11635$CQIRF
                                             g$ae*$11634$CQIRF)))
                                        g$ae*$11633$CQIRF
                                        g$s*$11632$CQIRF
                                        g$m*$11631$CQIRF)))))
                                '#f)
                              (if (annotation? g$e$11623$CQIRF)
                                (g$match-each-any$11578$CQIRF
                                  (annotation-expression g$e$11623$CQIRF)
                                  g$m*$11624$CQIRF
                                  g$s*$11625$CQIRF
                                  g$ae*$11626$CQIRF)
                                '#f)))))))
                   (g$match-empty$11579$CQIRF
                     (case-lambda
                       ((g$p$11620$CQIRF g$r$11621$CQIRF)
                        (if (null? g$p$11620$CQIRF)
                          g$r$11621$CQIRF
                          (if (eq? g$p$11620$CQIRF '_)
                            g$r$11621$CQIRF
                            (if (eq? g$p$11620$CQIRF 'any)
                              (cons '() g$r$11621$CQIRF)
                              (if (pair? g$p$11620$CQIRF)
                                (g$match-empty$11579$CQIRF
                                  (car g$p$11620$CQIRF)
                                  (g$match-empty$11579$CQIRF
                                    (cdr g$p$11620$CQIRF)
                                    g$r$11621$CQIRF))
                                (if (eq? g$p$11620$CQIRF 'each-any)
                                  (cons '() g$r$11621$CQIRF)
                                  ((case-lambda
                                     ((g$t$11622$CQIRF)
                                      (if (eqv? g$t$11622$CQIRF 'each)
                                        (g$match-empty$11579$CQIRF
                                          (vector-ref g$p$11620$CQIRF '1)
                                          g$r$11621$CQIRF)
                                        (if (eqv? g$t$11622$CQIRF 'each+)
                                          (g$match-empty$11579$CQIRF
                                            (vector-ref g$p$11620$CQIRF '1)
                                            (g$match-empty$11579$CQIRF
                                              (g$reverse$6624$CQIRF
                                                (vector-ref g$p$11620$CQIRF '2))
                                              (g$match-empty$11579$CQIRF
                                                (vector-ref g$p$11620$CQIRF '3)
                                                g$r$11621$CQIRF)))
                                          (if (g$memv$5939$CQIRF
                                                g$t$11622$CQIRF
                                                '(free-id atom))
                                            g$r$11621$CQIRF
                                            (if (g$memv$5939$CQIRF
                                                  g$t$11622$CQIRF
                                                  '(scheme-id atom))
                                              g$r$11621$CQIRF
                                              (if (eqv? g$t$11622$CQIRF 'vector)
                                                (g$match-empty$11579$CQIRF
                                                  (vector-ref
                                                    g$p$11620$CQIRF
                                                    '1)
                                                  g$r$11621$CQIRF)
                                                (assertion-violation
                                                  'syntax-dispatch
                                                  '"invalid pattern"
                                                  g$p$11620$CQIRF))))))))
                                   (vector-ref g$p$11620$CQIRF '0))))))))))
                   (g$combine$11580$CQIRF
                     (case-lambda
                       ((g$r*$11618$CQIRF g$r$11619$CQIRF)
                        (if (null? (car g$r*$11618$CQIRF))
                          g$r$11619$CQIRF
                          (cons
                            (g$map$5946$CQIRF car g$r*$11618$CQIRF)
                            (g$combine$11580$CQIRF
                              (g$map$5946$CQIRF cdr g$r*$11618$CQIRF)
                              g$r$11619$CQIRF))))))
                   (g$match*$11581$CQIRF
                     (case-lambda
                       ((g$e$11600$CQIRF
                          g$p$11601$CQIRF
                          g$m*$11602$CQIRF
                          g$s*$11603$CQIRF
                          g$ae*$11604$CQIRF
                          g$r$11605$CQIRF)
                        (if (null? g$p$11601$CQIRF)
                          (if (null? g$e$11600$CQIRF)
                            (begin '#f g$r$11605$CQIRF)
                            '#f)
                          (if (pair? g$p$11601$CQIRF)
                            (if (pair? g$e$11600$CQIRF)
                              (begin
                                '#f
                                (g$match$11582$CQIRF
                                  (car g$e$11600$CQIRF)
                                  (car g$p$11601$CQIRF)
                                  g$m*$11602$CQIRF
                                  g$s*$11603$CQIRF
                                  g$ae*$11604$CQIRF
                                  (g$match$11582$CQIRF
                                    (cdr g$e$11600$CQIRF)
                                    (cdr g$p$11601$CQIRF)
                                    g$m*$11602$CQIRF
                                    g$s*$11603$CQIRF
                                    g$ae*$11604$CQIRF
                                    g$r$11605$CQIRF)))
                              '#f)
                            (if (eq? g$p$11601$CQIRF 'each-any)
                              ((case-lambda
                                 ((g$l$11606$CQIRF)
                                  (if g$l$11606$CQIRF
                                    (begin
                                      '#f
                                      (cons g$l$11606$CQIRF g$r$11605$CQIRF))
                                    '#f)))
                               (g$match-each-any$11578$CQIRF
                                 g$e$11600$CQIRF
                                 g$m*$11602$CQIRF
                                 g$s*$11603$CQIRF
                                 g$ae*$11604$CQIRF))
                              ((case-lambda
                                 ((g$t$11607$CQIRF)
                                  (if (eqv? g$t$11607$CQIRF 'each)
                                    (if (null? g$e$11600$CQIRF)
                                      (g$match-empty$11579$CQIRF
                                        (vector-ref g$p$11601$CQIRF '1)
                                        g$r$11605$CQIRF)
                                      ((case-lambda
                                         ((g$r*$11608$CQIRF)
                                          (if g$r*$11608$CQIRF
                                            (begin
                                              '#f
                                              (g$combine$11580$CQIRF
                                                g$r*$11608$CQIRF
                                                g$r$11605$CQIRF))
                                            '#f)))
                                       (g$match-each$11576$CQIRF
                                         g$e$11600$CQIRF
                                         (vector-ref g$p$11601$CQIRF '1)
                                         g$m*$11602$CQIRF
                                         g$s*$11603$CQIRF
                                         g$ae*$11604$CQIRF)))
                                    (if (eqv? g$t$11607$CQIRF 'free-id)
                                      (if (g$symbol?$6617$CQIRF g$e$11600$CQIRF)
                                        (if (g$top-marked?$9481$CQIRF
                                              g$m*$11602$CQIRF)
                                          (if (g$free-id=?$9551$CQIRF
                                                (g$stx^$11575$CQIRF
                                                  g$e$11600$CQIRF
                                                  g$m*$11602$CQIRF
                                                  g$s*$11603$CQIRF
                                                  g$ae*$11604$CQIRF)
                                                (vector-ref g$p$11601$CQIRF '1))
                                            (begin '#f g$r$11605$CQIRF)
                                            '#f)
                                          '#f)
                                        '#f)
                                      (if (eqv? g$t$11607$CQIRF 'scheme-id)
                                        (if (g$symbol?$6617$CQIRF
                                              g$e$11600$CQIRF)
                                          (if (g$top-marked?$9481$CQIRF
                                                g$m*$11602$CQIRF)
                                            (if (g$free-id=?$9551$CQIRF
                                                  (g$stx^$11575$CQIRF
                                                    g$e$11600$CQIRF
                                                    g$m*$11602$CQIRF
                                                    g$s*$11603$CQIRF
                                                    g$ae*$11604$CQIRF)
                                                  (g$scheme-stx$9853$CQIRF
                                                    (vector-ref
                                                      g$p$11601$CQIRF
                                                      '1)))
                                              (begin '#f g$r$11605$CQIRF)
                                              '#f)
                                            '#f)
                                          '#f)
                                        (if (eqv? g$t$11607$CQIRF 'each+)
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$match-each+$11577$CQIRF
                                                 g$e$11600$CQIRF
                                                 (vector-ref g$p$11601$CQIRF '1)
                                                 (vector-ref g$p$11601$CQIRF '2)
                                                 (vector-ref g$p$11601$CQIRF '3)
                                                 g$m*$11602$CQIRF
                                                 g$s*$11603$CQIRF
                                                 g$ae*$11604$CQIRF
                                                 g$r$11605$CQIRF)))
                                            (case-lambda
                                              ((g$xr*$11612$CQIRF
                                                 g$y-pat$11613$CQIRF
                                                 g$r$11614$CQIRF)
                                               ((case-lambda
                                                  ((g$r$11615$CQIRF
                                                     g$y-pat$11616$CQIRF
                                                     g$xr*$11617$CQIRF)
                                                   (if g$r$11615$CQIRF
                                                     (if (null?
                                                           g$y-pat$11616$CQIRF)
                                                       (begin
                                                         '#f
                                                         (if (null?
                                                               g$xr*$11617$CQIRF)
                                                           (g$match-empty$11579$CQIRF
                                                             (vector-ref
                                                               g$p$11601$CQIRF
                                                               '1)
                                                             g$r$11615$CQIRF)
                                                           (g$combine$11580$CQIRF
                                                             g$xr*$11617$CQIRF
                                                             g$r$11615$CQIRF)))
                                                       '#f)
                                                     '#f)))
                                                g$r$11614$CQIRF
                                                g$y-pat$11613$CQIRF
                                                g$xr*$11612$CQIRF))))
                                          (if (eqv? g$t$11607$CQIRF 'atom)
                                            (if (equal?
                                                  (vector-ref
                                                    g$p$11601$CQIRF
                                                    '1)
                                                  (g$strip$9557$CQIRF
                                                    g$e$11600$CQIRF
                                                    g$m*$11602$CQIRF))
                                              (begin '#f g$r$11605$CQIRF)
                                              '#f)
                                            (if (eqv? g$t$11607$CQIRF 'vector)
                                              (if (g$vector?$6615$CQIRF
                                                    g$e$11600$CQIRF)
                                                (begin
                                                  '#f
                                                  (g$match$11582$CQIRF
                                                    (vector->list
                                                      g$e$11600$CQIRF)
                                                    (vector-ref
                                                      g$p$11601$CQIRF
                                                      '1)
                                                    g$m*$11602$CQIRF
                                                    g$s*$11603$CQIRF
                                                    g$ae*$11604$CQIRF
                                                    g$r$11605$CQIRF))
                                                '#f)
                                              (assertion-violation
                                                'syntax-dispatch
                                                '"invalid pattern"
                                                g$p$11601$CQIRF)))))))))
                               (vector-ref g$p$11601$CQIRF '0))))))))
                   (g$match$11582$CQIRF
                     (case-lambda
                       ((g$e$11585$CQIRF
                          g$p$11586$CQIRF
                          g$m*$11587$CQIRF
                          g$s*$11588$CQIRF
                          g$ae*$11589$CQIRF
                          g$r$11590$CQIRF)
                        (if (not g$r$11590$CQIRF)
                          '#f
                          (if (eq? g$p$11586$CQIRF '_)
                            g$r$11590$CQIRF
                            (if (eq? g$p$11586$CQIRF 'any)
                              (cons
                                (g$stx^$11575$CQIRF
                                  g$e$11585$CQIRF
                                  g$m*$11587$CQIRF
                                  g$s*$11588$CQIRF
                                  g$ae*$11589$CQIRF)
                                g$r$11590$CQIRF)
                              (if (g$stx?$9519$CQIRF g$e$11585$CQIRF)
                                (if (not (g$top-marked?$9481$CQIRF
                                           g$m*$11587$CQIRF))
                                  (begin
                                    '#f
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$join-wraps$9534$CQIRF
                                           g$m*$11587$CQIRF
                                           g$s*$11588$CQIRF
                                           g$ae*$11589$CQIRF
                                           g$e$11585$CQIRF)))
                                      (case-lambda
                                        ((g$m*$11594$CQIRF
                                           g$s*$11595$CQIRF
                                           g$ae*$11596$CQIRF)
                                         ((case-lambda
                                            ((g$ae*$11597$CQIRF
                                               g$s*$11598$CQIRF
                                               g$m*$11599$CQIRF)
                                             (g$match$11582$CQIRF
                                               (g$stx-expr$9521$CQIRF
                                                 g$e$11585$CQIRF)
                                               g$p$11586$CQIRF
                                               g$m*$11599$CQIRF
                                               g$s*$11598$CQIRF
                                               g$ae*$11597$CQIRF
                                               g$r$11590$CQIRF)))
                                          g$ae*$11596$CQIRF
                                          g$s*$11595$CQIRF
                                          g$m*$11594$CQIRF)))))
                                  '#f)
                                (if (annotation? g$e$11585$CQIRF)
                                  (g$match$11582$CQIRF
                                    (annotation-expression g$e$11585$CQIRF)
                                    g$p$11586$CQIRF
                                    g$m*$11587$CQIRF
                                    g$s*$11588$CQIRF
                                    g$ae*$11589$CQIRF
                                    g$r$11590$CQIRF)
                                  (g$match*$11581$CQIRF
                                    g$e$11585$CQIRF
                                    g$p$11586$CQIRF
                                    g$m*$11587$CQIRF
                                    g$s*$11588$CQIRF
                                    g$ae*$11589$CQIRF
                                    g$r$11590$CQIRF))))))))))
           (case-lambda
             ((g$e$11583$CQIRF g$p$11584$CQIRF)
              (g$match$11582$CQIRF
                g$e$11583$CQIRF
                g$p$11584$CQIRF
                '()
                '()
                '()
                '()))))))))
   (g$ellipsis?$9911$CQIRF
     g$ellipsis?$13452$CQIRF
     (case-lambda
       ((g$x$11689$CQIRF)
        (if (g$id?$9547$CQIRF g$x$11689$CQIRF)
          (begin
            '#f
            (g$free-id=?$9551$CQIRF
              g$x$11689$CQIRF
              (g$scheme-stx$9853$CQIRF '...)))
          '#f))))
   (g$underscore?$9912$CQIRF
     g$underscore?$13453$CQIRF
     (case-lambda
       ((g$x$11690$CQIRF)
        (if (g$id?$9547$CQIRF g$x$11690$CQIRF)
          (begin
            '#f
            (g$free-id=?$9551$CQIRF
              g$x$11690$CQIRF
              (g$scheme-stx$9853$CQIRF '_)))
          '#f))))
   (g$verify-literals$9913$CQIRF
     g$verify-literals$13454$CQIRF
     (case-lambda
       ((g$lits$11691$CQIRF g$expr$11692$CQIRF)
        (g$for-each$5947$CQIRF
          (case-lambda
            ((g$x$11693$CQIRF)
             (if ((case-lambda
                    ((g$t$11694$CQIRF)
                     (if g$t$11694$CQIRF
                       g$t$11694$CQIRF
                       ((case-lambda
                          ((g$t$11695$CQIRF)
                           (if g$t$11695$CQIRF
                             g$t$11695$CQIRF
                             (begin
                               '#f
                               (g$underscore?$9912$CQIRF g$x$11693$CQIRF)))))
                        (g$ellipsis?$9911$CQIRF g$x$11693$CQIRF)))))
                  (not (g$id?$9547$CQIRF g$x$11693$CQIRF)))
               (g$syntax-violation$10028$CQIRF
                 '#f
                 '"invalid literal"
                 g$expr$11692$CQIRF
                 g$x$11693$CQIRF)
               (void))))
          g$lits$11691$CQIRF))))
   (g$syntax-case-transformer$9914$CQIRF
     g$syntax-case-transformer$13455$CQIRF
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$11696$CQIRF
                     (case-lambda
                       ((g$pvars$11753$CQIRF
                          g$expr$11754$CQIRF
                          g$y$11755$CQIRF
                          g$r$11756$CQIRF
                          g$mr$11757$CQIRF)
                        ((case-lambda
                           ((g$ids$11758$CQIRF g$levels$11759$CQIRF)
                            ((case-lambda
                               ((g$labels$11760$CQIRF g$new-vars$11761$CQIRF)
                                ((case-lambda
                                   ((g$body$11762$CQIRF)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$9469$CQIRF
                                        '#f
                                        g$new-vars$11761$CQIRF
                                        g$body$11762$CQIRF)
                                      g$y$11755$CQIRF)))
                                 (g$chi-expr$9928$CQIRF
                                   (g$add-subst$9537$CQIRF
                                     (g$make-full-rib$9513$CQIRF
                                       g$ids$11758$CQIRF
                                       g$labels$11760$CQIRF)
                                     g$expr$11754$CQIRF)
                                   (append
                                     (g$map$5946$CQIRF
                                       (case-lambda
                                         ((g$label$11763$CQIRF
                                            g$var$11764$CQIRF
                                            g$level$11765$CQIRF)
                                          (cons
                                            g$label$11763$CQIRF
                                            (g$make-binding$9563$CQIRF
                                              'syntax
                                              (cons
                                                g$var$11764$CQIRF
                                                g$level$11765$CQIRF)))))
                                       g$labels$11760$CQIRF
                                       g$new-vars$11761$CQIRF
                                       (g$map$5946$CQIRF
                                         cdr
                                         g$pvars$11753$CQIRF))
                                     g$r$11756$CQIRF)
                                   g$mr$11757$CQIRF))))
                             (g$map$5946$CQIRF
                               g$gen-label$9484$CQIRF
                               g$ids$11758$CQIRF)
                             (g$map$5946$CQIRF
                               g$gen-lexical$9482$CQIRF
                               g$ids$11758$CQIRF))))
                         (g$map$5946$CQIRF car g$pvars$11753$CQIRF)
                         (g$map$5946$CQIRF cdr g$pvars$11753$CQIRF)))))
                   (g$invalid-ids-error$11697$CQIRF
                     (case-lambda
                       ((g$id*$11747$CQIRF g$e$11748$CQIRF g$class$11749$CQIRF)
                        ((letrec ((g$find$11750$CQIRF
                                    (case-lambda
                                      ((g$id*$11751$CQIRF g$ok*$11752$CQIRF)
                                       (if (null? g$id*$11751$CQIRF)
                                         (g$syntax-violation$10028$CQIRF
                                           '#f
                                           '"invalid syntax"
                                           g$e$11748$CQIRF)
                                         (if (g$id?$9547$CQIRF
                                               (car g$id*$11751$CQIRF))
                                           (if (g$bound-id-member?$9554$CQIRF
                                                 (car g$id*$11751$CQIRF)
                                                 g$ok*$11752$CQIRF)
                                             (g$syntax-error$10025$CQIRF
                                               (car g$id*$11751$CQIRF)
                                               '"duplicate "
                                               g$class$11749$CQIRF)
                                             (g$find$11750$CQIRF
                                               (cdr g$id*$11751$CQIRF)
                                               (cons
                                                 (car g$id*$11751$CQIRF)
                                                 g$ok*$11752$CQIRF)))
                                           (g$syntax-error$10025$CQIRF
                                             (car g$id*$11751$CQIRF)
                                             '"invalid "
                                             g$class$11749$CQIRF)))))))
                           g$find$11750$CQIRF)
                         g$id*$11747$CQIRF
                         '()))))
                   (g$gen-clause$11698$CQIRF
                     (case-lambda
                       ((g$x$11727$CQIRF
                          g$keys$11728$CQIRF
                          g$clauses$11729$CQIRF
                          g$r$11730$CQIRF
                          g$mr$11731$CQIRF
                          g$pat$11732$CQIRF
                          g$fender$11733$CQIRF
                          g$expr$11734$CQIRF)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$9909$CQIRF
                               g$pat$11732$CQIRF
                               g$keys$11728$CQIRF)))
                          (case-lambda
                            ((g$p$11737$CQIRF g$pvars$11738$CQIRF)
                             ((case-lambda
                                ((g$pvars$11739$CQIRF g$p$11740$CQIRF)
                                 (if (not (g$distinct-bound-ids?$9553$CQIRF
                                            (g$map$5946$CQIRF
                                              car
                                              g$pvars$11739$CQIRF)))
                                   (g$invalid-ids-error$11697$CQIRF
                                     (g$map$5946$CQIRF car g$pvars$11739$CQIRF)
                                     g$pat$11732$CQIRF
                                     '"pattern variable")
                                   (if (not (g$for-all$5944$CQIRF
                                              (case-lambda
                                                ((g$x$11741$CQIRF)
                                                 (not (g$ellipsis?$9911$CQIRF
                                                        (car g$x$11741$CQIRF)))))
                                              g$pvars$11739$CQIRF))
                                     (g$syntax-violation$10028$CQIRF
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$11732$CQIRF)
                                     ((case-lambda
                                        ((g$y$11742$CQIRF)
                                         ((case-lambda
                                            ((g$test$11743$CQIRF)
                                             ((case-lambda
                                                ((g$conseq$11744$CQIRF)
                                                 ((case-lambda
                                                    ((g$altern$11745$CQIRF)
                                                     (list
                                                       (g$build-lambda$9469$CQIRF
                                                         '#f
                                                         (list g$y$11742$CQIRF)
                                                         (list
                                                           'if
                                                           g$test$11743$CQIRF
                                                           g$conseq$11744$CQIRF
                                                           g$altern$11745$CQIRF))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$11727$CQIRF
                                                         (list
                                                           'quote
                                                           g$p$11740$CQIRF)))))
                                                  (g$gen-syntax-case$11699$CQIRF
                                                    g$x$11727$CQIRF
                                                    g$keys$11728$CQIRF
                                                    g$clauses$11729$CQIRF
                                                    g$r$11730$CQIRF
                                                    g$mr$11731$CQIRF))))
                                              (g$build-dispatch-call$11696$CQIRF
                                                g$pvars$11739$CQIRF
                                                g$expr$11734$CQIRF
                                                g$y$11742$CQIRF
                                                g$r$11730$CQIRF
                                                g$mr$11731$CQIRF))))
                                          (if (eq? g$fender$11733$CQIRF '#t)
                                            g$y$11742$CQIRF
                                            ((case-lambda
                                               ((g$call$11746$CQIRF)
                                                (list
                                                  'if
                                                  g$y$11742$CQIRF
                                                  g$call$11746$CQIRF
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$11696$CQIRF
                                               g$pvars$11739$CQIRF
                                               g$fender$11733$CQIRF
                                               g$y$11742$CQIRF
                                               g$r$11730$CQIRF
                                               g$mr$11731$CQIRF))))))
                                      (g$gen-lexical$9482$CQIRF 'tmp))))))
                              g$pvars$11738$CQIRF
                              g$p$11737$CQIRF)))))))
                   (g$gen-syntax-case$11699$CQIRF
                     (case-lambda
                       ((g$x$11710$CQIRF
                          g$keys$11711$CQIRF
                          g$clauses$11712$CQIRF
                          g$r$11713$CQIRF
                          g$mr$11714$CQIRF)
                        (if (null? g$clauses$11712$CQIRF)
                          (list '(primitive syntax-error) g$x$11710$CQIRF)
                          ((case-lambda
                             ((g$t$11715$CQIRF)
                              ((case-lambda
                                 ((g$ls/false$11716$CQIRF)
                                  (if g$ls/false$11716$CQIRF
                                    (apply
                                      (case-lambda
                                        ((g$pat$11717$CQIRF g$expr$11718$CQIRF)
                                         (if (if (g$id?$9547$CQIRF
                                                   g$pat$11717$CQIRF)
                                               (if (not (g$bound-id-member?$9554$CQIRF
                                                          g$pat$11717$CQIRF
                                                          g$keys$11711$CQIRF))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$9911$CQIRF
                                                          g$pat$11717$CQIRF)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$9551$CQIRF
                                                 g$pat$11717$CQIRF
                                                 (g$scheme-stx$9853$CQIRF '_))
                                             (g$chi-expr$9928$CQIRF
                                               g$expr$11718$CQIRF
                                               g$r$11713$CQIRF
                                               g$mr$11714$CQIRF)
                                             ((case-lambda
                                                ((g$lab$11719$CQIRF
                                                   g$lex$11720$CQIRF)
                                                 ((case-lambda
                                                    ((g$body$11721$CQIRF)
                                                     (list
                                                       (g$build-lambda$9469$CQIRF
                                                         '#f
                                                         (list
                                                           g$lex$11720$CQIRF)
                                                         g$body$11721$CQIRF)
                                                       g$x$11710$CQIRF)))
                                                  (g$chi-expr$9928$CQIRF
                                                    (g$add-subst$9537$CQIRF
                                                      (g$make-full-rib$9513$CQIRF
                                                        (list g$pat$11717$CQIRF)
                                                        (list
                                                          g$lab$11719$CQIRF))
                                                      g$expr$11718$CQIRF)
                                                    (cons
                                                      (cons
                                                        g$lab$11719$CQIRF
                                                        (g$make-binding$9563$CQIRF
                                                          'syntax
                                                          (cons
                                                            g$lex$11720$CQIRF
                                                            '0)))
                                                      g$r$11713$CQIRF)
                                                    g$mr$11714$CQIRF))))
                                              (g$gen-label$9484$CQIRF
                                                g$pat$11717$CQIRF)
                                              (g$gen-lexical$9482$CQIRF
                                                g$pat$11717$CQIRF)))
                                           (g$gen-clause$11698$CQIRF
                                             g$x$11710$CQIRF
                                             g$keys$11711$CQIRF
                                             (cdr g$clauses$11712$CQIRF)
                                             g$r$11713$CQIRF
                                             g$mr$11714$CQIRF
                                             g$pat$11717$CQIRF
                                             '#t
                                             g$expr$11718$CQIRF))))
                                      g$ls/false$11716$CQIRF)
                                    ((case-lambda
                                       ((g$t$11722$CQIRF)
                                        ((case-lambda
                                           ((g$ls/false$11723$CQIRF)
                                            (if g$ls/false$11723$CQIRF
                                              (apply
                                                (case-lambda
                                                  ((g$pat$11724$CQIRF
                                                     g$fender$11725$CQIRF
                                                     g$expr$11726$CQIRF)
                                                   (g$gen-clause$11698$CQIRF
                                                     g$x$11710$CQIRF
                                                     g$keys$11711$CQIRF
                                                     (cdr g$clauses$11712$CQIRF)
                                                     g$r$11713$CQIRF
                                                     g$mr$11714$CQIRF
                                                     g$pat$11724$CQIRF
                                                     g$fender$11725$CQIRF
                                                     g$expr$11726$CQIRF)))
                                                g$ls/false$11723$CQIRF)
                                              (g$syntax-violation$10028$CQIRF
                                                '#f
                                                '"invalid syntax"
                                                g$t$11722$CQIRF))))
                                         (g$syntax-dispatch$9910$CQIRF
                                           g$t$11722$CQIRF
                                           '(any any any)))))
                                     g$t$11715$CQIRF))))
                               (g$syntax-dispatch$9910$CQIRF
                                 g$t$11715$CQIRF
                                 '(any any)))))
                           (car g$clauses$11712$CQIRF)))))))
           (case-lambda
             ((g$e$11700$CQIRF g$r$11701$CQIRF g$mr$11702$CQIRF)
              ((case-lambda
                 ((g$t$11703$CQIRF)
                  ((case-lambda
                     ((g$ls/false$11704$CQIRF)
                      (if g$ls/false$11704$CQIRF
                        (apply
                          (case-lambda
                            ((g$expr$11705$CQIRF
                               g$keys$11706$CQIRF
                               g$clauses$11707$CQIRF)
                             (begin
                               (g$verify-literals$9913$CQIRF
                                 g$keys$11706$CQIRF
                                 g$e$11700$CQIRF)
                               ((case-lambda
                                  ((g$x$11708$CQIRF)
                                   ((case-lambda
                                      ((g$body$11709$CQIRF)
                                       (list
                                         (g$build-lambda$9469$CQIRF
                                           '#f
                                           (list g$x$11708$CQIRF)
                                           g$body$11709$CQIRF)
                                         (g$chi-expr$9928$CQIRF
                                           g$expr$11705$CQIRF
                                           g$r$11701$CQIRF
                                           g$mr$11702$CQIRF))))
                                    (g$gen-syntax-case$11699$CQIRF
                                      g$x$11708$CQIRF
                                      g$keys$11706$CQIRF
                                      g$clauses$11707$CQIRF
                                      g$r$11701$CQIRF
                                      g$mr$11702$CQIRF))))
                                (g$gen-lexical$9482$CQIRF 'tmp)))))
                          g$ls/false$11704$CQIRF)
                        (g$syntax-violation$10028$CQIRF
                          '#f
                          '"invalid syntax"
                          g$t$11703$CQIRF))))
                   (g$syntax-dispatch$9910$CQIRF
                     g$t$11703$CQIRF
                     '(_ any each-any . each-any)))))
               g$e$11700$CQIRF))))))))
   (g$ellipsis-map$9915$CQIRF
     g$ellipsis-map$13456$CQIRF
     (case-lambda
       ((g$proc$11766$CQIRF g$ls$11767$CQIRF . g$ls*$11768$CQIRF)
        (letrec* ((g$who$11769$CQIRF '...))
          (begin
            (if (not (list? g$ls$11767$CQIRF))
              (assertion-violation
                g$who$11769$CQIRF
                '"not a list"
                g$ls$11767$CQIRF)
              (void))
            (if (not (null? g$ls*$11768$CQIRF))
              ((case-lambda
                 ((g$n$11770$CQIRF)
                  (g$for-each$5947$CQIRF
                    (case-lambda
                      ((g$x$11771$CQIRF)
                       (begin
                         (if (not (list? g$x$11771$CQIRF))
                           (assertion-violation
                             g$who$11769$CQIRF
                             '"not a list"
                             g$x$11771$CQIRF)
                           (void))
                         (if (not (= (length g$x$11771$CQIRF) g$n$11770$CQIRF))
                           (assertion-violation
                             g$who$11769$CQIRF
                             '"length mismatch"
                             g$ls$11767$CQIRF
                             g$x$11771$CQIRF)
                           (void)))))
                    g$ls*$11768$CQIRF)))
               (length g$ls$11767$CQIRF))
              (void))
            (apply
              g$map$5946$CQIRF
              g$proc$11766$CQIRF
              g$ls$11767$CQIRF
              g$ls*$11768$CQIRF))))))
   (g$syntax-transformer$9916$CQIRF
     g$syntax-transformer$13457$CQIRF
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$11772$CQIRF
                     (case-lambda
                       ((g$src$11832$CQIRF
                          g$e$11833$CQIRF
                          g$r$11834$CQIRF
                          g$maps$11835$CQIRF
                          g$ellipsis?$11836$CQIRF
                          g$vec?$11837$CQIRF)
                        ((case-lambda
                           ((g$t$11838$CQIRF)
                            ((case-lambda
                               ((g$ls/false$11839$CQIRF)
                                (if (if g$ls/false$11839$CQIRF
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$11840$CQIRF)
                                             (g$ellipsis?$11836$CQIRF
                                               g$dots$11840$CQIRF)))
                                          g$ls/false$11839$CQIRF))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$11841$CQIRF)
                                       (g$syntax-violation$10028$CQIRF
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$11832$CQIRF)))
                                    g$ls/false$11839$CQIRF)
                                  ((case-lambda
                                     ((g$t$11842$CQIRF)
                                      ((case-lambda
                                         ((g$ls/false$11843$CQIRF)
                                          (if (if g$ls/false$11843$CQIRF
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$11844$CQIRF)
                                                       (g$id?$9547$CQIRF
                                                         g$id$11844$CQIRF)))
                                                    g$ls/false$11843$CQIRF))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$11845$CQIRF)
                                                 ((case-lambda
                                                    ((g$label$11846$CQIRF)
                                                     ((case-lambda
                                                        ((g$b$11847$CQIRF)
                                                         (if (eq? (g$binding-type$9564$CQIRF
                                                                    g$b$11847$CQIRF)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$11850$CQIRF)
                                                                    (g$gen-ref$11773$CQIRF
                                                                      g$src$11832$CQIRF
                                                                      (car g$var.lev$11850$CQIRF)
                                                                      (cdr g$var.lev$11850$CQIRF)
                                                                      g$maps$11835$CQIRF)))
                                                                 (g$binding-value$9565$CQIRF
                                                                   g$b$11847$CQIRF))))
                                                             (case-lambda
                                                               ((g$var$11851$CQIRF
                                                                  g$maps$11852$CQIRF)
                                                                ((case-lambda
                                                                   ((g$maps$11853$CQIRF
                                                                      g$var$11854$CQIRF)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$11854$CQIRF)
                                                                      g$maps$11853$CQIRF)))
                                                                 g$maps$11852$CQIRF
                                                                 g$var$11851$CQIRF))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$11833$CQIRF)
                                                             g$maps$11835$CQIRF))))
                                                      (g$label->binding$9562$CQIRF
                                                        g$label$11846$CQIRF
                                                        g$r$11834$CQIRF))))
                                                  (g$id->label$9560$CQIRF
                                                    g$e$11833$CQIRF))))
                                              g$ls/false$11843$CQIRF)
                                            ((case-lambda
                                               ((g$t$11855$CQIRF)
                                                ((case-lambda
                                                   ((g$ls/false$11856$CQIRF)
                                                    (if (if g$ls/false$11856$CQIRF
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$11857$CQIRF
                                                                   g$e$11858$CQIRF)
                                                                 (g$ellipsis?$11836$CQIRF
                                                                   g$dots$11857$CQIRF)))
                                                              g$ls/false$11856$CQIRF))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$11859$CQIRF
                                                             g$e$11860$CQIRF)
                                                           (if g$vec?$11837$CQIRF
                                                             (g$syntax-violation$10028$CQIRF
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$11832$CQIRF)
                                                             (g$gen-syntax$11772$CQIRF
                                                               g$src$11832$CQIRF
                                                               g$e$11860$CQIRF
                                                               g$r$11834$CQIRF
                                                               g$maps$11835$CQIRF
                                                               (case-lambda
                                                                 ((g$x$11861$CQIRF)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$11856$CQIRF)
                                                      ((case-lambda
                                                         ((g$t$11862$CQIRF)
                                                          ((case-lambda
                                                             ((g$ls/false$11863$CQIRF)
                                                              (if (if g$ls/false$11863$CQIRF
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$11864$CQIRF
                                                                             g$dots$11865$CQIRF
                                                                             g$y$11866$CQIRF)
                                                                           (g$ellipsis?$11836$CQIRF
                                                                             g$dots$11865$CQIRF)))
                                                                        g$ls/false$11863$CQIRF))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$11867$CQIRF
                                                                       g$dots$11868$CQIRF
                                                                       g$y$11869$CQIRF)
                                                                     ((letrec ((g$f$11870$CQIRF
                                                                                 (case-lambda
                                                                                   ((g$y$11871$CQIRF
                                                                                      g$k$11872$CQIRF)
                                                                                    ((case-lambda
                                                                                       ((g$t$11873$CQIRF)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$11874$CQIRF)
                                                                                            (if g$ls/false$11874$CQIRF
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$11872$CQIRF
                                                                                                     g$maps$11835$CQIRF)))
                                                                                                g$ls/false$11874$CQIRF)
                                                                                              ((case-lambda
                                                                                                 ((g$t$11875$CQIRF)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$11876$CQIRF)
                                                                                                      (if (if g$ls/false$11876$CQIRF
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$11877$CQIRF
                                                                                                                     g$y$11878$CQIRF)
                                                                                                                   (g$ellipsis?$11836$CQIRF
                                                                                                                     g$dots$11877$CQIRF)))
                                                                                                                g$ls/false$11876$CQIRF))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$11879$CQIRF
                                                                                                               g$y$11880$CQIRF)
                                                                                                             (g$f$11870$CQIRF
                                                                                                               g$y$11880$CQIRF
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$11881$CQIRF)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$11872$CQIRF
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$11881$CQIRF))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$11884$CQIRF
                                                                                                                         g$maps$11885$CQIRF)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$11886$CQIRF
                                                                                                                             g$x$11887$CQIRF)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$11886$CQIRF))
                                                                                                                             (g$syntax-violation$10028$CQIRF
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$11832$CQIRF)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$11775$CQIRF
                                                                                                                                 g$x$11887$CQIRF
                                                                                                                                 (car g$maps$11886$CQIRF))
                                                                                                                               (cdr g$maps$11886$CQIRF)))))
                                                                                                                        g$maps$11885$CQIRF
                                                                                                                        g$x$11884$CQIRF)))))))))
                                                                                                          g$ls/false$11876$CQIRF)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$11888$CQIRF)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$11889$CQIRF)
                                                                                                                (if g$ls/false$11889$CQIRF
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$11772$CQIRF
                                                                                                                              g$src$11832$CQIRF
                                                                                                                              g$y$11871$CQIRF
                                                                                                                              g$r$11834$CQIRF
                                                                                                                              g$maps$11835$CQIRF
                                                                                                                              g$ellipsis?$11836$CQIRF
                                                                                                                              g$vec?$11837$CQIRF)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$11892$CQIRF
                                                                                                                              g$maps$11893$CQIRF)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$11894$CQIRF
                                                                                                                                  g$y$11895$CQIRF)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$11872$CQIRF
                                                                                                                                       g$maps$11894$CQIRF)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$11898$CQIRF
                                                                                                                                       g$maps$11899$CQIRF)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$11900$CQIRF
                                                                                                                                           g$x$11901$CQIRF)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$11774$CQIRF
                                                                                                                                             g$x$11901$CQIRF
                                                                                                                                             g$y$11895$CQIRF)
                                                                                                                                           g$maps$11900$CQIRF)))
                                                                                                                                      g$maps$11899$CQIRF
                                                                                                                                      g$x$11898$CQIRF))))))
                                                                                                                             g$maps$11893$CQIRF
                                                                                                                             g$y$11892$CQIRF))))))
                                                                                                                    g$ls/false$11889$CQIRF)
                                                                                                                  (g$syntax-violation$10028$CQIRF
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$11888$CQIRF))))
                                                                                                             (g$syntax-dispatch$9910$CQIRF
                                                                                                               g$t$11888$CQIRF
                                                                                                               '_))))
                                                                                                         g$t$11875$CQIRF))))
                                                                                                   (g$syntax-dispatch$9910$CQIRF
                                                                                                     g$t$11875$CQIRF
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$11873$CQIRF))))
                                                                                         (g$syntax-dispatch$9910$CQIRF
                                                                                           g$t$11873$CQIRF
                                                                                           '()))))
                                                                                     g$y$11871$CQIRF)))))
                                                                        g$f$11870$CQIRF)
                                                                      g$y$11869$CQIRF
                                                                      (case-lambda
                                                                        ((g$maps$11902$CQIRF)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$11772$CQIRF
                                                                                g$src$11832$CQIRF
                                                                                g$x$11867$CQIRF
                                                                                g$r$11834$CQIRF
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$11902$CQIRF)
                                                                                g$ellipsis?$11836$CQIRF
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$11905$CQIRF
                                                                                g$maps$11906$CQIRF)
                                                                              ((case-lambda
                                                                                 ((g$maps$11907$CQIRF
                                                                                    g$x$11908$CQIRF)
                                                                                  (if (null?
                                                                                        (car g$maps$11907$CQIRF))
                                                                                    (g$syntax-violation$10028$CQIRF
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$11832$CQIRF)
                                                                                    (values
                                                                                      (g$gen-map$11776$CQIRF
                                                                                        g$x$11908$CQIRF
                                                                                        (car g$maps$11907$CQIRF))
                                                                                      (cdr g$maps$11907$CQIRF)))))
                                                                               g$maps$11906$CQIRF
                                                                               g$x$11905$CQIRF)))))))))
                                                                  g$ls/false$11863$CQIRF)
                                                                ((case-lambda
                                                                   ((g$t$11909$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$ls/false$11910$CQIRF)
                                                                        (if g$ls/false$11910$CQIRF
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$11911$CQIRF
                                                                                 g$y$11912$CQIRF)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$11772$CQIRF
                                                                                      g$src$11832$CQIRF
                                                                                      g$x$11911$CQIRF
                                                                                      g$r$11834$CQIRF
                                                                                      g$maps$11835$CQIRF
                                                                                      g$ellipsis?$11836$CQIRF
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$11915$CQIRF
                                                                                      g$maps$11916$CQIRF)
                                                                                    ((case-lambda
                                                                                       ((g$maps$11917$CQIRF
                                                                                          g$xnew$11918$CQIRF)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$11772$CQIRF
                                                                                               g$src$11832$CQIRF
                                                                                               g$y$11912$CQIRF
                                                                                               g$r$11834$CQIRF
                                                                                               g$maps$11917$CQIRF
                                                                                               g$ellipsis?$11836$CQIRF
                                                                                               g$vec?$11837$CQIRF)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$11921$CQIRF
                                                                                               g$maps$11922$CQIRF)
                                                                                             ((case-lambda
                                                                                                ((g$maps$11923$CQIRF
                                                                                                   g$ynew$11924$CQIRF)
                                                                                                 (values
                                                                                                   (g$gen-cons$11777$CQIRF
                                                                                                     g$e$11833$CQIRF
                                                                                                     g$x$11911$CQIRF
                                                                                                     g$y$11912$CQIRF
                                                                                                     g$xnew$11918$CQIRF
                                                                                                     g$ynew$11924$CQIRF)
                                                                                                   g$maps$11923$CQIRF)))
                                                                                              g$maps$11922$CQIRF
                                                                                              g$ynew$11921$CQIRF))))))
                                                                                     g$maps$11916$CQIRF
                                                                                     g$xnew$11915$CQIRF))))))
                                                                            g$ls/false$11910$CQIRF)
                                                                          ((case-lambda
                                                                             ((g$t$11925$CQIRF)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$11926$CQIRF)
                                                                                  (if g$ls/false$11926$CQIRF
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$11927$CQIRF)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$11772$CQIRF
                                                                                                g$src$11832$CQIRF
                                                                                                g$ls$11927$CQIRF
                                                                                                g$r$11834$CQIRF
                                                                                                g$maps$11835$CQIRF
                                                                                                g$ellipsis?$11836$CQIRF
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$11930$CQIRF
                                                                                                g$maps$11931$CQIRF)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$11932$CQIRF
                                                                                                    g$lsnew$11933$CQIRF)
                                                                                                  (values
                                                                                                    (g$gen-vector$11778$CQIRF
                                                                                                      g$e$11833$CQIRF
                                                                                                      g$ls$11927$CQIRF
                                                                                                      g$lsnew$11933$CQIRF)
                                                                                                    g$maps$11932$CQIRF)))
                                                                                               g$maps$11931$CQIRF
                                                                                               g$lsnew$11930$CQIRF))))))
                                                                                      g$ls/false$11926$CQIRF)
                                                                                    ((case-lambda
                                                                                       ((g$t$11934$CQIRF)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$11935$CQIRF)
                                                                                            (if g$ls/false$11935$CQIRF
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$11833$CQIRF)
                                                                                                     g$maps$11835$CQIRF)))
                                                                                                g$ls/false$11935$CQIRF)
                                                                                              (g$syntax-violation$10028$CQIRF
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$11934$CQIRF))))
                                                                                         (g$syntax-dispatch$9910$CQIRF
                                                                                           g$t$11934$CQIRF
                                                                                           '_))))
                                                                                     g$t$11925$CQIRF))))
                                                                               (g$syntax-dispatch$9910$CQIRF
                                                                                 g$t$11925$CQIRF
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$11909$CQIRF))))
                                                                     (g$syntax-dispatch$9910$CQIRF
                                                                       g$t$11909$CQIRF
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$11862$CQIRF))))
                                                           (g$syntax-dispatch$9910$CQIRF
                                                             g$t$11862$CQIRF
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$11855$CQIRF))))
                                                 (g$syntax-dispatch$9910$CQIRF
                                                   g$t$11855$CQIRF
                                                   '(any any)))))
                                             g$t$11842$CQIRF))))
                                       (g$syntax-dispatch$9910$CQIRF
                                         g$t$11842$CQIRF
                                         'any))))
                                   g$t$11838$CQIRF))))
                             (g$syntax-dispatch$9910$CQIRF
                               g$t$11838$CQIRF
                               'any))))
                         g$e$11833$CQIRF))))
                   (g$gen-ref$11773$CQIRF
                     (case-lambda
                       ((g$src$11819$CQIRF
                          g$var$11820$CQIRF
                          g$level$11821$CQIRF
                          g$maps$11822$CQIRF)
                        (if (= g$level$11821$CQIRF '0)
                          (values g$var$11820$CQIRF g$maps$11822$CQIRF)
                          (if (null? g$maps$11822$CQIRF)
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$11819$CQIRF)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$11773$CQIRF
                                   g$src$11819$CQIRF
                                   g$var$11820$CQIRF
                                   (- g$level$11821$CQIRF '1)
                                   (cdr g$maps$11822$CQIRF))))
                              (case-lambda
                                ((g$outer-var$11825$CQIRF
                                   g$outer-maps$11826$CQIRF)
                                 ((case-lambda
                                    ((g$outer-maps$11827$CQIRF
                                       g$outer-var$11828$CQIRF)
                                     ((case-lambda
                                        ((g$t$11829$CQIRF)
                                         (if g$t$11829$CQIRF
                                           ((case-lambda
                                              ((g$b$11830$CQIRF)
                                               (values
                                                 (cdr g$b$11830$CQIRF)
                                                 g$maps$11822$CQIRF)))
                                            g$t$11829$CQIRF)
                                           ((case-lambda
                                              ((g$inner-var$11831$CQIRF)
                                               (values
                                                 g$inner-var$11831$CQIRF
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$11828$CQIRF
                                                       g$inner-var$11831$CQIRF)
                                                     (car g$maps$11822$CQIRF))
                                                   g$outer-maps$11827$CQIRF))))
                                            (g$gen-lexical$9482$CQIRF 'tmp)))))
                                      (g$assq$5934$CQIRF
                                        g$outer-var$11828$CQIRF
                                        (car g$maps$11822$CQIRF)))))
                                  g$outer-maps$11826$CQIRF
                                  g$outer-var$11825$CQIRF)))))))))
                   (g$gen-append$11774$CQIRF
                     (case-lambda
                       ((g$x$11817$CQIRF g$y$11818$CQIRF)
                        (if (equal? g$y$11818$CQIRF ''())
                          g$x$11817$CQIRF
                          (list 'append g$x$11817$CQIRF g$y$11818$CQIRF)))))
                   (g$gen-mappend$11775$CQIRF
                     (case-lambda
                       ((g$e$11815$CQIRF g$map-env$11816$CQIRF)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$11776$CQIRF
                            g$e$11815$CQIRF
                            g$map-env$11816$CQIRF)))))
                   (g$gen-map$11776$CQIRF
                     (case-lambda
                       ((g$e$11806$CQIRF g$map-env$11807$CQIRF)
                        ((case-lambda
                           ((g$formals$11808$CQIRF g$actuals$11809$CQIRF)
                            (if (eq? (car g$e$11806$CQIRF) 'ref)
                              (car g$actuals$11809$CQIRF)
                              (if (g$for-all$5944$CQIRF
                                    (case-lambda
                                      ((g$x$11810$CQIRF)
                                       (if (eq? (car g$x$11810$CQIRF) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$5938$CQIRF
                                             (g$cadr$6626$CQIRF g$x$11810$CQIRF)
                                             g$formals$11808$CQIRF))
                                         '#f)))
                                    (cdr g$e$11806$CQIRF))
                                ((case-lambda
                                   ((g$args$11811$CQIRF)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$11806$CQIRF))
                                        g$args$11811$CQIRF))))
                                 (g$map$5946$CQIRF
                                   ((case-lambda
                                      ((g$r$11812$CQIRF)
                                       (case-lambda
                                         ((g$x$11813$CQIRF)
                                          (cdr (g$assq$5934$CQIRF
                                                 (g$cadr$6626$CQIRF
                                                   g$x$11813$CQIRF)
                                                 g$r$11812$CQIRF))))))
                                    (g$map$5946$CQIRF
                                      cons
                                      g$formals$11808$CQIRF
                                      g$actuals$11809$CQIRF))
                                   (cdr g$e$11806$CQIRF)))
                                (g$cons*$5948$CQIRF
                                  'map
                                  (list
                                    'lambda
                                    g$formals$11808$CQIRF
                                    g$e$11806$CQIRF)
                                  g$actuals$11809$CQIRF)))))
                         (g$map$5946$CQIRF cdr g$map-env$11807$CQIRF)
                         (g$map$5946$CQIRF
                           (case-lambda
                             ((g$x$11814$CQIRF)
                              (list 'ref (car g$x$11814$CQIRF))))
                           g$map-env$11807$CQIRF)))))
                   (g$gen-cons$11777$CQIRF
                     (case-lambda
                       ((g$e$11798$CQIRF
                          g$x$11799$CQIRF
                          g$y$11800$CQIRF
                          g$xnew$11801$CQIRF
                          g$ynew$11802$CQIRF)
                        ((case-lambda
                           ((g$t$11803$CQIRF)
                            (if (eqv? g$t$11803$CQIRF 'quote)
                              (if (eq? (car g$xnew$11801$CQIRF) 'quote)
                                ((case-lambda
                                   ((g$xnew$11804$CQIRF g$ynew$11805$CQIRF)
                                    (if (if (eq? g$xnew$11804$CQIRF
                                                 g$x$11799$CQIRF)
                                          (begin
                                            '#f
                                            (eq? g$ynew$11805$CQIRF
                                                 g$y$11800$CQIRF))
                                          '#f)
                                      (list 'quote g$e$11798$CQIRF)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$11804$CQIRF
                                          g$ynew$11805$CQIRF)))))
                                 (g$cadr$6626$CQIRF g$xnew$11801$CQIRF)
                                 (g$cadr$6626$CQIRF g$ynew$11802$CQIRF))
                                (if (null?
                                      (g$cadr$6626$CQIRF g$ynew$11802$CQIRF))
                                  (list 'list g$xnew$11801$CQIRF)
                                  (list
                                    'cons
                                    g$xnew$11801$CQIRF
                                    g$ynew$11802$CQIRF)))
                              (if (eqv? g$t$11803$CQIRF 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$11801$CQIRF
                                    (cdr g$ynew$11802$CQIRF)))
                                (list
                                  'cons
                                  g$xnew$11801$CQIRF
                                  g$ynew$11802$CQIRF)))))
                         (car g$ynew$11802$CQIRF)))))
                   (g$gen-vector$11778$CQIRF
                     (case-lambda
                       ((g$e$11795$CQIRF g$ls$11796$CQIRF g$lsnew$11797$CQIRF)
                        (if (eq? (car g$lsnew$11797$CQIRF) 'quote)
                          (if (eq? (g$cadr$6626$CQIRF g$lsnew$11797$CQIRF)
                                   g$ls$11796$CQIRF)
                            (list 'quote g$e$11795$CQIRF)
                            (list
                              'quote
                              (g$list->vector$6612$CQIRF
                                (g$cadr$6626$CQIRF g$lsnew$11797$CQIRF))))
                          (if (eq? (car g$lsnew$11797$CQIRF) 'list)
                            (cons 'vector (cdr g$lsnew$11797$CQIRF))
                            (list 'list->vector g$lsnew$11797$CQIRF))))))
                   (g$regen$11779$CQIRF
                     (case-lambda
                       ((g$x$11792$CQIRF)
                        ((case-lambda
                           ((g$t$11793$CQIRF)
                            (if (eqv? g$t$11793$CQIRF 'ref)
                              (g$cadr$6626$CQIRF g$x$11792$CQIRF)
                              (if (eqv? g$t$11793$CQIRF 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$6626$CQIRF g$x$11792$CQIRF))
                                (if (eqv? g$t$11793$CQIRF 'quote)
                                  (list
                                    'quote
                                    (g$cadr$6626$CQIRF g$x$11792$CQIRF))
                                  (if (eqv? g$t$11793$CQIRF 'lambda)
                                    (g$build-lambda$9469$CQIRF
                                      '#f
                                      (g$cadr$6626$CQIRF g$x$11792$CQIRF)
                                      (g$regen$11779$CQIRF
                                        (g$caddr$6632$CQIRF g$x$11792$CQIRF)))
                                    (if (eqv? g$t$11793$CQIRF 'map)
                                      ((case-lambda
                                         ((g$ls$11794$CQIRF)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$11794$CQIRF)))
                                       (g$map$5946$CQIRF
                                         g$regen$11779$CQIRF
                                         (cdr g$x$11792$CQIRF)))
                                      (cons
                                        (list 'primitive (car g$x$11792$CQIRF))
                                        (g$map$5946$CQIRF
                                          g$regen$11779$CQIRF
                                          (cdr g$x$11792$CQIRF))))))))))
                         (car g$x$11792$CQIRF))))))
           (case-lambda
             ((g$e$11780$CQIRF g$r$11781$CQIRF g$mr$11782$CQIRF)
              ((case-lambda
                 ((g$t$11783$CQIRF)
                  ((case-lambda
                     ((g$ls/false$11784$CQIRF)
                      (if g$ls/false$11784$CQIRF
                        (apply
                          (case-lambda
                            ((g$x$11785$CQIRF)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$11772$CQIRF
                                    g$e$11780$CQIRF
                                    g$x$11785$CQIRF
                                    g$r$11781$CQIRF
                                    '()
                                    g$ellipsis?$9911$CQIRF
                                    '#f)))
                               (case-lambda
                                 ((g$e$11788$CQIRF g$maps$11789$CQIRF)
                                  ((case-lambda
                                     ((g$maps$11790$CQIRF g$e$11791$CQIRF)
                                      (g$regen$11779$CQIRF g$e$11791$CQIRF)))
                                   g$maps$11789$CQIRF
                                   g$e$11788$CQIRF))))))
                          g$ls/false$11784$CQIRF)
                        (g$syntax-violation$10028$CQIRF
                          '#f
                          '"invalid syntax"
                          g$t$11783$CQIRF))))
                   (g$syntax-dispatch$9910$CQIRF g$t$11783$CQIRF '(_ any)))))
               g$e$11780$CQIRF))))))))
   (g$core-macro-transformer$9917$CQIRF
     g$core-macro-transformer$13458$CQIRF
     (case-lambda
       ((g$name$11936$CQIRF)
        ((case-lambda
           ((g$t$11937$CQIRF)
            (if (eqv? g$t$11937$CQIRF 'quote)
              g$quote-transformer$9870$CQIRF
              (if (eqv? g$t$11937$CQIRF 'lambda)
                g$lambda-transformer$9872$CQIRF
                (if (eqv? g$t$11937$CQIRF 'case-lambda)
                  g$case-lambda-transformer$9871$CQIRF
                  (if (eqv? g$t$11937$CQIRF 'letrec)
                    g$letrec-transformer$9860$CQIRF
                    (if (eqv? g$t$11937$CQIRF 'letrec*)
                      g$letrec*-transformer$9861$CQIRF
                      (if (eqv? g$t$11937$CQIRF 'if)
                        g$if-transformer$9868$CQIRF
                        (if (eqv? g$t$11937$CQIRF 'foreign-call)
                          g$foreign-call-transformer$9908$CQIRF
                          (if (eqv? g$t$11937$CQIRF 'syntax-case)
                            g$syntax-case-transformer$9914$CQIRF
                            (if (eqv? g$t$11937$CQIRF 'syntax)
                              g$syntax-transformer$9916$CQIRF
                              (if (eqv? g$t$11937$CQIRF 'type-descriptor)
                                g$type-descriptor-transformer$9863$CQIRF
                                (if (eqv?
                                      g$t$11937$CQIRF
                                      'record-type-descriptor)
                                  g$record-type-descriptor-transformer$9864$CQIRF
                                  (if (eqv?
                                        g$t$11937$CQIRF
                                        'record-constructor-descriptor)
                                    g$record-constructor-descriptor-transformer$9865$CQIRF
                                    (if (eqv? g$t$11937$CQIRF 'fluid-let-syntax)
                                      g$fluid-let-syntax-transformer$9862$CQIRF
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$11936$CQIRF))))))))))))))))
         g$name$11936$CQIRF))))
   (g$file-options-macro$9918$CQIRF
     g$file-options-macro$13459$CQIRF
     (case-lambda
       ((g$x$11938$CQIRF)
        (letrec* ((g$valid-option?$11939$CQIRF
                    (case-lambda
                      ((g$x$11944$CQIRF)
                       (if (g$id?$9547$CQIRF g$x$11944$CQIRF)
                         (begin
                           '#f
                           (g$memq$5938$CQIRF
                             (g$id->sym$9548$CQIRF g$x$11944$CQIRF)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$11940$CQIRF)
              ((case-lambda
                 ((g$ls/false$11941$CQIRF)
                  (if (if g$ls/false$11941$CQIRF
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$11942$CQIRF)
                               (if (g$for-all$5944$CQIRF
                                     g$valid-option?$11939$CQIRF
                                     g$opt*$11942$CQIRF)
                                 (begin
                                   '#f
                                   (g$file-options-spec$8773$CQIRF
                                     (g$map$5946$CQIRF
                                       g$id->sym$9548$CQIRF
                                       g$opt*$11942$CQIRF)))
                                 '#f)))
                            g$ls/false$11941$CQIRF))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$11943$CQIRF)
                         (g$bless$9873$CQIRF
                           (list
                             'quote
                             (g$file-options-spec$8773$CQIRF
                               (g$map$5946$CQIRF
                                 g$id->sym$9548$CQIRF
                                 g$opt*$11943$CQIRF))))))
                      g$ls/false$11941$CQIRF)
                    (g$syntax-violation$10028$CQIRF
                      '#f
                      '"invalid syntax"
                      g$t$11940$CQIRF))))
               (g$syntax-dispatch$9910$CQIRF g$t$11940$CQIRF '(_ . each-any)))))
           g$x$11938$CQIRF)))))
   (g$symbol-macro$9919$CQIRF
     g$symbol-macro$13460$CQIRF
     (case-lambda
       ((g$x$11945$CQIRF g$set$11946$CQIRF)
        ((case-lambda
           ((g$t$11947$CQIRF)
            ((case-lambda
               ((g$ls/false$11948$CQIRF)
                (if (if g$ls/false$11948$CQIRF
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$11949$CQIRF)
                             (if (g$id?$9547$CQIRF g$name$11949$CQIRF)
                               (begin
                                 '#f
                                 (g$memq$5938$CQIRF
                                   (g$id->sym$9548$CQIRF g$name$11949$CQIRF)
                                   g$set$11946$CQIRF))
                               '#f)))
                          g$ls/false$11948$CQIRF))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$11950$CQIRF)
                       (g$bless$9873$CQIRF (list 'quote g$name$11950$CQIRF))))
                    g$ls/false$11948$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$11947$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$11947$CQIRF '(_ any)))))
         g$x$11945$CQIRF))))
   (g$macro-transformer$9920$CQIRF
     g$macro-transformer$13461$CQIRF
     (case-lambda
       ((g$x$11951$CQIRF)
        (if (g$procedure?$6619$CQIRF g$x$11951$CQIRF)
          g$x$11951$CQIRF
          (if (g$symbol?$6617$CQIRF g$x$11951$CQIRF)
            ((case-lambda
               ((g$t$11952$CQIRF)
                (if (eqv? g$t$11952$CQIRF 'define-record-type)
                  g$define-record-type-macro$9904$CQIRF
                  (if (eqv? g$t$11952$CQIRF 'define-struct)
                    g$define-struct-macro$9903$CQIRF
                    (if (eqv? g$t$11952$CQIRF 'include)
                      g$include-macro$9898$CQIRF
                      (if (eqv? g$t$11952$CQIRF 'cond)
                        g$cond-macro$9896$CQIRF
                        (if (eqv? g$t$11952$CQIRF 'let)
                          g$let-macro$9876$CQIRF
                          (if (eqv? g$t$11952$CQIRF 'do)
                            g$do-macro$9892$CQIRF
                            (if (eqv? g$t$11952$CQIRF 'or)
                              g$or-macro$9894$CQIRF
                              (if (eqv? g$t$11952$CQIRF 'and)
                                g$and-macro$9895$CQIRF
                                (if (eqv? g$t$11952$CQIRF 'let*)
                                  g$let*-macro$9893$CQIRF
                                  (if (eqv? g$t$11952$CQIRF 'let-values)
                                    g$let-values-macro$9877$CQIRF
                                    (if (eqv? g$t$11952$CQIRF 'let*-values)
                                      g$let*-values-macro$9878$CQIRF
                                      (if (eqv? g$t$11952$CQIRF 'syntax-rules)
                                        g$syntax-rules-macro$9900$CQIRF
                                        (if (eqv? g$t$11952$CQIRF 'quasiquote)
                                          g$quasiquote-macro$9901$CQIRF
                                          (if (eqv?
                                                g$t$11952$CQIRF
                                                'quasisyntax)
                                            g$quasisyntax-macro$9902$CQIRF
                                            (if (eqv?
                                                  g$t$11952$CQIRF
                                                  'with-syntax)
                                              g$with-syntax-macro$9874$CQIRF
                                              (if (eqv? g$t$11952$CQIRF 'when)
                                                g$when-macro$9866$CQIRF
                                                (if (eqv?
                                                      g$t$11952$CQIRF
                                                      'unless)
                                                  g$unless-macro$9867$CQIRF
                                                  (if (eqv?
                                                        g$t$11952$CQIRF
                                                        'case)
                                                    g$case-macro$9869$CQIRF
                                                    (if (eqv?
                                                          g$t$11952$CQIRF
                                                          'identifier-syntax)
                                                      g$identifier-syntax-macro$9891$CQIRF
                                                      (if (eqv?
                                                            g$t$11952$CQIRF
                                                            'time)
                                                        g$time-macro$9887$CQIRF
                                                        (if (eqv?
                                                              g$t$11952$CQIRF
                                                              'delay)
                                                          g$delay-macro$9888$CQIRF
                                                          (if (eqv?
                                                                g$t$11952$CQIRF
                                                                'assert)
                                                            g$assert-macro$9889$CQIRF
                                                            (if (eqv?
                                                                  g$t$11952$CQIRF
                                                                  'endianness)
                                                              g$endianness-macro$9890$CQIRF
                                                              (if (eqv?
                                                                    g$t$11952$CQIRF
                                                                    'guard)
                                                                g$guard-macro$9885$CQIRF
                                                                (if (eqv?
                                                                      g$t$11952$CQIRF
                                                                      'define-enumeration)
                                                                  g$define-enumeration-macro$9886$CQIRF
                                                                  (if (eqv?
                                                                        g$t$11952$CQIRF
                                                                        'trace-lambda)
                                                                    g$trace-lambda-macro$9879$CQIRF
                                                                    (if (eqv?
                                                                          g$t$11952$CQIRF
                                                                          'trace-define)
                                                                      g$trace-define-macro$9880$CQIRF
                                                                      (if (eqv?
                                                                            g$t$11952$CQIRF
                                                                            'trace-define-syntax)
                                                                        g$trace-define-syntax-macro$9881$CQIRF
                                                                        (if (eqv?
                                                                              g$t$11952$CQIRF
                                                                              'trace-let-syntax)
                                                                          g$trace-let-syntax-macro$9883$CQIRF
                                                                          (if (eqv?
                                                                                g$t$11952$CQIRF
                                                                                'trace-letrec-syntax)
                                                                            g$trace-letrec-syntax-macro$9884$CQIRF
                                                                            (if (eqv?
                                                                                  g$t$11952$CQIRF
                                                                                  'define-condition-type)
                                                                              g$define-condition-type-macro$9905$CQIRF
                                                                              (if (eqv?
                                                                                    g$t$11952$CQIRF
                                                                                    'parameterize)
                                                                                g$parameterize-macro$9907$CQIRF
                                                                                (if (eqv?
                                                                                      g$t$11952$CQIRF
                                                                                      'include-into)
                                                                                  g$include-into-macro$9899$CQIRF
                                                                                  (if (eqv?
                                                                                        g$t$11952$CQIRF
                                                                                        'eol-style)
                                                                                    (case-lambda
                                                                                      ((g$x$11953$CQIRF)
                                                                                       (g$symbol-macro$9919$CQIRF
                                                                                         g$x$11953$CQIRF
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (eqv?
                                                                                          g$t$11952$CQIRF
                                                                                          'error-handling-mode)
                                                                                      (case-lambda
                                                                                        ((g$x$11954$CQIRF)
                                                                                         (g$symbol-macro$9919$CQIRF
                                                                                           g$x$11954$CQIRF
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (eqv?
                                                                                            g$t$11952$CQIRF
                                                                                            'buffer-mode)
                                                                                        (case-lambda
                                                                                          ((g$x$11955$CQIRF)
                                                                                           (g$symbol-macro$9919$CQIRF
                                                                                             g$x$11955$CQIRF
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (eqv?
                                                                                              g$t$11952$CQIRF
                                                                                              'file-options)
                                                                                          g$file-options-macro$9918$CQIRF
                                                                                          (if (g$memv$5939$CQIRF
                                                                                                g$t$11952$CQIRF
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$9906$CQIRF
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$11951$CQIRF)))))))))))))))))))))))))))))))))))))))))
             g$x$11951$CQIRF)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$11951$CQIRF))))))
   (g$local-macro-transformer$9921$CQIRF
     g$local-macro-transformer$13462$CQIRF
     (case-lambda ((g$x$11956$CQIRF) (car g$x$11956$CQIRF))))
   (g$do-macro-call$9922$CQIRF
     g$do-macro-call$13463$CQIRF
     (case-lambda
       ((g$transformer$11957$CQIRF g$expr$11958$CQIRF g$r$11959$CQIRF)
        (letrec* ((g$return$11960$CQIRF
                    (case-lambda
                      ((g$x$11968$CQIRF)
                       (begin
                         ((letrec ((g$f$11969$CQIRF
                                     (case-lambda
                                       ((g$x$11970$CQIRF)
                                        (if (not (g$stx?$9519$CQIRF
                                                   g$x$11970$CQIRF))
                                          (if (pair? g$x$11970$CQIRF)
                                            (begin
                                              (g$f$11969$CQIRF
                                                (car g$x$11970$CQIRF))
                                              (g$f$11969$CQIRF
                                                (cdr g$x$11970$CQIRF)))
                                            (if (g$vector?$6615$CQIRF
                                                  g$x$11970$CQIRF)
                                              (g$vector-for-each$6678$CQIRF
                                                g$f$11969$CQIRF
                                                g$x$11970$CQIRF)
                                              (if (g$symbol?$6617$CQIRF
                                                    g$x$11970$CQIRF)
                                                (g$syntax-violation$10028$CQIRF
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$11958$CQIRF
                                                  g$x$11970$CQIRF)
                                                (void))))
                                          (void))))))
                            g$f$11969$CQIRF)
                          g$x$11968$CQIRF)
                         (g$add-mark$9536$CQIRF
                           (g$gen-mark$9531$CQIRF)
                           g$x$11968$CQIRF
                           g$expr$11958$CQIRF))))))
          ((case-lambda
             ((g$x$11961$CQIRF)
              (if (g$procedure?$6619$CQIRF g$x$11961$CQIRF)
                (g$return$11960$CQIRF
                  (g$x$11961$CQIRF
                    (case-lambda
                      ((g$id$11962$CQIRF)
                       (begin
                         (if (not (g$id?$9547$CQIRF g$id$11962$CQIRF))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$11962$CQIRF)
                           (void))
                         ((case-lambda
                            ((g$label$11963$CQIRF)
                             ((case-lambda
                                ((g$binding$11964$CQIRF)
                                 ((case-lambda
                                    ((g$t$11965$CQIRF)
                                     (if (eqv? g$t$11965$CQIRF 'local-ctv)
                                       (g$cadr$6626$CQIRF g$binding$11964$CQIRF)
                                       (if (eqv? g$t$11965$CQIRF 'global-ctv)
                                         ((case-lambda
                                            ((g$lib$11966$CQIRF
                                               g$loc$11967$CQIRF)
                                             (begin
                                               (g$visit-library$9287$CQIRF
                                                 g$lib$11966$CQIRF)
                                               (symbol-value
                                                 g$loc$11967$CQIRF))))
                                          (g$cadr$6626$CQIRF
                                            g$binding$11964$CQIRF)
                                          (g$cddr$6628$CQIRF
                                            g$binding$11964$CQIRF))
                                         '#f))))
                                  (car g$binding$11964$CQIRF))))
                              (g$label->binding$9562$CQIRF
                                g$label$11963$CQIRF
                                g$r$11959$CQIRF))))
                          (g$id->label$9560$CQIRF g$id$11962$CQIRF)))))))
                (g$return$11960$CQIRF g$x$11961$CQIRF))))
           (g$transformer$11957$CQIRF
             (g$add-mark$9536$CQIRF
               g$anti-mark$9532$CQIRF
               g$expr$11958$CQIRF
               '#f)))))))
   (g$chi-macro$9923$CQIRF
     g$chi-macro$13464$CQIRF
     (case-lambda
       ((g$p$11971$CQIRF g$e$11972$CQIRF g$r$11973$CQIRF)
        (g$do-macro-call$9922$CQIRF
          (g$macro-transformer$9920$CQIRF g$p$11971$CQIRF)
          g$e$11972$CQIRF
          g$r$11973$CQIRF))))
   (g$chi-local-macro$9924$CQIRF
     g$chi-local-macro$13465$CQIRF
     (case-lambda
       ((g$p$11974$CQIRF g$e$11975$CQIRF g$r$11976$CQIRF)
        (g$do-macro-call$9922$CQIRF
          (g$local-macro-transformer$9921$CQIRF g$p$11974$CQIRF)
          g$e$11975$CQIRF
          g$r$11976$CQIRF))))
   (g$chi-global-macro$9925$CQIRF
     g$chi-global-macro$13466$CQIRF
     (case-lambda
       ((g$p$11977$CQIRF g$e$11978$CQIRF g$r$11979$CQIRF)
        ((case-lambda
           ((g$lib$11980$CQIRF g$loc$11981$CQIRF)
            (begin
              (g$visit-library$9287$CQIRF g$lib$11980$CQIRF)
              ((case-lambda
                 ((g$x$11982$CQIRF)
                  ((case-lambda
                     ((g$transformer$11983$CQIRF)
                      (g$do-macro-call$9922$CQIRF
                        g$transformer$11983$CQIRF
                        g$e$11978$CQIRF
                        g$r$11979$CQIRF)))
                   (if (g$procedure?$6619$CQIRF g$x$11982$CQIRF)
                     g$x$11982$CQIRF
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$11982$CQIRF)))))
               (symbol-value g$loc$11981$CQIRF)))))
         (car g$p$11977$CQIRF)
         (cdr g$p$11977$CQIRF)))))
   (g$chi-expr*$9926$CQIRF
     g$chi-expr*$13467$CQIRF
     (case-lambda
       ((g$e*$11984$CQIRF g$r$11985$CQIRF g$mr$11986$CQIRF)
        (if (null? g$e*$11984$CQIRF)
          '()
          ((case-lambda
             ((g$e$11987$CQIRF)
              (cons
                g$e$11987$CQIRF
                (g$chi-expr*$9926$CQIRF
                  (cdr g$e*$11984$CQIRF)
                  g$r$11985$CQIRF
                  g$mr$11986$CQIRF))))
           (g$chi-expr$9928$CQIRF
             (car g$e*$11984$CQIRF)
             g$r$11985$CQIRF
             g$mr$11986$CQIRF))))))
   (g$chi-application$9927$CQIRF
     g$chi-application$13468$CQIRF
     (case-lambda
       ((g$e$11988$CQIRF g$r$11989$CQIRF g$mr$11990$CQIRF)
        ((case-lambda
           ((g$t$11991$CQIRF)
            ((case-lambda
               ((g$ls/false$11992$CQIRF)
                (if g$ls/false$11992$CQIRF
                  (apply
                    (case-lambda
                      ((g$rator$11993$CQIRF g$rands$11994$CQIRF)
                       ((case-lambda
                          ((g$rator$11995$CQIRF)
                           (cons
                             g$rator$11995$CQIRF
                             (g$chi-expr*$9926$CQIRF
                               g$rands$11994$CQIRF
                               g$r$11989$CQIRF
                               g$mr$11990$CQIRF))))
                        (g$chi-expr$9928$CQIRF
                          g$rator$11993$CQIRF
                          g$r$11989$CQIRF
                          g$mr$11990$CQIRF))))
                    g$ls/false$11992$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$11991$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$11991$CQIRF '(any . each-any)))))
         g$e$11988$CQIRF))))
   (g$chi-expr$9928$CQIRF
     g$chi-expr$13469$CQIRF
     (case-lambda
       ((g$e$11996$CQIRF g$r$11997$CQIRF g$mr$11998$CQIRF)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$9567$CQIRF g$e$11996$CQIRF g$r$11997$CQIRF)))
          (case-lambda
            ((g$type$12002$CQIRF g$value$12003$CQIRF g$kwd$12004$CQIRF)
             ((case-lambda
                ((g$kwd$12005$CQIRF g$value$12006$CQIRF g$type$12007$CQIRF)
                 ((case-lambda
                    ((g$t$12008$CQIRF)
                     (if (eqv? g$t$12008$CQIRF 'core-macro)
                       ((case-lambda
                          ((g$transformer$12009$CQIRF)
                           (g$transformer$12009$CQIRF
                             g$e$11996$CQIRF
                             g$r$11997$CQIRF
                             g$mr$11998$CQIRF)))
                        (g$core-macro-transformer$9917$CQIRF
                          g$value$12006$CQIRF))
                       (if (eqv? g$t$12008$CQIRF 'global)
                         ((case-lambda
                            ((g$lib$12010$CQIRF)
                             ((case-lambda
                                ((g$loc$12011$CQIRF)
                                 (begin
                                   ((g$inv-collector$9964$CQIRF)
                                    g$lib$12010$CQIRF)
                                   g$loc$12011$CQIRF)))
                              (cdr g$value$12006$CQIRF))))
                          (car g$value$12006$CQIRF))
                         (if (eqv? g$t$12008$CQIRF 'core-prim)
                           ((case-lambda
                              ((g$name$12012$CQIRF)
                               (list 'primitive g$name$12012$CQIRF)))
                            g$value$12006$CQIRF)
                           (if (eqv? g$t$12008$CQIRF 'call)
                             (g$chi-application$9927$CQIRF
                               g$e$11996$CQIRF
                               g$r$11997$CQIRF
                               g$mr$11998$CQIRF)
                             (if (eqv? g$t$12008$CQIRF 'lexical)
                               ((case-lambda
                                  ((g$lex$12013$CQIRF) g$lex$12013$CQIRF))
                                (g$lexical-var$9854$CQIRF g$value$12006$CQIRF))
                               (if (g$memv$5939$CQIRF
                                     g$t$12008$CQIRF
                                     '(global-macro global-macro!))
                                 (g$chi-expr$9928$CQIRF
                                   (g$chi-global-macro$9925$CQIRF
                                     g$value$12006$CQIRF
                                     g$e$11996$CQIRF
                                     g$r$11997$CQIRF)
                                   g$r$11997$CQIRF
                                   g$mr$11998$CQIRF)
                                 (if (g$memv$5939$CQIRF
                                       g$t$12008$CQIRF
                                       '(local-macro local-macro!))
                                   (g$chi-expr$9928$CQIRF
                                     (g$chi-local-macro$9924$CQIRF
                                       g$value$12006$CQIRF
                                       g$e$11996$CQIRF
                                       g$r$11997$CQIRF)
                                     g$r$11997$CQIRF
                                     g$mr$11998$CQIRF)
                                   (if (g$memv$5939$CQIRF
                                         g$t$12008$CQIRF
                                         '(macro macro!))
                                     (g$chi-expr$9928$CQIRF
                                       (g$chi-macro$9923$CQIRF
                                         g$value$12006$CQIRF
                                         g$e$11996$CQIRF
                                         g$r$11997$CQIRF)
                                       g$r$11997$CQIRF
                                       g$mr$11998$CQIRF)
                                     (if (eqv? g$t$12008$CQIRF 'constant)
                                       ((case-lambda
                                          ((g$datum$12014$CQIRF)
                                           (list 'quote g$datum$12014$CQIRF)))
                                        g$value$12006$CQIRF)
                                       (if (eqv? g$t$12008$CQIRF 'set!)
                                         (g$chi-set!$9929$CQIRF
                                           g$e$11996$CQIRF
                                           g$r$11997$CQIRF
                                           g$mr$11998$CQIRF)
                                         (if (eqv? g$t$12008$CQIRF 'begin)
                                           ((case-lambda
                                              ((g$t$12015$CQIRF)
                                               ((case-lambda
                                                  ((g$ls/false$12016$CQIRF)
                                                   (if g$ls/false$12016$CQIRF
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$12017$CQIRF
                                                            g$x*$12018$CQIRF)
                                                          (g$build-sequence$9472$CQIRF
                                                            '#f
                                                            (g$chi-expr*$9926$CQIRF
                                                              (cons
                                                                g$x$12017$CQIRF
                                                                g$x*$12018$CQIRF)
                                                              g$r$11997$CQIRF
                                                              g$mr$11998$CQIRF))))
                                                       g$ls/false$12016$CQIRF)
                                                     (g$syntax-violation$10028$CQIRF
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$12015$CQIRF))))
                                                (g$syntax-dispatch$9910$CQIRF
                                                  g$t$12015$CQIRF
                                                  '(_ any . each-any)))))
                                            g$e$11996$CQIRF)
                                           (if (g$memv$5939$CQIRF
                                                 g$t$12008$CQIRF
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$12019$CQIRF)
                                                 ((case-lambda
                                                    ((g$ls/false$12020$CQIRF)
                                                     (if (if g$ls/false$12020$CQIRF
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$12021$CQIRF
                                                                    g$xrhs*$12022$CQIRF
                                                                    g$xbody$12023$CQIRF
                                                                    g$xbody*$12024$CQIRF)
                                                                  (if (not (g$valid-bound-ids?$9552$CQIRF
                                                                             g$xlhs*$12021$CQIRF))
                                                                    (g$syntax-violation$10028$CQIRF
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$11996$CQIRF)
                                                                    (void))))
                                                               g$ls/false$12020$CQIRF))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$12025$CQIRF
                                                              g$xrhs*$12026$CQIRF
                                                              g$xbody$12027$CQIRF
                                                              g$xbody*$12028$CQIRF)
                                                            ((case-lambda
                                                               ((g$xlab*$12029$CQIRF)
                                                                ((case-lambda
                                                                   ((g$xrib$12030$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$xb*$12031$CQIRF)
                                                                        (g$build-sequence$9472$CQIRF
                                                                          '#f
                                                                          (g$chi-expr*$9926$CQIRF
                                                                            (g$map$5946$CQIRF
                                                                              (case-lambda
                                                                                ((g$x$12032$CQIRF)
                                                                                 (g$add-subst$9537$CQIRF
                                                                                   g$xrib$12030$CQIRF
                                                                                   g$x$12032$CQIRF)))
                                                                              (cons
                                                                                g$xbody$12027$CQIRF
                                                                                g$xbody*$12028$CQIRF))
                                                                            (append
                                                                              (g$map$5946$CQIRF
                                                                                cons
                                                                                g$xlab*$12029$CQIRF
                                                                                g$xb*$12031$CQIRF)
                                                                              g$r$11997$CQIRF)
                                                                            (append
                                                                              (g$map$5946$CQIRF
                                                                                cons
                                                                                g$xlab*$12029$CQIRF
                                                                                g$xb*$12031$CQIRF)
                                                                              g$mr$11998$CQIRF)))))
                                                                     (g$map$5946$CQIRF
                                                                       (case-lambda
                                                                         ((g$x$12033$CQIRF)
                                                                          (g$make-eval-transformer$9589$CQIRF
                                                                            (g$expand-transformer$9957$CQIRF
                                                                              (if (eq? g$type$12007$CQIRF
                                                                                       'let-syntax)
                                                                                g$x$12033$CQIRF
                                                                                (g$add-subst$9537$CQIRF
                                                                                  g$xrib$12030$CQIRF
                                                                                  g$x$12033$CQIRF))
                                                                              g$mr$11998$CQIRF))))
                                                                       g$xrhs*$12026$CQIRF))))
                                                                 (g$make-full-rib$9513$CQIRF
                                                                   g$xlhs*$12025$CQIRF
                                                                   g$xlab*$12029$CQIRF))))
                                                             (g$map$5946$CQIRF
                                                               g$gen-label$9484$CQIRF
                                                               g$xlhs*$12025$CQIRF))))
                                                         g$ls/false$12020$CQIRF)
                                                       (g$syntax-violation$10028$CQIRF
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$12019$CQIRF))))
                                                  (g$syntax-dispatch$9910$CQIRF
                                                    g$t$12019$CQIRF
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$11996$CQIRF)
                                             (if (eqv?
                                                   g$t$12008$CQIRF
                                                   'displaced-lexical)
                                               (g$syntax-violation$10028$CQIRF
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$11996$CQIRF)
                                               (if (eqv?
                                                     g$t$12008$CQIRF
                                                     'syntax)
                                                 (g$syntax-violation$10028$CQIRF
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$11996$CQIRF)
                                                 (if (g$memv$5939$CQIRF
                                                       g$t$12008$CQIRF
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$10028$CQIRF
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$12034$CQIRF)
                                                           (if (eqv?
                                                                 g$t$12034$CQIRF
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$12034$CQIRF
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$12034$CQIRF
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$12034$CQIRF
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$12034$CQIRF
                                                                         'import)
                                                                     '"an import declaration"
                                                                     (if (eqv?
                                                                           g$t$12034$CQIRF
                                                                           'export)
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$12007$CQIRF)
                                                       '" was found where an expression was expected")
                                                     g$e$11996$CQIRF)
                                                   (if (eqv?
                                                         g$t$12008$CQIRF
                                                         'mutable)
                                                     (g$syntax-violation$10028$CQIRF
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$11996$CQIRF)
                                                     (g$syntax-violation$10028$CQIRF
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$11996$CQIRF)))))))))))))))))))
                  g$type$12007$CQIRF)))
              g$kwd$12004$CQIRF
              g$value$12003$CQIRF
              g$type$12002$CQIRF)))))))
   (g$chi-set!$9929$CQIRF
     g$chi-set!$13470$CQIRF
     (case-lambda
       ((g$e$12035$CQIRF g$r$12036$CQIRF g$mr$12037$CQIRF)
        ((case-lambda
           ((g$t$12038$CQIRF)
            ((case-lambda
               ((g$ls/false$12039$CQIRF)
                (if (if g$ls/false$12039$CQIRF
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$12040$CQIRF g$v$12041$CQIRF)
                             (g$id?$9547$CQIRF g$x$12040$CQIRF)))
                          g$ls/false$12039$CQIRF))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$12042$CQIRF g$v$12043$CQIRF)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$9567$CQIRF
                              g$x$12042$CQIRF
                              g$r$12036$CQIRF)))
                         (case-lambda
                           ((g$type$12047$CQIRF
                              g$value$12048$CQIRF
                              g$kwd$12049$CQIRF)
                            ((case-lambda
                               ((g$kwd$12050$CQIRF
                                  g$value$12051$CQIRF
                                  g$type$12052$CQIRF)
                                ((case-lambda
                                   ((g$t$12053$CQIRF)
                                    (if (eqv? g$t$12053$CQIRF 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$9856$CQIRF
                                          g$value$12051$CQIRF
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$9854$CQIRF
                                            g$value$12051$CQIRF)
                                          (g$chi-expr$9928$CQIRF
                                            g$v$12043$CQIRF
                                            g$r$12036$CQIRF
                                            g$mr$12037$CQIRF)))
                                      (if (eqv? g$t$12053$CQIRF 'core-prim)
                                        (g$syntax-violation$10028$CQIRF
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$12035$CQIRF)
                                        (if (eqv? g$t$12053$CQIRF 'global)
                                          (g$syntax-violation$10028$CQIRF
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$12035$CQIRF)
                                          (if (eqv?
                                                g$t$12053$CQIRF
                                                'global-macro!)
                                            (g$chi-expr$9928$CQIRF
                                              (g$chi-global-macro$9925$CQIRF
                                                g$value$12051$CQIRF
                                                g$e$12035$CQIRF
                                                g$r$12036$CQIRF)
                                              g$r$12036$CQIRF
                                              g$mr$12037$CQIRF)
                                            (if (eqv?
                                                  g$t$12053$CQIRF
                                                  'local-macro!)
                                              (g$chi-expr$9928$CQIRF
                                                (g$chi-local-macro$9924$CQIRF
                                                  g$value$12051$CQIRF
                                                  g$e$12035$CQIRF
                                                  g$r$12036$CQIRF)
                                                g$r$12036$CQIRF
                                                g$mr$12037$CQIRF)
                                              (if (eqv?
                                                    g$t$12053$CQIRF
                                                    'mutable)
                                                (g$syntax-violation$10028$CQIRF
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$12035$CQIRF)
                                                (g$syntax-violation$10028$CQIRF
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$12035$CQIRF)))))))))
                                 g$type$12052$CQIRF)))
                             g$kwd$12049$CQIRF
                             g$value$12048$CQIRF
                             g$type$12047$CQIRF))))))
                    g$ls/false$12039$CQIRF)
                  (g$syntax-violation$10028$CQIRF
                    '#f
                    '"invalid syntax"
                    g$t$12038$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$12038$CQIRF '(_ any any)))))
         g$e$12035$CQIRF))))
   (g$verify-formals$9930$CQIRF
     g$verify-formals$13471$CQIRF
     (case-lambda
       ((g$fmls$12054$CQIRF g$stx$12055$CQIRF)
        ((case-lambda
           ((g$t$12056$CQIRF)
            ((case-lambda
               ((g$ls/false$12057$CQIRF)
                (if g$ls/false$12057$CQIRF
                  (apply
                    (case-lambda
                      ((g$x*$12058$CQIRF)
                       (if (not (g$valid-bound-ids?$9552$CQIRF
                                  g$x*$12058$CQIRF))
                         (g$invalid-fmls-error$9875$CQIRF
                           g$stx$12055$CQIRF
                           g$fmls$12054$CQIRF)
                         (void))))
                    g$ls/false$12057$CQIRF)
                  ((case-lambda
                     ((g$t$12059$CQIRF)
                      ((case-lambda
                         ((g$ls/false$12060$CQIRF)
                          (if g$ls/false$12060$CQIRF
                            (apply
                              (case-lambda
                                ((g$x*$12061$CQIRF g$x$12062$CQIRF)
                                 (if (not (g$valid-bound-ids?$9552$CQIRF
                                            (cons
                                              g$x$12062$CQIRF
                                              g$x*$12061$CQIRF)))
                                   (g$invalid-fmls-error$9875$CQIRF
                                     g$stx$12055$CQIRF
                                     g$fmls$12054$CQIRF)
                                   (void))))
                              g$ls/false$12060$CQIRF)
                            ((case-lambda
                               ((g$t$12063$CQIRF)
                                ((case-lambda
                                   ((g$ls/false$12064$CQIRF)
                                    (if g$ls/false$12064$CQIRF
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$10028$CQIRF
                                             '#f
                                             '"invalid syntax"
                                             g$stx$12055$CQIRF)))
                                        g$ls/false$12064$CQIRF)
                                      (g$syntax-violation$10028$CQIRF
                                        '#f
                                        '"invalid syntax"
                                        g$t$12063$CQIRF))))
                                 (g$syntax-dispatch$9910$CQIRF
                                   g$t$12063$CQIRF
                                   '_))))
                             g$t$12059$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$12059$CQIRF
                         '#(each+ any () any)))))
                   g$t$12056$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$12056$CQIRF 'each-any))))
         g$fmls$12054$CQIRF))))
   (g$chi-lambda-clause$9931$CQIRF
     g$chi-lambda-clause$13472$CQIRF
     (case-lambda
       ((g$stx$12065$CQIRF
          g$fmls$12066$CQIRF
          g$body*$12067$CQIRF
          g$r$12068$CQIRF
          g$mr$12069$CQIRF)
        ((case-lambda
           ((g$t$12070$CQIRF)
            ((case-lambda
               ((g$ls/false$12071$CQIRF)
                (if g$ls/false$12071$CQIRF
                  (apply
                    (case-lambda
                      ((g$x*$12072$CQIRF)
                       (begin
                         (g$verify-formals$9930$CQIRF
                           g$fmls$12066$CQIRF
                           g$stx$12065$CQIRF)
                         ((case-lambda
                            ((g$lex*$12073$CQIRF g$lab*$12074$CQIRF)
                             (values
                               g$lex*$12073$CQIRF
                               (g$chi-internal$9939$CQIRF
                                 (g$add-subst$9537$CQIRF
                                   (g$make-full-rib$9513$CQIRF
                                     g$x*$12072$CQIRF
                                     g$lab*$12074$CQIRF)
                                   g$body*$12067$CQIRF)
                                 (g$add-lexicals$9858$CQIRF
                                   g$lab*$12074$CQIRF
                                   g$lex*$12073$CQIRF
                                   g$r$12068$CQIRF)
                                 g$mr$12069$CQIRF))))
                          (g$map$5946$CQIRF
                            g$gen-lexical$9482$CQIRF
                            g$x*$12072$CQIRF)
                          (g$map$5946$CQIRF
                            g$gen-label$9484$CQIRF
                            g$x*$12072$CQIRF)))))
                    g$ls/false$12071$CQIRF)
                  ((case-lambda
                     ((g$t$12075$CQIRF)
                      ((case-lambda
                         ((g$ls/false$12076$CQIRF)
                          (if g$ls/false$12076$CQIRF
                            (apply
                              (case-lambda
                                ((g$x*$12077$CQIRF g$x$12078$CQIRF)
                                 (begin
                                   (g$verify-formals$9930$CQIRF
                                     g$fmls$12066$CQIRF
                                     g$stx$12065$CQIRF)
                                   ((case-lambda
                                      ((g$lex*$12079$CQIRF
                                         g$lab*$12080$CQIRF
                                         g$lex$12081$CQIRF
                                         g$lab$12082$CQIRF)
                                       (values
                                         (append
                                           g$lex*$12079$CQIRF
                                           g$lex$12081$CQIRF)
                                         (g$chi-internal$9939$CQIRF
                                           (g$add-subst$9537$CQIRF
                                             (g$make-full-rib$9513$CQIRF
                                               (cons
                                                 g$x$12078$CQIRF
                                                 g$x*$12077$CQIRF)
                                               (cons
                                                 g$lab$12082$CQIRF
                                                 g$lab*$12080$CQIRF))
                                             g$body*$12067$CQIRF)
                                           (g$add-lexicals$9858$CQIRF
                                             (cons
                                               g$lab$12082$CQIRF
                                               g$lab*$12080$CQIRF)
                                             (cons
                                               g$lex$12081$CQIRF
                                               g$lex*$12079$CQIRF)
                                             g$r$12068$CQIRF)
                                           g$mr$12069$CQIRF))))
                                    (g$map$5946$CQIRF
                                      g$gen-lexical$9482$CQIRF
                                      g$x*$12077$CQIRF)
                                    (g$map$5946$CQIRF
                                      g$gen-label$9484$CQIRF
                                      g$x*$12077$CQIRF)
                                    (g$gen-lexical$9482$CQIRF g$x$12078$CQIRF)
                                    (g$gen-label$9484$CQIRF g$x$12078$CQIRF)))))
                              g$ls/false$12076$CQIRF)
                            ((case-lambda
                               ((g$t$12083$CQIRF)
                                ((case-lambda
                                   ((g$ls/false$12084$CQIRF)
                                    (if g$ls/false$12084$CQIRF
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$10028$CQIRF
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$12066$CQIRF)))
                                        g$ls/false$12084$CQIRF)
                                      (g$syntax-violation$10028$CQIRF
                                        '#f
                                        '"invalid syntax"
                                        g$t$12083$CQIRF))))
                                 (g$syntax-dispatch$9910$CQIRF
                                   g$t$12083$CQIRF
                                   '_))))
                             g$t$12075$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$12075$CQIRF
                         '#(each+ any () any)))))
                   g$t$12070$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$12070$CQIRF 'each-any))))
         g$fmls$12066$CQIRF))))
   (g$chi-lambda-clause*$9932$CQIRF
     g$chi-lambda-clause*$13473$CQIRF
     (case-lambda
       ((g$stx$12085$CQIRF
          g$fmls*$12086$CQIRF
          g$body**$12087$CQIRF
          g$r$12088$CQIRF
          g$mr$12089$CQIRF)
        (if (null? g$fmls*$12086$CQIRF)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$9931$CQIRF
                 g$stx$12085$CQIRF
                 (car g$fmls*$12086$CQIRF)
                 (car g$body**$12087$CQIRF)
                 g$r$12088$CQIRF
                 g$mr$12089$CQIRF)))
            (case-lambda
              ((g$a$12092$CQIRF g$b$12093$CQIRF)
               ((case-lambda
                  ((g$b$12094$CQIRF g$a$12095$CQIRF)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$9932$CQIRF
                          g$stx$12085$CQIRF
                          (cdr g$fmls*$12086$CQIRF)
                          (cdr g$body**$12087$CQIRF)
                          g$r$12088$CQIRF
                          g$mr$12089$CQIRF)))
                     (case-lambda
                       ((g$a*$12098$CQIRF g$b*$12099$CQIRF)
                        ((case-lambda
                           ((g$b*$12100$CQIRF g$a*$12101$CQIRF)
                            (values
                              (cons g$a$12095$CQIRF g$a*$12101$CQIRF)
                              (cons g$b$12094$CQIRF g$b*$12100$CQIRF))))
                         g$b*$12099$CQIRF
                         g$a*$12098$CQIRF))))))
                g$b$12093$CQIRF
                g$a$12092$CQIRF))))))))
   (g$chi-defun$9933$CQIRF
     g$chi-defun$13474$CQIRF
     (case-lambda
       ((g$x$12102$CQIRF g$r$12103$CQIRF g$mr$12104$CQIRF)
        ((case-lambda
           ((g$fmls$12105$CQIRF g$body*$12106$CQIRF)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$9931$CQIRF
                   g$fmls$12105$CQIRF
                   g$fmls$12105$CQIRF
                   g$body*$12106$CQIRF
                   g$r$12103$CQIRF
                   g$mr$12104$CQIRF)))
              (case-lambda
                ((g$fmls$12109$CQIRF g$body$12110$CQIRF)
                 ((case-lambda
                    ((g$body$12111$CQIRF g$fmls$12112$CQIRF)
                     (g$build-lambda$9469$CQIRF
                       '#f
                       g$fmls$12112$CQIRF
                       g$body$12111$CQIRF)))
                  g$body$12110$CQIRF
                  g$fmls$12109$CQIRF))))))
         (car g$x$12102$CQIRF)
         (cdr g$x$12102$CQIRF)))))
   (g$chi-rhs$9934$CQIRF
     g$chi-rhs$13475$CQIRF
     (case-lambda
       ((g$rhs$12113$CQIRF g$r$12114$CQIRF g$mr$12115$CQIRF)
        ((case-lambda
           ((g$t$12116$CQIRF)
            (if (eqv? g$t$12116$CQIRF 'defun)
              (g$chi-defun$9933$CQIRF
                (cdr g$rhs$12113$CQIRF)
                g$r$12114$CQIRF
                g$mr$12115$CQIRF)
              (if (eqv? g$t$12116$CQIRF 'expr)
                ((case-lambda
                   ((g$expr$12117$CQIRF)
                    (g$chi-expr$9928$CQIRF
                      g$expr$12117$CQIRF
                      g$r$12114$CQIRF
                      g$mr$12115$CQIRF)))
                 (cdr g$rhs$12113$CQIRF))
                (if (eqv? g$t$12116$CQIRF 'top-expr)
                  ((case-lambda
                     ((g$expr$12118$CQIRF)
                      (g$build-sequence$9472$CQIRF
                        '#f
                        (list
                          (g$chi-expr$9928$CQIRF
                            g$expr$12118$CQIRF
                            g$r$12114$CQIRF
                            g$mr$12115$CQIRF)
                          (g$build-void$9473$CQIRF)))))
                   (cdr g$rhs$12113$CQIRF))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$12113$CQIRF))))))
         (car g$rhs$12113$CQIRF)))))
   (g$expand-interaction-rhs*/init*$9935$CQIRF
     g$expand-interaction-rhs*/init*$13476$CQIRF
     (case-lambda
       ((g$lhs*$12119$CQIRF
          g$rhs*$12120$CQIRF
          g$init*$12121$CQIRF
          g$r$12122$CQIRF
          g$mr$12123$CQIRF)
        ((letrec ((g$f$12124$CQIRF
                    (case-lambda
                      ((g$lhs*$12125$CQIRF g$rhs*$12126$CQIRF)
                       (if (null? g$lhs*$12125$CQIRF)
                         (g$map$5946$CQIRF
                           (case-lambda
                             ((g$x$12127$CQIRF)
                              (g$chi-expr$9928$CQIRF
                                g$x$12127$CQIRF
                                g$r$12122$CQIRF
                                g$mr$12123$CQIRF)))
                           g$init*$12121$CQIRF)
                         ((case-lambda
                            ((g$lhs$12128$CQIRF g$rhs$12129$CQIRF)
                             ((case-lambda
                                ((g$t$12130$CQIRF)
                                 (if (eqv? g$t$12130$CQIRF 'defun)
                                   ((case-lambda
                                      ((g$rhs$12131$CQIRF)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$12128$CQIRF
                                           g$rhs$12131$CQIRF)
                                         (g$f$12124$CQIRF
                                           (cdr g$lhs*$12125$CQIRF)
                                           (cdr g$rhs*$12126$CQIRF)))))
                                    (g$chi-defun$9933$CQIRF
                                      (cdr g$rhs$12129$CQIRF)
                                      g$r$12122$CQIRF
                                      g$mr$12123$CQIRF))
                                   (if (eqv? g$t$12130$CQIRF 'expr)
                                     ((case-lambda
                                        ((g$rhs$12132$CQIRF)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$12128$CQIRF
                                             g$rhs$12132$CQIRF)
                                           (g$f$12124$CQIRF
                                             (cdr g$lhs*$12125$CQIRF)
                                             (cdr g$rhs*$12126$CQIRF)))))
                                      (g$chi-expr$9928$CQIRF
                                        (cdr g$rhs$12129$CQIRF)
                                        g$r$12122$CQIRF
                                        g$mr$12123$CQIRF))
                                     (if (eqv? g$t$12130$CQIRF 'top-expr)
                                       ((case-lambda
                                          ((g$e$12133$CQIRF)
                                           (cons
                                             g$e$12133$CQIRF
                                             (g$f$12124$CQIRF
                                               (cdr g$lhs*$12125$CQIRF)
                                               (cdr g$rhs*$12126$CQIRF)))))
                                        (g$chi-expr$9928$CQIRF
                                          (cdr g$rhs$12129$CQIRF)
                                          g$r$12122$CQIRF
                                          g$mr$12123$CQIRF))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$12129$CQIRF))))))
                              (car g$rhs$12129$CQIRF))))
                          (car g$lhs*$12125$CQIRF)
                          (car g$rhs*$12126$CQIRF)))))))
           g$f$12124$CQIRF)
         g$lhs*$12119$CQIRF
         g$rhs*$12120$CQIRF))))
   (g$chi-rhs*$9936$CQIRF
     g$chi-rhs*$13477$CQIRF
     (case-lambda
       ((g$rhs*$12134$CQIRF g$r$12135$CQIRF g$mr$12136$CQIRF)
        ((letrec ((g$f$12137$CQIRF
                    (case-lambda
                      ((g$ls$12138$CQIRF)
                       (if (null? g$ls$12138$CQIRF)
                         '()
                         ((case-lambda
                            ((g$a$12139$CQIRF)
                             (cons
                               g$a$12139$CQIRF
                               (g$f$12137$CQIRF (cdr g$ls$12138$CQIRF)))))
                          (g$chi-rhs$9934$CQIRF
                            (car g$ls$12138$CQIRF)
                            g$r$12135$CQIRF
                            g$mr$12136$CQIRF)))))))
           g$f$12137$CQIRF)
         g$rhs*$12134$CQIRF))))
   (g$find-bound=?$9937$CQIRF
     g$find-bound=?$13478$CQIRF
     (case-lambda
       ((g$x$12140$CQIRF g$lhs*$12141$CQIRF g$rhs*$12142$CQIRF)
        (if (null? g$lhs*$12141$CQIRF)
          '#f
          (if (g$bound-id=?$9550$CQIRF g$x$12140$CQIRF (car g$lhs*$12141$CQIRF))
            (car g$rhs*$12142$CQIRF)
            (g$find-bound=?$9937$CQIRF
              g$x$12140$CQIRF
              (cdr g$lhs*$12141$CQIRF)
              (cdr g$rhs*$12142$CQIRF)))))))
   (g$find-dups$9938$CQIRF
     g$find-dups$13479$CQIRF
     (case-lambda
       ((g$ls$12143$CQIRF)
        ((letrec ((g$f$12144$CQIRF
                    (case-lambda
                      ((g$ls$12145$CQIRF g$dups$12146$CQIRF)
                       (if (null? g$ls$12145$CQIRF)
                         g$dups$12146$CQIRF
                         ((case-lambda
                            ((g$t$12147$CQIRF)
                             (if g$t$12147$CQIRF
                               ((case-lambda
                                  ((g$x$12148$CQIRF)
                                   (g$f$12144$CQIRF
                                     (cdr g$ls$12145$CQIRF)
                                     (cons
                                       (list
                                         (car g$ls$12145$CQIRF)
                                         g$x$12148$CQIRF)
                                       g$dups$12146$CQIRF))))
                                g$t$12147$CQIRF)
                               (g$f$12144$CQIRF
                                 (cdr g$ls$12145$CQIRF)
                                 g$dups$12146$CQIRF))))
                          (g$find-bound=?$9937$CQIRF
                            (car g$ls$12145$CQIRF)
                            (cdr g$ls$12145$CQIRF)
                            (cdr g$ls$12145$CQIRF))))))))
           g$f$12144$CQIRF)
         g$ls$12143$CQIRF
         '()))))
   (g$chi-internal$9939$CQIRF
     g$chi-internal$13480$CQIRF
     (case-lambda
       ((g$e*$12149$CQIRF g$r$12150$CQIRF g$mr$12151$CQIRF)
        ((case-lambda
           ((g$rib$12152$CQIRF)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$9956$CQIRF
                   (g$map$5946$CQIRF
                     (case-lambda
                       ((g$x$12161$CQIRF)
                        (g$add-subst$9537$CQIRF
                          g$rib$12152$CQIRF
                          g$x$12161$CQIRF)))
                     (g$syntax->list$9546$CQIRF g$e*$12149$CQIRF))
                   g$r$12150$CQIRF
                   g$mr$12151$CQIRF
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$12152$CQIRF
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$12162$CQIRF
                   g$r$12163$CQIRF
                   g$mr$12164$CQIRF
                   g$lex*$12165$CQIRF
                   g$rhs*$12166$CQIRF
                   g$mod**$12167$CQIRF
                   g$kwd*$12168$CQIRF
                   g$_exp*$12169$CQIRF)
                 ((case-lambda
                    ((g$_exp*$12170$CQIRF
                       g$kwd*$12171$CQIRF
                       g$mod**$12172$CQIRF
                       g$rhs*$12173$CQIRF
                       g$lex*$12174$CQIRF
                       g$mr$12175$CQIRF
                       g$r$12176$CQIRF
                       g$e*$12177$CQIRF)
                     (begin
                       (if (null? g$e*$12177$CQIRF)
                         (g$syntax-violation$10028$CQIRF
                           '#f
                           '"no expression in body"
                           g$e*$12177$CQIRF)
                         (void))
                       ((case-lambda
                          ((g$init*$12178$CQIRF)
                           ((case-lambda
                              ((g$rhs*$12179$CQIRF)
                               (g$build-letrec*$9475$CQIRF
                                 '#f
                                 (g$reverse$6624$CQIRF g$lex*$12174$CQIRF)
                                 (g$reverse$6624$CQIRF g$rhs*$12179$CQIRF)
                                 (g$build-sequence$9472$CQIRF
                                   '#f
                                   g$init*$12178$CQIRF))))
                            (g$chi-rhs*$9936$CQIRF
                              g$rhs*$12173$CQIRF
                              g$r$12176$CQIRF
                              g$mr$12175$CQIRF))))
                        (g$chi-expr*$9926$CQIRF
                          (append
                            (apply
                              append
                              (g$reverse$6624$CQIRF g$mod**$12172$CQIRF))
                            g$e*$12177$CQIRF)
                          g$r$12176$CQIRF
                          g$mr$12175$CQIRF)))))
                  g$_exp*$12169$CQIRF
                  g$kwd*$12168$CQIRF
                  g$mod**$12167$CQIRF
                  g$rhs*$12166$CQIRF
                  g$lex*$12165$CQIRF
                  g$mr$12164$CQIRF
                  g$r$12163$CQIRF
                  g$e*$12162$CQIRF))))))
         (g$make-empty-rib$9505$CQIRF)))))
   (g$parse-module$9940$CQIRF
     g$parse-module$13481$CQIRF
     (case-lambda
       ((g$e$12180$CQIRF)
        ((case-lambda
           ((g$t$12181$CQIRF)
            ((case-lambda
               ((g$ls/false$12182$CQIRF)
                (if g$ls/false$12182$CQIRF
                  (apply
                    (case-lambda
                      ((g$export*$12183$CQIRF g$b*$12184$CQIRF)
                       (begin
                         (if (not (g$for-all$5944$CQIRF
                                    g$id?$9547$CQIRF
                                    g$export*$12183$CQIRF))
                           (g$syntax-violation$10028$CQIRF
                             '#f
                             '"module exports must be identifiers"
                             g$e$12180$CQIRF)
                           (void))
                         (values
                           '#f
                           (g$list->vector$6612$CQIRF g$export*$12183$CQIRF)
                           g$b*$12184$CQIRF))))
                    g$ls/false$12182$CQIRF)
                  ((case-lambda
                     ((g$t$12185$CQIRF)
                      ((case-lambda
                         ((g$ls/false$12186$CQIRF)
                          (if g$ls/false$12186$CQIRF
                            (apply
                              (case-lambda
                                ((g$name$12187$CQIRF
                                   g$export*$12188$CQIRF
                                   g$b*$12189$CQIRF)
                                 (begin
                                   (if (not (g$id?$9547$CQIRF
                                              g$name$12187$CQIRF))
                                     (g$syntax-violation$10028$CQIRF
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$12180$CQIRF)
                                     (void))
                                   (if (not (g$for-all$5944$CQIRF
                                              g$id?$9547$CQIRF
                                              g$export*$12188$CQIRF))
                                     (g$syntax-violation$10028$CQIRF
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$12180$CQIRF)
                                     (void))
                                   (values
                                     g$name$12187$CQIRF
                                     (g$list->vector$6612$CQIRF
                                       g$export*$12188$CQIRF)
                                     g$b*$12189$CQIRF))))
                              g$ls/false$12186$CQIRF)
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"invalid syntax"
                              g$t$12185$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$12185$CQIRF
                         '(_ any each-any . each-any)))))
                   g$t$12181$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$12181$CQIRF
               '(_ each-any . each-any)))))
         g$e$12180$CQIRF))))
   (g$7994$9941$CQIRF
     g$7994$13482$CQIRF
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$7997$CQIRF
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$7996$9942$CQIRF g$7996$13483$CQIRF '#f)
   (g$7995$9943$CQIRF
     g$7995$13484$CQIRF
     (make-record-constructor-descriptor
       g$7994$9941$CQIRF
       '#f
       g$7996$9942$CQIRF))
   (g$module-interface?$9946$CQIRF
     g$module-interface?$13485$CQIRF
     (record-predicate g$7994$9941$CQIRF))
   (g$make-module-interface$9947$CQIRF
     g$make-module-interface$13486$CQIRF
     (record-constructor g$7995$9943$CQIRF))
   (g$module-interface-first-mark$9948$CQIRF
     g$module-interface-first-mark$13487$CQIRF
     (record-accessor g$7994$9941$CQIRF '0))
   (g$module-interface-exp-id-vec$9949$CQIRF
     g$module-interface-exp-id-vec$13488$CQIRF
     (record-accessor g$7994$9941$CQIRF '1))
   (g$module-interface-exp-lab-vec$9950$CQIRF
     g$module-interface-exp-lab-vec$13489$CQIRF
     (record-accessor g$7994$9941$CQIRF '2))
   (g$set-module-interface-first-mark!$9951$CQIRF
     g$set-module-interface-first-mark!$13490$CQIRF
     (record-mutator g$7994$9941$CQIRF '0))
   (g$set-module-interface-exp-id-vec!$9952$CQIRF
     g$set-module-interface-exp-id-vec!$13491$CQIRF
     (record-mutator g$7994$9941$CQIRF '1))
   (g$set-module-interface-exp-lab-vec!$9953$CQIRF
     g$set-module-interface-exp-lab-vec!$13492$CQIRF
     (record-mutator g$7994$9941$CQIRF '2))
   (g$module-interface-exp-id*$9954$CQIRF
     g$module-interface-exp-id*$13493$CQIRF
     (case-lambda
       ((g$iface$12190$CQIRF g$id$12191$CQIRF)
        (letrec* ((g$diff-marks$12192$CQIRF
                    (case-lambda
                      ((g$ls$12196$CQIRF g$x$12197$CQIRF)
                       (begin
                         (if (null? g$ls$12196$CQIRF)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$12198$CQIRF)
                             (if (eq? g$a$12198$CQIRF g$x$12197$CQIRF)
                               '()
                               (cons
                                 g$a$12198$CQIRF
                                 (g$diff-marks$12192$CQIRF
                                   (cdr g$ls$12196$CQIRF)
                                   g$x$12197$CQIRF)))))
                          (car g$ls$12196$CQIRF)))))))
          ((case-lambda
             ((g$diff$12193$CQIRF g$id-vec$12194$CQIRF)
              (if (null? g$diff$12193$CQIRF)
                g$id-vec$12194$CQIRF
                (g$vector-map$6677$CQIRF
                  (case-lambda
                    ((g$x$12195$CQIRF)
                     (g$make-stx$9520$CQIRF
                       (g$stx-expr$9521$CQIRF g$x$12195$CQIRF)
                       (append
                         g$diff$12193$CQIRF
                         (g$stx-mark*$9522$CQIRF g$x$12195$CQIRF))
                       '()
                       '())))
                  g$id-vec$12194$CQIRF))))
           (g$diff-marks$12192$CQIRF
             (g$stx-mark*$9522$CQIRF g$id$12191$CQIRF)
             (g$module-interface-first-mark$9948$CQIRF g$iface$12190$CQIRF))
           (g$module-interface-exp-id-vec$9949$CQIRF g$iface$12190$CQIRF))))))
   (g$chi-internal-module$9955$CQIRF
     g$chi-internal-module$13494$CQIRF
     (case-lambda
       ((g$e$12199$CQIRF
          g$r$12200$CQIRF
          g$mr$12201$CQIRF
          g$lex*$12202$CQIRF
          g$rhs*$12203$CQIRF
          g$mod**$12204$CQIRF
          g$kwd*$12205$CQIRF)
        (call-with-values
          (case-lambda (() (g$parse-module$9940$CQIRF g$e$12199$CQIRF)))
          (case-lambda
            ((g$name$12209$CQIRF g$exp-id*$12210$CQIRF g$e*$12211$CQIRF)
             ((case-lambda
                ((g$e*$12212$CQIRF g$exp-id*$12213$CQIRF g$name$12214$CQIRF)
                 ((case-lambda
                    ((g$rib$12215$CQIRF)
                     ((case-lambda
                        ((g$e*$12216$CQIRF)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$9956$CQIRF
                                g$e*$12216$CQIRF
                                g$r$12200$CQIRF
                                g$mr$12201$CQIRF
                                g$lex*$12202$CQIRF
                                g$rhs*$12203$CQIRF
                                g$mod**$12204$CQIRF
                                g$kwd*$12205$CQIRF
                                '()
                                g$rib$12215$CQIRF
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$12225$CQIRF
                                g$r$12226$CQIRF
                                g$mr$12227$CQIRF
                                g$lex*$12228$CQIRF
                                g$rhs*$12229$CQIRF
                                g$mod**$12230$CQIRF
                                g$kwd*$12231$CQIRF
                                g$_exp*$12232$CQIRF)
                              ((case-lambda
                                 ((g$_exp*$12233$CQIRF
                                    g$kwd*$12234$CQIRF
                                    g$mod**$12235$CQIRF
                                    g$rhs*$12236$CQIRF
                                    g$lex*$12237$CQIRF
                                    g$mr$12238$CQIRF
                                    g$r$12239$CQIRF
                                    g$e*$12240$CQIRF)
                                  ((case-lambda
                                     ((g$exp-lab*$12241$CQIRF
                                        g$mod**$12242$CQIRF)
                                      (if (not g$name$12214$CQIRF)
                                        (values
                                          g$lex*$12237$CQIRF
                                          g$rhs*$12236$CQIRF
                                          g$exp-id*$12213$CQIRF
                                          g$exp-lab*$12241$CQIRF
                                          g$r$12239$CQIRF
                                          g$mr$12238$CQIRF
                                          g$mod**$12242$CQIRF
                                          g$kwd*$12234$CQIRF)
                                        ((case-lambda
                                           ((g$lab$12243$CQIRF
                                              g$iface$12244$CQIRF)
                                            (values
                                              g$lex*$12237$CQIRF
                                              g$rhs*$12236$CQIRF
                                              (vector g$name$12214$CQIRF)
                                              (vector g$lab$12243$CQIRF)
                                              (cons
                                                (cons
                                                  g$lab$12243$CQIRF
                                                  (cons
                                                    '$module
                                                    g$iface$12244$CQIRF))
                                                g$r$12239$CQIRF)
                                              (cons
                                                (cons
                                                  g$lab$12243$CQIRF
                                                  (cons
                                                    '$module
                                                    g$iface$12244$CQIRF))
                                                g$mr$12238$CQIRF)
                                              g$mod**$12242$CQIRF
                                              g$kwd*$12234$CQIRF)))
                                         (g$gen-label$9484$CQIRF 'module)
                                         (g$make-module-interface$9947$CQIRF
                                           (car (g$stx-mark*$9522$CQIRF
                                                  g$name$12214$CQIRF))
                                           (g$vector-map$6677$CQIRF
                                             (case-lambda
                                               ((g$x$12245$CQIRF)
                                                (g$make-stx$9520$CQIRF
                                                  (g$stx-expr$9521$CQIRF
                                                    g$x$12245$CQIRF)
                                                  (g$stx-mark*$9522$CQIRF
                                                    g$x$12245$CQIRF)
                                                  '()
                                                  '())))
                                             g$exp-id*$12213$CQIRF)
                                           g$exp-lab*$12241$CQIRF)))))
                                   (g$vector-map$6677$CQIRF
                                     (case-lambda
                                       ((g$x$12246$CQIRF)
                                        ((case-lambda
                                           ((g$t$12247$CQIRF)
                                            (if g$t$12247$CQIRF
                                              g$t$12247$CQIRF
                                              (begin
                                                '#f
                                                (g$syntax-violation$10028$CQIRF
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$12246$CQIRF)))))
                                         (g$id->label$9560$CQIRF
                                           (g$make-stx$9520$CQIRF
                                             (g$id->sym$9548$CQIRF
                                               g$x$12246$CQIRF)
                                             (g$stx-mark*$9522$CQIRF
                                               g$x$12246$CQIRF)
                                             (list g$rib$12215$CQIRF)
                                             '())))))
                                     g$exp-id*$12213$CQIRF)
                                   (cons
                                     g$e*$12240$CQIRF
                                     g$mod**$12235$CQIRF))))
                               g$_exp*$12232$CQIRF
                               g$kwd*$12231$CQIRF
                               g$mod**$12230$CQIRF
                               g$rhs*$12229$CQIRF
                               g$lex*$12228$CQIRF
                               g$mr$12227$CQIRF
                               g$r$12226$CQIRF
                               g$e*$12225$CQIRF))))))
                      (g$map$5946$CQIRF
                        (case-lambda
                          ((g$x$12248$CQIRF)
                           (g$add-subst$9537$CQIRF
                             g$rib$12215$CQIRF
                             g$x$12248$CQIRF)))
                        (g$syntax->list$9546$CQIRF g$e*$12212$CQIRF)))))
                  (g$make-empty-rib$9505$CQIRF))))
              g$e*$12211$CQIRF
              g$exp-id*$12210$CQIRF
              g$name$12209$CQIRF)))))))
   (g$chi-body*$9956$CQIRF
     g$chi-body*$13495$CQIRF
     (case-lambda
       ((g$e*$12249$CQIRF
          g$r$12250$CQIRF
          g$mr$12251$CQIRF
          g$lex*$12252$CQIRF
          g$rhs*$12253$CQIRF
          g$mod**$12254$CQIRF
          g$kwd*$12255$CQIRF
          g$exp*$12256$CQIRF
          g$rib$12257$CQIRF
          g$mix?$12258$CQIRF
          g$sd?$12259$CQIRF)
        (if (null? g$e*$12249$CQIRF)
          (values
            g$e*$12249$CQIRF
            g$r$12250$CQIRF
            g$mr$12251$CQIRF
            g$lex*$12252$CQIRF
            g$rhs*$12253$CQIRF
            g$mod**$12254$CQIRF
            g$kwd*$12255$CQIRF
            g$exp*$12256$CQIRF)
          ((case-lambda
             ((g$e$12260$CQIRF)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$9567$CQIRF g$e$12260$CQIRF g$r$12250$CQIRF)))
                (case-lambda
                  ((g$type$12264$CQIRF g$value$12265$CQIRF g$kwd$12266$CQIRF)
                   ((case-lambda
                      ((g$kwd$12267$CQIRF
                         g$value$12268$CQIRF
                         g$type$12269$CQIRF)
                       ((case-lambda
                          ((g$kwd*$12270$CQIRF)
                           ((case-lambda
                              ((g$t$12271$CQIRF)
                               (if (eqv? g$t$12271$CQIRF 'define)
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$9850$CQIRF
                                        g$e$12260$CQIRF)))
                                   (case-lambda
                                     ((g$id$12274$CQIRF g$rhs$12275$CQIRF)
                                      ((case-lambda
                                         ((g$rhs$12276$CQIRF g$id$12277$CQIRF)
                                          (begin
                                            (if (g$bound-id-member?$9554$CQIRF
                                                  g$id$12277$CQIRF
                                                  g$kwd*$12270$CQIRF)
                                              (g$syntax-violation$10028$CQIRF
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$12260$CQIRF)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$9486$CQIRF
                                                   g$id$12277$CQIRF
                                                   g$rib$12257$CQIRF
                                                   g$sd?$12259$CQIRF)))
                                              (case-lambda
                                                ((g$lab$12280$CQIRF
                                                   g$lex$12281$CQIRF)
                                                 ((case-lambda
                                                    ((g$lex$12282$CQIRF
                                                       g$lab$12283$CQIRF)
                                                     (begin
                                                       (g$extend-rib!$9508$CQIRF
                                                         g$rib$12257$CQIRF
                                                         g$id$12277$CQIRF
                                                         g$lab$12283$CQIRF
                                                         g$sd?$12259$CQIRF)
                                                       (g$chi-body*$9956$CQIRF
                                                         (cdr g$e*$12249$CQIRF)
                                                         (g$add-lexical$9857$CQIRF
                                                           g$lab$12283$CQIRF
                                                           g$lex$12282$CQIRF
                                                           g$r$12250$CQIRF)
                                                         g$mr$12251$CQIRF
                                                         (cons
                                                           g$lex$12282$CQIRF
                                                           g$lex*$12252$CQIRF)
                                                         (cons
                                                           g$rhs$12276$CQIRF
                                                           g$rhs*$12253$CQIRF)
                                                         g$mod**$12254$CQIRF
                                                         g$kwd*$12270$CQIRF
                                                         g$exp*$12256$CQIRF
                                                         g$rib$12257$CQIRF
                                                         g$mix?$12258$CQIRF
                                                         g$sd?$12259$CQIRF))))
                                                  g$lex$12281$CQIRF
                                                  g$lab$12280$CQIRF)))))))
                                       g$rhs$12275$CQIRF
                                       g$id$12274$CQIRF))))
                                 (if (eqv? g$t$12271$CQIRF 'define-syntax)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$9851$CQIRF
                                          g$e$12260$CQIRF)))
                                     (case-lambda
                                       ((g$id$12286$CQIRF g$rhs$12287$CQIRF)
                                        ((case-lambda
                                           ((g$rhs$12288$CQIRF g$id$12289$CQIRF)
                                            (begin
                                              (if (g$bound-id-member?$9554$CQIRF
                                                    g$id$12289$CQIRF
                                                    g$kwd*$12270$CQIRF)
                                                (g$syntax-violation$10028$CQIRF
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$12260$CQIRF)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$12290$CQIRF)
                                                  ((case-lambda
                                                     ((g$expanded-rhs$12291$CQIRF)
                                                      (begin
                                                        (g$extend-rib!$9508$CQIRF
                                                          g$rib$12257$CQIRF
                                                          g$id$12289$CQIRF
                                                          g$lab$12290$CQIRF
                                                          g$sd?$12259$CQIRF)
                                                        ((case-lambda
                                                           ((g$b$12292$CQIRF)
                                                            (g$chi-body*$9956$CQIRF
                                                              (cdr g$e*$12249$CQIRF)
                                                              (cons
                                                                (cons
                                                                  g$lab$12290$CQIRF
                                                                  g$b$12292$CQIRF)
                                                                g$r$12250$CQIRF)
                                                              (cons
                                                                (cons
                                                                  g$lab$12290$CQIRF
                                                                  g$b$12292$CQIRF)
                                                                g$mr$12251$CQIRF)
                                                              g$lex*$12252$CQIRF
                                                              g$rhs*$12253$CQIRF
                                                              g$mod**$12254$CQIRF
                                                              g$kwd*$12270$CQIRF
                                                              g$exp*$12256$CQIRF
                                                              g$rib$12257$CQIRF
                                                              g$mix?$12258$CQIRF
                                                              g$sd?$12259$CQIRF)))
                                                         (g$make-eval-transformer$9589$CQIRF
                                                           g$expanded-rhs$12291$CQIRF)))))
                                                   (g$expand-transformer$9957$CQIRF
                                                     g$rhs$12288$CQIRF
                                                     g$mr$12251$CQIRF))))
                                               (g$gen-define-label$9487$CQIRF
                                                 g$id$12289$CQIRF
                                                 g$rib$12257$CQIRF
                                                 g$sd?$12259$CQIRF)))))
                                         g$rhs$12287$CQIRF
                                         g$id$12286$CQIRF))))
                                   (if (g$memv$5939$CQIRF
                                         g$t$12271$CQIRF
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$12293$CQIRF)
                                         ((case-lambda
                                            ((g$ls/false$12294$CQIRF)
                                             (if (if g$ls/false$12294$CQIRF
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$12295$CQIRF
                                                            g$xrhs*$12296$CQIRF
                                                            g$xbody*$12297$CQIRF)
                                                          (if (not (g$valid-bound-ids?$9552$CQIRF
                                                                     g$xlhs*$12295$CQIRF))
                                                            (g$syntax-violation$10028$CQIRF
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$12260$CQIRF)
                                                            (void))))
                                                       g$ls/false$12294$CQIRF))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$12298$CQIRF
                                                      g$xrhs*$12299$CQIRF
                                                      g$xbody*$12300$CQIRF)
                                                    ((case-lambda
                                                       ((g$xlab*$12301$CQIRF)
                                                        ((case-lambda
                                                           ((g$xrib$12302$CQIRF)
                                                            ((case-lambda
                                                               ((g$xb*$12303$CQIRF)
                                                                (g$chi-body*$9956$CQIRF
                                                                  (append
                                                                    (g$map$5946$CQIRF
                                                                      (case-lambda
                                                                        ((g$x$12304$CQIRF)
                                                                         (g$add-subst$9537$CQIRF
                                                                           g$xrib$12302$CQIRF
                                                                           g$x$12304$CQIRF)))
                                                                      g$xbody*$12300$CQIRF)
                                                                    (cdr g$e*$12249$CQIRF))
                                                                  (append
                                                                    (g$map$5946$CQIRF
                                                                      cons
                                                                      g$xlab*$12301$CQIRF
                                                                      g$xb*$12303$CQIRF)
                                                                    g$r$12250$CQIRF)
                                                                  (append
                                                                    (g$map$5946$CQIRF
                                                                      cons
                                                                      g$xlab*$12301$CQIRF
                                                                      g$xb*$12303$CQIRF)
                                                                    g$mr$12251$CQIRF)
                                                                  g$lex*$12252$CQIRF
                                                                  g$rhs*$12253$CQIRF
                                                                  g$mod**$12254$CQIRF
                                                                  g$kwd*$12270$CQIRF
                                                                  g$exp*$12256$CQIRF
                                                                  g$rib$12257$CQIRF
                                                                  g$mix?$12258$CQIRF
                                                                  g$sd?$12259$CQIRF)))
                                                             (g$map$5946$CQIRF
                                                               (case-lambda
                                                                 ((g$x$12305$CQIRF)
                                                                  (g$make-eval-transformer$9589$CQIRF
                                                                    (g$expand-transformer$9957$CQIRF
                                                                      (if (eq? g$type$12269$CQIRF
                                                                               'let-syntax)
                                                                        g$x$12305$CQIRF
                                                                        (g$add-subst$9537$CQIRF
                                                                          g$xrib$12302$CQIRF
                                                                          g$x$12305$CQIRF))
                                                                      g$mr$12251$CQIRF))))
                                                               g$xrhs*$12299$CQIRF))))
                                                         (g$make-full-rib$9513$CQIRF
                                                           g$xlhs*$12298$CQIRF
                                                           g$xlab*$12301$CQIRF))))
                                                     (g$map$5946$CQIRF
                                                       g$gen-label$9484$CQIRF
                                                       g$xlhs*$12298$CQIRF))))
                                                 g$ls/false$12294$CQIRF)
                                               (g$syntax-violation$10028$CQIRF
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$12293$CQIRF))))
                                          (g$syntax-dispatch$9910$CQIRF
                                            g$t$12293$CQIRF
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$12260$CQIRF)
                                     (if (eqv? g$t$12271$CQIRF 'begin)
                                       ((case-lambda
                                          ((g$t$12306$CQIRF)
                                           ((case-lambda
                                              ((g$ls/false$12307$CQIRF)
                                               (if g$ls/false$12307$CQIRF
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$12308$CQIRF)
                                                      (g$chi-body*$9956$CQIRF
                                                        (append
                                                          g$x*$12308$CQIRF
                                                          (cdr g$e*$12249$CQIRF))
                                                        g$r$12250$CQIRF
                                                        g$mr$12251$CQIRF
                                                        g$lex*$12252$CQIRF
                                                        g$rhs*$12253$CQIRF
                                                        g$mod**$12254$CQIRF
                                                        g$kwd*$12270$CQIRF
                                                        g$exp*$12256$CQIRF
                                                        g$rib$12257$CQIRF
                                                        g$mix?$12258$CQIRF
                                                        g$sd?$12259$CQIRF)))
                                                   g$ls/false$12307$CQIRF)
                                                 (g$syntax-violation$10028$CQIRF
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$12306$CQIRF))))
                                            (g$syntax-dispatch$9910$CQIRF
                                              g$t$12306$CQIRF
                                              '(_ . each-any)))))
                                        g$e$12260$CQIRF)
                                       (if (g$memv$5939$CQIRF
                                             g$t$12271$CQIRF
                                             '(global-macro global-macro!))
                                         (g$chi-body*$9956$CQIRF
                                           (cons
                                             (g$add-subst$9537$CQIRF
                                               g$rib$12257$CQIRF
                                               (g$chi-global-macro$9925$CQIRF
                                                 g$value$12268$CQIRF
                                                 g$e$12260$CQIRF
                                                 g$r$12250$CQIRF))
                                             (cdr g$e*$12249$CQIRF))
                                           g$r$12250$CQIRF
                                           g$mr$12251$CQIRF
                                           g$lex*$12252$CQIRF
                                           g$rhs*$12253$CQIRF
                                           g$mod**$12254$CQIRF
                                           g$kwd*$12270$CQIRF
                                           g$exp*$12256$CQIRF
                                           g$rib$12257$CQIRF
                                           g$mix?$12258$CQIRF
                                           g$sd?$12259$CQIRF)
                                         (if (g$memv$5939$CQIRF
                                               g$t$12271$CQIRF
                                               '(local-macro local-macro!))
                                           (g$chi-body*$9956$CQIRF
                                             (cons
                                               (g$add-subst$9537$CQIRF
                                                 g$rib$12257$CQIRF
                                                 (g$chi-local-macro$9924$CQIRF
                                                   g$value$12268$CQIRF
                                                   g$e$12260$CQIRF
                                                   g$r$12250$CQIRF))
                                               (cdr g$e*$12249$CQIRF))
                                             g$r$12250$CQIRF
                                             g$mr$12251$CQIRF
                                             g$lex*$12252$CQIRF
                                             g$rhs*$12253$CQIRF
                                             g$mod**$12254$CQIRF
                                             g$kwd*$12270$CQIRF
                                             g$exp*$12256$CQIRF
                                             g$rib$12257$CQIRF
                                             g$mix?$12258$CQIRF
                                             g$sd?$12259$CQIRF)
                                           (if (g$memv$5939$CQIRF
                                                 g$t$12271$CQIRF
                                                 '(macro macro!))
                                             (g$chi-body*$9956$CQIRF
                                               (cons
                                                 (g$add-subst$9537$CQIRF
                                                   g$rib$12257$CQIRF
                                                   (g$chi-macro$9923$CQIRF
                                                     g$value$12268$CQIRF
                                                     g$e$12260$CQIRF
                                                     g$r$12250$CQIRF))
                                                 (cdr g$e*$12249$CQIRF))
                                               g$r$12250$CQIRF
                                               g$mr$12251$CQIRF
                                               g$lex*$12252$CQIRF
                                               g$rhs*$12253$CQIRF
                                               g$mod**$12254$CQIRF
                                               g$kwd*$12270$CQIRF
                                               g$exp*$12256$CQIRF
                                               g$rib$12257$CQIRF
                                               g$mix?$12258$CQIRF
                                               g$sd?$12259$CQIRF)
                                             (if (eqv? g$t$12271$CQIRF 'module)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$9955$CQIRF
                                                      g$e$12260$CQIRF
                                                      g$r$12250$CQIRF
                                                      g$mr$12251$CQIRF
                                                      g$lex*$12252$CQIRF
                                                      g$rhs*$12253$CQIRF
                                                      g$mod**$12254$CQIRF
                                                      g$kwd*$12270$CQIRF)))
                                                 (case-lambda
                                                   ((g$lex*$12317$CQIRF
                                                      g$rhs*$12318$CQIRF
                                                      g$m-exp-id*$12319$CQIRF
                                                      g$m-exp-lab*$12320$CQIRF
                                                      g$r$12321$CQIRF
                                                      g$mr$12322$CQIRF
                                                      g$mod**$12323$CQIRF
                                                      g$kwd*$12324$CQIRF)
                                                    ((case-lambda
                                                       ((g$kwd*$12325$CQIRF
                                                          g$mod**$12326$CQIRF
                                                          g$mr$12327$CQIRF
                                                          g$r$12328$CQIRF
                                                          g$m-exp-lab*$12329$CQIRF
                                                          g$m-exp-id*$12330$CQIRF
                                                          g$rhs*$12331$CQIRF
                                                          g$lex*$12332$CQIRF)
                                                        (begin
                                                          (g$vector-for-each$6678$CQIRF
                                                            (case-lambda
                                                              ((g$id$12333$CQIRF
                                                                 g$lab$12334$CQIRF)
                                                               (g$extend-rib!$9508$CQIRF
                                                                 g$rib$12257$CQIRF
                                                                 g$id$12333$CQIRF
                                                                 g$lab$12334$CQIRF
                                                                 g$sd?$12259$CQIRF)))
                                                            g$m-exp-id*$12330$CQIRF
                                                            g$m-exp-lab*$12329$CQIRF)
                                                          (g$chi-body*$9956$CQIRF
                                                            (cdr g$e*$12249$CQIRF)
                                                            g$r$12328$CQIRF
                                                            g$mr$12327$CQIRF
                                                            g$lex*$12332$CQIRF
                                                            g$rhs*$12331$CQIRF
                                                            g$mod**$12326$CQIRF
                                                            g$kwd*$12325$CQIRF
                                                            g$exp*$12256$CQIRF
                                                            g$rib$12257$CQIRF
                                                            g$mix?$12258$CQIRF
                                                            g$sd?$12259$CQIRF))))
                                                     g$kwd*$12324$CQIRF
                                                     g$mod**$12323$CQIRF
                                                     g$mr$12322$CQIRF
                                                     g$r$12321$CQIRF
                                                     g$m-exp-lab*$12320$CQIRF
                                                     g$m-exp-id*$12319$CQIRF
                                                     g$rhs*$12318$CQIRF
                                                     g$lex*$12317$CQIRF))))
                                               (if (eqv?
                                                     g$t$12271$CQIRF
                                                     'library)
                                                 (begin
                                                   (g$library-expander$10012$CQIRF
                                                     (g$stx->datum$9558$CQIRF
                                                       g$e$12260$CQIRF))
                                                   (g$chi-body*$9956$CQIRF
                                                     (cdr g$e*$12249$CQIRF)
                                                     g$r$12250$CQIRF
                                                     g$mr$12251$CQIRF
                                                     g$lex*$12252$CQIRF
                                                     g$rhs*$12253$CQIRF
                                                     g$mod**$12254$CQIRF
                                                     g$kwd*$12270$CQIRF
                                                     g$exp*$12256$CQIRF
                                                     g$rib$12257$CQIRF
                                                     g$mix?$12258$CQIRF
                                                     g$sd?$12259$CQIRF))
                                                 (if (eqv?
                                                       g$t$12271$CQIRF
                                                       'export)
                                                   ((case-lambda
                                                      ((g$t$12335$CQIRF)
                                                       ((case-lambda
                                                          ((g$ls/false$12336$CQIRF)
                                                           (if g$ls/false$12336$CQIRF
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$12337$CQIRF)
                                                                  (g$chi-body*$9956$CQIRF
                                                                    (cdr g$e*$12249$CQIRF)
                                                                    g$r$12250$CQIRF
                                                                    g$mr$12251$CQIRF
                                                                    g$lex*$12252$CQIRF
                                                                    g$rhs*$12253$CQIRF
                                                                    g$mod**$12254$CQIRF
                                                                    g$kwd*$12270$CQIRF
                                                                    (append
                                                                      g$exp-decl*$12337$CQIRF
                                                                      g$exp*$12256$CQIRF)
                                                                    g$rib$12257$CQIRF
                                                                    g$mix?$12258$CQIRF
                                                                    g$sd?$12259$CQIRF)))
                                                               g$ls/false$12336$CQIRF)
                                                             (g$syntax-violation$10028$CQIRF
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$12335$CQIRF))))
                                                        (g$syntax-dispatch$9910$CQIRF
                                                          g$t$12335$CQIRF
                                                          '(_ . each-any)))))
                                                    g$e$12260$CQIRF)
                                                   (if (eqv?
                                                         g$t$12271$CQIRF
                                                         'import)
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$12338$CQIRF
                                                                     (case-lambda
                                                                       ((g$e$12380$CQIRF)
                                                                        ((case-lambda
                                                                           ((g$t$12381$CQIRF)
                                                                            ((case-lambda
                                                                               ((g$ls/false$12382$CQIRF)
                                                                                (if (if g$ls/false$12382$CQIRF
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$12383$CQIRF)
                                                                                             (g$id?$9547$CQIRF
                                                                                               g$id$12383$CQIRF)))
                                                                                          g$ls/false$12382$CQIRF))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$12384$CQIRF)
                                                                                       '#t))
                                                                                    g$ls/false$12382$CQIRF)
                                                                                  ((case-lambda
                                                                                     ((g$t$12385$CQIRF)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$12386$CQIRF)
                                                                                          (if g$ls/false$12386$CQIRF
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$12387$CQIRF)
                                                                                                 '#f))
                                                                                              g$ls/false$12386$CQIRF)
                                                                                            ((case-lambda
                                                                                               ((g$t$12388$CQIRF)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$12389$CQIRF)
                                                                                                    (if g$ls/false$12389$CQIRF
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$10028$CQIRF
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$12380$CQIRF)))
                                                                                                        g$ls/false$12389$CQIRF)
                                                                                                      (g$syntax-violation$10028$CQIRF
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$12388$CQIRF))))
                                                                                                 (g$syntax-dispatch$9910$CQIRF
                                                                                                   g$t$12388$CQIRF
                                                                                                   '_))))
                                                                                             g$t$12385$CQIRF))))
                                                                                       (g$syntax-dispatch$9910$CQIRF
                                                                                         g$t$12385$CQIRF
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$12381$CQIRF))))
                                                                             (g$syntax-dispatch$9910$CQIRF
                                                                               g$t$12381$CQIRF
                                                                               '(_ any)))))
                                                                         g$e$12380$CQIRF))))
                                                                   (g$module-import$12339$CQIRF
                                                                     (case-lambda
                                                                       ((g$e$12363$CQIRF
                                                                          g$r$12364$CQIRF)
                                                                        ((case-lambda
                                                                           ((g$t$12365$CQIRF)
                                                                            ((case-lambda
                                                                               ((g$ls/false$12366$CQIRF)
                                                                                (if (if g$ls/false$12366$CQIRF
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$12367$CQIRF)
                                                                                             (g$id?$9547$CQIRF
                                                                                               g$id$12367$CQIRF)))
                                                                                          g$ls/false$12366$CQIRF))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$12368$CQIRF)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$9567$CQIRF
                                                                                              g$id$12368$CQIRF
                                                                                              g$r$12364$CQIRF)))
                                                                                         (case-lambda
                                                                                           ((g$type$12372$CQIRF
                                                                                              g$value$12373$CQIRF
                                                                                              g$kwd$12374$CQIRF)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$12375$CQIRF
                                                                                                  g$value$12376$CQIRF
                                                                                                  g$type$12377$CQIRF)
                                                                                                ((case-lambda
                                                                                                   ((g$t$12378$CQIRF)
                                                                                                    (if (eqv?
                                                                                                          g$t$12378$CQIRF
                                                                                                          '$module)
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$12379$CQIRF)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$9954$CQIRF
                                                                                                              g$iface$12379$CQIRF
                                                                                                              g$id$12368$CQIRF)
                                                                                                            (g$module-interface-exp-lab-vec$9950$CQIRF
                                                                                                              g$iface$12379$CQIRF))))
                                                                                                       g$value$12376$CQIRF)
                                                                                                      (g$syntax-violation$10028$CQIRF
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$12363$CQIRF))))
                                                                                                 g$type$12377$CQIRF)))
                                                                                             g$kwd$12374$CQIRF
                                                                                             g$value$12373$CQIRF
                                                                                             g$type$12372$CQIRF))))))
                                                                                    g$ls/false$12366$CQIRF)
                                                                                  (g$syntax-violation$10028$CQIRF
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$12365$CQIRF))))
                                                                             (g$syntax-dispatch$9910$CQIRF
                                                                               g$t$12365$CQIRF
                                                                               '(_ any)))))
                                                                         g$e$12363$CQIRF))))
                                                                   (g$library-import$12340$CQIRF
                                                                     (case-lambda
                                                                       ((g$e$12349$CQIRF)
                                                                        ((case-lambda
                                                                           ((g$t$12350$CQIRF)
                                                                            ((case-lambda
                                                                               ((g$ls/false$12351$CQIRF)
                                                                                (if g$ls/false$12351$CQIRF
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$12352$CQIRF
                                                                                         g$imp*$12353$CQIRF)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$9961$CQIRF
                                                                                              (g$syntax->datum$10031$CQIRF
                                                                                                g$imp*$12353$CQIRF))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$12356$CQIRF
                                                                                              g$subst-labels$12357$CQIRF)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$12358$CQIRF
                                                                                                  g$subst-names$12359$CQIRF)
                                                                                                (values
                                                                                                  (g$vector-map$6677$CQIRF
                                                                                                    (case-lambda
                                                                                                      ((g$name$12360$CQIRF)
                                                                                                       (g$datum->stx$9530$CQIRF
                                                                                                         g$ctxt$12352$CQIRF
                                                                                                         g$name$12360$CQIRF)))
                                                                                                    g$subst-names$12359$CQIRF)
                                                                                                  g$subst-labels$12358$CQIRF)))
                                                                                             g$subst-labels$12357$CQIRF
                                                                                             g$subst-names$12356$CQIRF))))))
                                                                                    g$ls/false$12351$CQIRF)
                                                                                  ((case-lambda
                                                                                     ((g$t$12361$CQIRF)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$12362$CQIRF)
                                                                                          (if g$ls/false$12362$CQIRF
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$10028$CQIRF
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$12349$CQIRF)))
                                                                                              g$ls/false$12362$CQIRF)
                                                                                            (g$syntax-violation$10028$CQIRF
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$12361$CQIRF))))
                                                                                       (g$syntax-dispatch$9910$CQIRF
                                                                                         g$t$12361$CQIRF
                                                                                         '_))))
                                                                                   g$t$12350$CQIRF))))
                                                                             (g$syntax-dispatch$9910$CQIRF
                                                                               g$t$12350$CQIRF
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$12349$CQIRF)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$12338$CQIRF
                                                                        g$e$12260$CQIRF)
                                                                    (g$module-import$12339$CQIRF
                                                                      g$e$12260$CQIRF
                                                                      g$r$12250$CQIRF)
                                                                    (g$library-import$12340$CQIRF
                                                                      g$e$12260$CQIRF))))
                                                               (case-lambda
                                                                 ((g$id*$12343$CQIRF
                                                                    g$lab*$12344$CQIRF)
                                                                  ((case-lambda
                                                                     ((g$lab*$12345$CQIRF
                                                                        g$id*$12346$CQIRF)
                                                                      (g$vector-for-each$6678$CQIRF
                                                                        (case-lambda
                                                                          ((g$id$12347$CQIRF
                                                                             g$lab$12348$CQIRF)
                                                                           (g$extend-rib!$9508$CQIRF
                                                                             g$rib$12257$CQIRF
                                                                             g$id$12347$CQIRF
                                                                             g$lab$12348$CQIRF
                                                                             g$sd?$12259$CQIRF)))
                                                                        g$id*$12346$CQIRF
                                                                        g$lab*$12345$CQIRF)))
                                                                   g$lab*$12344$CQIRF
                                                                   g$id*$12343$CQIRF))))
                                                             (g$chi-body*$9956$CQIRF
                                                               (cdr g$e*$12249$CQIRF)
                                                               g$r$12250$CQIRF
                                                               g$mr$12251$CQIRF
                                                               g$lex*$12252$CQIRF
                                                               g$rhs*$12253$CQIRF
                                                               g$mod**$12254$CQIRF
                                                               g$kwd*$12270$CQIRF
                                                               g$exp*$12256$CQIRF
                                                               g$rib$12257$CQIRF
                                                               g$mix?$12258$CQIRF
                                                               g$sd?$12259$CQIRF))))))
                                                     (if g$mix?$12258$CQIRF
                                                       (g$chi-body*$9956$CQIRF
                                                         (cdr g$e*$12249$CQIRF)
                                                         g$r$12250$CQIRF
                                                         g$mr$12251$CQIRF
                                                         (cons
                                                           (g$gen-lexical$9482$CQIRF
                                                             'dummy)
                                                           g$lex*$12252$CQIRF)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$12260$CQIRF)
                                                           g$rhs*$12253$CQIRF)
                                                         g$mod**$12254$CQIRF
                                                         g$kwd*$12270$CQIRF
                                                         g$exp*$12256$CQIRF
                                                         g$rib$12257$CQIRF
                                                         '#t
                                                         g$sd?$12259$CQIRF)
                                                       (values
                                                         g$e*$12249$CQIRF
                                                         g$r$12250$CQIRF
                                                         g$mr$12251$CQIRF
                                                         g$lex*$12252$CQIRF
                                                         g$rhs*$12253$CQIRF
                                                         g$mod**$12254$CQIRF
                                                         g$kwd*$12270$CQIRF
                                                         g$exp*$12256$CQIRF)))))))))))))))
                            g$type$12269$CQIRF)))
                        (if (g$id?$9547$CQIRF g$kwd$12267$CQIRF)
                          (cons g$kwd$12267$CQIRF g$kwd*$12255$CQIRF)
                          g$kwd*$12255$CQIRF))))
                    g$kwd$12266$CQIRF
                    g$value$12265$CQIRF
                    g$type$12264$CQIRF))))))
           (car g$e*$12249$CQIRF))))))
   (g$expand-transformer$9957$CQIRF
     g$expand-transformer$13496$CQIRF
     (case-lambda
       ((g$expr$12390$CQIRF g$r$12391$CQIRF)
        ((case-lambda
           ((g$rtc$12392$CQIRF)
            ((case-lambda
               ((g$expanded-rhs$12393$CQIRF)
                (begin
                  (g$for-each$5947$CQIRF
                    ((case-lambda
                       ((g$mark-visit$12394$CQIRF)
                        (case-lambda
                          ((g$x$12395$CQIRF)
                           (begin
                             (g$invoke-library$9286$CQIRF g$x$12395$CQIRF)
                             (g$mark-visit$12394$CQIRF g$x$12395$CQIRF))))))
                     (g$vis-collector$9965$CQIRF))
                    (g$rtc$12392$CQIRF))
                  g$expanded-rhs$12393$CQIRF)))
             ((case-lambda
                ((g$inv-collector$12400$CQIRF
                   g$vis-collector$12401$CQIRF
                   g$inv-collector$12402$CQIRF
                   g$vis-collector$12403$CQIRF)
                 ((case-lambda
                    ((g$swap$12404$CQIRF)
                     (dynamic-wind
                       g$swap$12404$CQIRF
                       (case-lambda
                         (()
                          (g$chi-expr$9928$CQIRF
                            g$expr$12390$CQIRF
                            g$r$12391$CQIRF
                            g$r$12391$CQIRF)))
                       g$swap$12404$CQIRF)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$12405$CQIRF)
                           (begin
                             (g$inv-collector$12400$CQIRF
                               g$inv-collector$12402$CQIRF)
                             (set! g$inv-collector$12402$CQIRF
                               g$t$12405$CQIRF))))
                        (g$inv-collector$12400$CQIRF))
                       ((case-lambda
                          ((g$t$12406$CQIRF)
                           (begin
                             (g$vis-collector$12401$CQIRF
                               g$vis-collector$12403$CQIRF)
                             (set! g$vis-collector$12403$CQIRF
                               g$t$12406$CQIRF))))
                        (g$vis-collector$12401$CQIRF))))))))
              g$inv-collector$9964$CQIRF
              g$vis-collector$9965$CQIRF
              g$rtc$12392$CQIRF
              (case-lambda ((g$x$12407$CQIRF) (values)))))))
         (g$make-collector$9963$CQIRF)))))
   (g$parse-exports$9958$CQIRF
     g$parse-exports$13497$CQIRF
     (case-lambda
       ((g$exp*$12408$CQIRF)
        ((letrec ((g$f$12409$CQIRF
                    (case-lambda
                      ((g$exp*$12410$CQIRF
                         g$int*$12411$CQIRF
                         g$ext*$12412$CQIRF)
                       (if (null? g$exp*$12410$CQIRF)
                         (begin
                           (if (not (g$valid-bound-ids?$9552$CQIRF
                                      g$ext*$12412$CQIRF))
                             (g$syntax-violation$10028$CQIRF
                               'export
                               '"invalid exports"
                               (g$find-dups$9938$CQIRF g$ext*$12412$CQIRF))
                             (void))
                           (values
                             (g$map$5946$CQIRF
                               g$syntax->datum$10031$CQIRF
                               g$ext*$12412$CQIRF)
                             g$int*$12411$CQIRF))
                         ((case-lambda
                            ((g$t$12413$CQIRF)
                             ((case-lambda
                                ((g$ls/false$12414$CQIRF)
                                 (if g$ls/false$12414$CQIRF
                                   (apply
                                     (case-lambda
                                       ((g$rename$12415$CQIRF
                                          g$i*$12416$CQIRF
                                          g$e*$12417$CQIRF)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$10031$CQIRF
                                                              g$rename$12415$CQIRF)
                                                            'rename)
                                                     (if (g$for-all$5944$CQIRF
                                                           g$id?$9547$CQIRF
                                                           g$i*$12416$CQIRF)
                                                       (begin
                                                         '#f
                                                         (g$for-all$5944$CQIRF
                                                           g$id?$9547$CQIRF
                                                           g$e*$12417$CQIRF))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$10028$CQIRF
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$12410$CQIRF))
                                            (void))
                                          (g$f$12409$CQIRF
                                            (cdr g$exp*$12410$CQIRF)
                                            (append
                                              g$i*$12416$CQIRF
                                              g$int*$12411$CQIRF)
                                            (append
                                              g$e*$12417$CQIRF
                                              g$ext*$12412$CQIRF)))))
                                     g$ls/false$12414$CQIRF)
                                   ((case-lambda
                                      ((g$t$12418$CQIRF)
                                       ((case-lambda
                                          ((g$ls/false$12419$CQIRF)
                                           (if g$ls/false$12419$CQIRF
                                             (apply
                                               (case-lambda
                                                 ((g$ie$12420$CQIRF)
                                                  (begin
                                                    (if (not (g$id?$9547$CQIRF
                                                               g$ie$12420$CQIRF))
                                                      (g$syntax-violation$10028$CQIRF
                                                        'export
                                                        '"invalid export"
                                                        g$ie$12420$CQIRF)
                                                      (void))
                                                    (g$f$12409$CQIRF
                                                      (cdr g$exp*$12410$CQIRF)
                                                      (cons
                                                        g$ie$12420$CQIRF
                                                        g$int*$12411$CQIRF)
                                                      (cons
                                                        g$ie$12420$CQIRF
                                                        g$ext*$12412$CQIRF)))))
                                               g$ls/false$12419$CQIRF)
                                             (g$syntax-violation$10028$CQIRF
                                               '#f
                                               '"invalid syntax"
                                               g$t$12418$CQIRF))))
                                        (g$syntax-dispatch$9910$CQIRF
                                          g$t$12418$CQIRF
                                          'any))))
                                    g$t$12413$CQIRF))))
                              (g$syntax-dispatch$9910$CQIRF
                                g$t$12413$CQIRF
                                '(any . #(each (any any)))))))
                          (car g$exp*$12410$CQIRF)))))))
           g$f$12409$CQIRF)
         g$exp*$12408$CQIRF
         '()
         '()))))
   (g$parse-library-name$9959$CQIRF
     g$parse-library-name$13498$CQIRF
     (case-lambda
       ((g$spec$12421$CQIRF)
        (letrec* ((g$parse$12422$CQIRF
                    (case-lambda
                      ((g$x$12429$CQIRF)
                       ((case-lambda
                          ((g$t$12430$CQIRF)
                           ((case-lambda
                              ((g$ls/false$12431$CQIRF)
                               (if (if g$ls/false$12431$CQIRF
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$12432$CQIRF)
                                            (g$for-all$5944$CQIRF
                                              (case-lambda
                                                ((g$x$12433$CQIRF)
                                                 ((case-lambda
                                                    ((g$x$12434$CQIRF)
                                                     (if (integer?
                                                           g$x$12434$CQIRF)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$12434$CQIRF))
                                                       '#f)))
                                                  (g$syntax->datum$10031$CQIRF
                                                    g$x$12433$CQIRF))))
                                              g$v*$12432$CQIRF)))
                                         g$ls/false$12431$CQIRF))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$12435$CQIRF)
                                      (values
                                        '()
                                        (g$map$5946$CQIRF
                                          g$syntax->datum$10031$CQIRF
                                          g$v*$12435$CQIRF))))
                                   g$ls/false$12431$CQIRF)
                                 ((case-lambda
                                    ((g$t$12436$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$12437$CQIRF)
                                         (if (if g$ls/false$12437$CQIRF
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$12438$CQIRF
                                                        g$rest$12439$CQIRF)
                                                      (g$symbol?$6617$CQIRF
                                                        (g$syntax->datum$10031$CQIRF
                                                          g$x$12438$CQIRF))))
                                                   g$ls/false$12437$CQIRF))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$12440$CQIRF
                                                  g$rest$12441$CQIRF)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$12422$CQIRF
                                                       g$rest$12441$CQIRF)))
                                                  (case-lambda
                                                    ((g$x*$12444$CQIRF
                                                       g$v*$12445$CQIRF)
                                                     ((case-lambda
                                                        ((g$v*$12446$CQIRF
                                                           g$x*$12447$CQIRF)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$10031$CQIRF
                                                               g$x$12440$CQIRF)
                                                             g$x*$12447$CQIRF)
                                                           g$v*$12446$CQIRF)))
                                                      g$v*$12445$CQIRF
                                                      g$x*$12444$CQIRF))))))
                                             g$ls/false$12437$CQIRF)
                                           ((case-lambda
                                              ((g$t$12448$CQIRF)
                                               ((case-lambda
                                                  ((g$ls/false$12449$CQIRF)
                                                   (if g$ls/false$12449$CQIRF
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$12449$CQIRF)
                                                     ((case-lambda
                                                        ((g$t$12450$CQIRF)
                                                         ((case-lambda
                                                            ((g$ls/false$12451$CQIRF)
                                                             (if g$ls/false$12451$CQIRF
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$10028$CQIRF
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$12421$CQIRF)))
                                                                 g$ls/false$12451$CQIRF)
                                                               (g$syntax-violation$10028$CQIRF
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$12450$CQIRF))))
                                                          (g$syntax-dispatch$9910$CQIRF
                                                            g$t$12450$CQIRF
                                                            '_))))
                                                      g$t$12448$CQIRF))))
                                                (g$syntax-dispatch$9910$CQIRF
                                                  g$t$12448$CQIRF
                                                  '()))))
                                            g$t$12436$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$12436$CQIRF
                                        '(any . any)))))
                                  g$t$12430$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$12430$CQIRF
                              '(each-any)))))
                        g$x$12429$CQIRF)))))
          (call-with-values
            (case-lambda (() (g$parse$12422$CQIRF g$spec$12421$CQIRF)))
            (case-lambda
              ((g$name*$12425$CQIRF g$ver*$12426$CQIRF)
               ((case-lambda
                  ((g$ver*$12427$CQIRF g$name*$12428$CQIRF)
                   (begin
                     (if (null? g$name*$12428$CQIRF)
                       (g$syntax-violation$10028$CQIRF
                         '#f
                         '"empty library name"
                         g$spec$12421$CQIRF)
                       (void))
                     (values g$name*$12428$CQIRF g$ver*$12427$CQIRF))))
                g$ver*$12426$CQIRF
                g$name*$12425$CQIRF))))))))
   (g$parse-library$9960$CQIRF
     g$parse-library$13499$CQIRF
     (case-lambda
       ((g$e$12452$CQIRF)
        ((case-lambda
           ((g$t$12453$CQIRF)
            ((case-lambda
               ((g$ls/false$12454$CQIRF)
                (if (if g$ls/false$12454$CQIRF
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$12455$CQIRF
                               g$name*$12456$CQIRF
                               g$export$12457$CQIRF
                               g$exp*$12458$CQIRF
                               g$import$12459$CQIRF
                               g$imp*$12460$CQIRF
                               g$b*$12461$CQIRF)
                             (if (eq? (g$syntax->datum$10031$CQIRF
                                        g$export$12457$CQIRF)
                                      'export)
                               (if (eq? (g$syntax->datum$10031$CQIRF
                                          g$import$12459$CQIRF)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$10031$CQIRF
                                          g$library$12455$CQIRF)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$12454$CQIRF))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$12462$CQIRF
                         g$name*$12463$CQIRF
                         g$export$12464$CQIRF
                         g$exp*$12465$CQIRF
                         g$import$12466$CQIRF
                         g$imp*$12467$CQIRF
                         g$b*$12468$CQIRF)
                       (values
                         g$name*$12463$CQIRF
                         g$exp*$12465$CQIRF
                         g$imp*$12467$CQIRF
                         g$b*$12468$CQIRF)))
                    g$ls/false$12454$CQIRF)
                  ((case-lambda
                     ((g$t$12469$CQIRF)
                      ((case-lambda
                         ((g$ls/false$12470$CQIRF)
                          (if g$ls/false$12470$CQIRF
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$10028$CQIRF
                                   '#f
                                   '"malformed library"
                                   g$e$12452$CQIRF)))
                              g$ls/false$12470$CQIRF)
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"invalid syntax"
                              g$t$12469$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF g$t$12469$CQIRF '_))))
                   g$t$12453$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$12453$CQIRF
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$12452$CQIRF))))
   (g$parse-import-spec*$9961$CQIRF
     g$parse-import-spec*$13500$CQIRF
     (case-lambda
       ((g$imp*$12471$CQIRF)
        (letrec* ((g$idsyn?$12472$CQIRF
                    (case-lambda
                      ((g$x$12732$CQIRF)
                       (g$symbol?$6617$CQIRF
                         (g$syntax->datum$10031$CQIRF g$x$12732$CQIRF)))))
                  (g$dup-error$12473$CQIRF
                    (case-lambda
                      ((g$name$12731$CQIRF)
                       (g$syntax-violation$10028$CQIRF
                         'import
                         '"two imports with different bindings"
                         g$name$12731$CQIRF))))
                  (g$merge-substs$12474$CQIRF
                    (case-lambda
                      ((g$s$12722$CQIRF g$subst$12723$CQIRF)
                       (letrec* ((g$insert-to-subst$12724$CQIRF
                                   (case-lambda
                                     ((g$a$12725$CQIRF g$subst$12726$CQIRF)
                                      ((case-lambda
                                         ((g$name$12727$CQIRF
                                            g$label$12728$CQIRF)
                                          ((case-lambda
                                             ((g$t$12729$CQIRF)
                                              (if g$t$12729$CQIRF
                                                ((case-lambda
                                                   ((g$x$12730$CQIRF)
                                                    (if (eq? (cdr g$x$12730$CQIRF)
                                                             g$label$12728$CQIRF)
                                                      g$subst$12726$CQIRF
                                                      (g$dup-error$12473$CQIRF
                                                        g$name$12727$CQIRF))))
                                                 g$t$12729$CQIRF)
                                                (cons
                                                  g$a$12725$CQIRF
                                                  g$subst$12726$CQIRF))))
                                           (g$assq$5934$CQIRF
                                             g$name$12727$CQIRF
                                             g$subst$12726$CQIRF))))
                                       (car g$a$12725$CQIRF)
                                       (cdr g$a$12725$CQIRF))))))
                         (if (null? g$s$12722$CQIRF)
                           g$subst$12723$CQIRF
                           (g$insert-to-subst$12724$CQIRF
                             (car g$s$12722$CQIRF)
                             (g$merge-substs$12474$CQIRF
                               (cdr g$s$12722$CQIRF)
                               g$subst$12723$CQIRF)))))))
                  (g$exclude*$12475$CQIRF
                    (case-lambda
                      ((g$sym*$12698$CQIRF g$subst$12699$CQIRF)
                       (letrec* ((g$exclude$12700$CQIRF
                                   (case-lambda
                                     ((g$sym$12713$CQIRF g$subst$12714$CQIRF)
                                      (if (null? g$subst$12714$CQIRF)
                                        (g$syntax-violation$10028$CQIRF
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$12713$CQIRF)
                                        (if (eq? g$sym$12713$CQIRF
                                                 (g$caar$6625$CQIRF
                                                   g$subst$12714$CQIRF))
                                          (values
                                            (g$cdar$6627$CQIRF
                                              g$subst$12714$CQIRF)
                                            (cdr g$subst$12714$CQIRF))
                                          ((case-lambda
                                             ((g$a$12715$CQIRF)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$12700$CQIRF
                                                     g$sym$12713$CQIRF
                                                     (cdr g$subst$12714$CQIRF))))
                                                (case-lambda
                                                  ((g$old$12718$CQIRF
                                                     g$subst$12719$CQIRF)
                                                   ((case-lambda
                                                      ((g$subst$12720$CQIRF
                                                         g$old$12721$CQIRF)
                                                       (values
                                                         g$old$12721$CQIRF
                                                         (cons
                                                           g$a$12715$CQIRF
                                                           g$subst$12720$CQIRF))))
                                                    g$subst$12719$CQIRF
                                                    g$old$12718$CQIRF))))))
                                           (car g$subst$12714$CQIRF))))))))
                         (if (null? g$sym*$12698$CQIRF)
                           (values '() g$subst$12699$CQIRF)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$12700$CQIRF
                                  (car g$sym*$12698$CQIRF)
                                  g$subst$12699$CQIRF)))
                             (case-lambda
                               ((g$old$12703$CQIRF g$subst$12704$CQIRF)
                                ((case-lambda
                                   ((g$subst$12705$CQIRF g$old$12706$CQIRF)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$12475$CQIRF
                                           (cdr g$sym*$12698$CQIRF)
                                           g$subst$12705$CQIRF)))
                                      (case-lambda
                                        ((g$old*$12709$CQIRF
                                           g$subst$12710$CQIRF)
                                         ((case-lambda
                                            ((g$subst$12711$CQIRF
                                               g$old*$12712$CQIRF)
                                             (values
                                               (cons
                                                 g$old$12706$CQIRF
                                                 g$old*$12712$CQIRF)
                                               g$subst$12711$CQIRF)))
                                          g$subst$12710$CQIRF
                                          g$old*$12709$CQIRF))))))
                                 g$subst$12704$CQIRF
                                 g$old$12703$CQIRF)))))))))
                  (g$find*$12476$CQIRF
                    (case-lambda
                      ((g$sym*$12694$CQIRF g$subst$12695$CQIRF)
                       (g$map$5946$CQIRF
                         (case-lambda
                           ((g$x$12696$CQIRF)
                            ((case-lambda
                               ((g$t$12697$CQIRF)
                                (if g$t$12697$CQIRF
                                  (cdr g$t$12697$CQIRF)
                                  (g$syntax-violation$10028$CQIRF
                                    'import
                                    '"cannot find identifier"
                                    g$x$12696$CQIRF))))
                             (g$assq$5934$CQIRF
                               g$x$12696$CQIRF
                               g$subst$12695$CQIRF))))
                         g$sym*$12694$CQIRF))))
                  (g$rem*$12477$CQIRF
                    (case-lambda
                      ((g$sym*$12690$CQIRF g$subst$12691$CQIRF)
                       ((letrec ((g$f$12692$CQIRF
                                   (case-lambda
                                     ((g$subst$12693$CQIRF)
                                      (if (null? g$subst$12693$CQIRF)
                                        '()
                                        (if (g$memq$5938$CQIRF
                                              (g$caar$6625$CQIRF
                                                g$subst$12693$CQIRF)
                                              g$sym*$12690$CQIRF)
                                          (g$f$12692$CQIRF
                                            (cdr g$subst$12693$CQIRF))
                                          (cons
                                            (car g$subst$12693$CQIRF)
                                            (g$f$12692$CQIRF
                                              (cdr g$subst$12693$CQIRF)))))))))
                          g$f$12692$CQIRF)
                        g$subst$12691$CQIRF))))
                  (g$remove-dups$12478$CQIRF
                    (case-lambda
                      ((g$ls$12689$CQIRF)
                       (if (null? g$ls$12689$CQIRF)
                         '()
                         (if (g$memq$5938$CQIRF
                               (car g$ls$12689$CQIRF)
                               (cdr g$ls$12689$CQIRF))
                           (g$remove-dups$12478$CQIRF (cdr g$ls$12689$CQIRF))
                           (cons
                             (car g$ls$12689$CQIRF)
                             (g$remove-dups$12478$CQIRF
                               (cdr g$ls$12689$CQIRF))))))))
                  (g$parse-library-name$12479$CQIRF
                    (case-lambda
                      ((g$spec$12573$CQIRF)
                       (letrec* ((g$subversion?$12574$CQIRF
                                   (case-lambda
                                     ((g$x$12687$CQIRF)
                                      ((case-lambda
                                         ((g$x$12688$CQIRF)
                                          (if (integer? g$x$12688$CQIRF)
                                            (if (exact? g$x$12688$CQIRF)
                                              (begin
                                                '#f
                                                (>= g$x$12688$CQIRF '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$10031$CQIRF
                                         g$x$12687$CQIRF)))))
                                 (g$subversion-pred$12575$CQIRF
                                   (case-lambda
                                     ((g$x*$12639$CQIRF)
                                      ((case-lambda
                                         ((g$t$12640$CQIRF)
                                          ((case-lambda
                                             ((g$ls/false$12641$CQIRF)
                                              (if (if g$ls/false$12641$CQIRF
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$12642$CQIRF)
                                                           (g$subversion?$12574$CQIRF
                                                             g$n$12642$CQIRF)))
                                                        g$ls/false$12641$CQIRF))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$12643$CQIRF)
                                                     (case-lambda
                                                       ((g$x$12644$CQIRF)
                                                        (= g$x$12644$CQIRF
                                                           (g$syntax->datum$10031$CQIRF
                                                             g$n$12643$CQIRF))))))
                                                  g$ls/false$12641$CQIRF)
                                                ((case-lambda
                                                   ((g$t$12645$CQIRF)
                                                    ((case-lambda
                                                       ((g$ls/false$12646$CQIRF)
                                                        (if (if g$ls/false$12646$CQIRF
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$12647$CQIRF
                                                                       g$sub*$12648$CQIRF)
                                                                     (eq? (g$syntax->datum$10031$CQIRF
                                                                            g$p?$12647$CQIRF)
                                                                          'and)))
                                                                  g$ls/false$12646$CQIRF))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$12649$CQIRF
                                                                 g$sub*$12650$CQIRF)
                                                               ((case-lambda
                                                                  ((g$p*$12651$CQIRF)
                                                                   (case-lambda
                                                                     ((g$x$12652$CQIRF)
                                                                      (g$for-all$5944$CQIRF
                                                                        (case-lambda
                                                                          ((g$p$12653$CQIRF)
                                                                           (g$p$12653$CQIRF
                                                                             g$x$12652$CQIRF)))
                                                                        g$p*$12651$CQIRF)))))
                                                                (g$map$5946$CQIRF
                                                                  g$subversion-pred$12575$CQIRF
                                                                  g$sub*$12650$CQIRF))))
                                                            g$ls/false$12646$CQIRF)
                                                          ((case-lambda
                                                             ((g$t$12654$CQIRF)
                                                              ((case-lambda
                                                                 ((g$ls/false$12655$CQIRF)
                                                                  (if (if g$ls/false$12655$CQIRF
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$12656$CQIRF
                                                                                 g$sub*$12657$CQIRF)
                                                                               (eq? (g$syntax->datum$10031$CQIRF
                                                                                      g$p?$12656$CQIRF)
                                                                                    'or)))
                                                                            g$ls/false$12655$CQIRF))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$12658$CQIRF
                                                                           g$sub*$12659$CQIRF)
                                                                         ((case-lambda
                                                                            ((g$p*$12660$CQIRF)
                                                                             (case-lambda
                                                                               ((g$x$12661$CQIRF)
                                                                                (g$exists$5945$CQIRF
                                                                                  (case-lambda
                                                                                    ((g$p$12662$CQIRF)
                                                                                     (g$p$12662$CQIRF
                                                                                       g$x$12661$CQIRF)))
                                                                                  g$p*$12660$CQIRF)))))
                                                                          (g$map$5946$CQIRF
                                                                            g$subversion-pred$12575$CQIRF
                                                                            g$sub*$12659$CQIRF))))
                                                                      g$ls/false$12655$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$t$12663$CQIRF)
                                                                        ((case-lambda
                                                                           ((g$ls/false$12664$CQIRF)
                                                                            (if (if g$ls/false$12664$CQIRF
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$12665$CQIRF
                                                                                           g$sub$12666$CQIRF)
                                                                                         (eq? (g$syntax->datum$10031$CQIRF
                                                                                                g$p?$12665$CQIRF)
                                                                                              'not)))
                                                                                      g$ls/false$12664$CQIRF))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$12667$CQIRF
                                                                                     g$sub$12668$CQIRF)
                                                                                   ((case-lambda
                                                                                      ((g$p$12669$CQIRF)
                                                                                       (case-lambda
                                                                                         ((g$x$12670$CQIRF)
                                                                                          (not (g$p$12669$CQIRF
                                                                                                 g$x$12670$CQIRF))))))
                                                                                    (g$subversion-pred$12575$CQIRF
                                                                                      g$sub$12668$CQIRF))))
                                                                                g$ls/false$12664$CQIRF)
                                                                              ((case-lambda
                                                                                 ((g$t$12671$CQIRF)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$12672$CQIRF)
                                                                                      (if (if g$ls/false$12672$CQIRF
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$12673$CQIRF
                                                                                                     g$n$12674$CQIRF)
                                                                                                   (if (eq? (g$syntax->datum$10031$CQIRF
                                                                                                              g$p?$12673$CQIRF)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$12574$CQIRF
                                                                                                         g$n$12674$CQIRF))
                                                                                                     '#f)))
                                                                                                g$ls/false$12672$CQIRF))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$12675$CQIRF
                                                                                               g$n$12676$CQIRF)
                                                                                             (case-lambda
                                                                                               ((g$x$12677$CQIRF)
                                                                                                (<= g$x$12677$CQIRF
                                                                                                    (g$syntax->datum$10031$CQIRF
                                                                                                      g$n$12676$CQIRF))))))
                                                                                          g$ls/false$12672$CQIRF)
                                                                                        ((case-lambda
                                                                                           ((g$t$12678$CQIRF)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$12679$CQIRF)
                                                                                                (if (if g$ls/false$12679$CQIRF
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$12680$CQIRF
                                                                                                               g$n$12681$CQIRF)
                                                                                                             (if (eq? (g$syntax->datum$10031$CQIRF
                                                                                                                        g$p?$12680$CQIRF)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$12574$CQIRF
                                                                                                                   g$n$12681$CQIRF))
                                                                                                               '#f)))
                                                                                                          g$ls/false$12679$CQIRF))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$12682$CQIRF
                                                                                                         g$n$12683$CQIRF)
                                                                                                       (case-lambda
                                                                                                         ((g$x$12684$CQIRF)
                                                                                                          (>= g$x$12684$CQIRF
                                                                                                              (g$syntax->datum$10031$CQIRF
                                                                                                                g$n$12683$CQIRF))))))
                                                                                                    g$ls/false$12679$CQIRF)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$12685$CQIRF)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$12686$CQIRF)
                                                                                                          (if g$ls/false$12686$CQIRF
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$10028$CQIRF
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$12573$CQIRF
                                                                                                                   g$x*$12639$CQIRF)))
                                                                                                              g$ls/false$12686$CQIRF)
                                                                                                            (g$syntax-violation$10028$CQIRF
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$12685$CQIRF))))
                                                                                                       (g$syntax-dispatch$9910$CQIRF
                                                                                                         g$t$12685$CQIRF
                                                                                                         '_))))
                                                                                                   g$t$12678$CQIRF))))
                                                                                             (g$syntax-dispatch$9910$CQIRF
                                                                                               g$t$12678$CQIRF
                                                                                               '(any any)))))
                                                                                         g$t$12671$CQIRF))))
                                                                                   (g$syntax-dispatch$9910$CQIRF
                                                                                     g$t$12671$CQIRF
                                                                                     '(any any)))))
                                                                               g$t$12663$CQIRF))))
                                                                         (g$syntax-dispatch$9910$CQIRF
                                                                           g$t$12663$CQIRF
                                                                           '(any any)))))
                                                                     g$t$12654$CQIRF))))
                                                               (g$syntax-dispatch$9910$CQIRF
                                                                 g$t$12654$CQIRF
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$12645$CQIRF))))
                                                     (g$syntax-dispatch$9910$CQIRF
                                                       g$t$12645$CQIRF
                                                       '(any . each-any)))))
                                                 g$t$12640$CQIRF))))
                                           (g$syntax-dispatch$9910$CQIRF
                                             g$t$12640$CQIRF
                                             'any))))
                                       g$x*$12639$CQIRF))))
                                 (g$version-pred$12576$CQIRF
                                   (case-lambda
                                     ((g$x*$12599$CQIRF)
                                      ((case-lambda
                                         ((g$t$12600$CQIRF)
                                          ((case-lambda
                                             ((g$ls/false$12601$CQIRF)
                                              (if g$ls/false$12601$CQIRF
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$12602$CQIRF)
                                                        '#t))))
                                                  g$ls/false$12601$CQIRF)
                                                ((case-lambda
                                                   ((g$t$12603$CQIRF)
                                                    ((case-lambda
                                                       ((g$ls/false$12604$CQIRF)
                                                        (if (if g$ls/false$12604$CQIRF
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$12605$CQIRF
                                                                       g$ver*$12606$CQIRF)
                                                                     (eq? (g$syntax->datum$10031$CQIRF
                                                                            g$c$12605$CQIRF)
                                                                          'and)))
                                                                  g$ls/false$12604$CQIRF))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$12607$CQIRF
                                                                 g$ver*$12608$CQIRF)
                                                               ((case-lambda
                                                                  ((g$p*$12609$CQIRF)
                                                                   (case-lambda
                                                                     ((g$x$12610$CQIRF)
                                                                      (g$for-all$5944$CQIRF
                                                                        (case-lambda
                                                                          ((g$p$12611$CQIRF)
                                                                           (g$p$12611$CQIRF
                                                                             g$x$12610$CQIRF)))
                                                                        g$p*$12609$CQIRF)))))
                                                                (g$map$5946$CQIRF
                                                                  g$version-pred$12576$CQIRF
                                                                  g$ver*$12608$CQIRF))))
                                                            g$ls/false$12604$CQIRF)
                                                          ((case-lambda
                                                             ((g$t$12612$CQIRF)
                                                              ((case-lambda
                                                                 ((g$ls/false$12613$CQIRF)
                                                                  (if (if g$ls/false$12613$CQIRF
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$12614$CQIRF
                                                                                 g$ver*$12615$CQIRF)
                                                                               (eq? (g$syntax->datum$10031$CQIRF
                                                                                      g$c$12614$CQIRF)
                                                                                    'or)))
                                                                            g$ls/false$12613$CQIRF))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$12616$CQIRF
                                                                           g$ver*$12617$CQIRF)
                                                                         ((case-lambda
                                                                            ((g$p*$12618$CQIRF)
                                                                             (case-lambda
                                                                               ((g$x$12619$CQIRF)
                                                                                (g$exists$5945$CQIRF
                                                                                  (case-lambda
                                                                                    ((g$p$12620$CQIRF)
                                                                                     (g$p$12620$CQIRF
                                                                                       g$x$12619$CQIRF)))
                                                                                  g$p*$12618$CQIRF)))))
                                                                          (g$map$5946$CQIRF
                                                                            g$version-pred$12576$CQIRF
                                                                            g$ver*$12617$CQIRF))))
                                                                      g$ls/false$12613$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$t$12621$CQIRF)
                                                                        ((case-lambda
                                                                           ((g$ls/false$12622$CQIRF)
                                                                            (if (if g$ls/false$12622$CQIRF
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$12623$CQIRF
                                                                                           g$ver$12624$CQIRF)
                                                                                         (eq? (g$syntax->datum$10031$CQIRF
                                                                                                g$c$12623$CQIRF)
                                                                                              'not)))
                                                                                      g$ls/false$12622$CQIRF))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$12625$CQIRF
                                                                                     g$ver$12626$CQIRF)
                                                                                   ((case-lambda
                                                                                      ((g$p$12627$CQIRF)
                                                                                       (case-lambda
                                                                                         ((g$x$12628$CQIRF)
                                                                                          (not (g$p$12627$CQIRF
                                                                                                 g$x$12628$CQIRF))))))
                                                                                    (g$version-pred$12576$CQIRF
                                                                                      g$ver$12626$CQIRF))))
                                                                                g$ls/false$12622$CQIRF)
                                                                              ((case-lambda
                                                                                 ((g$t$12629$CQIRF)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$12630$CQIRF)
                                                                                      (if g$ls/false$12630$CQIRF
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$12631$CQIRF)
                                                                                             ((case-lambda
                                                                                                ((g$p*$12632$CQIRF)
                                                                                                 (case-lambda
                                                                                                   ((g$x$12633$CQIRF)
                                                                                                    ((letrec ((g$f$12634$CQIRF
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$12635$CQIRF
                                                                                                                     g$x$12636$CQIRF)
                                                                                                                   (if (null?
                                                                                                                         g$p*$12635$CQIRF)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$12636$CQIRF)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$12635$CQIRF)
                                                                                                                            (car g$x$12636$CQIRF))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$12634$CQIRF
                                                                                                                             (cdr g$p*$12635$CQIRF)
                                                                                                                             (cdr g$x$12636$CQIRF)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$12634$CQIRF)
                                                                                                     g$p*$12632$CQIRF
                                                                                                     g$x$12633$CQIRF)))))
                                                                                              (g$map$5946$CQIRF
                                                                                                g$subversion-pred$12575$CQIRF
                                                                                                g$sub*$12631$CQIRF))))
                                                                                          g$ls/false$12630$CQIRF)
                                                                                        ((case-lambda
                                                                                           ((g$t$12637$CQIRF)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$12638$CQIRF)
                                                                                                (if g$ls/false$12638$CQIRF
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$10028$CQIRF
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$12573$CQIRF
                                                                                                         g$x*$12599$CQIRF)))
                                                                                                    g$ls/false$12638$CQIRF)
                                                                                                  (g$syntax-violation$10028$CQIRF
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$12637$CQIRF))))
                                                                                             (g$syntax-dispatch$9910$CQIRF
                                                                                               g$t$12637$CQIRF
                                                                                               '_))))
                                                                                         g$t$12629$CQIRF))))
                                                                                   (g$syntax-dispatch$9910$CQIRF
                                                                                     g$t$12629$CQIRF
                                                                                     'each-any))))
                                                                               g$t$12621$CQIRF))))
                                                                         (g$syntax-dispatch$9910$CQIRF
                                                                           g$t$12621$CQIRF
                                                                           '(any any)))))
                                                                     g$t$12612$CQIRF))))
                                                               (g$syntax-dispatch$9910$CQIRF
                                                                 g$t$12612$CQIRF
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$12603$CQIRF))))
                                                     (g$syntax-dispatch$9910$CQIRF
                                                       g$t$12603$CQIRF
                                                       '(any . each-any)))))
                                                 g$t$12600$CQIRF))))
                                           (g$syntax-dispatch$9910$CQIRF
                                             g$t$12600$CQIRF
                                             '()))))
                                       g$x*$12599$CQIRF)))))
                         ((letrec ((g$f$12577$CQIRF
                                     (case-lambda
                                       ((g$x$12578$CQIRF)
                                        ((case-lambda
                                           ((g$t$12579$CQIRF)
                                            ((case-lambda
                                               ((g$ls/false$12580$CQIRF)
                                                (if g$ls/false$12580$CQIRF
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$12581$CQIRF)
                                                       (values
                                                         '()
                                                         (g$version-pred$12576$CQIRF
                                                           g$version-spec*$12581$CQIRF))))
                                                    g$ls/false$12580$CQIRF)
                                                  ((case-lambda
                                                     ((g$t$12582$CQIRF)
                                                      ((case-lambda
                                                         ((g$ls/false$12583$CQIRF)
                                                          (if (if g$ls/false$12583$CQIRF
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$12584$CQIRF
                                                                         g$x*$12585$CQIRF)
                                                                       (g$idsyn?$12472$CQIRF
                                                                         g$x$12584$CQIRF)))
                                                                    g$ls/false$12583$CQIRF))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$12586$CQIRF
                                                                   g$x*$12587$CQIRF)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$12577$CQIRF
                                                                        g$x*$12587$CQIRF)))
                                                                   (case-lambda
                                                                     ((g$name$12590$CQIRF
                                                                        g$pred$12591$CQIRF)
                                                                      ((case-lambda
                                                                         ((g$pred$12592$CQIRF
                                                                            g$name$12593$CQIRF)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$10031$CQIRF
                                                                                g$x$12586$CQIRF)
                                                                              g$name$12593$CQIRF)
                                                                            g$pred$12592$CQIRF)))
                                                                       g$pred$12591$CQIRF
                                                                       g$name$12590$CQIRF))))))
                                                              g$ls/false$12583$CQIRF)
                                                            ((case-lambda
                                                               ((g$t$12594$CQIRF)
                                                                ((case-lambda
                                                                   ((g$ls/false$12595$CQIRF)
                                                                    (if g$ls/false$12595$CQIRF
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$12596$CQIRF)
                                                                                '#t)))))
                                                                        g$ls/false$12595$CQIRF)
                                                                      ((case-lambda
                                                                         ((g$t$12597$CQIRF)
                                                                          ((case-lambda
                                                                             ((g$ls/false$12598$CQIRF)
                                                                              (if g$ls/false$12598$CQIRF
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$10028$CQIRF
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$12573$CQIRF)))
                                                                                  g$ls/false$12598$CQIRF)
                                                                                (g$syntax-violation$10028$CQIRF
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$12597$CQIRF))))
                                                                           (g$syntax-dispatch$9910$CQIRF
                                                                             g$t$12597$CQIRF
                                                                             '_))))
                                                                       g$t$12594$CQIRF))))
                                                                 (g$syntax-dispatch$9910$CQIRF
                                                                   g$t$12594$CQIRF
                                                                   '()))))
                                                             g$t$12582$CQIRF))))
                                                       (g$syntax-dispatch$9910$CQIRF
                                                         g$t$12582$CQIRF
                                                         '(any . any)))))
                                                   g$t$12579$CQIRF))))
                                             (g$syntax-dispatch$9910$CQIRF
                                               g$t$12579$CQIRF
                                               '(each-any)))))
                                         g$x$12578$CQIRF)))))
                            g$f$12577$CQIRF)
                          g$spec$12573$CQIRF)))))
                  (g$import-library$12480$CQIRF
                    (case-lambda
                      ((g$spec*$12565$CQIRF)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$12479$CQIRF
                              g$spec*$12565$CQIRF)))
                         (case-lambda
                           ((g$name$12568$CQIRF g$pred$12569$CQIRF)
                            ((case-lambda
                               ((g$pred$12570$CQIRF g$name$12571$CQIRF)
                                (begin
                                  (if (null? g$name$12571$CQIRF)
                                    (g$syntax-violation$10028$CQIRF
                                      'import
                                      '"empty library name"
                                      g$spec*$12565$CQIRF)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$12572$CQIRF)
                                      (begin
                                        (if (not g$lib$12572$CQIRF)
                                          (g$syntax-violation$10028$CQIRF
                                            'import
                                            '"cannot find library with required name"
                                            g$name$12571$CQIRF)
                                          (void))
                                        (if (not (g$pred$12570$CQIRF
                                                   (g$library-version$9239$CQIRF
                                                     g$lib$12572$CQIRF)))
                                          (g$syntax-violation$10028$CQIRF
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$12565$CQIRF
                                            g$lib$12572$CQIRF)
                                          (void))
                                        ((g$imp-collector$9966$CQIRF)
                                         g$lib$12572$CQIRF)
                                        (g$library-subst$9243$CQIRF
                                          g$lib$12572$CQIRF))))
                                   (g$find-library-by-name$9279$CQIRF
                                     g$name$12571$CQIRF)))))
                             g$pred$12569$CQIRF
                             g$name$12568$CQIRF)))))))
                  (g$get-import$12481$CQIRF
                    (case-lambda
                      ((g$spec$12494$CQIRF)
                       ((case-lambda
                          ((g$t$12495$CQIRF)
                           ((case-lambda
                              ((g$ls/false$12496$CQIRF)
                               (if (if g$ls/false$12496$CQIRF
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$12497$CQIRF g$x*$12498$CQIRF)
                                            (not (g$memq$5938$CQIRF
                                                   (g$syntax->datum$10031$CQIRF
                                                     g$x$12497$CQIRF)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$12496$CQIRF))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$12499$CQIRF g$x*$12500$CQIRF)
                                      (g$import-library$12480$CQIRF
                                        (cons
                                          g$x$12499$CQIRF
                                          g$x*$12500$CQIRF))))
                                   g$ls/false$12496$CQIRF)
                                 ((case-lambda
                                    ((g$t$12501$CQIRF)
                                     ((case-lambda
                                        ((g$ls/false$12502$CQIRF)
                                         (if (if g$ls/false$12502$CQIRF
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$12503$CQIRF
                                                        g$isp$12504$CQIRF
                                                        g$old*$12505$CQIRF
                                                        g$new*$12506$CQIRF)
                                                      (if (eq? (g$syntax->datum$10031$CQIRF
                                                                 g$rename$12503$CQIRF)
                                                               'rename)
                                                        (if (g$for-all$5944$CQIRF
                                                              g$idsyn?$12472$CQIRF
                                                              g$old*$12505$CQIRF)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5944$CQIRF
                                                              g$idsyn?$12472$CQIRF
                                                              g$new*$12506$CQIRF))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$12502$CQIRF))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$12507$CQIRF
                                                  g$isp$12508$CQIRF
                                                  g$old*$12509$CQIRF
                                                  g$new*$12510$CQIRF)
                                                ((case-lambda
                                                   ((g$subst$12511$CQIRF
                                                      g$old*$12512$CQIRF
                                                      g$new*$12513$CQIRF)
                                                    ((case-lambda
                                                       ((g$old-label*$12514$CQIRF)
                                                        ((case-lambda
                                                           ((g$subst$12515$CQIRF)
                                                            (g$merge-substs$12474$CQIRF
                                                              (g$map$5946$CQIRF
                                                                cons
                                                                g$new*$12513$CQIRF
                                                                g$old-label*$12514$CQIRF)
                                                              g$subst$12515$CQIRF)))
                                                         (g$rem*$12477$CQIRF
                                                           g$old*$12512$CQIRF
                                                           g$subst$12511$CQIRF))))
                                                     (g$find*$12476$CQIRF
                                                       g$old*$12512$CQIRF
                                                       g$subst$12511$CQIRF))))
                                                 (g$get-import$12481$CQIRF
                                                   g$isp$12508$CQIRF)
                                                 (g$map$5946$CQIRF
                                                   g$syntax->datum$10031$CQIRF
                                                   g$old*$12509$CQIRF)
                                                 (g$map$5946$CQIRF
                                                   g$syntax->datum$10031$CQIRF
                                                   g$new*$12510$CQIRF))))
                                             g$ls/false$12502$CQIRF)
                                           ((case-lambda
                                              ((g$t$12516$CQIRF)
                                               ((case-lambda
                                                  ((g$ls/false$12517$CQIRF)
                                                   (if (if g$ls/false$12517$CQIRF
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$12518$CQIRF
                                                                  g$isp$12519$CQIRF
                                                                  g$sym*$12520$CQIRF)
                                                                (if (eq? (g$syntax->datum$10031$CQIRF
                                                                           g$except$12518$CQIRF)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5944$CQIRF
                                                                      g$idsyn?$12472$CQIRF
                                                                      g$sym*$12520$CQIRF))
                                                                  '#f)))
                                                             g$ls/false$12517$CQIRF))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$12521$CQIRF
                                                            g$isp$12522$CQIRF
                                                            g$sym*$12523$CQIRF)
                                                          ((case-lambda
                                                             ((g$subst$12524$CQIRF)
                                                              (g$rem*$12477$CQIRF
                                                                (g$map$5946$CQIRF
                                                                  g$syntax->datum$10031$CQIRF
                                                                  g$sym*$12523$CQIRF)
                                                                g$subst$12524$CQIRF)))
                                                           (g$get-import$12481$CQIRF
                                                             g$isp$12522$CQIRF))))
                                                       g$ls/false$12517$CQIRF)
                                                     ((case-lambda
                                                        ((g$t$12525$CQIRF)
                                                         ((case-lambda
                                                            ((g$ls/false$12526$CQIRF)
                                                             (if (if g$ls/false$12526$CQIRF
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$12527$CQIRF
                                                                            g$isp$12528$CQIRF
                                                                            g$sym*$12529$CQIRF)
                                                                          (if (eq? (g$syntax->datum$10031$CQIRF
                                                                                     g$only$12527$CQIRF)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5944$CQIRF
                                                                                g$idsyn?$12472$CQIRF
                                                                                g$sym*$12529$CQIRF))
                                                                            '#f)))
                                                                       g$ls/false$12526$CQIRF))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$12530$CQIRF
                                                                      g$isp$12531$CQIRF
                                                                      g$sym*$12532$CQIRF)
                                                                    ((case-lambda
                                                                       ((g$subst$12533$CQIRF
                                                                          g$sym*$12534$CQIRF)
                                                                        ((case-lambda
                                                                           ((g$sym*$12535$CQIRF)
                                                                            ((case-lambda
                                                                               ((g$lab*$12536$CQIRF)
                                                                                (g$map$5946$CQIRF
                                                                                  cons
                                                                                  g$sym*$12535$CQIRF
                                                                                  g$lab*$12536$CQIRF)))
                                                                             (g$find*$12476$CQIRF
                                                                               g$sym*$12535$CQIRF
                                                                               g$subst$12533$CQIRF))))
                                                                         (g$remove-dups$12478$CQIRF
                                                                           g$sym*$12534$CQIRF))))
                                                                     (g$get-import$12481$CQIRF
                                                                       g$isp$12531$CQIRF)
                                                                     (g$map$5946$CQIRF
                                                                       g$syntax->datum$10031$CQIRF
                                                                       g$sym*$12532$CQIRF))))
                                                                 g$ls/false$12526$CQIRF)
                                                               ((case-lambda
                                                                  ((g$t$12537$CQIRF)
                                                                   ((case-lambda
                                                                      ((g$ls/false$12538$CQIRF)
                                                                       (if (if g$ls/false$12538$CQIRF
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$12539$CQIRF
                                                                                      g$isp$12540$CQIRF
                                                                                      g$p$12541$CQIRF)
                                                                                    (if (eq? (g$syntax->datum$10031$CQIRF
                                                                                               g$prefix$12539$CQIRF)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$12472$CQIRF
                                                                                          g$p$12541$CQIRF))
                                                                                      '#f)))
                                                                                 g$ls/false$12538$CQIRF))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$12542$CQIRF
                                                                                g$isp$12543$CQIRF
                                                                                g$p$12544$CQIRF)
                                                                              ((case-lambda
                                                                                 ((g$subst$12545$CQIRF
                                                                                    g$prefix$12546$CQIRF)
                                                                                  (g$map$5946$CQIRF
                                                                                    (case-lambda
                                                                                      ((g$x$12547$CQIRF)
                                                                                       (cons
                                                                                         (string->symbol
                                                                                           (string-append
                                                                                             g$prefix$12546$CQIRF
                                                                                             (symbol->string
                                                                                               (car g$x$12547$CQIRF))))
                                                                                         (cdr g$x$12547$CQIRF))))
                                                                                    g$subst$12545$CQIRF)))
                                                                               (g$get-import$12481$CQIRF
                                                                                 g$isp$12543$CQIRF)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$10031$CQIRF
                                                                                   g$p$12544$CQIRF)))))
                                                                           g$ls/false$12538$CQIRF)
                                                                         ((case-lambda
                                                                            ((g$t$12548$CQIRF)
                                                                             ((case-lambda
                                                                                ((g$ls/false$12549$CQIRF)
                                                                                 (if (if g$ls/false$12549$CQIRF
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$12550$CQIRF
                                                                                                g$spec*$12551$CQIRF)
                                                                                              (eq? (g$syntax->datum$10031$CQIRF
                                                                                                     g$library$12550$CQIRF)
                                                                                                   'library)))
                                                                                           g$ls/false$12549$CQIRF))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$12552$CQIRF
                                                                                          g$spec*$12553$CQIRF)
                                                                                        (g$import-library$12480$CQIRF
                                                                                          g$spec*$12553$CQIRF)))
                                                                                     g$ls/false$12549$CQIRF)
                                                                                   ((case-lambda
                                                                                      ((g$t$12554$CQIRF)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$12555$CQIRF)
                                                                                           (if (if g$ls/false$12555$CQIRF
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$12556$CQIRF
                                                                                                          g$isp$12557$CQIRF
                                                                                                          g$rest$12558$CQIRF)
                                                                                                        (eq? (g$syntax->datum$10031$CQIRF
                                                                                                               g$for$12556$CQIRF)
                                                                                                             'for)))
                                                                                                     g$ls/false$12555$CQIRF))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$12559$CQIRF
                                                                                                    g$isp$12560$CQIRF
                                                                                                    g$rest$12561$CQIRF)
                                                                                                  (g$get-import$12481$CQIRF
                                                                                                    g$isp$12560$CQIRF)))
                                                                                               g$ls/false$12555$CQIRF)
                                                                                             ((case-lambda
                                                                                                ((g$t$12562$CQIRF)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$12563$CQIRF)
                                                                                                     (if g$ls/false$12563$CQIRF
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$12564$CQIRF)
                                                                                                            (g$syntax-violation$10028$CQIRF
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$12564$CQIRF)))
                                                                                                         g$ls/false$12563$CQIRF)
                                                                                                       (g$syntax-violation$10028$CQIRF
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$12562$CQIRF))))
                                                                                                  (g$syntax-dispatch$9910$CQIRF
                                                                                                    g$t$12562$CQIRF
                                                                                                    'any))))
                                                                                              g$t$12554$CQIRF))))
                                                                                        (g$syntax-dispatch$9910$CQIRF
                                                                                          g$t$12554$CQIRF
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$12548$CQIRF))))
                                                                              (g$syntax-dispatch$9910$CQIRF
                                                                                g$t$12548$CQIRF
                                                                                '(any each-any)))))
                                                                          g$t$12537$CQIRF))))
                                                                    (g$syntax-dispatch$9910$CQIRF
                                                                      g$t$12537$CQIRF
                                                                      '(any any
                                                                            any)))))
                                                                g$t$12525$CQIRF))))
                                                          (g$syntax-dispatch$9910$CQIRF
                                                            g$t$12525$CQIRF
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$12516$CQIRF))))
                                                (g$syntax-dispatch$9910$CQIRF
                                                  g$t$12516$CQIRF
                                                  '(any any . each-any)))))
                                            g$t$12501$CQIRF))))
                                      (g$syntax-dispatch$9910$CQIRF
                                        g$t$12501$CQIRF
                                        '(any any . #(each (any any)))))))
                                  g$t$12495$CQIRF))))
                            (g$syntax-dispatch$9910$CQIRF
                              g$t$12495$CQIRF
                              '(any . each-any)))))
                        g$spec$12494$CQIRF))))
                  (g$add-imports!$12482$CQIRF
                    (case-lambda
                      ((g$imp$12486$CQIRF g$h$12487$CQIRF)
                       ((case-lambda
                          ((g$subst$12488$CQIRF)
                           (g$for-each$5947$CQIRF
                             (case-lambda
                               ((g$x$12489$CQIRF)
                                ((case-lambda
                                   ((g$name$12490$CQIRF g$label$12491$CQIRF)
                                    ((case-lambda
                                       ((g$t$12492$CQIRF)
                                        (if g$t$12492$CQIRF
                                          ((case-lambda
                                             ((g$l$12493$CQIRF)
                                              (if (not (eq? g$l$12493$CQIRF
                                                            g$label$12491$CQIRF))
                                                (g$dup-error$12473$CQIRF
                                                  g$name$12490$CQIRF)
                                                (void))))
                                           g$t$12492$CQIRF)
                                          (g$hashtable-set!$6720$CQIRF
                                            g$h$12487$CQIRF
                                            g$name$12490$CQIRF
                                            g$label$12491$CQIRF))))
                                     (g$hashtable-ref$6719$CQIRF
                                       g$h$12487$CQIRF
                                       g$name$12490$CQIRF
                                       '#f))))
                                 (car g$x$12489$CQIRF)
                                 (cdr g$x$12489$CQIRF))))
                             g$subst$12488$CQIRF)))
                        (g$get-import$12481$CQIRF g$imp$12486$CQIRF))))))
          ((letrec ((g$f$12483$CQIRF
                      (case-lambda
                        ((g$imp*$12484$CQIRF g$h$12485$CQIRF)
                         (if (null? g$imp*$12484$CQIRF)
                           (hashtable-entries g$h$12485$CQIRF)
                           (begin
                             (g$add-imports!$12482$CQIRF
                               (car g$imp*$12484$CQIRF)
                               g$h$12485$CQIRF)
                             (g$f$12483$CQIRF
                               (cdr g$imp*$12484$CQIRF)
                               g$h$12485$CQIRF)))))))
             g$f$12483$CQIRF)
           g$imp*$12471$CQIRF
           (g$make-eq-hashtable$6716$CQIRF))))))
   (g$make-top-rib$9962$CQIRF
     g$make-top-rib$13501$CQIRF
     (case-lambda
       ((g$names$12733$CQIRF g$labels$12734$CQIRF)
        ((case-lambda
           ((g$rib$12735$CQIRF)
            (begin
              (g$vector-for-each$6678$CQIRF
                (case-lambda
                  ((g$name$12736$CQIRF g$label$12737$CQIRF)
                   (begin
                     (if (not (g$symbol?$6617$CQIRF g$name$12736$CQIRF))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$12736$CQIRF)
                       (void))
                     (g$extend-rib/nc!$9509$CQIRF
                       g$rib$12735$CQIRF
                       (g$make-stx$9520$CQIRF
                         g$name$12736$CQIRF
                         g$top-mark*$9480$CQIRF
                         '()
                         '())
                       g$label$12737$CQIRF))))
                g$names$12733$CQIRF
                g$labels$12734$CQIRF)
              g$rib$12735$CQIRF)))
         (g$make-cache-rib$9506$CQIRF)))))
   (g$make-collector$9963$CQIRF
     g$make-collector$13502$CQIRF
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$12738$CQIRF)
            (case-lambda
              (() g$ls$12738$CQIRF)
              ((g$x$12739$CQIRF)
               (set! g$ls$12738$CQIRF
                 (g$set-cons$9477$CQIRF g$x$12739$CQIRF g$ls$12738$CQIRF))))))
         '()))))
   (g$inv-collector$9964$CQIRF
     g$inv-collector$13503$CQIRF
     (g$make-parameter$8771$CQIRF
       (case-lambda
         (g$args$12740$CQIRF
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$12741$CQIRF)
          (begin
            (if (not (g$procedure?$6619$CQIRF g$x$12741$CQIRF))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$12741$CQIRF)
              (void))
            g$x$12741$CQIRF)))))
   (g$vis-collector$9965$CQIRF
     g$vis-collector$13504$CQIRF
     (g$make-parameter$8771$CQIRF
       (case-lambda
         (g$args$12742$CQIRF
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$12743$CQIRF)
          (begin
            (if (not (g$procedure?$6619$CQIRF g$x$12743$CQIRF))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$12743$CQIRF)
              (void))
            g$x$12743$CQIRF)))))
   (g$imp-collector$9966$CQIRF
     g$imp-collector$13505$CQIRF
     (g$make-parameter$8771$CQIRF
       (case-lambda
         (g$args$12744$CQIRF
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$12745$CQIRF)
          (begin
            (if (not (g$procedure?$6619$CQIRF g$x$12745$CQIRF))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$12745$CQIRF)
              (void))
            g$x$12745$CQIRF)))))
   (g$chi-library-internal$9967$CQIRF
     g$chi-library-internal$13506$CQIRF
     (case-lambda
       ((g$e*$12746$CQIRF g$rib$12747$CQIRF g$mix?$12748$CQIRF)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$9956$CQIRF
               g$e*$12746$CQIRF
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$12747$CQIRF
               g$mix?$12748$CQIRF
               '#t)))
          (case-lambda
            ((g$e*$12757$CQIRF
               g$r$12758$CQIRF
               g$mr$12759$CQIRF
               g$lex*$12760$CQIRF
               g$rhs*$12761$CQIRF
               g$mod**$12762$CQIRF
               g$_kwd*$12763$CQIRF
               g$exp*$12764$CQIRF)
             ((case-lambda
                ((g$exp*$12765$CQIRF
                   g$_kwd*$12766$CQIRF
                   g$mod**$12767$CQIRF
                   g$rhs*$12768$CQIRF
                   g$lex*$12769$CQIRF
                   g$mr$12770$CQIRF
                   g$r$12771$CQIRF
                   g$e*$12772$CQIRF)
                 (values
                   (append
                     (apply append (g$reverse$6624$CQIRF g$mod**$12767$CQIRF))
                     g$e*$12772$CQIRF)
                   g$r$12771$CQIRF
                   g$mr$12770$CQIRF
                   (g$reverse$6624$CQIRF g$lex*$12769$CQIRF)
                   (g$reverse$6624$CQIRF g$rhs*$12768$CQIRF)
                   g$exp*$12765$CQIRF)))
              g$exp*$12764$CQIRF
              g$_kwd*$12763$CQIRF
              g$mod**$12762$CQIRF
              g$rhs*$12761$CQIRF
              g$lex*$12760$CQIRF
              g$mr$12759$CQIRF
              g$r$12758$CQIRF
              g$e*$12757$CQIRF)))))))
   (g$chi-interaction-expr$9968$CQIRF
     g$chi-interaction-expr$13507$CQIRF
     (case-lambda
       ((g$e$12773$CQIRF g$rib$12774$CQIRF g$r$12775$CQIRF)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$9956$CQIRF
               (list g$e$12773$CQIRF)
               g$r$12775$CQIRF
               g$r$12775$CQIRF
               '()
               '()
               '()
               '()
               '()
               g$rib$12774$CQIRF
               '#t
               '#f)))
          (case-lambda
            ((g$e*$12784$CQIRF
               g$r$12785$CQIRF
               g$mr$12786$CQIRF
               g$lex*$12787$CQIRF
               g$rhs*$12788$CQIRF
               g$mod**$12789$CQIRF
               g$_kwd*$12790$CQIRF
               g$_exp*$12791$CQIRF)
             ((case-lambda
                ((g$_exp*$12792$CQIRF
                   g$_kwd*$12793$CQIRF
                   g$mod**$12794$CQIRF
                   g$rhs*$12795$CQIRF
                   g$lex*$12796$CQIRF
                   g$mr$12797$CQIRF
                   g$r$12798$CQIRF
                   g$e*$12799$CQIRF)
                 ((case-lambda
                    ((g$e*$12800$CQIRF)
                     ((case-lambda
                        ((g$e$12801$CQIRF)
                         (values g$e$12801$CQIRF g$r$12798$CQIRF)))
                      (if (null? g$e*$12800$CQIRF)
                        (g$build-void$9473$CQIRF)
                        (if (null? (cdr g$e*$12800$CQIRF))
                          (car g$e*$12800$CQIRF)
                          (g$build-sequence$9472$CQIRF
                            '#f
                            g$e*$12800$CQIRF))))))
                  (g$expand-interaction-rhs*/init*$9935$CQIRF
                    (g$reverse$6624$CQIRF g$lex*$12796$CQIRF)
                    (g$reverse$6624$CQIRF g$rhs*$12795$CQIRF)
                    (append
                      (apply append (g$reverse$6624$CQIRF g$mod**$12794$CQIRF))
                      g$e*$12799$CQIRF)
                    g$r$12798$CQIRF
                    g$mr$12797$CQIRF))))
              g$_exp*$12791$CQIRF
              g$_kwd*$12790$CQIRF
              g$mod**$12789$CQIRF
              g$rhs*$12788$CQIRF
              g$lex*$12787$CQIRF
              g$mr$12786$CQIRF
              g$r$12785$CQIRF
              g$e*$12784$CQIRF)))))))
   (g$library-body-expander$9969$CQIRF
     g$library-body-expander$13508$CQIRF
     (case-lambda
       ((g$name$12802$CQIRF
          g$main-exp*$12803$CQIRF
          g$imp*$12804$CQIRF
          g$b*$12805$CQIRF
          g$mix?$12806$CQIRF)
        (letrec* ((g$itc$12807$CQIRF (g$make-collector$9963$CQIRF)))
          ((case-lambda
             ((g$imp-collector$12812$CQIRF
                g$top-level-context$12813$CQIRF
                g$imp-collector$12814$CQIRF
                g$top-level-context$12815$CQIRF)
              ((case-lambda
                 ((g$swap$12816$CQIRF)
                  (dynamic-wind
                    g$swap$12816$CQIRF
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$9961$CQIRF
                              g$imp*$12804$CQIRF)))
                         (case-lambda
                           ((g$subst-names$12819$CQIRF
                              g$subst-labels$12820$CQIRF)
                            ((case-lambda
                               ((g$subst-labels$12821$CQIRF
                                  g$subst-names$12822$CQIRF)
                                ((case-lambda
                                   ((g$rib$12823$CQIRF)
                                    (letrec* ((g$wrap$12824$CQIRF
                                                (case-lambda
                                                  ((g$x$12886$CQIRF)
                                                   (g$make-stx$9520$CQIRF
                                                     g$x$12886$CQIRF
                                                     g$top-mark*$9480$CQIRF
                                                     (list g$rib$12823$CQIRF)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$12825$CQIRF
                                            g$main-exp*$12826$CQIRF
                                            g$rtc$12827$CQIRF
                                            g$vtc$12828$CQIRF)
                                          ((case-lambda
                                             ((g$inv-collector$12833$CQIRF
                                                g$vis-collector$12834$CQIRF
                                                g$inv-collector$12835$CQIRF
                                                g$vis-collector$12836$CQIRF)
                                              ((case-lambda
                                                 ((g$swap$12837$CQIRF)
                                                  (dynamic-wind
                                                    g$swap$12837$CQIRF
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$9967$CQIRF
                                                              g$b*$12825$CQIRF
                                                              g$rib$12823$CQIRF
                                                              g$mix?$12806$CQIRF)))
                                                         (case-lambda
                                                           ((g$init*$12844$CQIRF
                                                              g$r$12845$CQIRF
                                                              g$mr$12846$CQIRF
                                                              g$lex*$12847$CQIRF
                                                              g$rhs*$12848$CQIRF
                                                              g$internal-exp*$12849$CQIRF)
                                                            ((case-lambda
                                                               ((g$internal-exp*$12850$CQIRF
                                                                  g$rhs*$12851$CQIRF
                                                                  g$lex*$12852$CQIRF
                                                                  g$mr$12853$CQIRF
                                                                  g$r$12854$CQIRF
                                                                  g$init*$12855$CQIRF)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$9958$CQIRF
                                                                       (append
                                                                         g$main-exp*$12826$CQIRF
                                                                         g$internal-exp*$12850$CQIRF))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$12858$CQIRF
                                                                       g$exp-id*$12859$CQIRF)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$12860$CQIRF
                                                                           g$exp-name*$12861$CQIRF)
                                                                         (begin
                                                                           (g$seal-rib!$9511$CQIRF
                                                                             g$rib$12823$CQIRF)
                                                                           ((case-lambda
                                                                              ((g$init*$12862$CQIRF)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$12863$CQIRF)
                                                                                   (begin
                                                                                     (g$unseal-rib!$9512$CQIRF
                                                                                       g$rib$12823$CQIRF)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$12864$CQIRF
                                                                                           g$export-subst$12865$CQIRF)
                                                                                         (letrec* ((g$errstr$12866$CQIRF
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$10017$CQIRF
                                                                                                  g$lex*$12852$CQIRF
                                                                                                  g$loc*$12864$CQIRF
                                                                                                  g$r$12854$CQIRF)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$12870$CQIRF
                                                                                                  g$global*$12871$CQIRF
                                                                                                  g$macro*$12872$CQIRF)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$12873$CQIRF
                                                                                                      g$global*$12874$CQIRF
                                                                                                      g$export-env$12875$CQIRF)
                                                                                                    (begin
                                                                                                      (g$for-each$5947$CQIRF
                                                                                                        (case-lambda
                                                                                                          ((g$s$12876$CQIRF)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$12877$CQIRF
                                                                                                                 g$label$12878$CQIRF)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$12879$CQIRF)
                                                                                                                   (if g$p$12879$CQIRF
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$12880$CQIRF)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$12881$CQIRF)
                                                                                                                             (if (eq? g$type$12881$CQIRF
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$10028$CQIRF
                                                                                                                                 'export
                                                                                                                                 g$errstr$12866$CQIRF
                                                                                                                                 g$name$12877$CQIRF)
                                                                                                                               (void))))
                                                                                                                          (car g$b$12880$CQIRF))))
                                                                                                                      (cdr g$p$12879$CQIRF))
                                                                                                                     (void))))
                                                                                                                (g$assq$5934$CQIRF
                                                                                                                  g$label$12878$CQIRF
                                                                                                                  g$export-env$12875$CQIRF))))
                                                                                                            (car g$s$12876$CQIRF)
                                                                                                            (cdr g$s$12876$CQIRF))))
                                                                                                        g$export-subst$12865$CQIRF)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$12882$CQIRF
                                                                                                            g$invoke-definitions$12883$CQIRF)
                                                                                                          (values
                                                                                                            (g$itc$12807$CQIRF)
                                                                                                            (g$rtc$12827$CQIRF)
                                                                                                            (g$vtc$12828$CQIRF)
                                                                                                            (g$build-sequence$9472$CQIRF
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$12883$CQIRF
                                                                                                                (list
                                                                                                                  g$invoke-body$12882$CQIRF)))
                                                                                                            g$macro*$12873$CQIRF
                                                                                                            g$export-subst$12865$CQIRF
                                                                                                            g$export-env$12875$CQIRF)))
                                                                                                       (g$build-library-letrec*$9476$CQIRF
                                                                                                         '#f
                                                                                                         g$name$12802$CQIRF
                                                                                                         g$lex*$12852$CQIRF
                                                                                                         g$loc*$12864$CQIRF
                                                                                                         g$rhs*$12863$CQIRF
                                                                                                         (if (null?
                                                                                                               g$init*$12862$CQIRF)
                                                                                                           (g$build-void$9473$CQIRF)
                                                                                                           (g$build-sequence$9472$CQIRF
                                                                                                             '#f
                                                                                                             g$init*$12862$CQIRF)))
                                                                                                       (g$map$5946$CQIRF
                                                                                                         g$build-global-define$9468$CQIRF
                                                                                                         (g$map$5946$CQIRF
                                                                                                           cdr
                                                                                                           g$global*$12874$CQIRF))))))
                                                                                                 g$macro*$12872$CQIRF
                                                                                                 g$global*$12871$CQIRF
                                                                                                 g$export-env$12870$CQIRF)))))))
                                                                                      (g$map$5946$CQIRF
                                                                                        g$gen-global$9483$CQIRF
                                                                                        g$lex*$12852$CQIRF)
                                                                                      (g$make-export-subst$10016$CQIRF
                                                                                        g$exp-name*$12861$CQIRF
                                                                                        g$exp-id*$12860$CQIRF)))))
                                                                                (g$chi-rhs*$9936$CQIRF
                                                                                  g$rhs*$12851$CQIRF
                                                                                  g$r$12854$CQIRF
                                                                                  g$mr$12853$CQIRF))))
                                                                            (g$chi-expr*$9926$CQIRF
                                                                              g$init*$12855$CQIRF
                                                                              g$r$12854$CQIRF
                                                                              g$mr$12853$CQIRF)))))
                                                                      g$exp-id*$12859$CQIRF
                                                                      g$exp-name*$12858$CQIRF))))))
                                                             g$internal-exp*$12849$CQIRF
                                                             g$rhs*$12848$CQIRF
                                                             g$lex*$12847$CQIRF
                                                             g$mr$12846$CQIRF
                                                             g$r$12845$CQIRF
                                                             g$init*$12844$CQIRF))))))
                                                    g$swap$12837$CQIRF)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$12884$CQIRF)
                                                        (begin
                                                          (g$inv-collector$12833$CQIRF
                                                            g$inv-collector$12835$CQIRF)
                                                          (set! g$inv-collector$12835$CQIRF
                                                            g$t$12884$CQIRF))))
                                                     (g$inv-collector$12833$CQIRF))
                                                    ((case-lambda
                                                       ((g$t$12885$CQIRF)
                                                        (begin
                                                          (g$vis-collector$12834$CQIRF
                                                            g$vis-collector$12836$CQIRF)
                                                          (set! g$vis-collector$12836$CQIRF
                                                            g$t$12885$CQIRF))))
                                                     (g$vis-collector$12834$CQIRF))))))))
                                           g$inv-collector$9964$CQIRF
                                           g$vis-collector$9965$CQIRF
                                           g$rtc$12827$CQIRF
                                           g$vtc$12828$CQIRF)))
                                       (g$map$5946$CQIRF
                                         g$wrap$12824$CQIRF
                                         g$b*$12805$CQIRF)
                                       (g$map$5946$CQIRF
                                         g$wrap$12824$CQIRF
                                         g$main-exp*$12803$CQIRF)
                                       (g$make-collector$9963$CQIRF)
                                       (g$make-collector$9963$CQIRF)))))
                                 (g$make-top-rib$9962$CQIRF
                                   g$subst-names$12822$CQIRF
                                   g$subst-labels$12821$CQIRF))))
                             g$subst-labels$12820$CQIRF
                             g$subst-names$12819$CQIRF))))))
                    g$swap$12816$CQIRF)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$12887$CQIRF)
                        (begin
                          (g$imp-collector$12812$CQIRF
                            g$imp-collector$12814$CQIRF)
                          (set! g$imp-collector$12814$CQIRF g$t$12887$CQIRF))))
                     (g$imp-collector$12812$CQIRF))
                    ((case-lambda
                       ((g$t$12888$CQIRF)
                        (begin
                          (g$top-level-context$12813$CQIRF
                            g$top-level-context$12815$CQIRF)
                          (set! g$top-level-context$12815$CQIRF
                            g$t$12888$CQIRF))))
                     (g$top-level-context$12813$CQIRF))))))))
           g$imp-collector$9966$CQIRF
           g$top-level-context$10036$CQIRF
           g$itc$12807$CQIRF
           '#f)))))
   (g$core-library-expander$9970$CQIRF
     g$core-library-expander$13509$CQIRF
     (case-lambda
       ((g$e$12889$CQIRF g$verify-name$12890$CQIRF)
        (call-with-values
          (case-lambda (() (g$parse-library$9960$CQIRF g$e$12889$CQIRF)))
          (case-lambda
            ((g$name*$12895$CQIRF
               g$exp*$12896$CQIRF
               g$imp*$12897$CQIRF
               g$b*$12898$CQIRF)
             ((case-lambda
                ((g$b*$12899$CQIRF
                   g$imp*$12900$CQIRF
                   g$exp*$12901$CQIRF
                   g$name*$12902$CQIRF)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$9959$CQIRF g$name*$12902$CQIRF)))
                   (case-lambda
                     ((g$name$12905$CQIRF g$ver$12906$CQIRF)
                      ((case-lambda
                         ((g$ver$12907$CQIRF g$name$12908$CQIRF)
                          (begin
                            (g$verify-name$12890$CQIRF g$name$12908$CQIRF)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$9969$CQIRF
                                   g$name$12908$CQIRF
                                   g$exp*$12901$CQIRF
                                   g$imp*$12900$CQIRF
                                   g$b*$12899$CQIRF
                                   '#f)))
                              (case-lambda
                                ((g$imp*$12916$CQIRF
                                   g$invoke-req*$12917$CQIRF
                                   g$visit-req*$12918$CQIRF
                                   g$invoke-code$12919$CQIRF
                                   g$visit-code$12920$CQIRF
                                   g$export-subst$12921$CQIRF
                                   g$export-env$12922$CQIRF)
                                 ((case-lambda
                                    ((g$export-env$12923$CQIRF
                                       g$export-subst$12924$CQIRF
                                       g$visit-code$12925$CQIRF
                                       g$invoke-code$12926$CQIRF
                                       g$visit-req*$12927$CQIRF
                                       g$invoke-req*$12928$CQIRF
                                       g$imp*$12929$CQIRF)
                                     (values
                                       g$name$12908$CQIRF
                                       g$ver$12907$CQIRF
                                       g$imp*$12929$CQIRF
                                       g$invoke-req*$12928$CQIRF
                                       g$visit-req*$12927$CQIRF
                                       g$invoke-code$12926$CQIRF
                                       g$visit-code$12925$CQIRF
                                       g$export-subst$12924$CQIRF
                                       g$export-env$12923$CQIRF)))
                                  g$export-env$12922$CQIRF
                                  g$export-subst$12921$CQIRF
                                  g$visit-code$12920$CQIRF
                                  g$invoke-code$12919$CQIRF
                                  g$visit-req*$12918$CQIRF
                                  g$invoke-req*$12917$CQIRF
                                  g$imp*$12916$CQIRF)))))))
                       g$ver$12906$CQIRF
                       g$name$12905$CQIRF))))))
              g$b*$12898$CQIRF
              g$imp*$12897$CQIRF
              g$exp*$12896$CQIRF
              g$name*$12895$CQIRF)))))))
   (g$parse-top-level-program$9971$CQIRF
     g$parse-top-level-program$13510$CQIRF
     (case-lambda
       ((g$e*$12930$CQIRF)
        ((case-lambda
           ((g$t$12931$CQIRF)
            ((case-lambda
               ((g$ls/false$12932$CQIRF)
                (if (if g$ls/false$12932$CQIRF
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$12933$CQIRF
                               g$imp*$12934$CQIRF
                               g$b*$12935$CQIRF)
                             (eq? (g$syntax->datum$10031$CQIRF
                                    g$import$12933$CQIRF)
                                  'import)))
                          g$ls/false$12932$CQIRF))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$12936$CQIRF
                         g$imp*$12937$CQIRF
                         g$b*$12938$CQIRF)
                       (values g$imp*$12937$CQIRF g$b*$12938$CQIRF)))
                    g$ls/false$12932$CQIRF)
                  ((case-lambda
                     ((g$t$12939$CQIRF)
                      ((case-lambda
                         ((g$ls/false$12940$CQIRF)
                          (if (if g$ls/false$12940$CQIRF
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$12941$CQIRF
                                         g$x$12942$CQIRF
                                         g$y$12943$CQIRF)
                                       (eq? (g$syntax->datum$10031$CQIRF
                                              g$import$12941$CQIRF)
                                            'import)))
                                    g$ls/false$12940$CQIRF))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$12944$CQIRF
                                   g$x$12945$CQIRF
                                   g$y$12946$CQIRF)
                                 (g$syntax-violation$10028$CQIRF
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$9544$CQIRF g$e*$12930$CQIRF))))
                              g$ls/false$12940$CQIRF)
                            ((case-lambda
                               ((g$t$12947$CQIRF)
                                ((case-lambda
                                   ((g$ls/false$12948$CQIRF)
                                    (if g$ls/false$12948$CQIRF
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$12948$CQIRF)
                                      (g$syntax-violation$10028$CQIRF
                                        '#f
                                        '"invalid syntax"
                                        g$t$12947$CQIRF))))
                                 (g$syntax-dispatch$9910$CQIRF
                                   g$t$12947$CQIRF
                                   '_))))
                             g$t$12939$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF
                         g$t$12939$CQIRF
                         '((any . any) . any)))))
                   g$t$12931$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF
               g$t$12931$CQIRF
               '((any . each-any) . each-any)))))
         g$e*$12930$CQIRF))))
   (g$top-level-expander$9972$CQIRF
     g$top-level-expander$13511$CQIRF
     (case-lambda
       ((g$e*$12949$CQIRF)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$9971$CQIRF g$e*$12949$CQIRF)))
          (case-lambda
            ((g$imp*$12952$CQIRF g$b*$12953$CQIRF)
             ((case-lambda
                ((g$b*$12954$CQIRF g$imp*$12955$CQIRF)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$9969$CQIRF
                        '()
                        '()
                        g$imp*$12955$CQIRF
                        g$b*$12954$CQIRF
                        '#t)))
                   (case-lambda
                     ((g$imp*$12963$CQIRF
                        g$invoke-req*$12964$CQIRF
                        g$visit-req*$12965$CQIRF
                        g$invoke-code$12966$CQIRF
                        g$visit-code$12967$CQIRF
                        g$export-subst$12968$CQIRF
                        g$export-env$12969$CQIRF)
                      ((case-lambda
                         ((g$export-env$12970$CQIRF
                            g$export-subst$12971$CQIRF
                            g$visit-code$12972$CQIRF
                            g$invoke-code$12973$CQIRF
                            g$visit-req*$12974$CQIRF
                            g$invoke-req*$12975$CQIRF
                            g$imp*$12976$CQIRF)
                          (values
                            g$invoke-req*$12975$CQIRF
                            g$invoke-code$12973$CQIRF)))
                       g$export-env$12969$CQIRF
                       g$export-subst$12968$CQIRF
                       g$visit-code$12967$CQIRF
                       g$invoke-code$12966$CQIRF
                       g$visit-req*$12965$CQIRF
                       g$invoke-req*$12964$CQIRF
                       g$imp*$12963$CQIRF))))))
              g$b*$12953$CQIRF
              g$imp*$12952$CQIRF)))))))
   (g$8029$9973$CQIRF
     g$8029$13512$CQIRF
     (make-record-type-descriptor
       'env
       '#f
       'g$8032$CQIRF
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8031$9974$CQIRF g$8031$13513$CQIRF '#f)
   (g$8030$9975$CQIRF
     g$8030$13514$CQIRF
     (make-record-constructor-descriptor
       g$8029$9973$CQIRF
       '#f
       g$8031$9974$CQIRF))
   (g$env?$9978$CQIRF
     g$env?$13515$CQIRF
     (record-predicate g$8029$9973$CQIRF))
   (g$make-env$9979$CQIRF
     g$make-env$13516$CQIRF
     (record-constructor g$8030$9975$CQIRF))
   (g$env-names$9980$CQIRF
     g$env-names$13517$CQIRF
     (record-accessor g$8029$9973$CQIRF '0))
   (g$env-labels$9981$CQIRF
     g$env-labels$13518$CQIRF
     (record-accessor g$8029$9973$CQIRF '1))
   (g$env-itc$9982$CQIRF
     g$env-itc$13519$CQIRF
     (record-accessor g$8029$9973$CQIRF '2))
   (g$set-env-names!$9983$CQIRF
     g$set-env-names!$13520$CQIRF
     (record-mutator g$8029$9973$CQIRF '0))
   (g$set-env-labels!$9984$CQIRF
     g$set-env-labels!$13521$CQIRF
     (record-mutator g$8029$9973$CQIRF '1))
   (g$set-env-itc!$9985$CQIRF
     g$set-env-itc!$13522$CQIRF
     (record-mutator g$8029$9973$CQIRF '2))
   (g$rp$9986$CQIRF
     g$rp$13523$CQIRF
     (make-record-printer
       'env
       (case-lambda
         ((g$x$12977$CQIRF g$p$12978$CQIRF g$wr$12979$CQIRF)
          (display '"#<environment>" g$p$12978$CQIRF)))))
   (g$8046$9987$CQIRF
     g$8046$13524$CQIRF
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8049$CQIRF
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8048$9988$CQIRF g$8048$13525$CQIRF '#f)
   (g$8047$9989$CQIRF
     g$8047$13526$CQIRF
     (make-record-constructor-descriptor
       g$8046$9987$CQIRF
       '#f
       g$8048$9988$CQIRF))
   (g$interaction-env?$9992$CQIRF
     g$interaction-env?$13527$CQIRF
     (record-predicate g$8046$9987$CQIRF))
   (g$make-interaction-env$9993$CQIRF
     g$make-interaction-env$13528$CQIRF
     (record-constructor g$8047$9989$CQIRF))
   (g$interaction-env-rib$9994$CQIRF
     g$interaction-env-rib$13529$CQIRF
     (record-accessor g$8046$9987$CQIRF '0))
   (g$interaction-env-r$9995$CQIRF
     g$interaction-env-r$13530$CQIRF
     (record-accessor g$8046$9987$CQIRF '1))
   (g$interaction-env-locs$9996$CQIRF
     g$interaction-env-locs$13531$CQIRF
     (record-accessor g$8046$9987$CQIRF '2))
   (g$set-interaction-env-rib!$9997$CQIRF
     g$set-interaction-env-rib!$13532$CQIRF
     (record-mutator g$8046$9987$CQIRF '0))
   (g$set-interaction-env-r!$9998$CQIRF
     g$set-interaction-env-r!$13533$CQIRF
     (record-mutator g$8046$9987$CQIRF '1))
   (g$set-interaction-env-locs!$9999$CQIRF
     g$set-interaction-env-locs!$13534$CQIRF
     (record-mutator g$8046$9987$CQIRF '2))
   (g$rp$10000$CQIRF
     g$rp$13535$CQIRF
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$12980$CQIRF g$p$12981$CQIRF g$wr$12982$CQIRF)
          (display '"#<environment>" g$p$12981$CQIRF)))))
   (g$interaction-environment-symbols$10001$CQIRF
     g$interaction-environment-symbols$13536$CQIRF
     (case-lambda
       (()
        (g$environment-symbols$10005$CQIRF
          (g$interaction-environment$10035$CQIRF)))))
   (g$environment-bindings$10002$CQIRF
     g$environment-bindings$13537$CQIRF
     (case-lambda
       ((g$e$12983$CQIRF)
        (vector->list
          (g$vector-map$6677$CQIRF
            (case-lambda
              ((g$name$12984$CQIRF g$label$12985$CQIRF)
               (g$parse-binding$10003$CQIRF
                 (cons
                   g$name$12984$CQIRF
                   (g$imported-label->binding$9285$CQIRF
                     g$label$12985$CQIRF)))))
            (g$env-names$9980$CQIRF g$e$12983$CQIRF)
            (g$env-labels$9981$CQIRF g$e$12983$CQIRF))))))
   (g$parse-binding$10003$CQIRF
     g$parse-binding$13538$CQIRF
     (case-lambda
       ((g$b$12986$CQIRF)
        (cons
          (car g$b$12986$CQIRF)
          ((case-lambda
             ((g$t$12987$CQIRF)
              (if (g$memv$5939$CQIRF g$t$12987$CQIRF '(core-prim global))
                'procedure
                (if (g$memv$5939$CQIRF
                      g$t$12987$CQIRF
                      '(core-macro macro global-macro))
                  'syntax
                  (if (eqv? g$t$12987$CQIRF '$core-rtd)
                    'record
                    (if (eq? (car g$b$12986$CQIRF)
                             (g$cadr$6626$CQIRF g$b$12986$CQIRF))
                      'syntax
                      'unknown))))))
           (g$cadr$6626$CQIRF g$b$12986$CQIRF))))))
   (g$environment?$10004$CQIRF
     g$environment?$13539$CQIRF
     (case-lambda
       ((g$x$12988$CQIRF)
        ((case-lambda
           ((g$t$12989$CQIRF)
            (if g$t$12989$CQIRF
              g$t$12989$CQIRF
              (begin '#f (g$interaction-env?$9992$CQIRF g$x$12988$CQIRF)))))
         (g$env?$9978$CQIRF g$x$12988$CQIRF)))))
   (g$environment-symbols$10005$CQIRF
     g$environment-symbols$13540$CQIRF
     (case-lambda
       ((g$x$12990$CQIRF)
        (if (g$env?$9978$CQIRF g$x$12990$CQIRF)
          (vector->list (g$env-names$9980$CQIRF g$x$12990$CQIRF))
          (if (g$interaction-env?$9992$CQIRF g$x$12990$CQIRF)
            (g$map$5946$CQIRF
              values
              (g$rib-sym*$9495$CQIRF
                (g$interaction-env-rib$9994$CQIRF g$x$12990$CQIRF)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$12990$CQIRF))))))
   (g$environment$10006$CQIRF
     g$environment$13541$CQIRF
     (case-lambda
       (g$imp*$12991$CQIRF
        ((case-lambda
           ((g$itc$12992$CQIRF)
            ((case-lambda
               ((g$imp-collector$12995$CQIRF g$imp-collector$12996$CQIRF)
                ((case-lambda
                   ((g$swap$12997$CQIRF)
                    (dynamic-wind
                      g$swap$12997$CQIRF
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$9961$CQIRF
                                g$imp*$12991$CQIRF)))
                           (case-lambda
                             ((g$subst-names$13000$CQIRF
                                g$subst-labels$13001$CQIRF)
                              ((case-lambda
                                 ((g$subst-labels$13002$CQIRF
                                    g$subst-names$13003$CQIRF)
                                  (g$make-env$9979$CQIRF
                                    g$subst-names$13003$CQIRF
                                    g$subst-labels$13002$CQIRF
                                    g$itc$12992$CQIRF)))
                               g$subst-labels$13001$CQIRF
                               g$subst-names$13000$CQIRF))))))
                      g$swap$12997$CQIRF)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$13004$CQIRF)
                        (begin
                          (g$imp-collector$12995$CQIRF
                            g$imp-collector$12996$CQIRF)
                          (set! g$imp-collector$12996$CQIRF g$t$13004$CQIRF))))
                     (g$imp-collector$12995$CQIRF)))))))
             g$imp-collector$9966$CQIRF
             g$itc$12992$CQIRF)))
         (g$make-collector$9963$CQIRF)))))
   (g$null-environment$10007$CQIRF
     g$null-environment$13542$CQIRF
     (case-lambda
       ((g$n$13005$CQIRF)
        (begin
          (if (not (eqv? g$n$13005$CQIRF '5))
            (assertion-violation 'null-environment '"not 5" g$n$13005$CQIRF)
            (void))
          (g$environment$10006$CQIRF '(psyntax null-environment-5))))))
   (g$scheme-report-environment$10008$CQIRF
     g$scheme-report-environment$13543$CQIRF
     (case-lambda
       ((g$n$13006$CQIRF)
        (begin
          (if (not (eqv? g$n$13006$CQIRF '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$13006$CQIRF)
            (void))
          (g$environment$10006$CQIRF '(psyntax scheme-report-environment-5))))))
   (g$expand$10009$CQIRF
     g$expand$13544$CQIRF
     (case-lambda
       ((g$x$13007$CQIRF g$env$13008$CQIRF)
        (if (g$env?$9978$CQIRF g$env$13008$CQIRF)
          ((case-lambda
             ((g$rib$13009$CQIRF)
              ((case-lambda
                 ((g$x$13010$CQIRF
                    g$itc$13011$CQIRF
                    g$rtc$13012$CQIRF
                    g$vtc$13013$CQIRF)
                  ((case-lambda
                     ((g$x$13014$CQIRF)
                      (begin
                        (g$seal-rib!$9511$CQIRF g$rib$13009$CQIRF)
                        (values g$x$13014$CQIRF (g$rtc$13012$CQIRF)))))
                   ((case-lambda
                      ((g$top-level-context$13023$CQIRF
                         g$inv-collector$13024$CQIRF
                         g$vis-collector$13025$CQIRF
                         g$imp-collector$13026$CQIRF
                         g$top-level-context$13027$CQIRF
                         g$inv-collector$13028$CQIRF
                         g$vis-collector$13029$CQIRF
                         g$imp-collector$13030$CQIRF)
                       ((case-lambda
                          ((g$swap$13031$CQIRF)
                           (dynamic-wind
                             g$swap$13031$CQIRF
                             (case-lambda
                               (()
                                (g$chi-expr$9928$CQIRF
                                  g$x$13010$CQIRF
                                  '()
                                  '())))
                             g$swap$13031$CQIRF)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$13032$CQIRF)
                                 (begin
                                   (g$top-level-context$13023$CQIRF
                                     g$top-level-context$13027$CQIRF)
                                   (set! g$top-level-context$13027$CQIRF
                                     g$t$13032$CQIRF))))
                              (g$top-level-context$13023$CQIRF))
                             ((case-lambda
                                ((g$t$13033$CQIRF)
                                 (begin
                                   (g$inv-collector$13024$CQIRF
                                     g$inv-collector$13028$CQIRF)
                                   (set! g$inv-collector$13028$CQIRF
                                     g$t$13033$CQIRF))))
                              (g$inv-collector$13024$CQIRF))
                             ((case-lambda
                                ((g$t$13034$CQIRF)
                                 (begin
                                   (g$vis-collector$13025$CQIRF
                                     g$vis-collector$13029$CQIRF)
                                   (set! g$vis-collector$13029$CQIRF
                                     g$t$13034$CQIRF))))
                              (g$vis-collector$13025$CQIRF))
                             ((case-lambda
                                ((g$t$13035$CQIRF)
                                 (begin
                                   (g$imp-collector$13026$CQIRF
                                     g$imp-collector$13030$CQIRF)
                                   (set! g$imp-collector$13030$CQIRF
                                     g$t$13035$CQIRF))))
                              (g$imp-collector$13026$CQIRF))))))))
                    g$top-level-context$10036$CQIRF
                    g$inv-collector$9964$CQIRF
                    g$vis-collector$9965$CQIRF
                    g$imp-collector$9966$CQIRF
                    '#f
                    g$rtc$13012$CQIRF
                    g$vtc$13013$CQIRF
                    g$itc$13011$CQIRF))))
               (g$make-stx$9520$CQIRF
                 g$x$13007$CQIRF
                 g$top-mark*$9480$CQIRF
                 (list g$rib$13009$CQIRF)
                 '())
               (g$env-itc$9982$CQIRF g$env$13008$CQIRF)
               (g$make-collector$9963$CQIRF)
               (g$make-collector$9963$CQIRF))))
           (g$make-top-rib$9962$CQIRF
             (g$env-names$9980$CQIRF g$env$13008$CQIRF)
             (g$env-labels$9981$CQIRF g$env$13008$CQIRF)))
          (if (g$interaction-env?$9992$CQIRF g$env$13008$CQIRF)
            ((case-lambda
               ((g$rib$13036$CQIRF g$r$13037$CQIRF g$rtc$13038$CQIRF)
                ((case-lambda
                   ((g$x$13039$CQIRF)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$13050$CQIRF
                               g$inv-collector$13051$CQIRF
                               g$vis-collector$13052$CQIRF
                               g$imp-collector$13053$CQIRF
                               g$top-level-context$13054$CQIRF
                               g$inv-collector$13055$CQIRF
                               g$vis-collector$13056$CQIRF
                               g$imp-collector$13057$CQIRF)
                             ((case-lambda
                                ((g$swap$13058$CQIRF)
                                 (dynamic-wind
                                   g$swap$13058$CQIRF
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$9968$CQIRF
                                        g$x$13039$CQIRF
                                        g$rib$13036$CQIRF
                                        g$r$13037$CQIRF)))
                                   g$swap$13058$CQIRF)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$13059$CQIRF)
                                       (begin
                                         (g$top-level-context$13050$CQIRF
                                           g$top-level-context$13054$CQIRF)
                                         (set! g$top-level-context$13054$CQIRF
                                           g$t$13059$CQIRF))))
                                    (g$top-level-context$13050$CQIRF))
                                   ((case-lambda
                                      ((g$t$13060$CQIRF)
                                       (begin
                                         (g$inv-collector$13051$CQIRF
                                           g$inv-collector$13055$CQIRF)
                                         (set! g$inv-collector$13055$CQIRF
                                           g$t$13060$CQIRF))))
                                    (g$inv-collector$13051$CQIRF))
                                   ((case-lambda
                                      ((g$t$13061$CQIRF)
                                       (begin
                                         (g$vis-collector$13052$CQIRF
                                           g$vis-collector$13056$CQIRF)
                                         (set! g$vis-collector$13056$CQIRF
                                           g$t$13061$CQIRF))))
                                    (g$vis-collector$13052$CQIRF))
                                   ((case-lambda
                                      ((g$t$13062$CQIRF)
                                       (begin
                                         (g$imp-collector$13053$CQIRF
                                           g$imp-collector$13057$CQIRF)
                                         (set! g$imp-collector$13057$CQIRF
                                           g$t$13062$CQIRF))))
                                    (g$imp-collector$13053$CQIRF))))))))
                          g$top-level-context$10036$CQIRF
                          g$inv-collector$9964$CQIRF
                          g$vis-collector$9965$CQIRF
                          g$imp-collector$9966$CQIRF
                          g$env$13008$CQIRF
                          g$rtc$13038$CQIRF
                          (g$make-collector$9963$CQIRF)
                          (g$make-collector$9963$CQIRF))))
                      (case-lambda
                        ((g$e$13063$CQIRF g$r^$13064$CQIRF)
                         ((case-lambda
                            ((g$r^$13065$CQIRF g$e$13066$CQIRF)
                             (begin
                               (g$set-interaction-env-r!$9998$CQIRF
                                 g$env$13008$CQIRF
                                 g$r^$13065$CQIRF)
                               (values g$e$13066$CQIRF (g$rtc$13038$CQIRF)))))
                          g$r^$13064$CQIRF
                          g$e$13063$CQIRF))))))
                 (g$make-stx$9520$CQIRF
                   g$x$13007$CQIRF
                   g$top-mark*$9480$CQIRF
                   (list g$rib$13036$CQIRF)
                   '()))))
             (g$interaction-env-rib$9994$CQIRF g$env$13008$CQIRF)
             (g$interaction-env-r$9995$CQIRF g$env$13008$CQIRF)
             (g$make-collector$9963$CQIRF))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$13008$CQIRF))))))
   (g$eval$10010$CQIRF
     g$eval$13545$CQIRF
     (case-lambda
       ((g$x$13067$CQIRF g$env$13068$CQIRF)
        (begin
          (if (not (g$environment?$10004$CQIRF g$env$13068$CQIRF))
            (error 'eval '"not an environment" g$env$13068$CQIRF)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$10009$CQIRF g$x$13067$CQIRF g$env$13068$CQIRF)))
            (case-lambda
              ((g$x$13071$CQIRF g$invoke-req*$13072$CQIRF)
               ((case-lambda
                  ((g$invoke-req*$13073$CQIRF g$x$13074$CQIRF)
                   (begin
                     (g$for-each$5947$CQIRF
                       g$invoke-library$9286$CQIRF
                       g$invoke-req*$13073$CQIRF)
                     (eval-core
                       (g$expanded->core$9019$CQIRF g$x$13074$CQIRF)))))
                g$invoke-req*$13072$CQIRF
                g$x$13071$CQIRF))))))))
   (g$expand->core$10011$CQIRF
     g$expand->core$13546$CQIRF
     (case-lambda
       ((g$x$13075$CQIRF g$env$13076$CQIRF)
        (begin
          (if (not (g$environment?$10004$CQIRF g$env$13076$CQIRF))
            (error 'eval '"not an environment" g$env$13076$CQIRF)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$10009$CQIRF g$x$13075$CQIRF g$env$13076$CQIRF)))
            (case-lambda
              ((g$x$13079$CQIRF g$invoke-req*$13080$CQIRF)
               ((case-lambda
                  ((g$invoke-req*$13081$CQIRF g$x$13082$CQIRF)
                   (begin
                     (g$for-each$5947$CQIRF
                       g$invoke-library$9286$CQIRF
                       g$invoke-req*$13081$CQIRF)
                     (g$expanded->core$9019$CQIRF g$x$13082$CQIRF))))
                g$invoke-req*$13080$CQIRF
                g$x$13079$CQIRF))))))))
   (g$library-expander$10012$CQIRF
     g$library-expander$13547$CQIRF
     (case-lambda
       ((g$x$13083$CQIRF g$filename$13084$CQIRF g$verify-name$13085$CQIRF)
        (letrec* ((g$build-visit-code$13086$CQIRF
                    (case-lambda
                      ((g$macro*$13129$CQIRF)
                       (if (null? g$macro*$13129$CQIRF)
                         (g$build-void$9473$CQIRF)
                         (g$build-sequence$9472$CQIRF
                           '#f
                           (g$map$5946$CQIRF
                             (case-lambda
                               ((g$x$13130$CQIRF)
                                ((case-lambda
                                   ((g$loc$13131$CQIRF g$src$13132$CQIRF)
                                    (list
                                      'set!
                                      g$loc$13131$CQIRF
                                      g$src$13132$CQIRF)))
                                 (car g$x$13130$CQIRF)
                                 (g$cddr$6628$CQIRF g$x$13130$CQIRF))))
                             g$macro*$13129$CQIRF))))))
                  (g$visit!$13087$CQIRF
                    (case-lambda
                      ((g$macro*$13125$CQIRF)
                       (g$for-each$5947$CQIRF
                         (case-lambda
                           ((g$x$13126$CQIRF)
                            ((case-lambda
                               ((g$loc$13127$CQIRF g$proc$13128$CQIRF)
                                (set-symbol-value!
                                  g$loc$13127$CQIRF
                                  g$proc$13128$CQIRF)))
                             (car g$x$13126$CQIRF)
                             (g$cadr$6626$CQIRF g$x$13126$CQIRF))))
                         g$macro*$13125$CQIRF)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$9970$CQIRF
                 g$x$13083$CQIRF
                 g$verify-name$13085$CQIRF)))
            (case-lambda
              ((g$name$13097$CQIRF
                 g$ver$13098$CQIRF
                 g$imp*$13099$CQIRF
                 g$inv*$13100$CQIRF
                 g$vis*$13101$CQIRF
                 g$invoke-code$13102$CQIRF
                 g$macro*$13103$CQIRF
                 g$export-subst$13104$CQIRF
                 g$export-env$13105$CQIRF)
               ((case-lambda
                  ((g$export-env$13106$CQIRF
                     g$export-subst$13107$CQIRF
                     g$macro*$13108$CQIRF
                     g$invoke-code$13109$CQIRF
                     g$vis*$13110$CQIRF
                     g$inv*$13111$CQIRF
                     g$imp*$13112$CQIRF
                     g$ver$13113$CQIRF
                     g$name$13114$CQIRF)
                   ((case-lambda
                      ((g$id$13115$CQIRF
                         g$name$13116$CQIRF
                         g$ver$13117$CQIRF
                         g$imp*$13118$CQIRF
                         g$vis*$13119$CQIRF
                         g$inv*$13120$CQIRF
                         g$visit-proc$13121$CQIRF
                         g$invoke-proc$13122$CQIRF
                         g$visit-code$13123$CQIRF
                         g$invoke-code$13124$CQIRF)
                       (begin
                         (g$install-library$9284$CQIRF
                           g$id$13115$CQIRF
                           g$name$13116$CQIRF
                           g$ver$13117$CQIRF
                           g$imp*$13118$CQIRF
                           g$vis*$13119$CQIRF
                           g$inv*$13120$CQIRF
                           g$export-subst$13107$CQIRF
                           g$export-env$13106$CQIRF
                           g$visit-proc$13121$CQIRF
                           g$invoke-proc$13122$CQIRF
                           g$visit-code$13123$CQIRF
                           g$invoke-code$13124$CQIRF
                           '#t
                           g$filename$13084$CQIRF)
                         (values
                           g$id$13115$CQIRF
                           g$name$13116$CQIRF
                           g$ver$13117$CQIRF
                           g$imp*$13118$CQIRF
                           g$vis*$13119$CQIRF
                           g$inv*$13120$CQIRF
                           g$invoke-code$13124$CQIRF
                           g$visit-code$13123$CQIRF
                           g$export-subst$13107$CQIRF
                           g$export-env$13106$CQIRF))))
                    (gensym)
                    g$name$13114$CQIRF
                    g$ver$13113$CQIRF
                    (g$map$5946$CQIRF
                      g$library-spec$9290$CQIRF
                      g$imp*$13112$CQIRF)
                    (g$map$5946$CQIRF
                      g$library-spec$9290$CQIRF
                      g$vis*$13110$CQIRF)
                    (g$map$5946$CQIRF
                      g$library-spec$9290$CQIRF
                      g$inv*$13111$CQIRF)
                    (case-lambda
                      (() (g$visit!$13087$CQIRF g$macro*$13108$CQIRF)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$9019$CQIRF
                           g$invoke-code$13109$CQIRF))))
                    (g$build-visit-code$13086$CQIRF g$macro*$13108$CQIRF)
                    g$invoke-code$13109$CQIRF)))
                g$export-env$13105$CQIRF
                g$export-subst$13104$CQIRF
                g$macro*$13103$CQIRF
                g$invoke-code$13102$CQIRF
                g$vis*$13101$CQIRF
                g$inv*$13100$CQIRF
                g$imp*$13099$CQIRF
                g$ver$13098$CQIRF
                g$name$13097$CQIRF))))))
       ((g$x$13133$CQIRF g$filename$13134$CQIRF)
        (g$library-expander$10012$CQIRF
          g$x$13133$CQIRF
          g$filename$13134$CQIRF
          (case-lambda ((g$x$13135$CQIRF) (values)))))
       ((g$x$13136$CQIRF)
        (g$library-expander$10012$CQIRF
          g$x$13136$CQIRF
          '#f
          (case-lambda ((g$x$13137$CQIRF) (values)))))))
   (g$boot-library-expand$10013$CQIRF
     g$boot-library-expand$13548$CQIRF
     (case-lambda
       ((g$x$13138$CQIRF)
        (call-with-values
          (case-lambda (() (g$library-expander$10012$CQIRF g$x$13138$CQIRF)))
          (case-lambda
            ((g$id$13149$CQIRF
               g$name$13150$CQIRF
               g$ver$13151$CQIRF
               g$imp*$13152$CQIRF
               g$vis*$13153$CQIRF
               g$inv*$13154$CQIRF
               g$invoke-code$13155$CQIRF
               g$visit-code$13156$CQIRF
               g$export-subst$13157$CQIRF
               g$export-env$13158$CQIRF)
             ((case-lambda
                ((g$export-env$13159$CQIRF
                   g$export-subst$13160$CQIRF
                   g$visit-code$13161$CQIRF
                   g$invoke-code$13162$CQIRF
                   g$inv*$13163$CQIRF
                   g$vis*$13164$CQIRF
                   g$imp*$13165$CQIRF
                   g$ver$13166$CQIRF
                   g$name$13167$CQIRF
                   g$id$13168$CQIRF)
                 (values
                   g$name$13167$CQIRF
                   g$invoke-code$13162$CQIRF
                   g$export-subst$13160$CQIRF
                   g$export-env$13159$CQIRF)))
              g$export-env$13158$CQIRF
              g$export-subst$13157$CQIRF
              g$visit-code$13156$CQIRF
              g$invoke-code$13155$CQIRF
              g$inv*$13154$CQIRF
              g$vis*$13153$CQIRF
              g$imp*$13152$CQIRF
              g$ver$13151$CQIRF
              g$name$13150$CQIRF
              g$id$13149$CQIRF)))))))
   (g$rev-map-append$10014$CQIRF
     g$rev-map-append$13549$CQIRF
     (case-lambda
       ((g$f$13169$CQIRF g$ls$13170$CQIRF g$ac$13171$CQIRF)
        (if (null? g$ls$13170$CQIRF)
          g$ac$13171$CQIRF
          (g$rev-map-append$10014$CQIRF
            g$f$13169$CQIRF
            (cdr g$ls$13170$CQIRF)
            (cons
              (g$f$13169$CQIRF (car g$ls$13170$CQIRF))
              g$ac$13171$CQIRF))))))
   (g$build-exports$10015$CQIRF
     g$build-exports$13550$CQIRF
     (case-lambda
       ((g$lex*+loc*$13172$CQIRF g$init*$13173$CQIRF)
        (g$build-sequence$9472$CQIRF
          '#f
          (cons
            (g$build-void$9473$CQIRF)
            (g$rev-map-append$10014$CQIRF
              (case-lambda
                ((g$x$13174$CQIRF)
                 (list 'set! (cdr g$x$13174$CQIRF) (car g$x$13174$CQIRF))))
              g$lex*+loc*$13172$CQIRF
              g$init*$13173$CQIRF))))))
   (g$make-export-subst$10016$CQIRF
     g$make-export-subst$13551$CQIRF
     (case-lambda
       ((g$name*$13175$CQIRF g$id*$13176$CQIRF)
        (g$map$5946$CQIRF
          (case-lambda
            ((g$name$13177$CQIRF g$id$13178$CQIRF)
             ((case-lambda
                ((g$label$13179$CQIRF)
                 (begin
                   (if (not g$label$13179$CQIRF)
                     (g$syntax-violation$10028$CQIRF
                       '#f
                       '"cannot export unbound identifier"
                       g$id$13178$CQIRF)
                     (void))
                   (cons g$name$13177$CQIRF g$label$13179$CQIRF))))
              (g$id->label$9560$CQIRF g$id$13178$CQIRF))))
          g$name*$13175$CQIRF
          g$id*$13176$CQIRF))))
   (g$make-export-env/macros$10017$CQIRF
     g$make-export-env/macros$13552$CQIRF
     (case-lambda
       ((g$lex*$13180$CQIRF g$loc*$13181$CQIRF g$r$13182$CQIRF)
        (letrec* ((g$lookup$13183$CQIRF
                    (case-lambda
                      ((g$x$13199$CQIRF)
                       ((letrec ((g$f$13200$CQIRF
                                   (case-lambda
                                     ((g$x$13201$CQIRF
                                        g$lex*$13202$CQIRF
                                        g$loc*$13203$CQIRF)
                                      (if (pair? g$lex*$13202$CQIRF)
                                        (if (eq? g$x$13201$CQIRF
                                                 (car g$lex*$13202$CQIRF))
                                          (car g$loc*$13203$CQIRF)
                                          (g$f$13200$CQIRF
                                            g$x$13201$CQIRF
                                            (cdr g$lex*$13202$CQIRF)
                                            (cdr g$loc*$13203$CQIRF)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$13200$CQIRF)
                        g$x$13199$CQIRF
                        g$lex*$13180$CQIRF
                        g$loc*$13181$CQIRF)))))
          ((letrec ((g$f$13184$CQIRF
                      (case-lambda
                        ((g$r$13185$CQIRF
                           g$env$13186$CQIRF
                           g$global*$13187$CQIRF
                           g$macro*$13188$CQIRF)
                         (if (null? g$r$13185$CQIRF)
                           (values
                             g$env$13186$CQIRF
                             g$global*$13187$CQIRF
                             g$macro*$13188$CQIRF)
                           ((case-lambda
                              ((g$x$13189$CQIRF)
                               ((case-lambda
                                  ((g$label$13190$CQIRF g$b$13191$CQIRF)
                                   ((case-lambda
                                      ((g$t$13192$CQIRF)
                                       (if (eqv? g$t$13192$CQIRF 'lexical)
                                         ((case-lambda
                                            ((g$v$13193$CQIRF)
                                             ((case-lambda
                                                ((g$loc$13194$CQIRF
                                                   g$type$13195$CQIRF)
                                                 (g$f$13184$CQIRF
                                                   (cdr g$r$13185$CQIRF)
                                                   (cons
                                                     (g$cons*$5948$CQIRF
                                                       g$label$13190$CQIRF
                                                       g$type$13195$CQIRF
                                                       g$loc$13194$CQIRF)
                                                     g$env$13186$CQIRF)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$9854$CQIRF
                                                         g$v$13193$CQIRF)
                                                       g$loc$13194$CQIRF)
                                                     g$global*$13187$CQIRF)
                                                   g$macro*$13188$CQIRF)))
                                              (g$lookup$13183$CQIRF
                                                (g$lexical-var$9854$CQIRF
                                                  g$v$13193$CQIRF))
                                              (if (g$lexical-mutable?$9855$CQIRF
                                                    g$v$13193$CQIRF)
                                                'mutable
                                                'global))))
                                          (g$binding-value$9565$CQIRF
                                            g$b$13191$CQIRF))
                                         (if (eqv? g$t$13192$CQIRF 'local-macro)
                                           ((case-lambda
                                              ((g$loc$13196$CQIRF)
                                               (g$f$13184$CQIRF
                                                 (cdr g$r$13185$CQIRF)
                                                 (cons
                                                   (g$cons*$5948$CQIRF
                                                     g$label$13190$CQIRF
                                                     'global-macro
                                                     g$loc$13196$CQIRF)
                                                   g$env$13186$CQIRF)
                                                 g$global*$13187$CQIRF
                                                 (cons
                                                   (cons
                                                     g$loc$13196$CQIRF
                                                     (g$binding-value$9565$CQIRF
                                                       g$b$13191$CQIRF))
                                                   g$macro*$13188$CQIRF))))
                                            (gensym))
                                           (if (eqv?
                                                 g$t$13192$CQIRF
                                                 'local-macro!)
                                             ((case-lambda
                                                ((g$loc$13197$CQIRF)
                                                 (g$f$13184$CQIRF
                                                   (cdr g$r$13185$CQIRF)
                                                   (cons
                                                     (g$cons*$5948$CQIRF
                                                       g$label$13190$CQIRF
                                                       'global-macro!
                                                       g$loc$13197$CQIRF)
                                                     g$env$13186$CQIRF)
                                                   g$global*$13187$CQIRF
                                                   (cons
                                                     (cons
                                                       g$loc$13197$CQIRF
                                                       (g$binding-value$9565$CQIRF
                                                         g$b$13191$CQIRF))
                                                     g$macro*$13188$CQIRF))))
                                              (gensym))
                                             (if (eqv?
                                                   g$t$13192$CQIRF
                                                   'local-ctv)
                                               ((case-lambda
                                                  ((g$loc$13198$CQIRF)
                                                   (g$f$13184$CQIRF
                                                     (cdr g$r$13185$CQIRF)
                                                     (cons
                                                       (g$cons*$5948$CQIRF
                                                         g$label$13190$CQIRF
                                                         'global-ctv
                                                         g$loc$13198$CQIRF)
                                                       g$env$13186$CQIRF)
                                                     g$global*$13187$CQIRF
                                                     (cons
                                                       (cons
                                                         g$loc$13198$CQIRF
                                                         (g$binding-value$9565$CQIRF
                                                           g$b$13191$CQIRF))
                                                       g$macro*$13188$CQIRF))))
                                                (gensym))
                                               (if (g$memv$5939$CQIRF
                                                     g$t$13192$CQIRF
                                                     '($rtd $module))
                                                 (g$f$13184$CQIRF
                                                   (cdr g$r$13185$CQIRF)
                                                   (cons
                                                     g$x$13189$CQIRF
                                                     g$env$13186$CQIRF)
                                                   g$global*$13187$CQIRF
                                                   g$macro*$13188$CQIRF)
                                                 (assertion-violation
                                                   'expander
                                                   '"BUG: do not know how to export"
                                                   (g$binding-type$9564$CQIRF
                                                     g$b$13191$CQIRF)
                                                   (g$binding-value$9565$CQIRF
                                                     g$b$13191$CQIRF)))))))))
                                    (g$binding-type$9564$CQIRF
                                      g$b$13191$CQIRF))))
                                (car g$x$13189$CQIRF)
                                (cdr g$x$13189$CQIRF))))
                            (car g$r$13185$CQIRF)))))))
             g$f$13184$CQIRF)
           g$r$13182$CQIRF
           '()
           '()
           '())))))
   (g$generate-temporaries$10018$CQIRF
     g$generate-temporaries$13553$CQIRF
     (case-lambda
       ((g$ls$13204$CQIRF)
        ((case-lambda
           ((g$t$13205$CQIRF)
            ((case-lambda
               ((g$ls/false$13206$CQIRF)
                (if g$ls/false$13206$CQIRF
                  (apply
                    (case-lambda
                      ((g$ls$13207$CQIRF)
                       (g$map$5946$CQIRF
                         (case-lambda
                           ((g$x$13208$CQIRF)
                            (g$make-stx$9520$CQIRF
                              ((case-lambda
                                 ((g$x$13209$CQIRF)
                                  (if ((case-lambda
                                         ((g$t$13210$CQIRF)
                                          (if g$t$13210$CQIRF
                                            g$t$13210$CQIRF
                                            (begin
                                              '#f
                                              (string? g$x$13209$CQIRF)))))
                                       (g$symbol?$6617$CQIRF g$x$13209$CQIRF))
                                    (gensym g$x$13209$CQIRF)
                                    (gensym 't))))
                               (g$syntax->datum$10031$CQIRF g$x$13208$CQIRF))
                              g$top-mark*$9480$CQIRF
                              '()
                              '())))
                         g$ls$13207$CQIRF)))
                    g$ls/false$13206$CQIRF)
                  ((case-lambda
                     ((g$t$13211$CQIRF)
                      ((case-lambda
                         ((g$ls/false$13212$CQIRF)
                          (if g$ls/false$13212$CQIRF
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$13212$CQIRF)
                            (g$syntax-violation$10028$CQIRF
                              '#f
                              '"invalid syntax"
                              g$t$13211$CQIRF))))
                       (g$syntax-dispatch$9910$CQIRF g$t$13211$CQIRF '_))))
                   g$t$13205$CQIRF))))
             (g$syntax-dispatch$9910$CQIRF g$t$13205$CQIRF 'each-any))))
         g$ls$13204$CQIRF))))
   (g$free-identifier=?$10019$CQIRF
     g$free-identifier=?$13554$CQIRF
     (case-lambda
       ((g$x$13213$CQIRF g$y$13214$CQIRF)
        (if (g$id?$9547$CQIRF g$x$13213$CQIRF)
          (if (g$id?$9547$CQIRF g$y$13214$CQIRF)
            (g$free-id=?$9551$CQIRF g$x$13213$CQIRF g$y$13214$CQIRF)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$13214$CQIRF))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$13213$CQIRF)))))
   (g$bound-identifier=?$10020$CQIRF
     g$bound-identifier=?$13555$CQIRF
     (case-lambda
       ((g$x$13215$CQIRF g$y$13216$CQIRF)
        (if (g$id?$9547$CQIRF g$x$13215$CQIRF)
          (if (g$id?$9547$CQIRF g$y$13216$CQIRF)
            (g$bound-id=?$9550$CQIRF g$x$13215$CQIRF g$y$13216$CQIRF)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$13216$CQIRF))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$13215$CQIRF)))))
   (g$make-source-condition$10021$CQIRF
     g$make-source-condition$13556$CQIRF
     (case-lambda
       ((g$x$13217$CQIRF)
        (letrec* ((g$10981$13218$CQIRF
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$7260$CQIRF
                      'g$10984$CQIRF
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$10983$13219$CQIRF '#f)
                  (g$10982$13220$CQIRF
                    (make-record-constructor-descriptor
                      g$10981$13218$CQIRF
                      g$&condition-rcd$7261$CQIRF
                      g$10983$13219$CQIRF))
                  (g$10980$13223$CQIRF (record-predicate g$10981$13218$CQIRF))
                  (g$make-source-condition$13224$CQIRF
                    (record-constructor g$10982$13220$CQIRF))
                  (g$10978$13225$CQIRF (record-accessor g$10981$13218$CQIRF '0))
                  (g$10979$13226$CQIRF (record-accessor g$10981$13218$CQIRF '1))
                  (g$source-condition?$13227$CQIRF
                    (condition-predicate g$10981$13218$CQIRF))
                  (g$source-filename$13228$CQIRF
                    (condition-accessor
                      g$10981$13218$CQIRF
                      g$10978$13225$CQIRF))
                  (g$source-character$13229$CQIRF
                    (condition-accessor
                      g$10981$13218$CQIRF
                      g$10979$13226$CQIRF)))
          (if (pair? g$x$13217$CQIRF)
            (g$make-source-condition$13224$CQIRF
              (car g$x$13217$CQIRF)
              (cdr g$x$13217$CQIRF))
            (condition))))))
   (g$extract-position-condition$10022$CQIRF
     g$extract-position-condition$13557$CQIRF
     (case-lambda
       ((g$x$13230$CQIRF)
        (g$make-source-condition$10021$CQIRF
          (g$expression-position$10023$CQIRF g$x$13230$CQIRF)))))
   (g$expression-position$10023$CQIRF
     g$expression-position$13558$CQIRF
     (case-lambda
       ((g$x$13231$CQIRF)
        (if (g$stx?$9519$CQIRF g$x$13231$CQIRF)
          (begin
            '#f
            ((case-lambda
               ((g$x$13232$CQIRF)
                (if (annotation? g$x$13232$CQIRF)
                  (begin '#f (annotation-source g$x$13232$CQIRF))
                  '#f)))
             (g$stx-expr$9521$CQIRF g$x$13231$CQIRF)))
          '#f))))
   (g$assertion-error$10024$CQIRF
     g$assertion-error$13559$CQIRF
     (case-lambda
       ((g$expr$13233$CQIRF g$pos$13234$CQIRF)
        (raise
          (condition
            (g$make-assertion-violation$7308$CQIRF)
            (g$make-who-condition$7326$CQIRF 'assert)
            (g$make-message-condition$7266$CQIRF '"assertion failed")
            (g$make-irritants-condition$7316$CQIRF (list g$expr$13233$CQIRF))
            (g$make-source-condition$10021$CQIRF g$pos$13234$CQIRF))))))
   (g$syntax-error$10025$CQIRF
     g$syntax-error$13560$CQIRF
     (case-lambda
       ((g$x$13235$CQIRF . g$args$13236$CQIRF)
        (begin
          (if (not (g$for-all$5944$CQIRF string? g$args$13236$CQIRF))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$13236$CQIRF)
            (void))
          (raise
            (condition
              (g$make-message-condition$7266$CQIRF
                (if (null? g$args$13236$CQIRF)
                  '"invalid syntax"
                  (apply string-append g$args$13236$CQIRF)))
              (g$make-syntax-violation$7360$CQIRF
                (g$syntax->datum$10031$CQIRF g$x$13235$CQIRF)
                '#f)
              (g$extract-position-condition$10022$CQIRF g$x$13235$CQIRF)
              (g$extract-trace$10026$CQIRF g$x$13235$CQIRF)))))))
   (g$extract-trace$10026$CQIRF
     g$extract-trace$13561$CQIRF
     (case-lambda
       ((g$x$13237$CQIRF)
        (letrec* ((g$11006$13238$CQIRF
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$7260$CQIRF
                      'g$11009$CQIRF
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11008$13239$CQIRF '#f)
                  (g$11007$13240$CQIRF
                    (make-record-constructor-descriptor
                      g$11006$13238$CQIRF
                      g$&condition-rcd$7261$CQIRF
                      g$11008$13239$CQIRF))
                  (g$11005$13243$CQIRF (record-predicate g$11006$13238$CQIRF))
                  (g$make-trace$13244$CQIRF
                    (record-constructor g$11007$13240$CQIRF))
                  (g$11004$13245$CQIRF (record-accessor g$11006$13238$CQIRF '0))
                  (g$trace?$13246$CQIRF
                    (condition-predicate g$11006$13238$CQIRF))
                  (g$trace-form$13247$CQIRF
                    (condition-accessor
                      g$11006$13238$CQIRF
                      g$11004$13245$CQIRF)))
          ((letrec ((g$f$13248$CQIRF
                      (case-lambda
                        ((g$x$13249$CQIRF)
                         (if (g$stx?$9519$CQIRF g$x$13249$CQIRF)
                           (apply
                             condition
                             (g$make-trace$13244$CQIRF g$x$13249$CQIRF)
                             (g$map$5946$CQIRF
                               g$f$13248$CQIRF
                               (g$stx-ae*$9524$CQIRF g$x$13249$CQIRF)))
                           (if (annotation? g$x$13249$CQIRF)
                             (g$make-trace$13244$CQIRF
                               (g$make-stx$9520$CQIRF
                                 g$x$13249$CQIRF
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$13248$CQIRF)
           g$x$13237$CQIRF)))))
   (g$syntax-violation*$10027$CQIRF
     g$syntax-violation*$13562$CQIRF
     (case-lambda
       ((g$who$13250$CQIRF
          g$msg$13251$CQIRF
          g$form$13252$CQIRF
          g$condition-object$13253$CQIRF)
        (begin
          (if (not (string? g$msg$13251$CQIRF))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$13251$CQIRF)
            (void))
          ((case-lambda
             ((g$who$13254$CQIRF)
              (raise
                (condition
                  (if g$who$13254$CQIRF
                    (g$make-who-condition$7326$CQIRF g$who$13254$CQIRF)
                    (condition))
                  (g$make-message-condition$7266$CQIRF g$msg$13251$CQIRF)
                  g$condition-object$13253$CQIRF
                  (g$extract-position-condition$10022$CQIRF g$form$13252$CQIRF)
                  (g$extract-trace$10026$CQIRF g$form$13252$CQIRF)))))
           (if ((case-lambda
                  ((g$t$13255$CQIRF)
                   (if g$t$13255$CQIRF
                     g$t$13255$CQIRF
                     (begin '#f (g$symbol?$6617$CQIRF g$who$13250$CQIRF)))))
                (string? g$who$13250$CQIRF))
             g$who$13250$CQIRF
             (if (not g$who$13250$CQIRF)
               ((case-lambda
                  ((g$t$13256$CQIRF)
                   ((case-lambda
                      ((g$ls/false$13257$CQIRF)
                       (if (if g$ls/false$13257$CQIRF
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$13258$CQIRF)
                                    (g$id?$9547$CQIRF g$id$13258$CQIRF)))
                                 g$ls/false$13257$CQIRF))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$13259$CQIRF)
                              (g$syntax->datum$10031$CQIRF g$id$13259$CQIRF)))
                           g$ls/false$13257$CQIRF)
                         ((case-lambda
                            ((g$t$13260$CQIRF)
                             ((case-lambda
                                ((g$ls/false$13261$CQIRF)
                                 (if (if g$ls/false$13261$CQIRF
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$13262$CQIRF
                                                g$rest$13263$CQIRF)
                                              (g$id?$9547$CQIRF
                                                g$id$13262$CQIRF)))
                                           g$ls/false$13261$CQIRF))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$13264$CQIRF g$rest$13265$CQIRF)
                                        (g$syntax->datum$10031$CQIRF
                                          g$id$13264$CQIRF)))
                                     g$ls/false$13261$CQIRF)
                                   ((case-lambda
                                      ((g$t$13266$CQIRF)
                                       ((case-lambda
                                          ((g$ls/false$13267$CQIRF)
                                           (if g$ls/false$13267$CQIRF
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$13267$CQIRF)
                                             (g$syntax-violation$10028$CQIRF
                                               '#f
                                               '"invalid syntax"
                                               g$t$13266$CQIRF))))
                                        (g$syntax-dispatch$9910$CQIRF
                                          g$t$13266$CQIRF
                                          '_))))
                                    g$t$13260$CQIRF))))
                              (g$syntax-dispatch$9910$CQIRF
                                g$t$13260$CQIRF
                                '(any . any)))))
                          g$t$13256$CQIRF))))
                    (g$syntax-dispatch$9910$CQIRF g$t$13256$CQIRF 'any))))
                g$form$13252$CQIRF)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$13250$CQIRF))))))))
   (g$syntax-violation$10028$CQIRF
     g$syntax-violation$13563$CQIRF
     (case-lambda
       ((g$who$13268$CQIRF g$msg$13269$CQIRF g$form$13270$CQIRF)
        (g$syntax-violation$10028$CQIRF
          g$who$13268$CQIRF
          g$msg$13269$CQIRF
          g$form$13270$CQIRF
          '#f))
       ((g$who$13271$CQIRF
          g$msg$13272$CQIRF
          g$form$13273$CQIRF
          g$subform$13274$CQIRF)
        (g$syntax-violation*$10027$CQIRF
          g$who$13271$CQIRF
          g$msg$13272$CQIRF
          g$form$13273$CQIRF
          (g$make-syntax-violation$7360$CQIRF
            (g$syntax->datum$10031$CQIRF g$form$13273$CQIRF)
            (g$syntax->datum$10031$CQIRF g$subform$13274$CQIRF))))))
   (g$identifier?$10029$CQIRF
     g$identifier?$13564$CQIRF
     (case-lambda ((g$x$13275$CQIRF) (g$id?$9547$CQIRF g$x$13275$CQIRF))))
   (g$datum->syntax$10030$CQIRF
     g$datum->syntax$13565$CQIRF
     (case-lambda
       ((g$id$13276$CQIRF g$datum$13277$CQIRF)
        (if (g$id?$9547$CQIRF g$id$13276$CQIRF)
          (g$datum->stx$9530$CQIRF g$id$13276$CQIRF g$datum$13277$CQIRF)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$13276$CQIRF)))))
   (g$syntax->datum$10031$CQIRF
     g$syntax->datum$13566$CQIRF
     (case-lambda
       ((g$x$13278$CQIRF) (g$stx->datum$9558$CQIRF g$x$13278$CQIRF))))
   (g$compile-r6rs-top-level$10032$CQIRF
     g$compile-r6rs-top-level$13567$CQIRF
     (case-lambda
       ((g$x*$13279$CQIRF)
        (call-with-values
          (case-lambda (() (g$top-level-expander$9972$CQIRF g$x*$13279$CQIRF)))
          (case-lambda
            ((g$lib*$13282$CQIRF g$invoke-code$13283$CQIRF)
             ((case-lambda
                ((g$invoke-code$13284$CQIRF g$lib*$13285$CQIRF)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$5947$CQIRF
                        g$invoke-library$9286$CQIRF
                        g$lib*$13285$CQIRF)
                      (eval-core
                        (g$expanded->core$9019$CQIRF
                          g$invoke-code$13284$CQIRF)))))))
              g$invoke-code$13283$CQIRF
              g$lib*$13282$CQIRF)))))))
   (g$pre-compile-r6rs-top-level$10033$CQIRF
     g$pre-compile-r6rs-top-level$13568$CQIRF
     (case-lambda
       ((g$x*$13286$CQIRF)
        (call-with-values
          (case-lambda (() (g$top-level-expander$9972$CQIRF g$x*$13286$CQIRF)))
          (case-lambda
            ((g$lib*$13289$CQIRF g$invoke-code$13290$CQIRF)
             ((case-lambda
                ((g$invoke-code$13291$CQIRF g$lib*$13292$CQIRF)
                 (begin
                   (g$for-each$5947$CQIRF
                     g$invoke-library$9286$CQIRF
                     g$lib*$13292$CQIRF)
                   (compile-core
                     (g$expanded->core$9019$CQIRF g$invoke-code$13291$CQIRF)))))
              g$invoke-code$13290$CQIRF
              g$lib*$13289$CQIRF)))))))
   (g$new-interaction-environment$10034$CQIRF
     g$new-interaction-environment$13569$CQIRF
     (case-lambda
       (()
        ((case-lambda
           ((g$lib$13293$CQIRF g$rib$13294$CQIRF)
            (begin
              ((case-lambda
                 ((g$subst$13295$CQIRF)
                  (begin
                    (g$set-rib-sym*!$9500$CQIRF
                      g$rib$13294$CQIRF
                      (g$map$5946$CQIRF car g$subst$13295$CQIRF))
                    (g$set-rib-mark**!$9501$CQIRF
                      g$rib$13294$CQIRF
                      (g$map$5946$CQIRF
                        (case-lambda ((g$x$13296$CQIRF) g$top-mark*$9480$CQIRF))
                        g$subst$13295$CQIRF))
                    (g$set-rib-label*!$9502$CQIRF
                      g$rib$13294$CQIRF
                      (g$map$5946$CQIRF cdr g$subst$13295$CQIRF)))))
               (g$library-subst$9243$CQIRF g$lib$13293$CQIRF))
              (g$make-interaction-env$9993$CQIRF g$rib$13294$CQIRF '() '()))))
         (g$find-library-by-name$9279$CQIRF '(ironscheme))
         (g$make-empty-rib$9505$CQIRF)))))
   (g$interaction-environment$10035$CQIRF
     g$interaction-environment$13570$CQIRF
     ((case-lambda
        ((g$e$13297$CQIRF)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$13298$CQIRF)
                (if g$t$13298$CQIRF
                  g$t$13298$CQIRF
                  (begin
                    '#f
                    (begin
                      (set! g$e$13297$CQIRF
                        (g$new-interaction-environment$10034$CQIRF))
                      g$e$13297$CQIRF)))))
             g$e$13297$CQIRF)))))
      '#f))
   (g$top-level-context$10036$CQIRF
     g$top-level-context$13571$CQIRF
     (g$make-parameter$8771$CQIRF '#f)))
  (g$current-library-expander$9276$CQIRF g$library-expander$10012$CQIRF))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$9016$CQIRF
      (case-lambda
        ((g$x$13647$CQIRF)
         ((case-lambda
            ((g$t$13648$CQIRF) (if g$t$13648$CQIRF (cdr g$t$13648$CQIRF) '#f)))
          (g$assq$5934$CQIRF
            g$x$13647$CQIRF
            '((ellipsis-map . g$ellipsis-map$13456$CQIRF)
              (&no-nans-rcd . g$&no-nans-rcd$7495$CQIRF)
              (&no-nans-rtd . g$&no-nans-rtd$7494$CQIRF)
              (&no-infinities-rcd . g$&no-infinities-rcd$7487$CQIRF)
              (&no-infinities-rtd . g$&no-infinities-rtd$7486$CQIRF)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$7479$CQIRF)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$7478$CQIRF)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$7469$CQIRF)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$7468$CQIRF)
              (&i/o-port-rcd . g$&i/o-port-rcd$7461$CQIRF)
              (&i/o-port-rtd . g$&i/o-port-rtd$7460$CQIRF)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$7451$CQIRF)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$7450$CQIRF)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$7443$CQIRF)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$7442$CQIRF)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$7435$CQIRF)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$7434$CQIRF)
              (&i/o-file-protection-rcd . g$&i/o-file-protection-rcd$7427$CQIRF)
              (&i/o-file-protection-rtd . g$&i/o-file-protection-rtd$7426$CQIRF)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$7419$CQIRF)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$7418$CQIRF)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$7409$CQIRF)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$7408$CQIRF)
              (&i/o-write-rcd . g$&i/o-write-rcd$7399$CQIRF)
              (&i/o-write-rtd . g$&i/o-write-rtd$7398$CQIRF)
              (&i/o-read-rcd . g$&i/o-read-rcd$7391$CQIRF)
              (&i/o-read-rtd . g$&i/o-read-rtd$7390$CQIRF)
              (&i/o-rcd . g$&i/o-rcd$7383$CQIRF)
              (&i/o-rtd . g$&i/o-rtd$7382$CQIRF)
              (&undefined-rcd . g$&undefined-rcd$7375$CQIRF)
              (&undefined-rtd . g$&undefined-rtd$7374$CQIRF)
              (&syntax-rcd . g$&syntax-rcd$7367$CQIRF)
              (&syntax-rtd . g$&syntax-rtd$7366$CQIRF)
              (&lexical-rcd . g$&lexical-rcd$7355$CQIRF)
              (&lexical-rtd . g$&lexical-rtd$7354$CQIRF)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$7347$CQIRF)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$7346$CQIRF)
              (&non-continuable-rcd . g$&non-continuable-rcd$7339$CQIRF)
              (&non-continuable-rtd . g$&non-continuable-rtd$7338$CQIRF)
              (&who-rcd . g$&who-rcd$7331$CQIRF)
              (&who-rtd . g$&who-rtd$7330$CQIRF)
              (&irritants-rcd . g$&irritants-rcd$7321$CQIRF)
              (&irritants-rtd . g$&irritants-rtd$7320$CQIRF)
              (&assertion-rcd . g$&assertion-rcd$7311$CQIRF)
              (&assertion-rtd . g$&assertion-rtd$7310$CQIRF)
              (&violation-rcd . g$&violation-rcd$7303$CQIRF)
              (&violation-rtd . g$&violation-rtd$7302$CQIRF)
              (&error-rcd . g$&error-rcd$7295$CQIRF)
              (&error-rtd . g$&error-rtd$7294$CQIRF)
              (&serious-rcd . g$&serious-rcd$7287$CQIRF)
              (&serious-rtd . g$&serious-rtd$7286$CQIRF)
              (&warning-rcd . g$&warning-rcd$7279$CQIRF)
              (&warning-rtd . g$&warning-rtd$7278$CQIRF)
              (&message-rcd . g$&message-rcd$7271$CQIRF)
              (&message-rtd . g$&message-rtd$7270$CQIRF)
              (&condition-rcd . g$&condition-rcd$7261$CQIRF)
              (&condition-rtd . g$&condition-rtd$7260$CQIRF)
              (make-list . g$make-list$5929$CQIRF)
              (last-pair . g$last-pair$5928$CQIRF)
              (ironscheme-build . g$ironscheme-build$13639$CQIRF)
              (syntax-error . g$syntax-error$13560$CQIRF)
              (syntax-dispatch . g$syntax-dispatch$13451$CQIRF)
              (compile-system-libraries
                .
                g$compile-system-libraries$13642$CQIRF)
              (compile->closure . g$compile->closure$13644$CQIRF)
              (compile . g$compile$13643$CQIRF)
              (load . g$load$13638$CQIRF)
              (interaction-environment . g$interaction-environment$13570$CQIRF)
              (string-normalize-nfkd . g$string-normalize-nfkd$7711$CQIRF)
              (string-normalize-nfkc . g$string-normalize-nfkc$7710$CQIRF)
              (string-normalize-nfd . g$string-normalize-nfd$7709$CQIRF)
              (string-normalize-nfc . g$string-normalize-nfc$7708$CQIRF)
              (string-ci>? . g$string-ci>?$7700$CQIRF)
              (string-ci>=? . g$string-ci>=?$7702$CQIRF)
              (string-ci=? . g$string-ci=?$7698$CQIRF)
              (string-ci<? . g$string-ci<?$7699$CQIRF)
              (string-ci<=? . g$string-ci<=?$7701$CQIRF)
              (char-ci>? . g$char-ci>?$7705$CQIRF)
              (char-ci>=? . g$char-ci>=?$7707$CQIRF)
              (char-ci=? . g$char-ci=?$7703$CQIRF)
              (char-ci<? . g$char-ci<?$7704$CQIRF)
              (char-ci<=? . g$char-ci<=?$7706$CQIRF)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$13389$CQIRF)
              (variable-transformer? . g$variable-transformer?$13388$CQIRF)
              (make-variable-transformer
                .
                g$make-variable-transformer$13386$CQIRF)
              (identifier? . g$identifier?$13564$CQIRF)
              (generate-temporaries . g$generate-temporaries$13553$CQIRF)
              (free-identifier=? . g$free-identifier=?$13554$CQIRF)
              (syntax->datum . g$syntax->datum$13566$CQIRF)
              (datum->syntax . g$datum->syntax$13565$CQIRF)
              (bound-identifier=? . g$bound-identifier=?$13555$CQIRF)
              (delete-file . g$delete-file$6735$CQIRF)
              (file-exists? . g$file-exists?$6734$CQIRF)
              (list-sort . g$list-sort$7559$CQIRF)
              (make-eqv-hashtable . g$make-eqv-hashtable$6717$CQIRF)
              (make-eq-hashtable . g$make-eq-hashtable$6716$CQIRF)
              (hashtable-update! . g$hashtable-update!$6723$CQIRF)
              (hashtable-size . g$hashtable-size$6718$CQIRF)
              (hashtable-set! . g$hashtable-set!$6720$CQIRF)
              (hashtable-ref . g$hashtable-ref$6719$CQIRF)
              (hashtable-delete! . g$hashtable-delete!$6721$CQIRF)
              (hashtable-contains? . g$hashtable-contains?$6722$CQIRF)
              (hashtable-clear! . g$hashtable-clear!$6724$CQIRF)
              (call-with-output-file . g$call-with-output-file$8113$CQIRF)
              (call-with-input-file . g$call-with-input-file$8112$CQIRF)
              (write-char . g$write-char$8109$CQIRF)
              (with-output-to-file . g$with-output-to-file$8111$CQIRF)
              (with-input-from-file . g$with-input-from-file$8110$CQIRF)
              (read-char . g$read-char$8108$CQIRF)
              (peek-char . g$peek-char$8107$CQIRF)
              (newline . g$newline$8114$CQIRF)
              (put-datum . g$put-datum$8047$CQIRF)
              (port? . g$port?$8052$CQIRF)
              (open-string-output-port . g$open-string-output-port$8051$CQIRF)
              (make-i/o-write-error . g$make-i/o-write-error$7396$CQIRF)
              (make-i/o-read-error . g$make-i/o-read-error$7388$CQIRF)
              (make-i/o-port-error . g$make-i/o-port-error$7456$CQIRF)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$7404$CQIRF)
              (make-i/o-filename-error . g$make-i/o-filename-error$7414$CQIRF)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$7424$CQIRF)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$7432$CQIRF)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$7448$CQIRF)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$7440$CQIRF)
              (make-i/o-error . g$make-i/o-error$7380$CQIRF)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$7474$CQIRF)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$7466$CQIRF)
              (i/o-write-error? . g$i/o-write-error?$7397$CQIRF)
              (i/o-read-error? . g$i/o-read-error?$7389$CQIRF)
              (i/o-port-error? . g$i/o-port-error?$7458$CQIRF)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$7406$CQIRF)
              (i/o-error-position . g$i/o-error-position$7407$CQIRF)
              (i/o-filename-error? . g$i/o-filename-error?$7416$CQIRF)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$7425$CQIRF)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$7433$CQIRF)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$7449$CQIRF)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$7441$CQIRF)
              (i/o-error? . g$i/o-error?$7381$CQIRF)
              (i/o-error-port . g$i/o-error-port$7459$CQIRF)
              (i/o-error-filename . g$i/o-error-filename$7417$CQIRF)
              (i/o-encoding-error? . g$i/o-encoding-error?$7476$CQIRF)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$7477$CQIRF)
              (i/o-decoding-error? . g$i/o-decoding-error?$7467$CQIRF)
              (get-datum . g$get-datum$8048$CQIRF)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$8053$CQIRF)
              (call-with-port . g$call-with-port$8054$CQIRF)
              (scheme-report-environment
                .
                g$scheme-report-environment$13543$CQIRF)
              (quotient . g$quotient$7526$CQIRF)
              (null-environment . g$null-environment$13542$CQIRF)
              (remainder . g$remainder$7527$CQIRF)
              (modulo . g$modulo$7528$CQIRF)
              (inexact->exact . g$inexact->exact$7523$CQIRF)
              (force . g$force$7530$CQIRF)
              (exact->inexact . g$exact->inexact$7524$CQIRF)
              (command-line . g$command-line$13634$CQIRF)
              (remove . g$remove$5951$CQIRF)
              (remv . g$remv$5952$CQIRF)
              (remp . g$remp$5932$CQIRF)
              (remq . g$remq$5953$CQIRF)
              (partition . g$partition$5931$CQIRF)
              (memv . g$memv$5939$CQIRF)
              (memq . g$memq$5938$CQIRF)
              (memp . g$memp$5941$CQIRF)
              (member . g$member$5940$CQIRF)
              (exists . g$exists$5945$CQIRF)
              (for-all . g$for-all$5944$CQIRF)
              (fold-right . g$fold-right$5950$CQIRF)
              (fold-left . g$fold-left$5949$CQIRF)
              (find . g$find$5930$CQIRF)
              (filter . g$filter$5933$CQIRF)
              (cons* . g$cons*$5948$CQIRF)
              (assv . g$assv$5935$CQIRF)
              (assq . g$assq$5934$CQIRF)
              (assp . g$assp$5937$CQIRF)
              (assoc . g$assoc$5936$CQIRF)
              (eval . g$eval$13545$CQIRF)
              (environment . g$environment$13541$CQIRF)
              (make-enumeration . g$make-enumeration$8250$CQIRF)
              (enum-set=? . g$enum-set=?$8257$CQIRF)
              (enum-set-universe . g$enum-set-universe$8251$CQIRF)
              (enum-set-union . g$enum-set-union$8258$CQIRF)
              (enum-set-subset? . g$enum-set-subset?$8256$CQIRF)
              (enum-set-projection . g$enum-set-projection$8262$CQIRF)
              (enum-set-member? . g$enum-set-member?$8255$CQIRF)
              (enum-set-intersection . g$enum-set-intersection$8259$CQIRF)
              (enum-set-indexer . g$enum-set-indexer$8252$CQIRF)
              (enum-set-difference . g$enum-set-difference$8260$CQIRF)
              (enum-set-constructor . g$enum-set-constructor$8253$CQIRF)
              (enum-set-complement . g$enum-set-complement$8261$CQIRF)
              (enum-set->list . g$enum-set->list$8254$CQIRF)
              (who-condition? . g$who-condition?$7328$CQIRF)
              (warning? . g$warning?$7277$CQIRF)
              (violation? . g$violation?$7301$CQIRF)
              (undefined-violation? . g$undefined-violation?$7373$CQIRF)
              (syntax-violation? . g$syntax-violation?$7363$CQIRF)
              (syntax-violation-subform . g$syntax-violation-subform$7365$CQIRF)
              (syntax-violation-form . g$syntax-violation-form$7364$CQIRF)
              (syntax-violation . g$syntax-violation$13563$CQIRF)
              (serious-condition? . g$serious-condition?$7285$CQIRF)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$7337$CQIRF)
              (message-condition? . g$message-condition?$7268$CQIRF)
              (make-who-condition . g$make-who-condition$7326$CQIRF)
              (make-warning . g$make-warning$7276$CQIRF)
              (make-violation . g$make-violation$7300$CQIRF)
              (make-undefined-violation . g$make-undefined-violation$7372$CQIRF)
              (make-syntax-violation . g$make-syntax-violation$7360$CQIRF)
              (make-serious-condition . g$make-serious-condition$7284$CQIRF)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$7336$CQIRF)
              (make-message-condition . g$make-message-condition$7266$CQIRF)
              (make-lexical-violation . g$make-lexical-violation$7352$CQIRF)
              (make-irritants-condition . g$make-irritants-condition$7316$CQIRF)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$7344$CQIRF)
              (make-error . g$make-error$7292$CQIRF)
              (make-assertion-violation . g$make-assertion-violation$7308$CQIRF)
              (lexical-violation? . g$lexical-violation?$7353$CQIRF)
              (irritants-condition? . g$irritants-condition?$7318$CQIRF)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$7345$CQIRF)
              (error? . g$error?$7293$CQIRF)
              (condition-who . g$condition-who$7329$CQIRF)
              (condition-message . g$condition-message$7269$CQIRF)
              (condition-irritants . g$condition-irritants$7319$CQIRF)
              (assertion-violation? . g$assertion-violation?$7309$CQIRF)
              (native-endianness . g$native-endianness$6848$CQIRF)
              (bytevector? . g$bytevector?$6616$CQIRF)
              (bytevector-u64-set! . g$bytevector-u64-set!$6869$CQIRF)
              (bytevector-u64-ref . g$bytevector-u64-ref$6865$CQIRF)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$6871$CQIRF)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$6867$CQIRF)
              (bytevector-u32-set! . g$bytevector-u32-set!$6861$CQIRF)
              (bytevector-u32-ref . g$bytevector-u32-ref$6857$CQIRF)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$6863$CQIRF)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$6859$CQIRF)
              (bytevector-u16-set! . g$bytevector-u16-set!$6853$CQIRF)
              (bytevector-u16-ref . g$bytevector-u16-ref$6849$CQIRF)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$6855$CQIRF)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$6851$CQIRF)
              (bytevector-s64-set! . g$bytevector-s64-set!$6870$CQIRF)
              (bytevector-s64-ref . g$bytevector-s64-ref$6866$CQIRF)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$6872$CQIRF)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$6868$CQIRF)
              (bytevector-s32-set! . g$bytevector-s32-set!$6862$CQIRF)
              (bytevector-s32-ref . g$bytevector-s32-ref$6858$CQIRF)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$6864$CQIRF)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$6860$CQIRF)
              (bytevector-s16-set! . g$bytevector-s16-set!$6854$CQIRF)
              (bytevector-s16-ref . g$bytevector-s16-ref$6850$CQIRF)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$6856$CQIRF)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$6852$CQIRF)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$6875$CQIRF)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$6873$CQIRF)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$6876$CQIRF)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$6874$CQIRF)
              (no-nans-violation? . g$no-nans-violation?$7493$CQIRF)
              (no-infinities-violation? . g$no-infinities-violation?$7485$CQIRF)
              (make-no-nans-violation . g$make-no-nans-violation$7492$CQIRF)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$7484$CQIRF)
              (flzero? . g$flzero?$8020$CQIRF)
              (fltruncate . g$fltruncate$8015$CQIRF)
              (fltan . g$fltan$8005$CQIRF)
              (flsqrt . g$flsqrt$8010$CQIRF)
              (flsin . g$flsin$8003$CQIRF)
              (flround . g$flround$8016$CQIRF)
              (flpositive? . g$flpositive?$8018$CQIRF)
              (flonum? . g$flonum?$6621$CQIRF)
              (flodd? . g$flodd?$8022$CQIRF)
              (flnegative? . g$flnegative?$8019$CQIRF)
              (flnan? . g$flnan?$8002$CQIRF)
              (flmod0 . g$flmod0$7998$CQIRF)
              (flmod . g$flmod$7997$CQIRF)
              (flmin . g$flmin$8024$CQIRF)
              (flmax . g$flmax$8023$CQIRF)
              (fllog . g$fllog$8009$CQIRF)
              (flinteger? . g$flinteger?$7999$CQIRF)
              (flinfinite? . g$flinfinite?$8001$CQIRF)
              (flfloor . g$flfloor$8014$CQIRF)
              (flfinite? . g$flfinite?$8000$CQIRF)
              (flexpt . g$flexpt$8012$CQIRF)
              (flexp . g$flexp$8011$CQIRF)
              (fleven? . g$fleven?$8021$CQIRF)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$7994$CQIRF)
              (fldiv0 . g$fldiv0$7996$CQIRF)
              (fldiv-and-mod . g$fldiv-and-mod$7993$CQIRF)
              (fldiv . g$fldiv$7995$CQIRF)
              (flcos . g$flcos$8004$CQIRF)
              (flceiling . g$flceiling$8013$CQIRF)
              (flatan . g$flatan$8008$CQIRF)
              (flasin . g$flasin$8006$CQIRF)
              (flacos . g$flacos$8007$CQIRF)
              (flabs . g$flabs$8017$CQIRF)
              (fxzero? . g$fxzero?$7861$CQIRF)
              (fxrotate-bit-field . g$fxrotate-bit-field$7875$CQIRF)
              (fxpositive? . g$fxpositive?$7859$CQIRF)
              (fxodd? . g$fxodd?$7863$CQIRF)
              (fxnegative? . g$fxnegative?$7860$CQIRF)
              (fxmod0 . g$fxmod0$7858$CQIRF)
              (fxmod . g$fxmod$7857$CQIRF)
              (fxmin . g$fxmin$7865$CQIRF)
              (fxmax . g$fxmax$7864$CQIRF)
              (fxif . g$fxif$7869$CQIRF)
              (fxeven? . g$fxeven?$7862$CQIRF)
              (fxdiv0 . g$fxdiv0$7856$CQIRF)
              (fxdiv . g$fxdiv$7855$CQIRF)
              (fxcopy-bit-field . g$fxcopy-bit-field$7872$CQIRF)
              (fxcopy-bit . g$fxcopy-bit$7870$CQIRF)
              (fxbit-field . g$fxbit-field$7871$CQIRF)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$7874$CQIRF)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$7873$CQIRF)
              (fx-/carry . g$fx-/carry$7867$CQIRF)
              (fx+/carry . g$fx+/carry$7868$CQIRF)
              (fx*/carry . g$fx*/carry$7866$CQIRF)
              (fixnum-width . g$fixnum-width$6622$CQIRF)
              (fixnum? . g$fixnum?$6620$CQIRF)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$7749$CQIRF)
              (bitwise-if . g$bitwise-if$7743$CQIRF)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$7746$CQIRF)
              (bitwise-copy-bit . g$bitwise-copy-bit$7744$CQIRF)
              (bitwise-bit-field . g$bitwise-bit-field$7745$CQIRF)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$7748$CQIRF)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$7747$CQIRF)
              (zero? . g$zero?$6655$CQIRF)
              (vector? . g$vector?$6615$CQIRF)
              (vector-map . g$vector-map$6677$CQIRF)
              (vector-for-each . g$vector-for-each$6678$CQIRF)
              (vector-fill! . g$vector-fill!$6623$CQIRF)
              (symbol? . g$symbol?$6617$CQIRF)
              (symbol=? . g$symbol=?$6667$CQIRF)
              (string>? . g$string>?$6664$CQIRF)
              (string>=? . g$string>=?$6666$CQIRF)
              (string=? . g$string=?$6662$CQIRF)
              (string<? . g$string<?$6663$CQIRF)
              (string<=? . g$string<=?$6665$CQIRF)
              (string-for-each . g$string-for-each$6679$CQIRF)
              (reverse . g$reverse$6624$CQIRF)
              (rationalize . g$rationalize$6674$CQIRF)
              (procedure? . g$procedure?$6619$CQIRF)
              (positive? . g$positive?$6653$CQIRF)
              (odd? . g$odd?$6657$CQIRF)
              (negative? . g$negative?$6654$CQIRF)
              (min . g$min$6659$CQIRF)
              (max . g$max$6658$CQIRF)
              (map . g$map$5946$CQIRF)
              (list-tail . g$list-tail$5926$CQIRF)
              (list-ref . g$list-ref$5927$CQIRF)
              (list->vector . g$list->vector$6612$CQIRF)
              (list->string . g$list->string$6613$CQIRF)
              (lcm . g$lcm$6661$CQIRF)
              (gcd . g$gcd$6660$CQIRF)
              (for-each . g$for-each$5947$CQIRF)
              (even? . g$even?$6656$CQIRF)
              (mod0 . g$mod0$6611$CQIRF)
              (div0 . g$div0$6609$CQIRF)
              (mod . g$mod$6610$CQIRF)
              (div . g$div$6608$CQIRF)
              (char? . g$char?$6614$CQIRF)
              (char>? . g$char>?$6671$CQIRF)
              (char>=? . g$char>=?$6673$CQIRF)
              (char=? . g$char=?$6669$CQIRF)
              (char<? . g$char<?$6670$CQIRF)
              (char<=? . g$char<=?$6672$CQIRF)
              (cddddr . g$cddddr$6652$CQIRF)
              (cdddar . g$cdddar$6651$CQIRF)
              (cddadr . g$cddadr$6650$CQIRF)
              (cddaar . g$cddaar$6649$CQIRF)
              (cdaddr . g$cdaddr$6648$CQIRF)
              (cdadar . g$cdadar$6647$CQIRF)
              (cdaadr . g$cdaadr$6646$CQIRF)
              (cdaaar . g$cdaaar$6645$CQIRF)
              (cadddr . g$cadddr$6644$CQIRF)
              (caddar . g$caddar$6643$CQIRF)
              (cadadr . g$cadadr$6642$CQIRF)
              (cadaar . g$cadaar$6641$CQIRF)
              (caaddr . g$caaddr$6640$CQIRF)
              (caadar . g$caadar$6639$CQIRF)
              (caaadr . g$caaadr$6638$CQIRF)
              (caaaar . g$caaaar$6637$CQIRF)
              (cdddr . g$cdddr$6636$CQIRF)
              (cddar . g$cddar$6635$CQIRF)
              (cdadr . g$cdadr$6634$CQIRF)
              (cdaar . g$cdaar$6633$CQIRF)
              (caddr . g$caddr$6632$CQIRF)
              (cadar . g$cadar$6631$CQIRF)
              (caadr . g$caadr$6630$CQIRF)
              (caaar . g$caaar$6629$CQIRF)
              (cddr . g$cddr$6628$CQIRF)
              (cdar . g$cdar$6627$CQIRF)
              (cadr . g$cadr$6626$CQIRF)
              (caar . g$caar$6625$CQIRF)
              (boolean? . g$boolean?$6618$CQIRF)
              (boolean=? . g$boolean=?$6668$CQIRF)
              (enum-set? . g$enum?$8231$CQIRF)
              (make-promise . g$make-promise$7529$CQIRF)
              (load/unload . g$load/unload$13637$CQIRF)
              (load/args . g$load/args$13636$CQIRF)
              (printf . g$printf$8286$CQIRF)
              (fprintf . g$fprintf$8287$CQIRF)
              (format . g$format$8288$CQIRF)
              (trace-printer . g$trace-printer$13633$CQIRF)
              (make-traced-macro . g$make-traced-macro$8292$CQIRF)
              (assertion-error . g$assertion-error$13559$CQIRF)
              (make-parameter . g$make-parameter$8771$CQIRF)
              (environment-bindings . g$environment-bindings$13537$CQIRF)
              (environment-symbols . g$environment-symbols$13540$CQIRF)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$13536$CQIRF)
              (library-path . g$library-path$9268$CQIRF)
              (make-compile-time-value . g$make-compile-time-value$13387$CQIRF)
              (expand->core . g$expand->core$13546$CQIRF)
              (expand . g$expand$13544$CQIRF)
              (convert->cps . g$convert->cps$8610$CQIRF)
              (installed-libraries . g$installed-libraries$9289$CQIRF)
              (uninstall-library . g$uninstall-library$9280$CQIRF)))))))
    (g$install-library$9284$CQIRF
      'g$11594$CQIRF
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$11587$CQIRF)
        (cosh . g$11586$CQIRF)
        (sinh . g$11585$CQIRF)
        (make-guid . g$11584$CQIRF)
        (unspecified? . g$11583$CQIRF)
        (make-list . g$5040$CQIRF)
        (last-pair . g$5039$CQIRF)
        (load-r5rs . g$11582$CQIRF)
        (license . g$11581$CQIRF)
        (stacktrace . g$11580$CQIRF)
        (ironscheme-build . g$11076$CQIRF)
        (remove-location . g$11567$CQIRF)
        (set-symbol-value! . g$11566$CQIRF)
        (symbol-value . g$11565$CQIRF)
        (symbol-bound? . g$11564$CQIRF)
        (ungensym . g$11563$CQIRF)
        (gensym . g$11562$CQIRF)
        (void . g$11561$CQIRF)
        (compile-system-libraries . g$11079$CQIRF)
        (compile->closure . g$11081$CQIRF)
        (compile . g$11080$CQIRF)
        (load . g$11075$CQIRF)
        (interaction-environment . g$8097$CQIRF)
        (string-upcase . g$11556$CQIRF)
        (string-titlecase . g$11555$CQIRF)
        (string-normalize-nfkd . g$6274$CQIRF)
        (string-normalize-nfkc . g$6273$CQIRF)
        (string-normalize-nfd . g$6272$CQIRF)
        (string-normalize-nfc . g$6271$CQIRF)
        (string-foldcase . g$11554$CQIRF)
        (string-downcase . g$11553$CQIRF)
        (string-ci>? . g$6258$CQIRF)
        (string-ci>=? . g$6260$CQIRF)
        (string-ci=? . g$6256$CQIRF)
        (string-ci<? . g$6257$CQIRF)
        (string-ci<=? . g$6259$CQIRF)
        (char-whitespace? . g$11552$CQIRF)
        (char-upper-case? . g$11551$CQIRF)
        (char-title-case? . g$11550$CQIRF)
        (char-numeric? . g$11549$CQIRF)
        (char-lower-case? . g$11548$CQIRF)
        (char-general-category . g$11547$CQIRF)
        (char-upcase . g$11546$CQIRF)
        (char-titlecase . g$11545$CQIRF)
        (char-foldcase . g$11544$CQIRF)
        (char-downcase . g$11543$CQIRF)
        (char-ci>? . g$6268$CQIRF)
        (char-ci>=? . g$6270$CQIRF)
        (char-ci=? . g$6266$CQIRF)
        (char-ci<? . g$6267$CQIRF)
        (char-ci<=? . g$6269$CQIRF)
        (char-alphabetic? . g$11542$CQIRF)
        (make-variable-transformer . g$7772$CQIRF)
        (identifier? . g$8091$CQIRF)
        (generate-temporaries . g$8080$CQIRF)
        (free-identifier=? . g$8081$CQIRF)
        (syntax->datum . g$8093$CQIRF)
        (datum->syntax . g$8092$CQIRF)
        (bound-identifier=? . g$8082$CQIRF)
        (record-type-descriptor? . g$11541$CQIRF)
        (record-predicate . g$11540$CQIRF)
        (record-mutator . g$11539$CQIRF)
        (record-constructor . g$11538$CQIRF)
        (record-accessor . g$11537$CQIRF)
        (make-record-type-descriptor . g$11536$CQIRF)
        (make-record-constructor-descriptor . g$11535$CQIRF)
        (record? . g$11534$CQIRF)
        (record-type-uid . g$11533$CQIRF)
        (record-type-sealed? . g$11532$CQIRF)
        (record-type-parent . g$11531$CQIRF)
        (record-type-opaque? . g$11530$CQIRF)
        (record-type-name . g$11529$CQIRF)
        (record-type-generative? . g$11528$CQIRF)
        (record-type-field-names . g$11527$CQIRF)
        (record-rtd . g$11526$CQIRF)
        (record-field-mutable? . g$11525$CQIRF)
        (delete-file . g$5665$CQIRF)
        (file-exists? . g$5664$CQIRF)
        (vector-sort! . g$11524$CQIRF)
        (vector-sort . g$11523$CQIRF)
        (list-sort . g$6227$CQIRF)
        (symbol-hash . g$11522$CQIRF)
        (string-ci-hash . g$11521$CQIRF)
        (string-hash . g$11520$CQIRF)
        (equal-hash . g$11519$CQIRF)
        (hashtable-equivalence-function . g$11518$CQIRF)
        (make-hashtable . g$11517$CQIRF)
        (hashtable-hash-function . g$11516$CQIRF)
        (make-eqv-hashtable . g$5633$CQIRF)
        (make-eq-hashtable . g$5632$CQIRF)
        (hashtable? . g$11515$CQIRF)
        (hashtable-update! . g$5639$CQIRF)
        (hashtable-size . g$5634$CQIRF)
        (hashtable-set! . g$5636$CQIRF)
        (hashtable-ref . g$5635$CQIRF)
        (hashtable-mutable? . g$11514$CQIRF)
        (hashtable-keys . g$11513$CQIRF)
        (hashtable-entries . g$11512$CQIRF)
        (hashtable-delete! . g$5637$CQIRF)
        (hashtable-copy . g$11511$CQIRF)
        (hashtable-contains? . g$5638$CQIRF)
        (hashtable-clear! . g$5640$CQIRF)
        (call-with-output-file . g$6600$CQIRF)
        (call-with-input-file . g$6599$CQIRF)
        (write-char . g$6591$CQIRF)
        (write . g$11510$CQIRF)
        (with-output-to-file . g$6598$CQIRF)
        (with-input-from-file . g$6597$CQIRF)
        (read-char . g$6590$CQIRF)
        (read . g$11509$CQIRF)
        (peek-char . g$6589$CQIRF)
        (open-output-file . g$11508$CQIRF)
        (open-input-file . g$11507$CQIRF)
        (newline . g$6601$CQIRF)
        (display . g$11506$CQIRF)
        (close-output-port . g$11505$CQIRF)
        (close-input-port . g$11504$CQIRF)
        (eof-object? . g$11503$CQIRF)
        (eof-object . g$11502$CQIRF)
        (current-error-port . g$11501$CQIRF)
        (current-output-port . g$11500$CQIRF)
        (current-input-port . g$11499$CQIRF)
        (output-port? . g$11498$CQIRF)
        (input-port? . g$11497$CQIRF)
        (utf-8-codec . g$11496$CQIRF)
        (utf-16-codec . g$11495$CQIRF)
        (transcoder-error-handling-mode . g$11494$CQIRF)
        (transcoder-eol-style . g$11493$CQIRF)
        (transcoder-codec . g$11492$CQIRF)
        (transcoded-port . g$11491$CQIRF)
        (textual-port? . g$11490$CQIRF)
        (string->bytevector . g$11489$CQIRF)
        (standard-output-port . g$11488$CQIRF)
        (standard-input-port . g$11487$CQIRF)
        (standard-error-port . g$11486$CQIRF)
        (set-port-position! . g$11485$CQIRF)
        (put-u8 . g$11484$CQIRF)
        (put-string . g$11483$CQIRF)
        (put-datum . g$6569$CQIRF)
        (put-char . g$11482$CQIRF)
        (put-bytevector . g$11481$CQIRF)
        (port? . g$6574$CQIRF)
        (port-transcoder . g$11480$CQIRF)
        (port-position . g$11479$CQIRF)
        (port-has-set-port-position!? . g$11478$CQIRF)
        (port-has-port-position? . g$11477$CQIRF)
        (port-eof? . g$11476$CQIRF)
        (output-port-buffer-mode . g$11475$CQIRF)
        (open-string-output-port . g$6573$CQIRF)
        (open-string-input-port . g$11474$CQIRF)
        (open-file-output-port . g$11473$CQIRF)
        (open-file-input/output-port . g$11472$CQIRF)
        (open-file-input-port . g$11471$CQIRF)
        (open-bytevector-output-port . g$11470$CQIRF)
        (open-bytevector-input-port . g$11469$CQIRF)
        (native-transcoder . g$11468$CQIRF)
        (native-eol-style . g$11467$CQIRF)
        (make-transcoder . g$11466$CQIRF)
        (latin-1-codec . g$11465$CQIRF)
        (make-i/o-write-error . g$6037$CQIRF)
        (make-i/o-read-error . g$6024$CQIRF)
        (make-i/o-port-error . g$6132$CQIRF)
        (make-i/o-invalid-position-error . g$6050$CQIRF)
        (make-i/o-filename-error . g$6065$CQIRF)
        (make-i/o-file-protection-error . g$6080$CQIRF)
        (make-i/o-file-is-read-only-error . g$6093$CQIRF)
        (make-i/o-file-does-not-exist-error . g$6119$CQIRF)
        (make-i/o-file-already-exists-error . g$6106$CQIRF)
        (make-i/o-error . g$6011$CQIRF)
        (make-i/o-encoding-error . g$6160$CQIRF)
        (make-i/o-decoding-error . g$6147$CQIRF)
        (make-custom-textual-output-port . g$11464$CQIRF)
        (make-custom-textual-input/output-port . g$11463$CQIRF)
        (make-custom-textual-input-port . g$11462$CQIRF)
        (make-custom-binary-output-port . g$11461$CQIRF)
        (make-custom-binary-input/output-port . g$11460$CQIRF)
        (make-custom-binary-input-port . g$11459$CQIRF)
        (make-bytevector . g$11458$CQIRF)
        (lookahead-u8 . g$11457$CQIRF)
        (lookahead-char . g$11456$CQIRF)
        (i/o-write-error? . g$6038$CQIRF)
        (i/o-read-error? . g$6025$CQIRF)
        (i/o-port-error? . g$6134$CQIRF)
        (i/o-invalid-position-error? . g$6052$CQIRF)
        (i/o-error-position . g$6053$CQIRF)
        (i/o-filename-error? . g$6067$CQIRF)
        (i/o-file-protection-error? . g$6081$CQIRF)
        (i/o-file-is-read-only-error? . g$6094$CQIRF)
        (i/o-file-does-not-exist-error? . g$6120$CQIRF)
        (i/o-file-already-exists-error? . g$6107$CQIRF)
        (i/o-error? . g$6012$CQIRF)
        (i/o-error-port . g$6135$CQIRF)
        (i/o-error-filename . g$6068$CQIRF)
        (i/o-encoding-error? . g$6162$CQIRF)
        (i/o-encoding-error-char . g$6163$CQIRF)
        (i/o-decoding-error? . g$6148$CQIRF)
        (get-u8 . g$11455$CQIRF)
        (get-string-n! . g$11454$CQIRF)
        (get-string-n . g$11453$CQIRF)
        (get-string-all . g$11452$CQIRF)
        (get-line . g$11451$CQIRF)
        (get-datum . g$6570$CQIRF)
        (get-char . g$11450$CQIRF)
        (get-bytevector-some . g$11449$CQIRF)
        (get-bytevector-n! . g$11448$CQIRF)
        (get-bytevector-n . g$11447$CQIRF)
        (get-bytevector-all . g$11446$CQIRF)
        (flush-output-port . g$11445$CQIRF)
        (close-port . g$11444$CQIRF)
        (call-with-string-output-port . g$6575$CQIRF)
        (call-with-port . g$6576$CQIRF)
        (call-with-bytevector-output-port . g$11443$CQIRF)
        (bytevector->string . g$11442$CQIRF)
        (buffer-mode? . g$11441$CQIRF)
        (binary-port? . g$11440$CQIRF)
        (scheme-report-environment . g$8070$CQIRF)
        (quotient . g$6206$CQIRF)
        (null-environment . g$8069$CQIRF)
        (remainder . g$6207$CQIRF)
        (modulo . g$6208$CQIRF)
        (inexact->exact . g$6203$CQIRF)
        (force . g$6210$CQIRF)
        (exact->inexact . g$6204$CQIRF)
        (exit . g$11439$CQIRF)
        (command-line . g$11071$CQIRF)
        (string-fill! . g$11438$CQIRF)
        (string-set! . g$11437$CQIRF)
        (set-cdr! . g$11436$CQIRF)
        (set-car! . g$11435$CQIRF)
        (remove . g$5062$CQIRF)
        (remv . g$5063$CQIRF)
        (remp . g$5043$CQIRF)
        (remq . g$5064$CQIRF)
        (partition . g$5042$CQIRF)
        (memv . g$5050$CQIRF)
        (memq . g$5049$CQIRF)
        (memp . g$5052$CQIRF)
        (member . g$5051$CQIRF)
        (exists . g$5056$CQIRF)
        (for-all . g$5055$CQIRF)
        (fold-right . g$5061$CQIRF)
        (fold-left . g$5060$CQIRF)
        (find . g$5041$CQIRF)
        (filter . g$5044$CQIRF)
        (cons* . g$5059$CQIRF)
        (assv . g$5046$CQIRF)
        (assq . g$5045$CQIRF)
        (assp . g$5048$CQIRF)
        (assoc . g$5047$CQIRF)
        (with-exception-handler . g$11434$CQIRF)
        (raise-continuable . g$11433$CQIRF)
        (raise . g$11432$CQIRF)
        (eval . g$8072$CQIRF)
        (environment . g$8068$CQIRF)
        (make-enumeration . g$6661$CQIRF)
        (enum-set=? . g$6668$CQIRF)
        (enum-set-universe . g$6662$CQIRF)
        (enum-set-union . g$6669$CQIRF)
        (enum-set-subset? . g$6667$CQIRF)
        (enum-set-projection . g$6673$CQIRF)
        (enum-set-member? . g$6666$CQIRF)
        (enum-set-intersection . g$6670$CQIRF)
        (enum-set-indexer . g$6663$CQIRF)
        (enum-set-difference . g$6671$CQIRF)
        (enum-set-constructor . g$6664$CQIRF)
        (enum-set-complement . g$6672$CQIRF)
        (enum-set->list . g$6665$CQIRF)
        (who-condition? . g$5929$CQIRF)
        (warning? . g$5848$CQIRF)
        (violation? . g$5887$CQIRF)
        (undefined-violation? . g$5999$CQIRF)
        (syntax-violation? . g$5984$CQIRF)
        (syntax-violation-subform . g$5986$CQIRF)
        (syntax-violation-form . g$5985$CQIRF)
        (syntax-violation . g$8090$CQIRF)
        (simple-conditions . g$11431$CQIRF)
        (serious-condition? . g$5861$CQIRF)
        (non-continuable-violation? . g$5943$CQIRF)
        (message-condition? . g$5834$CQIRF)
        (make-who-condition . g$5927$CQIRF)
        (make-warning . g$5847$CQIRF)
        (make-violation . g$5886$CQIRF)
        (make-undefined-violation . g$5998$CQIRF)
        (make-syntax-violation . g$5981$CQIRF)
        (make-serious-condition . g$5860$CQIRF)
        (make-non-continuable-violation . g$5942$CQIRF)
        (make-message-condition . g$5832$CQIRF)
        (make-lexical-violation . g$5968$CQIRF)
        (make-irritants-condition . g$5912$CQIRF)
        (make-implementation-restriction-violation . g$5955$CQIRF)
        (make-error . g$5873$CQIRF)
        (make-assertion-violation . g$5899$CQIRF)
        (lexical-violation? . g$5969$CQIRF)
        (irritants-condition? . g$5914$CQIRF)
        (implementation-restriction-violation? . g$5956$CQIRF)
        (error? . g$5874$CQIRF)
        (condition-who . g$5930$CQIRF)
        (condition-predicate . g$11430$CQIRF)
        (condition-message . g$5835$CQIRF)
        (condition-irritants . g$5915$CQIRF)
        (condition-accessor . g$11429$CQIRF)
        (condition . g$11428$CQIRF)
        (assertion-violation? . g$5900$CQIRF)
        (condition? . g$11427$CQIRF)
        (utf32->string . g$11426$CQIRF)
        (utf16->string . g$11425$CQIRF)
        (utf8->string . g$11424$CQIRF)
        (uint-list->bytevector . g$11423$CQIRF)
        (u8-list->bytevector . g$11422$CQIRF)
        (string->utf8 . g$11421$CQIRF)
        (string->utf32 . g$11420$CQIRF)
        (string->utf16 . g$11419$CQIRF)
        (sint-list->bytevector . g$11418$CQIRF)
        (native-endianness . g$5671$CQIRF)
        (bytevector? . g$5361$CQIRF)
        (bytevector=? . g$11417$CQIRF)
        (bytevector-uint-set! . g$11416$CQIRF)
        (bytevector-uint-ref . g$11415$CQIRF)
        (bytevector-u8-set! . g$11414$CQIRF)
        (bytevector-u8-ref . g$11413$CQIRF)
        (bytevector-u64-set! . g$5692$CQIRF)
        (bytevector-u64-ref . g$5688$CQIRF)
        (bytevector-u64-native-set! . g$5694$CQIRF)
        (bytevector-u64-native-ref . g$5690$CQIRF)
        (bytevector-u32-set! . g$5684$CQIRF)
        (bytevector-u32-ref . g$5680$CQIRF)
        (bytevector-u32-native-set! . g$5686$CQIRF)
        (bytevector-u32-native-ref . g$5682$CQIRF)
        (bytevector-u16-set! . g$5676$CQIRF)
        (bytevector-u16-ref . g$5672$CQIRF)
        (bytevector-u16-native-set! . g$5678$CQIRF)
        (bytevector-u16-native-ref . g$5674$CQIRF)
        (bytevector-sint-set! . g$11412$CQIRF)
        (bytevector-sint-ref . g$11411$CQIRF)
        (bytevector-s8-set! . g$11410$CQIRF)
        (bytevector-s8-ref . g$11409$CQIRF)
        (bytevector-s64-set! . g$5693$CQIRF)
        (bytevector-s64-ref . g$5689$CQIRF)
        (bytevector-s64-native-set! . g$5695$CQIRF)
        (bytevector-s64-native-ref . g$5691$CQIRF)
        (bytevector-s32-set! . g$5685$CQIRF)
        (bytevector-s32-ref . g$5681$CQIRF)
        (bytevector-s32-native-set! . g$5687$CQIRF)
        (bytevector-s32-native-ref . g$5683$CQIRF)
        (bytevector-s16-set! . g$5677$CQIRF)
        (bytevector-s16-ref . g$5673$CQIRF)
        (bytevector-s16-native-set! . g$5679$CQIRF)
        (bytevector-s16-native-ref . g$5675$CQIRF)
        (bytevector-length . g$11408$CQIRF)
        (bytevector-ieee-single-set! . g$11407$CQIRF)
        (bytevector-ieee-single-ref . g$11406$CQIRF)
        (bytevector-ieee-single-native-set! . g$5698$CQIRF)
        (bytevector-ieee-single-native-ref . g$5696$CQIRF)
        (bytevector-ieee-double-set! . g$11405$CQIRF)
        (bytevector-ieee-double-ref . g$11404$CQIRF)
        (bytevector-ieee-double-native-set! . g$5699$CQIRF)
        (bytevector-ieee-double-native-ref . g$5697$CQIRF)
        (bytevector-fill! . g$11403$CQIRF)
        (bytevector-copy! . g$11402$CQIRF)
        (bytevector-copy . g$11401$CQIRF)
        (bytevector->uint-list . g$11400$CQIRF)
        (bytevector->u8-list . g$11399$CQIRF)
        (bytevector->sint-list . g$11398$CQIRF)
        (no-nans-violation? . g$6189$CQIRF)
        (no-infinities-violation? . g$6176$CQIRF)
        (make-no-nans-violation . g$6188$CQIRF)
        (make-no-infinities-violation . g$6175$CQIRF)
        (real->flonum . g$11397$CQIRF)
        (flzero? . g$6489$CQIRF)
        (fltruncate . g$6484$CQIRF)
        (fltan . g$6474$CQIRF)
        (flsqrt . g$6479$CQIRF)
        (flsin . g$6472$CQIRF)
        (flround . g$6485$CQIRF)
        (flpositive? . g$6487$CQIRF)
        (flonum? . g$5366$CQIRF)
        (flodd? . g$6491$CQIRF)
        (flnumerator . g$11396$CQIRF)
        (flnegative? . g$6488$CQIRF)
        (flnan? . g$6471$CQIRF)
        (flmod0 . g$6467$CQIRF)
        (flmod . g$6466$CQIRF)
        (flmin . g$6493$CQIRF)
        (flmax . g$6492$CQIRF)
        (fllog . g$6478$CQIRF)
        (flinteger? . g$6468$CQIRF)
        (flinfinite? . g$6470$CQIRF)
        (flfloor . g$6483$CQIRF)
        (flfinite? . g$6469$CQIRF)
        (flexpt . g$6481$CQIRF)
        (flexp . g$6480$CQIRF)
        (fleven? . g$6490$CQIRF)
        (fldiv0-and-mod0 . g$6463$CQIRF)
        (fldiv0 . g$6465$CQIRF)
        (fldiv-and-mod . g$6462$CQIRF)
        (fldiv . g$6464$CQIRF)
        (fldenominator . g$11395$CQIRF)
        (flcos . g$6473$CQIRF)
        (flceiling . g$6482$CQIRF)
        (flatan . g$6477$CQIRF)
        (flasin . g$6475$CQIRF)
        (flacos . g$6476$CQIRF)
        (flabs . g$6486$CQIRF)
        (fl>? . g$11394$CQIRF)
        (fl>=? . g$11393$CQIRF)
        (fl=? . g$11392$CQIRF)
        (fl<? . g$11391$CQIRF)
        (fl<=? . g$11390$CQIRF)
        (fl/ . g$11389$CQIRF)
        (fl- . g$11388$CQIRF)
        (fl+ . g$11387$CQIRF)
        (fl* . g$11386$CQIRF)
        (fixnum->flonum . g$11385$CQIRF)
        (fxzero? . g$6370$CQIRF)
        (fxxor . g$11384$CQIRF)
        (fxrotate-bit-field . g$6384$CQIRF)
        (fxreverse-bit-field . g$11383$CQIRF)
        (fxpositive? . g$6368$CQIRF)
        (fxodd? . g$6372$CQIRF)
        (fxnot . g$11382$CQIRF)
        (fxnegative? . g$6369$CQIRF)
        (fxmod0 . g$6367$CQIRF)
        (fxmod . g$6366$CQIRF)
        (fxmin . g$6374$CQIRF)
        (fxmax . g$6373$CQIRF)
        (fxlength . g$11381$CQIRF)
        (fxior . g$11380$CQIRF)
        (fxif . g$6378$CQIRF)
        (fxfirst-bit-set . g$11379$CQIRF)
        (fxeven? . g$6371$CQIRF)
        (fxdiv0-and-mod0 . g$11378$CQIRF)
        (fxdiv0 . g$6365$CQIRF)
        (fxdiv-and-mod . g$11377$CQIRF)
        (fxdiv . g$6364$CQIRF)
        (fxcopy-bit-field . g$6381$CQIRF)
        (fxcopy-bit . g$6379$CQIRF)
        (fxbit-set? . g$11376$CQIRF)
        (fxbit-field . g$6380$CQIRF)
        (fxbit-count . g$11375$CQIRF)
        (fxarithmetic-shift-right . g$6383$CQIRF)
        (fxarithmetic-shift-left . g$6382$CQIRF)
        (fxarithmetic-shift . g$11374$CQIRF)
        (fxand . g$11373$CQIRF)
        (fx>? . g$11372$CQIRF)
        (fx>=? . g$11371$CQIRF)
        (fx=? . g$11370$CQIRF)
        (fx<? . g$11369$CQIRF)
        (fx<=? . g$11368$CQIRF)
        (fx-/carry . g$6376$CQIRF)
        (fx- . g$11367$CQIRF)
        (fx+/carry . g$6377$CQIRF)
        (fx+ . g$11366$CQIRF)
        (fx*/carry . g$6375$CQIRF)
        (fx* . g$11365$CQIRF)
        (greatest-fixnum . g$11364$CQIRF)
        (least-fixnum . g$11363$CQIRF)
        (fixnum-width . g$5367$CQIRF)
        (fixnum? . g$5365$CQIRF)
        (bitwise-rotate-bit-field . g$6338$CQIRF)
        (bitwise-reverse-bit-field . g$11362$CQIRF)
        (bitwise-length . g$11361$CQIRF)
        (bitwise-if . g$6332$CQIRF)
        (bitwise-first-bit-set . g$11360$CQIRF)
        (bitwise-copy-bit-field . g$6335$CQIRF)
        (bitwise-copy-bit . g$6333$CQIRF)
        (bitwise-bit-set? . g$11359$CQIRF)
        (bitwise-bit-field . g$6334$CQIRF)
        (bitwise-bit-count . g$11358$CQIRF)
        (bitwise-xor . g$11357$CQIRF)
        (bitwise-ior . g$11356$CQIRF)
        (bitwise-and . g$11355$CQIRF)
        (bitwise-not . g$11354$CQIRF)
        (bitwise-arithmetic-shift-right . g$6337$CQIRF)
        (bitwise-arithmetic-shift-left . g$6336$CQIRF)
        (bitwise-arithmetic-shift . g$11353$CQIRF)
        (zero? . g$5400$CQIRF)
        (vector? . g$5360$CQIRF)
        (vector-set! . g$11352$CQIRF)
        (vector-ref . g$11351$CQIRF)
        (vector-map . g$5432$CQIRF)
        (vector-length . g$11350$CQIRF)
        (vector-for-each . g$5433$CQIRF)
        (vector-fill! . g$5368$CQIRF)
        (vector->list . g$11349$CQIRF)
        (vector . g$11348$CQIRF)
        (values . g$11347$CQIRF)
        (truncate . g$11346$CQIRF)
        (tan . g$11345$CQIRF)
        (symbol? . g$5362$CQIRF)
        (symbol=? . g$5417$CQIRF)
        (symbol->string . g$11344$CQIRF)
        (substring . g$11343$CQIRF)
        (string? . g$11342$CQIRF)
        (string>? . g$5414$CQIRF)
        (string>=? . g$5416$CQIRF)
        (string=? . g$5412$CQIRF)
        (string<? . g$5413$CQIRF)
        (string<=? . g$5415$CQIRF)
        (string-ref . g$11341$CQIRF)
        (string-length . g$11340$CQIRF)
        (string-for-each . g$5434$CQIRF)
        (string-copy . g$11339$CQIRF)
        (string-append . g$11338$CQIRF)
        (string->symbol . g$11337$CQIRF)
        (string->number . g$11336$CQIRF)
        (string->list . g$11335$CQIRF)
        (string . g$11334$CQIRF)
        (sqrt . g$11333$CQIRF)
        (sin . g$11332$CQIRF)
        (round . g$11331$CQIRF)
        (reverse . g$5369$CQIRF)
        (real? . g$11330$CQIRF)
        (real-valued? . g$11329$CQIRF)
        (real-part . g$11328$CQIRF)
        (rationalize . g$5429$CQIRF)
        (rational? . g$11327$CQIRF)
        (rational-valued? . g$11326$CQIRF)
        (procedure? . g$5364$CQIRF)
        (positive? . g$5398$CQIRF)
        (pair? . g$11325$CQIRF)
        (odd? . g$5402$CQIRF)
        (numerator . g$11324$CQIRF)
        (number? . g$11323$CQIRF)
        (number->string . g$11322$CQIRF)
        (null? . g$11321$CQIRF)
        (not . g$11320$CQIRF)
        (negative? . g$5399$CQIRF)
        (nan? . g$11319$CQIRF)
        (min . g$5404$CQIRF)
        (max . g$5403$CQIRF)
        (map . g$5057$CQIRF)
        (make-vector . g$11318$CQIRF)
        (make-string . g$11317$CQIRF)
        (make-rectangular . g$11316$CQIRF)
        (make-polar . g$11315$CQIRF)
        (magnitude . g$11314$CQIRF)
        (log . g$11313$CQIRF)
        (list? . g$11312$CQIRF)
        (list-tail . g$5037$CQIRF)
        (list-ref . g$5038$CQIRF)
        (list->vector . g$5357$CQIRF)
        (list->string . g$5358$CQIRF)
        (list . g$11311$CQIRF)
        (length . g$11310$CQIRF)
        (lcm . g$5406$CQIRF)
        (integer? . g$11309$CQIRF)
        (integer-valued? . g$11308$CQIRF)
        (integer->char . g$11307$CQIRF)
        (infinite? . g$11306$CQIRF)
        (inexact? . g$11305$CQIRF)
        (inexact . g$11304$CQIRF)
        (imag-part . g$11303$CQIRF)
        (gcd . g$5405$CQIRF)
        (for-each . g$5058$CQIRF)
        (floor . g$11302$CQIRF)
        (finite? . g$11301$CQIRF)
        (expt . g$11300$CQIRF)
        (exp . g$11299$CQIRF)
        (exact? . g$11298$CQIRF)
        (exact-integer-sqrt . g$11297$CQIRF)
        (exact . g$11296$CQIRF)
        (even? . g$5401$CQIRF)
        (error . g$11295$CQIRF)
        (eqv? . g$11294$CQIRF)
        (equal? . g$11293$CQIRF)
        (eq? . g$11292$CQIRF)
        (dynamic-wind . g$11291$CQIRF)
        (div0-and-mod0 . g$11290$CQIRF)
        (mod0 . g$5356$CQIRF)
        (div0 . g$5354$CQIRF)
        (div-and-mod . g$11289$CQIRF)
        (mod . g$5355$CQIRF)
        (div . g$5353$CQIRF)
        (denominator . g$11288$CQIRF)
        (cos . g$11287$CQIRF)
        (cons . g$11286$CQIRF)
        (complex? . g$11285$CQIRF)
        (char? . g$5359$CQIRF)
        (char>? . g$5426$CQIRF)
        (char>=? . g$5428$CQIRF)
        (char=? . g$5424$CQIRF)
        (char<? . g$5425$CQIRF)
        (char<=? . g$5427$CQIRF)
        (char->integer . g$11284$CQIRF)
        (ceiling . g$11283$CQIRF)
        (call-with-values . g$11282$CQIRF)
        (call/cc . g$11281$CQIRF)
        (call-with-current-continuation . g$11280$CQIRF)
        (cddddr . g$5397$CQIRF)
        (cdddar . g$5396$CQIRF)
        (cddadr . g$5395$CQIRF)
        (cddaar . g$5394$CQIRF)
        (cdaddr . g$5393$CQIRF)
        (cdadar . g$5392$CQIRF)
        (cdaadr . g$5391$CQIRF)
        (cdaaar . g$5390$CQIRF)
        (cadddr . g$5389$CQIRF)
        (caddar . g$5388$CQIRF)
        (cadadr . g$5387$CQIRF)
        (cadaar . g$5386$CQIRF)
        (caaddr . g$5385$CQIRF)
        (caadar . g$5384$CQIRF)
        (caaadr . g$5383$CQIRF)
        (caaaar . g$5382$CQIRF)
        (cdddr . g$5381$CQIRF)
        (cddar . g$5380$CQIRF)
        (cdadr . g$5379$CQIRF)
        (cdaar . g$5378$CQIRF)
        (caddr . g$5377$CQIRF)
        (cadar . g$5376$CQIRF)
        (caadr . g$5375$CQIRF)
        (caaar . g$5374$CQIRF)
        (cddr . g$5373$CQIRF)
        (cdar . g$5372$CQIRF)
        (cadr . g$5371$CQIRF)
        (caar . g$5370$CQIRF)
        (cdr . g$11279$CQIRF)
        (car . g$11278$CQIRF)
        (boolean? . g$5363$CQIRF)
        (boolean=? . g$5418$CQIRF)
        (atan . g$11277$CQIRF)
        (assertion-violation . g$11276$CQIRF)
        (asin . g$11275$CQIRF)
        (apply . g$11274$CQIRF)
        (append . g$11273$CQIRF)
        (angle . g$11272$CQIRF)
        (acos . g$11271$CQIRF)
        (abs . g$11270$CQIRF)
        (/ . g$11269$CQIRF)
        (* . g$11268$CQIRF)
        (- . g$11267$CQIRF)
        (+ . g$11266$CQIRF)
        (>= . g$11265$CQIRF)
        (> . g$11264$CQIRF)
        (= . g$11263$CQIRF)
        (<= . g$11262$CQIRF)
        (< . g$11261$CQIRF)
        (deserialize-port . g$11257$CQIRF)
        (serialize-port . g$11256$CQIRF)
        (enum-set? . g$6638$CQIRF)
        (load/unload . g$11074$CQIRF)
        (load/args . g$11073$CQIRF)
        (printf . g$6747$CQIRF)
        (fprintf . g$6748$CQIRF)
        (format . g$6749$CQIRF)
        (procedure-form . g$11255$CQIRF)
        (procedure-environment . g$11254$CQIRF)
        (procedure-name . g$11253$CQIRF)
        (procedure-arity . g$11252$CQIRF)
        (gc-collect . g$11251$CQIRF)
        (typeof . g$11250$CQIRF)
        (clr-type? . g$11249$CQIRF)
        (get-clr-type . g$11248$CQIRF)
        (vector-append . g$11246$CQIRF)
        (vector-filter . g$11245$CQIRF)
        (vector-reverse! . g$11244$CQIRF)
        (vector-contains? . g$11243$CQIRF)
        (vector-index-of . g$11242$CQIRF)
        (vector-copy . g$11241$CQIRF)
        (vector-binary-search . g$11240$CQIRF)
        (string-ci-compare . g$11239$CQIRF)
        (string-compare . g$11238$CQIRF)
        (string-format . g$11237$CQIRF)
        (trace-printer . g$11070$CQIRF)
        (time-it . g$11235$CQIRF)
        (make-parameter . g$7042$CQIRF)
        (open-tcp-input/output-port . g$11232$CQIRF)
        (hashtable-for-each . g$11231$CQIRF)
        (hashtable-map . g$11230$CQIRF)
        (environment-bindings . g$8064$CQIRF)
        (environment-symbols . g$8067$CQIRF)
        (interaction-environment-symbols . g$8063$CQIRF)
        (optimization-level . g$11229$CQIRF)
        (library-path . g$7395$CQIRF)
        (make-compile-time-value . g$7773$CQIRF)
        (expand->core . g$8073$CQIRF)
        (expand . g$8071$CQIRF)
        (convert->cps . g$6825$CQIRF)
        (installed-libraries . g$7416$CQIRF)
        (uninstall-library . g$7407$CQIRF)
        (&no-nans . g$11228$CQIRF)
        (&no-infinities . g$11227$CQIRF)
        (&i/o-encoding . g$11226$CQIRF)
        (&i/o-decoding . g$11225$CQIRF)
        (&i/o-port . g$11224$CQIRF)
        (&i/o-file-does-not-exist . g$11223$CQIRF)
        (&i/o-file-already-exists . g$11222$CQIRF)
        (&i/o-file-is-read-only . g$11221$CQIRF)
        (&i/o-file-protection . g$11220$CQIRF)
        (&i/o-filename . g$11219$CQIRF)
        (&i/o-invalid-position . g$11218$CQIRF)
        (&i/o-write . g$11217$CQIRF)
        (&i/o-read . g$11216$CQIRF)
        (&i/o . g$11215$CQIRF)
        (&non-continuable . g$11214$CQIRF)
        (&undefined . g$11213$CQIRF)
        (&syntax . g$11212$CQIRF)
        (&lexical . g$11211$CQIRF)
        (&implementation-restriction . g$11210$CQIRF)
        (&who . g$11209$CQIRF)
        (&irritants . g$11208$CQIRF)
        (&assertion . g$11207$CQIRF)
        (&violation . g$11206$CQIRF)
        (&error . g$11205$CQIRF)
        (&serious . g$11204$CQIRF)
        (&warning . g$11203$CQIRF)
        (&message . g$11202$CQIRF)
        (&condition . g$11201$CQIRF)
        (define-condition-type . g$11200$CQIRF)
        (define-enumeration . g$11199$CQIRF)
        (define-record-type . g$11198$CQIRF)
        (parent-rtd . g$11197$CQIRF)
        (nongenerative . g$11196$CQIRF)
        (opaque . g$11195$CQIRF)
        (sealed . g$11194$CQIRF)
        (protocol . g$11193$CQIRF)
        (parent . g$11192$CQIRF)
        (immutable . g$11191$CQIRF)
        (mutable . g$11190$CQIRF)
        (fields . g$11189$CQIRF)
        (error-handling-mode . g$11188$CQIRF)
        (file-options . g$11187$CQIRF)
        (buffer-mode . g$11186$CQIRF)
        (eol-style . g$11185$CQIRF)
        (guard . g$11184$CQIRF)
        (trace-letrec-syntax . g$11183$CQIRF)
        (trace-let-syntax . g$11182$CQIRF)
        (trace-define-syntax . g$11181$CQIRF)
        (trace-define . g$11180$CQIRF)
        (trace-lambda . g$11179$CQIRF)
        (unsyntax-splicing . g$11178$CQIRF)
        (unsyntax . g$11177$CQIRF)
        (unquote-splicing . g$11176$CQIRF)
        (unquote . g$11175$CQIRF)
        (_ . g$11174$CQIRF)
        (else . g$11173$CQIRF)
        (=> . g$11172$CQIRF)
        (... . g$11171$CQIRF)
        (assert . g$11170$CQIRF)
        (endianness . g$11169$CQIRF)
        (delay . g$11168$CQIRF)
        (time . g$11167$CQIRF)
        (or . g$11166$CQIRF)
        (and . g$11165$CQIRF)
        (do . g$11164$CQIRF)
        (cond . g$11163$CQIRF)
        (let* . g$11162$CQIRF)
        (let . g$11161$CQIRF)
        (identifier-syntax . g$11160$CQIRF)
        (with-syntax . g$11159$CQIRF)
        (quasisyntax . g$11158$CQIRF)
        (quasiquote . g$11157$CQIRF)
        (syntax-rules . g$11156$CQIRF)
        (include-into . g$11155$CQIRF)
        (include . g$11154$CQIRF)
        (let-values . g$11152$CQIRF)
        (let*-values . g$11151$CQIRF)
        (record-constructor-descriptor . g$11150$CQIRF)
        (record-type-descriptor . g$11149$CQIRF)
        (fluid-let-syntax . g$11148$CQIRF)
        (case . g$11147$CQIRF)
        (parameterize . g$11146$CQIRF)
        (unless . g$11145$CQIRF)
        (when . g$11144$CQIRF)
        (if . g$11143$CQIRF)
        (letrec* . g$11142$CQIRF)
        (letrec . g$11141$CQIRF)
        (case-lambda . g$11139$CQIRF)
        (lambda . g$11138$CQIRF)
        (syntax . g$11137$CQIRF)
        (syntax-case . g$11136$CQIRF)
        (quote . g$11135$CQIRF)
        (letrec-syntax . g$11133$CQIRF)
        (let-syntax . g$11132$CQIRF)
        (set! . g$11131$CQIRF)
        (export . g$11130$CQIRF)
        (import . g$11129$CQIRF)
        (library . g$11128$CQIRF)
        (begin . g$11127$CQIRF)
        (module . g$11126$CQIRF)
        (define-syntax . g$11125$CQIRF)
        (define . g$11124$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11595$CQIRF
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11233$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9284$CQIRF
      'g$11596$CQIRF
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$11592$CQIRF)
        (annotation-source . g$11591$CQIRF)
        (annotation-expression . g$11590$CQIRF)
        (annotation? . g$11589$CQIRF)
        (read-annotated . g$11588$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9284$CQIRF
      'g$11597$CQIRF
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$11560$CQIRF)
        (serialize-library . g$11559$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9284$CQIRF
      'g$11598$CQIRF
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$11558$CQIRF)
        (variable-transformer-procedure . g$7775$CQIRF)
        (variable-transformer? . g$7774$CQIRF)
        (eqv-hash . g$11259$CQIRF)
        (reverse! . g$11258$CQIRF)
        (make-promise . g$6209$CQIRF)
        (format . g$6749$CQIRF)
        (get-command-line . g$11247$CQIRF)
        (make-traced-procedure . g$11236$CQIRF)
        (make-traced-macro . g$6769$CQIRF)
        (assertion-error . g$8086$CQIRF)
        (library-locator . g$11234$CQIRF)
        (get-library-paths . g$11233$CQIRF)
        (library-path . g$7395$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9284$CQIRF
      'g$11599$CQIRF
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11260$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11600$CQIRF
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$11579$CQIRF)
        (clr-field-set!-internal . g$11578$CQIRF)
        (clr-field-get-internal . g$11577$CQIRF)
        (clr-cast-internal . g$11576$CQIRF)
        (clr-call-internal . g$11575$CQIRF)
        (clr-new-internal . g$11574$CQIRF)
        (clr-new-array-internal . g$11573$CQIRF)
        (clr-is-internal . g$11572$CQIRF)
        (clr-reference-internal . g$11571$CQIRF)
        (clr-using-internal . g$11570$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11601$CQIRF
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11176$CQIRF)
        (unquote . g$11175$CQIRF)
        (else . g$11173$CQIRF)
        (=> . g$11172$CQIRF)
        (delay . g$11168$CQIRF)
        (or . g$11166$CQIRF)
        (and . g$11165$CQIRF)
        (do . g$11164$CQIRF)
        (cond . g$11163$CQIRF)
        (let* . g$11162$CQIRF)
        (let . g$11161$CQIRF)
        (quasiquote . g$11157$CQIRF)
        (syntax-rules . g$11156$CQIRF)
        (case . g$11147$CQIRF)
        (if . g$11143$CQIRF)
        (letrec . g$11141$CQIRF)
        (lambda . g$11138$CQIRF)
        (quote . g$11135$CQIRF)
        (letrec-syntax . g$11133$CQIRF)
        (let-syntax . g$11132$CQIRF)
        (set! . g$11131$CQIRF)
        (begin . g$11127$CQIRF)
        (define-syntax . g$11125$CQIRF)
        (define . g$11124$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9284$CQIRF
      'g$11602$CQIRF
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$11557$CQIRF)
        (string-ci>? . g$6258$CQIRF)
        (string-ci>=? . g$6260$CQIRF)
        (string-ci=? . g$6256$CQIRF)
        (string-ci<? . g$6257$CQIRF)
        (string-ci<=? . g$6259$CQIRF)
        (char-whitespace? . g$11552$CQIRF)
        (char-upper-case? . g$11551$CQIRF)
        (char-numeric? . g$11549$CQIRF)
        (char-lower-case? . g$11548$CQIRF)
        (char-upcase . g$11546$CQIRF)
        (char-downcase . g$11543$CQIRF)
        (char-ci>? . g$6268$CQIRF)
        (char-ci>=? . g$6270$CQIRF)
        (char-ci=? . g$6266$CQIRF)
        (char-ci<? . g$6267$CQIRF)
        (char-ci<=? . g$6269$CQIRF)
        (char-alphabetic? . g$11542$CQIRF)
        (call-with-output-file . g$6600$CQIRF)
        (call-with-input-file . g$6599$CQIRF)
        (write-char . g$6591$CQIRF)
        (write . g$11510$CQIRF)
        (with-output-to-file . g$6598$CQIRF)
        (with-input-from-file . g$6597$CQIRF)
        (read-char . g$6590$CQIRF)
        (read . g$11509$CQIRF)
        (peek-char . g$6589$CQIRF)
        (open-output-file . g$11508$CQIRF)
        (open-input-file . g$11507$CQIRF)
        (newline . g$6601$CQIRF)
        (display . g$11506$CQIRF)
        (close-output-port . g$11505$CQIRF)
        (close-input-port . g$11504$CQIRF)
        (eof-object? . g$11503$CQIRF)
        (current-error-port . g$11501$CQIRF)
        (current-output-port . g$11500$CQIRF)
        (current-input-port . g$11499$CQIRF)
        (output-port? . g$11498$CQIRF)
        (input-port? . g$11497$CQIRF)
        (scheme-report-environment . g$8070$CQIRF)
        (quotient . g$6206$CQIRF)
        (null-environment . g$8069$CQIRF)
        (remainder . g$6207$CQIRF)
        (modulo . g$6208$CQIRF)
        (inexact->exact . g$6203$CQIRF)
        (force . g$6210$CQIRF)
        (exact->inexact . g$6204$CQIRF)
        (string-fill! . g$11438$CQIRF)
        (string-set! . g$11437$CQIRF)
        (set-cdr! . g$11436$CQIRF)
        (set-car! . g$11435$CQIRF)
        (memv . g$5050$CQIRF)
        (memq . g$5049$CQIRF)
        (member . g$5051$CQIRF)
        (assv . g$5046$CQIRF)
        (assq . g$5045$CQIRF)
        (assoc . g$5047$CQIRF)
        (eval . g$8072$CQIRF)
        (zero? . g$5400$CQIRF)
        (vector? . g$5360$CQIRF)
        (vector-set! . g$11352$CQIRF)
        (vector-ref . g$11351$CQIRF)
        (vector-length . g$11350$CQIRF)
        (vector-fill! . g$5368$CQIRF)
        (vector->list . g$11349$CQIRF)
        (vector . g$11348$CQIRF)
        (values . g$11347$CQIRF)
        (truncate . g$11346$CQIRF)
        (tan . g$11345$CQIRF)
        (symbol? . g$5362$CQIRF)
        (symbol->string . g$11344$CQIRF)
        (substring . g$11343$CQIRF)
        (string? . g$11342$CQIRF)
        (string>? . g$5414$CQIRF)
        (string>=? . g$5416$CQIRF)
        (string=? . g$5412$CQIRF)
        (string<? . g$5413$CQIRF)
        (string<=? . g$5415$CQIRF)
        (string-ref . g$11341$CQIRF)
        (string-length . g$11340$CQIRF)
        (string-copy . g$11339$CQIRF)
        (string-append . g$11338$CQIRF)
        (string->symbol . g$11337$CQIRF)
        (string->number . g$11336$CQIRF)
        (string->list . g$11335$CQIRF)
        (string . g$11334$CQIRF)
        (sqrt . g$11333$CQIRF)
        (sin . g$11332$CQIRF)
        (round . g$11331$CQIRF)
        (reverse . g$5369$CQIRF)
        (real? . g$11330$CQIRF)
        (real-part . g$11328$CQIRF)
        (rationalize . g$5429$CQIRF)
        (rational? . g$11327$CQIRF)
        (procedure? . g$5364$CQIRF)
        (positive? . g$5398$CQIRF)
        (pair? . g$11325$CQIRF)
        (odd? . g$5402$CQIRF)
        (numerator . g$11324$CQIRF)
        (number? . g$11323$CQIRF)
        (number->string . g$11322$CQIRF)
        (null? . g$11321$CQIRF)
        (not . g$11320$CQIRF)
        (negative? . g$5399$CQIRF)
        (min . g$5404$CQIRF)
        (max . g$5403$CQIRF)
        (map . g$5057$CQIRF)
        (make-vector . g$11318$CQIRF)
        (make-string . g$11317$CQIRF)
        (make-rectangular . g$11316$CQIRF)
        (make-polar . g$11315$CQIRF)
        (magnitude . g$11314$CQIRF)
        (log . g$11313$CQIRF)
        (list? . g$11312$CQIRF)
        (list-tail . g$5037$CQIRF)
        (list-ref . g$5038$CQIRF)
        (list->vector . g$5357$CQIRF)
        (list->string . g$5358$CQIRF)
        (list . g$11311$CQIRF)
        (length . g$11310$CQIRF)
        (lcm . g$5406$CQIRF)
        (integer? . g$11309$CQIRF)
        (integer->char . g$11307$CQIRF)
        (inexact? . g$11305$CQIRF)
        (imag-part . g$11303$CQIRF)
        (gcd . g$5405$CQIRF)
        (for-each . g$5058$CQIRF)
        (floor . g$11302$CQIRF)
        (expt . g$11300$CQIRF)
        (exp . g$11299$CQIRF)
        (exact? . g$11298$CQIRF)
        (even? . g$5401$CQIRF)
        (eqv? . g$11294$CQIRF)
        (equal? . g$11293$CQIRF)
        (eq? . g$11292$CQIRF)
        (dynamic-wind . g$11291$CQIRF)
        (denominator . g$11288$CQIRF)
        (cos . g$11287$CQIRF)
        (cons . g$11286$CQIRF)
        (complex? . g$11285$CQIRF)
        (char? . g$5359$CQIRF)
        (char>? . g$5426$CQIRF)
        (char>=? . g$5428$CQIRF)
        (char=? . g$5424$CQIRF)
        (char<? . g$5425$CQIRF)
        (char<=? . g$5427$CQIRF)
        (char->integer . g$11284$CQIRF)
        (ceiling . g$11283$CQIRF)
        (call-with-values . g$11282$CQIRF)
        (call-with-current-continuation . g$11280$CQIRF)
        (cddddr . g$5397$CQIRF)
        (cdddar . g$5396$CQIRF)
        (cddadr . g$5395$CQIRF)
        (cddaar . g$5394$CQIRF)
        (cdaddr . g$5393$CQIRF)
        (cdadar . g$5392$CQIRF)
        (cdaadr . g$5391$CQIRF)
        (cdaaar . g$5390$CQIRF)
        (cadddr . g$5389$CQIRF)
        (caddar . g$5388$CQIRF)
        (cadadr . g$5387$CQIRF)
        (cadaar . g$5386$CQIRF)
        (caaddr . g$5385$CQIRF)
        (caadar . g$5384$CQIRF)
        (caaadr . g$5383$CQIRF)
        (caaaar . g$5382$CQIRF)
        (cdddr . g$5381$CQIRF)
        (cddar . g$5380$CQIRF)
        (cdadr . g$5379$CQIRF)
        (cdaar . g$5378$CQIRF)
        (caddr . g$5377$CQIRF)
        (cadar . g$5376$CQIRF)
        (caadr . g$5375$CQIRF)
        (caaar . g$5374$CQIRF)
        (cddr . g$5373$CQIRF)
        (cdar . g$5372$CQIRF)
        (cadr . g$5371$CQIRF)
        (caar . g$5370$CQIRF)
        (cdr . g$11279$CQIRF)
        (car . g$11278$CQIRF)
        (boolean? . g$5363$CQIRF)
        (atan . g$11277$CQIRF)
        (asin . g$11275$CQIRF)
        (apply . g$11274$CQIRF)
        (append . g$11273$CQIRF)
        (angle . g$11272$CQIRF)
        (acos . g$11271$CQIRF)
        (abs . g$11270$CQIRF)
        (/ . g$11269$CQIRF)
        (* . g$11268$CQIRF)
        (- . g$11267$CQIRF)
        (+ . g$11266$CQIRF)
        (>= . g$11265$CQIRF)
        (> . g$11264$CQIRF)
        (= . g$11263$CQIRF)
        (<= . g$11262$CQIRF)
        (< . g$11261$CQIRF)
        (unquote-splicing . g$11176$CQIRF)
        (unquote . g$11175$CQIRF)
        (else . g$11173$CQIRF)
        (=> . g$11172$CQIRF)
        (... . g$11171$CQIRF)
        (delay . g$11168$CQIRF)
        (or . g$11166$CQIRF)
        (and . g$11165$CQIRF)
        (do . g$11164$CQIRF)
        (cond . g$11163$CQIRF)
        (let* . g$11162$CQIRF)
        (let . g$11161$CQIRF)
        (quasiquote . g$11157$CQIRF)
        (syntax-rules . g$11156$CQIRF)
        (case . g$11147$CQIRF)
        (if . g$11143$CQIRF)
        (letrec . g$11141$CQIRF)
        (lambda . g$11138$CQIRF)
        (quote . g$11135$CQIRF)
        (letrec-syntax . g$11133$CQIRF)
        (let-syntax . g$11132$CQIRF)
        (set! . g$11131$CQIRF)
        (begin . g$11127$CQIRF)
        (define-syntax . g$11125$CQIRF)
        (define . g$11124$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9284$CQIRF
      'g$11603$CQIRF
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11556$CQIRF)
        (string-titlecase . g$11555$CQIRF)
        (string-normalize-nfkd . g$6274$CQIRF)
        (string-normalize-nfkc . g$6273$CQIRF)
        (string-normalize-nfd . g$6272$CQIRF)
        (string-normalize-nfc . g$6271$CQIRF)
        (string-foldcase . g$11554$CQIRF)
        (string-downcase . g$11553$CQIRF)
        (string-ci>? . g$6258$CQIRF)
        (string-ci>=? . g$6260$CQIRF)
        (string-ci=? . g$6256$CQIRF)
        (string-ci<? . g$6257$CQIRF)
        (string-ci<=? . g$6259$CQIRF)
        (char-whitespace? . g$11552$CQIRF)
        (char-upper-case? . g$11551$CQIRF)
        (char-title-case? . g$11550$CQIRF)
        (char-numeric? . g$11549$CQIRF)
        (char-lower-case? . g$11548$CQIRF)
        (char-general-category . g$11547$CQIRF)
        (char-upcase . g$11546$CQIRF)
        (char-titlecase . g$11545$CQIRF)
        (char-foldcase . g$11544$CQIRF)
        (char-downcase . g$11543$CQIRF)
        (char-ci>? . g$6268$CQIRF)
        (char-ci>=? . g$6270$CQIRF)
        (char-ci=? . g$6266$CQIRF)
        (char-ci<? . g$6267$CQIRF)
        (char-ci<=? . g$6269$CQIRF)
        (char-alphabetic? . g$11542$CQIRF)
        (make-variable-transformer . g$7772$CQIRF)
        (identifier? . g$8091$CQIRF)
        (generate-temporaries . g$8080$CQIRF)
        (free-identifier=? . g$8081$CQIRF)
        (syntax->datum . g$8093$CQIRF)
        (datum->syntax . g$8092$CQIRF)
        (bound-identifier=? . g$8082$CQIRF)
        (record-type-descriptor? . g$11541$CQIRF)
        (record-predicate . g$11540$CQIRF)
        (record-mutator . g$11539$CQIRF)
        (record-constructor . g$11538$CQIRF)
        (record-accessor . g$11537$CQIRF)
        (make-record-type-descriptor . g$11536$CQIRF)
        (make-record-constructor-descriptor . g$11535$CQIRF)
        (record? . g$11534$CQIRF)
        (record-type-uid . g$11533$CQIRF)
        (record-type-sealed? . g$11532$CQIRF)
        (record-type-parent . g$11531$CQIRF)
        (record-type-opaque? . g$11530$CQIRF)
        (record-type-name . g$11529$CQIRF)
        (record-type-generative? . g$11528$CQIRF)
        (record-type-field-names . g$11527$CQIRF)
        (record-rtd . g$11526$CQIRF)
        (record-field-mutable? . g$11525$CQIRF)
        (delete-file . g$5665$CQIRF)
        (file-exists? . g$5664$CQIRF)
        (vector-sort! . g$11524$CQIRF)
        (vector-sort . g$11523$CQIRF)
        (list-sort . g$6227$CQIRF)
        (symbol-hash . g$11522$CQIRF)
        (string-ci-hash . g$11521$CQIRF)
        (string-hash . g$11520$CQIRF)
        (equal-hash . g$11519$CQIRF)
        (hashtable-equivalence-function . g$11518$CQIRF)
        (make-hashtable . g$11517$CQIRF)
        (hashtable-hash-function . g$11516$CQIRF)
        (make-eqv-hashtable . g$5633$CQIRF)
        (make-eq-hashtable . g$5632$CQIRF)
        (hashtable? . g$11515$CQIRF)
        (hashtable-update! . g$5639$CQIRF)
        (hashtable-size . g$5634$CQIRF)
        (hashtable-set! . g$5636$CQIRF)
        (hashtable-ref . g$5635$CQIRF)
        (hashtable-mutable? . g$11514$CQIRF)
        (hashtable-keys . g$11513$CQIRF)
        (hashtable-entries . g$11512$CQIRF)
        (hashtable-delete! . g$5637$CQIRF)
        (hashtable-copy . g$11511$CQIRF)
        (hashtable-contains? . g$5638$CQIRF)
        (hashtable-clear! . g$5640$CQIRF)
        (call-with-output-file . g$6600$CQIRF)
        (call-with-input-file . g$6599$CQIRF)
        (write-char . g$6591$CQIRF)
        (write . g$11510$CQIRF)
        (with-output-to-file . g$6598$CQIRF)
        (with-input-from-file . g$6597$CQIRF)
        (read-char . g$6590$CQIRF)
        (read . g$11509$CQIRF)
        (peek-char . g$6589$CQIRF)
        (open-output-file . g$11508$CQIRF)
        (open-input-file . g$11507$CQIRF)
        (newline . g$6601$CQIRF)
        (display . g$11506$CQIRF)
        (close-output-port . g$11505$CQIRF)
        (close-input-port . g$11504$CQIRF)
        (eof-object? . g$11503$CQIRF)
        (eof-object . g$11502$CQIRF)
        (current-error-port . g$11501$CQIRF)
        (current-output-port . g$11500$CQIRF)
        (current-input-port . g$11499$CQIRF)
        (output-port? . g$11498$CQIRF)
        (input-port? . g$11497$CQIRF)
        (utf-8-codec . g$11496$CQIRF)
        (utf-16-codec . g$11495$CQIRF)
        (transcoder-error-handling-mode . g$11494$CQIRF)
        (transcoder-eol-style . g$11493$CQIRF)
        (transcoder-codec . g$11492$CQIRF)
        (transcoded-port . g$11491$CQIRF)
        (textual-port? . g$11490$CQIRF)
        (string->bytevector . g$11489$CQIRF)
        (standard-output-port . g$11488$CQIRF)
        (standard-input-port . g$11487$CQIRF)
        (standard-error-port . g$11486$CQIRF)
        (set-port-position! . g$11485$CQIRF)
        (put-u8 . g$11484$CQIRF)
        (put-string . g$11483$CQIRF)
        (put-datum . g$6569$CQIRF)
        (put-char . g$11482$CQIRF)
        (put-bytevector . g$11481$CQIRF)
        (port? . g$6574$CQIRF)
        (port-transcoder . g$11480$CQIRF)
        (port-position . g$11479$CQIRF)
        (port-has-set-port-position!? . g$11478$CQIRF)
        (port-has-port-position? . g$11477$CQIRF)
        (port-eof? . g$11476$CQIRF)
        (output-port-buffer-mode . g$11475$CQIRF)
        (open-string-output-port . g$6573$CQIRF)
        (open-string-input-port . g$11474$CQIRF)
        (open-file-output-port . g$11473$CQIRF)
        (open-file-input/output-port . g$11472$CQIRF)
        (open-file-input-port . g$11471$CQIRF)
        (open-bytevector-output-port . g$11470$CQIRF)
        (open-bytevector-input-port . g$11469$CQIRF)
        (native-transcoder . g$11468$CQIRF)
        (native-eol-style . g$11467$CQIRF)
        (make-transcoder . g$11466$CQIRF)
        (latin-1-codec . g$11465$CQIRF)
        (make-i/o-write-error . g$6037$CQIRF)
        (make-i/o-read-error . g$6024$CQIRF)
        (make-i/o-port-error . g$6132$CQIRF)
        (make-i/o-invalid-position-error . g$6050$CQIRF)
        (make-i/o-filename-error . g$6065$CQIRF)
        (make-i/o-file-protection-error . g$6080$CQIRF)
        (make-i/o-file-is-read-only-error . g$6093$CQIRF)
        (make-i/o-file-does-not-exist-error . g$6119$CQIRF)
        (make-i/o-file-already-exists-error . g$6106$CQIRF)
        (make-i/o-error . g$6011$CQIRF)
        (make-i/o-encoding-error . g$6160$CQIRF)
        (make-i/o-decoding-error . g$6147$CQIRF)
        (make-custom-textual-output-port . g$11464$CQIRF)
        (make-custom-textual-input/output-port . g$11463$CQIRF)
        (make-custom-textual-input-port . g$11462$CQIRF)
        (make-custom-binary-output-port . g$11461$CQIRF)
        (make-custom-binary-input/output-port . g$11460$CQIRF)
        (make-custom-binary-input-port . g$11459$CQIRF)
        (make-bytevector . g$11458$CQIRF)
        (lookahead-u8 . g$11457$CQIRF)
        (lookahead-char . g$11456$CQIRF)
        (i/o-write-error? . g$6038$CQIRF)
        (i/o-read-error? . g$6025$CQIRF)
        (i/o-port-error? . g$6134$CQIRF)
        (i/o-invalid-position-error? . g$6052$CQIRF)
        (i/o-error-position . g$6053$CQIRF)
        (i/o-filename-error? . g$6067$CQIRF)
        (i/o-file-protection-error? . g$6081$CQIRF)
        (i/o-file-is-read-only-error? . g$6094$CQIRF)
        (i/o-file-does-not-exist-error? . g$6120$CQIRF)
        (i/o-file-already-exists-error? . g$6107$CQIRF)
        (i/o-error? . g$6012$CQIRF)
        (i/o-error-port . g$6135$CQIRF)
        (i/o-error-filename . g$6068$CQIRF)
        (i/o-encoding-error? . g$6162$CQIRF)
        (i/o-encoding-error-char . g$6163$CQIRF)
        (i/o-decoding-error? . g$6148$CQIRF)
        (get-u8 . g$11455$CQIRF)
        (get-string-n! . g$11454$CQIRF)
        (get-string-n . g$11453$CQIRF)
        (get-string-all . g$11452$CQIRF)
        (get-line . g$11451$CQIRF)
        (get-datum . g$6570$CQIRF)
        (get-char . g$11450$CQIRF)
        (get-bytevector-some . g$11449$CQIRF)
        (get-bytevector-n! . g$11448$CQIRF)
        (get-bytevector-n . g$11447$CQIRF)
        (get-bytevector-all . g$11446$CQIRF)
        (flush-output-port . g$11445$CQIRF)
        (close-port . g$11444$CQIRF)
        (call-with-string-output-port . g$6575$CQIRF)
        (call-with-port . g$6576$CQIRF)
        (call-with-bytevector-output-port . g$11443$CQIRF)
        (bytevector->string . g$11442$CQIRF)
        (buffer-mode? . g$11441$CQIRF)
        (binary-port? . g$11440$CQIRF)
        (exit . g$11439$CQIRF)
        (command-line . g$11071$CQIRF)
        (remove . g$5062$CQIRF)
        (remv . g$5063$CQIRF)
        (remp . g$5043$CQIRF)
        (remq . g$5064$CQIRF)
        (partition . g$5042$CQIRF)
        (memv . g$5050$CQIRF)
        (memq . g$5049$CQIRF)
        (memp . g$5052$CQIRF)
        (member . g$5051$CQIRF)
        (exists . g$5056$CQIRF)
        (for-all . g$5055$CQIRF)
        (fold-right . g$5061$CQIRF)
        (fold-left . g$5060$CQIRF)
        (find . g$5041$CQIRF)
        (filter . g$5044$CQIRF)
        (cons* . g$5059$CQIRF)
        (assv . g$5046$CQIRF)
        (assq . g$5045$CQIRF)
        (assp . g$5048$CQIRF)
        (assoc . g$5047$CQIRF)
        (with-exception-handler . g$11434$CQIRF)
        (raise-continuable . g$11433$CQIRF)
        (raise . g$11432$CQIRF)
        (make-enumeration . g$6661$CQIRF)
        (enum-set=? . g$6668$CQIRF)
        (enum-set-universe . g$6662$CQIRF)
        (enum-set-union . g$6669$CQIRF)
        (enum-set-subset? . g$6667$CQIRF)
        (enum-set-projection . g$6673$CQIRF)
        (enum-set-member? . g$6666$CQIRF)
        (enum-set-intersection . g$6670$CQIRF)
        (enum-set-indexer . g$6663$CQIRF)
        (enum-set-difference . g$6671$CQIRF)
        (enum-set-constructor . g$6664$CQIRF)
        (enum-set-complement . g$6672$CQIRF)
        (enum-set->list . g$6665$CQIRF)
        (who-condition? . g$5929$CQIRF)
        (warning? . g$5848$CQIRF)
        (violation? . g$5887$CQIRF)
        (undefined-violation? . g$5999$CQIRF)
        (syntax-violation? . g$5984$CQIRF)
        (syntax-violation-subform . g$5986$CQIRF)
        (syntax-violation-form . g$5985$CQIRF)
        (syntax-violation . g$8090$CQIRF)
        (simple-conditions . g$11431$CQIRF)
        (serious-condition? . g$5861$CQIRF)
        (non-continuable-violation? . g$5943$CQIRF)
        (message-condition? . g$5834$CQIRF)
        (make-who-condition . g$5927$CQIRF)
        (make-warning . g$5847$CQIRF)
        (make-violation . g$5886$CQIRF)
        (make-undefined-violation . g$5998$CQIRF)
        (make-syntax-violation . g$5981$CQIRF)
        (make-serious-condition . g$5860$CQIRF)
        (make-non-continuable-violation . g$5942$CQIRF)
        (make-message-condition . g$5832$CQIRF)
        (make-lexical-violation . g$5968$CQIRF)
        (make-irritants-condition . g$5912$CQIRF)
        (make-implementation-restriction-violation . g$5955$CQIRF)
        (make-error . g$5873$CQIRF)
        (make-assertion-violation . g$5899$CQIRF)
        (lexical-violation? . g$5969$CQIRF)
        (irritants-condition? . g$5914$CQIRF)
        (implementation-restriction-violation? . g$5956$CQIRF)
        (error? . g$5874$CQIRF)
        (condition-who . g$5930$CQIRF)
        (condition-predicate . g$11430$CQIRF)
        (condition-message . g$5835$CQIRF)
        (condition-irritants . g$5915$CQIRF)
        (condition-accessor . g$11429$CQIRF)
        (condition . g$11428$CQIRF)
        (assertion-violation? . g$5900$CQIRF)
        (condition? . g$11427$CQIRF)
        (utf32->string . g$11426$CQIRF)
        (utf16->string . g$11425$CQIRF)
        (utf8->string . g$11424$CQIRF)
        (uint-list->bytevector . g$11423$CQIRF)
        (u8-list->bytevector . g$11422$CQIRF)
        (string->utf8 . g$11421$CQIRF)
        (string->utf32 . g$11420$CQIRF)
        (string->utf16 . g$11419$CQIRF)
        (sint-list->bytevector . g$11418$CQIRF)
        (native-endianness . g$5671$CQIRF)
        (bytevector? . g$5361$CQIRF)
        (bytevector=? . g$11417$CQIRF)
        (bytevector-uint-set! . g$11416$CQIRF)
        (bytevector-uint-ref . g$11415$CQIRF)
        (bytevector-u8-set! . g$11414$CQIRF)
        (bytevector-u8-ref . g$11413$CQIRF)
        (bytevector-u64-set! . g$5692$CQIRF)
        (bytevector-u64-ref . g$5688$CQIRF)
        (bytevector-u64-native-set! . g$5694$CQIRF)
        (bytevector-u64-native-ref . g$5690$CQIRF)
        (bytevector-u32-set! . g$5684$CQIRF)
        (bytevector-u32-ref . g$5680$CQIRF)
        (bytevector-u32-native-set! . g$5686$CQIRF)
        (bytevector-u32-native-ref . g$5682$CQIRF)
        (bytevector-u16-set! . g$5676$CQIRF)
        (bytevector-u16-ref . g$5672$CQIRF)
        (bytevector-u16-native-set! . g$5678$CQIRF)
        (bytevector-u16-native-ref . g$5674$CQIRF)
        (bytevector-sint-set! . g$11412$CQIRF)
        (bytevector-sint-ref . g$11411$CQIRF)
        (bytevector-s8-set! . g$11410$CQIRF)
        (bytevector-s8-ref . g$11409$CQIRF)
        (bytevector-s64-set! . g$5693$CQIRF)
        (bytevector-s64-ref . g$5689$CQIRF)
        (bytevector-s64-native-set! . g$5695$CQIRF)
        (bytevector-s64-native-ref . g$5691$CQIRF)
        (bytevector-s32-set! . g$5685$CQIRF)
        (bytevector-s32-ref . g$5681$CQIRF)
        (bytevector-s32-native-set! . g$5687$CQIRF)
        (bytevector-s32-native-ref . g$5683$CQIRF)
        (bytevector-s16-set! . g$5677$CQIRF)
        (bytevector-s16-ref . g$5673$CQIRF)
        (bytevector-s16-native-set! . g$5679$CQIRF)
        (bytevector-s16-native-ref . g$5675$CQIRF)
        (bytevector-length . g$11408$CQIRF)
        (bytevector-ieee-single-set! . g$11407$CQIRF)
        (bytevector-ieee-single-ref . g$11406$CQIRF)
        (bytevector-ieee-single-native-set! . g$5698$CQIRF)
        (bytevector-ieee-single-native-ref . g$5696$CQIRF)
        (bytevector-ieee-double-set! . g$11405$CQIRF)
        (bytevector-ieee-double-ref . g$11404$CQIRF)
        (bytevector-ieee-double-native-set! . g$5699$CQIRF)
        (bytevector-ieee-double-native-ref . g$5697$CQIRF)
        (bytevector-fill! . g$11403$CQIRF)
        (bytevector-copy! . g$11402$CQIRF)
        (bytevector-copy . g$11401$CQIRF)
        (bytevector->uint-list . g$11400$CQIRF)
        (bytevector->u8-list . g$11399$CQIRF)
        (bytevector->sint-list . g$11398$CQIRF)
        (no-nans-violation? . g$6189$CQIRF)
        (no-infinities-violation? . g$6176$CQIRF)
        (make-no-nans-violation . g$6188$CQIRF)
        (make-no-infinities-violation . g$6175$CQIRF)
        (real->flonum . g$11397$CQIRF)
        (flzero? . g$6489$CQIRF)
        (fltruncate . g$6484$CQIRF)
        (fltan . g$6474$CQIRF)
        (flsqrt . g$6479$CQIRF)
        (flsin . g$6472$CQIRF)
        (flround . g$6485$CQIRF)
        (flpositive? . g$6487$CQIRF)
        (flonum? . g$5366$CQIRF)
        (flodd? . g$6491$CQIRF)
        (flnumerator . g$11396$CQIRF)
        (flnegative? . g$6488$CQIRF)
        (flnan? . g$6471$CQIRF)
        (flmod0 . g$6467$CQIRF)
        (flmod . g$6466$CQIRF)
        (flmin . g$6493$CQIRF)
        (flmax . g$6492$CQIRF)
        (fllog . g$6478$CQIRF)
        (flinteger? . g$6468$CQIRF)
        (flinfinite? . g$6470$CQIRF)
        (flfloor . g$6483$CQIRF)
        (flfinite? . g$6469$CQIRF)
        (flexpt . g$6481$CQIRF)
        (flexp . g$6480$CQIRF)
        (fleven? . g$6490$CQIRF)
        (fldiv0-and-mod0 . g$6463$CQIRF)
        (fldiv0 . g$6465$CQIRF)
        (fldiv-and-mod . g$6462$CQIRF)
        (fldiv . g$6464$CQIRF)
        (fldenominator . g$11395$CQIRF)
        (flcos . g$6473$CQIRF)
        (flceiling . g$6482$CQIRF)
        (flatan . g$6477$CQIRF)
        (flasin . g$6475$CQIRF)
        (flacos . g$6476$CQIRF)
        (flabs . g$6486$CQIRF)
        (fl>? . g$11394$CQIRF)
        (fl>=? . g$11393$CQIRF)
        (fl=? . g$11392$CQIRF)
        (fl<? . g$11391$CQIRF)
        (fl<=? . g$11390$CQIRF)
        (fl/ . g$11389$CQIRF)
        (fl- . g$11388$CQIRF)
        (fl+ . g$11387$CQIRF)
        (fl* . g$11386$CQIRF)
        (fixnum->flonum . g$11385$CQIRF)
        (fxzero? . g$6370$CQIRF)
        (fxxor . g$11384$CQIRF)
        (fxrotate-bit-field . g$6384$CQIRF)
        (fxreverse-bit-field . g$11383$CQIRF)
        (fxpositive? . g$6368$CQIRF)
        (fxodd? . g$6372$CQIRF)
        (fxnot . g$11382$CQIRF)
        (fxnegative? . g$6369$CQIRF)
        (fxmod0 . g$6367$CQIRF)
        (fxmod . g$6366$CQIRF)
        (fxmin . g$6374$CQIRF)
        (fxmax . g$6373$CQIRF)
        (fxlength . g$11381$CQIRF)
        (fxior . g$11380$CQIRF)
        (fxif . g$6378$CQIRF)
        (fxfirst-bit-set . g$11379$CQIRF)
        (fxeven? . g$6371$CQIRF)
        (fxdiv0-and-mod0 . g$11378$CQIRF)
        (fxdiv0 . g$6365$CQIRF)
        (fxdiv-and-mod . g$11377$CQIRF)
        (fxdiv . g$6364$CQIRF)
        (fxcopy-bit-field . g$6381$CQIRF)
        (fxcopy-bit . g$6379$CQIRF)
        (fxbit-set? . g$11376$CQIRF)
        (fxbit-field . g$6380$CQIRF)
        (fxbit-count . g$11375$CQIRF)
        (fxarithmetic-shift-right . g$6383$CQIRF)
        (fxarithmetic-shift-left . g$6382$CQIRF)
        (fxarithmetic-shift . g$11374$CQIRF)
        (fxand . g$11373$CQIRF)
        (fx>? . g$11372$CQIRF)
        (fx>=? . g$11371$CQIRF)
        (fx=? . g$11370$CQIRF)
        (fx<? . g$11369$CQIRF)
        (fx<=? . g$11368$CQIRF)
        (fx-/carry . g$6376$CQIRF)
        (fx- . g$11367$CQIRF)
        (fx+/carry . g$6377$CQIRF)
        (fx+ . g$11366$CQIRF)
        (fx*/carry . g$6375$CQIRF)
        (fx* . g$11365$CQIRF)
        (greatest-fixnum . g$11364$CQIRF)
        (least-fixnum . g$11363$CQIRF)
        (fixnum-width . g$5367$CQIRF)
        (fixnum? . g$5365$CQIRF)
        (bitwise-rotate-bit-field . g$6338$CQIRF)
        (bitwise-reverse-bit-field . g$11362$CQIRF)
        (bitwise-length . g$11361$CQIRF)
        (bitwise-if . g$6332$CQIRF)
        (bitwise-first-bit-set . g$11360$CQIRF)
        (bitwise-copy-bit-field . g$6335$CQIRF)
        (bitwise-copy-bit . g$6333$CQIRF)
        (bitwise-bit-set? . g$11359$CQIRF)
        (bitwise-bit-field . g$6334$CQIRF)
        (bitwise-bit-count . g$11358$CQIRF)
        (bitwise-xor . g$11357$CQIRF)
        (bitwise-ior . g$11356$CQIRF)
        (bitwise-and . g$11355$CQIRF)
        (bitwise-not . g$11354$CQIRF)
        (bitwise-arithmetic-shift-right . g$6337$CQIRF)
        (bitwise-arithmetic-shift-left . g$6336$CQIRF)
        (bitwise-arithmetic-shift . g$11353$CQIRF)
        (zero? . g$5400$CQIRF)
        (vector? . g$5360$CQIRF)
        (vector-set! . g$11352$CQIRF)
        (vector-ref . g$11351$CQIRF)
        (vector-map . g$5432$CQIRF)
        (vector-length . g$11350$CQIRF)
        (vector-for-each . g$5433$CQIRF)
        (vector-fill! . g$5368$CQIRF)
        (vector->list . g$11349$CQIRF)
        (vector . g$11348$CQIRF)
        (values . g$11347$CQIRF)
        (truncate . g$11346$CQIRF)
        (tan . g$11345$CQIRF)
        (symbol? . g$5362$CQIRF)
        (symbol=? . g$5417$CQIRF)
        (symbol->string . g$11344$CQIRF)
        (substring . g$11343$CQIRF)
        (string? . g$11342$CQIRF)
        (string>? . g$5414$CQIRF)
        (string>=? . g$5416$CQIRF)
        (string=? . g$5412$CQIRF)
        (string<? . g$5413$CQIRF)
        (string<=? . g$5415$CQIRF)
        (string-ref . g$11341$CQIRF)
        (string-length . g$11340$CQIRF)
        (string-for-each . g$5434$CQIRF)
        (string-copy . g$11339$CQIRF)
        (string-append . g$11338$CQIRF)
        (string->symbol . g$11337$CQIRF)
        (string->number . g$11336$CQIRF)
        (string->list . g$11335$CQIRF)
        (string . g$11334$CQIRF)
        (sqrt . g$11333$CQIRF)
        (sin . g$11332$CQIRF)
        (round . g$11331$CQIRF)
        (reverse . g$5369$CQIRF)
        (real? . g$11330$CQIRF)
        (real-valued? . g$11329$CQIRF)
        (real-part . g$11328$CQIRF)
        (rationalize . g$5429$CQIRF)
        (rational? . g$11327$CQIRF)
        (rational-valued? . g$11326$CQIRF)
        (procedure? . g$5364$CQIRF)
        (positive? . g$5398$CQIRF)
        (pair? . g$11325$CQIRF)
        (odd? . g$5402$CQIRF)
        (numerator . g$11324$CQIRF)
        (number? . g$11323$CQIRF)
        (number->string . g$11322$CQIRF)
        (null? . g$11321$CQIRF)
        (not . g$11320$CQIRF)
        (negative? . g$5399$CQIRF)
        (nan? . g$11319$CQIRF)
        (min . g$5404$CQIRF)
        (max . g$5403$CQIRF)
        (map . g$5057$CQIRF)
        (make-vector . g$11318$CQIRF)
        (make-string . g$11317$CQIRF)
        (make-rectangular . g$11316$CQIRF)
        (make-polar . g$11315$CQIRF)
        (magnitude . g$11314$CQIRF)
        (log . g$11313$CQIRF)
        (list? . g$11312$CQIRF)
        (list-tail . g$5037$CQIRF)
        (list-ref . g$5038$CQIRF)
        (list->vector . g$5357$CQIRF)
        (list->string . g$5358$CQIRF)
        (list . g$11311$CQIRF)
        (length . g$11310$CQIRF)
        (lcm . g$5406$CQIRF)
        (integer? . g$11309$CQIRF)
        (integer-valued? . g$11308$CQIRF)
        (integer->char . g$11307$CQIRF)
        (infinite? . g$11306$CQIRF)
        (inexact? . g$11305$CQIRF)
        (inexact . g$11304$CQIRF)
        (imag-part . g$11303$CQIRF)
        (gcd . g$5405$CQIRF)
        (for-each . g$5058$CQIRF)
        (floor . g$11302$CQIRF)
        (finite? . g$11301$CQIRF)
        (expt . g$11300$CQIRF)
        (exp . g$11299$CQIRF)
        (exact? . g$11298$CQIRF)
        (exact-integer-sqrt . g$11297$CQIRF)
        (exact . g$11296$CQIRF)
        (even? . g$5401$CQIRF)
        (error . g$11295$CQIRF)
        (eqv? . g$11294$CQIRF)
        (equal? . g$11293$CQIRF)
        (eq? . g$11292$CQIRF)
        (dynamic-wind . g$11291$CQIRF)
        (div0-and-mod0 . g$11290$CQIRF)
        (mod0 . g$5356$CQIRF)
        (div0 . g$5354$CQIRF)
        (div-and-mod . g$11289$CQIRF)
        (mod . g$5355$CQIRF)
        (div . g$5353$CQIRF)
        (denominator . g$11288$CQIRF)
        (cos . g$11287$CQIRF)
        (cons . g$11286$CQIRF)
        (complex? . g$11285$CQIRF)
        (char? . g$5359$CQIRF)
        (char>? . g$5426$CQIRF)
        (char>=? . g$5428$CQIRF)
        (char=? . g$5424$CQIRF)
        (char<? . g$5425$CQIRF)
        (char<=? . g$5427$CQIRF)
        (char->integer . g$11284$CQIRF)
        (ceiling . g$11283$CQIRF)
        (call-with-values . g$11282$CQIRF)
        (call/cc . g$11281$CQIRF)
        (call-with-current-continuation . g$11280$CQIRF)
        (cddddr . g$5397$CQIRF)
        (cdddar . g$5396$CQIRF)
        (cddadr . g$5395$CQIRF)
        (cddaar . g$5394$CQIRF)
        (cdaddr . g$5393$CQIRF)
        (cdadar . g$5392$CQIRF)
        (cdaadr . g$5391$CQIRF)
        (cdaaar . g$5390$CQIRF)
        (cadddr . g$5389$CQIRF)
        (caddar . g$5388$CQIRF)
        (cadadr . g$5387$CQIRF)
        (cadaar . g$5386$CQIRF)
        (caaddr . g$5385$CQIRF)
        (caadar . g$5384$CQIRF)
        (caaadr . g$5383$CQIRF)
        (caaaar . g$5382$CQIRF)
        (cdddr . g$5381$CQIRF)
        (cddar . g$5380$CQIRF)
        (cdadr . g$5379$CQIRF)
        (cdaar . g$5378$CQIRF)
        (caddr . g$5377$CQIRF)
        (cadar . g$5376$CQIRF)
        (caadr . g$5375$CQIRF)
        (caaar . g$5374$CQIRF)
        (cddr . g$5373$CQIRF)
        (cdar . g$5372$CQIRF)
        (cadr . g$5371$CQIRF)
        (caar . g$5370$CQIRF)
        (cdr . g$11279$CQIRF)
        (car . g$11278$CQIRF)
        (boolean? . g$5363$CQIRF)
        (boolean=? . g$5418$CQIRF)
        (atan . g$11277$CQIRF)
        (assertion-violation . g$11276$CQIRF)
        (asin . g$11275$CQIRF)
        (apply . g$11274$CQIRF)
        (append . g$11273$CQIRF)
        (angle . g$11272$CQIRF)
        (acos . g$11271$CQIRF)
        (abs . g$11270$CQIRF)
        (/ . g$11269$CQIRF)
        (* . g$11268$CQIRF)
        (- . g$11267$CQIRF)
        (+ . g$11266$CQIRF)
        (>= . g$11265$CQIRF)
        (> . g$11264$CQIRF)
        (= . g$11263$CQIRF)
        (<= . g$11262$CQIRF)
        (< . g$11261$CQIRF)
        (&no-nans . g$11228$CQIRF)
        (&no-infinities . g$11227$CQIRF)
        (&i/o-encoding . g$11226$CQIRF)
        (&i/o-decoding . g$11225$CQIRF)
        (&i/o-port . g$11224$CQIRF)
        (&i/o-file-does-not-exist . g$11223$CQIRF)
        (&i/o-file-already-exists . g$11222$CQIRF)
        (&i/o-file-is-read-only . g$11221$CQIRF)
        (&i/o-file-protection . g$11220$CQIRF)
        (&i/o-filename . g$11219$CQIRF)
        (&i/o-invalid-position . g$11218$CQIRF)
        (&i/o-write . g$11217$CQIRF)
        (&i/o-read . g$11216$CQIRF)
        (&i/o . g$11215$CQIRF)
        (&non-continuable . g$11214$CQIRF)
        (&undefined . g$11213$CQIRF)
        (&syntax . g$11212$CQIRF)
        (&lexical . g$11211$CQIRF)
        (&implementation-restriction . g$11210$CQIRF)
        (&who . g$11209$CQIRF)
        (&irritants . g$11208$CQIRF)
        (&assertion . g$11207$CQIRF)
        (&violation . g$11206$CQIRF)
        (&error . g$11205$CQIRF)
        (&serious . g$11204$CQIRF)
        (&warning . g$11203$CQIRF)
        (&message . g$11202$CQIRF)
        (&condition . g$11201$CQIRF)
        (define-condition-type . g$11200$CQIRF)
        (define-enumeration . g$11199$CQIRF)
        (define-record-type . g$11198$CQIRF)
        (parent-rtd . g$11197$CQIRF)
        (nongenerative . g$11196$CQIRF)
        (opaque . g$11195$CQIRF)
        (sealed . g$11194$CQIRF)
        (protocol . g$11193$CQIRF)
        (parent . g$11192$CQIRF)
        (immutable . g$11191$CQIRF)
        (mutable . g$11190$CQIRF)
        (fields . g$11189$CQIRF)
        (error-handling-mode . g$11188$CQIRF)
        (file-options . g$11187$CQIRF)
        (buffer-mode . g$11186$CQIRF)
        (eol-style . g$11185$CQIRF)
        (guard . g$11184$CQIRF)
        (unsyntax-splicing . g$11178$CQIRF)
        (unsyntax . g$11177$CQIRF)
        (unquote-splicing . g$11176$CQIRF)
        (unquote . g$11175$CQIRF)
        (_ . g$11174$CQIRF)
        (else . g$11173$CQIRF)
        (=> . g$11172$CQIRF)
        (... . g$11171$CQIRF)
        (assert . g$11170$CQIRF)
        (endianness . g$11169$CQIRF)
        (or . g$11166$CQIRF)
        (and . g$11165$CQIRF)
        (do . g$11164$CQIRF)
        (cond . g$11163$CQIRF)
        (let* . g$11162$CQIRF)
        (let . g$11161$CQIRF)
        (identifier-syntax . g$11160$CQIRF)
        (with-syntax . g$11159$CQIRF)
        (quasisyntax . g$11158$CQIRF)
        (quasiquote . g$11157$CQIRF)
        (syntax-rules . g$11156$CQIRF)
        (let-values . g$11152$CQIRF)
        (let*-values . g$11151$CQIRF)
        (record-constructor-descriptor . g$11150$CQIRF)
        (record-type-descriptor . g$11149$CQIRF)
        (case . g$11147$CQIRF)
        (unless . g$11145$CQIRF)
        (when . g$11144$CQIRF)
        (if . g$11143$CQIRF)
        (letrec* . g$11142$CQIRF)
        (letrec . g$11141$CQIRF)
        (case-lambda . g$11139$CQIRF)
        (lambda . g$11138$CQIRF)
        (syntax . g$11137$CQIRF)
        (syntax-case . g$11136$CQIRF)
        (quote . g$11135$CQIRF)
        (letrec-syntax . g$11133$CQIRF)
        (let-syntax . g$11132$CQIRF)
        (set! . g$11131$CQIRF)
        (begin . g$11127$CQIRF)
        (define-syntax . g$11125$CQIRF)
        (define . g$11124$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11604$CQIRF
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$8070$CQIRF)
        (quotient . g$6206$CQIRF)
        (null-environment . g$8069$CQIRF)
        (remainder . g$6207$CQIRF)
        (modulo . g$6208$CQIRF)
        (inexact->exact . g$6203$CQIRF)
        (force . g$6210$CQIRF)
        (exact->inexact . g$6204$CQIRF)
        (delay . g$11168$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11605$CQIRF
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11164$CQIRF)
        (unless . g$11145$CQIRF)
        (when . g$11144$CQIRF)
        (case-lambda . g$11139$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11606$CQIRF
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8072$CQIRF) (environment . g$8068$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11607$CQIRF
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$11436$CQIRF) (set-car! . g$11435$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11608$CQIRF
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$11438$CQIRF) (string-set! . g$11437$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11609$CQIRF
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$11439$CQIRF) (command-line . g$11071$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11610$CQIRF
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$7772$CQIRF)
        (identifier? . g$8091$CQIRF)
        (generate-temporaries . g$8080$CQIRF)
        (free-identifier=? . g$8081$CQIRF)
        (syntax->datum . g$8093$CQIRF)
        (datum->syntax . g$8092$CQIRF)
        (bound-identifier=? . g$8082$CQIRF)
        (syntax-violation . g$8090$CQIRF)
        (unsyntax-splicing . g$11178$CQIRF)
        (unsyntax . g$11177$CQIRF)
        (_ . g$11174$CQIRF)
        (... . g$11171$CQIRF)
        (with-syntax . g$11159$CQIRF)
        (quasisyntax . g$11158$CQIRF)
        (syntax . g$11137$CQIRF)
        (syntax-case . g$11136$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11611$CQIRF
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$5665$CQIRF)
        (file-exists? . g$5664$CQIRF)
        (make-i/o-write-error . g$6037$CQIRF)
        (make-i/o-read-error . g$6024$CQIRF)
        (make-i/o-port-error . g$6132$CQIRF)
        (make-i/o-invalid-position-error . g$6050$CQIRF)
        (make-i/o-filename-error . g$6065$CQIRF)
        (make-i/o-file-protection-error . g$6080$CQIRF)
        (make-i/o-file-is-read-only-error . g$6093$CQIRF)
        (make-i/o-file-does-not-exist-error . g$6119$CQIRF)
        (make-i/o-file-already-exists-error . g$6106$CQIRF)
        (make-i/o-error . g$6011$CQIRF)
        (i/o-write-error? . g$6038$CQIRF)
        (i/o-read-error? . g$6025$CQIRF)
        (i/o-port-error? . g$6134$CQIRF)
        (i/o-invalid-position-error? . g$6052$CQIRF)
        (i/o-error-position . g$6053$CQIRF)
        (i/o-filename-error? . g$6067$CQIRF)
        (i/o-file-protection-error? . g$6081$CQIRF)
        (i/o-file-is-read-only-error? . g$6094$CQIRF)
        (i/o-file-does-not-exist-error? . g$6120$CQIRF)
        (i/o-file-already-exists-error? . g$6107$CQIRF)
        (i/o-error? . g$6012$CQIRF)
        (i/o-error-port . g$6135$CQIRF)
        (i/o-error-filename . g$6068$CQIRF)
        (&i/o-port . g$11224$CQIRF)
        (&i/o-file-does-not-exist . g$11223$CQIRF)
        (&i/o-file-already-exists . g$11222$CQIRF)
        (&i/o-file-is-read-only . g$11221$CQIRF)
        (&i/o-file-protection . g$11220$CQIRF)
        (&i/o-filename . g$11219$CQIRF)
        (&i/o-invalid-position . g$11218$CQIRF)
        (&i/o-write . g$11217$CQIRF)
        (&i/o-read . g$11216$CQIRF)
        (&i/o . g$11215$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11612$CQIRF
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$11524$CQIRF)
        (vector-sort . g$11523$CQIRF)
        (list-sort . g$6227$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11613$CQIRF
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$5400$CQIRF)
        (vector? . g$5360$CQIRF)
        (vector-set! . g$11352$CQIRF)
        (vector-ref . g$11351$CQIRF)
        (vector-map . g$5432$CQIRF)
        (vector-length . g$11350$CQIRF)
        (vector-for-each . g$5433$CQIRF)
        (vector-fill! . g$5368$CQIRF)
        (vector->list . g$11349$CQIRF)
        (vector . g$11348$CQIRF)
        (values . g$11347$CQIRF)
        (truncate . g$11346$CQIRF)
        (tan . g$11345$CQIRF)
        (symbol? . g$5362$CQIRF)
        (symbol=? . g$5417$CQIRF)
        (symbol->string . g$11344$CQIRF)
        (substring . g$11343$CQIRF)
        (string? . g$11342$CQIRF)
        (string>? . g$5414$CQIRF)
        (string>=? . g$5416$CQIRF)
        (string=? . g$5412$CQIRF)
        (string<? . g$5413$CQIRF)
        (string<=? . g$5415$CQIRF)
        (string-ref . g$11341$CQIRF)
        (string-length . g$11340$CQIRF)
        (string-for-each . g$5434$CQIRF)
        (string-copy . g$11339$CQIRF)
        (string-append . g$11338$CQIRF)
        (string->symbol . g$11337$CQIRF)
        (string->number . g$11336$CQIRF)
        (string->list . g$11335$CQIRF)
        (string . g$11334$CQIRF)
        (sqrt . g$11333$CQIRF)
        (sin . g$11332$CQIRF)
        (round . g$11331$CQIRF)
        (reverse . g$5369$CQIRF)
        (real? . g$11330$CQIRF)
        (real-valued? . g$11329$CQIRF)
        (real-part . g$11328$CQIRF)
        (rationalize . g$5429$CQIRF)
        (rational? . g$11327$CQIRF)
        (rational-valued? . g$11326$CQIRF)
        (procedure? . g$5364$CQIRF)
        (positive? . g$5398$CQIRF)
        (pair? . g$11325$CQIRF)
        (odd? . g$5402$CQIRF)
        (numerator . g$11324$CQIRF)
        (number? . g$11323$CQIRF)
        (number->string . g$11322$CQIRF)
        (null? . g$11321$CQIRF)
        (not . g$11320$CQIRF)
        (negative? . g$5399$CQIRF)
        (nan? . g$11319$CQIRF)
        (min . g$5404$CQIRF)
        (max . g$5403$CQIRF)
        (map . g$5057$CQIRF)
        (make-vector . g$11318$CQIRF)
        (make-string . g$11317$CQIRF)
        (make-rectangular . g$11316$CQIRF)
        (make-polar . g$11315$CQIRF)
        (magnitude . g$11314$CQIRF)
        (log . g$11313$CQIRF)
        (list? . g$11312$CQIRF)
        (list-tail . g$5037$CQIRF)
        (list-ref . g$5038$CQIRF)
        (list->vector . g$5357$CQIRF)
        (list->string . g$5358$CQIRF)
        (list . g$11311$CQIRF)
        (length . g$11310$CQIRF)
        (lcm . g$5406$CQIRF)
        (integer? . g$11309$CQIRF)
        (integer-valued? . g$11308$CQIRF)
        (integer->char . g$11307$CQIRF)
        (infinite? . g$11306$CQIRF)
        (inexact? . g$11305$CQIRF)
        (inexact . g$11304$CQIRF)
        (imag-part . g$11303$CQIRF)
        (gcd . g$5405$CQIRF)
        (for-each . g$5058$CQIRF)
        (floor . g$11302$CQIRF)
        (finite? . g$11301$CQIRF)
        (expt . g$11300$CQIRF)
        (exp . g$11299$CQIRF)
        (exact? . g$11298$CQIRF)
        (exact-integer-sqrt . g$11297$CQIRF)
        (exact . g$11296$CQIRF)
        (even? . g$5401$CQIRF)
        (error . g$11295$CQIRF)
        (eqv? . g$11294$CQIRF)
        (equal? . g$11293$CQIRF)
        (eq? . g$11292$CQIRF)
        (dynamic-wind . g$11291$CQIRF)
        (div0-and-mod0 . g$11290$CQIRF)
        (mod0 . g$5356$CQIRF)
        (div0 . g$5354$CQIRF)
        (div-and-mod . g$11289$CQIRF)
        (mod . g$5355$CQIRF)
        (div . g$5353$CQIRF)
        (denominator . g$11288$CQIRF)
        (cos . g$11287$CQIRF)
        (cons . g$11286$CQIRF)
        (complex? . g$11285$CQIRF)
        (char? . g$5359$CQIRF)
        (char>? . g$5426$CQIRF)
        (char>=? . g$5428$CQIRF)
        (char=? . g$5424$CQIRF)
        (char<? . g$5425$CQIRF)
        (char<=? . g$5427$CQIRF)
        (char->integer . g$11284$CQIRF)
        (ceiling . g$11283$CQIRF)
        (call-with-values . g$11282$CQIRF)
        (call/cc . g$11281$CQIRF)
        (call-with-current-continuation . g$11280$CQIRF)
        (cddddr . g$5397$CQIRF)
        (cdddar . g$5396$CQIRF)
        (cddadr . g$5395$CQIRF)
        (cddaar . g$5394$CQIRF)
        (cdaddr . g$5393$CQIRF)
        (cdadar . g$5392$CQIRF)
        (cdaadr . g$5391$CQIRF)
        (cdaaar . g$5390$CQIRF)
        (cadddr . g$5389$CQIRF)
        (caddar . g$5388$CQIRF)
        (cadadr . g$5387$CQIRF)
        (cadaar . g$5386$CQIRF)
        (caaddr . g$5385$CQIRF)
        (caadar . g$5384$CQIRF)
        (caaadr . g$5383$CQIRF)
        (caaaar . g$5382$CQIRF)
        (cdddr . g$5381$CQIRF)
        (cddar . g$5380$CQIRF)
        (cdadr . g$5379$CQIRF)
        (cdaar . g$5378$CQIRF)
        (caddr . g$5377$CQIRF)
        (cadar . g$5376$CQIRF)
        (caadr . g$5375$CQIRF)
        (caaar . g$5374$CQIRF)
        (cddr . g$5373$CQIRF)
        (cdar . g$5372$CQIRF)
        (cadr . g$5371$CQIRF)
        (caar . g$5370$CQIRF)
        (cdr . g$11279$CQIRF)
        (car . g$11278$CQIRF)
        (boolean? . g$5363$CQIRF)
        (boolean=? . g$5418$CQIRF)
        (atan . g$11277$CQIRF)
        (assertion-violation . g$11276$CQIRF)
        (asin . g$11275$CQIRF)
        (apply . g$11274$CQIRF)
        (append . g$11273$CQIRF)
        (angle . g$11272$CQIRF)
        (acos . g$11271$CQIRF)
        (abs . g$11270$CQIRF)
        (/ . g$11269$CQIRF)
        (* . g$11268$CQIRF)
        (- . g$11267$CQIRF)
        (+ . g$11266$CQIRF)
        (>= . g$11265$CQIRF)
        (> . g$11264$CQIRF)
        (= . g$11263$CQIRF)
        (<= . g$11262$CQIRF)
        (< . g$11261$CQIRF)
        (unquote-splicing . g$11176$CQIRF)
        (unquote . g$11175$CQIRF)
        (_ . g$11174$CQIRF)
        (else . g$11173$CQIRF)
        (=> . g$11172$CQIRF)
        (... . g$11171$CQIRF)
        (assert . g$11170$CQIRF)
        (or . g$11166$CQIRF)
        (and . g$11165$CQIRF)
        (cond . g$11163$CQIRF)
        (let* . g$11162$CQIRF)
        (let . g$11161$CQIRF)
        (identifier-syntax . g$11160$CQIRF)
        (quasiquote . g$11157$CQIRF)
        (syntax-rules . g$11156$CQIRF)
        (let-values . g$11152$CQIRF)
        (let*-values . g$11151$CQIRF)
        (case . g$11147$CQIRF)
        (if . g$11143$CQIRF)
        (letrec* . g$11142$CQIRF)
        (letrec . g$11141$CQIRF)
        (lambda . g$11138$CQIRF)
        (quote . g$11135$CQIRF)
        (letrec-syntax . g$11133$CQIRF)
        (let-syntax . g$11132$CQIRF)
        (set! . g$11131$CQIRF)
        (begin . g$11127$CQIRF)
        (define-syntax . g$11125$CQIRF)
        (define . g$11124$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11614$CQIRF
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5062$CQIRF)
        (remv . g$5063$CQIRF)
        (remp . g$5043$CQIRF)
        (remq . g$5064$CQIRF)
        (partition . g$5042$CQIRF)
        (memv . g$5050$CQIRF)
        (memq . g$5049$CQIRF)
        (memp . g$5052$CQIRF)
        (member . g$5051$CQIRF)
        (exists . g$5056$CQIRF)
        (for-all . g$5055$CQIRF)
        (fold-right . g$5061$CQIRF)
        (fold-left . g$5060$CQIRF)
        (find . g$5041$CQIRF)
        (filter . g$5044$CQIRF)
        (cons* . g$5059$CQIRF)
        (assv . g$5046$CQIRF)
        (assq . g$5045$CQIRF)
        (assp . g$5048$CQIRF)
        (assoc . g$5047$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11615$CQIRF
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$6600$CQIRF)
        (call-with-input-file . g$6599$CQIRF)
        (write-char . g$6591$CQIRF)
        (write . g$11510$CQIRF)
        (with-output-to-file . g$6598$CQIRF)
        (with-input-from-file . g$6597$CQIRF)
        (read-char . g$6590$CQIRF)
        (read . g$11509$CQIRF)
        (peek-char . g$6589$CQIRF)
        (open-output-file . g$11508$CQIRF)
        (open-input-file . g$11507$CQIRF)
        (newline . g$6601$CQIRF)
        (display . g$11506$CQIRF)
        (close-output-port . g$11505$CQIRF)
        (close-input-port . g$11504$CQIRF)
        (eof-object? . g$11503$CQIRF)
        (eof-object . g$11502$CQIRF)
        (current-error-port . g$11501$CQIRF)
        (current-output-port . g$11500$CQIRF)
        (current-input-port . g$11499$CQIRF)
        (output-port? . g$11498$CQIRF)
        (input-port? . g$11497$CQIRF)
        (make-i/o-write-error . g$6037$CQIRF)
        (make-i/o-read-error . g$6024$CQIRF)
        (make-i/o-port-error . g$6132$CQIRF)
        (make-i/o-invalid-position-error . g$6050$CQIRF)
        (make-i/o-filename-error . g$6065$CQIRF)
        (make-i/o-file-protection-error . g$6080$CQIRF)
        (make-i/o-file-is-read-only-error . g$6093$CQIRF)
        (make-i/o-file-does-not-exist-error . g$6119$CQIRF)
        (make-i/o-file-already-exists-error . g$6106$CQIRF)
        (make-i/o-error . g$6011$CQIRF)
        (i/o-write-error? . g$6038$CQIRF)
        (i/o-read-error? . g$6025$CQIRF)
        (i/o-port-error? . g$6134$CQIRF)
        (i/o-invalid-position-error? . g$6052$CQIRF)
        (i/o-error-position . g$6053$CQIRF)
        (i/o-filename-error? . g$6067$CQIRF)
        (i/o-file-protection-error? . g$6081$CQIRF)
        (i/o-file-is-read-only-error? . g$6094$CQIRF)
        (i/o-file-does-not-exist-error? . g$6120$CQIRF)
        (i/o-file-already-exists-error? . g$6107$CQIRF)
        (i/o-error? . g$6012$CQIRF)
        (i/o-error-port . g$6135$CQIRF)
        (i/o-error-filename . g$6068$CQIRF)
        (&i/o-port . g$11224$CQIRF)
        (&i/o-file-does-not-exist . g$11223$CQIRF)
        (&i/o-file-already-exists . g$11222$CQIRF)
        (&i/o-file-is-read-only . g$11221$CQIRF)
        (&i/o-file-protection . g$11220$CQIRF)
        (&i/o-filename . g$11219$CQIRF)
        (&i/o-invalid-position . g$11218$CQIRF)
        (&i/o-write . g$11217$CQIRF)
        (&i/o-read . g$11216$CQIRF)
        (&i/o . g$11215$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11616$CQIRF
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$11458$CQIRF)
        (utf32->string . g$11426$CQIRF)
        (utf16->string . g$11425$CQIRF)
        (utf8->string . g$11424$CQIRF)
        (uint-list->bytevector . g$11423$CQIRF)
        (u8-list->bytevector . g$11422$CQIRF)
        (string->utf8 . g$11421$CQIRF)
        (string->utf32 . g$11420$CQIRF)
        (string->utf16 . g$11419$CQIRF)
        (sint-list->bytevector . g$11418$CQIRF)
        (native-endianness . g$5671$CQIRF)
        (bytevector? . g$5361$CQIRF)
        (bytevector=? . g$11417$CQIRF)
        (bytevector-uint-set! . g$11416$CQIRF)
        (bytevector-uint-ref . g$11415$CQIRF)
        (bytevector-u8-set! . g$11414$CQIRF)
        (bytevector-u8-ref . g$11413$CQIRF)
        (bytevector-u64-set! . g$5692$CQIRF)
        (bytevector-u64-ref . g$5688$CQIRF)
        (bytevector-u64-native-set! . g$5694$CQIRF)
        (bytevector-u64-native-ref . g$5690$CQIRF)
        (bytevector-u32-set! . g$5684$CQIRF)
        (bytevector-u32-ref . g$5680$CQIRF)
        (bytevector-u32-native-set! . g$5686$CQIRF)
        (bytevector-u32-native-ref . g$5682$CQIRF)
        (bytevector-u16-set! . g$5676$CQIRF)
        (bytevector-u16-ref . g$5672$CQIRF)
        (bytevector-u16-native-set! . g$5678$CQIRF)
        (bytevector-u16-native-ref . g$5674$CQIRF)
        (bytevector-sint-set! . g$11412$CQIRF)
        (bytevector-sint-ref . g$11411$CQIRF)
        (bytevector-s8-set! . g$11410$CQIRF)
        (bytevector-s8-ref . g$11409$CQIRF)
        (bytevector-s64-set! . g$5693$CQIRF)
        (bytevector-s64-ref . g$5689$CQIRF)
        (bytevector-s64-native-set! . g$5695$CQIRF)
        (bytevector-s64-native-ref . g$5691$CQIRF)
        (bytevector-s32-set! . g$5685$CQIRF)
        (bytevector-s32-ref . g$5681$CQIRF)
        (bytevector-s32-native-set! . g$5687$CQIRF)
        (bytevector-s32-native-ref . g$5683$CQIRF)
        (bytevector-s16-set! . g$5677$CQIRF)
        (bytevector-s16-ref . g$5673$CQIRF)
        (bytevector-s16-native-set! . g$5679$CQIRF)
        (bytevector-s16-native-ref . g$5675$CQIRF)
        (bytevector-length . g$11408$CQIRF)
        (bytevector-ieee-single-set! . g$11407$CQIRF)
        (bytevector-ieee-single-ref . g$11406$CQIRF)
        (bytevector-ieee-single-native-set! . g$5698$CQIRF)
        (bytevector-ieee-single-native-ref . g$5696$CQIRF)
        (bytevector-ieee-double-set! . g$11405$CQIRF)
        (bytevector-ieee-double-ref . g$11404$CQIRF)
        (bytevector-ieee-double-native-set! . g$5699$CQIRF)
        (bytevector-ieee-double-native-ref . g$5697$CQIRF)
        (bytevector-fill! . g$11403$CQIRF)
        (bytevector-copy! . g$11402$CQIRF)
        (bytevector-copy . g$11401$CQIRF)
        (bytevector->uint-list . g$11400$CQIRF)
        (bytevector->u8-list . g$11399$CQIRF)
        (bytevector->sint-list . g$11398$CQIRF)
        (endianness . g$11169$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11617$CQIRF
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11556$CQIRF)
        (string-titlecase . g$11555$CQIRF)
        (string-normalize-nfkd . g$6274$CQIRF)
        (string-normalize-nfkc . g$6273$CQIRF)
        (string-normalize-nfd . g$6272$CQIRF)
        (string-normalize-nfc . g$6271$CQIRF)
        (string-foldcase . g$11554$CQIRF)
        (string-downcase . g$11553$CQIRF)
        (string-ci>? . g$6258$CQIRF)
        (string-ci>=? . g$6260$CQIRF)
        (string-ci=? . g$6256$CQIRF)
        (string-ci<? . g$6257$CQIRF)
        (string-ci<=? . g$6259$CQIRF)
        (char-whitespace? . g$11552$CQIRF)
        (char-upper-case? . g$11551$CQIRF)
        (char-title-case? . g$11550$CQIRF)
        (char-numeric? . g$11549$CQIRF)
        (char-lower-case? . g$11548$CQIRF)
        (char-general-category . g$11547$CQIRF)
        (char-upcase . g$11546$CQIRF)
        (char-titlecase . g$11545$CQIRF)
        (char-foldcase . g$11544$CQIRF)
        (char-downcase . g$11543$CQIRF)
        (char-ci>? . g$6268$CQIRF)
        (char-ci>=? . g$6270$CQIRF)
        (char-ci=? . g$6266$CQIRF)
        (char-ci<? . g$6267$CQIRF)
        (char-ci<=? . g$6269$CQIRF)
        (char-alphabetic? . g$11542$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11618$CQIRF
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$11434$CQIRF)
        (raise-continuable . g$11433$CQIRF)
        (raise . g$11432$CQIRF)
        (guard . g$11184$CQIRF)
        (else . g$11173$CQIRF)
        (=> . g$11172$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11619$CQIRF
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6338$CQIRF)
        (bitwise-reverse-bit-field . g$11362$CQIRF)
        (bitwise-length . g$11361$CQIRF)
        (bitwise-if . g$6332$CQIRF)
        (bitwise-first-bit-set . g$11360$CQIRF)
        (bitwise-copy-bit-field . g$6335$CQIRF)
        (bitwise-copy-bit . g$6333$CQIRF)
        (bitwise-bit-set? . g$11359$CQIRF)
        (bitwise-bit-field . g$6334$CQIRF)
        (bitwise-bit-count . g$11358$CQIRF)
        (bitwise-xor . g$11357$CQIRF)
        (bitwise-ior . g$11356$CQIRF)
        (bitwise-and . g$11355$CQIRF)
        (bitwise-not . g$11354$CQIRF)
        (bitwise-arithmetic-shift-right . g$6337$CQIRF)
        (bitwise-arithmetic-shift-left . g$6336$CQIRF)
        (bitwise-arithmetic-shift . g$11353$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11620$CQIRF
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$6370$CQIRF)
        (fxxor . g$11384$CQIRF)
        (fxrotate-bit-field . g$6384$CQIRF)
        (fxreverse-bit-field . g$11383$CQIRF)
        (fxpositive? . g$6368$CQIRF)
        (fxodd? . g$6372$CQIRF)
        (fxnot . g$11382$CQIRF)
        (fxnegative? . g$6369$CQIRF)
        (fxmod0 . g$6367$CQIRF)
        (fxmod . g$6366$CQIRF)
        (fxmin . g$6374$CQIRF)
        (fxmax . g$6373$CQIRF)
        (fxlength . g$11381$CQIRF)
        (fxior . g$11380$CQIRF)
        (fxif . g$6378$CQIRF)
        (fxfirst-bit-set . g$11379$CQIRF)
        (fxeven? . g$6371$CQIRF)
        (fxdiv0-and-mod0 . g$11378$CQIRF)
        (fxdiv0 . g$6365$CQIRF)
        (fxdiv-and-mod . g$11377$CQIRF)
        (fxdiv . g$6364$CQIRF)
        (fxcopy-bit-field . g$6381$CQIRF)
        (fxcopy-bit . g$6379$CQIRF)
        (fxbit-set? . g$11376$CQIRF)
        (fxbit-field . g$6380$CQIRF)
        (fxbit-count . g$11375$CQIRF)
        (fxarithmetic-shift-right . g$6383$CQIRF)
        (fxarithmetic-shift-left . g$6382$CQIRF)
        (fxarithmetic-shift . g$11374$CQIRF)
        (fxand . g$11373$CQIRF)
        (fx>? . g$11372$CQIRF)
        (fx>=? . g$11371$CQIRF)
        (fx=? . g$11370$CQIRF)
        (fx<? . g$11369$CQIRF)
        (fx<=? . g$11368$CQIRF)
        (fx-/carry . g$6376$CQIRF)
        (fx- . g$11367$CQIRF)
        (fx+/carry . g$6377$CQIRF)
        (fx+ . g$11366$CQIRF)
        (fx*/carry . g$6375$CQIRF)
        (fx* . g$11365$CQIRF)
        (greatest-fixnum . g$11364$CQIRF)
        (least-fixnum . g$11363$CQIRF)
        (fixnum-width . g$5367$CQIRF)
        (fixnum? . g$5365$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11621$CQIRF
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6189$CQIRF)
        (no-infinities-violation? . g$6176$CQIRF)
        (make-no-nans-violation . g$6188$CQIRF)
        (make-no-infinities-violation . g$6175$CQIRF)
        (real->flonum . g$11397$CQIRF)
        (flzero? . g$6489$CQIRF)
        (fltruncate . g$6484$CQIRF)
        (fltan . g$6474$CQIRF)
        (flsqrt . g$6479$CQIRF)
        (flsin . g$6472$CQIRF)
        (flround . g$6485$CQIRF)
        (flpositive? . g$6487$CQIRF)
        (flonum? . g$5366$CQIRF)
        (flodd? . g$6491$CQIRF)
        (flnumerator . g$11396$CQIRF)
        (flnegative? . g$6488$CQIRF)
        (flnan? . g$6471$CQIRF)
        (flmod0 . g$6467$CQIRF)
        (flmod . g$6466$CQIRF)
        (flmin . g$6493$CQIRF)
        (flmax . g$6492$CQIRF)
        (fllog . g$6478$CQIRF)
        (flinteger? . g$6468$CQIRF)
        (flinfinite? . g$6470$CQIRF)
        (flfloor . g$6483$CQIRF)
        (flfinite? . g$6469$CQIRF)
        (flexpt . g$6481$CQIRF)
        (flexp . g$6480$CQIRF)
        (fleven? . g$6490$CQIRF)
        (fldiv0-and-mod0 . g$6463$CQIRF)
        (fldiv0 . g$6465$CQIRF)
        (fldiv-and-mod . g$6462$CQIRF)
        (fldiv . g$6464$CQIRF)
        (fldenominator . g$11395$CQIRF)
        (flcos . g$6473$CQIRF)
        (flceiling . g$6482$CQIRF)
        (flatan . g$6477$CQIRF)
        (flasin . g$6475$CQIRF)
        (flacos . g$6476$CQIRF)
        (flabs . g$6486$CQIRF)
        (fl>? . g$11394$CQIRF)
        (fl>=? . g$11393$CQIRF)
        (fl=? . g$11392$CQIRF)
        (fl<? . g$11391$CQIRF)
        (fl<=? . g$11390$CQIRF)
        (fl/ . g$11389$CQIRF)
        (fl- . g$11388$CQIRF)
        (fl+ . g$11387$CQIRF)
        (fl* . g$11386$CQIRF)
        (fixnum->flonum . g$11385$CQIRF)
        (&no-nans . g$11228$CQIRF)
        (&no-infinities . g$11227$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11622$CQIRF
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$11522$CQIRF)
        (string-ci-hash . g$11521$CQIRF)
        (string-hash . g$11520$CQIRF)
        (equal-hash . g$11519$CQIRF)
        (hashtable-equivalence-function . g$11518$CQIRF)
        (make-hashtable . g$11517$CQIRF)
        (hashtable-hash-function . g$11516$CQIRF)
        (make-eqv-hashtable . g$5633$CQIRF)
        (make-eq-hashtable . g$5632$CQIRF)
        (hashtable? . g$11515$CQIRF)
        (hashtable-update! . g$5639$CQIRF)
        (hashtable-size . g$5634$CQIRF)
        (hashtable-set! . g$5636$CQIRF)
        (hashtable-ref . g$5635$CQIRF)
        (hashtable-mutable? . g$11514$CQIRF)
        (hashtable-keys . g$11513$CQIRF)
        (hashtable-entries . g$11512$CQIRF)
        (hashtable-delete! . g$5637$CQIRF)
        (hashtable-copy . g$11511$CQIRF)
        (hashtable-contains? . g$5638$CQIRF)
        (hashtable-clear! . g$5640$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11623$CQIRF
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$11503$CQIRF)
        (eof-object . g$11502$CQIRF)
        (current-error-port . g$11501$CQIRF)
        (current-output-port . g$11500$CQIRF)
        (current-input-port . g$11499$CQIRF)
        (output-port? . g$11498$CQIRF)
        (input-port? . g$11497$CQIRF)
        (utf-8-codec . g$11496$CQIRF)
        (utf-16-codec . g$11495$CQIRF)
        (transcoder-error-handling-mode . g$11494$CQIRF)
        (transcoder-eol-style . g$11493$CQIRF)
        (transcoder-codec . g$11492$CQIRF)
        (transcoded-port . g$11491$CQIRF)
        (textual-port? . g$11490$CQIRF)
        (string->bytevector . g$11489$CQIRF)
        (standard-output-port . g$11488$CQIRF)
        (standard-input-port . g$11487$CQIRF)
        (standard-error-port . g$11486$CQIRF)
        (set-port-position! . g$11485$CQIRF)
        (put-u8 . g$11484$CQIRF)
        (put-string . g$11483$CQIRF)
        (put-datum . g$6569$CQIRF)
        (put-char . g$11482$CQIRF)
        (put-bytevector . g$11481$CQIRF)
        (port? . g$6574$CQIRF)
        (port-transcoder . g$11480$CQIRF)
        (port-position . g$11479$CQIRF)
        (port-has-set-port-position!? . g$11478$CQIRF)
        (port-has-port-position? . g$11477$CQIRF)
        (port-eof? . g$11476$CQIRF)
        (output-port-buffer-mode . g$11475$CQIRF)
        (open-string-output-port . g$6573$CQIRF)
        (open-string-input-port . g$11474$CQIRF)
        (open-file-output-port . g$11473$CQIRF)
        (open-file-input/output-port . g$11472$CQIRF)
        (open-file-input-port . g$11471$CQIRF)
        (open-bytevector-output-port . g$11470$CQIRF)
        (open-bytevector-input-port . g$11469$CQIRF)
        (native-transcoder . g$11468$CQIRF)
        (native-eol-style . g$11467$CQIRF)
        (make-transcoder . g$11466$CQIRF)
        (latin-1-codec . g$11465$CQIRF)
        (make-i/o-write-error . g$6037$CQIRF)
        (make-i/o-read-error . g$6024$CQIRF)
        (make-i/o-port-error . g$6132$CQIRF)
        (make-i/o-invalid-position-error . g$6050$CQIRF)
        (make-i/o-filename-error . g$6065$CQIRF)
        (make-i/o-file-protection-error . g$6080$CQIRF)
        (make-i/o-file-is-read-only-error . g$6093$CQIRF)
        (make-i/o-file-does-not-exist-error . g$6119$CQIRF)
        (make-i/o-file-already-exists-error . g$6106$CQIRF)
        (make-i/o-error . g$6011$CQIRF)
        (make-i/o-encoding-error . g$6160$CQIRF)
        (make-i/o-decoding-error . g$6147$CQIRF)
        (make-custom-textual-output-port . g$11464$CQIRF)
        (make-custom-textual-input/output-port . g$11463$CQIRF)
        (make-custom-textual-input-port . g$11462$CQIRF)
        (make-custom-binary-output-port . g$11461$CQIRF)
        (make-custom-binary-input/output-port . g$11460$CQIRF)
        (make-custom-binary-input-port . g$11459$CQIRF)
        (lookahead-u8 . g$11457$CQIRF)
        (lookahead-char . g$11456$CQIRF)
        (i/o-write-error? . g$6038$CQIRF)
        (i/o-read-error? . g$6025$CQIRF)
        (i/o-port-error? . g$6134$CQIRF)
        (i/o-invalid-position-error? . g$6052$CQIRF)
        (i/o-error-position . g$6053$CQIRF)
        (i/o-filename-error? . g$6067$CQIRF)
        (i/o-file-protection-error? . g$6081$CQIRF)
        (i/o-file-is-read-only-error? . g$6094$CQIRF)
        (i/o-file-does-not-exist-error? . g$6120$CQIRF)
        (i/o-file-already-exists-error? . g$6107$CQIRF)
        (i/o-error? . g$6012$CQIRF)
        (i/o-error-port . g$6135$CQIRF)
        (i/o-error-filename . g$6068$CQIRF)
        (i/o-encoding-error? . g$6162$CQIRF)
        (i/o-encoding-error-char . g$6163$CQIRF)
        (i/o-decoding-error? . g$6148$CQIRF)
        (get-u8 . g$11455$CQIRF)
        (get-string-n! . g$11454$CQIRF)
        (get-string-n . g$11453$CQIRF)
        (get-string-all . g$11452$CQIRF)
        (get-line . g$11451$CQIRF)
        (get-datum . g$6570$CQIRF)
        (get-char . g$11450$CQIRF)
        (get-bytevector-some . g$11449$CQIRF)
        (get-bytevector-n! . g$11448$CQIRF)
        (get-bytevector-n . g$11447$CQIRF)
        (get-bytevector-all . g$11446$CQIRF)
        (flush-output-port . g$11445$CQIRF)
        (close-port . g$11444$CQIRF)
        (call-with-string-output-port . g$6575$CQIRF)
        (call-with-port . g$6576$CQIRF)
        (call-with-bytevector-output-port . g$11443$CQIRF)
        (bytevector->string . g$11442$CQIRF)
        (buffer-mode? . g$11441$CQIRF)
        (binary-port? . g$11440$CQIRF)
        (&i/o-encoding . g$11226$CQIRF)
        (&i/o-decoding . g$11225$CQIRF)
        (&i/o-port . g$11224$CQIRF)
        (&i/o-file-does-not-exist . g$11223$CQIRF)
        (&i/o-file-already-exists . g$11222$CQIRF)
        (&i/o-file-is-read-only . g$11221$CQIRF)
        (&i/o-file-protection . g$11220$CQIRF)
        (&i/o-filename . g$11219$CQIRF)
        (&i/o-invalid-position . g$11218$CQIRF)
        (&i/o-write . g$11217$CQIRF)
        (&i/o-read . g$11216$CQIRF)
        (&i/o . g$11215$CQIRF)
        (error-handling-mode . g$11188$CQIRF)
        (file-options . g$11187$CQIRF)
        (buffer-mode . g$11186$CQIRF)
        (eol-style . g$11185$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11624$CQIRF
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$6661$CQIRF)
        (enum-set=? . g$6668$CQIRF)
        (enum-set-universe . g$6662$CQIRF)
        (enum-set-union . g$6669$CQIRF)
        (enum-set-subset? . g$6667$CQIRF)
        (enum-set-projection . g$6673$CQIRF)
        (enum-set-member? . g$6666$CQIRF)
        (enum-set-intersection . g$6670$CQIRF)
        (enum-set-indexer . g$6663$CQIRF)
        (enum-set-difference . g$6671$CQIRF)
        (enum-set-constructor . g$6664$CQIRF)
        (enum-set-complement . g$6672$CQIRF)
        (enum-set->list . g$6665$CQIRF)
        (define-enumeration . g$11199$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11625$CQIRF
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$5929$CQIRF)
        (warning? . g$5848$CQIRF)
        (violation? . g$5887$CQIRF)
        (undefined-violation? . g$5999$CQIRF)
        (syntax-violation? . g$5984$CQIRF)
        (syntax-violation-subform . g$5986$CQIRF)
        (syntax-violation-form . g$5985$CQIRF)
        (simple-conditions . g$11431$CQIRF)
        (serious-condition? . g$5861$CQIRF)
        (non-continuable-violation? . g$5943$CQIRF)
        (message-condition? . g$5834$CQIRF)
        (make-who-condition . g$5927$CQIRF)
        (make-warning . g$5847$CQIRF)
        (make-violation . g$5886$CQIRF)
        (make-undefined-violation . g$5998$CQIRF)
        (make-syntax-violation . g$5981$CQIRF)
        (make-serious-condition . g$5860$CQIRF)
        (make-non-continuable-violation . g$5942$CQIRF)
        (make-message-condition . g$5832$CQIRF)
        (make-lexical-violation . g$5968$CQIRF)
        (make-irritants-condition . g$5912$CQIRF)
        (make-implementation-restriction-violation . g$5955$CQIRF)
        (make-error . g$5873$CQIRF)
        (make-assertion-violation . g$5899$CQIRF)
        (lexical-violation? . g$5969$CQIRF)
        (irritants-condition? . g$5914$CQIRF)
        (implementation-restriction-violation? . g$5956$CQIRF)
        (error? . g$5874$CQIRF)
        (condition-who . g$5930$CQIRF)
        (condition-predicate . g$11430$CQIRF)
        (condition-message . g$5835$CQIRF)
        (condition-irritants . g$5915$CQIRF)
        (condition-accessor . g$11429$CQIRF)
        (condition . g$11428$CQIRF)
        (assertion-violation? . g$5900$CQIRF)
        (condition? . g$11427$CQIRF)
        (&non-continuable . g$11214$CQIRF)
        (&undefined . g$11213$CQIRF)
        (&syntax . g$11212$CQIRF)
        (&lexical . g$11211$CQIRF)
        (&implementation-restriction . g$11210$CQIRF)
        (&who . g$11209$CQIRF)
        (&irritants . g$11208$CQIRF)
        (&assertion . g$11207$CQIRF)
        (&violation . g$11206$CQIRF)
        (&error . g$11205$CQIRF)
        (&serious . g$11204$CQIRF)
        (&warning . g$11203$CQIRF)
        (&message . g$11202$CQIRF)
        (&condition . g$11201$CQIRF)
        (define-condition-type . g$11200$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11626$CQIRF
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$11534$CQIRF)
        (record-type-uid . g$11533$CQIRF)
        (record-type-sealed? . g$11532$CQIRF)
        (record-type-parent . g$11531$CQIRF)
        (record-type-opaque? . g$11530$CQIRF)
        (record-type-name . g$11529$CQIRF)
        (record-type-generative? . g$11528$CQIRF)
        (record-type-field-names . g$11527$CQIRF)
        (record-rtd . g$11526$CQIRF)
        (record-field-mutable? . g$11525$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11627$CQIRF
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$11541$CQIRF)
        (record-predicate . g$11540$CQIRF)
        (record-mutator . g$11539$CQIRF)
        (record-constructor . g$11538$CQIRF)
        (record-accessor . g$11537$CQIRF)
        (make-record-type-descriptor . g$11536$CQIRF)
        (make-record-constructor-descriptor . g$11535$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11628$CQIRF
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11198$CQIRF)
        (parent-rtd . g$11197$CQIRF)
        (nongenerative . g$11196$CQIRF)
        (opaque . g$11195$CQIRF)
        (sealed . g$11194$CQIRF)
        (protocol . g$11193$CQIRF)
        (parent . g$11192$CQIRF)
        (immutable . g$11191$CQIRF)
        (mutable . g$11190$CQIRF)
        (fields . g$11189$CQIRF)
        (record-constructor-descriptor . g$11150$CQIRF)
        (record-type-descriptor . g$11149$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9284$CQIRF
      'g$11629$CQIRF
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$7968$CQIRF)
        (&no-nans-rcd . g$6191$CQIRF)
        (&no-nans-rtd . g$6190$CQIRF)
        (&no-infinities-rcd . g$6178$CQIRF)
        (&no-infinities-rtd . g$6177$CQIRF)
        (&i/o-encoding-rcd . g$6165$CQIRF)
        (&i/o-encoding-rtd . g$6164$CQIRF)
        (&i/o-decoding-rcd . g$6150$CQIRF)
        (&i/o-decoding-rtd . g$6149$CQIRF)
        (&i/o-port-rcd . g$6137$CQIRF)
        (&i/o-port-rtd . g$6136$CQIRF)
        (&i/o-file-does-not-exist-rcd . g$6122$CQIRF)
        (&i/o-file-does-not-exist-rtd . g$6121$CQIRF)
        (&i/o-file-already-exists-rcd . g$6109$CQIRF)
        (&i/o-file-already-exists-rtd . g$6108$CQIRF)
        (&i/o-file-is-read-only-rcd . g$6096$CQIRF)
        (&i/o-file-is-read-only-rtd . g$6095$CQIRF)
        (&i/o-file-protection-rcd . g$6083$CQIRF)
        (&i/o-file-protection-rtd . g$6082$CQIRF)
        (&i/o-filename-rcd . g$6070$CQIRF)
        (&i/o-filename-rtd . g$6069$CQIRF)
        (&i/o-invalid-position-rcd . g$6055$CQIRF)
        (&i/o-invalid-position-rtd . g$6054$CQIRF)
        (&i/o-write-rcd . g$6040$CQIRF)
        (&i/o-write-rtd . g$6039$CQIRF)
        (&i/o-read-rcd . g$6027$CQIRF)
        (&i/o-read-rtd . g$6026$CQIRF)
        (&i/o-rcd . g$6014$CQIRF)
        (&i/o-rtd . g$6013$CQIRF)
        (&undefined-rcd . g$6001$CQIRF)
        (&undefined-rtd . g$6000$CQIRF)
        (&syntax-rcd . g$5988$CQIRF)
        (&syntax-rtd . g$5987$CQIRF)
        (&lexical-rcd . g$5971$CQIRF)
        (&lexical-rtd . g$5970$CQIRF)
        (&implementation-restriction-rcd . g$5958$CQIRF)
        (&implementation-restriction-rtd . g$5957$CQIRF)
        (&non-continuable-rcd . g$5945$CQIRF)
        (&non-continuable-rtd . g$5944$CQIRF)
        (&who-rcd . g$5932$CQIRF)
        (&who-rtd . g$5931$CQIRF)
        (&irritants-rcd . g$5917$CQIRF)
        (&irritants-rtd . g$5916$CQIRF)
        (&assertion-rcd . g$5902$CQIRF)
        (&assertion-rtd . g$5901$CQIRF)
        (&violation-rcd . g$5889$CQIRF)
        (&violation-rtd . g$5888$CQIRF)
        (&error-rcd . g$5876$CQIRF)
        (&error-rtd . g$5875$CQIRF)
        (&serious-rcd . g$5863$CQIRF)
        (&serious-rtd . g$5862$CQIRF)
        (&warning-rcd . g$5850$CQIRF)
        (&warning-rtd . g$5849$CQIRF)
        (&message-rcd . g$5837$CQIRF)
        (&message-rtd . g$5836$CQIRF)
        (&condition-rcd . g$5797$CQIRF)
        (&condition-rtd . g$5796$CQIRF)
        (library-letrec* . g$11593$CQIRF)
        (annotation-stripped . g$11592$CQIRF)
        (annotation-source . g$11591$CQIRF)
        (annotation-expression . g$11590$CQIRF)
        (annotation? . g$11589$CQIRF)
        (read-annotated . g$11588$CQIRF)
        (tanh . g$11587$CQIRF)
        (cosh . g$11586$CQIRF)
        (sinh . g$11585$CQIRF)
        (make-guid . g$11584$CQIRF)
        (unspecified? . g$11583$CQIRF)
        (make-list . g$5040$CQIRF)
        (last-pair . g$5039$CQIRF)
        (load-r5rs . g$11582$CQIRF)
        (license . g$11581$CQIRF)
        (stacktrace . g$11580$CQIRF)
        (ironscheme-build . g$11076$CQIRF)
        (define-clr-class-internal . g$11579$CQIRF)
        (clr-field-set!-internal . g$11578$CQIRF)
        (clr-field-get-internal . g$11577$CQIRF)
        (clr-cast-internal . g$11576$CQIRF)
        (clr-call-internal . g$11575$CQIRF)
        (clr-new-internal . g$11574$CQIRF)
        (clr-new-array-internal . g$11573$CQIRF)
        (clr-is-internal . g$11572$CQIRF)
        (clr-reference-internal . g$11571$CQIRF)
        (clr-using-internal . g$11570$CQIRF)
        (syntax-error . g$8087$CQIRF)
        (syntax-dispatch . g$7963$CQIRF)
        (compile-core . g$11569$CQIRF)
        (eval-core . g$11568$CQIRF)
        (remove-location . g$11567$CQIRF)
        (set-symbol-value! . g$11566$CQIRF)
        (symbol-value . g$11565$CQIRF)
        (symbol-bound? . g$11564$CQIRF)
        (ungensym . g$11563$CQIRF)
        (gensym . g$11562$CQIRF)
        (void . g$11561$CQIRF)
        (load-serialized-library . g$11560$CQIRF)
        (serialize-library . g$11559$CQIRF)
        (compile-system-libraries . g$11079$CQIRF)
        (compile->closure . g$11081$CQIRF)
        (compile . g$11080$CQIRF)
        (load . g$11075$CQIRF)
        (string-normalize . g$11558$CQIRF)
        (interaction-environment . g$8097$CQIRF)
        (char-ready? . g$11557$CQIRF)
        (string-upcase . g$11556$CQIRF)
        (string-titlecase . g$11555$CQIRF)
        (string-normalize-nfkd . g$6274$CQIRF)
        (string-normalize-nfkc . g$6273$CQIRF)
        (string-normalize-nfd . g$6272$CQIRF)
        (string-normalize-nfc . g$6271$CQIRF)
        (string-foldcase . g$11554$CQIRF)
        (string-downcase . g$11553$CQIRF)
        (string-ci>? . g$6258$CQIRF)
        (string-ci>=? . g$6260$CQIRF)
        (string-ci=? . g$6256$CQIRF)
        (string-ci<? . g$6257$CQIRF)
        (string-ci<=? . g$6259$CQIRF)
        (char-whitespace? . g$11552$CQIRF)
        (char-upper-case? . g$11551$CQIRF)
        (char-title-case? . g$11550$CQIRF)
        (char-numeric? . g$11549$CQIRF)
        (char-lower-case? . g$11548$CQIRF)
        (char-general-category . g$11547$CQIRF)
        (char-upcase . g$11546$CQIRF)
        (char-titlecase . g$11545$CQIRF)
        (char-foldcase . g$11544$CQIRF)
        (char-downcase . g$11543$CQIRF)
        (char-ci>? . g$6268$CQIRF)
        (char-ci>=? . g$6270$CQIRF)
        (char-ci=? . g$6266$CQIRF)
        (char-ci<? . g$6267$CQIRF)
        (char-ci<=? . g$6269$CQIRF)
        (char-alphabetic? . g$11542$CQIRF)
        (variable-transformer-procedure . g$7775$CQIRF)
        (variable-transformer? . g$7774$CQIRF)
        (make-variable-transformer . g$7772$CQIRF)
        (identifier? . g$8091$CQIRF)
        (generate-temporaries . g$8080$CQIRF)
        (free-identifier=? . g$8081$CQIRF)
        (syntax->datum . g$8093$CQIRF)
        (datum->syntax . g$8092$CQIRF)
        (bound-identifier=? . g$8082$CQIRF)
        (record-type-descriptor? . g$11541$CQIRF)
        (record-predicate . g$11540$CQIRF)
        (record-mutator . g$11539$CQIRF)
        (record-constructor . g$11538$CQIRF)
        (record-accessor . g$11537$CQIRF)
        (make-record-type-descriptor . g$11536$CQIRF)
        (make-record-constructor-descriptor . g$11535$CQIRF)
        (record? . g$11534$CQIRF)
        (record-type-uid . g$11533$CQIRF)
        (record-type-sealed? . g$11532$CQIRF)
        (record-type-parent . g$11531$CQIRF)
        (record-type-opaque? . g$11530$CQIRF)
        (record-type-name . g$11529$CQIRF)
        (record-type-generative? . g$11528$CQIRF)
        (record-type-field-names . g$11527$CQIRF)
        (record-rtd . g$11526$CQIRF)
        (record-field-mutable? . g$11525$CQIRF)
        (delete-file . g$5665$CQIRF)
        (file-exists? . g$5664$CQIRF)
        (vector-sort! . g$11524$CQIRF)
        (vector-sort . g$11523$CQIRF)
        (list-sort . g$6227$CQIRF)
        (symbol-hash . g$11522$CQIRF)
        (string-ci-hash . g$11521$CQIRF)
        (string-hash . g$11520$CQIRF)
        (equal-hash . g$11519$CQIRF)
        (hashtable-equivalence-function . g$11518$CQIRF)
        (make-hashtable . g$11517$CQIRF)
        (hashtable-hash-function . g$11516$CQIRF)
        (make-eqv-hashtable . g$5633$CQIRF)
        (make-eq-hashtable . g$5632$CQIRF)
        (hashtable? . g$11515$CQIRF)
        (hashtable-update! . g$5639$CQIRF)
        (hashtable-size . g$5634$CQIRF)
        (hashtable-set! . g$5636$CQIRF)
        (hashtable-ref . g$5635$CQIRF)
        (hashtable-mutable? . g$11514$CQIRF)
        (hashtable-keys . g$11513$CQIRF)
        (hashtable-entries . g$11512$CQIRF)
        (hashtable-delete! . g$5637$CQIRF)
        (hashtable-copy . g$11511$CQIRF)
        (hashtable-contains? . g$5638$CQIRF)
        (hashtable-clear! . g$5640$CQIRF)
        (call-with-output-file . g$6600$CQIRF)
        (call-with-input-file . g$6599$CQIRF)
        (write-char . g$6591$CQIRF)
        (write . g$11510$CQIRF)
        (with-output-to-file . g$6598$CQIRF)
        (with-input-from-file . g$6597$CQIRF)
        (read-char . g$6590$CQIRF)
        (read . g$11509$CQIRF)
        (peek-char . g$6589$CQIRF)
        (open-output-file . g$11508$CQIRF)
        (open-input-file . g$11507$CQIRF)
        (newline . g$6601$CQIRF)
        (display . g$11506$CQIRF)
        (close-output-port . g$11505$CQIRF)
        (close-input-port . g$11504$CQIRF)
        (eof-object? . g$11503$CQIRF)
        (eof-object . g$11502$CQIRF)
        (current-error-port . g$11501$CQIRF)
        (current-output-port . g$11500$CQIRF)
        (current-input-port . g$11499$CQIRF)
        (output-port? . g$11498$CQIRF)
        (input-port? . g$11497$CQIRF)
        (utf-8-codec . g$11496$CQIRF)
        (utf-16-codec . g$11495$CQIRF)
        (transcoder-error-handling-mode . g$11494$CQIRF)
        (transcoder-eol-style . g$11493$CQIRF)
        (transcoder-codec . g$11492$CQIRF)
        (transcoded-port . g$11491$CQIRF)
        (textual-port? . g$11490$CQIRF)
        (string->bytevector . g$11489$CQIRF)
        (standard-output-port . g$11488$CQIRF)
        (standard-input-port . g$11487$CQIRF)
        (standard-error-port . g$11486$CQIRF)
        (set-port-position! . g$11485$CQIRF)
        (put-u8 . g$11484$CQIRF)
        (put-string . g$11483$CQIRF)
        (put-datum . g$6569$CQIRF)
        (put-char . g$11482$CQIRF)
        (put-bytevector . g$11481$CQIRF)
        (port? . g$6574$CQIRF)
        (port-transcoder . g$11480$CQIRF)
        (port-position . g$11479$CQIRF)
        (port-has-set-port-position!? . g$11478$CQIRF)
        (port-has-port-position? . g$11477$CQIRF)
        (port-eof? . g$11476$CQIRF)
        (output-port-buffer-mode . g$11475$CQIRF)
        (open-string-output-port . g$6573$CQIRF)
        (open-string-input-port . g$11474$CQIRF)
        (open-file-output-port . g$11473$CQIRF)
        (open-file-input/output-port . g$11472$CQIRF)
        (open-file-input-port . g$11471$CQIRF)
        (open-bytevector-output-port . g$11470$CQIRF)
        (open-bytevector-input-port . g$11469$CQIRF)
        (native-transcoder . g$11468$CQIRF)
        (native-eol-style . g$11467$CQIRF)
        (make-transcoder . g$11466$CQIRF)
        (latin-1-codec . g$11465$CQIRF)
        (make-i/o-write-error . g$6037$CQIRF)
        (make-i/o-read-error . g$6024$CQIRF)
        (make-i/o-port-error . g$6132$CQIRF)
        (make-i/o-invalid-position-error . g$6050$CQIRF)
        (make-i/o-filename-error . g$6065$CQIRF)
        (make-i/o-file-protection-error . g$6080$CQIRF)
        (make-i/o-file-is-read-only-error . g$6093$CQIRF)
        (make-i/o-file-does-not-exist-error . g$6119$CQIRF)
        (make-i/o-file-already-exists-error . g$6106$CQIRF)
        (make-i/o-error . g$6011$CQIRF)
        (make-i/o-encoding-error . g$6160$CQIRF)
        (make-i/o-decoding-error . g$6147$CQIRF)
        (make-custom-textual-output-port . g$11464$CQIRF)
        (make-custom-textual-input/output-port . g$11463$CQIRF)
        (make-custom-textual-input-port . g$11462$CQIRF)
        (make-custom-binary-output-port . g$11461$CQIRF)
        (make-custom-binary-input/output-port . g$11460$CQIRF)
        (make-custom-binary-input-port . g$11459$CQIRF)
        (make-bytevector . g$11458$CQIRF)
        (lookahead-u8 . g$11457$CQIRF)
        (lookahead-char . g$11456$CQIRF)
        (i/o-write-error? . g$6038$CQIRF)
        (i/o-read-error? . g$6025$CQIRF)
        (i/o-port-error? . g$6134$CQIRF)
        (i/o-invalid-position-error? . g$6052$CQIRF)
        (i/o-error-position . g$6053$CQIRF)
        (i/o-filename-error? . g$6067$CQIRF)
        (i/o-file-protection-error? . g$6081$CQIRF)
        (i/o-file-is-read-only-error? . g$6094$CQIRF)
        (i/o-file-does-not-exist-error? . g$6120$CQIRF)
        (i/o-file-already-exists-error? . g$6107$CQIRF)
        (i/o-error? . g$6012$CQIRF)
        (i/o-error-port . g$6135$CQIRF)
        (i/o-error-filename . g$6068$CQIRF)
        (i/o-encoding-error? . g$6162$CQIRF)
        (i/o-encoding-error-char . g$6163$CQIRF)
        (i/o-decoding-error? . g$6148$CQIRF)
        (get-u8 . g$11455$CQIRF)
        (get-string-n! . g$11454$CQIRF)
        (get-string-n . g$11453$CQIRF)
        (get-string-all . g$11452$CQIRF)
        (get-line . g$11451$CQIRF)
        (get-datum . g$6570$CQIRF)
        (get-char . g$11450$CQIRF)
        (get-bytevector-some . g$11449$CQIRF)
        (get-bytevector-n! . g$11448$CQIRF)
        (get-bytevector-n . g$11447$CQIRF)
        (get-bytevector-all . g$11446$CQIRF)
        (flush-output-port . g$11445$CQIRF)
        (close-port . g$11444$CQIRF)
        (call-with-string-output-port . g$6575$CQIRF)
        (call-with-port . g$6576$CQIRF)
        (call-with-bytevector-output-port . g$11443$CQIRF)
        (bytevector->string . g$11442$CQIRF)
        (buffer-mode? . g$11441$CQIRF)
        (binary-port? . g$11440$CQIRF)
        (scheme-report-environment . g$8070$CQIRF)
        (quotient . g$6206$CQIRF)
        (null-environment . g$8069$CQIRF)
        (remainder . g$6207$CQIRF)
        (modulo . g$6208$CQIRF)
        (inexact->exact . g$6203$CQIRF)
        (force . g$6210$CQIRF)
        (exact->inexact . g$6204$CQIRF)
        (exit . g$11439$CQIRF)
        (command-line . g$11071$CQIRF)
        (string-fill! . g$11438$CQIRF)
        (string-set! . g$11437$CQIRF)
        (set-cdr! . g$11436$CQIRF)
        (set-car! . g$11435$CQIRF)
        (remove . g$5062$CQIRF)
        (remv . g$5063$CQIRF)
        (remp . g$5043$CQIRF)
        (remq . g$5064$CQIRF)
        (partition . g$5042$CQIRF)
        (memv . g$5050$CQIRF)
        (memq . g$5049$CQIRF)
        (memp . g$5052$CQIRF)
        (member . g$5051$CQIRF)
        (exists . g$5056$CQIRF)
        (for-all . g$5055$CQIRF)
        (fold-right . g$5061$CQIRF)
        (fold-left . g$5060$CQIRF)
        (find . g$5041$CQIRF)
        (filter . g$5044$CQIRF)
        (cons* . g$5059$CQIRF)
        (assv . g$5046$CQIRF)
        (assq . g$5045$CQIRF)
        (assp . g$5048$CQIRF)
        (assoc . g$5047$CQIRF)
        (with-exception-handler . g$11434$CQIRF)
        (raise-continuable . g$11433$CQIRF)
        (raise . g$11432$CQIRF)
        (eval . g$8072$CQIRF)
        (environment . g$8068$CQIRF)
        (make-enumeration . g$6661$CQIRF)
        (enum-set=? . g$6668$CQIRF)
        (enum-set-universe . g$6662$CQIRF)
        (enum-set-union . g$6669$CQIRF)
        (enum-set-subset? . g$6667$CQIRF)
        (enum-set-projection . g$6673$CQIRF)
        (enum-set-member? . g$6666$CQIRF)
        (enum-set-intersection . g$6670$CQIRF)
        (enum-set-indexer . g$6663$CQIRF)
        (enum-set-difference . g$6671$CQIRF)
        (enum-set-constructor . g$6664$CQIRF)
        (enum-set-complement . g$6672$CQIRF)
        (enum-set->list . g$6665$CQIRF)
        (who-condition? . g$5929$CQIRF)
        (warning? . g$5848$CQIRF)
        (violation? . g$5887$CQIRF)
        (undefined-violation? . g$5999$CQIRF)
        (syntax-violation? . g$5984$CQIRF)
        (syntax-violation-subform . g$5986$CQIRF)
        (syntax-violation-form . g$5985$CQIRF)
        (syntax-violation . g$8090$CQIRF)
        (simple-conditions . g$11431$CQIRF)
        (serious-condition? . g$5861$CQIRF)
        (non-continuable-violation? . g$5943$CQIRF)
        (message-condition? . g$5834$CQIRF)
        (make-who-condition . g$5927$CQIRF)
        (make-warning . g$5847$CQIRF)
        (make-violation . g$5886$CQIRF)
        (make-undefined-violation . g$5998$CQIRF)
        (make-syntax-violation . g$5981$CQIRF)
        (make-serious-condition . g$5860$CQIRF)
        (make-non-continuable-violation . g$5942$CQIRF)
        (make-message-condition . g$5832$CQIRF)
        (make-lexical-violation . g$5968$CQIRF)
        (make-irritants-condition . g$5912$CQIRF)
        (make-implementation-restriction-violation . g$5955$CQIRF)
        (make-error . g$5873$CQIRF)
        (make-assertion-violation . g$5899$CQIRF)
        (lexical-violation? . g$5969$CQIRF)
        (irritants-condition? . g$5914$CQIRF)
        (implementation-restriction-violation? . g$5956$CQIRF)
        (error? . g$5874$CQIRF)
        (condition-who . g$5930$CQIRF)
        (condition-predicate . g$11430$CQIRF)
        (condition-message . g$5835$CQIRF)
        (condition-irritants . g$5915$CQIRF)
        (condition-accessor . g$11429$CQIRF)
        (condition . g$11428$CQIRF)
        (assertion-violation? . g$5900$CQIRF)
        (condition? . g$11427$CQIRF)
        (utf32->string . g$11426$CQIRF)
        (utf16->string . g$11425$CQIRF)
        (utf8->string . g$11424$CQIRF)
        (uint-list->bytevector . g$11423$CQIRF)
        (u8-list->bytevector . g$11422$CQIRF)
        (string->utf8 . g$11421$CQIRF)
        (string->utf32 . g$11420$CQIRF)
        (string->utf16 . g$11419$CQIRF)
        (sint-list->bytevector . g$11418$CQIRF)
        (native-endianness . g$5671$CQIRF)
        (bytevector? . g$5361$CQIRF)
        (bytevector=? . g$11417$CQIRF)
        (bytevector-uint-set! . g$11416$CQIRF)
        (bytevector-uint-ref . g$11415$CQIRF)
        (bytevector-u8-set! . g$11414$CQIRF)
        (bytevector-u8-ref . g$11413$CQIRF)
        (bytevector-u64-set! . g$5692$CQIRF)
        (bytevector-u64-ref . g$5688$CQIRF)
        (bytevector-u64-native-set! . g$5694$CQIRF)
        (bytevector-u64-native-ref . g$5690$CQIRF)
        (bytevector-u32-set! . g$5684$CQIRF)
        (bytevector-u32-ref . g$5680$CQIRF)
        (bytevector-u32-native-set! . g$5686$CQIRF)
        (bytevector-u32-native-ref . g$5682$CQIRF)
        (bytevector-u16-set! . g$5676$CQIRF)
        (bytevector-u16-ref . g$5672$CQIRF)
        (bytevector-u16-native-set! . g$5678$CQIRF)
        (bytevector-u16-native-ref . g$5674$CQIRF)
        (bytevector-sint-set! . g$11412$CQIRF)
        (bytevector-sint-ref . g$11411$CQIRF)
        (bytevector-s8-set! . g$11410$CQIRF)
        (bytevector-s8-ref . g$11409$CQIRF)
        (bytevector-s64-set! . g$5693$CQIRF)
        (bytevector-s64-ref . g$5689$CQIRF)
        (bytevector-s64-native-set! . g$5695$CQIRF)
        (bytevector-s64-native-ref . g$5691$CQIRF)
        (bytevector-s32-set! . g$5685$CQIRF)
        (bytevector-s32-ref . g$5681$CQIRF)
        (bytevector-s32-native-set! . g$5687$CQIRF)
        (bytevector-s32-native-ref . g$5683$CQIRF)
        (bytevector-s16-set! . g$5677$CQIRF)
        (bytevector-s16-ref . g$5673$CQIRF)
        (bytevector-s16-native-set! . g$5679$CQIRF)
        (bytevector-s16-native-ref . g$5675$CQIRF)
        (bytevector-length . g$11408$CQIRF)
        (bytevector-ieee-single-set! . g$11407$CQIRF)
        (bytevector-ieee-single-ref . g$11406$CQIRF)
        (bytevector-ieee-single-native-set! . g$5698$CQIRF)
        (bytevector-ieee-single-native-ref . g$5696$CQIRF)
        (bytevector-ieee-double-set! . g$11405$CQIRF)
        (bytevector-ieee-double-ref . g$11404$CQIRF)
        (bytevector-ieee-double-native-set! . g$5699$CQIRF)
        (bytevector-ieee-double-native-ref . g$5697$CQIRF)
        (bytevector-fill! . g$11403$CQIRF)
        (bytevector-copy! . g$11402$CQIRF)
        (bytevector-copy . g$11401$CQIRF)
        (bytevector->uint-list . g$11400$CQIRF)
        (bytevector->u8-list . g$11399$CQIRF)
        (bytevector->sint-list . g$11398$CQIRF)
        (no-nans-violation? . g$6189$CQIRF)
        (no-infinities-violation? . g$6176$CQIRF)
        (make-no-nans-violation . g$6188$CQIRF)
        (make-no-infinities-violation . g$6175$CQIRF)
        (real->flonum . g$11397$CQIRF)
        (flzero? . g$6489$CQIRF)
        (fltruncate . g$6484$CQIRF)
        (fltan . g$6474$CQIRF)
        (flsqrt . g$6479$CQIRF)
        (flsin . g$6472$CQIRF)
        (flround . g$6485$CQIRF)
        (flpositive? . g$6487$CQIRF)
        (flonum? . g$5366$CQIRF)
        (flodd? . g$6491$CQIRF)
        (flnumerator . g$11396$CQIRF)
        (flnegative? . g$6488$CQIRF)
        (flnan? . g$6471$CQIRF)
        (flmod0 . g$6467$CQIRF)
        (flmod . g$6466$CQIRF)
        (flmin . g$6493$CQIRF)
        (flmax . g$6492$CQIRF)
        (fllog . g$6478$CQIRF)
        (flinteger? . g$6468$CQIRF)
        (flinfinite? . g$6470$CQIRF)
        (flfloor . g$6483$CQIRF)
        (flfinite? . g$6469$CQIRF)
        (flexpt . g$6481$CQIRF)
        (flexp . g$6480$CQIRF)
        (fleven? . g$6490$CQIRF)
        (fldiv0-and-mod0 . g$6463$CQIRF)
        (fldiv0 . g$6465$CQIRF)
        (fldiv-and-mod . g$6462$CQIRF)
        (fldiv . g$6464$CQIRF)
        (fldenominator . g$11395$CQIRF)
        (flcos . g$6473$CQIRF)
        (flceiling . g$6482$CQIRF)
        (flatan . g$6477$CQIRF)
        (flasin . g$6475$CQIRF)
        (flacos . g$6476$CQIRF)
        (flabs . g$6486$CQIRF)
        (fl>? . g$11394$CQIRF)
        (fl>=? . g$11393$CQIRF)
        (fl=? . g$11392$CQIRF)
        (fl<? . g$11391$CQIRF)
        (fl<=? . g$11390$CQIRF)
        (fl/ . g$11389$CQIRF)
        (fl- . g$11388$CQIRF)
        (fl+ . g$11387$CQIRF)
        (fl* . g$11386$CQIRF)
        (fixnum->flonum . g$11385$CQIRF)
        (fxzero? . g$6370$CQIRF)
        (fxxor . g$11384$CQIRF)
        (fxrotate-bit-field . g$6384$CQIRF)
        (fxreverse-bit-field . g$11383$CQIRF)
        (fxpositive? . g$6368$CQIRF)
        (fxodd? . g$6372$CQIRF)
        (fxnot . g$11382$CQIRF)
        (fxnegative? . g$6369$CQIRF)
        (fxmod0 . g$6367$CQIRF)
        (fxmod . g$6366$CQIRF)
        (fxmin . g$6374$CQIRF)
        (fxmax . g$6373$CQIRF)
        (fxlength . g$11381$CQIRF)
        (fxior . g$11380$CQIRF)
        (fxif . g$6378$CQIRF)
        (fxfirst-bit-set . g$11379$CQIRF)
        (fxeven? . g$6371$CQIRF)
        (fxdiv0-and-mod0 . g$11378$CQIRF)
        (fxdiv0 . g$6365$CQIRF)
        (fxdiv-and-mod . g$11377$CQIRF)
        (fxdiv . g$6364$CQIRF)
        (fxcopy-bit-field . g$6381$CQIRF)
        (fxcopy-bit . g$6379$CQIRF)
        (fxbit-set? . g$11376$CQIRF)
        (fxbit-field . g$6380$CQIRF)
        (fxbit-count . g$11375$CQIRF)
        (fxarithmetic-shift-right . g$6383$CQIRF)
        (fxarithmetic-shift-left . g$6382$CQIRF)
        (fxarithmetic-shift . g$11374$CQIRF)
        (fxand . g$11373$CQIRF)
        (fx>? . g$11372$CQIRF)
        (fx>=? . g$11371$CQIRF)
        (fx=? . g$11370$CQIRF)
        (fx<? . g$11369$CQIRF)
        (fx<=? . g$11368$CQIRF)
        (fx-/carry . g$6376$CQIRF)
        (fx- . g$11367$CQIRF)
        (fx+/carry . g$6377$CQIRF)
        (fx+ . g$11366$CQIRF)
        (fx*/carry . g$6375$CQIRF)
        (fx* . g$11365$CQIRF)
        (greatest-fixnum . g$11364$CQIRF)
        (least-fixnum . g$11363$CQIRF)
        (fixnum-width . g$5367$CQIRF)
        (fixnum? . g$5365$CQIRF)
        (bitwise-rotate-bit-field . g$6338$CQIRF)
        (bitwise-reverse-bit-field . g$11362$CQIRF)
        (bitwise-length . g$11361$CQIRF)
        (bitwise-if . g$6332$CQIRF)
        (bitwise-first-bit-set . g$11360$CQIRF)
        (bitwise-copy-bit-field . g$6335$CQIRF)
        (bitwise-copy-bit . g$6333$CQIRF)
        (bitwise-bit-set? . g$11359$CQIRF)
        (bitwise-bit-field . g$6334$CQIRF)
        (bitwise-bit-count . g$11358$CQIRF)
        (bitwise-xor . g$11357$CQIRF)
        (bitwise-ior . g$11356$CQIRF)
        (bitwise-and . g$11355$CQIRF)
        (bitwise-not . g$11354$CQIRF)
        (bitwise-arithmetic-shift-right . g$6337$CQIRF)
        (bitwise-arithmetic-shift-left . g$6336$CQIRF)
        (bitwise-arithmetic-shift . g$11353$CQIRF)
        (zero? . g$5400$CQIRF)
        (vector? . g$5360$CQIRF)
        (vector-set! . g$11352$CQIRF)
        (vector-ref . g$11351$CQIRF)
        (vector-map . g$5432$CQIRF)
        (vector-length . g$11350$CQIRF)
        (vector-for-each . g$5433$CQIRF)
        (vector-fill! . g$5368$CQIRF)
        (vector->list . g$11349$CQIRF)
        (vector . g$11348$CQIRF)
        (values . g$11347$CQIRF)
        (truncate . g$11346$CQIRF)
        (tan . g$11345$CQIRF)
        (symbol? . g$5362$CQIRF)
        (symbol=? . g$5417$CQIRF)
        (symbol->string . g$11344$CQIRF)
        (substring . g$11343$CQIRF)
        (string? . g$11342$CQIRF)
        (string>? . g$5414$CQIRF)
        (string>=? . g$5416$CQIRF)
        (string=? . g$5412$CQIRF)
        (string<? . g$5413$CQIRF)
        (string<=? . g$5415$CQIRF)
        (string-ref . g$11341$CQIRF)
        (string-length . g$11340$CQIRF)
        (string-for-each . g$5434$CQIRF)
        (string-copy . g$11339$CQIRF)
        (string-append . g$11338$CQIRF)
        (string->symbol . g$11337$CQIRF)
        (string->number . g$11336$CQIRF)
        (string->list . g$11335$CQIRF)
        (string . g$11334$CQIRF)
        (sqrt . g$11333$CQIRF)
        (sin . g$11332$CQIRF)
        (round . g$11331$CQIRF)
        (reverse . g$5369$CQIRF)
        (real? . g$11330$CQIRF)
        (real-valued? . g$11329$CQIRF)
        (real-part . g$11328$CQIRF)
        (rationalize . g$5429$CQIRF)
        (rational? . g$11327$CQIRF)
        (rational-valued? . g$11326$CQIRF)
        (procedure? . g$5364$CQIRF)
        (positive? . g$5398$CQIRF)
        (pair? . g$11325$CQIRF)
        (odd? . g$5402$CQIRF)
        (numerator . g$11324$CQIRF)
        (number? . g$11323$CQIRF)
        (number->string . g$11322$CQIRF)
        (null? . g$11321$CQIRF)
        (not . g$11320$CQIRF)
        (negative? . g$5399$CQIRF)
        (nan? . g$11319$CQIRF)
        (min . g$5404$CQIRF)
        (max . g$5403$CQIRF)
        (map . g$5057$CQIRF)
        (make-vector . g$11318$CQIRF)
        (make-string . g$11317$CQIRF)
        (make-rectangular . g$11316$CQIRF)
        (make-polar . g$11315$CQIRF)
        (magnitude . g$11314$CQIRF)
        (log . g$11313$CQIRF)
        (list? . g$11312$CQIRF)
        (list-tail . g$5037$CQIRF)
        (list-ref . g$5038$CQIRF)
        (list->vector . g$5357$CQIRF)
        (list->string . g$5358$CQIRF)
        (list . g$11311$CQIRF)
        (length . g$11310$CQIRF)
        (lcm . g$5406$CQIRF)
        (integer? . g$11309$CQIRF)
        (integer-valued? . g$11308$CQIRF)
        (integer->char . g$11307$CQIRF)
        (infinite? . g$11306$CQIRF)
        (inexact? . g$11305$CQIRF)
        (inexact . g$11304$CQIRF)
        (imag-part . g$11303$CQIRF)
        (gcd . g$5405$CQIRF)
        (for-each . g$5058$CQIRF)
        (floor . g$11302$CQIRF)
        (finite? . g$11301$CQIRF)
        (expt . g$11300$CQIRF)
        (exp . g$11299$CQIRF)
        (exact? . g$11298$CQIRF)
        (exact-integer-sqrt . g$11297$CQIRF)
        (exact . g$11296$CQIRF)
        (even? . g$5401$CQIRF)
        (error . g$11295$CQIRF)
        (eqv? . g$11294$CQIRF)
        (equal? . g$11293$CQIRF)
        (eq? . g$11292$CQIRF)
        (dynamic-wind . g$11291$CQIRF)
        (div0-and-mod0 . g$11290$CQIRF)
        (mod0 . g$5356$CQIRF)
        (div0 . g$5354$CQIRF)
        (div-and-mod . g$11289$CQIRF)
        (mod . g$5355$CQIRF)
        (div . g$5353$CQIRF)
        (denominator . g$11288$CQIRF)
        (cos . g$11287$CQIRF)
        (cons . g$11286$CQIRF)
        (complex? . g$11285$CQIRF)
        (char? . g$5359$CQIRF)
        (char>? . g$5426$CQIRF)
        (char>=? . g$5428$CQIRF)
        (char=? . g$5424$CQIRF)
        (char<? . g$5425$CQIRF)
        (char<=? . g$5427$CQIRF)
        (char->integer . g$11284$CQIRF)
        (ceiling . g$11283$CQIRF)
        (call-with-values . g$11282$CQIRF)
        (call/cc . g$11281$CQIRF)
        (call-with-current-continuation . g$11280$CQIRF)
        (cddddr . g$5397$CQIRF)
        (cdddar . g$5396$CQIRF)
        (cddadr . g$5395$CQIRF)
        (cddaar . g$5394$CQIRF)
        (cdaddr . g$5393$CQIRF)
        (cdadar . g$5392$CQIRF)
        (cdaadr . g$5391$CQIRF)
        (cdaaar . g$5390$CQIRF)
        (cadddr . g$5389$CQIRF)
        (caddar . g$5388$CQIRF)
        (cadadr . g$5387$CQIRF)
        (cadaar . g$5386$CQIRF)
        (caaddr . g$5385$CQIRF)
        (caadar . g$5384$CQIRF)
        (caaadr . g$5383$CQIRF)
        (caaaar . g$5382$CQIRF)
        (cdddr . g$5381$CQIRF)
        (cddar . g$5380$CQIRF)
        (cdadr . g$5379$CQIRF)
        (cdaar . g$5378$CQIRF)
        (caddr . g$5377$CQIRF)
        (cadar . g$5376$CQIRF)
        (caadr . g$5375$CQIRF)
        (caaar . g$5374$CQIRF)
        (cddr . g$5373$CQIRF)
        (cdar . g$5372$CQIRF)
        (cadr . g$5371$CQIRF)
        (caar . g$5370$CQIRF)
        (cdr . g$11279$CQIRF)
        (car . g$11278$CQIRF)
        (boolean? . g$5363$CQIRF)
        (boolean=? . g$5418$CQIRF)
        (atan . g$11277$CQIRF)
        (assertion-violation . g$11276$CQIRF)
        (asin . g$11275$CQIRF)
        (apply . g$11274$CQIRF)
        (append . g$11273$CQIRF)
        (angle . g$11272$CQIRF)
        (acos . g$11271$CQIRF)
        (abs . g$11270$CQIRF)
        (/ . g$11269$CQIRF)
        (* . g$11268$CQIRF)
        (- . g$11267$CQIRF)
        (+ . g$11266$CQIRF)
        (>= . g$11265$CQIRF)
        (> . g$11264$CQIRF)
        (= . g$11263$CQIRF)
        (<= . g$11262$CQIRF)
        (< . g$11261$CQIRF)
        (make-record-printer . g$11260$CQIRF)
        (eqv-hash . g$11259$CQIRF)
        (reverse! . g$11258$CQIRF)
        (deserialize-port . g$11257$CQIRF)
        (serialize-port . g$11256$CQIRF)
        (enum-set? . g$6638$CQIRF)
        (make-promise . g$6209$CQIRF)
        (load/unload . g$11074$CQIRF)
        (load/args . g$11073$CQIRF)
        (printf . g$6747$CQIRF)
        (fprintf . g$6748$CQIRF)
        (format . g$6749$CQIRF)
        (procedure-form . g$11255$CQIRF)
        (procedure-environment . g$11254$CQIRF)
        (procedure-name . g$11253$CQIRF)
        (procedure-arity . g$11252$CQIRF)
        (gc-collect . g$11251$CQIRF)
        (typeof . g$11250$CQIRF)
        (clr-type? . g$11249$CQIRF)
        (get-clr-type . g$11248$CQIRF)
        (get-command-line . g$11247$CQIRF)
        (vector-append . g$11246$CQIRF)
        (vector-filter . g$11245$CQIRF)
        (vector-reverse! . g$11244$CQIRF)
        (vector-contains? . g$11243$CQIRF)
        (vector-index-of . g$11242$CQIRF)
        (vector-copy . g$11241$CQIRF)
        (vector-binary-search . g$11240$CQIRF)
        (string-ci-compare . g$11239$CQIRF)
        (string-compare . g$11238$CQIRF)
        (string-format . g$11237$CQIRF)
        (trace-printer . g$11070$CQIRF)
        (make-traced-procedure . g$11236$CQIRF)
        (make-traced-macro . g$6769$CQIRF)
        (assertion-error . g$8086$CQIRF)
        (time-it . g$11235$CQIRF)
        (make-parameter . g$7042$CQIRF)
        (library-locator . g$11234$CQIRF)
        (get-library-paths . g$11233$CQIRF)
        (open-tcp-input/output-port . g$11232$CQIRF)
        (hashtable-for-each . g$11231$CQIRF)
        (hashtable-map . g$11230$CQIRF)
        (environment-bindings . g$8064$CQIRF)
        (environment-symbols . g$8067$CQIRF)
        (interaction-environment-symbols . g$8063$CQIRF)
        (optimization-level . g$11229$CQIRF)
        (library-path . g$7395$CQIRF)
        (make-compile-time-value . g$7773$CQIRF)
        (expand->core . g$8073$CQIRF)
        (expand . g$8071$CQIRF)
        (convert->cps . g$6825$CQIRF)
        (installed-libraries . g$7416$CQIRF)
        (uninstall-library . g$7407$CQIRF)
        (&no-nans . g$11228$CQIRF)
        (&no-infinities . g$11227$CQIRF)
        (&i/o-encoding . g$11226$CQIRF)
        (&i/o-decoding . g$11225$CQIRF)
        (&i/o-port . g$11224$CQIRF)
        (&i/o-file-does-not-exist . g$11223$CQIRF)
        (&i/o-file-already-exists . g$11222$CQIRF)
        (&i/o-file-is-read-only . g$11221$CQIRF)
        (&i/o-file-protection . g$11220$CQIRF)
        (&i/o-filename . g$11219$CQIRF)
        (&i/o-invalid-position . g$11218$CQIRF)
        (&i/o-write . g$11217$CQIRF)
        (&i/o-read . g$11216$CQIRF)
        (&i/o . g$11215$CQIRF)
        (&non-continuable . g$11214$CQIRF)
        (&undefined . g$11213$CQIRF)
        (&syntax . g$11212$CQIRF)
        (&lexical . g$11211$CQIRF)
        (&implementation-restriction . g$11210$CQIRF)
        (&who . g$11209$CQIRF)
        (&irritants . g$11208$CQIRF)
        (&assertion . g$11207$CQIRF)
        (&violation . g$11206$CQIRF)
        (&error . g$11205$CQIRF)
        (&serious . g$11204$CQIRF)
        (&warning . g$11203$CQIRF)
        (&message . g$11202$CQIRF)
        (&condition . g$11201$CQIRF)
        (define-condition-type . g$11200$CQIRF)
        (define-enumeration . g$11199$CQIRF)
        (define-record-type . g$11198$CQIRF)
        (parent-rtd . g$11197$CQIRF)
        (nongenerative . g$11196$CQIRF)
        (opaque . g$11195$CQIRF)
        (sealed . g$11194$CQIRF)
        (protocol . g$11193$CQIRF)
        (parent . g$11192$CQIRF)
        (immutable . g$11191$CQIRF)
        (mutable . g$11190$CQIRF)
        (fields . g$11189$CQIRF)
        (error-handling-mode . g$11188$CQIRF)
        (file-options . g$11187$CQIRF)
        (buffer-mode . g$11186$CQIRF)
        (eol-style . g$11185$CQIRF)
        (guard . g$11184$CQIRF)
        (trace-letrec-syntax . g$11183$CQIRF)
        (trace-let-syntax . g$11182$CQIRF)
        (trace-define-syntax . g$11181$CQIRF)
        (trace-define . g$11180$CQIRF)
        (trace-lambda . g$11179$CQIRF)
        (unsyntax-splicing . g$11178$CQIRF)
        (unsyntax . g$11177$CQIRF)
        (unquote-splicing . g$11176$CQIRF)
        (unquote . g$11175$CQIRF)
        (_ . g$11174$CQIRF)
        (else . g$11173$CQIRF)
        (=> . g$11172$CQIRF)
        (... . g$11171$CQIRF)
        (assert . g$11170$CQIRF)
        (endianness . g$11169$CQIRF)
        (delay . g$11168$CQIRF)
        (time . g$11167$CQIRF)
        (or . g$11166$CQIRF)
        (and . g$11165$CQIRF)
        (do . g$11164$CQIRF)
        (cond . g$11163$CQIRF)
        (let* . g$11162$CQIRF)
        (let . g$11161$CQIRF)
        (identifier-syntax . g$11160$CQIRF)
        (with-syntax . g$11159$CQIRF)
        (quasisyntax . g$11158$CQIRF)
        (quasiquote . g$11157$CQIRF)
        (syntax-rules . g$11156$CQIRF)
        (include-into . g$11155$CQIRF)
        (include . g$11154$CQIRF)
        (define-struct . g$11153$CQIRF)
        (let-values . g$11152$CQIRF)
        (let*-values . g$11151$CQIRF)
        (record-constructor-descriptor . g$11150$CQIRF)
        (record-type-descriptor . g$11149$CQIRF)
        (fluid-let-syntax . g$11148$CQIRF)
        (case . g$11147$CQIRF)
        (parameterize . g$11146$CQIRF)
        (unless . g$11145$CQIRF)
        (when . g$11144$CQIRF)
        (if . g$11143$CQIRF)
        (letrec* . g$11142$CQIRF)
        (letrec . g$11141$CQIRF)
        (type-descriptor . g$11140$CQIRF)
        (case-lambda . g$11139$CQIRF)
        (lambda . g$11138$CQIRF)
        (syntax . g$11137$CQIRF)
        (syntax-case . g$11136$CQIRF)
        (quote . g$11135$CQIRF)
        (foreign-call . g$11134$CQIRF)
        (letrec-syntax . g$11133$CQIRF)
        (let-syntax . g$11132$CQIRF)
        (set! . g$11131$CQIRF)
        (export . g$11130$CQIRF)
        (import . g$11129$CQIRF)
        (library . g$11128$CQIRF)
        (begin . g$11127$CQIRF)
        (module . g$11126$CQIRF)
        (define-syntax . g$11125$CQIRF)
        (define . g$11124$CQIRF))
      '((g$7968$CQIRF core-prim . ellipsis-map)
        (g$6191$CQIRF core-prim . &no-nans-rcd)
        (g$6190$CQIRF core-prim . &no-nans-rtd)
        (g$6178$CQIRF core-prim . &no-infinities-rcd)
        (g$6177$CQIRF core-prim . &no-infinities-rtd)
        (g$6165$CQIRF core-prim . &i/o-encoding-rcd)
        (g$6164$CQIRF core-prim . &i/o-encoding-rtd)
        (g$6150$CQIRF core-prim . &i/o-decoding-rcd)
        (g$6149$CQIRF core-prim . &i/o-decoding-rtd)
        (g$6137$CQIRF core-prim . &i/o-port-rcd)
        (g$6136$CQIRF core-prim . &i/o-port-rtd)
        (g$6122$CQIRF core-prim . &i/o-file-does-not-exist-rcd)
        (g$6121$CQIRF core-prim . &i/o-file-does-not-exist-rtd)
        (g$6109$CQIRF core-prim . &i/o-file-already-exists-rcd)
        (g$6108$CQIRF core-prim . &i/o-file-already-exists-rtd)
        (g$6096$CQIRF core-prim . &i/o-file-is-read-only-rcd)
        (g$6095$CQIRF core-prim . &i/o-file-is-read-only-rtd)
        (g$6083$CQIRF core-prim . &i/o-file-protection-rcd)
        (g$6082$CQIRF core-prim . &i/o-file-protection-rtd)
        (g$6070$CQIRF core-prim . &i/o-filename-rcd)
        (g$6069$CQIRF core-prim . &i/o-filename-rtd)
        (g$6055$CQIRF core-prim . &i/o-invalid-position-rcd)
        (g$6054$CQIRF core-prim . &i/o-invalid-position-rtd)
        (g$6040$CQIRF core-prim . &i/o-write-rcd)
        (g$6039$CQIRF core-prim . &i/o-write-rtd)
        (g$6027$CQIRF core-prim . &i/o-read-rcd)
        (g$6026$CQIRF core-prim . &i/o-read-rtd)
        (g$6014$CQIRF core-prim . &i/o-rcd)
        (g$6013$CQIRF core-prim . &i/o-rtd)
        (g$6001$CQIRF core-prim . &undefined-rcd)
        (g$6000$CQIRF core-prim . &undefined-rtd)
        (g$5988$CQIRF core-prim . &syntax-rcd)
        (g$5987$CQIRF core-prim . &syntax-rtd)
        (g$5971$CQIRF core-prim . &lexical-rcd)
        (g$5970$CQIRF core-prim . &lexical-rtd)
        (g$5958$CQIRF core-prim . &implementation-restriction-rcd)
        (g$5957$CQIRF core-prim . &implementation-restriction-rtd)
        (g$5945$CQIRF core-prim . &non-continuable-rcd)
        (g$5944$CQIRF core-prim . &non-continuable-rtd)
        (g$5932$CQIRF core-prim . &who-rcd)
        (g$5931$CQIRF core-prim . &who-rtd)
        (g$5917$CQIRF core-prim . &irritants-rcd)
        (g$5916$CQIRF core-prim . &irritants-rtd)
        (g$5902$CQIRF core-prim . &assertion-rcd)
        (g$5901$CQIRF core-prim . &assertion-rtd)
        (g$5889$CQIRF core-prim . &violation-rcd)
        (g$5888$CQIRF core-prim . &violation-rtd)
        (g$5876$CQIRF core-prim . &error-rcd)
        (g$5875$CQIRF core-prim . &error-rtd)
        (g$5863$CQIRF core-prim . &serious-rcd)
        (g$5862$CQIRF core-prim . &serious-rtd)
        (g$5850$CQIRF core-prim . &warning-rcd)
        (g$5849$CQIRF core-prim . &warning-rtd)
        (g$5837$CQIRF core-prim . &message-rcd)
        (g$5836$CQIRF core-prim . &message-rtd)
        (g$5797$CQIRF core-prim . &condition-rcd)
        (g$5796$CQIRF core-prim . &condition-rtd)
        (g$11593$CQIRF core-prim . library-letrec*)
        (g$11592$CQIRF core-prim . annotation-stripped)
        (g$11591$CQIRF core-prim . annotation-source)
        (g$11590$CQIRF core-prim . annotation-expression)
        (g$11589$CQIRF core-prim . annotation?)
        (g$11588$CQIRF core-prim . read-annotated)
        (g$11587$CQIRF core-prim . tanh)
        (g$11586$CQIRF core-prim . cosh)
        (g$11585$CQIRF core-prim . sinh)
        (g$11584$CQIRF core-prim . make-guid)
        (g$11583$CQIRF core-prim . unspecified?)
        (g$5040$CQIRF core-prim . make-list)
        (g$5039$CQIRF core-prim . last-pair)
        (g$11582$CQIRF core-prim . load-r5rs)
        (g$11581$CQIRF core-prim . license)
        (g$11580$CQIRF core-prim . stacktrace)
        (g$11076$CQIRF core-prim . ironscheme-build)
        (g$11579$CQIRF core-prim . define-clr-class-internal)
        (g$11578$CQIRF core-prim . clr-field-set!-internal)
        (g$11577$CQIRF core-prim . clr-field-get-internal)
        (g$11576$CQIRF core-prim . clr-cast-internal)
        (g$11575$CQIRF core-prim . clr-call-internal)
        (g$11574$CQIRF core-prim . clr-new-internal)
        (g$11573$CQIRF core-prim . clr-new-array-internal)
        (g$11572$CQIRF core-prim . clr-is-internal)
        (g$11571$CQIRF core-prim . clr-reference-internal)
        (g$11570$CQIRF core-prim . clr-using-internal)
        (g$8087$CQIRF core-prim . syntax-error)
        (g$7963$CQIRF core-prim . syntax-dispatch)
        (g$11569$CQIRF core-prim . compile-core)
        (g$11568$CQIRF core-prim . eval-core)
        (g$11567$CQIRF core-prim . remove-location)
        (g$11566$CQIRF core-prim . set-symbol-value!)
        (g$11565$CQIRF core-prim . symbol-value)
        (g$11564$CQIRF core-prim . symbol-bound?)
        (g$11563$CQIRF core-prim . ungensym)
        (g$11562$CQIRF core-prim . gensym)
        (g$11561$CQIRF core-prim . void)
        (g$11560$CQIRF core-prim . load-serialized-library)
        (g$11559$CQIRF core-prim . serialize-library)
        (g$11079$CQIRF core-prim . compile-system-libraries)
        (g$11081$CQIRF core-prim . compile->closure)
        (g$11080$CQIRF core-prim . compile)
        (g$11075$CQIRF core-prim . load)
        (g$11558$CQIRF core-prim . string-normalize)
        (g$8097$CQIRF core-prim . interaction-environment)
        (g$11557$CQIRF core-prim . char-ready?)
        (g$11556$CQIRF core-prim . string-upcase)
        (g$11555$CQIRF core-prim . string-titlecase)
        (g$6274$CQIRF core-prim . string-normalize-nfkd)
        (g$6273$CQIRF core-prim . string-normalize-nfkc)
        (g$6272$CQIRF core-prim . string-normalize-nfd)
        (g$6271$CQIRF core-prim . string-normalize-nfc)
        (g$11554$CQIRF core-prim . string-foldcase)
        (g$11553$CQIRF core-prim . string-downcase)
        (g$6258$CQIRF core-prim . string-ci>?)
        (g$6260$CQIRF core-prim . string-ci>=?)
        (g$6256$CQIRF core-prim . string-ci=?)
        (g$6257$CQIRF core-prim . string-ci<?)
        (g$6259$CQIRF core-prim . string-ci<=?)
        (g$11552$CQIRF core-prim . char-whitespace?)
        (g$11551$CQIRF core-prim . char-upper-case?)
        (g$11550$CQIRF core-prim . char-title-case?)
        (g$11549$CQIRF core-prim . char-numeric?)
        (g$11548$CQIRF core-prim . char-lower-case?)
        (g$11547$CQIRF core-prim . char-general-category)
        (g$11546$CQIRF core-prim . char-upcase)
        (g$11545$CQIRF core-prim . char-titlecase)
        (g$11544$CQIRF core-prim . char-foldcase)
        (g$11543$CQIRF core-prim . char-downcase)
        (g$6268$CQIRF core-prim . char-ci>?)
        (g$6270$CQIRF core-prim . char-ci>=?)
        (g$6266$CQIRF core-prim . char-ci=?)
        (g$6267$CQIRF core-prim . char-ci<?)
        (g$6269$CQIRF core-prim . char-ci<=?)
        (g$11542$CQIRF core-prim . char-alphabetic?)
        (g$7775$CQIRF core-prim . variable-transformer-procedure)
        (g$7774$CQIRF core-prim . variable-transformer?)
        (g$7772$CQIRF core-prim . make-variable-transformer)
        (g$8091$CQIRF core-prim . identifier?)
        (g$8080$CQIRF core-prim . generate-temporaries)
        (g$8081$CQIRF core-prim . free-identifier=?)
        (g$8093$CQIRF core-prim . syntax->datum)
        (g$8092$CQIRF core-prim . datum->syntax)
        (g$8082$CQIRF core-prim . bound-identifier=?)
        (g$11541$CQIRF core-prim . record-type-descriptor?)
        (g$11540$CQIRF core-prim . record-predicate)
        (g$11539$CQIRF core-prim . record-mutator)
        (g$11538$CQIRF core-prim . record-constructor)
        (g$11537$CQIRF core-prim . record-accessor)
        (g$11536$CQIRF core-prim . make-record-type-descriptor)
        (g$11535$CQIRF core-prim . make-record-constructor-descriptor)
        (g$11534$CQIRF core-prim . record?)
        (g$11533$CQIRF core-prim . record-type-uid)
        (g$11532$CQIRF core-prim . record-type-sealed?)
        (g$11531$CQIRF core-prim . record-type-parent)
        (g$11530$CQIRF core-prim . record-type-opaque?)
        (g$11529$CQIRF core-prim . record-type-name)
        (g$11528$CQIRF core-prim . record-type-generative?)
        (g$11527$CQIRF core-prim . record-type-field-names)
        (g$11526$CQIRF core-prim . record-rtd)
        (g$11525$CQIRF core-prim . record-field-mutable?)
        (g$5665$CQIRF core-prim . delete-file)
        (g$5664$CQIRF core-prim . file-exists?)
        (g$11524$CQIRF core-prim . vector-sort!)
        (g$11523$CQIRF core-prim . vector-sort)
        (g$6227$CQIRF core-prim . list-sort)
        (g$11522$CQIRF core-prim . symbol-hash)
        (g$11521$CQIRF core-prim . string-ci-hash)
        (g$11520$CQIRF core-prim . string-hash)
        (g$11519$CQIRF core-prim . equal-hash)
        (g$11518$CQIRF core-prim . hashtable-equivalence-function)
        (g$11517$CQIRF core-prim . make-hashtable)
        (g$11516$CQIRF core-prim . hashtable-hash-function)
        (g$5633$CQIRF core-prim . make-eqv-hashtable)
        (g$5632$CQIRF core-prim . make-eq-hashtable)
        (g$11515$CQIRF core-prim . hashtable?)
        (g$5639$CQIRF core-prim . hashtable-update!)
        (g$5634$CQIRF core-prim . hashtable-size)
        (g$5636$CQIRF core-prim . hashtable-set!)
        (g$5635$CQIRF core-prim . hashtable-ref)
        (g$11514$CQIRF core-prim . hashtable-mutable?)
        (g$11513$CQIRF core-prim . hashtable-keys)
        (g$11512$CQIRF core-prim . hashtable-entries)
        (g$5637$CQIRF core-prim . hashtable-delete!)
        (g$11511$CQIRF core-prim . hashtable-copy)
        (g$5638$CQIRF core-prim . hashtable-contains?)
        (g$5640$CQIRF core-prim . hashtable-clear!)
        (g$6600$CQIRF core-prim . call-with-output-file)
        (g$6599$CQIRF core-prim . call-with-input-file)
        (g$6591$CQIRF core-prim . write-char)
        (g$11510$CQIRF core-prim . write)
        (g$6598$CQIRF core-prim . with-output-to-file)
        (g$6597$CQIRF core-prim . with-input-from-file)
        (g$6590$CQIRF core-prim . read-char)
        (g$11509$CQIRF core-prim . read)
        (g$6589$CQIRF core-prim . peek-char)
        (g$11508$CQIRF core-prim . open-output-file)
        (g$11507$CQIRF core-prim . open-input-file)
        (g$6601$CQIRF core-prim . newline)
        (g$11506$CQIRF core-prim . display)
        (g$11505$CQIRF core-prim . close-output-port)
        (g$11504$CQIRF core-prim . close-input-port)
        (g$11503$CQIRF core-prim . eof-object?)
        (g$11502$CQIRF core-prim . eof-object)
        (g$11501$CQIRF core-prim . current-error-port)
        (g$11500$CQIRF core-prim . current-output-port)
        (g$11499$CQIRF core-prim . current-input-port)
        (g$11498$CQIRF core-prim . output-port?)
        (g$11497$CQIRF core-prim . input-port?)
        (g$11496$CQIRF core-prim . utf-8-codec)
        (g$11495$CQIRF core-prim . utf-16-codec)
        (g$11494$CQIRF core-prim . transcoder-error-handling-mode)
        (g$11493$CQIRF core-prim . transcoder-eol-style)
        (g$11492$CQIRF core-prim . transcoder-codec)
        (g$11491$CQIRF core-prim . transcoded-port)
        (g$11490$CQIRF core-prim . textual-port?)
        (g$11489$CQIRF core-prim . string->bytevector)
        (g$11488$CQIRF core-prim . standard-output-port)
        (g$11487$CQIRF core-prim . standard-input-port)
        (g$11486$CQIRF core-prim . standard-error-port)
        (g$11485$CQIRF core-prim . set-port-position!)
        (g$11484$CQIRF core-prim . put-u8)
        (g$11483$CQIRF core-prim . put-string)
        (g$6569$CQIRF core-prim . put-datum)
        (g$11482$CQIRF core-prim . put-char)
        (g$11481$CQIRF core-prim . put-bytevector)
        (g$6574$CQIRF core-prim . port?)
        (g$11480$CQIRF core-prim . port-transcoder)
        (g$11479$CQIRF core-prim . port-position)
        (g$11478$CQIRF core-prim . port-has-set-port-position!?)
        (g$11477$CQIRF core-prim . port-has-port-position?)
        (g$11476$CQIRF core-prim . port-eof?)
        (g$11475$CQIRF core-prim . output-port-buffer-mode)
        (g$6573$CQIRF core-prim . open-string-output-port)
        (g$11474$CQIRF core-prim . open-string-input-port)
        (g$11473$CQIRF core-prim . open-file-output-port)
        (g$11472$CQIRF core-prim . open-file-input/output-port)
        (g$11471$CQIRF core-prim . open-file-input-port)
        (g$11470$CQIRF core-prim . open-bytevector-output-port)
        (g$11469$CQIRF core-prim . open-bytevector-input-port)
        (g$11468$CQIRF core-prim . native-transcoder)
        (g$11467$CQIRF core-prim . native-eol-style)
        (g$11466$CQIRF core-prim . make-transcoder)
        (g$11465$CQIRF core-prim . latin-1-codec)
        (g$6037$CQIRF core-prim . make-i/o-write-error)
        (g$6024$CQIRF core-prim . make-i/o-read-error)
        (g$6132$CQIRF core-prim . make-i/o-port-error)
        (g$6050$CQIRF core-prim . make-i/o-invalid-position-error)
        (g$6065$CQIRF core-prim . make-i/o-filename-error)
        (g$6080$CQIRF core-prim . make-i/o-file-protection-error)
        (g$6093$CQIRF core-prim . make-i/o-file-is-read-only-error)
        (g$6119$CQIRF core-prim . make-i/o-file-does-not-exist-error)
        (g$6106$CQIRF core-prim . make-i/o-file-already-exists-error)
        (g$6011$CQIRF core-prim . make-i/o-error)
        (g$6160$CQIRF core-prim . make-i/o-encoding-error)
        (g$6147$CQIRF core-prim . make-i/o-decoding-error)
        (g$11464$CQIRF core-prim . make-custom-textual-output-port)
        (g$11463$CQIRF core-prim . make-custom-textual-input/output-port)
        (g$11462$CQIRF core-prim . make-custom-textual-input-port)
        (g$11461$CQIRF core-prim . make-custom-binary-output-port)
        (g$11460$CQIRF core-prim . make-custom-binary-input/output-port)
        (g$11459$CQIRF core-prim . make-custom-binary-input-port)
        (g$11458$CQIRF core-prim . make-bytevector)
        (g$11457$CQIRF core-prim . lookahead-u8)
        (g$11456$CQIRF core-prim . lookahead-char)
        (g$6038$CQIRF core-prim . i/o-write-error?)
        (g$6025$CQIRF core-prim . i/o-read-error?)
        (g$6134$CQIRF core-prim . i/o-port-error?)
        (g$6052$CQIRF core-prim . i/o-invalid-position-error?)
        (g$6053$CQIRF core-prim . i/o-error-position)
        (g$6067$CQIRF core-prim . i/o-filename-error?)
        (g$6081$CQIRF core-prim . i/o-file-protection-error?)
        (g$6094$CQIRF core-prim . i/o-file-is-read-only-error?)
        (g$6120$CQIRF core-prim . i/o-file-does-not-exist-error?)
        (g$6107$CQIRF core-prim . i/o-file-already-exists-error?)
        (g$6012$CQIRF core-prim . i/o-error?)
        (g$6135$CQIRF core-prim . i/o-error-port)
        (g$6068$CQIRF core-prim . i/o-error-filename)
        (g$6162$CQIRF core-prim . i/o-encoding-error?)
        (g$6163$CQIRF core-prim . i/o-encoding-error-char)
        (g$6148$CQIRF core-prim . i/o-decoding-error?)
        (g$11455$CQIRF core-prim . get-u8)
        (g$11454$CQIRF core-prim . get-string-n!)
        (g$11453$CQIRF core-prim . get-string-n)
        (g$11452$CQIRF core-prim . get-string-all)
        (g$11451$CQIRF core-prim . get-line)
        (g$6570$CQIRF core-prim . get-datum)
        (g$11450$CQIRF core-prim . get-char)
        (g$11449$CQIRF core-prim . get-bytevector-some)
        (g$11448$CQIRF core-prim . get-bytevector-n!)
        (g$11447$CQIRF core-prim . get-bytevector-n)
        (g$11446$CQIRF core-prim . get-bytevector-all)
        (g$11445$CQIRF core-prim . flush-output-port)
        (g$11444$CQIRF core-prim . close-port)
        (g$6575$CQIRF core-prim . call-with-string-output-port)
        (g$6576$CQIRF core-prim . call-with-port)
        (g$11443$CQIRF core-prim . call-with-bytevector-output-port)
        (g$11442$CQIRF core-prim . bytevector->string)
        (g$11441$CQIRF core-prim . buffer-mode?)
        (g$11440$CQIRF core-prim . binary-port?)
        (g$8070$CQIRF core-prim . scheme-report-environment)
        (g$6206$CQIRF core-prim . quotient)
        (g$8069$CQIRF core-prim . null-environment)
        (g$6207$CQIRF core-prim . remainder)
        (g$6208$CQIRF core-prim . modulo)
        (g$6203$CQIRF core-prim . inexact->exact)
        (g$6210$CQIRF core-prim . force)
        (g$6204$CQIRF core-prim . exact->inexact)
        (g$11439$CQIRF core-prim . exit)
        (g$11071$CQIRF core-prim . command-line)
        (g$11438$CQIRF core-prim . string-fill!)
        (g$11437$CQIRF core-prim . string-set!)
        (g$11436$CQIRF core-prim . set-cdr!)
        (g$11435$CQIRF core-prim . set-car!)
        (g$5062$CQIRF core-prim . remove)
        (g$5063$CQIRF core-prim . remv)
        (g$5043$CQIRF core-prim . remp)
        (g$5064$CQIRF core-prim . remq)
        (g$5042$CQIRF core-prim . partition)
        (g$5050$CQIRF core-prim . memv)
        (g$5049$CQIRF core-prim . memq)
        (g$5052$CQIRF core-prim . memp)
        (g$5051$CQIRF core-prim . member)
        (g$5056$CQIRF core-prim . exists)
        (g$5055$CQIRF core-prim . for-all)
        (g$5061$CQIRF core-prim . fold-right)
        (g$5060$CQIRF core-prim . fold-left)
        (g$5041$CQIRF core-prim . find)
        (g$5044$CQIRF core-prim . filter)
        (g$5059$CQIRF core-prim . cons*)
        (g$5046$CQIRF core-prim . assv)
        (g$5045$CQIRF core-prim . assq)
        (g$5048$CQIRF core-prim . assp)
        (g$5047$CQIRF core-prim . assoc)
        (g$11434$CQIRF core-prim . with-exception-handler)
        (g$11433$CQIRF core-prim . raise-continuable)
        (g$11432$CQIRF core-prim . raise)
        (g$8072$CQIRF core-prim . eval)
        (g$8068$CQIRF core-prim . environment)
        (g$6661$CQIRF core-prim . make-enumeration)
        (g$6668$CQIRF core-prim . enum-set=?)
        (g$6662$CQIRF core-prim . enum-set-universe)
        (g$6669$CQIRF core-prim . enum-set-union)
        (g$6667$CQIRF core-prim . enum-set-subset?)
        (g$6673$CQIRF core-prim . enum-set-projection)
        (g$6666$CQIRF core-prim . enum-set-member?)
        (g$6670$CQIRF core-prim . enum-set-intersection)
        (g$6663$CQIRF core-prim . enum-set-indexer)
        (g$6671$CQIRF core-prim . enum-set-difference)
        (g$6664$CQIRF core-prim . enum-set-constructor)
        (g$6672$CQIRF core-prim . enum-set-complement)
        (g$6665$CQIRF core-prim . enum-set->list)
        (g$5929$CQIRF core-prim . who-condition?)
        (g$5848$CQIRF core-prim . warning?)
        (g$5887$CQIRF core-prim . violation?)
        (g$5999$CQIRF core-prim . undefined-violation?)
        (g$5984$CQIRF core-prim . syntax-violation?)
        (g$5986$CQIRF core-prim . syntax-violation-subform)
        (g$5985$CQIRF core-prim . syntax-violation-form)
        (g$8090$CQIRF core-prim . syntax-violation)
        (g$11431$CQIRF core-prim . simple-conditions)
        (g$5861$CQIRF core-prim . serious-condition?)
        (g$5943$CQIRF core-prim . non-continuable-violation?)
        (g$5834$CQIRF core-prim . message-condition?)
        (g$5927$CQIRF core-prim . make-who-condition)
        (g$5847$CQIRF core-prim . make-warning)
        (g$5886$CQIRF core-prim . make-violation)
        (g$5998$CQIRF core-prim . make-undefined-violation)
        (g$5981$CQIRF core-prim . make-syntax-violation)
        (g$5860$CQIRF core-prim . make-serious-condition)
        (g$5942$CQIRF core-prim . make-non-continuable-violation)
        (g$5832$CQIRF core-prim . make-message-condition)
        (g$5968$CQIRF core-prim . make-lexical-violation)
        (g$5912$CQIRF core-prim . make-irritants-condition)
        (g$5955$CQIRF core-prim . make-implementation-restriction-violation)
        (g$5873$CQIRF core-prim . make-error)
        (g$5899$CQIRF core-prim . make-assertion-violation)
        (g$5969$CQIRF core-prim . lexical-violation?)
        (g$5914$CQIRF core-prim . irritants-condition?)
        (g$5956$CQIRF core-prim . implementation-restriction-violation?)
        (g$5874$CQIRF core-prim . error?)
        (g$5930$CQIRF core-prim . condition-who)
        (g$11430$CQIRF core-prim . condition-predicate)
        (g$5835$CQIRF core-prim . condition-message)
        (g$5915$CQIRF core-prim . condition-irritants)
        (g$11429$CQIRF core-prim . condition-accessor)
        (g$11428$CQIRF core-prim . condition)
        (g$5900$CQIRF core-prim . assertion-violation?)
        (g$11427$CQIRF core-prim . condition?)
        (g$11426$CQIRF core-prim . utf32->string)
        (g$11425$CQIRF core-prim . utf16->string)
        (g$11424$CQIRF core-prim . utf8->string)
        (g$11423$CQIRF core-prim . uint-list->bytevector)
        (g$11422$CQIRF core-prim . u8-list->bytevector)
        (g$11421$CQIRF core-prim . string->utf8)
        (g$11420$CQIRF core-prim . string->utf32)
        (g$11419$CQIRF core-prim . string->utf16)
        (g$11418$CQIRF core-prim . sint-list->bytevector)
        (g$5671$CQIRF core-prim . native-endianness)
        (g$5361$CQIRF core-prim . bytevector?)
        (g$11417$CQIRF core-prim . bytevector=?)
        (g$11416$CQIRF core-prim . bytevector-uint-set!)
        (g$11415$CQIRF core-prim . bytevector-uint-ref)
        (g$11414$CQIRF core-prim . bytevector-u8-set!)
        (g$11413$CQIRF core-prim . bytevector-u8-ref)
        (g$5692$CQIRF core-prim . bytevector-u64-set!)
        (g$5688$CQIRF core-prim . bytevector-u64-ref)
        (g$5694$CQIRF core-prim . bytevector-u64-native-set!)
        (g$5690$CQIRF core-prim . bytevector-u64-native-ref)
        (g$5684$CQIRF core-prim . bytevector-u32-set!)
        (g$5680$CQIRF core-prim . bytevector-u32-ref)
        (g$5686$CQIRF core-prim . bytevector-u32-native-set!)
        (g$5682$CQIRF core-prim . bytevector-u32-native-ref)
        (g$5676$CQIRF core-prim . bytevector-u16-set!)
        (g$5672$CQIRF core-prim . bytevector-u16-ref)
        (g$5678$CQIRF core-prim . bytevector-u16-native-set!)
        (g$5674$CQIRF core-prim . bytevector-u16-native-ref)
        (g$11412$CQIRF core-prim . bytevector-sint-set!)
        (g$11411$CQIRF core-prim . bytevector-sint-ref)
        (g$11410$CQIRF core-prim . bytevector-s8-set!)
        (g$11409$CQIRF core-prim . bytevector-s8-ref)
        (g$5693$CQIRF core-prim . bytevector-s64-set!)
        (g$5689$CQIRF core-prim . bytevector-s64-ref)
        (g$5695$CQIRF core-prim . bytevector-s64-native-set!)
        (g$5691$CQIRF core-prim . bytevector-s64-native-ref)
        (g$5685$CQIRF core-prim . bytevector-s32-set!)
        (g$5681$CQIRF core-prim . bytevector-s32-ref)
        (g$5687$CQIRF core-prim . bytevector-s32-native-set!)
        (g$5683$CQIRF core-prim . bytevector-s32-native-ref)
        (g$5677$CQIRF core-prim . bytevector-s16-set!)
        (g$5673$CQIRF core-prim . bytevector-s16-ref)
        (g$5679$CQIRF core-prim . bytevector-s16-native-set!)
        (g$5675$CQIRF core-prim . bytevector-s16-native-ref)
        (g$11408$CQIRF core-prim . bytevector-length)
        (g$11407$CQIRF core-prim . bytevector-ieee-single-set!)
        (g$11406$CQIRF core-prim . bytevector-ieee-single-ref)
        (g$5698$CQIRF core-prim . bytevector-ieee-single-native-set!)
        (g$5696$CQIRF core-prim . bytevector-ieee-single-native-ref)
        (g$11405$CQIRF core-prim . bytevector-ieee-double-set!)
        (g$11404$CQIRF core-prim . bytevector-ieee-double-ref)
        (g$5699$CQIRF core-prim . bytevector-ieee-double-native-set!)
        (g$5697$CQIRF core-prim . bytevector-ieee-double-native-ref)
        (g$11403$CQIRF core-prim . bytevector-fill!)
        (g$11402$CQIRF core-prim . bytevector-copy!)
        (g$11401$CQIRF core-prim . bytevector-copy)
        (g$11400$CQIRF core-prim . bytevector->uint-list)
        (g$11399$CQIRF core-prim . bytevector->u8-list)
        (g$11398$CQIRF core-prim . bytevector->sint-list)
        (g$6189$CQIRF core-prim . no-nans-violation?)
        (g$6176$CQIRF core-prim . no-infinities-violation?)
        (g$6188$CQIRF core-prim . make-no-nans-violation)
        (g$6175$CQIRF core-prim . make-no-infinities-violation)
        (g$11397$CQIRF core-prim . real->flonum)
        (g$6489$CQIRF core-prim . flzero?)
        (g$6484$CQIRF core-prim . fltruncate)
        (g$6474$CQIRF core-prim . fltan)
        (g$6479$CQIRF core-prim . flsqrt)
        (g$6472$CQIRF core-prim . flsin)
        (g$6485$CQIRF core-prim . flround)
        (g$6487$CQIRF core-prim . flpositive?)
        (g$5366$CQIRF core-prim . flonum?)
        (g$6491$CQIRF core-prim . flodd?)
        (g$11396$CQIRF core-prim . flnumerator)
        (g$6488$CQIRF core-prim . flnegative?)
        (g$6471$CQIRF core-prim . flnan?)
        (g$6467$CQIRF core-prim . flmod0)
        (g$6466$CQIRF core-prim . flmod)
        (g$6493$CQIRF core-prim . flmin)
        (g$6492$CQIRF core-prim . flmax)
        (g$6478$CQIRF core-prim . fllog)
        (g$6468$CQIRF core-prim . flinteger?)
        (g$6470$CQIRF core-prim . flinfinite?)
        (g$6483$CQIRF core-prim . flfloor)
        (g$6469$CQIRF core-prim . flfinite?)
        (g$6481$CQIRF core-prim . flexpt)
        (g$6480$CQIRF core-prim . flexp)
        (g$6490$CQIRF core-prim . fleven?)
        (g$6463$CQIRF core-prim . fldiv0-and-mod0)
        (g$6465$CQIRF core-prim . fldiv0)
        (g$6462$CQIRF core-prim . fldiv-and-mod)
        (g$6464$CQIRF core-prim . fldiv)
        (g$11395$CQIRF core-prim . fldenominator)
        (g$6473$CQIRF core-prim . flcos)
        (g$6482$CQIRF core-prim . flceiling)
        (g$6477$CQIRF core-prim . flatan)
        (g$6475$CQIRF core-prim . flasin)
        (g$6476$CQIRF core-prim . flacos)
        (g$6486$CQIRF core-prim . flabs)
        (g$11394$CQIRF core-prim . fl>?)
        (g$11393$CQIRF core-prim . fl>=?)
        (g$11392$CQIRF core-prim . fl=?)
        (g$11391$CQIRF core-prim . fl<?)
        (g$11390$CQIRF core-prim . fl<=?)
        (g$11389$CQIRF core-prim . fl/)
        (g$11388$CQIRF core-prim . fl-)
        (g$11387$CQIRF core-prim . fl+)
        (g$11386$CQIRF core-prim . fl*)
        (g$11385$CQIRF core-prim . fixnum->flonum)
        (g$6370$CQIRF core-prim . fxzero?)
        (g$11384$CQIRF core-prim . fxxor)
        (g$6384$CQIRF core-prim . fxrotate-bit-field)
        (g$11383$CQIRF core-prim . fxreverse-bit-field)
        (g$6368$CQIRF core-prim . fxpositive?)
        (g$6372$CQIRF core-prim . fxodd?)
        (g$11382$CQIRF core-prim . fxnot)
        (g$6369$CQIRF core-prim . fxnegative?)
        (g$6367$CQIRF core-prim . fxmod0)
        (g$6366$CQIRF core-prim . fxmod)
        (g$6374$CQIRF core-prim . fxmin)
        (g$6373$CQIRF core-prim . fxmax)
        (g$11381$CQIRF core-prim . fxlength)
        (g$11380$CQIRF core-prim . fxior)
        (g$6378$CQIRF core-prim . fxif)
        (g$11379$CQIRF core-prim . fxfirst-bit-set)
        (g$6371$CQIRF core-prim . fxeven?)
        (g$11378$CQIRF core-prim . fxdiv0-and-mod0)
        (g$6365$CQIRF core-prim . fxdiv0)
        (g$11377$CQIRF core-prim . fxdiv-and-mod)
        (g$6364$CQIRF core-prim . fxdiv)
        (g$6381$CQIRF core-prim . fxcopy-bit-field)
        (g$6379$CQIRF core-prim . fxcopy-bit)
        (g$11376$CQIRF core-prim . fxbit-set?)
        (g$6380$CQIRF core-prim . fxbit-field)
        (g$11375$CQIRF core-prim . fxbit-count)
        (g$6383$CQIRF core-prim . fxarithmetic-shift-right)
        (g$6382$CQIRF core-prim . fxarithmetic-shift-left)
        (g$11374$CQIRF core-prim . fxarithmetic-shift)
        (g$11373$CQIRF core-prim . fxand)
        (g$11372$CQIRF core-prim . fx>?)
        (g$11371$CQIRF core-prim . fx>=?)
        (g$11370$CQIRF core-prim . fx=?)
        (g$11369$CQIRF core-prim . fx<?)
        (g$11368$CQIRF core-prim . fx<=?)
        (g$6376$CQIRF core-prim . fx-/carry)
        (g$11367$CQIRF core-prim . fx-)
        (g$6377$CQIRF core-prim . fx+/carry)
        (g$11366$CQIRF core-prim . fx+)
        (g$6375$CQIRF core-prim . fx*/carry)
        (g$11365$CQIRF core-prim . fx*)
        (g$11364$CQIRF core-prim . greatest-fixnum)
        (g$11363$CQIRF core-prim . least-fixnum)
        (g$5367$CQIRF core-prim . fixnum-width)
        (g$5365$CQIRF core-prim . fixnum?)
        (g$6338$CQIRF core-prim . bitwise-rotate-bit-field)
        (g$11362$CQIRF core-prim . bitwise-reverse-bit-field)
        (g$11361$CQIRF core-prim . bitwise-length)
        (g$6332$CQIRF core-prim . bitwise-if)
        (g$11360$CQIRF core-prim . bitwise-first-bit-set)
        (g$6335$CQIRF core-prim . bitwise-copy-bit-field)
        (g$6333$CQIRF core-prim . bitwise-copy-bit)
        (g$11359$CQIRF core-prim . bitwise-bit-set?)
        (g$6334$CQIRF core-prim . bitwise-bit-field)
        (g$11358$CQIRF core-prim . bitwise-bit-count)
        (g$11357$CQIRF core-prim . bitwise-xor)
        (g$11356$CQIRF core-prim . bitwise-ior)
        (g$11355$CQIRF core-prim . bitwise-and)
        (g$11354$CQIRF core-prim . bitwise-not)
        (g$6337$CQIRF core-prim . bitwise-arithmetic-shift-right)
        (g$6336$CQIRF core-prim . bitwise-arithmetic-shift-left)
        (g$11353$CQIRF core-prim . bitwise-arithmetic-shift)
        (g$5400$CQIRF core-prim . zero?)
        (g$5360$CQIRF core-prim . vector?)
        (g$11352$CQIRF core-prim . vector-set!)
        (g$11351$CQIRF core-prim . vector-ref)
        (g$5432$CQIRF core-prim . vector-map)
        (g$11350$CQIRF core-prim . vector-length)
        (g$5433$CQIRF core-prim . vector-for-each)
        (g$5368$CQIRF core-prim . vector-fill!)
        (g$11349$CQIRF core-prim . vector->list)
        (g$11348$CQIRF core-prim . vector)
        (g$11347$CQIRF core-prim . values)
        (g$11346$CQIRF core-prim . truncate)
        (g$11345$CQIRF core-prim . tan)
        (g$5362$CQIRF core-prim . symbol?)
        (g$5417$CQIRF core-prim . symbol=?)
        (g$11344$CQIRF core-prim . symbol->string)
        (g$11343$CQIRF core-prim . substring)
        (g$11342$CQIRF core-prim . string?)
        (g$5414$CQIRF core-prim . string>?)
        (g$5416$CQIRF core-prim . string>=?)
        (g$5412$CQIRF core-prim . string=?)
        (g$5413$CQIRF core-prim . string<?)
        (g$5415$CQIRF core-prim . string<=?)
        (g$11341$CQIRF core-prim . string-ref)
        (g$11340$CQIRF core-prim . string-length)
        (g$5434$CQIRF core-prim . string-for-each)
        (g$11339$CQIRF core-prim . string-copy)
        (g$11338$CQIRF core-prim . string-append)
        (g$11337$CQIRF core-prim . string->symbol)
        (g$11336$CQIRF core-prim . string->number)
        (g$11335$CQIRF core-prim . string->list)
        (g$11334$CQIRF core-prim . string)
        (g$11333$CQIRF core-prim . sqrt)
        (g$11332$CQIRF core-prim . sin)
        (g$11331$CQIRF core-prim . round)
        (g$5369$CQIRF core-prim . reverse)
        (g$11330$CQIRF core-prim . real?)
        (g$11329$CQIRF core-prim . real-valued?)
        (g$11328$CQIRF core-prim . real-part)
        (g$5429$CQIRF core-prim . rationalize)
        (g$11327$CQIRF core-prim . rational?)
        (g$11326$CQIRF core-prim . rational-valued?)
        (g$5364$CQIRF core-prim . procedure?)
        (g$5398$CQIRF core-prim . positive?)
        (g$11325$CQIRF core-prim . pair?)
        (g$5402$CQIRF core-prim . odd?)
        (g$11324$CQIRF core-prim . numerator)
        (g$11323$CQIRF core-prim . number?)
        (g$11322$CQIRF core-prim . number->string)
        (g$11321$CQIRF core-prim . null?)
        (g$11320$CQIRF core-prim . not)
        (g$5399$CQIRF core-prim . negative?)
        (g$11319$CQIRF core-prim . nan?)
        (g$5404$CQIRF core-prim . min)
        (g$5403$CQIRF core-prim . max)
        (g$5057$CQIRF core-prim . map)
        (g$11318$CQIRF core-prim . make-vector)
        (g$11317$CQIRF core-prim . make-string)
        (g$11316$CQIRF core-prim . make-rectangular)
        (g$11315$CQIRF core-prim . make-polar)
        (g$11314$CQIRF core-prim . magnitude)
        (g$11313$CQIRF core-prim . log)
        (g$11312$CQIRF core-prim . list?)
        (g$5037$CQIRF core-prim . list-tail)
        (g$5038$CQIRF core-prim . list-ref)
        (g$5357$CQIRF core-prim . list->vector)
        (g$5358$CQIRF core-prim . list->string)
        (g$11311$CQIRF core-prim . list)
        (g$11310$CQIRF core-prim . length)
        (g$5406$CQIRF core-prim . lcm)
        (g$11309$CQIRF core-prim . integer?)
        (g$11308$CQIRF core-prim . integer-valued?)
        (g$11307$CQIRF core-prim . integer->char)
        (g$11306$CQIRF core-prim . infinite?)
        (g$11305$CQIRF core-prim . inexact?)
        (g$11304$CQIRF core-prim . inexact)
        (g$11303$CQIRF core-prim . imag-part)
        (g$5405$CQIRF core-prim . gcd)
        (g$5058$CQIRF core-prim . for-each)
        (g$11302$CQIRF core-prim . floor)
        (g$11301$CQIRF core-prim . finite?)
        (g$11300$CQIRF core-prim . expt)
        (g$11299$CQIRF core-prim . exp)
        (g$11298$CQIRF core-prim . exact?)
        (g$11297$CQIRF core-prim . exact-integer-sqrt)
        (g$11296$CQIRF core-prim . exact)
        (g$5401$CQIRF core-prim . even?)
        (g$11295$CQIRF core-prim . error)
        (g$11294$CQIRF core-prim . eqv?)
        (g$11293$CQIRF core-prim . equal?)
        (g$11292$CQIRF core-prim . eq?)
        (g$11291$CQIRF core-prim . dynamic-wind)
        (g$11290$CQIRF core-prim . div0-and-mod0)
        (g$5356$CQIRF core-prim . mod0)
        (g$5354$CQIRF core-prim . div0)
        (g$11289$CQIRF core-prim . div-and-mod)
        (g$5355$CQIRF core-prim . mod)
        (g$5353$CQIRF core-prim . div)
        (g$11288$CQIRF core-prim . denominator)
        (g$11287$CQIRF core-prim . cos)
        (g$11286$CQIRF core-prim . cons)
        (g$11285$CQIRF core-prim . complex?)
        (g$5359$CQIRF core-prim . char?)
        (g$5426$CQIRF core-prim . char>?)
        (g$5428$CQIRF core-prim . char>=?)
        (g$5424$CQIRF core-prim . char=?)
        (g$5425$CQIRF core-prim . char<?)
        (g$5427$CQIRF core-prim . char<=?)
        (g$11284$CQIRF core-prim . char->integer)
        (g$11283$CQIRF core-prim . ceiling)
        (g$11282$CQIRF core-prim . call-with-values)
        (g$11281$CQIRF core-prim . call/cc)
        (g$11280$CQIRF core-prim . call-with-current-continuation)
        (g$5397$CQIRF core-prim . cddddr)
        (g$5396$CQIRF core-prim . cdddar)
        (g$5395$CQIRF core-prim . cddadr)
        (g$5394$CQIRF core-prim . cddaar)
        (g$5393$CQIRF core-prim . cdaddr)
        (g$5392$CQIRF core-prim . cdadar)
        (g$5391$CQIRF core-prim . cdaadr)
        (g$5390$CQIRF core-prim . cdaaar)
        (g$5389$CQIRF core-prim . cadddr)
        (g$5388$CQIRF core-prim . caddar)
        (g$5387$CQIRF core-prim . cadadr)
        (g$5386$CQIRF core-prim . cadaar)
        (g$5385$CQIRF core-prim . caaddr)
        (g$5384$CQIRF core-prim . caadar)
        (g$5383$CQIRF core-prim . caaadr)
        (g$5382$CQIRF core-prim . caaaar)
        (g$5381$CQIRF core-prim . cdddr)
        (g$5380$CQIRF core-prim . cddar)
        (g$5379$CQIRF core-prim . cdadr)
        (g$5378$CQIRF core-prim . cdaar)
        (g$5377$CQIRF core-prim . caddr)
        (g$5376$CQIRF core-prim . cadar)
        (g$5375$CQIRF core-prim . caadr)
        (g$5374$CQIRF core-prim . caaar)
        (g$5373$CQIRF core-prim . cddr)
        (g$5372$CQIRF core-prim . cdar)
        (g$5371$CQIRF core-prim . cadr)
        (g$5370$CQIRF core-prim . caar)
        (g$11279$CQIRF core-prim . cdr)
        (g$11278$CQIRF core-prim . car)
        (g$5363$CQIRF core-prim . boolean?)
        (g$5418$CQIRF core-prim . boolean=?)
        (g$11277$CQIRF core-prim . atan)
        (g$11276$CQIRF core-prim . assertion-violation)
        (g$11275$CQIRF core-prim . asin)
        (g$11274$CQIRF core-prim . apply)
        (g$11273$CQIRF core-prim . append)
        (g$11272$CQIRF core-prim . angle)
        (g$11271$CQIRF core-prim . acos)
        (g$11270$CQIRF core-prim . abs)
        (g$11269$CQIRF core-prim . /)
        (g$11268$CQIRF core-prim . *)
        (g$11267$CQIRF core-prim . -)
        (g$11266$CQIRF core-prim . +)
        (g$11265$CQIRF core-prim . >=)
        (g$11264$CQIRF core-prim . >)
        (g$11263$CQIRF core-prim . =)
        (g$11262$CQIRF core-prim . <=)
        (g$11261$CQIRF core-prim . <)
        (g$11260$CQIRF core-prim . make-record-printer)
        (g$11259$CQIRF core-prim . eqv-hash)
        (g$11258$CQIRF core-prim . reverse!)
        (g$11257$CQIRF core-prim . deserialize-port)
        (g$11256$CQIRF core-prim . serialize-port)
        (g$6638$CQIRF core-prim . enum-set?)
        (g$6209$CQIRF core-prim . make-promise)
        (g$11074$CQIRF core-prim . load/unload)
        (g$11073$CQIRF core-prim . load/args)
        (g$6747$CQIRF core-prim . printf)
        (g$6748$CQIRF core-prim . fprintf)
        (g$6749$CQIRF core-prim . format)
        (g$11255$CQIRF core-prim . procedure-form)
        (g$11254$CQIRF core-prim . procedure-environment)
        (g$11253$CQIRF core-prim . procedure-name)
        (g$11252$CQIRF core-prim . procedure-arity)
        (g$11251$CQIRF core-prim . gc-collect)
        (g$11250$CQIRF core-prim . typeof)
        (g$11249$CQIRF core-prim . clr-type?)
        (g$11248$CQIRF core-prim . get-clr-type)
        (g$11247$CQIRF core-prim . get-command-line)
        (g$11246$CQIRF core-prim . vector-append)
        (g$11245$CQIRF core-prim . vector-filter)
        (g$11244$CQIRF core-prim . vector-reverse!)
        (g$11243$CQIRF core-prim . vector-contains?)
        (g$11242$CQIRF core-prim . vector-index-of)
        (g$11241$CQIRF core-prim . vector-copy)
        (g$11240$CQIRF core-prim . vector-binary-search)
        (g$11239$CQIRF core-prim . string-ci-compare)
        (g$11238$CQIRF core-prim . string-compare)
        (g$11237$CQIRF core-prim . string-format)
        (g$11070$CQIRF core-prim . trace-printer)
        (g$11236$CQIRF core-prim . make-traced-procedure)
        (g$6769$CQIRF core-prim . make-traced-macro)
        (g$8086$CQIRF core-prim . assertion-error)
        (g$11235$CQIRF core-prim . time-it)
        (g$7042$CQIRF core-prim . make-parameter)
        (g$11234$CQIRF core-prim . library-locator)
        (g$11233$CQIRF core-prim . get-library-paths)
        (g$11232$CQIRF core-prim . open-tcp-input/output-port)
        (g$11231$CQIRF core-prim . hashtable-for-each)
        (g$11230$CQIRF core-prim . hashtable-map)
        (g$8064$CQIRF core-prim . environment-bindings)
        (g$8067$CQIRF core-prim . environment-symbols)
        (g$8063$CQIRF core-prim . interaction-environment-symbols)
        (g$11229$CQIRF core-prim . optimization-level)
        (g$7395$CQIRF core-prim . library-path)
        (g$7773$CQIRF core-prim . make-compile-time-value)
        (g$8073$CQIRF core-prim . expand->core)
        (g$8071$CQIRF core-prim . expand)
        (g$6825$CQIRF core-prim . convert->cps)
        (g$7416$CQIRF core-prim . installed-libraries)
        (g$7407$CQIRF core-prim . uninstall-library)
        (g$11228$CQIRF $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11227$CQIRF $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11226$CQIRF $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11225$CQIRF $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11224$CQIRF $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11223$CQIRF
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11222$CQIRF
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11221$CQIRF
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11220$CQIRF
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11219$CQIRF $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11218$CQIRF
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11217$CQIRF $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11216$CQIRF $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11215$CQIRF $core-rtd &i/o-rtd &i/o-rcd)
        (g$11214$CQIRF $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11213$CQIRF $core-rtd &undefined-rtd &undefined-rcd)
        (g$11212$CQIRF $core-rtd &syntax-rtd &syntax-rcd)
        (g$11211$CQIRF $core-rtd &lexical-rtd &lexical-rcd)
        (g$11210$CQIRF
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11209$CQIRF $core-rtd &who-rtd &who-rcd)
        (g$11208$CQIRF $core-rtd &irritants-rtd &irritants-rcd)
        (g$11207$CQIRF $core-rtd &assertion-rtd &assertion-rcd)
        (g$11206$CQIRF $core-rtd &violation-rtd &violation-rcd)
        (g$11205$CQIRF $core-rtd &error-rtd &error-rcd)
        (g$11204$CQIRF $core-rtd &serious-rtd &serious-rcd)
        (g$11203$CQIRF $core-rtd &warning-rtd &warning-rcd)
        (g$11202$CQIRF $core-rtd &message-rtd &message-rcd)
        (g$11201$CQIRF $core-rtd &condition-rtd &condition-rcd)
        (g$11200$CQIRF macro . define-condition-type)
        (g$11199$CQIRF macro . define-enumeration)
        (g$11198$CQIRF macro . define-record-type)
        (g$11197$CQIRF macro . parent-rtd)
        (g$11196$CQIRF macro . nongenerative)
        (g$11195$CQIRF macro . opaque)
        (g$11194$CQIRF macro . sealed)
        (g$11193$CQIRF macro . protocol)
        (g$11192$CQIRF macro . parent)
        (g$11191$CQIRF macro . immutable)
        (g$11190$CQIRF macro . mutable)
        (g$11189$CQIRF macro . fields)
        (g$11188$CQIRF macro . error-handling-mode)
        (g$11187$CQIRF macro . file-options)
        (g$11186$CQIRF macro . buffer-mode)
        (g$11185$CQIRF macro . eol-style)
        (g$11184$CQIRF macro . guard)
        (g$11183$CQIRF macro . trace-letrec-syntax)
        (g$11182$CQIRF macro . trace-let-syntax)
        (g$11181$CQIRF macro . trace-define-syntax)
        (g$11180$CQIRF macro . trace-define)
        (g$11179$CQIRF macro . trace-lambda)
        (g$11178$CQIRF macro . unsyntax-splicing)
        (g$11177$CQIRF macro . unsyntax)
        (g$11176$CQIRF macro . unquote-splicing)
        (g$11175$CQIRF macro . unquote)
        (g$11174$CQIRF macro . _)
        (g$11173$CQIRF macro . else)
        (g$11172$CQIRF macro . =>)
        (g$11171$CQIRF macro . ...)
        (g$11170$CQIRF macro . assert)
        (g$11169$CQIRF macro . endianness)
        (g$11168$CQIRF macro . delay)
        (g$11167$CQIRF macro . time)
        (g$11166$CQIRF macro . or)
        (g$11165$CQIRF macro . and)
        (g$11164$CQIRF macro . do)
        (g$11163$CQIRF macro . cond)
        (g$11162$CQIRF macro . let*)
        (g$11161$CQIRF macro . let)
        (g$11160$CQIRF macro . identifier-syntax)
        (g$11159$CQIRF macro . with-syntax)
        (g$11158$CQIRF macro . quasisyntax)
        (g$11157$CQIRF macro . quasiquote)
        (g$11156$CQIRF macro . syntax-rules)
        (g$11155$CQIRF macro . include-into)
        (g$11154$CQIRF macro . include)
        (g$11153$CQIRF macro . define-struct)
        (g$11152$CQIRF macro . let-values)
        (g$11151$CQIRF macro . let*-values)
        (g$11150$CQIRF core-macro . record-constructor-descriptor)
        (g$11149$CQIRF core-macro . record-type-descriptor)
        (g$11148$CQIRF core-macro . fluid-let-syntax)
        (g$11147$CQIRF macro . case)
        (g$11146$CQIRF macro . parameterize)
        (g$11145$CQIRF macro . unless)
        (g$11144$CQIRF macro . when)
        (g$11143$CQIRF core-macro . if)
        (g$11142$CQIRF core-macro . letrec*)
        (g$11141$CQIRF core-macro . letrec)
        (g$11140$CQIRF core-macro . type-descriptor)
        (g$11139$CQIRF core-macro . case-lambda)
        (g$11138$CQIRF core-macro . lambda)
        (g$11137$CQIRF core-macro . syntax)
        (g$11136$CQIRF core-macro . syntax-case)
        (g$11135$CQIRF core-macro . quote)
        (g$11134$CQIRF core-macro . foreign-call)
        (g$11133$CQIRF letrec-syntax)
        (g$11132$CQIRF let-syntax)
        (g$11131$CQIRF set!)
        (g$11130$CQIRF export)
        (g$11129$CQIRF import)
        (g$11128$CQIRF library)
        (g$11127$CQIRF begin)
        (g$11126$CQIRF module)
        (g$11125$CQIRF define-syntax)
        (g$11124$CQIRF define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9284$CQIRF
      'g$11630$CQIRF
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$11569$CQIRF)
        (eval-core . g$11568$CQIRF)
        (set-symbol-value! . g$11566$CQIRF)
        (symbol-value . g$11565$CQIRF)
        (gensym . g$11562$CQIRF)
        (void . g$11561$CQIRF))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$13572$CQIRF
     g$trace-printer$13633$CQIRF
     (g$make-parameter$8771$CQIRF write))
   (g$command-line$13573$CQIRF
     g$command-line$13634$CQIRF
     (g$make-parameter$8771$CQIRF (get-command-line)))
   (g$local-library-path$13574$CQIRF
     g$local-library-path$13635$CQIRF
     (case-lambda
       ((g$filename$13587$CQIRF)
        (cons
          (g$get-directory-name$6736$CQIRF g$filename$13587$CQIRF)
          (g$library-path$9268$CQIRF)))))
   (g$load/args$13575$CQIRF
     g$load/args$13636$CQIRF
     (case-lambda
       ((g$filename$13588$CQIRF . g$args$13589$CQIRF)
        (begin
          (apply
            g$load-r6rs-top-level$13584$CQIRF
            g$filename$13588$CQIRF
            'load
            g$args$13589$CQIRF)
          (void)))))
   (g$load/unload$13576$CQIRF
     g$load/unload$13637$CQIRF
     (case-lambda
       ((g$filename$13590$CQIRF)
        ((case-lambda
           ((g$libs$13591$CQIRF)
            (begin
              (g$load$13577$CQIRF g$filename$13590$CQIRF)
              (g$for-each$5947$CQIRF
                (case-lambda
                  ((g$lib$13592$CQIRF)
                   (if (not (g$memq$5938$CQIRF
                              g$lib$13592$CQIRF
                              g$libs$13591$CQIRF))
                     (g$uninstall-library$9280$CQIRF g$lib$13592$CQIRF)
                     (void))))
                (g$installed-libraries$9289$CQIRF)))))
         (g$installed-libraries$9289$CQIRF)))))
   (g$load$13577$CQIRF
     g$load$13638$CQIRF
     (case-lambda
       ((g$filename$13593$CQIRF)
        (begin
          (apply
            g$load-r6rs-top-level$13584$CQIRF
            g$filename$13593$CQIRF
            'load
            (cdr (g$command-line$13573$CQIRF)))
          (void)))))
   (g$ironscheme-build$13578$CQIRF
     g$ironscheme-build$13639$CQIRF
     (case-lambda
       (() (g$ironscheme-build$13578$CQIRF '#f))
       ((g$cps?$13594$CQIRF)
        (begin
          (g$call-with-output-file$8113$CQIRF
            '"build-options.ss"
            (case-lambda
              ((g$p$13595$CQIRF)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$13594$CQIRF)
                   g$p$13595$CQIRF)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$13594$CQIRF))
                   g$p$13595$CQIRF)
                 (g$newline$8114$CQIRF g$p$13595$CQIRF)))))
          (g$load$13577$CQIRF '"ironscheme-buildscript.ss")))))
   (g$foreground-color$13579$CQIRF
     g$foreground-color$13640$CQIRF
     (case-lambda
       (() (clr-call-internal 'console 'get_foregroundcolor '()))
       ((g$color$13596$CQIRF)
        (clr-call-internal
          'console
          'set_foregroundcolor
          '()
          g$color$13596$CQIRF))))
   (g$eval-top-level$13580$CQIRF
     g$eval-top-level$13641$CQIRF
     (case-lambda
       ((g$x$13597$CQIRF)
        (call/cc
          (case-lambda
            ((g$k$13598$CQIRF)
             (with-exception-handler
               (case-lambda
                 ((g$e$13599$CQIRF)
                  (begin
                    ((case-lambda
                       ((g$foreground-color$13604$CQIRF
                          g$current-output-port$13605$CQIRF
                          g$foreground-color$13606$CQIRF
                          g$current-output-port$13607$CQIRF)
                        ((case-lambda
                           ((g$swap$13608$CQIRF)
                            (dynamic-wind
                              g$swap$13608$CQIRF
                              (case-lambda
                                (()
                                 (begin
                                   (display
                                     '"Unhandled exception during evaluation:
")
                                   (display g$e$13599$CQIRF)
                                   (g$newline$8114$CQIRF))))
                              g$swap$13608$CQIRF)))
                         (case-lambda
                           (()
                            (begin
                              ((case-lambda
                                 ((g$t$13609$CQIRF)
                                  (begin
                                    (g$foreground-color$13604$CQIRF
                                      g$foreground-color$13606$CQIRF)
                                    (set! g$foreground-color$13606$CQIRF
                                      g$t$13609$CQIRF))))
                               (g$foreground-color$13604$CQIRF))
                              ((case-lambda
                                 ((g$t$13610$CQIRF)
                                  (begin
                                    (g$current-output-port$13605$CQIRF
                                      g$current-output-port$13607$CQIRF)
                                    (set! g$current-output-port$13607$CQIRF
                                      g$t$13610$CQIRF))))
                               (g$current-output-port$13605$CQIRF))))))))
                     g$foreground-color$13579$CQIRF
                     current-output-port
                     'red
                     (current-error-port))
                    (g$k$13598$CQIRF))))
               (case-lambda
                 (()
                  (g$eval$13545$CQIRF
                    g$x$13597$CQIRF
                    (g$interaction-environment$13570$CQIRF)))))))))))
   (g$compile-system-libraries$13581$CQIRF
     g$compile-system-libraries$13642$CQIRF
     (case-lambda
       (()
        (g$eval-top-level$13580$CQIRF
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$13582$CQIRF
     g$compile$13643$CQIRF
     (case-lambda
       ((g$filename$13611$CQIRF)
        (g$load-r6rs-top-level$13584$CQIRF g$filename$13611$CQIRF 'compile))))
   (g$compile->closure$13583$CQIRF
     g$compile->closure$13644$CQIRF
     (case-lambda
       ((g$filename$13612$CQIRF)
        (g$load-r6rs-top-level$13584$CQIRF g$filename$13612$CQIRF 'closure))))
   (g$load-r6rs-top-level$13584$CQIRF
     g$load-r6rs-top-level$13645$CQIRF
     (case-lambda
       ((g$filename$13613$CQIRF g$how$13614$CQIRF . g$args$13615$CQIRF)
        ((case-lambda
           ((g$library-path$13618$CQIRF g$library-path$13619$CQIRF)
            ((case-lambda
               ((g$swap$13620$CQIRF)
                (dynamic-wind
                  g$swap$13620$CQIRF
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$13621$CQIRF)
                         ((case-lambda
                            ((g$t$13622$CQIRF)
                             (if (eqv? g$t$13622$CQIRF 'closure)
                               (g$pre-compile-r6rs-top-level$13568$CQIRF
                                 g$x*$13621$CQIRF)
                               (if (eqv? g$t$13622$CQIRF 'load)
                                 ((case-lambda
                                    ((g$command-line$13625$CQIRF
                                       g$command-line$13626$CQIRF)
                                     ((case-lambda
                                        ((g$swap$13627$CQIRF)
                                         (dynamic-wind
                                           g$swap$13627$CQIRF
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$13567$CQIRF
                                                 g$x*$13621$CQIRF))))
                                           g$swap$13627$CQIRF)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$13628$CQIRF)
                                             (begin
                                               (g$command-line$13625$CQIRF
                                                 g$command-line$13626$CQIRF)
                                               (set! g$command-line$13626$CQIRF
                                                 g$t$13628$CQIRF))))
                                          (g$command-line$13625$CQIRF)))))))
                                  g$command-line$13573$CQIRF
                                  (cons
                                    g$filename$13613$CQIRF
                                    (g$map$5946$CQIRF
                                      (case-lambda
                                        ((g$x$13629$CQIRF)
                                         (g$format$8288$CQIRF
                                           '"~a"
                                           g$x$13629$CQIRF)))
                                      g$args$13615$CQIRF)))
                                 (if (eqv? g$t$13622$CQIRF 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$13567$CQIRF
                                       g$x*$13621$CQIRF)
                                     (g$serialize-all$9272$CQIRF
                                       serialize-library
                                       g$compile-core-expr$9020$CQIRF))
                                   (if '#f '#f (void)))))))
                          g$how$13614$CQIRF)))
                      (g$with-input-from-file$8110$CQIRF
                        g$filename$13613$CQIRF
                        (case-lambda
                          (()
                           ((letrec ((g$f$13630$CQIRF
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$13631$CQIRF)
                                              (if (eof-object? g$x$13631$CQIRF)
                                                '()
                                                (cons
                                                  g$x$13631$CQIRF
                                                  (g$f$13630$CQIRF)))))
                                           (read-annotated))))))
                              g$f$13630$CQIRF))))))))
                  g$swap$13620$CQIRF)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$13632$CQIRF)
                    (begin
                      (g$library-path$13618$CQIRF g$library-path$13619$CQIRF)
                      (set! g$library-path$13619$CQIRF g$t$13632$CQIRF))))
                 (g$library-path$13618$CQIRF)))))))
         g$library-path$9268$CQIRF
         (g$local-library-path$13574$CQIRF g$filename$13613$CQIRF)))))
   (g$fo$13585$CQIRF
     g$fo$13646$CQIRF
     (g$make-enumeration$8250$CQIRF '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$9273$CQIRF
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$13586$CQIRF)
         (if (g$serious-condition?$7285$CQIRF g$ex$13586$CQIRF)
           (raise g$ex$13586$CQIRF)
           (begin (display g$ex$13586$CQIRF) (g$newline$8114$CQIRF))))))
    (set-symbol-value! 'load g$load$13577$CQIRF)
    (set-symbol-value! 'compile g$compile$13582$CQIRF)
    (set-symbol-value! 'compile->closure g$compile->closure$13583$CQIRF)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$13580$CQIRF)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$13536$CQIRF)
    (set-symbol-value! 'expanded2core g$expanded->core$9019$CQIRF)
    (set-symbol-value! 'trace-printer g$trace-printer$13572$CQIRF)
    (set-symbol-value! 'convert->cps g$convert->cps$8610$CQIRF)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (g$file-options-constructor$8772$CQIRF
      (g$enum-set-constructor$8253$CQIRF g$fo$13585$CQIRF))
    (g$library-path$9268$CQIRF (get-library-paths))))

