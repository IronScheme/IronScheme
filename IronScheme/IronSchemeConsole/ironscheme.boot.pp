;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$4828$1pJll4
     g$caar$5021$1pJll4
     (case-lambda ((g$x$4883$1pJll4) (car (car g$x$4883$1pJll4)))))
   (g$cadr$4829$1pJll4
     g$cadr$5022$1pJll4
     (case-lambda ((g$x$4884$1pJll4) (car (cdr g$x$4884$1pJll4)))))
   (g$cdar$4830$1pJll4
     g$cdar$5023$1pJll4
     (case-lambda ((g$x$4885$1pJll4) (cdr (car g$x$4885$1pJll4)))))
   (g$cddr$4831$1pJll4
     g$cddr$5024$1pJll4
     (case-lambda ((g$x$4886$1pJll4) (cdr (cdr g$x$4886$1pJll4)))))
   (g$caaar$4832$1pJll4
     g$caaar$5025$1pJll4
     (case-lambda
       ((g$x$4887$1pJll4) (g$caar$4828$1pJll4 (car g$x$4887$1pJll4)))))
   (g$caadr$4833$1pJll4
     g$caadr$5026$1pJll4
     (case-lambda
       ((g$x$4888$1pJll4) (g$caar$4828$1pJll4 (cdr g$x$4888$1pJll4)))))
   (g$cadar$4834$1pJll4
     g$cadar$5027$1pJll4
     (case-lambda
       ((g$x$4889$1pJll4) (g$cadr$4829$1pJll4 (car g$x$4889$1pJll4)))))
   (g$caddr$4835$1pJll4
     g$caddr$5028$1pJll4
     (case-lambda
       ((g$x$4890$1pJll4) (g$cadr$4829$1pJll4 (cdr g$x$4890$1pJll4)))))
   (g$cdaar$4836$1pJll4
     g$cdaar$5029$1pJll4
     (case-lambda
       ((g$x$4891$1pJll4) (g$cdar$4830$1pJll4 (car g$x$4891$1pJll4)))))
   (g$cdadr$4837$1pJll4
     g$cdadr$5030$1pJll4
     (case-lambda
       ((g$x$4892$1pJll4) (g$cdar$4830$1pJll4 (cdr g$x$4892$1pJll4)))))
   (g$cddar$4838$1pJll4
     g$cddar$5031$1pJll4
     (case-lambda
       ((g$x$4893$1pJll4) (g$cddr$4831$1pJll4 (car g$x$4893$1pJll4)))))
   (g$cdddr$4839$1pJll4
     g$cdddr$5032$1pJll4
     (case-lambda
       ((g$x$4894$1pJll4) (g$cddr$4831$1pJll4 (cdr g$x$4894$1pJll4)))))
   (g$caaaar$4840$1pJll4
     g$caaaar$5033$1pJll4
     (case-lambda
       ((g$x$4895$1pJll4) (g$caaar$4832$1pJll4 (car g$x$4895$1pJll4)))))
   (g$caaadr$4841$1pJll4
     g$caaadr$5034$1pJll4
     (case-lambda
       ((g$x$4896$1pJll4) (g$caaar$4832$1pJll4 (cdr g$x$4896$1pJll4)))))
   (g$caadar$4842$1pJll4
     g$caadar$5035$1pJll4
     (case-lambda
       ((g$x$4897$1pJll4) (g$caadr$4833$1pJll4 (car g$x$4897$1pJll4)))))
   (g$caaddr$4843$1pJll4
     g$caaddr$5036$1pJll4
     (case-lambda
       ((g$x$4898$1pJll4) (g$caadr$4833$1pJll4 (cdr g$x$4898$1pJll4)))))
   (g$cadaar$4844$1pJll4
     g$cadaar$5037$1pJll4
     (case-lambda
       ((g$x$4899$1pJll4) (g$cadar$4834$1pJll4 (car g$x$4899$1pJll4)))))
   (g$cadadr$4845$1pJll4
     g$cadadr$5038$1pJll4
     (case-lambda
       ((g$x$4900$1pJll4) (g$cadar$4834$1pJll4 (cdr g$x$4900$1pJll4)))))
   (g$caddar$4846$1pJll4
     g$caddar$5039$1pJll4
     (case-lambda
       ((g$x$4901$1pJll4) (g$caddr$4835$1pJll4 (car g$x$4901$1pJll4)))))
   (g$cadddr$4847$1pJll4
     g$cadddr$5040$1pJll4
     (case-lambda
       ((g$x$4902$1pJll4) (g$caddr$4835$1pJll4 (cdr g$x$4902$1pJll4)))))
   (g$cdaaar$4848$1pJll4
     g$cdaaar$5041$1pJll4
     (case-lambda
       ((g$x$4903$1pJll4) (g$cdaar$4836$1pJll4 (car g$x$4903$1pJll4)))))
   (g$cdaadr$4849$1pJll4
     g$cdaadr$5042$1pJll4
     (case-lambda
       ((g$x$4904$1pJll4) (g$cdaar$4836$1pJll4 (cdr g$x$4904$1pJll4)))))
   (g$cdadar$4850$1pJll4
     g$cdadar$5043$1pJll4
     (case-lambda
       ((g$x$4905$1pJll4) (g$cdadr$4837$1pJll4 (car g$x$4905$1pJll4)))))
   (g$cdaddr$4851$1pJll4
     g$cdaddr$5044$1pJll4
     (case-lambda
       ((g$x$4906$1pJll4) (g$cdadr$4837$1pJll4 (cdr g$x$4906$1pJll4)))))
   (g$cddaar$4852$1pJll4
     g$cddaar$5045$1pJll4
     (case-lambda
       ((g$x$4907$1pJll4) (g$cddar$4838$1pJll4 (car g$x$4907$1pJll4)))))
   (g$cddadr$4853$1pJll4
     g$cddadr$5046$1pJll4
     (case-lambda
       ((g$x$4908$1pJll4) (g$cddar$4838$1pJll4 (cdr g$x$4908$1pJll4)))))
   (g$cdddar$4854$1pJll4
     g$cdddar$5047$1pJll4
     (case-lambda
       ((g$x$4909$1pJll4) (g$cdddr$4839$1pJll4 (car g$x$4909$1pJll4)))))
   (g$cddddr$4855$1pJll4
     g$cddddr$5048$1pJll4
     (case-lambda
       ((g$x$4910$1pJll4) (g$cdddr$4839$1pJll4 (cdr g$x$4910$1pJll4)))))
   (g$string=?$4862$1pJll4
     g$string=?$5049$1pJll4
     (case-lambda
       ((g$a$4911$1pJll4 g$b$4912$1pJll4 . g$rest$4913$1pJll4)
        (begin
          (if (not (string? g$a$4911$1pJll4))
            (assertion-violation 'string=? '"not a string" g$a$4911$1pJll4)
            (void))
          (if (not (string? g$b$4912$1pJll4))
            (assertion-violation 'string=? '"not a string" g$b$4912$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$4914$1pJll4)
               (if (not (string? g$x$4914$1pJll4))
                 (assertion-violation 'string=? '"not a string" g$x$4914$1pJll4)
                 (void))))
            g$rest$4913$1pJll4)
          ((letrec ((g$f$4915$1pJll4
                      (case-lambda
                        ((g$a$4916$1pJll4 g$b$4917$1pJll4 g$rest$4918$1pJll4)
                         (if (null? g$rest$4918$1pJll4)
                           (= (string-compare g$a$4916$1pJll4 g$b$4917$1pJll4)
                              '0)
                           (if (= (string-compare
                                    g$a$4916$1pJll4
                                    g$b$4917$1pJll4)
                                  '0)
                             (begin
                               '#f
                               (g$f$4915$1pJll4
                                 g$b$4917$1pJll4
                                 (car g$rest$4918$1pJll4)
                                 (cdr g$rest$4918$1pJll4)))
                             '#f))))))
             g$f$4915$1pJll4)
           g$a$4911$1pJll4
           g$b$4912$1pJll4
           g$rest$4913$1pJll4)))))
   (g$string<?$4863$1pJll4
     g$string<?$5050$1pJll4
     (case-lambda
       ((g$a$4919$1pJll4 g$b$4920$1pJll4 . g$rest$4921$1pJll4)
        (begin
          (if (not (string? g$a$4919$1pJll4))
            (assertion-violation 'string<? '"not a string" g$a$4919$1pJll4)
            (void))
          (if (not (string? g$b$4920$1pJll4))
            (assertion-violation 'string<? '"not a string" g$b$4920$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$4922$1pJll4)
               (if (not (string? g$x$4922$1pJll4))
                 (assertion-violation 'string<? '"not a string" g$x$4922$1pJll4)
                 (void))))
            g$rest$4921$1pJll4)
          ((letrec ((g$f$4923$1pJll4
                      (case-lambda
                        ((g$a$4924$1pJll4 g$b$4925$1pJll4 g$rest$4926$1pJll4)
                         (if (null? g$rest$4926$1pJll4)
                           (< (string-compare g$a$4924$1pJll4 g$b$4925$1pJll4)
                              '0)
                           (if (< (string-compare
                                    g$a$4924$1pJll4
                                    g$b$4925$1pJll4)
                                  '0)
                             (begin
                               '#f
                               (g$f$4923$1pJll4
                                 g$b$4925$1pJll4
                                 (car g$rest$4926$1pJll4)
                                 (cdr g$rest$4926$1pJll4)))
                             '#f))))))
             g$f$4923$1pJll4)
           g$a$4919$1pJll4
           g$b$4920$1pJll4
           g$rest$4921$1pJll4)))))
   (g$string>?$4864$1pJll4
     g$string>?$5051$1pJll4
     (case-lambda
       ((g$a$4927$1pJll4 g$b$4928$1pJll4 . g$rest$4929$1pJll4)
        (begin
          (if (not (string? g$a$4927$1pJll4))
            (assertion-violation 'string>? '"not a string" g$a$4927$1pJll4)
            (void))
          (if (not (string? g$b$4928$1pJll4))
            (assertion-violation 'string>? '"not a string" g$b$4928$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$4930$1pJll4)
               (if (not (string? g$x$4930$1pJll4))
                 (assertion-violation 'string>? '"not a string" g$x$4930$1pJll4)
                 (void))))
            g$rest$4929$1pJll4)
          ((letrec ((g$f$4931$1pJll4
                      (case-lambda
                        ((g$a$4932$1pJll4 g$b$4933$1pJll4 g$rest$4934$1pJll4)
                         (if (null? g$rest$4934$1pJll4)
                           (> (string-compare g$a$4932$1pJll4 g$b$4933$1pJll4)
                              '0)
                           (if (> (string-compare
                                    g$a$4932$1pJll4
                                    g$b$4933$1pJll4)
                                  '0)
                             (begin
                               '#f
                               (g$f$4931$1pJll4
                                 g$b$4933$1pJll4
                                 (car g$rest$4934$1pJll4)
                                 (cdr g$rest$4934$1pJll4)))
                             '#f))))))
             g$f$4931$1pJll4)
           g$a$4927$1pJll4
           g$b$4928$1pJll4
           g$rest$4929$1pJll4)))))
   (g$string<=?$4865$1pJll4
     g$string<=?$5052$1pJll4
     (case-lambda
       ((g$a$4935$1pJll4 g$b$4936$1pJll4 . g$rest$4937$1pJll4)
        (begin
          (if (not (string? g$a$4935$1pJll4))
            (assertion-violation 'string<=? '"not a string" g$a$4935$1pJll4)
            (void))
          (if (not (string? g$b$4936$1pJll4))
            (assertion-violation 'string<=? '"not a string" g$b$4936$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$4938$1pJll4)
               (if (not (string? g$x$4938$1pJll4))
                 (assertion-violation
                   'string<=?
                   '"not a string"
                   g$x$4938$1pJll4)
                 (void))))
            g$rest$4937$1pJll4)
          ((letrec ((g$f$4939$1pJll4
                      (case-lambda
                        ((g$a$4940$1pJll4 g$b$4941$1pJll4 g$rest$4942$1pJll4)
                         (if (null? g$rest$4942$1pJll4)
                           (<= (string-compare g$a$4940$1pJll4 g$b$4941$1pJll4)
                               '0)
                           (if (<= (string-compare
                                     g$a$4940$1pJll4
                                     g$b$4941$1pJll4)
                                   '0)
                             (begin
                               '#f
                               (g$f$4939$1pJll4
                                 g$b$4941$1pJll4
                                 (car g$rest$4942$1pJll4)
                                 (cdr g$rest$4942$1pJll4)))
                             '#f))))))
             g$f$4939$1pJll4)
           g$a$4935$1pJll4
           g$b$4936$1pJll4
           g$rest$4937$1pJll4)))))
   (g$string>=?$4866$1pJll4
     g$string>=?$5053$1pJll4
     (case-lambda
       ((g$a$4943$1pJll4 g$b$4944$1pJll4 . g$rest$4945$1pJll4)
        (begin
          (if (not (string? g$a$4943$1pJll4))
            (assertion-violation 'string>=? '"not a string" g$a$4943$1pJll4)
            (void))
          (if (not (string? g$b$4944$1pJll4))
            (assertion-violation 'string>=? '"not a string" g$b$4944$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$4946$1pJll4)
               (if (not (string? g$x$4946$1pJll4))
                 (assertion-violation
                   'string>=?
                   '"not a string"
                   g$x$4946$1pJll4)
                 (void))))
            g$rest$4945$1pJll4)
          ((letrec ((g$f$4947$1pJll4
                      (case-lambda
                        ((g$a$4948$1pJll4 g$b$4949$1pJll4 g$rest$4950$1pJll4)
                         (if (null? g$rest$4950$1pJll4)
                           (>= (string-compare g$a$4948$1pJll4 g$b$4949$1pJll4)
                               '0)
                           (if (>= (string-compare
                                     g$a$4948$1pJll4
                                     g$b$4949$1pJll4)
                                   '0)
                             (begin
                               '#f
                               (g$f$4947$1pJll4
                                 g$b$4949$1pJll4
                                 (car g$rest$4950$1pJll4)
                                 (cdr g$rest$4950$1pJll4)))
                             '#f))))))
             g$f$4947$1pJll4)
           g$a$4943$1pJll4
           g$b$4944$1pJll4
           g$rest$4945$1pJll4)))))
   (g$symbol=?$4867$1pJll4
     g$symbol=?$5054$1pJll4
     (case-lambda
       ((g$a$4951$1pJll4 g$b$4952$1pJll4 . g$rest$4953$1pJll4)
        (begin
          (if (not (symbol? g$a$4951$1pJll4))
            (assertion-violation 'symbol=? '"not a symbol" g$a$4951$1pJll4)
            (void))
          (if (not (symbol? g$b$4952$1pJll4))
            (assertion-violation 'symbol=? '"not a symbol" g$b$4952$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$4954$1pJll4)
               (if (not (symbol? g$x$4954$1pJll4))
                 (assertion-violation 'symbol=? '"not a symbol" g$x$4954$1pJll4)
                 (void))))
            g$rest$4953$1pJll4)
          ((letrec ((g$f$4955$1pJll4
                      (case-lambda
                        ((g$a$4956$1pJll4 g$b$4957$1pJll4 g$rest$4958$1pJll4)
                         (if (null? g$rest$4958$1pJll4)
                           (eq? g$a$4956$1pJll4 g$b$4957$1pJll4)
                           (if (eq? g$a$4956$1pJll4 g$b$4957$1pJll4)
                             (begin
                               '#f
                               (g$f$4955$1pJll4
                                 g$b$4957$1pJll4
                                 (car g$rest$4958$1pJll4)
                                 (cdr g$rest$4958$1pJll4)))
                             '#f))))))
             g$f$4955$1pJll4)
           g$a$4951$1pJll4
           g$b$4952$1pJll4
           g$rest$4953$1pJll4)))))
   (g$boolean=?$4868$1pJll4
     g$boolean=?$5055$1pJll4
     (case-lambda
       ((g$a$4959$1pJll4 g$b$4960$1pJll4 . g$rest$4961$1pJll4)
        (begin
          (if (not (boolean? g$a$4959$1pJll4))
            (assertion-violation 'boolean=? '"not a boolean" g$a$4959$1pJll4)
            (void))
          (if (not (boolean? g$b$4960$1pJll4))
            (assertion-violation 'boolean=? '"not a boolean" g$b$4960$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$4962$1pJll4)
               (if (not (boolean? g$x$4962$1pJll4))
                 (assertion-violation
                   'boolean=?
                   '"not a boolean"
                   g$x$4962$1pJll4)
                 (void))))
            g$rest$4961$1pJll4)
          ((letrec ((g$f$4963$1pJll4
                      (case-lambda
                        ((g$a$4964$1pJll4 g$b$4965$1pJll4 g$rest$4966$1pJll4)
                         (if (null? g$rest$4966$1pJll4)
                           (eq? g$a$4964$1pJll4 g$b$4965$1pJll4)
                           (if (eq? g$a$4964$1pJll4 g$b$4965$1pJll4)
                             (begin
                               '#f
                               (g$f$4963$1pJll4
                                 g$b$4965$1pJll4
                                 (car g$rest$4966$1pJll4)
                                 (cdr g$rest$4966$1pJll4)))
                             '#f))))))
             g$f$4963$1pJll4)
           g$a$4959$1pJll4
           g$b$4960$1pJll4
           g$rest$4961$1pJll4)))))
   (g$char=?$4875$1pJll4
     g$char=?$5056$1pJll4
     (case-lambda
       ((g$a$4967$1pJll4 g$b$4968$1pJll4 . g$rest$4969$1pJll4)
        (begin
          (if (not (char? g$a$4967$1pJll4))
            (assertion-violation 'char=? '"not a char" g$a$4967$1pJll4)
            (void))
          (if (not (char? g$b$4968$1pJll4))
            (assertion-violation 'char=? '"not a char" g$b$4968$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$4970$1pJll4)
               (if (not (char? g$x$4970$1pJll4))
                 (assertion-violation 'char=? '"not a char" g$x$4970$1pJll4)
                 (void))))
            g$rest$4969$1pJll4)
          ((letrec ((g$f$4971$1pJll4
                      (case-lambda
                        ((g$a$4972$1pJll4 g$b$4973$1pJll4 g$rest$4974$1pJll4)
                         (if (null? g$rest$4974$1pJll4)
                           (= (char->integer g$a$4972$1pJll4)
                              (char->integer g$b$4973$1pJll4))
                           (if (= (char->integer g$a$4972$1pJll4)
                                  (char->integer g$b$4973$1pJll4))
                             (begin
                               '#f
                               (g$f$4971$1pJll4
                                 g$b$4973$1pJll4
                                 (car g$rest$4974$1pJll4)
                                 (cdr g$rest$4974$1pJll4)))
                             '#f))))))
             g$f$4971$1pJll4)
           g$a$4967$1pJll4
           g$b$4968$1pJll4
           g$rest$4969$1pJll4)))))
   (g$char<?$4876$1pJll4
     g$char<?$5057$1pJll4
     (case-lambda
       ((g$a$4975$1pJll4 g$b$4976$1pJll4 . g$rest$4977$1pJll4)
        (begin
          (if (not (char? g$a$4975$1pJll4))
            (assertion-violation 'char<? '"not a char" g$a$4975$1pJll4)
            (void))
          (if (not (char? g$b$4976$1pJll4))
            (assertion-violation 'char<? '"not a char" g$b$4976$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$4978$1pJll4)
               (if (not (char? g$x$4978$1pJll4))
                 (assertion-violation 'char<? '"not a char" g$x$4978$1pJll4)
                 (void))))
            g$rest$4977$1pJll4)
          ((letrec ((g$f$4979$1pJll4
                      (case-lambda
                        ((g$a$4980$1pJll4 g$b$4981$1pJll4 g$rest$4982$1pJll4)
                         (if (null? g$rest$4982$1pJll4)
                           (< (char->integer g$a$4980$1pJll4)
                              (char->integer g$b$4981$1pJll4))
                           (if (< (char->integer g$a$4980$1pJll4)
                                  (char->integer g$b$4981$1pJll4))
                             (begin
                               '#f
                               (g$f$4979$1pJll4
                                 g$b$4981$1pJll4
                                 (car g$rest$4982$1pJll4)
                                 (cdr g$rest$4982$1pJll4)))
                             '#f))))))
             g$f$4979$1pJll4)
           g$a$4975$1pJll4
           g$b$4976$1pJll4
           g$rest$4977$1pJll4)))))
   (g$char>?$4877$1pJll4
     g$char>?$5058$1pJll4
     (case-lambda
       ((g$a$4983$1pJll4 g$b$4984$1pJll4 . g$rest$4985$1pJll4)
        (begin
          (if (not (char? g$a$4983$1pJll4))
            (assertion-violation 'char>? '"not a char" g$a$4983$1pJll4)
            (void))
          (if (not (char? g$b$4984$1pJll4))
            (assertion-violation 'char>? '"not a char" g$b$4984$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$4986$1pJll4)
               (if (not (char? g$x$4986$1pJll4))
                 (assertion-violation 'char>? '"not a char" g$x$4986$1pJll4)
                 (void))))
            g$rest$4985$1pJll4)
          ((letrec ((g$f$4987$1pJll4
                      (case-lambda
                        ((g$a$4988$1pJll4 g$b$4989$1pJll4 g$rest$4990$1pJll4)
                         (if (null? g$rest$4990$1pJll4)
                           (> (char->integer g$a$4988$1pJll4)
                              (char->integer g$b$4989$1pJll4))
                           (if (> (char->integer g$a$4988$1pJll4)
                                  (char->integer g$b$4989$1pJll4))
                             (begin
                               '#f
                               (g$f$4987$1pJll4
                                 g$b$4989$1pJll4
                                 (car g$rest$4990$1pJll4)
                                 (cdr g$rest$4990$1pJll4)))
                             '#f))))))
             g$f$4987$1pJll4)
           g$a$4983$1pJll4
           g$b$4984$1pJll4
           g$rest$4985$1pJll4)))))
   (g$char<=?$4878$1pJll4
     g$char<=?$5059$1pJll4
     (case-lambda
       ((g$a$4991$1pJll4 g$b$4992$1pJll4 . g$rest$4993$1pJll4)
        (begin
          (if (not (char? g$a$4991$1pJll4))
            (assertion-violation 'char<=? '"not a char" g$a$4991$1pJll4)
            (void))
          (if (not (char? g$b$4992$1pJll4))
            (assertion-violation 'char<=? '"not a char" g$b$4992$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$4994$1pJll4)
               (if (not (char? g$x$4994$1pJll4))
                 (assertion-violation 'char<=? '"not a char" g$x$4994$1pJll4)
                 (void))))
            g$rest$4993$1pJll4)
          ((letrec ((g$f$4995$1pJll4
                      (case-lambda
                        ((g$a$4996$1pJll4 g$b$4997$1pJll4 g$rest$4998$1pJll4)
                         (if (null? g$rest$4998$1pJll4)
                           (<= (char->integer g$a$4996$1pJll4)
                               (char->integer g$b$4997$1pJll4))
                           (if (<= (char->integer g$a$4996$1pJll4)
                                   (char->integer g$b$4997$1pJll4))
                             (begin
                               '#f
                               (g$f$4995$1pJll4
                                 g$b$4997$1pJll4
                                 (car g$rest$4998$1pJll4)
                                 (cdr g$rest$4998$1pJll4)))
                             '#f))))))
             g$f$4995$1pJll4)
           g$a$4991$1pJll4
           g$b$4992$1pJll4
           g$rest$4993$1pJll4)))))
   (g$char>=?$4879$1pJll4
     g$char>=?$5060$1pJll4
     (case-lambda
       ((g$a$4999$1pJll4 g$b$5000$1pJll4 . g$rest$5001$1pJll4)
        (begin
          (if (not (char? g$a$4999$1pJll4))
            (assertion-violation 'char>=? '"not a char" g$a$4999$1pJll4)
            (void))
          (if (not (char? g$b$5000$1pJll4))
            (assertion-violation 'char>=? '"not a char" g$b$5000$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$5002$1pJll4)
               (if (not (char? g$x$5002$1pJll4))
                 (assertion-violation 'char>=? '"not a char" g$x$5002$1pJll4)
                 (void))))
            g$rest$5001$1pJll4)
          ((letrec ((g$f$5003$1pJll4
                      (case-lambda
                        ((g$a$5004$1pJll4 g$b$5005$1pJll4 g$rest$5006$1pJll4)
                         (if (null? g$rest$5006$1pJll4)
                           (>= (char->integer g$a$5004$1pJll4)
                               (char->integer g$b$5005$1pJll4))
                           (if (>= (char->integer g$a$5004$1pJll4)
                                   (char->integer g$b$5005$1pJll4))
                             (begin
                               '#f
                               (g$f$5003$1pJll4
                                 g$b$5005$1pJll4
                                 (car g$rest$5006$1pJll4)
                                 (cdr g$rest$5006$1pJll4)))
                             '#f))))))
             g$f$5003$1pJll4)
           g$a$4999$1pJll4
           g$b$5000$1pJll4
           g$rest$5001$1pJll4)))))
   (g$rationalize$4880$1pJll4
     g$rationalize$5061$1pJll4
     (case-lambda
       ((g$x$5007$1pJll4 g$e$5008$1pJll4)
        (if (if (infinite? g$x$5007$1pJll4)
              (begin '#f (infinite? g$e$5008$1pJll4))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5009$1pJll4)
              (if (if (exact? g$x$5007$1pJll4)
                    (begin '#f (exact? g$e$5008$1pJll4))
                    '#f)
                g$r$5009$1pJll4
                (inexact g$r$5009$1pJll4))))
           (apply
             /
             (g$find-ratio$4881$1pJll4 g$x$5007$1pJll4 g$e$5008$1pJll4)))))))
   (g$find-ratio$4881$1pJll4
     g$find-ratio$5062$1pJll4
     (case-lambda
       ((g$x$5010$1pJll4 g$e$5011$1pJll4)
        (g$find-ratio-between$4882$1pJll4
          (- g$x$5010$1pJll4 g$e$5011$1pJll4)
          (+ g$x$5010$1pJll4 g$e$5011$1pJll4)))))
   (g$find-ratio-between$4882$1pJll4
     g$find-ratio-between$5063$1pJll4
     (case-lambda
       ((g$x$5012$1pJll4 g$y$5013$1pJll4)
        (letrec* ((g$sr$5014$1pJll4
                    (case-lambda
                      ((g$x$5016$1pJll4 g$y$5017$1pJll4)
                       ((case-lambda
                          ((g$fx$5018$1pJll4 g$fy$5019$1pJll4)
                           (if (>= g$fx$5018$1pJll4 g$x$5016$1pJll4)
                             (list g$fx$5018$1pJll4 '1)
                             (if (= g$fx$5018$1pJll4 g$fy$5019$1pJll4)
                               ((case-lambda
                                  ((g$rat$5020$1pJll4)
                                   (list
                                     (+ (g$cadr$4829$1pJll4 g$rat$5020$1pJll4)
                                        (* g$fx$5018$1pJll4
                                           (car g$rat$5020$1pJll4)))
                                     (car g$rat$5020$1pJll4))))
                                (g$sr$5014$1pJll4
                                  (/ (- g$y$5017$1pJll4 g$fy$5019$1pJll4))
                                  (/ (- g$x$5016$1pJll4 g$fx$5018$1pJll4))))
                               (list (+ '1 g$fx$5018$1pJll4) '1)))))
                        (exact (floor g$x$5016$1pJll4))
                        (exact (floor g$y$5017$1pJll4)))))))
          (if (< g$y$5013$1pJll4 g$x$5012$1pJll4)
            (g$find-ratio-between$4882$1pJll4 g$y$5013$1pJll4 g$x$5012$1pJll4)
            (if (>= g$x$5012$1pJll4 g$y$5013$1pJll4)
              (list g$x$5012$1pJll4 '1)
              (if (positive? g$x$5012$1pJll4)
                (g$sr$5014$1pJll4 g$x$5012$1pJll4 g$y$5013$1pJll4)
                (if (negative? g$y$5013$1pJll4)
                  ((case-lambda
                     ((g$rat$5015$1pJll4)
                      (list
                        (- (car g$rat$5015$1pJll4))
                        (g$cadr$4829$1pJll4 g$rat$5015$1pJll4))))
                   (g$sr$5014$1pJll4 (- g$y$5013$1pJll4) (- g$x$5012$1pJll4)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5259$1pJll4 g$using$5294$1pJll4 (clr-using-internal 'system))
   (g$using$5261$1pJll4
     g$using$5295$1pJll4
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5262$1pJll4
     g$make-eq-hashtable$5296$1pJll4
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5273$1pJll4)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5273$1pJll4)))))
   (g$make-eqv-hashtable$5263$1pJll4
     g$make-eqv-hashtable$5297$1pJll4
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5274$1pJll4) (make-hashtable eqv-hash eqv? g$k$5274$1pJll4))))
   (g$hashtable-size$5264$1pJll4
     g$hashtable-size$5298$1pJll4
     (case-lambda
       ((g$ht$5275$1pJll4)
        (clr-call-internal 'hashtable 'get_count g$ht$5275$1pJll4))))
   (g$hashtable-ref$5265$1pJll4
     g$hashtable-ref$5299$1pJll4
     (case-lambda
       ((g$ht$5276$1pJll4 g$key$5277$1pJll4 g$default$5278$1pJll4)
        (letrec* ((g$r$5279$1pJll4
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5276$1pJll4
                      g$key$5277$1pJll4)))
          (if (not (null? g$r$5279$1pJll4))
            g$r$5279$1pJll4
            g$default$5278$1pJll4)))))
   (g$hashtable-set!$5266$1pJll4
     g$hashtable-set!$5300$1pJll4
     (case-lambda
       ((g$ht$5280$1pJll4 g$key$5281$1pJll4 g$obj$5282$1pJll4)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5280$1pJll4
          g$key$5281$1pJll4
          g$obj$5282$1pJll4))))
   (g$hashtable-delete!$5267$1pJll4
     g$hashtable-delete!$5301$1pJll4
     (case-lambda
       ((g$ht$5283$1pJll4 g$key$5284$1pJll4)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5283$1pJll4
          g$key$5284$1pJll4))))
   (g$hashtable-contains?$5268$1pJll4
     g$hashtable-contains?$5302$1pJll4
     (case-lambda
       ((g$ht$5285$1pJll4 g$key$5286$1pJll4)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5285$1pJll4
          g$key$5286$1pJll4))))
   (g$hashtable-update!$5269$1pJll4
     g$hashtable-update!$5303$1pJll4
     (case-lambda
       ((g$ht$5287$1pJll4
          g$key$5288$1pJll4
          g$proc$5289$1pJll4
          g$default$5290$1pJll4)
        (g$hashtable-set!$5266$1pJll4
          g$ht$5287$1pJll4
          g$key$5288$1pJll4
          (g$proc$5289$1pJll4
            (g$hashtable-ref$5265$1pJll4
              g$ht$5287$1pJll4
              g$key$5288$1pJll4
              g$default$5290$1pJll4))))))
   (g$hashtable-clear!$5270$1pJll4
     g$hashtable-clear!$5304$1pJll4
     (case-lambda
       ((g$ht$5291$1pJll4)
        (clr-call-internal 'hashtable 'clear g$ht$5291$1pJll4))
       ((g$ht$5292$1pJll4 g$k$5293$1pJll4)
        (clr-call-internal 'hashtable 'clear g$ht$5292$1pJll4))))
   (g$clear-usings$5272$1pJll4
     g$clear-usings$5305$1pJll4
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5307$1pJll4
     g$using$5373$1pJll4
     (clr-using-internal 'system.io))
   (g$file-exists?$5308$1pJll4
     g$file-exists?$5374$1pJll4
     (case-lambda
       ((g$fn$5336$1pJll4)
        (clr-call-internal 'file 'exists '() g$fn$5336$1pJll4))))
   (g$delete-file$5309$1pJll4
     g$delete-file$5375$1pJll4
     (case-lambda
       ((g$fn$5337$1pJll4)
        (clr-call-internal 'file 'delete '() g$fn$5337$1pJll4))))
   (g$file-copy$5310$1pJll4
     g$file-copy$5376$1pJll4
     (case-lambda
       ((g$from$5338$1pJll4 g$to$5339$1pJll4)
        (g$file-copy$5310$1pJll4 g$from$5338$1pJll4 g$to$5339$1pJll4 '#f))
       ((g$from$5340$1pJll4 g$to$5341$1pJll4 g$overwrite?$5342$1pJll4)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5340$1pJll4
          g$to$5341$1pJll4
          g$overwrite?$5342$1pJll4))))
   (g$file-move$5311$1pJll4
     g$file-move$5377$1pJll4
     (case-lambda
       ((g$from$5343$1pJll4 g$to$5344$1pJll4)
        (clr-call-internal
          'file
          'move
          '()
          g$from$5343$1pJll4
          g$to$5344$1pJll4))))
   (g$file-create-time$5312$1pJll4
     g$file-create-time$5378$1pJll4
     (case-lambda
       ((g$fn$5345$1pJll4)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5345$1pJll4))))
   (g$file-access-time$5313$1pJll4
     g$file-access-time$5379$1pJll4
     (case-lambda
       ((g$fn$5346$1pJll4)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5346$1pJll4))))
   (g$file-modified-time$5314$1pJll4
     g$file-modified-time$5380$1pJll4
     (case-lambda
       ((g$fn$5347$1pJll4)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5347$1pJll4))))
   (g$directory-exists?$5315$1pJll4
     g$directory-exists?$5381$1pJll4
     (case-lambda
       ((g$fn$5348$1pJll4)
        (clr-call-internal 'directory 'exists '() g$fn$5348$1pJll4))))
   (g$delete-directory$5316$1pJll4
     g$delete-directory$5382$1pJll4
     (case-lambda
       ((g$dir$5349$1pJll4)
        (g$delete-directory$5316$1pJll4 g$dir$5349$1pJll4 '#f))
       ((g$dir$5350$1pJll4 g$recursive?$5351$1pJll4)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5350$1pJll4
          g$recursive?$5351$1pJll4))))
   (g$directory-move$5317$1pJll4
     g$directory-move$5383$1pJll4
     (case-lambda
       ((g$from$5352$1pJll4 g$to$5353$1pJll4)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5352$1pJll4
          g$to$5353$1pJll4))))
   (g$create-directory$5318$1pJll4
     g$create-directory$5384$1pJll4
     (case-lambda
       ((g$name$5354$1pJll4)
        (clr-call-internal
          'directory
          'createdirectory
          '()
          g$name$5354$1pJll4))))
   (g$get-files$5319$1pJll4
     g$get-files$5385$1pJll4
     (case-lambda
       ((g$dir$5355$1pJll4) (g$get-files$5319$1pJll4 g$dir$5355$1pJll4 '"*"))
       ((g$dir$5356$1pJll4 g$pattern$5357$1pJll4)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5356$1pJll4
          g$pattern$5357$1pJll4))))
   (g$get-directories$5320$1pJll4
     g$get-directories$5386$1pJll4
     (case-lambda
       ((g$dir$5358$1pJll4)
        (g$get-directories$5320$1pJll4 g$dir$5358$1pJll4 '"*"))
       ((g$dir$5359$1pJll4 g$pattern$5360$1pJll4)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5359$1pJll4
          g$pattern$5360$1pJll4))))
   (g$change-extension$5321$1pJll4
     g$change-extension$5387$1pJll4
     (case-lambda
       ((g$path$5361$1pJll4 g$extension$5362$1pJll4)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5361$1pJll4
          g$extension$5362$1pJll4))))
   (g$path-combine$5322$1pJll4
     g$path-combine$5388$1pJll4
     (case-lambda
       ((g$path1$5363$1pJll4 g$path2$5364$1pJll4)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5363$1pJll4
          g$path2$5364$1pJll4))))
   (g$get-directory-name$5323$1pJll4
     g$get-directory-name$5389$1pJll4
     (case-lambda
       ((g$path$5365$1pJll4)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5365$1pJll4))))
   (g$get-extension$5324$1pJll4
     g$get-extension$5390$1pJll4
     (case-lambda
       ((g$path$5366$1pJll4)
        (clr-call-internal 'path 'getextension '() g$path$5366$1pJll4))))
   (g$get-filename$5325$1pJll4
     g$get-filename$5391$1pJll4
     (case-lambda
       ((g$path$5367$1pJll4)
        (clr-call-internal 'path 'getfilename '() g$path$5367$1pJll4))))
   (g$get-filename-without-extension$5326$1pJll4
     g$get-filename-without-extension$5392$1pJll4
     (case-lambda
       ((g$path$5368$1pJll4)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5368$1pJll4))))
   (g$get-full-path$5327$1pJll4
     g$get-full-path$5393$1pJll4
     (case-lambda
       ((g$path$5369$1pJll4)
        (clr-call-internal 'path 'getfullpath '() g$path$5369$1pJll4))))
   (g$get-path-root$5328$1pJll4
     g$get-path-root$5394$1pJll4
     (case-lambda
       ((g$path$5370$1pJll4)
        (clr-call-internal 'path 'getpathroot '() g$path$5370$1pJll4))))
   (g$get-random-filename$5329$1pJll4
     g$get-random-filename$5395$1pJll4
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5330$1pJll4
     g$get-temp-filename$5396$1pJll4
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5331$1pJll4
     g$get-temp-path$5397$1pJll4
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5332$1pJll4
     g$path-rooted?$5398$1pJll4
     (case-lambda
       ((g$path$5371$1pJll4)
        (clr-call-internal 'path 'ispathrooted '() g$path$5371$1pJll4))))
   (g$path-has-extension?$5333$1pJll4
     g$path-has-extension?$5399$1pJll4
     (case-lambda
       ((g$path$5372$1pJll4)
        (clr-call-internal 'path 'hasextension '() g$path$5372$1pJll4))))
   (g$clear-usings$5335$1pJll4
     g$clear-usings$5400$1pJll4
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5401$1pJll4
     g$find$5492$1pJll4
     (case-lambda
       ((g$proc$5420$1pJll4 g$l$5421$1pJll4)
        (if (null? g$l$5421$1pJll4)
          '#f
          ((case-lambda
             ((g$e$5422$1pJll4)
              (if (g$proc$5420$1pJll4 g$e$5422$1pJll4)
                g$e$5422$1pJll4
                (g$find$5401$1pJll4 g$proc$5420$1pJll4 (cdr g$l$5421$1pJll4)))))
           (car g$l$5421$1pJll4))))))
   (g$partition$5402$1pJll4
     g$partition$5493$1pJll4
     (case-lambda
       ((g$proc$5423$1pJll4 g$l$5424$1pJll4)
        ((letrec ((g$f$5425$1pJll4
                    (case-lambda
                      ((g$l$5426$1pJll4 g$a$5427$1pJll4 g$b$5428$1pJll4)
                       (if (null? g$l$5426$1pJll4)
                         (values
                           (reverse! g$a$5427$1pJll4)
                           (reverse! g$b$5428$1pJll4))
                         ((case-lambda
                            ((g$e$5429$1pJll4)
                             (if (g$proc$5423$1pJll4 g$e$5429$1pJll4)
                               (g$f$5425$1pJll4
                                 (cdr g$l$5426$1pJll4)
                                 (cons g$e$5429$1pJll4 g$a$5427$1pJll4)
                                 g$b$5428$1pJll4)
                               (g$f$5425$1pJll4
                                 (cdr g$l$5426$1pJll4)
                                 g$a$5427$1pJll4
                                 (cons g$e$5429$1pJll4 g$b$5428$1pJll4)))))
                          (car g$l$5426$1pJll4)))))))
           g$f$5425$1pJll4)
         g$l$5424$1pJll4
         '()
         '()))))
   (g$remp$5403$1pJll4
     g$remp$5494$1pJll4
     (case-lambda
       ((g$proc$5430$1pJll4 g$l$5431$1pJll4)
        ((letrec ((g$f$5432$1pJll4
                    (case-lambda
                      ((g$l$5433$1pJll4 g$a$5434$1pJll4)
                       (if (null? g$l$5433$1pJll4)
                         (reverse! g$a$5434$1pJll4)
                         ((case-lambda
                            ((g$e$5435$1pJll4)
                             (if (g$proc$5430$1pJll4 g$e$5435$1pJll4)
                               (g$f$5432$1pJll4
                                 (cdr g$l$5433$1pJll4)
                                 g$a$5434$1pJll4)
                               (g$f$5432$1pJll4
                                 (cdr g$l$5433$1pJll4)
                                 (cons g$e$5435$1pJll4 g$a$5434$1pJll4)))))
                          (car g$l$5433$1pJll4)))))))
           g$f$5432$1pJll4)
         g$l$5431$1pJll4
         '()))))
   (g$filter$5404$1pJll4
     g$filter$5495$1pJll4
     (case-lambda
       ((g$proc$5436$1pJll4 g$l$5437$1pJll4)
        ((letrec ((g$f$5438$1pJll4
                    (case-lambda
                      ((g$l$5439$1pJll4 g$a$5440$1pJll4)
                       (if (null? g$l$5439$1pJll4)
                         (reverse! g$a$5440$1pJll4)
                         ((case-lambda
                            ((g$e$5441$1pJll4)
                             (if (g$proc$5436$1pJll4 g$e$5441$1pJll4)
                               (g$f$5438$1pJll4
                                 (cdr g$l$5439$1pJll4)
                                 (cons g$e$5441$1pJll4 g$a$5440$1pJll4))
                               (g$f$5438$1pJll4
                                 (cdr g$l$5439$1pJll4)
                                 g$a$5440$1pJll4))))
                          (car g$l$5439$1pJll4)))))))
           g$f$5438$1pJll4)
         g$l$5437$1pJll4
         '()))))
   (g$assv$5405$1pJll4
     g$assv$5496$1pJll4
     (case-lambda
       ((g$obj$5442$1pJll4 g$lst$5443$1pJll4)
        (if (null? g$lst$5443$1pJll4)
          '#f
          ((case-lambda
             ((g$c$5444$1pJll4)
              (if (eqv? g$obj$5442$1pJll4 (car g$c$5444$1pJll4))
                g$c$5444$1pJll4
                (g$assv$5405$1pJll4
                  g$obj$5442$1pJll4
                  (cdr g$lst$5443$1pJll4)))))
           (car g$lst$5443$1pJll4))))))
   (g$assoc$5406$1pJll4
     g$assoc$5497$1pJll4
     (case-lambda
       ((g$obj$5445$1pJll4 g$lst$5446$1pJll4)
        (if (null? g$lst$5446$1pJll4)
          '#f
          ((case-lambda
             ((g$c$5447$1pJll4)
              (if (equal? g$obj$5445$1pJll4 (car g$c$5447$1pJll4))
                g$c$5447$1pJll4
                (g$assoc$5406$1pJll4
                  g$obj$5445$1pJll4
                  (cdr g$lst$5446$1pJll4)))))
           (car g$lst$5446$1pJll4))))))
   (g$assp$5407$1pJll4
     g$assp$5498$1pJll4
     (case-lambda
       ((g$p?$5448$1pJll4 g$lst$5449$1pJll4)
        (if (null? g$lst$5449$1pJll4)
          '#f
          ((case-lambda
             ((g$c$5450$1pJll4)
              (if (g$p?$5448$1pJll4 (car g$c$5450$1pJll4))
                g$c$5450$1pJll4
                (g$assp$5407$1pJll4 g$p?$5448$1pJll4 (cdr g$lst$5449$1pJll4)))))
           (car g$lst$5449$1pJll4))))))
   (g$member$5408$1pJll4
     g$member$5499$1pJll4
     (case-lambda
       ((g$obj$5451$1pJll4 g$lst$5452$1pJll4)
        (if (null? g$lst$5452$1pJll4)
          '#f
          (if (equal? g$obj$5451$1pJll4 (car g$lst$5452$1pJll4))
            g$lst$5452$1pJll4
            (g$member$5408$1pJll4
              g$obj$5451$1pJll4
              (cdr g$lst$5452$1pJll4)))))))
   (g$memp$5409$1pJll4
     g$memp$5500$1pJll4
     (case-lambda
       ((g$p?$5453$1pJll4 g$lst$5454$1pJll4)
        (if (null? g$lst$5454$1pJll4)
          '#f
          (if (g$p?$5453$1pJll4 (car g$lst$5454$1pJll4))
            g$lst$5454$1pJll4
            (g$memp$5409$1pJll4 g$p?$5453$1pJll4 (cdr g$lst$5454$1pJll4)))))))
   (g$all-empty?$5410$1pJll4
     g$all-empty?$5501$1pJll4
     (case-lambda
       ((g$ls$5455$1pJll4)
        ((case-lambda
           ((g$t$5456$1pJll4)
            (if g$t$5456$1pJll4
              g$t$5456$1pJll4
              (begin
                '#f
                (if (null? (car g$ls$5455$1pJll4))
                  (begin '#f (g$all-empty?$5410$1pJll4 (cdr g$ls$5455$1pJll4)))
                  '#f)))))
         (null? g$ls$5455$1pJll4)))))
   (g$split$5411$1pJll4
     g$split$5502$1pJll4
     (case-lambda
       ((g$ls$5457$1pJll4)
        (if (null? g$ls$5457$1pJll4)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5411$1pJll4 (cdr g$ls$5457$1pJll4))))
            (case-lambda
              ((g$cars$5458$1pJll4 g$cdrs$5459$1pJll4)
               ((case-lambda
                  ((g$a$5460$1pJll4)
                   (values
                     (cons (car g$a$5460$1pJll4) g$cars$5458$1pJll4)
                     (cons (cdr g$a$5460$1pJll4) g$cdrs$5459$1pJll4))))
                (car g$ls$5457$1pJll4)))))))))
   (g$for-all$5412$1pJll4
     g$for-all$5503$1pJll4
     (case-lambda
       ((g$f$5461$1pJll4 . g$args$5462$1pJll4)
        (if (g$all-empty?$5410$1pJll4 g$args$5462$1pJll4)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5411$1pJll4 g$args$5462$1pJll4)))
            (case-lambda
              ((g$cars$5463$1pJll4 g$cdrs$5464$1pJll4)
               (if (g$all-empty?$5410$1pJll4 g$cdrs$5464$1pJll4)
                 (apply g$f$5461$1pJll4 g$cars$5463$1pJll4)
                 (if (apply g$f$5461$1pJll4 g$cars$5463$1pJll4)
                   (begin
                     '#f
                     (apply
                       g$for-all$5412$1pJll4
                       g$f$5461$1pJll4
                       g$cdrs$5464$1pJll4))
                   '#f)))))))))
   (g$exists$5413$1pJll4
     g$exists$5504$1pJll4
     (case-lambda
       ((g$f$5465$1pJll4 . g$args$5466$1pJll4)
        (if (g$all-empty?$5410$1pJll4 g$args$5466$1pJll4)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5411$1pJll4 g$args$5466$1pJll4)))
            (case-lambda
              ((g$cars$5467$1pJll4 g$cdrs$5468$1pJll4)
               ((case-lambda
                  ((g$t$5469$1pJll4)
                   (if g$t$5469$1pJll4
                     g$t$5469$1pJll4
                     (begin
                       '#f
                       (apply
                         g$exists$5413$1pJll4
                         g$f$5465$1pJll4
                         g$cdrs$5468$1pJll4)))))
                (apply g$f$5465$1pJll4 g$cars$5467$1pJll4)))))))))
   (g$cons*$5414$1pJll4
     g$cons*$5505$1pJll4
     (case-lambda
       ((g$a$5470$1pJll4 . g$rest$5471$1pJll4)
        ((letrec ((g$f$5472$1pJll4
                    (case-lambda
                      ((g$a$5473$1pJll4 g$rest$5474$1pJll4)
                       (if (null? g$rest$5474$1pJll4)
                         g$a$5473$1pJll4
                         (cons
                           g$a$5473$1pJll4
                           (g$f$5472$1pJll4
                             (car g$rest$5474$1pJll4)
                             (cdr g$rest$5474$1pJll4))))))))
           g$f$5472$1pJll4)
         g$a$5470$1pJll4
         g$rest$5471$1pJll4))))
   (g$fold-left$5415$1pJll4
     g$fold-left$5506$1pJll4
     (case-lambda
       ((g$combine$5475$1pJll4
          g$nil$5476$1pJll4
          g$list1$5477$1pJll4
          .
          g$lists$5478$1pJll4)
        (if (null? g$list1$5477$1pJll4)
          g$nil$5476$1pJll4
          (apply
            g$fold-left$5415$1pJll4
            (g$cons*$5414$1pJll4
              g$combine$5475$1pJll4
              (apply
                g$combine$5475$1pJll4
                (g$cons*$5414$1pJll4
                  g$nil$5476$1pJll4
                  (car g$list1$5477$1pJll4)
                  (map car g$lists$5478$1pJll4)))
              (cdr g$list1$5477$1pJll4)
              (map cdr g$lists$5478$1pJll4)))))))
   (g$fold-right$5416$1pJll4
     g$fold-right$5507$1pJll4
     (case-lambda
       ((g$combine$5479$1pJll4
          g$nil$5480$1pJll4
          g$list1$5481$1pJll4
          .
          g$lists$5482$1pJll4)
        (if (null? g$list1$5481$1pJll4)
          g$nil$5480$1pJll4
          (apply
            g$combine$5479$1pJll4
            (append
              (list (car g$list1$5481$1pJll4))
              (map car g$lists$5482$1pJll4)
              (list
                (apply
                  g$fold-right$5416$1pJll4
                  (g$cons*$5414$1pJll4
                    g$combine$5479$1pJll4
                    g$nil$5480$1pJll4
                    (cdr g$list1$5481$1pJll4)
                    (map cdr g$lists$5482$1pJll4))))))))))
   (g$remove$5417$1pJll4
     g$remove$5508$1pJll4
     (case-lambda
       ((g$obj$5483$1pJll4 g$list$5484$1pJll4)
        (g$remp$5403$1pJll4
          (case-lambda
            ((g$x$5485$1pJll4) (equal? g$obj$5483$1pJll4 g$x$5485$1pJll4)))
          g$list$5484$1pJll4))))
   (g$remv$5418$1pJll4
     g$remv$5509$1pJll4
     (case-lambda
       ((g$obj$5486$1pJll4 g$list$5487$1pJll4)
        (g$remp$5403$1pJll4
          (case-lambda
            ((g$x$5488$1pJll4) (eqv? g$obj$5486$1pJll4 g$x$5488$1pJll4)))
          g$list$5487$1pJll4))))
   (g$remq$5419$1pJll4
     g$remq$5510$1pJll4
     (case-lambda
       ((g$obj$5489$1pJll4 g$list$5490$1pJll4)
        (g$remp$5403$1pJll4
          (case-lambda
            ((g$x$5491$1pJll4) (eq? g$obj$5489$1pJll4 g$x$5491$1pJll4)))
          g$list$5490$1pJll4)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5511$1pJll4
     g$native-endianness$5622$1pJll4
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5512$1pJll4
     g$bytevector-u16-ref$5623$1pJll4
     (case-lambda
       ((g$bytevector$5540$1pJll4 g$k$5541$1pJll4 g$endianness$5542$1pJll4)
        (bytevector-uint-ref
          g$bytevector$5540$1pJll4
          g$k$5541$1pJll4
          g$endianness$5542$1pJll4
          '2))))
   (g$bytevector-s16-ref$5513$1pJll4
     g$bytevector-s16-ref$5624$1pJll4
     (case-lambda
       ((g$bytevector$5543$1pJll4 g$k$5544$1pJll4 g$endianness$5545$1pJll4)
        (bytevector-sint-ref
          g$bytevector$5543$1pJll4
          g$k$5544$1pJll4
          g$endianness$5545$1pJll4
          '2))))
   (g$bytevector-u16-native-ref$5514$1pJll4
     g$bytevector-u16-native-ref$5625$1pJll4
     (case-lambda
       ((g$bytevector$5546$1pJll4 g$k$5547$1pJll4)
        (bytevector-uint-ref
          g$bytevector$5546$1pJll4
          g$k$5547$1pJll4
          (g$native-endianness$5511$1pJll4)
          '2))))
   (g$bytevector-s16-native-ref$5515$1pJll4
     g$bytevector-s16-native-ref$5626$1pJll4
     (case-lambda
       ((g$bytevector$5548$1pJll4 g$k$5549$1pJll4)
        (bytevector-sint-ref
          g$bytevector$5548$1pJll4
          g$k$5549$1pJll4
          (g$native-endianness$5511$1pJll4)
          '2))))
   (g$bytevector-u16-set!$5516$1pJll4
     g$bytevector-u16-set!$5627$1pJll4
     (case-lambda
       ((g$bytevector$5550$1pJll4
          g$k$5551$1pJll4
          g$n$5552$1pJll4
          g$endianness$5553$1pJll4)
        (bytevector-uint-set!
          g$bytevector$5550$1pJll4
          g$k$5551$1pJll4
          g$n$5552$1pJll4
          g$endianness$5553$1pJll4
          '2))))
   (g$bytevector-s16-set!$5517$1pJll4
     g$bytevector-s16-set!$5628$1pJll4
     (case-lambda
       ((g$bytevector$5554$1pJll4
          g$k$5555$1pJll4
          g$n$5556$1pJll4
          g$endianness$5557$1pJll4)
        (bytevector-sint-set!
          g$bytevector$5554$1pJll4
          g$k$5555$1pJll4
          g$n$5556$1pJll4
          g$endianness$5557$1pJll4
          '2))))
   (g$bytevector-u16-native-set!$5518$1pJll4
     g$bytevector-u16-native-set!$5629$1pJll4
     (case-lambda
       ((g$bytevector$5558$1pJll4 g$k$5559$1pJll4 g$n$5560$1pJll4)
        (bytevector-uint-set!
          g$bytevector$5558$1pJll4
          g$k$5559$1pJll4
          g$n$5560$1pJll4
          (g$native-endianness$5511$1pJll4)
          '2))))
   (g$bytevector-s16-native-set!$5519$1pJll4
     g$bytevector-s16-native-set!$5630$1pJll4
     (case-lambda
       ((g$bytevector$5561$1pJll4 g$k$5562$1pJll4 g$n$5563$1pJll4)
        (bytevector-sint-set!
          g$bytevector$5561$1pJll4
          g$k$5562$1pJll4
          g$n$5563$1pJll4
          (g$native-endianness$5511$1pJll4)
          '2))))
   (g$bytevector-u32-ref$5520$1pJll4
     g$bytevector-u32-ref$5631$1pJll4
     (case-lambda
       ((g$bytevector$5564$1pJll4 g$k$5565$1pJll4 g$endianness$5566$1pJll4)
        (bytevector-uint-ref
          g$bytevector$5564$1pJll4
          g$k$5565$1pJll4
          g$endianness$5566$1pJll4
          '4))))
   (g$bytevector-s32-ref$5521$1pJll4
     g$bytevector-s32-ref$5632$1pJll4
     (case-lambda
       ((g$bytevector$5567$1pJll4 g$k$5568$1pJll4 g$endianness$5569$1pJll4)
        (bytevector-sint-ref
          g$bytevector$5567$1pJll4
          g$k$5568$1pJll4
          g$endianness$5569$1pJll4
          '4))))
   (g$bytevector-u32-native-ref$5522$1pJll4
     g$bytevector-u32-native-ref$5633$1pJll4
     (case-lambda
       ((g$bytevector$5570$1pJll4 g$k$5571$1pJll4)
        (bytevector-uint-ref
          g$bytevector$5570$1pJll4
          g$k$5571$1pJll4
          (g$native-endianness$5511$1pJll4)
          '4))))
   (g$bytevector-s32-native-ref$5523$1pJll4
     g$bytevector-s32-native-ref$5634$1pJll4
     (case-lambda
       ((g$bytevector$5572$1pJll4 g$k$5573$1pJll4)
        (bytevector-sint-ref
          g$bytevector$5572$1pJll4
          g$k$5573$1pJll4
          (g$native-endianness$5511$1pJll4)
          '4))))
   (g$bytevector-u32-set!$5524$1pJll4
     g$bytevector-u32-set!$5635$1pJll4
     (case-lambda
       ((g$bytevector$5574$1pJll4
          g$k$5575$1pJll4
          g$n$5576$1pJll4
          g$endianness$5577$1pJll4)
        (bytevector-uint-set!
          g$bytevector$5574$1pJll4
          g$k$5575$1pJll4
          g$n$5576$1pJll4
          g$endianness$5577$1pJll4
          '4))))
   (g$bytevector-s32-set!$5525$1pJll4
     g$bytevector-s32-set!$5636$1pJll4
     (case-lambda
       ((g$bytevector$5578$1pJll4
          g$k$5579$1pJll4
          g$n$5580$1pJll4
          g$endianness$5581$1pJll4)
        (bytevector-sint-set!
          g$bytevector$5578$1pJll4
          g$k$5579$1pJll4
          g$n$5580$1pJll4
          g$endianness$5581$1pJll4
          '4))))
   (g$bytevector-u32-native-set!$5526$1pJll4
     g$bytevector-u32-native-set!$5637$1pJll4
     (case-lambda
       ((g$bytevector$5582$1pJll4 g$k$5583$1pJll4 g$n$5584$1pJll4)
        (bytevector-uint-set!
          g$bytevector$5582$1pJll4
          g$k$5583$1pJll4
          g$n$5584$1pJll4
          (g$native-endianness$5511$1pJll4)
          '4))))
   (g$bytevector-s32-native-set!$5527$1pJll4
     g$bytevector-s32-native-set!$5638$1pJll4
     (case-lambda
       ((g$bytevector$5585$1pJll4 g$k$5586$1pJll4 g$n$5587$1pJll4)
        (bytevector-sint-set!
          g$bytevector$5585$1pJll4
          g$k$5586$1pJll4
          g$n$5587$1pJll4
          (g$native-endianness$5511$1pJll4)
          '4))))
   (g$bytevector-u64-ref$5528$1pJll4
     g$bytevector-u64-ref$5639$1pJll4
     (case-lambda
       ((g$bytevector$5588$1pJll4 g$k$5589$1pJll4 g$endianness$5590$1pJll4)
        (bytevector-uint-ref
          g$bytevector$5588$1pJll4
          g$k$5589$1pJll4
          g$endianness$5590$1pJll4
          '8))))
   (g$bytevector-s64-ref$5529$1pJll4
     g$bytevector-s64-ref$5640$1pJll4
     (case-lambda
       ((g$bytevector$5591$1pJll4 g$k$5592$1pJll4 g$endianness$5593$1pJll4)
        (bytevector-sint-ref
          g$bytevector$5591$1pJll4
          g$k$5592$1pJll4
          g$endianness$5593$1pJll4
          '8))))
   (g$bytevector-u64-native-ref$5530$1pJll4
     g$bytevector-u64-native-ref$5641$1pJll4
     (case-lambda
       ((g$bytevector$5594$1pJll4 g$k$5595$1pJll4)
        (bytevector-uint-ref
          g$bytevector$5594$1pJll4
          g$k$5595$1pJll4
          (g$native-endianness$5511$1pJll4)
          '8))))
   (g$bytevector-s64-native-ref$5531$1pJll4
     g$bytevector-s64-native-ref$5642$1pJll4
     (case-lambda
       ((g$bytevector$5596$1pJll4 g$k$5597$1pJll4)
        (bytevector-sint-ref
          g$bytevector$5596$1pJll4
          g$k$5597$1pJll4
          (g$native-endianness$5511$1pJll4)
          '8))))
   (g$bytevector-u64-set!$5532$1pJll4
     g$bytevector-u64-set!$5643$1pJll4
     (case-lambda
       ((g$bytevector$5598$1pJll4
          g$k$5599$1pJll4
          g$n$5600$1pJll4
          g$endianness$5601$1pJll4)
        (bytevector-uint-set!
          g$bytevector$5598$1pJll4
          g$k$5599$1pJll4
          g$n$5600$1pJll4
          g$endianness$5601$1pJll4
          '8))))
   (g$bytevector-s64-set!$5533$1pJll4
     g$bytevector-s64-set!$5644$1pJll4
     (case-lambda
       ((g$bytevector$5602$1pJll4
          g$k$5603$1pJll4
          g$n$5604$1pJll4
          g$endianness$5605$1pJll4)
        (bytevector-sint-set!
          g$bytevector$5602$1pJll4
          g$k$5603$1pJll4
          g$n$5604$1pJll4
          g$endianness$5605$1pJll4
          '8))))
   (g$bytevector-u64-native-set!$5534$1pJll4
     g$bytevector-u64-native-set!$5645$1pJll4
     (case-lambda
       ((g$bytevector$5606$1pJll4 g$k$5607$1pJll4 g$n$5608$1pJll4)
        (bytevector-uint-set!
          g$bytevector$5606$1pJll4
          g$k$5607$1pJll4
          g$n$5608$1pJll4
          (g$native-endianness$5511$1pJll4)
          '8))))
   (g$bytevector-s64-native-set!$5535$1pJll4
     g$bytevector-s64-native-set!$5646$1pJll4
     (case-lambda
       ((g$bytevector$5609$1pJll4 g$k$5610$1pJll4 g$n$5611$1pJll4)
        (bytevector-sint-set!
          g$bytevector$5609$1pJll4
          g$k$5610$1pJll4
          g$n$5611$1pJll4
          (g$native-endianness$5511$1pJll4)
          '8))))
   (g$bytevector-ieee-single-native-ref$5536$1pJll4
     g$bytevector-ieee-single-native-ref$5647$1pJll4
     (case-lambda
       ((g$bytevector$5612$1pJll4 g$k$5613$1pJll4)
        (if (not (zero? (mod g$k$5613$1pJll4 '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5613$1pJll4)
          (bytevector-ieee-single-ref
            g$bytevector$5612$1pJll4
            g$k$5613$1pJll4
            (g$native-endianness$5511$1pJll4))))))
   (g$bytevector-ieee-double-native-ref$5537$1pJll4
     g$bytevector-ieee-double-native-ref$5648$1pJll4
     (case-lambda
       ((g$bytevector$5614$1pJll4 g$k$5615$1pJll4)
        (if (not (zero? (mod g$k$5615$1pJll4 '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5615$1pJll4)
          (bytevector-ieee-double-ref
            g$bytevector$5614$1pJll4
            g$k$5615$1pJll4
            (g$native-endianness$5511$1pJll4))))))
   (g$bytevector-ieee-single-native-set!$5538$1pJll4
     g$bytevector-ieee-single-native-set!$5649$1pJll4
     (case-lambda
       ((g$bytevector$5616$1pJll4 g$k$5617$1pJll4 g$x$5618$1pJll4)
        (if (not (zero? (mod g$k$5617$1pJll4 '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5617$1pJll4)
          (bytevector-ieee-single-set!
            g$bytevector$5616$1pJll4
            g$k$5617$1pJll4
            g$x$5618$1pJll4
            (g$native-endianness$5511$1pJll4))))))
   (g$bytevector-ieee-double-native-set!$5539$1pJll4
     g$bytevector-ieee-double-native-set!$5650$1pJll4
     (case-lambda
       ((g$bytevector$5619$1pJll4 g$k$5620$1pJll4 g$x$5621$1pJll4)
        (if (not (zero? (mod g$k$5620$1pJll4 '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5620$1pJll4)
          (bytevector-ieee-double-set!
            g$bytevector$5619$1pJll4
            g$k$5620$1pJll4
            g$x$5621$1pJll4
            (g$native-endianness$5511$1pJll4)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6672$5651$1pJll4
     g$6672$5746$1pJll4
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6675$1pJll4
       '#f
       '#f
       '#()))
   (g$6674$5652$1pJll4 g$6674$5747$1pJll4 '#f)
   (g$6673$5653$1pJll4
     g$6673$5748$1pJll4
     (make-record-constructor-descriptor
       g$6672$5651$1pJll4
       '#f
       g$6674$5652$1pJll4))
   (g$&condition?$5654$1pJll4
     g$&condition?$5749$1pJll4
     (record-predicate g$6672$5651$1pJll4))
   (g$make-&condition$5655$1pJll4
     g$make-&condition$5750$1pJll4
     (record-constructor g$6673$5653$1pJll4))
   (g$&condition-rtd$5656$1pJll4
     g$&condition-rtd$5751$1pJll4
     g$6672$5651$1pJll4)
   (g$&condition-rcd$5657$1pJll4
     g$&condition-rcd$5752$1pJll4
     g$6673$5653$1pJll4)
   (g$6688$5658$1pJll4
     g$6688$5753$1pJll4
     (make-record-type-descriptor
       '&message
       g$6672$5651$1pJll4
       'g$6691$1pJll4
       '#f
       '#f
       '#((immutable message))))
   (g$6690$5659$1pJll4 g$6690$5754$1pJll4 '#f)
   (g$6689$5660$1pJll4
     g$6689$5755$1pJll4
     (make-record-constructor-descriptor
       g$6688$5658$1pJll4
       g$6673$5653$1pJll4
       g$6690$5659$1pJll4))
   (g$6687$5661$1pJll4
     g$6687$5756$1pJll4
     (record-predicate g$6688$5658$1pJll4))
   (g$make-message-condition$5662$1pJll4
     g$make-message-condition$5757$1pJll4
     (record-constructor g$6689$5660$1pJll4))
   (g$6686$5663$1pJll4
     g$6686$5758$1pJll4
     (record-accessor g$6688$5658$1pJll4 '0))
   (g$message-condition?$5664$1pJll4
     g$message-condition?$5759$1pJll4
     (condition-predicate g$6688$5658$1pJll4))
   (g$condition-message$5665$1pJll4
     g$condition-message$5760$1pJll4
     (condition-accessor g$6688$5658$1pJll4 g$6686$5663$1pJll4))
   (g$6704$5666$1pJll4
     g$6704$5761$1pJll4
     (make-record-type-descriptor
       '&warning
       g$6672$5651$1pJll4
       'g$6707$1pJll4
       '#f
       '#f
       '#()))
   (g$6706$5667$1pJll4 g$6706$5762$1pJll4 '#f)
   (g$6705$5668$1pJll4
     g$6705$5763$1pJll4
     (make-record-constructor-descriptor
       g$6704$5666$1pJll4
       g$6673$5653$1pJll4
       g$6706$5667$1pJll4))
   (g$6703$5669$1pJll4
     g$6703$5764$1pJll4
     (record-predicate g$6704$5666$1pJll4))
   (g$make-warning$5670$1pJll4
     g$make-warning$5765$1pJll4
     (record-constructor g$6705$5668$1pJll4))
   (g$warning?$5671$1pJll4
     g$warning?$5766$1pJll4
     (condition-predicate g$6704$5666$1pJll4))
   (g$6718$5672$1pJll4
     g$6718$5767$1pJll4
     (make-record-type-descriptor
       '&serious
       g$6672$5651$1pJll4
       'g$6721$1pJll4
       '#f
       '#f
       '#()))
   (g$6720$5673$1pJll4 g$6720$5768$1pJll4 '#f)
   (g$6719$5674$1pJll4
     g$6719$5769$1pJll4
     (make-record-constructor-descriptor
       g$6718$5672$1pJll4
       g$6673$5653$1pJll4
       g$6720$5673$1pJll4))
   (g$6717$5675$1pJll4
     g$6717$5770$1pJll4
     (record-predicate g$6718$5672$1pJll4))
   (g$make-serious-condition$5676$1pJll4
     g$make-serious-condition$5771$1pJll4
     (record-constructor g$6719$5674$1pJll4))
   (g$serious-condition?$5677$1pJll4
     g$serious-condition?$5772$1pJll4
     (condition-predicate g$6718$5672$1pJll4))
   (g$6732$5678$1pJll4
     g$6732$5773$1pJll4
     (make-record-type-descriptor
       '&error
       g$6718$5672$1pJll4
       'g$6735$1pJll4
       '#f
       '#f
       '#()))
   (g$6734$5679$1pJll4 g$6734$5774$1pJll4 '#f)
   (g$6733$5680$1pJll4
     g$6733$5775$1pJll4
     (make-record-constructor-descriptor
       g$6732$5678$1pJll4
       g$6719$5674$1pJll4
       g$6734$5679$1pJll4))
   (g$6731$5681$1pJll4
     g$6731$5776$1pJll4
     (record-predicate g$6732$5678$1pJll4))
   (g$make-error$5682$1pJll4
     g$make-error$5777$1pJll4
     (record-constructor g$6733$5680$1pJll4))
   (g$error?$5683$1pJll4
     g$error?$5778$1pJll4
     (condition-predicate g$6732$5678$1pJll4))
   (g$6746$5684$1pJll4
     g$6746$5779$1pJll4
     (make-record-type-descriptor
       '&violation
       g$6718$5672$1pJll4
       'g$6749$1pJll4
       '#f
       '#f
       '#()))
   (g$6748$5685$1pJll4 g$6748$5780$1pJll4 '#f)
   (g$6747$5686$1pJll4
     g$6747$5781$1pJll4
     (make-record-constructor-descriptor
       g$6746$5684$1pJll4
       g$6719$5674$1pJll4
       g$6748$5685$1pJll4))
   (g$6745$5687$1pJll4
     g$6745$5782$1pJll4
     (record-predicate g$6746$5684$1pJll4))
   (g$make-violation$5688$1pJll4
     g$make-violation$5783$1pJll4
     (record-constructor g$6747$5686$1pJll4))
   (g$violation?$5689$1pJll4
     g$violation?$5784$1pJll4
     (condition-predicate g$6746$5684$1pJll4))
   (g$6760$5690$1pJll4
     g$6760$5785$1pJll4
     (make-record-type-descriptor
       '&assertion
       g$6746$5684$1pJll4
       'g$6763$1pJll4
       '#f
       '#f
       '#()))
   (g$6762$5691$1pJll4 g$6762$5786$1pJll4 '#f)
   (g$6761$5692$1pJll4
     g$6761$5787$1pJll4
     (make-record-constructor-descriptor
       g$6760$5690$1pJll4
       g$6747$5686$1pJll4
       g$6762$5691$1pJll4))
   (g$6759$5693$1pJll4
     g$6759$5788$1pJll4
     (record-predicate g$6760$5690$1pJll4))
   (g$make-assertion-violation$5694$1pJll4
     g$make-assertion-violation$5789$1pJll4
     (record-constructor g$6761$5692$1pJll4))
   (g$assertion-violation?$5695$1pJll4
     g$assertion-violation?$5790$1pJll4
     (condition-predicate g$6760$5690$1pJll4))
   (g$6775$5696$1pJll4
     g$6775$5791$1pJll4
     (make-record-type-descriptor
       '&irritants
       g$6672$5651$1pJll4
       'g$6778$1pJll4
       '#f
       '#f
       '#((immutable irritants))))
   (g$6777$5697$1pJll4 g$6777$5792$1pJll4 '#f)
   (g$6776$5698$1pJll4
     g$6776$5793$1pJll4
     (make-record-constructor-descriptor
       g$6775$5696$1pJll4
       g$6673$5653$1pJll4
       g$6777$5697$1pJll4))
   (g$6774$5699$1pJll4
     g$6774$5794$1pJll4
     (record-predicate g$6775$5696$1pJll4))
   (g$make-irritants-condition$5700$1pJll4
     g$make-irritants-condition$5795$1pJll4
     (record-constructor g$6776$5698$1pJll4))
   (g$6773$5701$1pJll4
     g$6773$5796$1pJll4
     (record-accessor g$6775$5696$1pJll4 '0))
   (g$irritants-condition?$5702$1pJll4
     g$irritants-condition?$5797$1pJll4
     (condition-predicate g$6775$5696$1pJll4))
   (g$condition-irritants$5703$1pJll4
     g$condition-irritants$5798$1pJll4
     (condition-accessor g$6775$5696$1pJll4 g$6773$5701$1pJll4))
   (g$6792$5704$1pJll4
     g$6792$5799$1pJll4
     (make-record-type-descriptor
       '&who
       g$6672$5651$1pJll4
       'g$6795$1pJll4
       '#f
       '#f
       '#((immutable who))))
   (g$6794$5705$1pJll4 g$6794$5800$1pJll4 '#f)
   (g$6793$5706$1pJll4
     g$6793$5801$1pJll4
     (make-record-constructor-descriptor
       g$6792$5704$1pJll4
       g$6673$5653$1pJll4
       g$6794$5705$1pJll4))
   (g$6791$5707$1pJll4
     g$6791$5802$1pJll4
     (record-predicate g$6792$5704$1pJll4))
   (g$make-who-condition$5708$1pJll4
     g$make-who-condition$5803$1pJll4
     (record-constructor g$6793$5706$1pJll4))
   (g$6790$5709$1pJll4
     g$6790$5804$1pJll4
     (record-accessor g$6792$5704$1pJll4 '0))
   (g$who-condition?$5710$1pJll4
     g$who-condition?$5805$1pJll4
     (condition-predicate g$6792$5704$1pJll4))
   (g$condition-who$5711$1pJll4
     g$condition-who$5806$1pJll4
     (condition-accessor g$6792$5704$1pJll4 g$6790$5709$1pJll4))
   (g$6808$5712$1pJll4
     g$6808$5807$1pJll4
     (make-record-type-descriptor
       '&non-continuable
       g$6746$5684$1pJll4
       'g$6811$1pJll4
       '#f
       '#f
       '#()))
   (g$6810$5713$1pJll4 g$6810$5808$1pJll4 '#f)
   (g$6809$5714$1pJll4
     g$6809$5809$1pJll4
     (make-record-constructor-descriptor
       g$6808$5712$1pJll4
       g$6747$5686$1pJll4
       g$6810$5713$1pJll4))
   (g$6807$5715$1pJll4
     g$6807$5810$1pJll4
     (record-predicate g$6808$5712$1pJll4))
   (g$make-non-continuable-violation$5716$1pJll4
     g$make-non-continuable-violation$5811$1pJll4
     (record-constructor g$6809$5714$1pJll4))
   (g$non-continuable-violation?$5717$1pJll4
     g$non-continuable-violation?$5812$1pJll4
     (condition-predicate g$6808$5712$1pJll4))
   (g$6822$5718$1pJll4
     g$6822$5813$1pJll4
     (make-record-type-descriptor
       '&implementation-restriction
       g$6746$5684$1pJll4
       'g$6825$1pJll4
       '#f
       '#f
       '#()))
   (g$6824$5719$1pJll4 g$6824$5814$1pJll4 '#f)
   (g$6823$5720$1pJll4
     g$6823$5815$1pJll4
     (make-record-constructor-descriptor
       g$6822$5718$1pJll4
       g$6747$5686$1pJll4
       g$6824$5719$1pJll4))
   (g$6821$5721$1pJll4
     g$6821$5816$1pJll4
     (record-predicate g$6822$5718$1pJll4))
   (g$make-implementation-restriction-violation$5722$1pJll4
     g$make-implementation-restriction-violation$5817$1pJll4
     (record-constructor g$6823$5720$1pJll4))
   (g$implementation-restriction-violation?$5723$1pJll4
     g$implementation-restriction-violation?$5818$1pJll4
     (condition-predicate g$6822$5718$1pJll4))
   (g$6836$5724$1pJll4
     g$6836$5819$1pJll4
     (make-record-type-descriptor
       '&lexical
       g$6746$5684$1pJll4
       'g$6839$1pJll4
       '#f
       '#f
       '#()))
   (g$6838$5725$1pJll4 g$6838$5820$1pJll4 '#f)
   (g$6837$5726$1pJll4
     g$6837$5821$1pJll4
     (make-record-constructor-descriptor
       g$6836$5724$1pJll4
       g$6747$5686$1pJll4
       g$6838$5725$1pJll4))
   (g$6835$5727$1pJll4
     g$6835$5822$1pJll4
     (record-predicate g$6836$5724$1pJll4))
   (g$make-lexical-violation$5728$1pJll4
     g$make-lexical-violation$5823$1pJll4
     (record-constructor g$6837$5726$1pJll4))
   (g$lexical-violation?$5729$1pJll4
     g$lexical-violation?$5824$1pJll4
     (condition-predicate g$6836$5724$1pJll4))
   (g$6852$5730$1pJll4
     g$6852$5825$1pJll4
     (make-record-type-descriptor
       '&syntax
       g$6746$5684$1pJll4
       'g$6855$1pJll4
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6854$5731$1pJll4 g$6854$5826$1pJll4 '#f)
   (g$6853$5732$1pJll4
     g$6853$5827$1pJll4
     (make-record-constructor-descriptor
       g$6852$5730$1pJll4
       g$6747$5686$1pJll4
       g$6854$5731$1pJll4))
   (g$6851$5733$1pJll4
     g$6851$5828$1pJll4
     (record-predicate g$6852$5730$1pJll4))
   (g$make-syntax-violation$5734$1pJll4
     g$make-syntax-violation$5829$1pJll4
     (record-constructor g$6853$5732$1pJll4))
   (g$6849$5735$1pJll4
     g$6849$5830$1pJll4
     (record-accessor g$6852$5730$1pJll4 '0))
   (g$6850$5736$1pJll4
     g$6850$5831$1pJll4
     (record-accessor g$6852$5730$1pJll4 '1))
   (g$syntax-violation?$5737$1pJll4
     g$syntax-violation?$5832$1pJll4
     (condition-predicate g$6852$5730$1pJll4))
   (g$syntax-violation-form$5738$1pJll4
     g$syntax-violation-form$5833$1pJll4
     (condition-accessor g$6852$5730$1pJll4 g$6849$5735$1pJll4))
   (g$syntax-violation-subform$5739$1pJll4
     g$syntax-violation-subform$5834$1pJll4
     (condition-accessor g$6852$5730$1pJll4 g$6850$5736$1pJll4))
   (g$6870$5740$1pJll4
     g$6870$5835$1pJll4
     (make-record-type-descriptor
       '&undefined
       g$6746$5684$1pJll4
       'g$6873$1pJll4
       '#f
       '#f
       '#()))
   (g$6872$5741$1pJll4 g$6872$5836$1pJll4 '#f)
   (g$6871$5742$1pJll4
     g$6871$5837$1pJll4
     (make-record-constructor-descriptor
       g$6870$5740$1pJll4
       g$6747$5686$1pJll4
       g$6872$5741$1pJll4))
   (g$6869$5743$1pJll4
     g$6869$5838$1pJll4
     (record-predicate g$6870$5740$1pJll4))
   (g$make-undefined-violation$5744$1pJll4
     g$make-undefined-violation$5839$1pJll4
     (record-constructor g$6871$5742$1pJll4))
   (g$undefined-violation?$5745$1pJll4
     g$undefined-violation?$5840$1pJll4
     (condition-predicate g$6870$5740$1pJll4)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5841$1pJll4
     g$append!$5847$1pJll4
     (case-lambda
       ((g$a$5842$1pJll4 . g$b$5843$1pJll4)
        (if (null? g$a$5842$1pJll4)
          g$b$5843$1pJll4
          (if (null? g$b$5843$1pJll4)
            g$a$5842$1pJll4
            (begin
              ((letrec ((g$f$5844$1pJll4
                          (case-lambda
                            ((g$a$5845$1pJll4)
                             ((case-lambda
                                ((g$n$5846$1pJll4)
                                 (if (null? g$n$5846$1pJll4)
                                   (set-cdr! g$a$5845$1pJll4 g$b$5843$1pJll4)
                                   (g$f$5844$1pJll4 g$n$5846$1pJll4))))
                              (cdr g$a$5845$1pJll4))))))
                 g$f$5844$1pJll4)
               g$a$5842$1pJll4)
              g$a$5842$1pJll4)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5848$1pJll4
     g$sign$5866$1pJll4
     (case-lambda
       ((g$n$5854$1pJll4)
        (if (> g$n$5854$1pJll4 '0) '1 (if (< g$n$5854$1pJll4 '0) '-1 '0)))))
   (g$quotient$5849$1pJll4
     g$quotient$5867$1pJll4
     (case-lambda
       ((g$n1$5855$1pJll4 g$n2$5856$1pJll4)
        (begin
          (if (not (integer-valued? g$n1$5855$1pJll4))
            (assertion-violation 'quotient '"not an integer" g$n1$5855$1pJll4)
            (void))
          (if (not (integer-valued? g$n2$5856$1pJll4))
            (assertion-violation 'quotient '"not an integer" g$n2$5856$1pJll4)
            (void))
          (* (g$sign$5848$1pJll4 g$n1$5855$1pJll4)
             (g$sign$5848$1pJll4 g$n2$5856$1pJll4)
             (div (abs g$n1$5855$1pJll4) (abs g$n2$5856$1pJll4)))))))
   (g$remainder$5850$1pJll4
     g$remainder$5868$1pJll4
     (case-lambda
       ((g$n1$5857$1pJll4 g$n2$5858$1pJll4)
        (begin
          (if (not (integer-valued? g$n1$5857$1pJll4))
            (assertion-violation 'remainder '"not an integer" g$n1$5857$1pJll4)
            (void))
          (if (not (integer-valued? g$n2$5858$1pJll4))
            (assertion-violation 'remainder '"not an integer" g$n2$5858$1pJll4)
            (void))
          (* (g$sign$5848$1pJll4 g$n1$5857$1pJll4)
             (mod (abs g$n1$5857$1pJll4) (abs g$n2$5858$1pJll4)))))))
   (g$modulo$5851$1pJll4
     g$modulo$5869$1pJll4
     (case-lambda
       ((g$n1$5859$1pJll4 g$n2$5860$1pJll4)
        (begin
          (if (not (integer-valued? g$n1$5859$1pJll4))
            (assertion-violation 'modulo '"not an integer" g$n1$5859$1pJll4)
            (void))
          (if (not (integer-valued? g$n2$5860$1pJll4))
            (assertion-violation 'modulo '"not an integer" g$n2$5860$1pJll4)
            (void))
          (* (g$sign$5848$1pJll4 g$n2$5860$1pJll4)
             (mod (* (g$sign$5848$1pJll4 g$n2$5860$1pJll4) g$n1$5859$1pJll4)
                  (abs g$n2$5860$1pJll4)))))))
   (g$make-promise$5852$1pJll4
     g$make-promise$5870$1pJll4
     (case-lambda
       ((g$proc$5861$1pJll4)
        ((case-lambda
           ((g$result-ready?$5862$1pJll4 g$result$5863$1pJll4)
            (case-lambda
              (()
               (if g$result-ready?$5862$1pJll4
                 g$result$5863$1pJll4
                 ((case-lambda
                    ((g$x$5864$1pJll4)
                     (if g$result-ready?$5862$1pJll4
                       g$result$5863$1pJll4
                       (begin
                         (set! g$result-ready?$5862$1pJll4 '#t)
                         (set! g$result$5863$1pJll4 g$x$5864$1pJll4)
                         g$result$5863$1pJll4))))
                  (g$proc$5861$1pJll4)))))))
         '#f
         '#f))))
   (g$force$5853$1pJll4
     g$force$5871$1pJll4
     (case-lambda ((g$object$5865$1pJll4) (g$object$5865$1pJll4)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5872$1pJll4
     g$split$5898$1pJll4
     (case-lambda
       ((g$ls$5875$1pJll4)
        ((letrec ((g$loop$5876$1pJll4
                    (case-lambda
                      ((g$rest$5877$1pJll4
                         g$left$5878$1pJll4
                         g$right$5879$1pJll4)
                       (if (null? g$rest$5877$1pJll4)
                         (cons g$left$5878$1pJll4 g$right$5879$1pJll4)
                         (if (null? (cdr g$rest$5877$1pJll4))
                           (cons
                             (cons (car g$rest$5877$1pJll4) g$left$5878$1pJll4)
                             g$right$5879$1pJll4)
                           (g$loop$5876$1pJll4
                             (g$cddr$5024$1pJll4 g$rest$5877$1pJll4)
                             (cons (car g$rest$5877$1pJll4) g$left$5878$1pJll4)
                             (cons
                               (g$cadr$5022$1pJll4 g$rest$5877$1pJll4)
                               g$right$5879$1pJll4))))))))
           g$loop$5876$1pJll4)
         g$ls$5875$1pJll4
         '()
         '()))))
   (g$reverse-it$5873$1pJll4
     g$reverse-it$5899$1pJll4
     (case-lambda
       ((g$head$5880$1pJll4 g$tail$5881$1pJll4)
        (if (null? g$head$5880$1pJll4)
          g$tail$5881$1pJll4
          ((case-lambda
             ((g$hd$5882$1pJll4 g$tl$5883$1pJll4)
              (g$reverse-it$5873$1pJll4
                g$tl$5883$1pJll4
                (cons g$hd$5882$1pJll4 g$tail$5881$1pJll4))))
           (car g$head$5880$1pJll4)
           (cdr g$head$5880$1pJll4))))))
   (g$list-sort$5874$1pJll4
     g$list-sort$5900$1pJll4
     (case-lambda
       ((g$precedes?$5884$1pJll4 g$ls$5885$1pJll4)
        ((case-lambda
           ((g$merge$5886$1pJll4)
            ((case-lambda
               (()
                (if (null? g$ls$5885$1pJll4)
                  '()
                  ((letrec ((g$helper$5887$1pJll4
                              (case-lambda
                                ((g$piece$5888$1pJll4)
                                 (if (null? (cdr g$piece$5888$1pJll4))
                                   g$piece$5888$1pJll4
                                   ((case-lambda
                                      ((g$parts$5889$1pJll4)
                                       (g$merge$5886$1pJll4
                                         (g$helper$5887$1pJll4
                                           (car g$parts$5889$1pJll4))
                                         (g$helper$5887$1pJll4
                                           (cdr g$parts$5889$1pJll4)))))
                                    (g$split$5872$1pJll4
                                      g$piece$5888$1pJll4)))))))
                     g$helper$5887$1pJll4)
                   g$ls$5885$1pJll4)))))))
         (case-lambda
           ((g$list-1$5890$1pJll4 g$list-2$5891$1pJll4)
            ((letrec ((g$loop$5892$1pJll4
                        (case-lambda
                          ((g$source-1$5893$1pJll4
                             g$source-2$5894$1pJll4
                             g$so-far$5895$1pJll4)
                           (if (null? g$source-1$5893$1pJll4)
                             (g$reverse-it$5873$1pJll4
                               g$so-far$5895$1pJll4
                               g$source-2$5894$1pJll4)
                             (if (null? g$source-2$5894$1pJll4)
                               (g$reverse-it$5873$1pJll4
                                 g$so-far$5895$1pJll4
                                 g$source-1$5893$1pJll4)
                               ((case-lambda
                                  ((g$car-1$5896$1pJll4 g$car-2$5897$1pJll4)
                                   (if (g$precedes?$5884$1pJll4
                                         g$car-2$5897$1pJll4
                                         g$car-1$5896$1pJll4)
                                     (g$loop$5892$1pJll4
                                       g$source-1$5893$1pJll4
                                       (cdr g$source-2$5894$1pJll4)
                                       (cons
                                         g$car-2$5897$1pJll4
                                         g$so-far$5895$1pJll4))
                                     (g$loop$5892$1pJll4
                                       g$source-2$5894$1pJll4
                                       (cdr g$source-1$5893$1pJll4)
                                       (cons
                                         g$car-1$5896$1pJll4
                                         g$so-far$5895$1pJll4)))))
                                (car g$source-1$5893$1pJll4)
                                (car g$source-2$5894$1pJll4))))))))
               g$loop$5892$1pJll4)
             g$list-1$5890$1pJll4
             g$list-2$5891$1pJll4
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$5944$1pJll4
     g$string-ci=?$6040$1pJll4
     (case-lambda
       ((g$a$5960$1pJll4 g$b$5961$1pJll4 . g$rest$5962$1pJll4)
        (begin
          (if (not (string? g$a$5960$1pJll4))
            (assertion-violation 'string-ci=? '"not a string" g$a$5960$1pJll4)
            (void))
          (if (not (string? g$b$5961$1pJll4))
            (assertion-violation 'string-ci=? '"not a string" g$b$5961$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$5963$1pJll4)
               (if (not (string? g$x$5963$1pJll4))
                 (assertion-violation
                   'string-ci=?
                   '"not a string"
                   g$x$5963$1pJll4)
                 (void))))
            g$rest$5962$1pJll4)
          ((letrec ((g$f$5964$1pJll4
                      (case-lambda
                        ((g$a$5965$1pJll4 g$b$5966$1pJll4 g$rest$5967$1pJll4)
                         (if (null? g$rest$5967$1pJll4)
                           (= (string-ci-compare
                                g$a$5965$1pJll4
                                g$b$5966$1pJll4)
                              '0)
                           (if (= (string-compare
                                    g$a$5965$1pJll4
                                    g$b$5966$1pJll4)
                                  '0)
                             (begin
                               '#f
                               (g$f$5964$1pJll4
                                 g$b$5966$1pJll4
                                 (car g$rest$5967$1pJll4)
                                 (cdr g$rest$5967$1pJll4)))
                             '#f))))))
             g$f$5964$1pJll4)
           g$a$5960$1pJll4
           g$b$5961$1pJll4
           g$rest$5962$1pJll4)))))
   (g$string-ci<?$5945$1pJll4
     g$string-ci<?$6041$1pJll4
     (case-lambda
       ((g$a$5968$1pJll4 g$b$5969$1pJll4 . g$rest$5970$1pJll4)
        (begin
          (if (not (string? g$a$5968$1pJll4))
            (assertion-violation 'string-ci<? '"not a string" g$a$5968$1pJll4)
            (void))
          (if (not (string? g$b$5969$1pJll4))
            (assertion-violation 'string-ci<? '"not a string" g$b$5969$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$5971$1pJll4)
               (if (not (string? g$x$5971$1pJll4))
                 (assertion-violation
                   'string-ci<?
                   '"not a string"
                   g$x$5971$1pJll4)
                 (void))))
            g$rest$5970$1pJll4)
          ((letrec ((g$f$5972$1pJll4
                      (case-lambda
                        ((g$a$5973$1pJll4 g$b$5974$1pJll4 g$rest$5975$1pJll4)
                         (if (null? g$rest$5975$1pJll4)
                           (< (string-ci-compare
                                g$a$5973$1pJll4
                                g$b$5974$1pJll4)
                              '0)
                           (if (< (string-compare
                                    g$a$5973$1pJll4
                                    g$b$5974$1pJll4)
                                  '0)
                             (begin
                               '#f
                               (g$f$5972$1pJll4
                                 g$b$5974$1pJll4
                                 (car g$rest$5975$1pJll4)
                                 (cdr g$rest$5975$1pJll4)))
                             '#f))))))
             g$f$5972$1pJll4)
           g$a$5968$1pJll4
           g$b$5969$1pJll4
           g$rest$5970$1pJll4)))))
   (g$string-ci>?$5946$1pJll4
     g$string-ci>?$6042$1pJll4
     (case-lambda
       ((g$a$5976$1pJll4 g$b$5977$1pJll4 . g$rest$5978$1pJll4)
        (begin
          (if (not (string? g$a$5976$1pJll4))
            (assertion-violation 'string-ci>? '"not a string" g$a$5976$1pJll4)
            (void))
          (if (not (string? g$b$5977$1pJll4))
            (assertion-violation 'string-ci>? '"not a string" g$b$5977$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$5979$1pJll4)
               (if (not (string? g$x$5979$1pJll4))
                 (assertion-violation
                   'string-ci>?
                   '"not a string"
                   g$x$5979$1pJll4)
                 (void))))
            g$rest$5978$1pJll4)
          ((letrec ((g$f$5980$1pJll4
                      (case-lambda
                        ((g$a$5981$1pJll4 g$b$5982$1pJll4 g$rest$5983$1pJll4)
                         (if (null? g$rest$5983$1pJll4)
                           (> (string-ci-compare
                                g$a$5981$1pJll4
                                g$b$5982$1pJll4)
                              '0)
                           (if (> (string-compare
                                    g$a$5981$1pJll4
                                    g$b$5982$1pJll4)
                                  '0)
                             (begin
                               '#f
                               (g$f$5980$1pJll4
                                 g$b$5982$1pJll4
                                 (car g$rest$5983$1pJll4)
                                 (cdr g$rest$5983$1pJll4)))
                             '#f))))))
             g$f$5980$1pJll4)
           g$a$5976$1pJll4
           g$b$5977$1pJll4
           g$rest$5978$1pJll4)))))
   (g$string-ci<=?$5947$1pJll4
     g$string-ci<=?$6043$1pJll4
     (case-lambda
       ((g$a$5984$1pJll4 g$b$5985$1pJll4 . g$rest$5986$1pJll4)
        (begin
          (if (not (string? g$a$5984$1pJll4))
            (assertion-violation 'string-ci<=? '"not a string" g$a$5984$1pJll4)
            (void))
          (if (not (string? g$b$5985$1pJll4))
            (assertion-violation 'string-ci<=? '"not a string" g$b$5985$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$5987$1pJll4)
               (if (not (string? g$x$5987$1pJll4))
                 (assertion-violation
                   'string-ci<=?
                   '"not a string"
                   g$x$5987$1pJll4)
                 (void))))
            g$rest$5986$1pJll4)
          ((letrec ((g$f$5988$1pJll4
                      (case-lambda
                        ((g$a$5989$1pJll4 g$b$5990$1pJll4 g$rest$5991$1pJll4)
                         (if (null? g$rest$5991$1pJll4)
                           (<= (string-ci-compare
                                 g$a$5989$1pJll4
                                 g$b$5990$1pJll4)
                               '0)
                           (if (<= (string-compare
                                     g$a$5989$1pJll4
                                     g$b$5990$1pJll4)
                                   '0)
                             (begin
                               '#f
                               (g$f$5988$1pJll4
                                 g$b$5990$1pJll4
                                 (car g$rest$5991$1pJll4)
                                 (cdr g$rest$5991$1pJll4)))
                             '#f))))))
             g$f$5988$1pJll4)
           g$a$5984$1pJll4
           g$b$5985$1pJll4
           g$rest$5986$1pJll4)))))
   (g$string-ci>=?$5948$1pJll4
     g$string-ci>=?$6044$1pJll4
     (case-lambda
       ((g$a$5992$1pJll4 g$b$5993$1pJll4 . g$rest$5994$1pJll4)
        (begin
          (if (not (string? g$a$5992$1pJll4))
            (assertion-violation 'string-ci>=? '"not a string" g$a$5992$1pJll4)
            (void))
          (if (not (string? g$b$5993$1pJll4))
            (assertion-violation 'string-ci>=? '"not a string" g$b$5993$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$5995$1pJll4)
               (if (not (string? g$x$5995$1pJll4))
                 (assertion-violation
                   'string-ci>=?
                   '"not a string"
                   g$x$5995$1pJll4)
                 (void))))
            g$rest$5994$1pJll4)
          ((letrec ((g$f$5996$1pJll4
                      (case-lambda
                        ((g$a$5997$1pJll4 g$b$5998$1pJll4 g$rest$5999$1pJll4)
                         (if (null? g$rest$5999$1pJll4)
                           (>= (string-ci-compare
                                 g$a$5997$1pJll4
                                 g$b$5998$1pJll4)
                               '0)
                           (if (>= (string-compare
                                     g$a$5997$1pJll4
                                     g$b$5998$1pJll4)
                                   '0)
                             (begin
                               '#f
                               (g$f$5996$1pJll4
                                 g$b$5998$1pJll4
                                 (car g$rest$5999$1pJll4)
                                 (cdr g$rest$5999$1pJll4)))
                             '#f))))))
             g$f$5996$1pJll4)
           g$a$5992$1pJll4
           g$b$5993$1pJll4
           g$rest$5994$1pJll4)))))
   (g$char-ci=?$5955$1pJll4
     g$char-ci=?$6045$1pJll4
     (case-lambda
       ((g$a$6000$1pJll4 g$b$6001$1pJll4 . g$rest$6002$1pJll4)
        (begin
          (if (not (char? g$a$6000$1pJll4))
            (assertion-violation 'char-ci=? '"not a char" g$a$6000$1pJll4)
            (void))
          (if (not (char? g$b$6001$1pJll4))
            (assertion-violation 'char-ci=? '"not a char" g$b$6001$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$6003$1pJll4)
               (if (not (char? g$x$6003$1pJll4))
                 (assertion-violation 'char-ci=? '"not a char" g$x$6003$1pJll4)
                 (void))))
            g$rest$6002$1pJll4)
          ((letrec ((g$f$6004$1pJll4
                      (case-lambda
                        ((g$a$6005$1pJll4 g$b$6006$1pJll4 g$rest$6007$1pJll4)
                         (if (null? g$rest$6007$1pJll4)
                           (= (char->integer (char-upcase g$a$6005$1pJll4))
                              (char->integer (char-upcase g$b$6006$1pJll4)))
                           (if (= (char->integer (char-upcase g$a$6005$1pJll4))
                                  (char->integer (char-upcase g$b$6006$1pJll4)))
                             (begin
                               '#f
                               (g$f$6004$1pJll4
                                 g$b$6006$1pJll4
                                 (car g$rest$6007$1pJll4)
                                 (cdr g$rest$6007$1pJll4)))
                             '#f))))))
             g$f$6004$1pJll4)
           g$a$6000$1pJll4
           g$b$6001$1pJll4
           g$rest$6002$1pJll4)))))
   (g$char-ci<?$5956$1pJll4
     g$char-ci<?$6046$1pJll4
     (case-lambda
       ((g$a$6008$1pJll4 g$b$6009$1pJll4 . g$rest$6010$1pJll4)
        (begin
          (if (not (char? g$a$6008$1pJll4))
            (assertion-violation 'char-ci<? '"not a char" g$a$6008$1pJll4)
            (void))
          (if (not (char? g$b$6009$1pJll4))
            (assertion-violation 'char-ci<? '"not a char" g$b$6009$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$6011$1pJll4)
               (if (not (char? g$x$6011$1pJll4))
                 (assertion-violation 'char-ci<? '"not a char" g$x$6011$1pJll4)
                 (void))))
            g$rest$6010$1pJll4)
          ((letrec ((g$f$6012$1pJll4
                      (case-lambda
                        ((g$a$6013$1pJll4 g$b$6014$1pJll4 g$rest$6015$1pJll4)
                         (if (null? g$rest$6015$1pJll4)
                           (< (char->integer (char-upcase g$a$6013$1pJll4))
                              (char->integer (char-upcase g$b$6014$1pJll4)))
                           (if (< (char->integer (char-upcase g$a$6013$1pJll4))
                                  (char->integer (char-upcase g$b$6014$1pJll4)))
                             (begin
                               '#f
                               (g$f$6012$1pJll4
                                 g$b$6014$1pJll4
                                 (car g$rest$6015$1pJll4)
                                 (cdr g$rest$6015$1pJll4)))
                             '#f))))))
             g$f$6012$1pJll4)
           g$a$6008$1pJll4
           g$b$6009$1pJll4
           g$rest$6010$1pJll4)))))
   (g$char-ci>?$5957$1pJll4
     g$char-ci>?$6047$1pJll4
     (case-lambda
       ((g$a$6016$1pJll4 g$b$6017$1pJll4 . g$rest$6018$1pJll4)
        (begin
          (if (not (char? g$a$6016$1pJll4))
            (assertion-violation 'char-ci>? '"not a char" g$a$6016$1pJll4)
            (void))
          (if (not (char? g$b$6017$1pJll4))
            (assertion-violation 'char-ci>? '"not a char" g$b$6017$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$6019$1pJll4)
               (if (not (char? g$x$6019$1pJll4))
                 (assertion-violation 'char-ci>? '"not a char" g$x$6019$1pJll4)
                 (void))))
            g$rest$6018$1pJll4)
          ((letrec ((g$f$6020$1pJll4
                      (case-lambda
                        ((g$a$6021$1pJll4 g$b$6022$1pJll4 g$rest$6023$1pJll4)
                         (if (null? g$rest$6023$1pJll4)
                           (> (char->integer (char-upcase g$a$6021$1pJll4))
                              (char->integer (char-upcase g$b$6022$1pJll4)))
                           (if (> (char->integer (char-upcase g$a$6021$1pJll4))
                                  (char->integer (char-upcase g$b$6022$1pJll4)))
                             (begin
                               '#f
                               (g$f$6020$1pJll4
                                 g$b$6022$1pJll4
                                 (car g$rest$6023$1pJll4)
                                 (cdr g$rest$6023$1pJll4)))
                             '#f))))))
             g$f$6020$1pJll4)
           g$a$6016$1pJll4
           g$b$6017$1pJll4
           g$rest$6018$1pJll4)))))
   (g$char-ci<=?$5958$1pJll4
     g$char-ci<=?$6048$1pJll4
     (case-lambda
       ((g$a$6024$1pJll4 g$b$6025$1pJll4 . g$rest$6026$1pJll4)
        (begin
          (if (not (char? g$a$6024$1pJll4))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6024$1pJll4)
            (void))
          (if (not (char? g$b$6025$1pJll4))
            (assertion-violation 'char-ci<=? '"not a char" g$b$6025$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$6027$1pJll4)
               (if (not (char? g$x$6027$1pJll4))
                 (assertion-violation 'char-ci<=? '"not a char" g$x$6027$1pJll4)
                 (void))))
            g$rest$6026$1pJll4)
          ((letrec ((g$f$6028$1pJll4
                      (case-lambda
                        ((g$a$6029$1pJll4 g$b$6030$1pJll4 g$rest$6031$1pJll4)
                         (if (null? g$rest$6031$1pJll4)
                           (<= (char->integer (char-upcase g$a$6029$1pJll4))
                               (char->integer (char-upcase g$b$6030$1pJll4)))
                           (if (<= (char->integer (char-upcase g$a$6029$1pJll4))
                                   (char->integer
                                     (char-upcase g$b$6030$1pJll4)))
                             (begin
                               '#f
                               (g$f$6028$1pJll4
                                 g$b$6030$1pJll4
                                 (car g$rest$6031$1pJll4)
                                 (cdr g$rest$6031$1pJll4)))
                             '#f))))))
             g$f$6028$1pJll4)
           g$a$6024$1pJll4
           g$b$6025$1pJll4
           g$rest$6026$1pJll4)))))
   (g$char-ci>=?$5959$1pJll4
     g$char-ci>=?$6049$1pJll4
     (case-lambda
       ((g$a$6032$1pJll4 g$b$6033$1pJll4 . g$rest$6034$1pJll4)
        (begin
          (if (not (char? g$a$6032$1pJll4))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6032$1pJll4)
            (void))
          (if (not (char? g$b$6033$1pJll4))
            (assertion-violation 'char-ci>=? '"not a char" g$b$6033$1pJll4)
            (void))
          (for-each
            (case-lambda
              ((g$x$6035$1pJll4)
               (if (not (char? g$x$6035$1pJll4))
                 (assertion-violation 'char-ci>=? '"not a char" g$x$6035$1pJll4)
                 (void))))
            g$rest$6034$1pJll4)
          ((letrec ((g$f$6036$1pJll4
                      (case-lambda
                        ((g$a$6037$1pJll4 g$b$6038$1pJll4 g$rest$6039$1pJll4)
                         (if (null? g$rest$6039$1pJll4)
                           (>= (char->integer (char-upcase g$a$6037$1pJll4))
                               (char->integer (char-upcase g$b$6038$1pJll4)))
                           (if (>= (char->integer (char-upcase g$a$6037$1pJll4))
                                   (char->integer
                                     (char-upcase g$b$6038$1pJll4)))
                             (begin
                               '#f
                               (g$f$6036$1pJll4
                                 g$b$6038$1pJll4
                                 (car g$rest$6039$1pJll4)
                                 (cdr g$rest$6039$1pJll4)))
                             '#f))))))
             g$f$6036$1pJll4)
           g$a$6032$1pJll4
           g$b$6033$1pJll4
           g$rest$6034$1pJll4))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6050$1pJll4
     g$bitwise-if$6097$1pJll4
     (case-lambda
       ((g$ei1$6057$1pJll4 g$ei2$6058$1pJll4 g$ei3$6059$1pJll4)
        (bitwise-ior
          (bitwise-and g$ei1$6057$1pJll4 g$ei2$6058$1pJll4)
          (bitwise-and (bitwise-not g$ei1$6057$1pJll4) g$ei3$6059$1pJll4)))))
   (g$bitwise-copy-bit$6051$1pJll4
     g$bitwise-copy-bit$6098$1pJll4
     (case-lambda
       ((g$ei1$6060$1pJll4 g$ei2$6061$1pJll4 g$ei3$6062$1pJll4)
        ((case-lambda
           ((g$mask$6063$1pJll4)
            ((case-lambda
               (()
                (g$bitwise-if$6050$1pJll4
                  g$mask$6063$1pJll4
                  (g$bitwise-arithmetic-shift-left$6054$1pJll4
                    g$ei3$6062$1pJll4
                    g$ei2$6061$1pJll4)
                  g$ei1$6060$1pJll4))))))
         (g$bitwise-arithmetic-shift-left$6054$1pJll4 '1 g$ei2$6061$1pJll4)))))
   (g$bitwise-bit-field$6052$1pJll4
     g$bitwise-bit-field$6099$1pJll4
     (case-lambda
       ((g$ei1$6064$1pJll4 g$ei2$6065$1pJll4 g$ei3$6066$1pJll4)
        ((case-lambda
           ((g$mask$6067$1pJll4)
            (g$bitwise-arithmetic-shift-right$6055$1pJll4
              (bitwise-and g$ei1$6064$1pJll4 g$mask$6067$1pJll4)
              g$ei2$6065$1pJll4)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$6054$1pJll4
             '-1
             g$ei3$6066$1pJll4))))))
   (g$bitwise-copy-bit-field$6053$1pJll4
     g$bitwise-copy-bit-field$6100$1pJll4
     (case-lambda
       ((g$ei1$6068$1pJll4
          g$ei2$6069$1pJll4
          g$ei3$6070$1pJll4
          g$ei4$6071$1pJll4)
        ((case-lambda
           ((g$to$6072$1pJll4)
            ((case-lambda
               ((g$start$6073$1pJll4)
                ((case-lambda
                   ((g$end$6074$1pJll4)
                    ((case-lambda
                       ((g$from$6075$1pJll4)
                        ((case-lambda
                           ((g$mask1$6076$1pJll4)
                            ((case-lambda
                               ((g$mask2$6077$1pJll4)
                                ((case-lambda
                                   ((g$mask$6078$1pJll4)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$6050$1pJll4
                                          g$mask$6078$1pJll4
                                          (g$bitwise-arithmetic-shift-left$6054$1pJll4
                                            g$from$6075$1pJll4
                                            g$start$6073$1pJll4)
                                          g$to$6072$1pJll4))))))
                                 (bitwise-and
                                   g$mask1$6076$1pJll4
                                   g$mask2$6077$1pJll4))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$6054$1pJll4
                                 '-1
                                 g$end$6074$1pJll4)))))
                         (g$bitwise-arithmetic-shift-left$6054$1pJll4
                           '-1
                           g$start$6073$1pJll4))))
                     g$ei4$6071$1pJll4)))
                 g$ei3$6070$1pJll4)))
             g$ei2$6069$1pJll4)))
         g$ei1$6068$1pJll4))))
   (g$bitwise-arithmetic-shift-left$6054$1pJll4
     g$bitwise-arithmetic-shift-left$6101$1pJll4
     (case-lambda
       ((g$ei1$6079$1pJll4 g$ei2$6080$1pJll4)
        (bitwise-arithmetic-shift g$ei1$6079$1pJll4 g$ei2$6080$1pJll4))))
   (g$bitwise-arithmetic-shift-right$6055$1pJll4
     g$bitwise-arithmetic-shift-right$6102$1pJll4
     (case-lambda
       ((g$ei1$6081$1pJll4 g$ei2$6082$1pJll4)
        (bitwise-arithmetic-shift g$ei1$6081$1pJll4 (- g$ei2$6082$1pJll4)))))
   (g$bitwise-rotate-bit-field$6056$1pJll4
     g$bitwise-rotate-bit-field$6103$1pJll4
     (case-lambda
       ((g$ei1$6083$1pJll4
          g$ei2$6084$1pJll4
          g$ei3$6085$1pJll4
          g$ei4$6086$1pJll4)
        ((case-lambda
           ((g$n$6087$1pJll4)
            ((case-lambda
               ((g$start$6088$1pJll4)
                ((case-lambda
                   ((g$end$6089$1pJll4)
                    ((case-lambda
                       ((g$count$6090$1pJll4)
                        ((case-lambda
                           ((g$width$6091$1pJll4)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6091$1pJll4)
                                  ((case-lambda
                                     ((g$count$6092$1pJll4)
                                      ((case-lambda
                                         ((g$field0$6093$1pJll4)
                                          ((case-lambda
                                             ((g$field1$6094$1pJll4)
                                              ((case-lambda
                                                 ((g$field2$6095$1pJll4)
                                                  ((case-lambda
                                                     ((g$field$6096$1pJll4)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$6053$1pJll4
                                                            g$n$6087$1pJll4
                                                            g$start$6088$1pJll4
                                                            g$end$6089$1pJll4
                                                            g$field$6096$1pJll4))))))
                                                   (bitwise-ior
                                                     g$field1$6094$1pJll4
                                                     g$field2$6095$1pJll4))))
                                               (g$bitwise-arithmetic-shift-right$6055$1pJll4
                                                 g$field0$6093$1pJll4
                                                 (- g$width$6091$1pJll4
                                                    g$count$6092$1pJll4)))))
                                           (g$bitwise-arithmetic-shift-left$6054$1pJll4
                                             g$field0$6093$1pJll4
                                             g$count$6092$1pJll4))))
                                       (g$bitwise-bit-field$6052$1pJll4
                                         g$n$6087$1pJll4
                                         g$start$6088$1pJll4
                                         g$end$6089$1pJll4))))
                                   (mod g$count$6090$1pJll4
                                        g$width$6091$1pJll4))
                                  g$n$6087$1pJll4))))))
                         (- g$end$6089$1pJll4 g$start$6088$1pJll4))))
                     g$ei4$6086$1pJll4)))
                 g$ei3$6085$1pJll4)))
             g$ei2$6084$1pJll4)))
         g$ei1$6083$1pJll4)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$6104$1pJll4
     g$fxif$6151$1pJll4
     (case-lambda
       ((g$fx1$6111$1pJll4 g$fx2$6112$1pJll4 g$fx3$6113$1pJll4)
        (fxior
          (fxand g$fx1$6111$1pJll4 g$fx2$6112$1pJll4)
          (fxand (fxnot g$fx1$6111$1pJll4) g$fx3$6113$1pJll4)))))
   (g$fxcopy-bit$6105$1pJll4
     g$fxcopy-bit$6152$1pJll4
     (case-lambda
       ((g$fx1$6114$1pJll4 g$fx2$6115$1pJll4 g$fx3$6116$1pJll4)
        ((case-lambda
           ((g$mask$6117$1pJll4)
            ((case-lambda
               (()
                (g$fxif$6104$1pJll4
                  g$mask$6117$1pJll4
                  (g$fxarithmetic-shift-left$6108$1pJll4
                    g$fx3$6116$1pJll4
                    g$fx2$6115$1pJll4)
                  g$fx1$6114$1pJll4))))))
         (g$fxarithmetic-shift-left$6108$1pJll4 '1 g$fx2$6115$1pJll4)))))
   (g$fxbit-field$6106$1pJll4
     g$fxbit-field$6153$1pJll4
     (case-lambda
       ((g$fx1$6118$1pJll4 g$fx2$6119$1pJll4 g$fx3$6120$1pJll4)
        ((case-lambda
           ((g$mask$6121$1pJll4)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$6109$1pJll4
                  (fxand g$fx1$6118$1pJll4 g$mask$6121$1pJll4)
                  g$fx2$6119$1pJll4))))))
         (fxnot
           (g$fxarithmetic-shift-left$6108$1pJll4 '-1 g$fx3$6120$1pJll4))))))
   (g$fxcopy-bit-field$6107$1pJll4
     g$fxcopy-bit-field$6154$1pJll4
     (case-lambda
       ((g$fx1$6122$1pJll4
          g$fx2$6123$1pJll4
          g$fx3$6124$1pJll4
          g$fx4$6125$1pJll4)
        ((case-lambda
           ((g$to$6126$1pJll4)
            ((case-lambda
               ((g$start$6127$1pJll4)
                ((case-lambda
                   ((g$end$6128$1pJll4)
                    ((case-lambda
                       ((g$from$6129$1pJll4)
                        ((case-lambda
                           ((g$mask1$6130$1pJll4)
                            ((case-lambda
                               ((g$mask2$6131$1pJll4)
                                ((case-lambda
                                   ((g$mask$6132$1pJll4)
                                    ((case-lambda
                                       (()
                                        (g$fxif$6104$1pJll4
                                          g$mask$6132$1pJll4
                                          (g$fxarithmetic-shift-left$6108$1pJll4
                                            g$from$6129$1pJll4
                                            g$start$6127$1pJll4)
                                          g$to$6126$1pJll4))))))
                                 (fxand
                                   g$mask1$6130$1pJll4
                                   g$mask2$6131$1pJll4))))
                             (fxnot
                               (g$fxarithmetic-shift-left$6108$1pJll4
                                 '-1
                                 g$end$6128$1pJll4)))))
                         (g$fxarithmetic-shift-left$6108$1pJll4
                           '-1
                           g$start$6127$1pJll4))))
                     g$fx4$6125$1pJll4)))
                 g$fx3$6124$1pJll4)))
             g$fx2$6123$1pJll4)))
         g$fx1$6122$1pJll4))))
   (g$fxarithmetic-shift-left$6108$1pJll4
     g$fxarithmetic-shift-left$6155$1pJll4
     (case-lambda
       ((g$fx1$6133$1pJll4 g$fx2$6134$1pJll4)
        (fxarithmetic-shift g$fx1$6133$1pJll4 g$fx2$6134$1pJll4))))
   (g$fxarithmetic-shift-right$6109$1pJll4
     g$fxarithmetic-shift-right$6156$1pJll4
     (case-lambda
       ((g$fx1$6135$1pJll4 g$fx2$6136$1pJll4)
        (fxarithmetic-shift g$fx1$6135$1pJll4 (- g$fx2$6136$1pJll4)))))
   (g$fxrotate-bit-field$6110$1pJll4
     g$fxrotate-bit-field$6157$1pJll4
     (case-lambda
       ((g$fx1$6137$1pJll4
          g$fx2$6138$1pJll4
          g$fx3$6139$1pJll4
          g$fx4$6140$1pJll4)
        ((case-lambda
           ((g$n$6141$1pJll4)
            ((case-lambda
               ((g$start$6142$1pJll4)
                ((case-lambda
                   ((g$end$6143$1pJll4)
                    ((case-lambda
                       ((g$count$6144$1pJll4)
                        ((case-lambda
                           ((g$width$6145$1pJll4)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6145$1pJll4)
                                  ((case-lambda
                                     ((g$count$6146$1pJll4)
                                      ((case-lambda
                                         ((g$field0$6147$1pJll4)
                                          ((case-lambda
                                             ((g$field1$6148$1pJll4)
                                              ((case-lambda
                                                 ((g$field2$6149$1pJll4)
                                                  ((case-lambda
                                                     ((g$field$6150$1pJll4)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$6107$1pJll4
                                                            g$n$6141$1pJll4
                                                            g$start$6142$1pJll4
                                                            g$end$6143$1pJll4
                                                            g$field$6150$1pJll4))))))
                                                   (fxior
                                                     g$field1$6148$1pJll4
                                                     g$field2$6149$1pJll4))))
                                               (g$fxarithmetic-shift-right$6109$1pJll4
                                                 g$field0$6147$1pJll4
                                                 (- g$width$6145$1pJll4
                                                    g$count$6146$1pJll4)))))
                                           (g$fxarithmetic-shift-left$6108$1pJll4
                                             g$field0$6147$1pJll4
                                             g$count$6146$1pJll4))))
                                       (g$fxbit-field$6106$1pJll4
                                         g$n$6141$1pJll4
                                         g$start$6142$1pJll4
                                         g$end$6143$1pJll4))))
                                   (mod g$count$6144$1pJll4
                                        g$width$6145$1pJll4))
                                  g$n$6141$1pJll4))))))
                         (- g$end$6143$1pJll4 g$start$6142$1pJll4))))
                     g$fx4$6140$1pJll4)))
                 g$fx3$6139$1pJll4)))
             g$fx2$6138$1pJll4)))
         g$fx1$6137$1pJll4)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7274$6158$1pJll4
     g$7274$6170$1pJll4
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7277$1pJll4
       '#f
       '#f
       '#()))
   (g$7276$6159$1pJll4 g$7276$6171$1pJll4 '#f)
   (g$7275$6160$1pJll4
     g$7275$6172$1pJll4
     (make-record-constructor-descriptor
       g$7274$6158$1pJll4
       &implementation-restriction-rcd
       g$7276$6159$1pJll4))
   (g$7273$6161$1pJll4
     g$7273$6173$1pJll4
     (record-predicate g$7274$6158$1pJll4))
   (g$make-no-infinities-violation$6162$1pJll4
     g$make-no-infinities-violation$6174$1pJll4
     (record-constructor g$7275$6160$1pJll4))
   (g$no-infinities-violation?$6163$1pJll4
     g$no-infinities-violation?$6175$1pJll4
     (condition-predicate g$7274$6158$1pJll4))
   (g$7288$6164$1pJll4
     g$7288$6176$1pJll4
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7291$1pJll4
       '#f
       '#f
       '#()))
   (g$7290$6165$1pJll4 g$7290$6177$1pJll4 '#f)
   (g$7289$6166$1pJll4
     g$7289$6178$1pJll4
     (make-record-constructor-descriptor
       g$7288$6164$1pJll4
       &implementation-restriction-rcd
       g$7290$6165$1pJll4))
   (g$7287$6167$1pJll4
     g$7287$6179$1pJll4
     (record-predicate g$7288$6164$1pJll4))
   (g$make-no-nans-violation$6168$1pJll4
     g$make-no-nans-violation$6180$1pJll4
     (record-constructor g$7289$6166$1pJll4))
   (g$no-nans-violation?$6169$1pJll4
     g$no-nans-violation?$6181$1pJll4
     (condition-predicate g$7288$6164$1pJll4)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7303$6182$1pJll4
     g$7303$6262$1pJll4
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7306$1pJll4
       '#f
       '#f
       '#()))
   (g$7305$6183$1pJll4 g$7305$6263$1pJll4 '#f)
   (g$7304$6184$1pJll4
     g$7304$6264$1pJll4
     (make-record-constructor-descriptor
       g$7303$6182$1pJll4
       &error-rcd
       g$7305$6183$1pJll4))
   (g$7302$6185$1pJll4
     g$7302$6265$1pJll4
     (record-predicate g$7303$6182$1pJll4))
   (g$make-i/o-error$6186$1pJll4
     g$make-i/o-error$6266$1pJll4
     (record-constructor g$7304$6184$1pJll4))
   (g$i/o-error?$6187$1pJll4
     g$i/o-error?$6267$1pJll4
     (condition-predicate g$7303$6182$1pJll4))
   (g$7317$6188$1pJll4
     g$7317$6268$1pJll4
     (make-record-type-descriptor
       '&i/o-read
       g$7303$6182$1pJll4
       'g$7320$1pJll4
       '#f
       '#f
       '#()))
   (g$7319$6189$1pJll4 g$7319$6269$1pJll4 '#f)
   (g$7318$6190$1pJll4
     g$7318$6270$1pJll4
     (make-record-constructor-descriptor
       g$7317$6188$1pJll4
       g$7304$6184$1pJll4
       g$7319$6189$1pJll4))
   (g$7316$6191$1pJll4
     g$7316$6271$1pJll4
     (record-predicate g$7317$6188$1pJll4))
   (g$make-i/o-read-error$6192$1pJll4
     g$make-i/o-read-error$6272$1pJll4
     (record-constructor g$7318$6190$1pJll4))
   (g$i/o-read-error?$6193$1pJll4
     g$i/o-read-error?$6273$1pJll4
     (condition-predicate g$7317$6188$1pJll4))
   (g$7331$6194$1pJll4
     g$7331$6274$1pJll4
     (make-record-type-descriptor
       '&i/o-write
       g$7303$6182$1pJll4
       'g$7334$1pJll4
       '#f
       '#f
       '#()))
   (g$7333$6195$1pJll4 g$7333$6275$1pJll4 '#f)
   (g$7332$6196$1pJll4
     g$7332$6276$1pJll4
     (make-record-constructor-descriptor
       g$7331$6194$1pJll4
       g$7304$6184$1pJll4
       g$7333$6195$1pJll4))
   (g$7330$6197$1pJll4
     g$7330$6277$1pJll4
     (record-predicate g$7331$6194$1pJll4))
   (g$make-i/o-write-error$6198$1pJll4
     g$make-i/o-write-error$6278$1pJll4
     (record-constructor g$7332$6196$1pJll4))
   (g$i/o-write-error?$6199$1pJll4
     g$i/o-write-error?$6279$1pJll4
     (condition-predicate g$7331$6194$1pJll4))
   (g$7346$6200$1pJll4
     g$7346$6280$1pJll4
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7303$6182$1pJll4
       'g$7349$1pJll4
       '#f
       '#f
       '#((immutable position))))
   (g$7348$6201$1pJll4 g$7348$6281$1pJll4 '#f)
   (g$7347$6202$1pJll4
     g$7347$6282$1pJll4
     (make-record-constructor-descriptor
       g$7346$6200$1pJll4
       g$7304$6184$1pJll4
       g$7348$6201$1pJll4))
   (g$7345$6203$1pJll4
     g$7345$6283$1pJll4
     (record-predicate g$7346$6200$1pJll4))
   (g$make-i/o-invalid-position-error$6204$1pJll4
     g$make-i/o-invalid-position-error$6284$1pJll4
     (record-constructor g$7347$6202$1pJll4))
   (g$7344$6205$1pJll4
     g$7344$6285$1pJll4
     (record-accessor g$7346$6200$1pJll4 '0))
   (g$i/o-invalid-position-error?$6206$1pJll4
     g$i/o-invalid-position-error?$6286$1pJll4
     (condition-predicate g$7346$6200$1pJll4))
   (g$i/o-error-position$6207$1pJll4
     g$i/o-error-position$6287$1pJll4
     (condition-accessor g$7346$6200$1pJll4 g$7344$6205$1pJll4))
   (g$7363$6208$1pJll4
     g$7363$6288$1pJll4
     (make-record-type-descriptor
       '&i/o-filename
       g$7303$6182$1pJll4
       'g$7366$1pJll4
       '#f
       '#f
       '#((immutable filename))))
   (g$7365$6209$1pJll4 g$7365$6289$1pJll4 '#f)
   (g$7364$6210$1pJll4
     g$7364$6290$1pJll4
     (make-record-constructor-descriptor
       g$7363$6208$1pJll4
       g$7304$6184$1pJll4
       g$7365$6209$1pJll4))
   (g$7362$6211$1pJll4
     g$7362$6291$1pJll4
     (record-predicate g$7363$6208$1pJll4))
   (g$make-i/o-filename-error$6212$1pJll4
     g$make-i/o-filename-error$6292$1pJll4
     (record-constructor g$7364$6210$1pJll4))
   (g$7361$6213$1pJll4
     g$7361$6293$1pJll4
     (record-accessor g$7363$6208$1pJll4 '0))
   (g$i/o-filename-error?$6214$1pJll4
     g$i/o-filename-error?$6294$1pJll4
     (condition-predicate g$7363$6208$1pJll4))
   (g$i/o-error-filename$6215$1pJll4
     g$i/o-error-filename$6295$1pJll4
     (condition-accessor g$7363$6208$1pJll4 g$7361$6213$1pJll4))
   (g$7379$6216$1pJll4
     g$7379$6296$1pJll4
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7363$6208$1pJll4
       'g$7382$1pJll4
       '#f
       '#f
       '#()))
   (g$7381$6217$1pJll4 g$7381$6297$1pJll4 '#f)
   (g$7380$6218$1pJll4
     g$7380$6298$1pJll4
     (make-record-constructor-descriptor
       g$7379$6216$1pJll4
       g$7364$6210$1pJll4
       g$7381$6217$1pJll4))
   (g$7378$6219$1pJll4
     g$7378$6299$1pJll4
     (record-predicate g$7379$6216$1pJll4))
   (g$make-i/o-file-protection-error$6220$1pJll4
     g$make-i/o-file-protection-error$6300$1pJll4
     (record-constructor g$7380$6218$1pJll4))
   (g$i/o-file-protection-error?$6221$1pJll4
     g$i/o-file-protection-error?$6301$1pJll4
     (condition-predicate g$7379$6216$1pJll4))
   (g$7393$6222$1pJll4
     g$7393$6302$1pJll4
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7379$6216$1pJll4
       'g$7396$1pJll4
       '#f
       '#f
       '#()))
   (g$7395$6223$1pJll4 g$7395$6303$1pJll4 '#f)
   (g$7394$6224$1pJll4
     g$7394$6304$1pJll4
     (make-record-constructor-descriptor
       g$7393$6222$1pJll4
       g$7380$6218$1pJll4
       g$7395$6223$1pJll4))
   (g$7392$6225$1pJll4
     g$7392$6305$1pJll4
     (record-predicate g$7393$6222$1pJll4))
   (g$make-i/o-file-is-read-only-error$6226$1pJll4
     g$make-i/o-file-is-read-only-error$6306$1pJll4
     (record-constructor g$7394$6224$1pJll4))
   (g$i/o-file-is-read-only-error?$6227$1pJll4
     g$i/o-file-is-read-only-error?$6307$1pJll4
     (condition-predicate g$7393$6222$1pJll4))
   (g$7407$6228$1pJll4
     g$7407$6308$1pJll4
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7363$6208$1pJll4
       'g$7410$1pJll4
       '#f
       '#f
       '#()))
   (g$7409$6229$1pJll4 g$7409$6309$1pJll4 '#f)
   (g$7408$6230$1pJll4
     g$7408$6310$1pJll4
     (make-record-constructor-descriptor
       g$7407$6228$1pJll4
       g$7364$6210$1pJll4
       g$7409$6229$1pJll4))
   (g$7406$6231$1pJll4
     g$7406$6311$1pJll4
     (record-predicate g$7407$6228$1pJll4))
   (g$make-i/o-file-already-exists-error$6232$1pJll4
     g$make-i/o-file-already-exists-error$6312$1pJll4
     (record-constructor g$7408$6230$1pJll4))
   (g$i/o-file-already-exists-error?$6233$1pJll4
     g$i/o-file-already-exists-error?$6313$1pJll4
     (condition-predicate g$7407$6228$1pJll4))
   (g$7421$6234$1pJll4
     g$7421$6314$1pJll4
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7363$6208$1pJll4
       'g$7424$1pJll4
       '#f
       '#f
       '#()))
   (g$7423$6235$1pJll4 g$7423$6315$1pJll4 '#f)
   (g$7422$6236$1pJll4
     g$7422$6316$1pJll4
     (make-record-constructor-descriptor
       g$7421$6234$1pJll4
       g$7364$6210$1pJll4
       g$7423$6235$1pJll4))
   (g$7420$6237$1pJll4
     g$7420$6317$1pJll4
     (record-predicate g$7421$6234$1pJll4))
   (g$make-i/o-file-does-not-exist-error$6238$1pJll4
     g$make-i/o-file-does-not-exist-error$6318$1pJll4
     (record-constructor g$7422$6236$1pJll4))
   (g$i/o-file-does-not-exist-error?$6239$1pJll4
     g$i/o-file-does-not-exist-error?$6319$1pJll4
     (condition-predicate g$7421$6234$1pJll4))
   (g$7436$6240$1pJll4
     g$7436$6320$1pJll4
     (make-record-type-descriptor
       '&i/o-port
       g$7303$6182$1pJll4
       'g$7439$1pJll4
       '#f
       '#f
       '#((immutable port))))
   (g$7438$6241$1pJll4 g$7438$6321$1pJll4 '#f)
   (g$7437$6242$1pJll4
     g$7437$6322$1pJll4
     (make-record-constructor-descriptor
       g$7436$6240$1pJll4
       g$7304$6184$1pJll4
       g$7438$6241$1pJll4))
   (g$7435$6243$1pJll4
     g$7435$6323$1pJll4
     (record-predicate g$7436$6240$1pJll4))
   (g$make-i/o-port-error$6244$1pJll4
     g$make-i/o-port-error$6324$1pJll4
     (record-constructor g$7437$6242$1pJll4))
   (g$7434$6245$1pJll4
     g$7434$6325$1pJll4
     (record-accessor g$7436$6240$1pJll4 '0))
   (g$i/o-port-error?$6246$1pJll4
     g$i/o-port-error?$6326$1pJll4
     (condition-predicate g$7436$6240$1pJll4))
   (g$i/o-error-port$6247$1pJll4
     g$i/o-error-port$6327$1pJll4
     (condition-accessor g$7436$6240$1pJll4 g$7434$6245$1pJll4))
   (g$7452$6248$1pJll4
     g$7452$6328$1pJll4
     (make-record-type-descriptor
       '&i/o-decoding
       g$7436$6240$1pJll4
       'g$7455$1pJll4
       '#f
       '#f
       '#()))
   (g$7454$6249$1pJll4 g$7454$6329$1pJll4 '#f)
   (g$7453$6250$1pJll4
     g$7453$6330$1pJll4
     (make-record-constructor-descriptor
       g$7452$6248$1pJll4
       g$7437$6242$1pJll4
       g$7454$6249$1pJll4))
   (g$7451$6251$1pJll4
     g$7451$6331$1pJll4
     (record-predicate g$7452$6248$1pJll4))
   (g$make-i/o-decoding-error$6252$1pJll4
     g$make-i/o-decoding-error$6332$1pJll4
     (record-constructor g$7453$6250$1pJll4))
   (g$i/o-decoding-error?$6253$1pJll4
     g$i/o-decoding-error?$6333$1pJll4
     (condition-predicate g$7452$6248$1pJll4))
   (g$7467$6254$1pJll4
     g$7467$6334$1pJll4
     (make-record-type-descriptor
       '&i/o-encoding
       g$7436$6240$1pJll4
       'g$7470$1pJll4
       '#f
       '#f
       '#((immutable char))))
   (g$7469$6255$1pJll4 g$7469$6335$1pJll4 '#f)
   (g$7468$6256$1pJll4
     g$7468$6336$1pJll4
     (make-record-constructor-descriptor
       g$7467$6254$1pJll4
       g$7437$6242$1pJll4
       g$7469$6255$1pJll4))
   (g$7466$6257$1pJll4
     g$7466$6337$1pJll4
     (record-predicate g$7467$6254$1pJll4))
   (g$make-i/o-encoding-error$6258$1pJll4
     g$make-i/o-encoding-error$6338$1pJll4
     (record-constructor g$7468$6256$1pJll4))
   (g$7465$6259$1pJll4
     g$7465$6339$1pJll4
     (record-accessor g$7467$6254$1pJll4 '0))
   (g$i/o-encoding-error?$6260$1pJll4
     g$i/o-encoding-error?$6340$1pJll4
     (condition-predicate g$7467$6254$1pJll4))
   (g$i/o-encoding-error-char$6261$1pJll4
     g$i/o-encoding-error-char$6341$1pJll4
     (condition-accessor g$7467$6254$1pJll4 g$7465$6259$1pJll4)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6342$1pJll4
     g$get-output-string$6350$1pJll4
     (case-lambda
       ((g$port$6346$1pJll4)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6346$1pJll4))))
   (g$open-output-string$6343$1pJll4
     g$open-output-string$6351$1pJll4
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6344$1pJll4
     g$open-string-output-port$6352$1pJll4
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6347$1pJll4)
            (values
              g$p$6347$1pJll4
              (case-lambda
                (() (g$get-output-string$6342$1pJll4 g$p$6347$1pJll4))))))
         (g$open-output-string$6343$1pJll4)))))
   (g$port?$6345$1pJll4
     g$port?$6353$1pJll4
     (case-lambda
       ((g$obj$6348$1pJll4)
        ((case-lambda
           ((g$t$6349$1pJll4)
            (if g$t$6349$1pJll4
              g$t$6349$1pJll4
              (begin '#f (binary-port? g$obj$6348$1pJll4)))))
         (textual-port? g$obj$6348$1pJll4))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6360$1pJll4
     g$with-input-from-file$6386$1pJll4
     (case-lambda
       ((g$filename$6364$1pJll4 g$thunk$6365$1pJll4)
        ((case-lambda
           ((g$current-input-port$6368$1pJll4 g$t$6369$1pJll4)
            ((case-lambda
               ((g$swap$6370$1pJll4)
                (dynamic-wind
                  g$swap$6370$1pJll4
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6365$1pJll4)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6370$1pJll4)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6371$1pJll4)
                    (begin
                      (g$current-input-port$6368$1pJll4 g$t$6369$1pJll4)
                      (set! g$t$6369$1pJll4 g$t$6371$1pJll4))))
                 (g$current-input-port$6368$1pJll4)))))))
         current-input-port
         (open-input-file g$filename$6364$1pJll4)))))
   (g$with-output-to-file$6361$1pJll4
     g$with-output-to-file$6387$1pJll4
     (case-lambda
       ((g$filename$6372$1pJll4 g$thunk$6373$1pJll4)
        ((case-lambda
           ((g$current-output-port$6376$1pJll4 g$t$6377$1pJll4)
            ((case-lambda
               ((g$swap$6378$1pJll4)
                (dynamic-wind
                  g$swap$6378$1pJll4
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6373$1pJll4)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6378$1pJll4)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6379$1pJll4)
                    (begin
                      (g$current-output-port$6376$1pJll4 g$t$6377$1pJll4)
                      (set! g$t$6377$1pJll4 g$t$6379$1pJll4))))
                 (g$current-output-port$6376$1pJll4)))))))
         current-output-port
         (open-output-file g$filename$6372$1pJll4)))))
   (g$call-with-input-file$6362$1pJll4
     g$call-with-input-file$6388$1pJll4
     (case-lambda
       ((g$filename$6380$1pJll4 g$proc$6381$1pJll4)
        ((case-lambda
           ((g$p$6382$1pJll4)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6381$1pJll4 g$p$6382$1pJll4)))
              (case-lambda (() (close-input-port g$p$6382$1pJll4))))))
         (open-input-file g$filename$6380$1pJll4)))))
   (g$call-with-output-file$6363$1pJll4
     g$call-with-output-file$6389$1pJll4
     (case-lambda
       ((g$filename$6383$1pJll4 g$proc$6384$1pJll4)
        ((case-lambda
           ((g$p$6385$1pJll4)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6384$1pJll4 g$p$6385$1pJll4)))
              (case-lambda (() (close-output-port g$p$6385$1pJll4))))))
         (open-output-file g$filename$6383$1pJll4))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7534$6390$1pJll4
     g$7534$6498$1pJll4
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7536$6391$1pJll4 g$7536$6499$1pJll4 '#f)
   (g$7535$6392$1pJll4
     g$7535$6500$1pJll4
     (make-record-constructor-descriptor
       g$7534$6390$1pJll4
       '#f
       g$7536$6391$1pJll4))
   (g$enum?$6393$1pJll4
     g$enum?$6501$1pJll4
     (record-predicate g$7534$6390$1pJll4))
   (g$make-enum$6394$1pJll4
     g$make-enum$6502$1pJll4
     (record-constructor g$7535$6392$1pJll4))
   (g$enum-value$6395$1pJll4
     g$enum-value$6503$1pJll4
     (record-accessor g$7534$6390$1pJll4 '0))
   (g$enum-info$6396$1pJll4
     g$enum-info$6504$1pJll4
     (record-accessor g$7534$6390$1pJll4 '1))
   (g$7547$6397$1pJll4
     g$7547$6505$1pJll4
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7549$6398$1pJll4 g$7549$6506$1pJll4 '#f)
   (g$7548$6399$1pJll4
     g$7548$6507$1pJll4
     (make-record-constructor-descriptor
       g$7547$6397$1pJll4
       '#f
       g$7549$6398$1pJll4))
   (g$enum-universe?$6400$1pJll4
     g$enum-universe?$6508$1pJll4
     (record-predicate g$7547$6397$1pJll4))
   (g$make-enum-universe$6401$1pJll4
     g$make-enum-universe$6509$1pJll4
     (record-constructor g$7548$6399$1pJll4))
   (g$enum-universe-id$6402$1pJll4
     g$enum-universe-id$6510$1pJll4
     (record-accessor g$7547$6397$1pJll4 '0))
   (g$enum-universe-symbols$6403$1pJll4
     g$enum-universe-symbols$6511$1pJll4
     (record-accessor g$7547$6397$1pJll4 '1))
   (g$enum-universe-mapping$6404$1pJll4
     g$enum-universe-mapping$6512$1pJll4
     (record-accessor g$7547$6397$1pJll4 '2))
   (g$enum-universe-value$6405$1pJll4
     g$enum-universe-value$6513$1pJll4
     (record-accessor g$7547$6397$1pJll4 '3))
   (g$enum-type=?$6406$1pJll4
     g$enum-type=?$6514$1pJll4
     (case-lambda
       ((g$enumset1$6427$1pJll4 g$enumset2$6428$1pJll4)
        (eq? (g$enum-universe-id$6402$1pJll4
               (g$enum-info$6396$1pJll4 g$enumset1$6427$1pJll4))
             (g$enum-universe-id$6402$1pJll4
               (g$enum-info$6396$1pJll4 g$enumset2$6428$1pJll4))))))
   (g$get-symbols$6407$1pJll4
     g$get-symbols$6515$1pJll4
     (case-lambda
       ((g$enumset$6429$1pJll4)
        (g$enum-universe-symbols$6403$1pJll4
          (g$enum-info$6396$1pJll4 g$enumset$6429$1pJll4)))))
   (g$get-value$6408$1pJll4
     g$get-value$6516$1pJll4
     (case-lambda
       ((g$enumset$6430$1pJll4 g$s$6431$1pJll4)
        (g$hashtable-ref$5299$1pJll4
          (g$enum-universe-mapping$6404$1pJll4
            (g$enum-info$6396$1pJll4 g$enumset$6430$1pJll4))
          g$s$6431$1pJll4
          '#f))))
   (g$assert-enum$6409$1pJll4
     g$assert-enum$6517$1pJll4
     (case-lambda
       ((g$who$6432$1pJll4 g$enumset$6433$1pJll4)
        (if (not (g$enum?$6393$1pJll4 g$enumset$6433$1pJll4))
          (assertion-violation
            g$who$6432$1pJll4
            '"not an enumeration"
            g$enumset$6433$1pJll4)
          (void)))))
   (g$make-info$6410$1pJll4
     g$make-info$6518$1pJll4
     (case-lambda
       ((g$symbols$6434$1pJll4)
        ((case-lambda
           ((g$ht$6435$1pJll4)
            ((letrec ((g$f$6436$1pJll4
                        (case-lambda
                          ((g$s$6437$1pJll4 g$a$6438$1pJll4 g$mask$6439$1pJll4)
                           (if (null? g$s$6437$1pJll4)
                             (values
                               (reverse! g$a$6438$1pJll4)
                               g$ht$6435$1pJll4
                               (- g$mask$6439$1pJll4 '1))
                             ((case-lambda
                                ((g$n$6440$1pJll4)
                                 (if (symbol? g$n$6440$1pJll4)
                                   (if (g$hashtable-contains?$5302$1pJll4
                                         g$ht$6435$1pJll4
                                         g$n$6440$1pJll4)
                                     (g$f$6436$1pJll4
                                       (cdr g$s$6437$1pJll4)
                                       g$a$6438$1pJll4
                                       g$mask$6439$1pJll4)
                                     (begin
                                       (g$hashtable-set!$5300$1pJll4
                                         g$ht$6435$1pJll4
                                         g$n$6440$1pJll4
                                         g$mask$6439$1pJll4)
                                       (g$f$6436$1pJll4
                                         (cdr g$s$6437$1pJll4)
                                         (cons g$n$6440$1pJll4 g$a$6438$1pJll4)
                                         (g$bitwise-arithmetic-shift-left$6101$1pJll4
                                           g$mask$6439$1pJll4
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6440$1pJll4))))
                              (car g$s$6437$1pJll4)))))))
               g$f$6436$1pJll4)
             g$symbols$6434$1pJll4
             '()
             '1)))
         (g$make-eq-hashtable$5296$1pJll4)))))
   (g$make-name$6411$1pJll4
     g$make-name$6519$1pJll4
     (case-lambda
       ((g$symbols$6441$1pJll4)
        (string->symbol (g$format$6558$1pJll4 '"~a" g$symbols$6441$1pJll4)))))
   (g$make-enumeration$6412$1pJll4
     g$make-enumeration$6520$1pJll4
     (case-lambda
       ((g$symbols$6442$1pJll4)
        (call-with-values
          (case-lambda (() (g$make-info$6410$1pJll4 g$symbols$6442$1pJll4)))
          (case-lambda
            ((g$s$6446$1pJll4 g$mapping$6447$1pJll4 g$mask$6448$1pJll4)
             ((case-lambda
                ((g$mask$6449$1pJll4 g$mapping$6450$1pJll4 g$s$6451$1pJll4)
                 (g$make-enum$6394$1pJll4
                   g$mask$6449$1pJll4
                   (g$make-enum-universe$6401$1pJll4
                     (g$make-name$6411$1pJll4 g$s$6451$1pJll4)
                     g$s$6451$1pJll4
                     g$mapping$6450$1pJll4
                     g$mask$6449$1pJll4))))
              g$mask$6448$1pJll4
              g$mapping$6447$1pJll4
              g$s$6446$1pJll4)))))))
   (g$enum-set-universe$6413$1pJll4
     g$enum-set-universe$6521$1pJll4
     (case-lambda
       ((g$enumset$6452$1pJll4)
        (begin
          (g$assert-enum$6409$1pJll4 'enum-set-universe g$enumset$6452$1pJll4)
          ((case-lambda
             ((g$ei$6453$1pJll4)
              (g$make-enum$6394$1pJll4
                (g$enum-universe-value$6405$1pJll4 g$ei$6453$1pJll4)
                g$ei$6453$1pJll4)))
           (g$enum-info$6396$1pJll4 g$enumset$6452$1pJll4))))))
   (g$enum-set-indexer$6414$1pJll4
     g$enum-set-indexer$6522$1pJll4
     (case-lambda
       ((g$enumset$6454$1pJll4)
        (begin
          (g$assert-enum$6409$1pJll4 'enum-set-indexer g$enumset$6454$1pJll4)
          (case-lambda
            ((g$symbol$6455$1pJll4)
             (begin
               (if (not (symbol? g$symbol$6455$1pJll4))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6455$1pJll4)
                 (void))
               ((case-lambda
                  ((g$v$6456$1pJll4)
                   (if g$v$6456$1pJll4
                     (- (bitwise-length g$v$6456$1pJll4) '1)
                     '#f)))
                (g$get-value$6408$1pJll4
                  g$enumset$6454$1pJll4
                  g$symbol$6455$1pJll4)))))))))
   (g$enum-set-constructor$6415$1pJll4
     g$enum-set-constructor$6523$1pJll4
     (case-lambda
       ((g$enumset$6457$1pJll4)
        (begin
          (g$assert-enum$6409$1pJll4
            'enum-set-constructor
            g$enumset$6457$1pJll4)
          (case-lambda
            ((g$symbols$6458$1pJll4)
             ((letrec ((g$f$6459$1pJll4
                         (case-lambda
                           ((g$v$6460$1pJll4 g$s$6461$1pJll4)
                            (if (null? g$s$6461$1pJll4)
                              (g$make-enum$6394$1pJll4
                                g$v$6460$1pJll4
                                (g$enum-info$6396$1pJll4 g$enumset$6457$1pJll4))
                              ((case-lambda
                                 ((g$n$6462$1pJll4)
                                  (if (symbol? g$n$6462$1pJll4)
                                    ((case-lambda
                                       ((g$v*$6463$1pJll4)
                                        (if g$v*$6463$1pJll4
                                          (g$f$6459$1pJll4
                                            (bitwise-ior
                                              g$v$6460$1pJll4
                                              g$v*$6463$1pJll4)
                                            (cdr g$s$6461$1pJll4))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6462$1pJll4))))
                                     (g$get-value$6408$1pJll4
                                       g$enumset$6457$1pJll4
                                       g$n$6462$1pJll4))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6462$1pJll4))))
                               (car g$s$6461$1pJll4)))))))
                g$f$6459$1pJll4)
              '0
              g$symbols$6458$1pJll4)))))))
   (g$enum-set->list$6416$1pJll4
     g$enum-set->list$6524$1pJll4
     (case-lambda
       ((g$enumset$6464$1pJll4)
        (begin
          (g$assert-enum$6409$1pJll4 'enum-set->list g$enumset$6464$1pJll4)
          ((case-lambda
             ((g$value$6465$1pJll4)
              ((letrec ((g$f$6466$1pJll4
                          (case-lambda
                            ((g$s$6467$1pJll4 g$l$6468$1pJll4)
                             (if (null? g$s$6467$1pJll4)
                               (reverse! g$l$6468$1pJll4)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6408$1pJll4
                                         g$enumset$6464$1pJll4
                                         (car g$s$6467$1pJll4))
                                       g$value$6465$1pJll4))
                                 (g$f$6466$1pJll4
                                   (cdr g$s$6467$1pJll4)
                                   g$l$6468$1pJll4)
                                 (g$f$6466$1pJll4
                                   (cdr g$s$6467$1pJll4)
                                   (cons
                                     (car g$s$6467$1pJll4)
                                     g$l$6468$1pJll4))))))))
                 g$f$6466$1pJll4)
               (g$get-symbols$6407$1pJll4 g$enumset$6464$1pJll4)
               '())))
           (g$enum-value$6395$1pJll4 g$enumset$6464$1pJll4))))))
   (g$enum-set-member?$6417$1pJll4
     g$enum-set-member?$6525$1pJll4
     (case-lambda
       ((g$symbol$6469$1pJll4 g$enumset$6470$1pJll4)
        (begin
          (if (not (symbol? g$symbol$6469$1pJll4))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6469$1pJll4)
            (void))
          (g$assert-enum$6409$1pJll4 'enum-set-member? g$enumset$6470$1pJll4)
          ((case-lambda
             ((g$v$6471$1pJll4)
              (if g$v$6471$1pJll4
                (not (zero?
                       (bitwise-and
                         g$v$6471$1pJll4
                         (g$enum-value$6395$1pJll4 g$enumset$6470$1pJll4))))
                '#f)))
           (g$get-value$6408$1pJll4
             g$enumset$6470$1pJll4
             g$symbol$6469$1pJll4))))))
   (g$enum-set-subset?$6418$1pJll4
     g$enum-set-subset?$6526$1pJll4
     (case-lambda
       ((g$enumset1$6472$1pJll4 g$enumset2$6473$1pJll4)
        (begin
          (g$assert-enum$6409$1pJll4 'enum-set-subset? g$enumset1$6472$1pJll4)
          (g$assert-enum$6409$1pJll4 'enum-set-subset? g$enumset2$6473$1pJll4)
          ((case-lambda
             ((g$v1$6474$1pJll4 g$v2$6475$1pJll4)
              (if (g$enum-type=?$6406$1pJll4
                    g$enumset1$6472$1pJll4
                    g$enumset2$6473$1pJll4)
                (= (bitwise-and g$v1$6474$1pJll4 g$v2$6475$1pJll4)
                   g$v1$6474$1pJll4)
                ((letrec ((g$f$6476$1pJll4
                            (case-lambda
                              ((g$s$6477$1pJll4)
                               (if (null? g$s$6477$1pJll4)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6478$1pJll4 g$v2*$6479$1pJll4)
                                     (if g$v2*$6479$1pJll4
                                       ((case-lambda
                                          ((g$has1$6480$1pJll4
                                             g$has2$6481$1pJll4)
                                           (if (if g$has1$6480$1pJll4
                                                 (begin
                                                   '#f
                                                   (not g$has2$6481$1pJll4))
                                                 '#f)
                                             '#f
                                             (g$f$6476$1pJll4
                                               (cdr g$s$6477$1pJll4)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6474$1pJll4
                                                 g$v1*$6478$1pJll4)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6475$1pJll4
                                                 g$v2*$6479$1pJll4))))
                                       '#f)))
                                  (g$get-value$6408$1pJll4
                                    g$enumset1$6472$1pJll4
                                    (car g$s$6477$1pJll4))
                                  (g$get-value$6408$1pJll4
                                    g$enumset2$6473$1pJll4
                                    (car g$s$6477$1pJll4))))))))
                   g$f$6476$1pJll4)
                 (g$get-symbols$6407$1pJll4 g$enumset1$6472$1pJll4)))))
           (g$enum-value$6395$1pJll4 g$enumset1$6472$1pJll4)
           (g$enum-value$6395$1pJll4 g$enumset2$6473$1pJll4))))))
   (g$enum-set=?$6419$1pJll4
     g$enum-set=?$6527$1pJll4
     (case-lambda
       ((g$enumset1$6482$1pJll4 g$enumset2$6483$1pJll4)
        (begin
          (g$assert-enum$6409$1pJll4 'enum-set=? g$enumset1$6482$1pJll4)
          (g$assert-enum$6409$1pJll4 'enum-set=? g$enumset2$6483$1pJll4)
          (if (g$enum-set-subset?$6418$1pJll4
                g$enumset1$6482$1pJll4
                g$enumset2$6483$1pJll4)
            (begin
              '#f
              (g$enum-set-subset?$6418$1pJll4
                g$enumset2$6483$1pJll4
                g$enumset1$6482$1pJll4))
            '#f)))))
   (g$enum-set-union$6420$1pJll4
     g$enum-set-union$6528$1pJll4
     (case-lambda
       ((g$enumset1$6484$1pJll4 g$enumset2$6485$1pJll4)
        (begin
          (g$assert-enum$6409$1pJll4 'enum-set-union g$enumset1$6484$1pJll4)
          (g$assert-enum$6409$1pJll4 'enum-set-union g$enumset2$6485$1pJll4)
          (if (g$enum-type=?$6406$1pJll4
                g$enumset1$6484$1pJll4
                g$enumset2$6485$1pJll4)
            (g$make-enum$6394$1pJll4
              (bitwise-ior
                (g$enum-value$6395$1pJll4 g$enumset1$6484$1pJll4)
                (g$enum-value$6395$1pJll4 g$enumset2$6485$1pJll4))
              (g$enum-info$6396$1pJll4 g$enumset1$6484$1pJll4))
            '#f)))))
   (g$enum-set-intersection$6421$1pJll4
     g$enum-set-intersection$6529$1pJll4
     (case-lambda
       ((g$enumset1$6486$1pJll4 g$enumset2$6487$1pJll4)
        (begin
          (g$assert-enum$6409$1pJll4
            'enum-set-intersection
            g$enumset1$6486$1pJll4)
          (g$assert-enum$6409$1pJll4
            'enum-set-intersection
            g$enumset2$6487$1pJll4)
          (if (g$enum-type=?$6406$1pJll4
                g$enumset1$6486$1pJll4
                g$enumset2$6487$1pJll4)
            (g$make-enum$6394$1pJll4
              (bitwise-and
                (g$enum-value$6395$1pJll4 g$enumset1$6486$1pJll4)
                (g$enum-value$6395$1pJll4 g$enumset2$6487$1pJll4))
              (g$enum-info$6396$1pJll4 g$enumset1$6486$1pJll4))
            '#f)))))
   (g$enum-set-difference$6422$1pJll4
     g$enum-set-difference$6530$1pJll4
     (case-lambda
       ((g$enumset1$6488$1pJll4 g$enumset2$6489$1pJll4)
        (begin
          (g$assert-enum$6409$1pJll4
            'enum-set-difference
            g$enumset1$6488$1pJll4)
          (g$assert-enum$6409$1pJll4
            'enum-set-difference
            g$enumset2$6489$1pJll4)
          (if (g$enum-type=?$6406$1pJll4
                g$enumset1$6488$1pJll4
                g$enumset2$6489$1pJll4)
            (g$make-enum$6394$1pJll4
              (bitwise-and
                (g$enum-value$6395$1pJll4 g$enumset1$6488$1pJll4)
                (bitwise-not (g$enum-value$6395$1pJll4 g$enumset2$6489$1pJll4)))
              (g$enum-info$6396$1pJll4 g$enumset1$6488$1pJll4))
            '#f)))))
   (g$enum-set-complement$6423$1pJll4
     g$enum-set-complement$6531$1pJll4
     (case-lambda
       ((g$enumset$6490$1pJll4)
        (begin
          (g$assert-enum$6409$1pJll4 'enum-set-complement g$enumset$6490$1pJll4)
          (g$make-enum$6394$1pJll4
            (bitwise-not (g$enum-value$6395$1pJll4 g$enumset$6490$1pJll4))
            (g$enum-info$6396$1pJll4 g$enumset$6490$1pJll4))))))
   (g$enum-set-projection$6424$1pJll4
     g$enum-set-projection$6532$1pJll4
     (case-lambda
       ((g$enumset1$6491$1pJll4 g$enumset2$6492$1pJll4)
        (begin
          (g$assert-enum$6409$1pJll4
            'enum-set-projection
            g$enumset1$6491$1pJll4)
          (g$assert-enum$6409$1pJll4
            'enum-set-projection
            g$enumset2$6492$1pJll4)
          ((case-lambda
             ((g$v1$6493$1pJll4)
              ((letrec ((g$f$6494$1pJll4
                          (case-lambda
                            ((g$s$6495$1pJll4 g$v$6496$1pJll4)
                             (if (null? g$s$6495$1pJll4)
                               (g$make-enum$6394$1pJll4
                                 g$v$6496$1pJll4
                                 (g$enum-info$6396$1pJll4
                                   g$enumset2$6492$1pJll4))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6493$1pJll4
                                       (g$get-value$6408$1pJll4
                                         g$enumset1$6491$1pJll4
                                         (car g$s$6495$1pJll4))))
                                 (g$f$6494$1pJll4
                                   (cdr g$s$6495$1pJll4)
                                   g$v$6496$1pJll4)
                                 ((case-lambda
                                    ((g$v2$6497$1pJll4)
                                     (if g$v2$6497$1pJll4
                                       (g$f$6494$1pJll4
                                         (cdr g$s$6495$1pJll4)
                                         (bitwise-ior
                                           g$v$6496$1pJll4
                                           g$v2$6497$1pJll4))
                                       (g$f$6494$1pJll4
                                         (cdr g$s$6495$1pJll4)
                                         g$v$6496$1pJll4))))
                                  (g$get-value$6408$1pJll4
                                    g$enumset2$6492$1pJll4
                                    (car g$s$6495$1pJll4)))))))))
                 g$f$6494$1pJll4)
               (g$get-symbols$6407$1pJll4 g$enumset1$6491$1pJll4)
               '0)))
           (g$enum-value$6395$1pJll4 g$enumset1$6491$1pJll4)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6425$1pJll4 g$p$6426$1pJll4)
       (g$fprintf$6557$1pJll4
         g$p$6426$1pJll4
         '"#[enum-set ~a]"
         (g$enum-set->list$6416$1pJll4 g$x$6425$1pJll4))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6533$1pJll4
     g$dofmt$6555$1pJll4
     (case-lambda
       ((g$p$6537$1pJll4 g$cntl$6538$1pJll4 g$args$6539$1pJll4)
        ((case-lambda
           ((g$nmax$6540$1pJll4)
            ((letrec ((g$loop$6541$1pJll4
                        (case-lambda
                          ((g$n$6542$1pJll4 g$a$6543$1pJll4)
                           (if (fx<=? g$n$6542$1pJll4 g$nmax$6540$1pJll4)
                             ((case-lambda
                                ((g$c$6544$1pJll4)
                                 (if (if (g$char=?$5056$1pJll4
                                           g$c$6544$1pJll4
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6542$1pJll4
                                           g$nmax$6540$1pJll4))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6545$1pJll4)
                                       (if (memv g$t$6545$1pJll4 '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6543$1pJll4)
                                             g$p$6537$1pJll4)
                                           (g$loop$6541$1pJll4
                                             (fx+ g$n$6542$1pJll4 '2)
                                             (cdr g$a$6543$1pJll4)))
                                         (if (memv g$t$6545$1pJll4 '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6543$1pJll4)
                                               g$p$6537$1pJll4)
                                             (g$loop$6541$1pJll4
                                               (fx+ g$n$6542$1pJll4 '2)
                                               (cdr g$a$6543$1pJll4)))
                                           (if (memv g$t$6545$1pJll4 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6543$1pJll4)
                                                   '2)
                                                 g$p$6537$1pJll4)
                                               (g$loop$6541$1pJll4
                                                 (fx+ g$n$6542$1pJll4 '2)
                                                 (cdr g$a$6543$1pJll4)))
                                             (if (memv g$t$6545$1pJll4 '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6543$1pJll4)
                                                     '8)
                                                   g$p$6537$1pJll4)
                                                 (g$loop$6541$1pJll4
                                                   (fx+ g$n$6542$1pJll4 '2)
                                                   (cdr g$a$6543$1pJll4)))
                                               (if (memv g$t$6545$1pJll4 '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6543$1pJll4)
                                                       '16)
                                                     g$p$6537$1pJll4)
                                                   (g$loop$6541$1pJll4
                                                     (fx+ g$n$6542$1pJll4 '2)
                                                     (cdr g$a$6543$1pJll4)))
                                                 (if (memv
                                                       g$t$6545$1pJll4
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6543$1pJll4)
                                                         '10)
                                                       g$p$6537$1pJll4)
                                                     (g$loop$6541$1pJll4
                                                       (fx+ g$n$6542$1pJll4 '2)
                                                       (cdr g$a$6543$1pJll4)))
                                                   (if (memv
                                                         g$t$6545$1pJll4
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6537$1pJll4)
                                                       (g$loop$6541$1pJll4
                                                         (fx+ g$n$6542$1pJll4
                                                              '2)
                                                         g$a$6543$1pJll4))
                                                     (begin
                                                       (write-char
                                                         g$c$6544$1pJll4
                                                         g$p$6537$1pJll4)
                                                       (g$loop$6541$1pJll4
                                                         (fx+ g$n$6542$1pJll4
                                                              '1)
                                                         g$a$6543$1pJll4)))))))))))
                                    (string-ref
                                      g$cntl$6538$1pJll4
                                      (fx+ g$n$6542$1pJll4 '1)))
                                   (begin
                                     (write-char
                                       g$c$6544$1pJll4
                                       g$p$6537$1pJll4)
                                     (g$loop$6541$1pJll4
                                       (fx+ g$n$6542$1pJll4 '1)
                                       g$a$6543$1pJll4)))))
                              (string-ref g$cntl$6538$1pJll4 g$n$6542$1pJll4))
                             (void))))))
               g$loop$6541$1pJll4)
             '0
             g$args$6539$1pJll4)))
         (fx- (string-length g$cntl$6538$1pJll4) '1)))))
   (g$printf$6534$1pJll4
     g$printf$6556$1pJll4
     (case-lambda
       ((g$control$6546$1pJll4 . g$args$6547$1pJll4)
        (g$dofmt$6533$1pJll4
          (current-output-port)
          g$control$6546$1pJll4
          g$args$6547$1pJll4))))
   (g$fprintf$6535$1pJll4
     g$fprintf$6557$1pJll4
     (case-lambda
       ((g$p$6548$1pJll4 g$control$6549$1pJll4 . g$args$6550$1pJll4)
        (g$dofmt$6533$1pJll4
          g$p$6548$1pJll4
          g$control$6549$1pJll4
          g$args$6550$1pJll4))))
   (g$format$6536$1pJll4
     g$format$6558$1pJll4
     (case-lambda
       ((g$control$6551$1pJll4 . g$args$6552$1pJll4)
        (call-with-values
          g$open-string-output-port$6352$1pJll4
          (case-lambda
            ((g$p$6553$1pJll4 g$c$6554$1pJll4)
             (begin
               (g$dofmt$6533$1pJll4
                 g$p$6553$1pJll4
                 g$control$6551$1pJll4
                 g$args$6552$1pJll4)
               (g$c$6554$1pJll4)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6559$1pJll4
     g$make-traced-macro$6562$1pJll4
     (case-lambda
       ((g$name$6560$1pJll4 g$x$6561$1pJll4)
        (if (procedure? g$x$6561$1pJll4)
          (make-traced-procedure
            g$name$6560$1pJll4
            g$x$6561$1pJll4
            g$syntax->datum$11213$1pJll4)
          (if (g$variable-transformer?$11036$1pJll4 g$x$6561$1pJll4)
            (g$make-variable-transformer$11035$1pJll4
              (make-traced-procedure
                g$name$6560$1pJll4
                (g$variable-transformer-procedure$11037$1pJll4 g$x$6561$1pJll4)
                g$syntax->datum$11213$1pJll4))
            g$x$6561$1pJll4))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6563$1pJll4
     g$read-library-source-file$6642$1pJll4
     (case-lambda
       ((g$file-name$6634$1pJll4)
        (g$with-input-from-file$6386$1pJll4
          g$file-name$6634$1pJll4
          read-annotated))))
   (g$make-parameter$6564$1pJll4
     g$make-parameter$6643$1pJll4
     (case-lambda
       ((g$x$6635$1pJll4)
        (g$make-parameter$6564$1pJll4
          g$x$6635$1pJll4
          (case-lambda ((g$x$6636$1pJll4) g$x$6636$1pJll4))))
       ((g$x$6637$1pJll4 g$fender$6638$1pJll4)
        (begin
          (if (not (procedure? g$fender$6638$1pJll4))
            (g$assertion-error$11206$1pJll4
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(51,8) - (51,36)"))
            (void))
          ((case-lambda
             ((g$x$6639$1pJll4)
              (case-lambda
                (() g$x$6639$1pJll4)
                ((g$v$6640$1pJll4)
                 (set! g$x$6639$1pJll4
                   (g$fender$6638$1pJll4 g$v$6640$1pJll4))))))
           (g$fender$6638$1pJll4 g$x$6637$1pJll4))))))
   (g$file-options-constructor$6632$1pJll4
     g$file-options-constructor$6644$1pJll4
     (g$make-parameter$6564$1pJll4 '#f))
   (g$file-options-spec$6633$1pJll4
     g$file-options-spec$6645$1pJll4
     (case-lambda
       ((g$x$6641$1pJll4)
        ((g$file-options-constructor$6632$1pJll4) g$x$6641$1pJll4)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6841$1pJll4
     g$current-primitive-locations$6886$1pJll4
     (g$make-parameter$6643$1pJll4
       (case-lambda ((g$x$6847$1pJll4) '#f))
       (case-lambda
         ((g$p$6848$1pJll4)
          (begin
            (if (not (procedure? g$p$6848$1pJll4))
              (g$assertion-error$11206$1pJll4
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$6848$1pJll4)))))
   (g$mutable?$6842$1pJll4
     g$mutable?$6887$1pJll4
     (case-lambda
       ((g$x$6849$1pJll4)
        (letrec* ((g$simple?$6850$1pJll4
                    (case-lambda
                      ((g$x$6851$1pJll4)
                       ((case-lambda
                          ((g$t$6852$1pJll4)
                           (if g$t$6852$1pJll4
                             g$t$6852$1pJll4
                             ((case-lambda
                                ((g$t$6853$1pJll4)
                                 (if g$t$6853$1pJll4
                                   g$t$6853$1pJll4
                                   ((case-lambda
                                      ((g$t$6854$1pJll4)
                                       (if g$t$6854$1pJll4
                                         g$t$6854$1pJll4
                                         ((case-lambda
                                            ((g$t$6855$1pJll4)
                                             (if g$t$6855$1pJll4
                                               g$t$6855$1pJll4
                                               ((case-lambda
                                                  ((g$t$6856$1pJll4)
                                                   (if g$t$6856$1pJll4
                                                     g$t$6856$1pJll4
                                                     ((case-lambda
                                                        ((g$t$6857$1pJll4)
                                                         (if g$t$6857$1pJll4
                                                           g$t$6857$1pJll4
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6851$1pJll4)))))
                                                      (bytevector?
                                                        g$x$6851$1pJll4)))))
                                                (string? g$x$6851$1pJll4)))))
                                          (boolean? g$x$6851$1pJll4)))))
                                    (symbol? g$x$6851$1pJll4)))))
                              (char? g$x$6851$1pJll4)))))
                        (null? g$x$6851$1pJll4))))))
          (not (g$simple?$6850$1pJll4 g$x$6849$1pJll4))))))
   (g$rewriter$6843$1pJll4
     g$rewriter$6888$1pJll4
     (case-lambda
       ((g$quote-hack?$6858$1pJll4)
        (letrec* ((g$f$6859$1pJll4
                    (case-lambda
                      ((g$x$6860$1pJll4)
                       (if (pair? g$x$6860$1pJll4)
                         ((case-lambda
                            ((g$t$6861$1pJll4)
                             (if (memv g$t$6861$1pJll4 '(quote))
                               (if (if g$quote-hack?$6858$1pJll4
                                     (begin
                                       '#f
                                       (g$mutable?$6842$1pJll4
                                         (g$cadr$5022$1pJll4 g$x$6860$1pJll4)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6862$1pJll4)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6862$1pJll4
                                         (g$cadr$5022$1pJll4 g$x$6860$1pJll4))
                                       g$g$6862$1pJll4)))
                                  (gensym))
                                 g$x$6860$1pJll4)
                               (if (memv g$t$6861$1pJll4 '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6863$1pJll4)
                                           (cons
                                             (car g$x$6863$1pJll4)
                                             (map g$f$6859$1pJll4
                                                  (cdr g$x$6863$1pJll4)))))
                                        (cdr g$x$6860$1pJll4)))
                                 (if (memv g$t$6861$1pJll4 '(lambda))
                                   (g$cons*$5505$1pJll4
                                     'lambda
                                     (g$cadr$5022$1pJll4 g$x$6860$1pJll4)
                                     (map g$f$6859$1pJll4
                                          (g$cddr$5024$1pJll4 g$x$6860$1pJll4)))
                                   (if (memv g$t$6861$1pJll4 '(letrec))
                                     ((case-lambda
                                        ((g$bindings$6864$1pJll4
                                           g$body*$6865$1pJll4)
                                         ((case-lambda
                                            ((g$lhs*$6866$1pJll4
                                               g$rhs*$6867$1pJll4)
                                             (g$cons*$5505$1pJll4
                                               'letrec
                                               (map list
                                                    g$lhs*$6866$1pJll4
                                                    (map g$f$6859$1pJll4
                                                         g$rhs*$6867$1pJll4))
                                               (map g$f$6859$1pJll4
                                                    g$body*$6865$1pJll4))))
                                          (map car g$bindings$6864$1pJll4)
                                          (map g$cadr$5022$1pJll4
                                               g$bindings$6864$1pJll4))))
                                      (g$cadr$5022$1pJll4 g$x$6860$1pJll4)
                                      (g$cddr$5024$1pJll4 g$x$6860$1pJll4))
                                     (if (memv g$t$6861$1pJll4 '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$6868$1pJll4
                                             g$body*$6869$1pJll4)
                                           ((case-lambda
                                              ((g$lhs*$6870$1pJll4
                                                 g$rhs*$6871$1pJll4)
                                               (g$cons*$5505$1pJll4
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6870$1pJll4
                                                      (map g$f$6859$1pJll4
                                                           g$rhs*$6871$1pJll4))
                                                 (map g$f$6859$1pJll4
                                                      g$body*$6869$1pJll4))))
                                            (map car g$bindings$6868$1pJll4)
                                            (map g$cadr$5022$1pJll4
                                                 g$bindings$6868$1pJll4))))
                                        (g$cadr$5022$1pJll4 g$x$6860$1pJll4)
                                        (g$cddr$5024$1pJll4 g$x$6860$1pJll4))
                                       (if (memv
                                             g$t$6861$1pJll4
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$6872$1pJll4
                                               g$x$6873$1pJll4)
                                             ((case-lambda
                                                ((g$bindings$6874$1pJll4
                                                   g$body*$6875$1pJll4)
                                                 ((case-lambda
                                                    ((g$lhs*$6876$1pJll4
                                                       g$lhs**$6877$1pJll4
                                                       g$rhs*$6878$1pJll4)
                                                     (g$cons*$5505$1pJll4
                                                       'library-letrec*
                                                       g$name$6872$1pJll4
                                                       (map list
                                                            g$lhs*$6876$1pJll4
                                                            g$lhs**$6877$1pJll4
                                                            (map g$f$6859$1pJll4
                                                                 g$rhs*$6878$1pJll4))
                                                       (map g$f$6859$1pJll4
                                                            g$body*$6875$1pJll4))))
                                                  (map car
                                                       g$bindings$6874$1pJll4)
                                                  (map g$cadr$5022$1pJll4
                                                       g$bindings$6874$1pJll4)
                                                  (map g$caddr$5028$1pJll4
                                                       g$bindings$6874$1pJll4))))
                                              (g$cadr$5022$1pJll4
                                                g$x$6873$1pJll4)
                                              (g$cddr$5024$1pJll4
                                                g$x$6873$1pJll4))))
                                          (g$cadr$5022$1pJll4 g$x$6860$1pJll4)
                                          (cdr g$x$6860$1pJll4))
                                         (if (memv g$t$6861$1pJll4 '(begin))
                                           (cons
                                             'begin
                                             (map g$f$6859$1pJll4
                                                  (cdr g$x$6860$1pJll4)))
                                           (if (memv g$t$6861$1pJll4 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5022$1pJll4
                                                 g$x$6860$1pJll4)
                                               (g$f$6859$1pJll4
                                                 (g$caddr$5028$1pJll4
                                                   g$x$6860$1pJll4)))
                                             (if (memv
                                                   g$t$6861$1pJll4
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$6879$1pJll4)
                                                   ((case-lambda
                                                      ((g$t$6880$1pJll4)
                                                       (if g$t$6880$1pJll4
                                                         ((case-lambda
                                                            ((g$loc$6881$1pJll4)
                                                             g$loc$6881$1pJll4))
                                                          g$t$6880$1pJll4)
                                                         g$op$6879$1pJll4)))
                                                    ((g$current-primitive-locations$6841$1pJll4)
                                                     g$op$6879$1pJll4))))
                                                (g$cadr$5022$1pJll4
                                                  g$x$6860$1pJll4))
                                               (if (memv
                                                     g$t$6861$1pJll4
                                                     '(define))
                                                 g$x$6860$1pJll4
                                                 (if (list? g$x$6860$1pJll4)
                                                   (map g$f$6859$1pJll4
                                                        g$x$6860$1pJll4)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6860$1pJll4
                                                     (list?
                                                       g$x$6860$1pJll4)))))))))))))))
                          (car g$x$6860$1pJll4))
                         g$x$6860$1pJll4)))))
          g$f$6859$1pJll4))))
   (g$expanded->core$6844$1pJll4
     g$expanded->core$6889$1pJll4
     (case-lambda
       ((g$x$6882$1pJll4) ((g$rewriter$6843$1pJll4 '#t) g$x$6882$1pJll4))))
   (g$compile-core-expr$6845$1pJll4
     g$compile-core-expr$6890$1pJll4
     (case-lambda
       ((g$x$6883$1pJll4) ((g$rewriter$6843$1pJll4 '#f) g$x$6883$1pJll4))))
   (g$compile-core-expr-to-port$6846$1pJll4
     g$compile-core-expr-to-port$6891$1pJll4
     (case-lambda
       ((g$x$6884$1pJll4 g$p$6885$1pJll4)
        (g$pretty-print$6840$1pJll4
          ((g$rewriter$6843$1pJll4 '#f) g$x$6884$1pJll4)
          g$p$6885$1pJll4)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6930$1pJll4
     g$make-collection$7134$1pJll4
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6991$1pJll4)
            (letrec* ((g$set-cons$6992$1pJll4
                        (case-lambda
                          ((g$x$6994$1pJll4 g$ls$6995$1pJll4)
                           (if (memq g$x$6994$1pJll4 g$ls$6995$1pJll4)
                             g$ls$6995$1pJll4
                             (cons g$x$6994$1pJll4 g$ls$6995$1pJll4))))))
              (case-lambda
                (() g$set$6991$1pJll4)
                ((g$x$6993$1pJll4)
                 (set! g$set$6991$1pJll4
                   (g$set-cons$6992$1pJll4
                     g$x$6993$1pJll4
                     g$set$6991$1pJll4)))))))
         '()))))
   (g$current-library-collection$6931$1pJll4
     g$current-library-collection$7135$1pJll4
     (g$make-parameter$6643$1pJll4
       (g$make-collection$6930$1pJll4)
       (case-lambda
         ((g$x$6996$1pJll4)
          (begin
            (if (not (procedure? g$x$6996$1pJll4))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6996$1pJll4)
              (void))
            g$x$6996$1pJll4)))))
   (g$8067$6932$1pJll4
     g$8067$7136$1pJll4
     (make-record-type-descriptor
       'library
       '#f
       'g$8070$1pJll4
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8069$6933$1pJll4 g$8069$7137$1pJll4 '#f)
   (g$8068$6934$1pJll4
     g$8068$7138$1pJll4
     (make-record-constructor-descriptor
       g$8067$6932$1pJll4
       '#f
       g$8069$6933$1pJll4))
   (g$library?$6935$1pJll4
     g$library?$7139$1pJll4
     (record-predicate g$8067$6932$1pJll4))
   (g$make-library$6936$1pJll4
     g$make-library$7140$1pJll4
     (record-constructor g$8068$6934$1pJll4))
   (g$library-id$6937$1pJll4
     g$library-id$7141$1pJll4
     (record-accessor g$8067$6932$1pJll4 '0))
   (g$library-name$6938$1pJll4
     g$library-name$7142$1pJll4
     (record-accessor g$8067$6932$1pJll4 '1))
   (g$library-version$6939$1pJll4
     g$library-version$7143$1pJll4
     (record-accessor g$8067$6932$1pJll4 '2))
   (g$library-imp*$6940$1pJll4
     g$library-imp*$7144$1pJll4
     (record-accessor g$8067$6932$1pJll4 '3))
   (g$library-vis*$6941$1pJll4
     g$library-vis*$7145$1pJll4
     (record-accessor g$8067$6932$1pJll4 '4))
   (g$library-inv*$6942$1pJll4
     g$library-inv*$7146$1pJll4
     (record-accessor g$8067$6932$1pJll4 '5))
   (g$library-subst$6943$1pJll4
     g$library-subst$7147$1pJll4
     (record-accessor g$8067$6932$1pJll4 '6))
   (g$library-env$6944$1pJll4
     g$library-env$7148$1pJll4
     (record-accessor g$8067$6932$1pJll4 '7))
   (g$library-visit-state$6945$1pJll4
     g$library-visit-state$7149$1pJll4
     (record-accessor g$8067$6932$1pJll4 '8))
   (g$library-invoke-state$6946$1pJll4
     g$library-invoke-state$7150$1pJll4
     (record-accessor g$8067$6932$1pJll4 '9))
   (g$library-visit-code$6947$1pJll4
     g$library-visit-code$7151$1pJll4
     (record-accessor g$8067$6932$1pJll4 '10))
   (g$library-invoke-code$6948$1pJll4
     g$library-invoke-code$7152$1pJll4
     (record-accessor g$8067$6932$1pJll4 '11))
   (g$library-visible?$6949$1pJll4
     g$library-visible?$7153$1pJll4
     (record-accessor g$8067$6932$1pJll4 '12))
   (g$library-source-file-name$6950$1pJll4
     g$library-source-file-name$7154$1pJll4
     (record-accessor g$8067$6932$1pJll4 '13))
   (g$set-library-id!$6951$1pJll4
     g$set-library-id!$7155$1pJll4
     (record-mutator g$8067$6932$1pJll4 '0))
   (g$set-library-name!$6952$1pJll4
     g$set-library-name!$7156$1pJll4
     (record-mutator g$8067$6932$1pJll4 '1))
   (g$set-library-version!$6953$1pJll4
     g$set-library-version!$7157$1pJll4
     (record-mutator g$8067$6932$1pJll4 '2))
   (g$set-library-imp*!$6954$1pJll4
     g$set-library-imp*!$7158$1pJll4
     (record-mutator g$8067$6932$1pJll4 '3))
   (g$set-library-vis*!$6955$1pJll4
     g$set-library-vis*!$7159$1pJll4
     (record-mutator g$8067$6932$1pJll4 '4))
   (g$set-library-inv*!$6956$1pJll4
     g$set-library-inv*!$7160$1pJll4
     (record-mutator g$8067$6932$1pJll4 '5))
   (g$set-library-subst!$6957$1pJll4
     g$set-library-subst!$7161$1pJll4
     (record-mutator g$8067$6932$1pJll4 '6))
   (g$set-library-env!$6958$1pJll4
     g$set-library-env!$7162$1pJll4
     (record-mutator g$8067$6932$1pJll4 '7))
   (g$set-library-visit-state!$6959$1pJll4
     g$set-library-visit-state!$7163$1pJll4
     (record-mutator g$8067$6932$1pJll4 '8))
   (g$set-library-invoke-state!$6960$1pJll4
     g$set-library-invoke-state!$7164$1pJll4
     (record-mutator g$8067$6932$1pJll4 '9))
   (g$set-library-visit-code!$6961$1pJll4
     g$set-library-visit-code!$7165$1pJll4
     (record-mutator g$8067$6932$1pJll4 '10))
   (g$set-library-invoke-code!$6962$1pJll4
     g$set-library-invoke-code!$7166$1pJll4
     (record-mutator g$8067$6932$1pJll4 '11))
   (g$set-library-visible?!$6963$1pJll4
     g$set-library-visible?!$7167$1pJll4
     (record-mutator g$8067$6932$1pJll4 '12))
   (g$set-library-source-file-name!$6964$1pJll4
     g$set-library-source-file-name!$7168$1pJll4
     (record-mutator g$8067$6932$1pJll4 '13))
   (g$rp$6965$1pJll4
     g$rp$7169$1pJll4
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6997$1pJll4 g$p$6998$1pJll4)
          (begin
            (if (not (g$library?$6935$1pJll4 g$x$6997$1pJll4))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6558$1pJll4
                '"#<library ~s>"
                (if (null? (g$library-version$6939$1pJll4 g$x$6997$1pJll4))
                  (g$library-name$6938$1pJll4 g$x$6997$1pJll4)
                  (append
                    (g$library-name$6938$1pJll4 g$x$6997$1pJll4)
                    (list (g$library-version$6939$1pJll4 g$x$6997$1pJll4)))))
              g$p$6998$1pJll4))))))
   (g$find-dependencies$6966$1pJll4
     g$find-dependencies$7170$1pJll4
     (case-lambda
       ((g$ls$6999$1pJll4)
        (if (null? g$ls$6999$1pJll4)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6967$1pJll4
     g$find-library-by$7171$1pJll4
     (case-lambda
       ((g$pred$7000$1pJll4)
        ((letrec ((g$f$7001$1pJll4
                    (case-lambda
                      ((g$ls$7002$1pJll4)
                       (if (null? g$ls$7002$1pJll4)
                         '#f
                         (if (g$pred$7000$1pJll4 (car g$ls$7002$1pJll4))
                           (car g$ls$7002$1pJll4)
                           (g$f$7001$1pJll4 (cdr g$ls$7002$1pJll4))))))))
           g$f$7001$1pJll4)
         ((g$current-library-collection$6931$1pJll4))))))
   (g$library-path$6968$1pJll4
     g$library-path$7172$1pJll4
     (g$make-parameter$6643$1pJll4
       '(".")
       (case-lambda
         ((g$x$7003$1pJll4)
          (if (if (list? g$x$7003$1pJll4)
                (begin '#f (g$for-all$5503$1pJll4 string? g$x$7003$1pJll4))
                '#f)
            (map (case-lambda ((g$x$7004$1pJll4) g$x$7004$1pJll4))
                 g$x$7003$1pJll4)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7003$1pJll4))))))
   (g$library-extensions$6969$1pJll4
     g$library-extensions$7173$1pJll4
     (g$make-parameter$6643$1pJll4
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7005$1pJll4)
          (if (if (list? g$x$7005$1pJll4)
                (begin '#f (g$for-all$5503$1pJll4 string? g$x$7005$1pJll4))
                '#f)
            (map (case-lambda ((g$x$7006$1pJll4) g$x$7006$1pJll4))
                 g$x$7005$1pJll4)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7005$1pJll4))))))
   (g$library-name->file-name$6970$1pJll4
     g$library-name->file-name$7174$1pJll4
     (case-lambda
       ((g$x$7007$1pJll4)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6352$1pJll4)))
          (case-lambda
            ((g$p$7010$1pJll4 g$extract$7011$1pJll4)
             ((case-lambda
                ((g$extract$7012$1pJll4 g$p$7013$1pJll4)
                 (letrec* ((g$display-hex$7014$1pJll4
                             (case-lambda
                               ((g$n$7022$1pJll4)
                                (if (<= '0 g$n$7022$1pJll4 '9)
                                  (display g$n$7022$1pJll4 g$p$7013$1pJll4)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7022$1pJll4 '10)))
                                    g$p$7013$1pJll4))))))
                   (begin
                     ((letrec ((g$f$7015$1pJll4
                                 (case-lambda
                                   ((g$ls$7016$1pJll4)
                                    (if (not (null? g$ls$7016$1pJll4))
                                      (begin
                                        (display '"/" g$p$7013$1pJll4)
                                        (for-each
                                          (case-lambda
                                            ((g$c$7017$1pJll4)
                                             (if ((case-lambda
                                                    ((g$t$7018$1pJll4)
                                                     (if g$t$7018$1pJll4
                                                       g$t$7018$1pJll4
                                                       ((case-lambda
                                                          ((g$t$7019$1pJll4)
                                                           (if g$t$7019$1pJll4
                                                             g$t$7019$1pJll4
                                                             ((case-lambda
                                                                ((g$t$7020$1pJll4)
                                                                 (if g$t$7020$1pJll4
                                                                   g$t$7020$1pJll4
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$7017$1pJll4
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5059$1pJll4
                                                                '#\0
                                                                g$c$7017$1pJll4
                                                                '#\9)))))
                                                        (g$char<=?$5059$1pJll4
                                                          '#\A
                                                          g$c$7017$1pJll4
                                                          '#\Z)))))
                                                  (g$char<=?$5059$1pJll4
                                                    '#\a
                                                    g$c$7017$1pJll4
                                                    '#\z))
                                               (display
                                                 g$c$7017$1pJll4
                                                 g$p$7013$1pJll4)
                                               (begin
                                                 (display '"%" g$p$7013$1pJll4)
                                                 ((case-lambda
                                                    ((g$n$7021$1pJll4)
                                                     (begin
                                                       (g$display-hex$7014$1pJll4
                                                         (g$quotient$5867$1pJll4
                                                           g$n$7021$1pJll4
                                                           '16))
                                                       (g$display-hex$7014$1pJll4
                                                         (g$remainder$5868$1pJll4
                                                           g$n$7021$1pJll4
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7017$1pJll4))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7016$1pJll4))))
                                        (g$f$7015$1pJll4
                                          (cdr g$ls$7016$1pJll4)))
                                      (void))))))
                        g$f$7015$1pJll4)
                      g$x$7007$1pJll4)
                     (g$extract$7012$1pJll4)))))
              g$extract$7011$1pJll4
              g$p$7010$1pJll4)))))))
   (g$file-locator$6971$1pJll4
     g$file-locator$7175$1pJll4
     (g$make-parameter$6643$1pJll4
       (case-lambda
         ((g$x$7023$1pJll4)
          ((case-lambda
             ((g$str$7024$1pJll4)
              ((letrec ((g$f$7025$1pJll4
                          (case-lambda
                            ((g$ls$7026$1pJll4
                               g$exts$7027$1pJll4
                               g$failed-list$7028$1pJll4)
                             (if (null? g$ls$7026$1pJll4)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8172$7029$1pJll4
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8175$1pJll4
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8174$7030$1pJll4 '#f)
                                             (g$8173$7031$1pJll4
                                               (make-record-constructor-descriptor
                                                 g$8172$7029$1pJll4
                                                 &condition-rcd
                                                 g$8174$7030$1pJll4))
                                             (g$8171$7032$1pJll4
                                               (record-predicate
                                                 g$8172$7029$1pJll4))
                                             (g$make-library-resolution-condition$7033$1pJll4
                                               (record-constructor
                                                 g$8173$7031$1pJll4))
                                             (g$8169$7034$1pJll4
                                               (record-accessor
                                                 g$8172$7029$1pJll4
                                                 '0))
                                             (g$8170$7035$1pJll4
                                               (record-accessor
                                                 g$8172$7029$1pJll4
                                                 '1))
                                             (g$library-resolution-condition?$7036$1pJll4
                                               (condition-predicate
                                                 g$8172$7029$1pJll4))
                                             (g$condition-library$7037$1pJll4
                                               (condition-accessor
                                                 g$8172$7029$1pJll4
                                                 g$8169$7034$1pJll4))
                                             (g$condition-files$7038$1pJll4
                                               (condition-accessor
                                                 g$8172$7029$1pJll4
                                                 g$8170$7035$1pJll4)))
                                     (raise
                                       (condition
                                         (g$make-error$5777$1pJll4)
                                         (g$make-who-condition$5803$1pJll4
                                           'expander)
                                         (g$make-message-condition$5757$1pJll4
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$7033$1pJll4
                                           g$x$7023$1pJll4
                                           (reverse
                                             g$failed-list$7028$1pJll4))))))))
                               (if (null? g$exts$7027$1pJll4)
                                 (g$f$7025$1pJll4
                                   (cdr g$ls$7026$1pJll4)
                                   (g$library-extensions$6969$1pJll4)
                                   g$failed-list$7028$1pJll4)
                                 ((case-lambda
                                    ((g$name$7039$1pJll4)
                                     (if (g$file-exists?$5374$1pJll4
                                           g$name$7039$1pJll4)
                                       g$name$7039$1pJll4
                                       (g$f$7025$1pJll4
                                         g$ls$7026$1pJll4
                                         (cdr g$exts$7027$1pJll4)
                                         (cons
                                           g$name$7039$1pJll4
                                           g$failed-list$7028$1pJll4)))))
                                  (string-append
                                    (car g$ls$7026$1pJll4)
                                    g$str$7024$1pJll4
                                    (car g$exts$7027$1pJll4)))))))))
                 g$f$7025$1pJll4)
               (g$library-path$6968$1pJll4)
               (g$library-extensions$6969$1pJll4)
               '())))
           (g$library-name->file-name$6970$1pJll4 g$x$7023$1pJll4))))
       (case-lambda
         ((g$f$7040$1pJll4)
          (if (procedure? g$f$7040$1pJll4)
            g$f$7040$1pJll4
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7040$1pJll4))))))
   (g$serialize-all$6972$1pJll4
     g$serialize-all$7176$1pJll4
     (case-lambda
       ((g$serialize$7041$1pJll4 g$compile$7042$1pJll4)
        (letrec* ((g$library-desc$7043$1pJll4
                    (case-lambda
                      ((g$x$7045$1pJll4)
                       (list
                         (g$library-id$6937$1pJll4 g$x$7045$1pJll4)
                         (g$library-name$6938$1pJll4 g$x$7045$1pJll4))))))
          (for-each
            (case-lambda
              ((g$x$7044$1pJll4)
               (if (g$library-source-file-name$6950$1pJll4 g$x$7044$1pJll4)
                 (g$serialize$7041$1pJll4
                   (g$library-source-file-name$6950$1pJll4 g$x$7044$1pJll4)
                   (list
                     (g$library-id$6937$1pJll4 g$x$7044$1pJll4)
                     (g$library-name$6938$1pJll4 g$x$7044$1pJll4)
                     (g$library-version$6939$1pJll4 g$x$7044$1pJll4)
                     (map g$library-desc$7043$1pJll4
                          (g$library-imp*$6940$1pJll4 g$x$7044$1pJll4))
                     (map g$library-desc$7043$1pJll4
                          (g$library-vis*$6941$1pJll4 g$x$7044$1pJll4))
                     (map g$library-desc$7043$1pJll4
                          (g$library-inv*$6942$1pJll4 g$x$7044$1pJll4))
                     (g$library-subst$6943$1pJll4 g$x$7044$1pJll4)
                     (g$library-env$6944$1pJll4 g$x$7044$1pJll4)
                     (g$compile$7042$1pJll4
                       (g$library-visit-code$6947$1pJll4 g$x$7044$1pJll4))
                     (g$compile$7042$1pJll4
                       (g$library-invoke-code$6948$1pJll4 g$x$7044$1pJll4))
                     (g$library-visible?$6949$1pJll4 g$x$7044$1pJll4)))
                 (void))))
            ((g$current-library-collection$6931$1pJll4)))))))
   (g$current-precompiled-library-loader$6973$1pJll4
     g$current-precompiled-library-loader$7177$1pJll4
     (g$make-parameter$6643$1pJll4
       (case-lambda ((g$filename$7046$1pJll4 g$sk$7047$1pJll4) '#f))))
   (g$try-load-from-file$6974$1pJll4
     g$try-load-from-file$7178$1pJll4
     (case-lambda
       ((g$filename$7048$1pJll4)
        ((g$current-precompiled-library-loader$6973$1pJll4)
         g$filename$7048$1pJll4
         (case-lambda
           ((g$id$7049$1pJll4
              g$name$7050$1pJll4
              g$ver$7051$1pJll4
              g$imp*$7052$1pJll4
              g$vis*$7053$1pJll4
              g$inv*$7054$1pJll4
              g$exp-subst$7055$1pJll4
              g$exp-env$7056$1pJll4
              g$visit-proc$7057$1pJll4
              g$invoke-proc$7058$1pJll4
              g$visible?$7059$1pJll4)
            ((letrec ((g$f$7060$1pJll4
                        (case-lambda
                          ((g$deps$7061$1pJll4)
                           (if (null? g$deps$7061$1pJll4)
                             (begin
                               (g$install-library$6984$1pJll4
                                 g$id$7049$1pJll4
                                 g$name$7050$1pJll4
                                 g$ver$7051$1pJll4
                                 g$imp*$7052$1pJll4
                                 g$vis*$7053$1pJll4
                                 g$inv*$7054$1pJll4
                                 g$exp-subst$7055$1pJll4
                                 g$exp-env$7056$1pJll4
                                 g$visit-proc$7057$1pJll4
                                 g$invoke-proc$7058$1pJll4
                                 '#f
                                 '#f
                                 g$visible?$7059$1pJll4
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7062$1pJll4)
                                 ((case-lambda
                                    ((g$label$7063$1pJll4 g$dname$7064$1pJll4)
                                     ((case-lambda
                                        ((g$l$7065$1pJll4)
                                         (if (if (g$library?$6935$1pJll4
                                                   g$l$7065$1pJll4)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7063$1pJll4
                                                      (g$library-id$6937$1pJll4
                                                        g$l$7065$1pJll4)))
                                               '#f)
                                           (g$f$7060$1pJll4
                                             (cdr g$deps$7061$1pJll4))
                                           (begin
                                             (g$fprintf$6557$1pJll4
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
                                               g$name$7050$1pJll4
                                               g$dname$7064$1pJll4
                                               g$filename$7048$1pJll4)
                                             '#f))))
                                      (g$find-library-by-name$6979$1pJll4
                                        g$dname$7064$1pJll4))))
                                  (car g$d$7062$1pJll4)
                                  (g$cadr$5022$1pJll4 g$d$7062$1pJll4))))
                              (car g$deps$7061$1pJll4)))))))
               g$f$7060$1pJll4)
             (append g$imp*$7052$1pJll4 g$vis*$7053$1pJll4 g$inv*$7054$1pJll4)))
           (g$others$7066$1pJll4 '#f))))))
   (g$library-loader$6975$1pJll4
     g$library-loader$7179$1pJll4
     (g$make-parameter$6643$1pJll4
       (case-lambda
         ((g$x$7067$1pJll4)
          ((case-lambda
             ((g$file-name$7068$1pJll4)
              (if (not g$file-name$7068$1pJll4)
                (assertion-violation '#f '"cannot file library" g$x$7067$1pJll4)
                ((case-lambda
                   ((g$t$7069$1pJll4)
                    (if g$t$7069$1pJll4
                      g$t$7069$1pJll4
                      (begin
                        '#f
                        ((g$current-library-expander$6976$1pJll4)
                         (g$read-library-source-file$6642$1pJll4
                           g$file-name$7068$1pJll4)
                         g$file-name$7068$1pJll4
                         (case-lambda
                           ((g$name$7070$1pJll4)
                            (if (not (equal?
                                       g$name$7070$1pJll4
                                       g$x$7067$1pJll4))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6352$1pJll4)))
                                  (case-lambda
                                    ((g$p$7073$1pJll4 g$e$7074$1pJll4)
                                     ((case-lambda
                                        ((g$e$7075$1pJll4 g$p$7076$1pJll4)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7076$1pJll4)
                                           (write
                                             g$x$7067$1pJll4
                                             g$p$7076$1pJll4)
                                           (display
                                             '" in file "
                                             g$p$7076$1pJll4)
                                           (display
                                             g$file-name$7068$1pJll4
                                             g$p$7076$1pJll4)
                                           (display '", found " g$p$7076$1pJll4)
                                           (write
                                             g$name$7070$1pJll4
                                             g$p$7076$1pJll4)
                                           (display '" instead" g$p$7076$1pJll4)
                                           (g$e$7075$1pJll4))))
                                      g$e$7074$1pJll4
                                      g$p$7073$1pJll4)))))
                              (void)))))))))
                 (g$try-load-from-file$6974$1pJll4 g$file-name$7068$1pJll4)))))
           ((g$file-locator$6971$1pJll4) g$x$7067$1pJll4))))
       (case-lambda
         ((g$f$7077$1pJll4)
          (if (procedure? g$f$7077$1pJll4)
            g$f$7077$1pJll4
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7077$1pJll4))))))
   (g$current-library-expander$6976$1pJll4
     g$current-library-expander$7180$1pJll4
     (g$make-parameter$6643$1pJll4
       (case-lambda
         ((g$x$7078$1pJll4)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7079$1pJll4)
          (if (procedure? g$f$7079$1pJll4)
            g$f$7079$1pJll4
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7079$1pJll4))))))
   (g$external-pending-libraries$6977$1pJll4
     g$external-pending-libraries$7181$1pJll4
     (g$make-parameter$6643$1pJll4 '()))
   (g$find-external-library$6978$1pJll4
     g$find-external-library$7182$1pJll4
     (case-lambda
       ((g$name$7080$1pJll4)
        (begin
          (if (g$member$5499$1pJll4
                g$name$7080$1pJll4
                (g$external-pending-libraries$6977$1pJll4))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7080$1pJll4)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7083$1pJll4
                g$external-pending-libraries$7084$1pJll4)
              ((case-lambda
                 ((g$swap$7085$1pJll4)
                  (dynamic-wind
                    g$swap$7085$1pJll4
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6975$1pJll4) g$name$7080$1pJll4)
                         ((case-lambda
                            ((g$t$7086$1pJll4)
                             (if g$t$7086$1pJll4
                               g$t$7086$1pJll4
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7080$1pJll4)))))
                          (g$find-library-by$6967$1pJll4
                            (case-lambda
                              ((g$x$7087$1pJll4)
                               (equal?
                                 (g$library-name$6938$1pJll4 g$x$7087$1pJll4)
                                 g$name$7080$1pJll4))))))))
                    g$swap$7085$1pJll4)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7088$1pJll4)
                      (begin
                        (g$external-pending-libraries$7083$1pJll4
                          g$external-pending-libraries$7084$1pJll4)
                        (set! g$external-pending-libraries$7084$1pJll4
                          g$t$7088$1pJll4))))
                   (g$external-pending-libraries$7083$1pJll4)))))))
           g$external-pending-libraries$6977$1pJll4
           (cons
             g$name$7080$1pJll4
             (g$external-pending-libraries$6977$1pJll4)))))))
   (g$find-library-by-name$6979$1pJll4
     g$find-library-by-name$7183$1pJll4
     (case-lambda
       ((g$name$7089$1pJll4)
        ((case-lambda
           ((g$t$7090$1pJll4)
            (if g$t$7090$1pJll4
              g$t$7090$1pJll4
              (begin
                '#f
                (g$find-external-library$6978$1pJll4 g$name$7089$1pJll4)))))
         (g$find-library-by$6967$1pJll4
           (case-lambda
             ((g$x$7091$1pJll4)
              (equal?
                (g$library-name$6938$1pJll4 g$x$7091$1pJll4)
                g$name$7089$1pJll4))))))))
   (g$library-exists?$6980$1pJll4
     g$library-exists?$7184$1pJll4
     (case-lambda
       ((g$name$7092$1pJll4)
        (if (g$find-library-by$6967$1pJll4
              (case-lambda
                ((g$x$7093$1pJll4)
                 (equal?
                   (g$library-name$6938$1pJll4 g$x$7093$1pJll4)
                   g$name$7092$1pJll4))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6981$1pJll4
     g$find-library-by-spec/die$7185$1pJll4
     (case-lambda
       ((g$spec$7094$1pJll4)
        ((case-lambda
           ((g$id$7095$1pJll4)
            ((case-lambda
               ((g$t$7096$1pJll4)
                (if g$t$7096$1pJll4
                  g$t$7096$1pJll4
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7094$1pJll4)))))
             (g$find-library-by$6967$1pJll4
               (case-lambda
                 ((g$x$7097$1pJll4)
                  (eq? g$id$7095$1pJll4
                       (g$library-id$6937$1pJll4 g$x$7097$1pJll4))))))))
         (car g$spec$7094$1pJll4)))))
   (g$label->binding-table$6982$1pJll4
     g$label->binding-table$7186$1pJll4
     (g$make-eq-hashtable$5296$1pJll4))
   (g$install-library-record$6983$1pJll4
     g$install-library-record$7187$1pJll4
     (case-lambda
       ((g$lib$7098$1pJll4)
        (begin
          ((case-lambda
             ((g$exp-env$7099$1pJll4)
              (for-each
                (case-lambda
                  ((g$x$7100$1pJll4)
                   ((case-lambda
                      ((g$label$7101$1pJll4 g$binding$7102$1pJll4)
                       ((case-lambda
                          ((g$binding$7103$1pJll4)
                           (g$hashtable-set!$5300$1pJll4
                             g$label->binding-table$6982$1pJll4
                             g$label$7101$1pJll4
                             g$binding$7103$1pJll4)))
                        ((case-lambda
                           ((g$t$7104$1pJll4)
                            (if (memv g$t$7104$1pJll4 '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7098$1pJll4
                                  (cdr g$binding$7102$1pJll4)))
                              (if (memv g$t$7104$1pJll4 '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7098$1pJll4
                                    (cdr g$binding$7102$1pJll4)))
                                (if (memv g$t$7104$1pJll4 '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7098$1pJll4
                                      (cdr g$binding$7102$1pJll4)))
                                  g$binding$7102$1pJll4)))))
                         (car g$binding$7102$1pJll4)))))
                    (car g$x$7100$1pJll4)
                    (cdr g$x$7100$1pJll4))))
                g$exp-env$7099$1pJll4)))
           (g$library-env$6944$1pJll4 g$lib$7098$1pJll4))
          ((g$current-library-collection$6931$1pJll4) g$lib$7098$1pJll4)))))
   (g$install-library$6984$1pJll4
     g$install-library$7188$1pJll4
     (case-lambda
       ((g$id$7105$1pJll4
          g$name$7106$1pJll4
          g$ver$7107$1pJll4
          g$imp*$7108$1pJll4
          g$vis*$7109$1pJll4
          g$inv*$7110$1pJll4
          g$exp-subst$7111$1pJll4
          g$exp-env$7112$1pJll4
          g$visit-proc$7113$1pJll4
          g$invoke-proc$7114$1pJll4
          g$visit-code$7115$1pJll4
          g$invoke-code$7116$1pJll4
          g$visible?$7117$1pJll4
          g$source-file-name$7118$1pJll4)
        ((case-lambda
           ((g$imp-lib*$7119$1pJll4
              g$vis-lib*$7120$1pJll4
              g$inv-lib*$7121$1pJll4)
            (begin
              (if (not (if (symbol? g$id$7105$1pJll4)
                         (if (list? g$name$7106$1pJll4)
                           (begin '#f (list? g$ver$7107$1pJll4))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7105$1pJll4
                  g$name$7106$1pJll4
                  g$ver$7107$1pJll4)
                (void))
              (if (g$library-exists?$6980$1pJll4 g$name$7106$1pJll4)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7106$1pJll4)
                (void))
              ((case-lambda
                 ((g$lib$7122$1pJll4)
                  (g$install-library-record$6983$1pJll4 g$lib$7122$1pJll4)))
               (g$make-library$6936$1pJll4
                 g$id$7105$1pJll4
                 g$name$7106$1pJll4
                 g$ver$7107$1pJll4
                 g$imp-lib*$7119$1pJll4
                 g$vis-lib*$7120$1pJll4
                 g$inv-lib*$7121$1pJll4
                 g$exp-subst$7111$1pJll4
                 g$exp-env$7112$1pJll4
                 g$visit-proc$7113$1pJll4
                 g$invoke-proc$7114$1pJll4
                 g$visit-code$7115$1pJll4
                 g$invoke-code$7116$1pJll4
                 g$visible?$7117$1pJll4
                 g$source-file-name$7118$1pJll4)))))
         (map g$find-library-by-spec/die$6981$1pJll4 g$imp*$7108$1pJll4)
         (map g$find-library-by-spec/die$6981$1pJll4 g$vis*$7109$1pJll4)
         (map g$find-library-by-spec/die$6981$1pJll4 g$inv*$7110$1pJll4)))))
   (g$imported-label->binding$6985$1pJll4
     g$imported-label->binding$7189$1pJll4
     (case-lambda
       ((g$lab$7123$1pJll4)
        (g$hashtable-ref$5299$1pJll4
          g$label->binding-table$6982$1pJll4
          g$lab$7123$1pJll4
          '#f))))
   (g$invoke-library$6986$1pJll4
     g$invoke-library$7190$1pJll4
     (case-lambda
       ((g$lib$7124$1pJll4)
        ((case-lambda
           ((g$invoke$7125$1pJll4)
            (if (procedure? g$invoke$7125$1pJll4)
              (begin
                (g$set-library-invoke-state!$6960$1pJll4
                  g$lib$7124$1pJll4
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7124$1pJll4))))
                (for-each
                  g$invoke-library$6986$1pJll4
                  (g$library-inv*$6942$1pJll4 g$lib$7124$1pJll4))
                (g$set-library-invoke-state!$6960$1pJll4
                  g$lib$7124$1pJll4
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7124$1pJll4))))
                (g$invoke$7125$1pJll4)
                (g$set-library-invoke-state!$6960$1pJll4 g$lib$7124$1pJll4 '#t))
              (void))))
         (g$library-invoke-state$6946$1pJll4 g$lib$7124$1pJll4)))))
   (g$visit-library$6987$1pJll4
     g$visit-library$7191$1pJll4
     (case-lambda
       ((g$lib$7126$1pJll4)
        ((case-lambda
           ((g$visit$7127$1pJll4)
            (if (procedure? g$visit$7127$1pJll4)
              (begin
                (g$set-library-visit-state!$6959$1pJll4
                  g$lib$7126$1pJll4
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7126$1pJll4))))
                (for-each
                  g$invoke-library$6986$1pJll4
                  (g$library-vis*$6941$1pJll4 g$lib$7126$1pJll4))
                (g$set-library-visit-state!$6959$1pJll4
                  g$lib$7126$1pJll4
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7126$1pJll4))))
                (g$visit$7127$1pJll4)
                (g$set-library-visit-state!$6959$1pJll4 g$lib$7126$1pJll4 '#t))
              (void))))
         (g$library-visit-state$6945$1pJll4 g$lib$7126$1pJll4)))))
   (g$invoke-library-by-spec$6988$1pJll4
     g$invoke-library-by-spec$7192$1pJll4
     (case-lambda
       ((g$spec$7128$1pJll4)
        (g$invoke-library$6986$1pJll4
          (g$find-library-by-spec/die$6981$1pJll4 g$spec$7128$1pJll4)))))
   (g$installed-libraries$6989$1pJll4
     g$installed-libraries$7193$1pJll4
     (case-lambda
       ((g$all?$7129$1pJll4)
        ((letrec ((g$f$7130$1pJll4
                    (case-lambda
                      ((g$ls$7131$1pJll4)
                       (if (null? g$ls$7131$1pJll4)
                         '()
                         (if ((case-lambda
                                ((g$t$7132$1pJll4)
                                 (if g$t$7132$1pJll4
                                   g$t$7132$1pJll4
                                   (begin
                                     '#f
                                     (g$library-visible?$6949$1pJll4
                                       (car g$ls$7131$1pJll4))))))
                              g$all?$7129$1pJll4)
                           (cons
                             (car g$ls$7131$1pJll4)
                             (g$f$7130$1pJll4 (cdr g$ls$7131$1pJll4)))
                           (g$f$7130$1pJll4 (cdr g$ls$7131$1pJll4))))))))
           g$f$7130$1pJll4)
         ((g$current-library-collection$6931$1pJll4))))
       (() (g$installed-libraries$6989$1pJll4 '#f))))
   (g$library-spec$6990$1pJll4
     g$library-spec$7194$1pJll4
     (case-lambda
       ((g$x$7133$1pJll4)
        (begin
          (if (not (g$library?$6935$1pJll4 g$x$7133$1pJll4))
            (assertion-violation 'library-spec '"not a library" g$x$7133$1pJll4)
            (void))
          (list
            (g$library-id$6937$1pJll4 g$x$7133$1pJll4)
            (g$library-name$6938$1pJll4 g$x$7133$1pJll4)
            (g$library-version$6939$1pJll4 g$x$7133$1pJll4)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7195$1pJll4
     g$build-global-define$7305$1pJll4
     (case-lambda ((g$x$7276$1pJll4) (g$build-void$7272$1pJll4))))
   (g$build-lambda$7244$1pJll4
     g$build-lambda$7306$1pJll4
     (case-lambda
       ((g$ae$7277$1pJll4 g$vars$7278$1pJll4 g$exp$7279$1pJll4)
        (list 'case-lambda (list g$vars$7278$1pJll4 g$exp$7279$1pJll4)))))
   (g$build-case-lambda$7245$1pJll4
     g$build-case-lambda$7307$1pJll4
     (case-lambda
       ((g$ae$7280$1pJll4 g$vars*$7281$1pJll4 g$exp*$7282$1pJll4)
        (cons 'case-lambda (map list g$vars*$7281$1pJll4 g$exp*$7282$1pJll4)))))
   (g$build-let$7246$1pJll4
     g$build-let$7308$1pJll4
     (case-lambda
       ((g$ae$7283$1pJll4
          g$lhs*$7284$1pJll4
          g$rhs*$7285$1pJll4
          g$body$7286$1pJll4)
        (cons
          (g$build-lambda$7244$1pJll4
            g$ae$7283$1pJll4
            g$lhs*$7284$1pJll4
            g$body$7286$1pJll4)
          g$rhs*$7285$1pJll4))))
   (g$build-sequence$7271$1pJll4
     g$build-sequence$7309$1pJll4
     (case-lambda
       ((g$ae$7287$1pJll4 g$exps$7288$1pJll4)
        ((letrec ((g$loop$7289$1pJll4
                    (case-lambda
                      ((g$exps$7290$1pJll4)
                       (if (null? (cdr g$exps$7290$1pJll4))
                         (car g$exps$7290$1pJll4)
                         (if (equal?
                               (car g$exps$7290$1pJll4)
                               (g$build-void$7272$1pJll4))
                           (g$loop$7289$1pJll4 (cdr g$exps$7290$1pJll4))
                           (cons 'begin g$exps$7290$1pJll4)))))))
           g$loop$7289$1pJll4)
         g$exps$7288$1pJll4))))
   (g$build-void$7272$1pJll4
     g$build-void$7310$1pJll4
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7273$1pJll4
     g$build-letrec$7311$1pJll4
     (case-lambda
       ((g$ae$7291$1pJll4
          g$vars$7292$1pJll4
          g$val-exps$7293$1pJll4
          g$body-exp$7294$1pJll4)
        (if (null? g$vars$7292$1pJll4)
          g$body-exp$7294$1pJll4
          (list
            'letrec
            (map list g$vars$7292$1pJll4 g$val-exps$7293$1pJll4)
            g$body-exp$7294$1pJll4)))))
   (g$build-letrec*$7274$1pJll4
     g$build-letrec*$7312$1pJll4
     (case-lambda
       ((g$ae$7295$1pJll4
          g$vars$7296$1pJll4
          g$val-exps$7297$1pJll4
          g$body-exp$7298$1pJll4)
        (if (null? g$vars$7296$1pJll4)
          g$body-exp$7298$1pJll4
          (list
            'letrec*
            (map list g$vars$7296$1pJll4 g$val-exps$7297$1pJll4)
            g$body-exp$7298$1pJll4)))))
   (g$build-library-letrec*$7275$1pJll4
     g$build-library-letrec*$7313$1pJll4
     (case-lambda
       ((g$ae$7299$1pJll4
          g$name$7300$1pJll4
          g$vars$7301$1pJll4
          g$locs$7302$1pJll4
          g$val-exps$7303$1pJll4
          g$body-exp$7304$1pJll4)
        (list
          'library-letrec*
          g$name$7300$1pJll4
          (map list
               g$vars$7301$1pJll4
               g$locs$7302$1pJll4
               g$val-exps$7303$1pJll4)
          g$body-exp$7304$1pJll4)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7314$1pJll4
     g$set-cons$10953$1pJll4
     (case-lambda
       ((g$x$7772$1pJll4 g$ls$7773$1pJll4)
        (if (memq g$x$7772$1pJll4 g$ls$7773$1pJll4)
          g$ls$7773$1pJll4
          (cons g$x$7772$1pJll4 g$ls$7773$1pJll4)))))
   (g$set-union$7315$1pJll4
     g$set-union$10954$1pJll4
     (case-lambda
       ((g$ls1$7774$1pJll4 g$ls2$7775$1pJll4)
        (if (null? g$ls1$7774$1pJll4)
          g$ls2$7775$1pJll4
          (if (memq (car g$ls1$7774$1pJll4) g$ls2$7775$1pJll4)
            (g$set-union$7315$1pJll4 (cdr g$ls1$7774$1pJll4) g$ls2$7775$1pJll4)
            (cons
              (car g$ls1$7774$1pJll4)
              (g$set-union$7315$1pJll4
                (cdr g$ls1$7774$1pJll4)
                g$ls2$7775$1pJll4)))))))
   (g$top-mark*$7317$1pJll4 g$top-mark*$10955$1pJll4 '(top))
   (g$top-marked?$7318$1pJll4
     g$top-marked?$10956$1pJll4
     (case-lambda ((g$m*$7776$1pJll4) (memq 'top g$m*$7776$1pJll4))))
   (g$gen-lexical$7319$1pJll4
     g$gen-lexical$10957$1pJll4
     (case-lambda
       ((g$sym$7777$1pJll4)
        (if (symbol? g$sym$7777$1pJll4)
          (gensym g$sym$7777$1pJll4)
          (if (g$stx?$7347$1pJll4 g$sym$7777$1pJll4)
            (g$gen-lexical$7319$1pJll4
              (g$id->sym$7376$1pJll4 g$sym$7777$1pJll4))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7777$1pJll4))))))
   (g$gen-global$7320$1pJll4
     g$gen-global$10958$1pJll4
     (case-lambda
       ((g$x$7778$1pJll4) (g$gen-lexical$7319$1pJll4 g$x$7778$1pJll4))))
   (g$gen-label$7321$1pJll4
     g$gen-label$10959$1pJll4
     (case-lambda ((g$_$7779$1pJll4) (gensym))))
   (g$gen-top-level-label$7322$1pJll4
     g$gen-top-level-label$10960$1pJll4
     (case-lambda
       ((g$id$7780$1pJll4 g$rib$7781$1pJll4)
        (letrec* ((g$find$7782$1pJll4
                    (case-lambda
                      ((g$sym$7788$1pJll4
                         g$mark*$7789$1pJll4
                         g$sym*$7790$1pJll4
                         g$mark**$7791$1pJll4
                         g$label*$7792$1pJll4)
                       (if (pair? g$sym*$7790$1pJll4)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7788$1pJll4
                                        (car g$sym*$7790$1pJll4))
                                 (begin
                                   '#f
                                   (g$same-marks?$7377$1pJll4
                                     g$mark*$7789$1pJll4
                                     (car g$mark**$7791$1pJll4)))
                                 '#f)
                             (car g$label*$7792$1pJll4)
                             (g$find$7782$1pJll4
                               g$sym$7788$1pJll4
                               g$mark*$7789$1pJll4
                               (cdr g$sym*$7790$1pJll4)
                               (cdr g$mark**$7791$1pJll4)
                               (cdr g$label*$7792$1pJll4))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7783$1pJll4 g$mark*$7784$1pJll4)
              ((case-lambda
                 ((g$sym*$7785$1pJll4)
                  ((case-lambda
                     ((g$t$7786$1pJll4)
                      (if g$t$7786$1pJll4
                        ((case-lambda
                           ((g$label$7787$1pJll4)
                            (if (g$imported-label->binding$7189$1pJll4
                                  g$label$7787$1pJll4)
                              (gensym)
                              g$label$7787$1pJll4)))
                         g$t$7786$1pJll4)
                        (gensym))))
                   (if (memq
                         g$sym$7783$1pJll4
                         (g$rib-sym*$7330$1pJll4 g$rib$7781$1pJll4))
                     (begin
                       '#f
                       (g$find$7782$1pJll4
                         g$sym$7783$1pJll4
                         g$mark*$7784$1pJll4
                         g$sym*$7785$1pJll4
                         (g$rib-mark**$7331$1pJll4 g$rib$7781$1pJll4)
                         (g$rib-label*$7332$1pJll4 g$rib$7781$1pJll4)))
                     '#f))))
               (g$rib-sym*$7330$1pJll4 g$rib$7781$1pJll4))))
           (g$id->sym$7376$1pJll4 g$id$7780$1pJll4)
           (g$stx-mark*$7350$1pJll4 g$id$7780$1pJll4))))))
   (g$gen-define-label+loc$7323$1pJll4
     g$gen-define-label+loc$10961$1pJll4
     (case-lambda
       ((g$id$7793$1pJll4 g$rib$7794$1pJll4)
        ((case-lambda
           ((g$t$7795$1pJll4)
            (if g$t$7795$1pJll4
              ((case-lambda
                 ((g$env$7796$1pJll4)
                  ((case-lambda
                     ((g$label$7797$1pJll4 g$locs$7798$1pJll4)
                      (values
                        g$label$7797$1pJll4
                        ((case-lambda
                           ((g$t$7799$1pJll4)
                            (if g$t$7799$1pJll4
                              (cdr g$t$7799$1pJll4)
                              ((case-lambda
                                 ((g$loc$7800$1pJll4)
                                  (begin
                                    (g$set-interaction-env-locs!$7736$1pJll4
                                      g$env$7796$1pJll4
                                      (cons
                                        (cons
                                          g$label$7797$1pJll4
                                          g$loc$7800$1pJll4)
                                        g$locs$7798$1pJll4))
                                    g$loc$7800$1pJll4)))
                               (g$gen-lexical$7319$1pJll4 g$id$7793$1pJll4)))))
                         (assq g$label$7797$1pJll4 g$locs$7798$1pJll4)))))
                   (g$gen-top-level-label$7322$1pJll4
                     g$id$7793$1pJll4
                     g$rib$7794$1pJll4)
                   (g$interaction-env-locs$7733$1pJll4 g$env$7796$1pJll4))))
               g$t$7795$1pJll4)
              (values (gensym) (g$gen-lexical$7319$1pJll4 g$id$7793$1pJll4)))))
         (g$top-level-context$7771$1pJll4)))))
   (g$gen-define-label$7324$1pJll4
     g$gen-define-label$10962$1pJll4
     (case-lambda
       ((g$id$7801$1pJll4 g$rib$7802$1pJll4)
        (if (g$top-level-context$7771$1pJll4)
          (g$gen-top-level-label$7322$1pJll4 g$id$7801$1pJll4 g$rib$7802$1pJll4)
          (gensym)))))
   (g$8470$7325$1pJll4
     g$8470$10963$1pJll4
     (make-record-type-descriptor
       'rib
       '#f
       'g$8473$1pJll4
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8472$7326$1pJll4 g$8472$10964$1pJll4 '#f)
   (g$8471$7327$1pJll4
     g$8471$10965$1pJll4
     (make-record-constructor-descriptor
       g$8470$7325$1pJll4
       '#f
       g$8472$7326$1pJll4))
   (g$rib?$7328$1pJll4
     g$rib?$10966$1pJll4
     (record-predicate g$8470$7325$1pJll4))
   (g$make-rib$7329$1pJll4
     g$make-rib$10967$1pJll4
     (record-constructor g$8471$7327$1pJll4))
   (g$rib-sym*$7330$1pJll4
     g$rib-sym*$10968$1pJll4
     (record-accessor g$8470$7325$1pJll4 '0))
   (g$rib-mark**$7331$1pJll4
     g$rib-mark**$10969$1pJll4
     (record-accessor g$8470$7325$1pJll4 '1))
   (g$rib-label*$7332$1pJll4
     g$rib-label*$10970$1pJll4
     (record-accessor g$8470$7325$1pJll4 '2))
   (g$rib-sealed/freq$7333$1pJll4
     g$rib-sealed/freq$10971$1pJll4
     (record-accessor g$8470$7325$1pJll4 '3))
   (g$set-rib-sym*!$7334$1pJll4
     g$set-rib-sym*!$10972$1pJll4
     (record-mutator g$8470$7325$1pJll4 '0))
   (g$set-rib-mark**!$7335$1pJll4
     g$set-rib-mark**!$10973$1pJll4
     (record-mutator g$8470$7325$1pJll4 '1))
   (g$set-rib-label*!$7336$1pJll4
     g$set-rib-label*!$10974$1pJll4
     (record-mutator g$8470$7325$1pJll4 '2))
   (g$set-rib-sealed/freq!$7337$1pJll4
     g$set-rib-sealed/freq!$10975$1pJll4
     (record-mutator g$8470$7325$1pJll4 '3))
   (g$make-empty-rib$7338$1pJll4
     g$make-empty-rib$10976$1pJll4
     (case-lambda (() (g$make-rib$7329$1pJll4 '() '() '() '#f))))
   (g$extend-rib!$7339$1pJll4
     g$extend-rib!$10977$1pJll4
     (case-lambda
       ((g$rib$7803$1pJll4 g$id$7804$1pJll4 g$label$7805$1pJll4)
        (letrec* ((g$find$7806$1pJll4
                    (case-lambda
                      ((g$sym$7812$1pJll4
                         g$mark*$7813$1pJll4
                         g$sym*$7814$1pJll4
                         g$mark**$7815$1pJll4
                         g$label*$7816$1pJll4)
                       (if (pair? g$sym*$7814$1pJll4)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7812$1pJll4
                                        (car g$sym*$7814$1pJll4))
                                 (begin
                                   '#f
                                   (g$same-marks?$7377$1pJll4
                                     g$mark*$7813$1pJll4
                                     (car g$mark**$7815$1pJll4)))
                                 '#f)
                             g$label*$7816$1pJll4
                             (g$find$7806$1pJll4
                               g$sym$7812$1pJll4
                               g$mark*$7813$1pJll4
                               (cdr g$sym*$7814$1pJll4)
                               (cdr g$mark**$7815$1pJll4)
                               (cdr g$label*$7816$1pJll4))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7333$1pJll4 g$rib$7803$1pJll4)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7803$1pJll4)
              (void))
            ((case-lambda
               ((g$sym$7807$1pJll4 g$mark*$7808$1pJll4)
                ((case-lambda
                   ((g$sym*$7809$1pJll4)
                    ((case-lambda
                       ((g$t$7810$1pJll4)
                        (if g$t$7810$1pJll4
                          ((case-lambda
                             ((g$p$7811$1pJll4)
                              (if (not (eq? g$label$7805$1pJll4
                                            (car g$p$7811$1pJll4)))
                                (if (g$top-level-context$7771$1pJll4)
                                  (set-car! g$p$7811$1pJll4 g$label$7805$1pJll4)
                                  (g$syntax-violation$7764$1pJll4
                                    '#f
                                    '"cannot redefine"
                                    g$id$7804$1pJll4))
                                (void))))
                           g$t$7810$1pJll4)
                          (begin
                            (g$set-rib-sym*!$7334$1pJll4
                              g$rib$7803$1pJll4
                              (cons g$sym$7807$1pJll4 g$sym*$7809$1pJll4))
                            (g$set-rib-mark**!$7335$1pJll4
                              g$rib$7803$1pJll4
                              (cons
                                g$mark*$7808$1pJll4
                                (g$rib-mark**$7331$1pJll4 g$rib$7803$1pJll4)))
                            (g$set-rib-label*!$7336$1pJll4
                              g$rib$7803$1pJll4
                              (cons
                                g$label$7805$1pJll4
                                (g$rib-label*$7332$1pJll4
                                  g$rib$7803$1pJll4)))))))
                     (if (memq
                           g$sym$7807$1pJll4
                           (g$rib-sym*$7330$1pJll4 g$rib$7803$1pJll4))
                       (begin
                         '#f
                         (g$find$7806$1pJll4
                           g$sym$7807$1pJll4
                           g$mark*$7808$1pJll4
                           g$sym*$7809$1pJll4
                           (g$rib-mark**$7331$1pJll4 g$rib$7803$1pJll4)
                           (g$rib-label*$7332$1pJll4 g$rib$7803$1pJll4)))
                       '#f))))
                 (g$rib-sym*$7330$1pJll4 g$rib$7803$1pJll4))))
             (g$id->sym$7376$1pJll4 g$id$7804$1pJll4)
             (g$stx-mark*$7350$1pJll4 g$id$7804$1pJll4)))))))
   (g$make-rib-map$7340$1pJll4
     g$make-rib-map$10978$1pJll4
     (case-lambda
       ((g$sym*$7817$1pJll4)
        ((case-lambda
           ((g$ht$7818$1pJll4)
            ((letrec ((g$f$7819$1pJll4
                        (case-lambda
                          ((g$i$7820$1pJll4 g$sym*$7821$1pJll4)
                           (if (null? g$sym*$7821$1pJll4)
                             g$ht$7818$1pJll4
                             (begin
                               (g$hashtable-update!$5303$1pJll4
                                 g$ht$7818$1pJll4
                                 (car g$sym*$7821$1pJll4)
                                 (case-lambda
                                   ((g$x$7822$1pJll4)
                                    (cons g$i$7820$1pJll4 g$x$7822$1pJll4)))
                                 '())
                               (g$f$7819$1pJll4
                                 (+ g$i$7820$1pJll4 '1)
                                 (cdr g$sym*$7821$1pJll4))))))))
               g$f$7819$1pJll4)
             '0
             g$sym*$7817$1pJll4)))
         (g$make-eq-hashtable$5296$1pJll4)))))
   (g$seal-rib!$7341$1pJll4
     g$seal-rib!$10979$1pJll4
     (case-lambda
       ((g$rib$7823$1pJll4)
        ((case-lambda
           ((g$sym*$7824$1pJll4)
            (if (not (null? g$sym*$7824$1pJll4))
              (begin
                (g$set-rib-sym*!$7334$1pJll4
                  g$rib$7823$1pJll4
                  (list->vector g$sym*$7824$1pJll4))
                (g$set-rib-mark**!$7335$1pJll4
                  g$rib$7823$1pJll4
                  (list->vector (g$rib-mark**$7331$1pJll4 g$rib$7823$1pJll4)))
                (g$set-rib-label*!$7336$1pJll4
                  g$rib$7823$1pJll4
                  (list->vector (g$rib-label*$7332$1pJll4 g$rib$7823$1pJll4)))
                (g$set-rib-sealed/freq!$7337$1pJll4
                  g$rib$7823$1pJll4
                  (g$make-rib-map$7340$1pJll4 g$sym*$7824$1pJll4)))
              (void))))
         (g$rib-sym*$7330$1pJll4 g$rib$7823$1pJll4)))))
   (g$unseal-rib!$7342$1pJll4
     g$unseal-rib!$10980$1pJll4
     (case-lambda
       ((g$rib$7825$1pJll4)
        (if (g$rib-sealed/freq$7333$1pJll4 g$rib$7825$1pJll4)
          (begin
            (g$set-rib-sealed/freq!$7337$1pJll4 g$rib$7825$1pJll4 '#f)
            (g$set-rib-sym*!$7334$1pJll4
              g$rib$7825$1pJll4
              (vector->list (g$rib-sym*$7330$1pJll4 g$rib$7825$1pJll4)))
            (g$set-rib-mark**!$7335$1pJll4
              g$rib$7825$1pJll4
              (vector->list (g$rib-mark**$7331$1pJll4 g$rib$7825$1pJll4)))
            (g$set-rib-label*!$7336$1pJll4
              g$rib$7825$1pJll4
              (vector->list (g$rib-label*$7332$1pJll4 g$rib$7825$1pJll4))))
          (void)))))
   (g$make-full-rib$7343$1pJll4
     g$make-full-rib$10981$1pJll4
     (case-lambda
       ((g$id*$7826$1pJll4 g$label*$7827$1pJll4)
        ((case-lambda
           ((g$r$7828$1pJll4)
            (begin (g$seal-rib!$7341$1pJll4 g$r$7828$1pJll4) g$r$7828$1pJll4)))
         (g$make-rib$7329$1pJll4
           (map g$id->sym$7376$1pJll4 g$id*$7826$1pJll4)
           (map g$stx-mark*$7350$1pJll4 g$id*$7826$1pJll4)
           g$label*$7827$1pJll4
           '#f)))))
   (g$8496$7344$1pJll4
     g$8496$10982$1pJll4
     (make-record-type-descriptor
       'stx
       '#f
       'g$8499$1pJll4
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8498$7345$1pJll4 g$8498$10983$1pJll4 '#f)
   (g$8497$7346$1pJll4
     g$8497$10984$1pJll4
     (make-record-constructor-descriptor
       g$8496$7344$1pJll4
       '#f
       g$8498$7345$1pJll4))
   (g$stx?$7347$1pJll4
     g$stx?$10985$1pJll4
     (record-predicate g$8496$7344$1pJll4))
   (g$make-stx$7348$1pJll4
     g$make-stx$10986$1pJll4
     (record-constructor g$8497$7346$1pJll4))
   (g$stx-expr$7349$1pJll4
     g$stx-expr$10987$1pJll4
     (record-accessor g$8496$7344$1pJll4 '0))
   (g$stx-mark*$7350$1pJll4
     g$stx-mark*$10988$1pJll4
     (record-accessor g$8496$7344$1pJll4 '1))
   (g$stx-subst*$7351$1pJll4
     g$stx-subst*$10989$1pJll4
     (record-accessor g$8496$7344$1pJll4 '2))
   (g$stx-ae*$7352$1pJll4
     g$stx-ae*$10990$1pJll4
     (record-accessor g$8496$7344$1pJll4 '3))
   (g$set-stx-expr!$7353$1pJll4
     g$set-stx-expr!$10991$1pJll4
     (record-mutator g$8496$7344$1pJll4 '0))
   (g$set-stx-mark*!$7354$1pJll4
     g$set-stx-mark*!$10992$1pJll4
     (record-mutator g$8496$7344$1pJll4 '1))
   (g$set-stx-subst*!$7355$1pJll4
     g$set-stx-subst*!$10993$1pJll4
     (record-mutator g$8496$7344$1pJll4 '2))
   (g$set-stx-ae*!$7356$1pJll4
     g$set-stx-ae*!$10994$1pJll4
     (record-mutator g$8496$7344$1pJll4 '3))
   (g$rp$7357$1pJll4
     g$rp$10995$1pJll4
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7829$1pJll4 g$p$7830$1pJll4)
          (begin
            (display '"#<syntax " g$p$7830$1pJll4)
            (write (g$stx->datum$7386$1pJll4 g$x$7829$1pJll4) g$p$7830$1pJll4)
            ((case-lambda
               ((g$expr$7831$1pJll4)
                (if (annotation? g$expr$7831$1pJll4)
                  ((case-lambda
                     ((g$src$7832$1pJll4)
                      (if (pair? g$src$7832$1pJll4)
                        (begin
                          (display '" [" g$p$7830$1pJll4)
                          (display (cdr g$src$7832$1pJll4) g$p$7830$1pJll4)
                          (display '" of " g$p$7830$1pJll4)
                          (display (car g$src$7832$1pJll4) g$p$7830$1pJll4)
                          (display '"]" g$p$7830$1pJll4))
                        (void))))
                   (annotation-source g$expr$7831$1pJll4))
                  (void))))
             (g$stx-expr$7349$1pJll4 g$x$7829$1pJll4))
            (display '">" g$p$7830$1pJll4))))))
   (g$datum->stx$7358$1pJll4
     g$datum->stx$10996$1pJll4
     (case-lambda
       ((g$id$7833$1pJll4 g$datum$7834$1pJll4)
        (g$make-stx$7348$1pJll4
          g$datum$7834$1pJll4
          (g$stx-mark*$7350$1pJll4 g$id$7833$1pJll4)
          (g$stx-subst*$7351$1pJll4 g$id$7833$1pJll4)
          (g$stx-ae*$7352$1pJll4 g$id$7833$1pJll4)))))
   (g$gen-mark$7359$1pJll4
     g$gen-mark$10997$1pJll4
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7360$1pJll4 g$anti-mark$10998$1pJll4 '#f)
   (g$anti-mark?$7361$1pJll4 g$anti-mark?$10999$1pJll4 not)
   (g$join-wraps$7362$1pJll4
     g$join-wraps$11000$1pJll4
     (case-lambda
       ((g$m1*$7835$1pJll4
          g$s1*$7836$1pJll4
          g$ae1*$7837$1pJll4
          g$e$7838$1pJll4)
        (letrec* ((g$cancel$7839$1pJll4
                    (case-lambda
                      ((g$ls1$7843$1pJll4 g$ls2$7844$1pJll4)
                       ((letrec ((g$f$7845$1pJll4
                                   (case-lambda
                                     ((g$x$7846$1pJll4 g$ls1$7847$1pJll4)
                                      (if (null? g$ls1$7847$1pJll4)
                                        (cdr g$ls2$7844$1pJll4)
                                        (cons
                                          g$x$7846$1pJll4
                                          (g$f$7845$1pJll4
                                            (car g$ls1$7847$1pJll4)
                                            (cdr g$ls1$7847$1pJll4))))))))
                          g$f$7845$1pJll4)
                        (car g$ls1$7843$1pJll4)
                        (cdr g$ls1$7843$1pJll4))))))
          ((case-lambda
             ((g$m2*$7840$1pJll4 g$s2*$7841$1pJll4 g$ae2*$7842$1pJll4)
              (if (if (not (null? g$m1*$7835$1pJll4))
                    (if (not (null? g$m2*$7840$1pJll4))
                      (begin
                        '#f
                        (g$anti-mark?$7361$1pJll4 (car g$m2*$7840$1pJll4)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7839$1pJll4 g$m1*$7835$1pJll4 g$m2*$7840$1pJll4)
                  (g$cancel$7839$1pJll4 g$s1*$7836$1pJll4 g$s2*$7841$1pJll4)
                  (g$cancel$7839$1pJll4 g$ae1*$7837$1pJll4 g$ae2*$7842$1pJll4))
                (values
                  (append g$m1*$7835$1pJll4 g$m2*$7840$1pJll4)
                  (append g$s1*$7836$1pJll4 g$s2*$7841$1pJll4)
                  (append g$ae1*$7837$1pJll4 g$ae2*$7842$1pJll4)))))
           (g$stx-mark*$7350$1pJll4 g$e$7838$1pJll4)
           (g$stx-subst*$7351$1pJll4 g$e$7838$1pJll4)
           (g$stx-ae*$7352$1pJll4 g$e$7838$1pJll4))))))
   (g$mkstx$7363$1pJll4
     g$mkstx$11001$1pJll4
     (case-lambda
       ((g$e$7848$1pJll4 g$m*$7849$1pJll4 g$s*$7850$1pJll4 g$ae*$7851$1pJll4)
        (if (if (g$stx?$7347$1pJll4 g$e$7848$1pJll4)
              (begin '#f (not (g$top-marked?$7318$1pJll4 g$m*$7849$1pJll4)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7362$1pJll4
                 g$m*$7849$1pJll4
                 g$s*$7850$1pJll4
                 g$ae*$7851$1pJll4
                 g$e$7848$1pJll4)))
            (case-lambda
              ((g$m*$7855$1pJll4 g$s*$7856$1pJll4 g$ae*$7857$1pJll4)
               ((case-lambda
                  ((g$ae*$7858$1pJll4 g$s*$7859$1pJll4 g$m*$7860$1pJll4)
                   (g$make-stx$7348$1pJll4
                     (g$stx-expr$7349$1pJll4 g$e$7848$1pJll4)
                     g$m*$7860$1pJll4
                     g$s*$7859$1pJll4
                     g$ae*$7858$1pJll4)))
                g$ae*$7857$1pJll4
                g$s*$7856$1pJll4
                g$m*$7855$1pJll4))))
          (g$make-stx$7348$1pJll4
            g$e$7848$1pJll4
            g$m*$7849$1pJll4
            g$s*$7850$1pJll4
            g$ae*$7851$1pJll4)))))
   (g$add-mark$7364$1pJll4
     g$add-mark$11002$1pJll4
     (case-lambda
       ((g$m$7861$1pJll4 g$e$7862$1pJll4 g$ae$7863$1pJll4)
        (g$mkstx$7363$1pJll4
          g$e$7862$1pJll4
          (list g$m$7861$1pJll4)
          '(shift)
          (list g$ae$7863$1pJll4)))))
   (g$add-subst$7365$1pJll4
     g$add-subst$11003$1pJll4
     (case-lambda
       ((g$subst$7864$1pJll4 g$e$7865$1pJll4)
        (g$mkstx$7363$1pJll4
          g$e$7865$1pJll4
          '()
          (list g$subst$7864$1pJll4)
          '()))))
   (g$syntax-kind?$7366$1pJll4
     g$syntax-kind?$11004$1pJll4
     (case-lambda
       ((g$x$7866$1pJll4 g$p?$7867$1pJll4)
        (if (g$stx?$7347$1pJll4 g$x$7866$1pJll4)
          (g$syntax-kind?$7366$1pJll4
            (g$stx-expr$7349$1pJll4 g$x$7866$1pJll4)
            g$p?$7867$1pJll4)
          (if (annotation? g$x$7866$1pJll4)
            (g$syntax-kind?$7366$1pJll4
              (annotation-expression g$x$7866$1pJll4)
              g$p?$7867$1pJll4)
            (g$p?$7867$1pJll4 g$x$7866$1pJll4))))))
   (g$syntax-vector->list$7367$1pJll4
     g$syntax-vector->list$11005$1pJll4
     (case-lambda
       ((g$x$7868$1pJll4)
        (if (g$stx?$7347$1pJll4 g$x$7868$1pJll4)
          ((case-lambda
             ((g$ls$7869$1pJll4
                g$m*$7870$1pJll4
                g$s*$7871$1pJll4
                g$ae*$7872$1pJll4)
              (map (case-lambda
                     ((g$x$7873$1pJll4)
                      (g$mkstx$7363$1pJll4
                        g$x$7873$1pJll4
                        g$m*$7870$1pJll4
                        g$s*$7871$1pJll4
                        g$ae*$7872$1pJll4)))
                   g$ls$7869$1pJll4)))
           (g$syntax-vector->list$7367$1pJll4
             (g$stx-expr$7349$1pJll4 g$x$7868$1pJll4))
           (g$stx-mark*$7350$1pJll4 g$x$7868$1pJll4)
           (g$stx-subst*$7351$1pJll4 g$x$7868$1pJll4)
           (g$stx-ae*$7352$1pJll4 g$x$7868$1pJll4))
          (if (annotation? g$x$7868$1pJll4)
            (g$syntax-vector->list$7367$1pJll4
              (annotation-expression g$x$7868$1pJll4))
            (if (vector? g$x$7868$1pJll4)
              (vector->list g$x$7868$1pJll4)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7868$1pJll4)))))))
   (g$syntax-pair?$7368$1pJll4
     g$syntax-pair?$11006$1pJll4
     (case-lambda
       ((g$x$7874$1pJll4) (g$syntax-kind?$7366$1pJll4 g$x$7874$1pJll4 pair?))))
   (g$syntax-vector?$7369$1pJll4
     g$syntax-vector?$11007$1pJll4
     (case-lambda
       ((g$x$7875$1pJll4)
        (g$syntax-kind?$7366$1pJll4 g$x$7875$1pJll4 vector?))))
   (g$syntax-null?$7370$1pJll4
     g$syntax-null?$11008$1pJll4
     (case-lambda
       ((g$x$7876$1pJll4) (g$syntax-kind?$7366$1pJll4 g$x$7876$1pJll4 null?))))
   (g$syntax-list?$7371$1pJll4
     g$syntax-list?$11009$1pJll4
     (case-lambda
       ((g$x$7877$1pJll4)
        ((case-lambda
           ((g$t$7878$1pJll4)
            (if g$t$7878$1pJll4
              g$t$7878$1pJll4
              (begin
                '#f
                (if (g$syntax-pair?$7368$1pJll4 g$x$7877$1pJll4)
                  (begin
                    '#f
                    (g$syntax-list?$7371$1pJll4
                      (g$syntax-cdr$7373$1pJll4 g$x$7877$1pJll4)))
                  '#f)))))
         (g$syntax-null?$7370$1pJll4 g$x$7877$1pJll4)))))
   (g$syntax-car$7372$1pJll4
     g$syntax-car$11010$1pJll4
     (case-lambda
       ((g$x$7879$1pJll4)
        (if (g$stx?$7347$1pJll4 g$x$7879$1pJll4)
          (g$mkstx$7363$1pJll4
            (g$syntax-car$7372$1pJll4 (g$stx-expr$7349$1pJll4 g$x$7879$1pJll4))
            (g$stx-mark*$7350$1pJll4 g$x$7879$1pJll4)
            (g$stx-subst*$7351$1pJll4 g$x$7879$1pJll4)
            (g$stx-ae*$7352$1pJll4 g$x$7879$1pJll4))
          (if (annotation? g$x$7879$1pJll4)
            (g$syntax-car$7372$1pJll4 (annotation-expression g$x$7879$1pJll4))
            (if (pair? g$x$7879$1pJll4)
              (car g$x$7879$1pJll4)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7879$1pJll4)))))))
   (g$syntax-cdr$7373$1pJll4
     g$syntax-cdr$11011$1pJll4
     (case-lambda
       ((g$x$7880$1pJll4)
        (if (g$stx?$7347$1pJll4 g$x$7880$1pJll4)
          (g$mkstx$7363$1pJll4
            (g$syntax-cdr$7373$1pJll4 (g$stx-expr$7349$1pJll4 g$x$7880$1pJll4))
            (g$stx-mark*$7350$1pJll4 g$x$7880$1pJll4)
            (g$stx-subst*$7351$1pJll4 g$x$7880$1pJll4)
            (g$stx-ae*$7352$1pJll4 g$x$7880$1pJll4))
          (if (annotation? g$x$7880$1pJll4)
            (g$syntax-cdr$7373$1pJll4 (annotation-expression g$x$7880$1pJll4))
            (if (pair? g$x$7880$1pJll4)
              (cdr g$x$7880$1pJll4)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7880$1pJll4)))))))
   (g$syntax->list$7374$1pJll4
     g$syntax->list$11012$1pJll4
     (case-lambda
       ((g$x$7881$1pJll4)
        (if (g$syntax-pair?$7368$1pJll4 g$x$7881$1pJll4)
          (cons
            (g$syntax-car$7372$1pJll4 g$x$7881$1pJll4)
            (g$syntax->list$7374$1pJll4
              (g$syntax-cdr$7373$1pJll4 g$x$7881$1pJll4)))
          (if (g$syntax-null?$7370$1pJll4 g$x$7881$1pJll4)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7881$1pJll4))))))
   (g$id?$7375$1pJll4
     g$id?$11013$1pJll4
     (case-lambda
       ((g$x$7882$1pJll4)
        (if (g$stx?$7347$1pJll4 g$x$7882$1pJll4)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7883$1pJll4)
                (symbol?
                  (if (annotation? g$expr$7883$1pJll4)
                    (annotation-stripped g$expr$7883$1pJll4)
                    g$expr$7883$1pJll4))))
             (g$stx-expr$7349$1pJll4 g$x$7882$1pJll4)))
          '#f))))
   (g$id->sym$7376$1pJll4
     g$id->sym$11014$1pJll4
     (case-lambda
       ((g$x$7884$1pJll4)
        (begin
          (if (not (g$stx?$7347$1pJll4 g$x$7884$1pJll4))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7884$1pJll4)
            (void))
          ((case-lambda
             ((g$expr$7885$1pJll4)
              ((case-lambda
                 ((g$sym$7886$1pJll4)
                  (if (symbol? g$sym$7886$1pJll4)
                    g$sym$7886$1pJll4
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7884$1pJll4))))
               (if (annotation? g$expr$7885$1pJll4)
                 (annotation-stripped g$expr$7885$1pJll4)
                 g$expr$7885$1pJll4))))
           (g$stx-expr$7349$1pJll4 g$x$7884$1pJll4))))))
   (g$same-marks?$7377$1pJll4
     g$same-marks?$11015$1pJll4
     (case-lambda
       ((g$x$7887$1pJll4 g$y$7888$1pJll4)
        ((case-lambda
           ((g$t$7889$1pJll4)
            (if g$t$7889$1pJll4
              g$t$7889$1pJll4
              (begin
                '#f
                (if (pair? g$x$7887$1pJll4)
                  (if (pair? g$y$7888$1pJll4)
                    (if (eq? (car g$x$7887$1pJll4) (car g$y$7888$1pJll4))
                      (begin
                        '#f
                        (g$same-marks?$7377$1pJll4
                          (cdr g$x$7887$1pJll4)
                          (cdr g$y$7888$1pJll4)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7887$1pJll4)
           (begin '#f (null? g$y$7888$1pJll4))
           '#f)))))
   (g$bound-id=?$7378$1pJll4
     g$bound-id=?$11016$1pJll4
     (case-lambda
       ((g$x$7890$1pJll4 g$y$7891$1pJll4)
        (if (eq? (g$id->sym$7376$1pJll4 g$x$7890$1pJll4)
                 (g$id->sym$7376$1pJll4 g$y$7891$1pJll4))
          (begin
            '#f
            (g$same-marks?$7377$1pJll4
              (g$stx-mark*$7350$1pJll4 g$x$7890$1pJll4)
              (g$stx-mark*$7350$1pJll4 g$y$7891$1pJll4)))
          '#f))))
   (g$free-id=?$7379$1pJll4
     g$free-id=?$11017$1pJll4
     (case-lambda
       ((g$i$7892$1pJll4 g$j$7893$1pJll4)
        ((case-lambda
           ((g$t0$7894$1pJll4 g$t1$7895$1pJll4)
            (if ((case-lambda
                   ((g$t$7896$1pJll4)
                    (if g$t$7896$1pJll4
                      g$t$7896$1pJll4
                      (begin '#f g$t1$7895$1pJll4))))
                 g$t0$7894$1pJll4)
              (eq? g$t0$7894$1pJll4 g$t1$7895$1pJll4)
              (eq? (g$id->sym$7376$1pJll4 g$i$7892$1pJll4)
                   (g$id->sym$7376$1pJll4 g$j$7893$1pJll4)))))
         (g$id->real-label$7389$1pJll4 g$i$7892$1pJll4)
         (g$id->real-label$7389$1pJll4 g$j$7893$1pJll4)))))
   (g$valid-bound-ids?$7380$1pJll4
     g$valid-bound-ids?$11018$1pJll4
     (case-lambda
       ((g$id*$7897$1pJll4)
        (if (g$for-all$5503$1pJll4 g$id?$7375$1pJll4 g$id*$7897$1pJll4)
          (begin '#f (g$distinct-bound-ids?$7381$1pJll4 g$id*$7897$1pJll4))
          '#f))))
   (g$distinct-bound-ids?$7381$1pJll4
     g$distinct-bound-ids?$11019$1pJll4
     (case-lambda
       ((g$id*$7898$1pJll4)
        ((case-lambda
           ((g$t$7899$1pJll4)
            (if g$t$7899$1pJll4
              g$t$7899$1pJll4
              (begin
                '#f
                (if (not (g$bound-id-member?$7382$1pJll4
                           (car g$id*$7898$1pJll4)
                           (cdr g$id*$7898$1pJll4)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7381$1pJll4 (cdr g$id*$7898$1pJll4)))
                  '#f)))))
         (null? g$id*$7898$1pJll4)))))
   (g$bound-id-member?$7382$1pJll4
     g$bound-id-member?$11020$1pJll4
     (case-lambda
       ((g$id$7900$1pJll4 g$id*$7901$1pJll4)
        (if (pair? g$id*$7901$1pJll4)
          (begin
            '#f
            ((case-lambda
               ((g$t$7902$1pJll4)
                (if g$t$7902$1pJll4
                  g$t$7902$1pJll4
                  (begin
                    '#f
                    (g$bound-id-member?$7382$1pJll4
                      g$id$7900$1pJll4
                      (cdr g$id*$7901$1pJll4))))))
             (g$bound-id=?$7378$1pJll4
               g$id$7900$1pJll4
               (car g$id*$7901$1pJll4))))
          '#f))))
   (g$self-evaluating?$7383$1pJll4
     g$self-evaluating?$11021$1pJll4
     (case-lambda
       ((g$x$7903$1pJll4)
        ((case-lambda
           ((g$t$7904$1pJll4)
            (if g$t$7904$1pJll4
              g$t$7904$1pJll4
              ((case-lambda
                 ((g$t$7905$1pJll4)
                  (if g$t$7905$1pJll4
                    g$t$7905$1pJll4
                    ((case-lambda
                       ((g$t$7906$1pJll4)
                        (if g$t$7906$1pJll4
                          g$t$7906$1pJll4
                          ((case-lambda
                             ((g$t$7907$1pJll4)
                              (if g$t$7907$1pJll4
                                g$t$7907$1pJll4
                                (begin '#f (bytevector? g$x$7903$1pJll4)))))
                           (boolean? g$x$7903$1pJll4)))))
                     (char? g$x$7903$1pJll4)))))
               (string? g$x$7903$1pJll4)))))
         (number? g$x$7903$1pJll4)))))
   (g$strip-annotations$7384$1pJll4
     g$strip-annotations$11022$1pJll4
     (case-lambda
       ((g$x$7908$1pJll4)
        (if (pair? g$x$7908$1pJll4)
          (cons
            (g$strip-annotations$7384$1pJll4 (car g$x$7908$1pJll4))
            (g$strip-annotations$7384$1pJll4 (cdr g$x$7908$1pJll4)))
          (if (vector? g$x$7908$1pJll4)
            (vector-map g$strip-annotations$7384$1pJll4 g$x$7908$1pJll4)
            (if (annotation? g$x$7908$1pJll4)
              (annotation-stripped g$x$7908$1pJll4)
              g$x$7908$1pJll4))))))
   (g$strip$7385$1pJll4
     g$strip$11023$1pJll4
     (case-lambda
       ((g$x$7909$1pJll4 g$m*$7910$1pJll4)
        (if (g$top-marked?$7318$1pJll4 g$m*$7910$1pJll4)
          (if ((case-lambda
                 ((g$t$7911$1pJll4)
                  (if g$t$7911$1pJll4
                    g$t$7911$1pJll4
                    ((case-lambda
                       ((g$t$7912$1pJll4)
                        (if g$t$7912$1pJll4
                          g$t$7912$1pJll4
                          (begin
                            '#f
                            (if (vector? g$x$7909$1pJll4)
                              (if (> (vector-length g$x$7909$1pJll4) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7909$1pJll4 '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7909$1pJll4)
                       (begin '#f (annotation? (car g$x$7909$1pJll4)))
                       '#f)))))
               (annotation? g$x$7909$1pJll4))
            (g$strip-annotations$7384$1pJll4 g$x$7909$1pJll4)
            g$x$7909$1pJll4)
          ((letrec ((g$f$7913$1pJll4
                      (case-lambda
                        ((g$x$7914$1pJll4)
                         (if (g$stx?$7347$1pJll4 g$x$7914$1pJll4)
                           (g$strip$7385$1pJll4
                             (g$stx-expr$7349$1pJll4 g$x$7914$1pJll4)
                             (g$stx-mark*$7350$1pJll4 g$x$7914$1pJll4))
                           (if (annotation? g$x$7914$1pJll4)
                             (annotation-stripped g$x$7914$1pJll4)
                             (if (pair? g$x$7914$1pJll4)
                               ((case-lambda
                                  ((g$a$7915$1pJll4 g$d$7916$1pJll4)
                                   (if (if (eq? g$a$7915$1pJll4
                                                (car g$x$7914$1pJll4))
                                         (begin
                                           '#f
                                           (eq? g$d$7916$1pJll4
                                                (cdr g$x$7914$1pJll4)))
                                         '#f)
                                     g$x$7914$1pJll4
                                     (cons g$a$7915$1pJll4 g$d$7916$1pJll4))))
                                (g$f$7913$1pJll4 (car g$x$7914$1pJll4))
                                (g$f$7913$1pJll4 (cdr g$x$7914$1pJll4)))
                               (if (vector? g$x$7914$1pJll4)
                                 ((case-lambda
                                    ((g$old$7917$1pJll4)
                                     ((case-lambda
                                        ((g$new$7918$1pJll4)
                                         (if (g$for-all$5503$1pJll4
                                               eq?
                                               g$old$7917$1pJll4
                                               g$new$7918$1pJll4)
                                           g$x$7914$1pJll4
                                           (list->vector g$new$7918$1pJll4))))
                                      (map g$f$7913$1pJll4 g$old$7917$1pJll4))))
                                  (vector->list g$x$7914$1pJll4))
                                 g$x$7914$1pJll4))))))))
             g$f$7913$1pJll4)
           g$x$7909$1pJll4)))))
   (g$stx->datum$7386$1pJll4
     g$stx->datum$11024$1pJll4
     (case-lambda
       ((g$x$7919$1pJll4) (g$strip$7385$1pJll4 g$x$7919$1pJll4 '()))))
   (g$same-marks*?$7387$1pJll4
     g$same-marks*?$11025$1pJll4
     (case-lambda
       ((g$mark*$7920$1pJll4 g$mark**$7921$1pJll4 g$si$7922$1pJll4)
        (if (null? g$si$7922$1pJll4)
          '#f
          (if (g$same-marks?$7377$1pJll4
                g$mark*$7920$1pJll4
                (vector-ref g$mark**$7921$1pJll4 (car g$si$7922$1pJll4)))
            (car g$si$7922$1pJll4)
            (g$same-marks*?$7387$1pJll4
              g$mark*$7920$1pJll4
              g$mark**$7921$1pJll4
              (cdr g$si$7922$1pJll4)))))))
   (g$id->label$7388$1pJll4
     g$id->label$11026$1pJll4
     (case-lambda
       ((g$id$7923$1pJll4)
        ((case-lambda
           ((g$t$7924$1pJll4)
            (if g$t$7924$1pJll4
              g$t$7924$1pJll4
              (begin
                '#f
                ((case-lambda
                   ((g$t$7925$1pJll4)
                    (if g$t$7925$1pJll4
                      ((case-lambda
                         ((g$env$7926$1pJll4)
                          ((case-lambda
                             ((g$rib$7927$1pJll4)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7323$1pJll4
                                     g$id$7923$1pJll4
                                     g$rib$7927$1pJll4)))
                                (case-lambda
                                  ((g$lab$7930$1pJll4 g$loc_$7931$1pJll4)
                                   ((case-lambda
                                      ((g$loc_$7932$1pJll4 g$lab$7933$1pJll4)
                                       (begin
                                         (g$extend-rib!$7339$1pJll4
                                           g$rib$7927$1pJll4
                                           g$id$7923$1pJll4
                                           g$lab$7933$1pJll4)
                                         g$lab$7933$1pJll4)))
                                    g$loc_$7931$1pJll4
                                    g$lab$7930$1pJll4))))))
                           (g$interaction-env-rib$7731$1pJll4
                             g$env$7926$1pJll4))))
                       g$t$7925$1pJll4)
                      '#f)))
                 (g$top-level-context$7771$1pJll4))))))
         (g$id->real-label$7389$1pJll4 g$id$7923$1pJll4)))))
   (g$id->real-label$7389$1pJll4
     g$id->real-label$11027$1pJll4
     (case-lambda
       ((g$id$7934$1pJll4)
        ((case-lambda
           ((g$sym$7935$1pJll4)
            ((letrec ((g$search$7936$1pJll4
                        (case-lambda
                          ((g$subst*$7937$1pJll4 g$mark*$7938$1pJll4)
                           (if (null? g$subst*$7937$1pJll4)
                             '#f
                             (if (eq? (car g$subst*$7937$1pJll4) 'shift)
                               (g$search$7936$1pJll4
                                 (cdr g$subst*$7937$1pJll4)
                                 (cdr g$mark*$7938$1pJll4))
                               ((case-lambda
                                  ((g$rib$7939$1pJll4)
                                   ((case-lambda
                                      ((g$t$7940$1pJll4)
                                       (if g$t$7940$1pJll4
                                         ((case-lambda
                                            ((g$ht$7941$1pJll4)
                                             ((case-lambda
                                                ((g$si$7942$1pJll4)
                                                 ((case-lambda
                                                    ((g$i$7943$1pJll4)
                                                     (if g$i$7943$1pJll4
                                                       (vector-ref
                                                         (g$rib-label*$7332$1pJll4
                                                           g$rib$7939$1pJll4)
                                                         g$i$7943$1pJll4)
                                                       (g$search$7936$1pJll4
                                                         (cdr g$subst*$7937$1pJll4)
                                                         g$mark*$7938$1pJll4))))
                                                  (if g$si$7942$1pJll4
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7387$1pJll4
                                                        g$mark*$7938$1pJll4
                                                        (g$rib-mark**$7331$1pJll4
                                                          g$rib$7939$1pJll4)
                                                        (reverse
                                                          g$si$7942$1pJll4)))
                                                    '#f))))
                                              (g$hashtable-ref$5299$1pJll4
                                                g$ht$7941$1pJll4
                                                g$sym$7935$1pJll4
                                                '#f))))
                                          g$t$7940$1pJll4)
                                         ((letrec ((g$f$7944$1pJll4
                                                     (case-lambda
                                                       ((g$sym*$7945$1pJll4
                                                          g$mark**$7946$1pJll4
                                                          g$label*$7947$1pJll4)
                                                        (if (null?
                                                              g$sym*$7945$1pJll4)
                                                          (g$search$7936$1pJll4
                                                            (cdr g$subst*$7937$1pJll4)
                                                            g$mark*$7938$1pJll4)
                                                          (if (if (eq? (car g$sym*$7945$1pJll4)
                                                                       g$sym$7935$1pJll4)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7377$1pJll4
                                                                    (car g$mark**$7946$1pJll4)
                                                                    g$mark*$7938$1pJll4))
                                                                '#f)
                                                            (car g$label*$7947$1pJll4)
                                                            (g$f$7944$1pJll4
                                                              (cdr g$sym*$7945$1pJll4)
                                                              (cdr g$mark**$7946$1pJll4)
                                                              (cdr g$label*$7947$1pJll4))))))))
                                            g$f$7944$1pJll4)
                                          (g$rib-sym*$7330$1pJll4
                                            g$rib$7939$1pJll4)
                                          (g$rib-mark**$7331$1pJll4
                                            g$rib$7939$1pJll4)
                                          (g$rib-label*$7332$1pJll4
                                            g$rib$7939$1pJll4)))))
                                    (g$rib-sealed/freq$7333$1pJll4
                                      g$rib$7939$1pJll4))))
                                (car g$subst*$7937$1pJll4))))))))
               g$search$7936$1pJll4)
             (g$stx-subst*$7351$1pJll4 g$id$7934$1pJll4)
             (g$stx-mark*$7350$1pJll4 g$id$7934$1pJll4))))
         (g$id->sym$7376$1pJll4 g$id$7934$1pJll4)))))
   (g$label->binding$7390$1pJll4
     g$label->binding$11028$1pJll4
     (case-lambda
       ((g$x$7948$1pJll4 g$r$7949$1pJll4)
        ((case-lambda
           ((g$t$7950$1pJll4)
            (if g$t$7950$1pJll4
              ((case-lambda
                 ((g$b$7951$1pJll4)
                  (if (if (pair? g$b$7951$1pJll4)
                        (begin '#f (eq? (car g$b$7951$1pJll4) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7616$1pJll4 (cdr g$b$7951$1pJll4)))
                    (if (if (pair? g$b$7951$1pJll4)
                          (begin '#f (eq? (car g$b$7951$1pJll4) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7952$1pJll4 g$loc$7953$1pJll4)
                          (cons '$rtd (symbol-value g$loc$7953$1pJll4))))
                       (g$cadr$5022$1pJll4 g$b$7951$1pJll4)
                       (g$cddr$5024$1pJll4 g$b$7951$1pJll4))
                      g$b$7951$1pJll4))))
               g$t$7950$1pJll4)
              ((case-lambda
                 ((g$t$7954$1pJll4)
                  (if g$t$7954$1pJll4
                    (cdr g$t$7954$1pJll4)
                    ((case-lambda
                       ((g$t$7955$1pJll4)
                        (if g$t$7955$1pJll4
                          ((case-lambda
                             ((g$env$7956$1pJll4)
                              ((case-lambda
                                 ((g$t$7957$1pJll4)
                                  (if g$t$7957$1pJll4
                                    ((case-lambda
                                       ((g$p$7958$1pJll4)
                                        (g$cons*$5505$1pJll4
                                          'lexical
                                          (cdr g$p$7958$1pJll4)
                                          '#f)))
                                     g$t$7957$1pJll4)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$7948$1pJll4
                                 (g$interaction-env-locs$7733$1pJll4
                                   g$env$7956$1pJll4)))))
                           g$t$7955$1pJll4)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7771$1pJll4)))))
               (assq g$x$7948$1pJll4 g$r$7949$1pJll4)))))
         (g$imported-label->binding$7189$1pJll4 g$x$7948$1pJll4)))))
   (g$make-binding$7391$1pJll4 g$make-binding$11029$1pJll4 cons)
   (g$binding-type$7392$1pJll4 g$binding-type$11030$1pJll4 car)
   (g$binding-value$7393$1pJll4 g$binding-value$11031$1pJll4 cdr)
   (g$raise-unbound-error$7394$1pJll4
     g$raise-unbound-error$11032$1pJll4
     (case-lambda
       ((g$id$7959$1pJll4)
        (g$syntax-violation*$7763$1pJll4
          '#f
          '"unbound identifier"
          g$id$7959$1pJll4
          (g$make-undefined-violation$5839$1pJll4)))))
   (g$syntax-type$7395$1pJll4
     g$syntax-type$11033$1pJll4
     (case-lambda
       ((g$e$7960$1pJll4 g$r$7961$1pJll4)
        (if (g$id?$7375$1pJll4 g$e$7960$1pJll4)
          ((case-lambda
             ((g$id$7962$1pJll4)
              ((case-lambda
                 ((g$label$7963$1pJll4)
                  ((case-lambda
                     ((g$b$7964$1pJll4)
                      ((case-lambda
                         ((g$type$7965$1pJll4)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$7963$1pJll4)
                                  (g$raise-unbound-error$7394$1pJll4
                                    g$id$7962$1pJll4)
                                  (void))
                                ((case-lambda
                                   ((g$t$7966$1pJll4)
                                    (if (memv
                                          g$t$7966$1pJll4
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7965$1pJll4
                                        (g$binding-value$7393$1pJll4
                                          g$b$7964$1pJll4)
                                        g$id$7962$1pJll4)
                                      (values 'other '#f '#f))))
                                 g$type$7965$1pJll4)))))))
                       (g$binding-type$7392$1pJll4 g$b$7964$1pJll4))))
                   (g$label->binding$7390$1pJll4
                     g$label$7963$1pJll4
                     g$r$7961$1pJll4))))
               (g$id->label$7388$1pJll4 g$id$7962$1pJll4))))
           g$e$7960$1pJll4)
          (if (g$syntax-pair?$7368$1pJll4 g$e$7960$1pJll4)
            ((case-lambda
               ((g$id$7967$1pJll4)
                (if (g$id?$7375$1pJll4 g$id$7967$1pJll4)
                  ((case-lambda
                     ((g$label$7968$1pJll4)
                      ((case-lambda
                         ((g$b$7969$1pJll4)
                          ((case-lambda
                             ((g$type$7970$1pJll4)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$7968$1pJll4)
                                      (g$raise-unbound-error$7394$1pJll4
                                        g$id$7967$1pJll4)
                                      (void))
                                    ((case-lambda
                                       ((g$t$7971$1pJll4)
                                        (if (memv
                                              g$t$7971$1pJll4
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$7970$1pJll4
                                            (g$binding-value$7393$1pJll4
                                              g$b$7969$1pJll4)
                                            g$id$7967$1pJll4)
                                          (values 'call '#f '#f))))
                                     g$type$7970$1pJll4)))))))
                           (g$binding-type$7392$1pJll4 g$b$7969$1pJll4))))
                       (g$label->binding$7390$1pJll4
                         g$label$7968$1pJll4
                         g$r$7961$1pJll4))))
                   (g$id->label$7388$1pJll4 g$id$7967$1pJll4))
                  (values 'call '#f '#f))))
             (g$syntax-car$7372$1pJll4 g$e$7960$1pJll4))
            ((case-lambda
               ((g$d$7972$1pJll4)
                (if (g$self-evaluating?$7383$1pJll4 g$d$7972$1pJll4)
                  (values 'constant g$d$7972$1pJll4 '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7386$1pJll4 g$e$7960$1pJll4)))))))
   (g$sanitize-binding$7403$1pJll4
     g$sanitize-binding$11034$1pJll4
     (case-lambda
       ((g$x$7973$1pJll4 g$src$7974$1pJll4)
        (if (procedure? g$x$7973$1pJll4)
          (g$cons*$5505$1pJll4 'local-macro g$x$7973$1pJll4 g$src$7974$1pJll4)
          (if (if (pair? g$x$7973$1pJll4)
                (if (eq? (car g$x$7973$1pJll4) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7973$1pJll4)))
                  '#f)
                '#f)
            (g$cons*$5505$1pJll4
              'local-macro!
              (cdr g$x$7973$1pJll4)
              g$src$7974$1pJll4)
            (if (if (pair? g$x$7973$1pJll4)
                  (begin '#f (eq? (car g$x$7973$1pJll4) '$rtd))
                  '#f)
              g$x$7973$1pJll4
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7973$1pJll4)))))))
   (g$make-variable-transformer$7404$1pJll4
     g$make-variable-transformer$11035$1pJll4
     (case-lambda
       ((g$x$7975$1pJll4)
        (if (procedure? g$x$7975$1pJll4)
          (cons 'macro! g$x$7975$1pJll4)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7975$1pJll4)))))
   (g$variable-transformer?$7405$1pJll4
     g$variable-transformer?$11036$1pJll4
     (case-lambda
       ((g$x$7976$1pJll4)
        (if (pair? g$x$7976$1pJll4)
          (if (eq? (car g$x$7976$1pJll4) 'macro!)
            (begin '#f (procedure? (cdr g$x$7976$1pJll4)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7406$1pJll4
     g$variable-transformer-procedure$11037$1pJll4
     (case-lambda
       ((g$x$7977$1pJll4)
        (if (g$variable-transformer?$7405$1pJll4 g$x$7977$1pJll4)
          (cdr g$x$7977$1pJll4)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7977$1pJll4)))))
   (g$make-eval-transformer$7407$1pJll4
     g$make-eval-transformer$11038$1pJll4
     (case-lambda
       ((g$x$7978$1pJll4)
        (g$sanitize-binding$7403$1pJll4
          (eval-core (g$expanded->core$6889$1pJll4 g$x$7978$1pJll4))
          g$x$7978$1pJll4))))
   (g$parse-define$7593$1pJll4
     g$parse-define$11039$1pJll4
     (case-lambda
       ((g$x$7979$1pJll4)
        ((case-lambda
           ((g$t$7980$1pJll4)
            ((case-lambda
               ((g$ls/false$7981$1pJll4)
                (if (if g$ls/false$7981$1pJll4
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7982$1pJll4
                               g$fmls$7983$1pJll4
                               g$b$7984$1pJll4
                               g$b*$7985$1pJll4)
                             (g$id?$7375$1pJll4 g$id$7982$1pJll4)))
                          g$ls/false$7981$1pJll4))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7986$1pJll4
                         g$fmls$7987$1pJll4
                         g$b$7988$1pJll4
                         g$b*$7989$1pJll4)
                       (begin
                         (g$verify-formals$7673$1pJll4
                           g$fmls$7987$1pJll4
                           g$x$7979$1pJll4)
                         (values
                           g$id$7986$1pJll4
                           (cons
                             'defun
                             (cons
                               g$fmls$7987$1pJll4
                               (cons g$b$7988$1pJll4 g$b*$7989$1pJll4)))))))
                    g$ls/false$7981$1pJll4)
                  ((case-lambda
                     ((g$t$7990$1pJll4)
                      ((case-lambda
                         ((g$ls/false$7991$1pJll4)
                          (if (if g$ls/false$7991$1pJll4
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7992$1pJll4 g$val$7993$1pJll4)
                                       (g$id?$7375$1pJll4 g$id$7992$1pJll4)))
                                    g$ls/false$7991$1pJll4))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7994$1pJll4 g$val$7995$1pJll4)
                                 (values
                                   g$id$7994$1pJll4
                                   (cons 'expr g$val$7995$1pJll4))))
                              g$ls/false$7991$1pJll4)
                            ((case-lambda
                               ((g$t$7996$1pJll4)
                                ((case-lambda
                                   ((g$ls/false$7997$1pJll4)
                                    (if (if g$ls/false$7997$1pJll4
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7998$1pJll4)
                                                 (g$id?$7375$1pJll4
                                                   g$id$7998$1pJll4)))
                                              g$ls/false$7997$1pJll4))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7999$1pJll4)
                                           (values
                                             g$id$7999$1pJll4
                                             (cons
                                               'expr
                                               (g$bless$7616$1pJll4 '(void))))))
                                        g$ls/false$7997$1pJll4)
                                      (g$syntax-violation$7764$1pJll4
                                        '#f
                                        '"invalid syntax"
                                        g$t$7996$1pJll4))))
                                 (g$syntax-dispatch$7653$1pJll4
                                   g$t$7996$1pJll4
                                   '(_ any)))))
                             g$t$7990$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$7990$1pJll4
                         '(_ any any)))))
                   g$t$7980$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$7980$1pJll4
               '(_ (any . any) any . each-any)))))
         g$x$7979$1pJll4))))
   (g$parse-define-syntax$7594$1pJll4
     g$parse-define-syntax$11040$1pJll4
     (case-lambda
       ((g$x$8000$1pJll4)
        ((case-lambda
           ((g$t$8001$1pJll4)
            ((case-lambda
               ((g$ls/false$8002$1pJll4)
                (if (if g$ls/false$8002$1pJll4
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8003$1pJll4 g$val$8004$1pJll4)
                             (g$id?$7375$1pJll4 g$id$8003$1pJll4)))
                          g$ls/false$8002$1pJll4))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8005$1pJll4 g$val$8006$1pJll4)
                       (values g$id$8005$1pJll4 g$val$8006$1pJll4)))
                    g$ls/false$8002$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8001$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8001$1pJll4 '(_ any any)))))
         g$x$8000$1pJll4))))
   (g$scheme-stx-hashtable$7595$1pJll4
     g$scheme-stx-hashtable$11041$1pJll4
     (g$make-eq-hashtable$5296$1pJll4))
   (g$scheme-stx$7596$1pJll4
     g$scheme-stx$11042$1pJll4
     (case-lambda
       ((g$sym$8007$1pJll4)
        ((case-lambda
           ((g$t$8008$1pJll4)
            (if g$t$8008$1pJll4
              g$t$8008$1pJll4
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8009$1pJll4)
                    ((case-lambda
                       ((g$stx$8010$1pJll4)
                        ((case-lambda
                           ((g$stx$8011$1pJll4)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5300$1pJll4
                                    g$scheme-stx-hashtable$7595$1pJll4
                                    g$sym$8007$1pJll4
                                    g$stx$8011$1pJll4)
                                  g$stx$8011$1pJll4))))))
                         ((case-lambda
                            ((g$t$8012$1pJll4)
                             (if g$t$8012$1pJll4
                               ((case-lambda
                                  ((g$x$8013$1pJll4)
                                   ((case-lambda
                                      ((g$name$8014$1pJll4 g$label$8015$1pJll4)
                                       (g$add-subst$7365$1pJll4
                                         (g$make-rib$7329$1pJll4
                                           (list g$name$8014$1pJll4)
                                           (list g$top-mark*$7317$1pJll4)
                                           (list g$label$8015$1pJll4)
                                           '#f)
                                         g$stx$8010$1pJll4)))
                                    (car g$x$8013$1pJll4)
                                    (cdr g$x$8013$1pJll4))))
                                g$t$8012$1pJll4)
                               g$stx$8010$1pJll4)))
                          (assq g$sym$8007$1pJll4 g$subst$8009$1pJll4)))))
                     (g$make-stx$7348$1pJll4
                       g$sym$8007$1pJll4
                       g$top-mark*$7317$1pJll4
                       '()
                       '()))))
                 (g$library-subst$7147$1pJll4
                   (g$find-library-by-name$7183$1pJll4
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5299$1pJll4
           g$scheme-stx-hashtable$7595$1pJll4
           g$sym$8007$1pJll4
           '#f)))))
   (g$lexical-var$7597$1pJll4 g$lexical-var$11043$1pJll4 car)
   (g$lexical-mutable?$7598$1pJll4 g$lexical-mutable?$11044$1pJll4 cdr)
   (g$set-lexical-mutable!$7599$1pJll4
     g$set-lexical-mutable!$11045$1pJll4
     set-cdr!)
   (g$add-lexical$7600$1pJll4
     g$add-lexical$11046$1pJll4
     (case-lambda
       ((g$lab$8016$1pJll4 g$lex$8017$1pJll4 g$r$8018$1pJll4)
        (cons
          (g$cons*$5505$1pJll4 g$lab$8016$1pJll4 'lexical g$lex$8017$1pJll4 '#f)
          g$r$8018$1pJll4))))
   (g$add-lexicals$7601$1pJll4
     g$add-lexicals$11047$1pJll4
     (case-lambda
       ((g$lab*$8019$1pJll4 g$lex*$8020$1pJll4 g$r$8021$1pJll4)
        (if (null? g$lab*$8019$1pJll4)
          g$r$8021$1pJll4
          (g$add-lexicals$7601$1pJll4
            (cdr g$lab*$8019$1pJll4)
            (cdr g$lex*$8020$1pJll4)
            (g$add-lexical$7600$1pJll4
              (car g$lab*$8019$1pJll4)
              (car g$lex*$8020$1pJll4)
              g$r$8021$1pJll4))))))
   (g$letrec-helper$7602$1pJll4
     g$letrec-helper$11048$1pJll4
     (case-lambda
       ((g$e$8022$1pJll4 g$r$8023$1pJll4 g$mr$8024$1pJll4 g$build$8025$1pJll4)
        ((case-lambda
           ((g$t$8026$1pJll4)
            ((case-lambda
               ((g$ls/false$8027$1pJll4)
                (if g$ls/false$8027$1pJll4
                  (apply
                    (case-lambda
                      ((g$lhs*$8028$1pJll4
                         g$rhs*$8029$1pJll4
                         g$b$8030$1pJll4
                         g$b*$8031$1pJll4)
                       (if (not (g$valid-bound-ids?$7380$1pJll4
                                  g$lhs*$8028$1pJll4))
                         (g$invalid-fmls-error$7618$1pJll4
                           g$e$8022$1pJll4
                           g$lhs*$8028$1pJll4)
                         ((case-lambda
                            ((g$lex*$8032$1pJll4 g$lab*$8033$1pJll4)
                             ((case-lambda
                                ((g$rib$8034$1pJll4 g$r$8035$1pJll4)
                                 ((case-lambda
                                    ((g$body$8036$1pJll4 g$rhs*$8037$1pJll4)
                                     (g$build$8025$1pJll4
                                       '#f
                                       g$lex*$8032$1pJll4
                                       g$rhs*$8037$1pJll4
                                       g$body$8036$1pJll4)))
                                  (g$chi-internal$7682$1pJll4
                                    (g$add-subst$7365$1pJll4
                                      g$rib$8034$1pJll4
                                      (cons g$b$8030$1pJll4 g$b*$8031$1pJll4))
                                    g$r$8035$1pJll4
                                    g$mr$8024$1pJll4)
                                  (g$chi-expr*$7669$1pJll4
                                    (map (case-lambda
                                           ((g$x$8038$1pJll4)
                                            (g$add-subst$7365$1pJll4
                                              g$rib$8034$1pJll4
                                              g$x$8038$1pJll4)))
                                         g$rhs*$8029$1pJll4)
                                    g$r$8035$1pJll4
                                    g$mr$8024$1pJll4))))
                              (g$make-full-rib$7343$1pJll4
                                g$lhs*$8028$1pJll4
                                g$lab*$8033$1pJll4)
                              (g$add-lexicals$7601$1pJll4
                                g$lab*$8033$1pJll4
                                g$lex*$8032$1pJll4
                                g$r$8023$1pJll4))))
                          (map g$gen-lexical$7319$1pJll4 g$lhs*$8028$1pJll4)
                          (map g$gen-label$7321$1pJll4 g$lhs*$8028$1pJll4)))))
                    g$ls/false$8027$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8026$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8026$1pJll4
               '(_ #(each (any any)) any . each-any)))))
         g$e$8022$1pJll4))))
   (g$letrec-transformer$7603$1pJll4
     g$letrec-transformer$11049$1pJll4
     (case-lambda
       ((g$e$8039$1pJll4 g$r$8040$1pJll4 g$mr$8041$1pJll4)
        (g$letrec-helper$7602$1pJll4
          g$e$8039$1pJll4
          g$r$8040$1pJll4
          g$mr$8041$1pJll4
          g$build-letrec$7311$1pJll4))))
   (g$letrec*-transformer$7604$1pJll4
     g$letrec*-transformer$11050$1pJll4
     (case-lambda
       ((g$e$8042$1pJll4 g$r$8043$1pJll4 g$mr$8044$1pJll4)
        (g$letrec-helper$7602$1pJll4
          g$e$8042$1pJll4
          g$r$8043$1pJll4
          g$mr$8044$1pJll4
          g$build-letrec*$7312$1pJll4))))
   (g$fluid-let-syntax-transformer$7605$1pJll4
     g$fluid-let-syntax-transformer$11051$1pJll4
     (case-lambda
       ((g$e$8045$1pJll4 g$r$8046$1pJll4 g$mr$8047$1pJll4)
        (letrec* ((g$lookup$8048$1pJll4
                    (case-lambda
                      ((g$x$8058$1pJll4)
                       ((case-lambda
                          ((g$t$8059$1pJll4)
                           (if g$t$8059$1pJll4
                             g$t$8059$1pJll4
                             (begin
                               '#f
                               (g$syntax-violation$7764$1pJll4
                                 '#f
                                 '"unbound identifier"
                                 g$e$8045$1pJll4
                                 g$x$8058$1pJll4)))))
                        (g$id->label$7388$1pJll4 g$x$8058$1pJll4))))))
          ((case-lambda
             ((g$t$8049$1pJll4)
              ((case-lambda
                 ((g$ls/false$8050$1pJll4)
                  (if g$ls/false$8050$1pJll4
                    (apply
                      (case-lambda
                        ((g$lhs*$8051$1pJll4
                           g$rhs*$8052$1pJll4
                           g$b$8053$1pJll4
                           g$b*$8054$1pJll4)
                         (if (not (g$valid-bound-ids?$7380$1pJll4
                                    g$lhs*$8051$1pJll4))
                           (g$invalid-fmls-error$7618$1pJll4
                             g$e$8045$1pJll4
                             g$lhs*$8051$1pJll4)
                           ((case-lambda
                              ((g$lab*$8055$1pJll4 g$rhs*$8056$1pJll4)
                               (g$chi-internal$7682$1pJll4
                                 (cons g$b$8053$1pJll4 g$b*$8054$1pJll4)
                                 (append
                                   (map cons
                                        g$lab*$8055$1pJll4
                                        g$rhs*$8056$1pJll4)
                                   g$r$8046$1pJll4)
                                 (append
                                   (map cons
                                        g$lab*$8055$1pJll4
                                        g$rhs*$8056$1pJll4)
                                   g$mr$8047$1pJll4))))
                            (map g$lookup$8048$1pJll4 g$lhs*$8051$1pJll4)
                            (map (case-lambda
                                   ((g$x$8057$1pJll4)
                                    (g$make-eval-transformer$7407$1pJll4
                                      (g$expand-transformer$7698$1pJll4
                                        g$x$8057$1pJll4
                                        g$mr$8047$1pJll4))))
                                 g$rhs*$8052$1pJll4)))))
                      g$ls/false$8050$1pJll4)
                    (g$syntax-violation$7764$1pJll4
                      '#f
                      '"invalid syntax"
                      g$t$8049$1pJll4))))
               (g$syntax-dispatch$7653$1pJll4
                 g$t$8049$1pJll4
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8045$1pJll4)))))
   (g$type-descriptor-transformer$7606$1pJll4
     g$type-descriptor-transformer$11052$1pJll4
     (case-lambda
       ((g$e$8060$1pJll4 g$r$8061$1pJll4 g$mr$8062$1pJll4)
        ((case-lambda
           ((g$t$8063$1pJll4)
            ((case-lambda
               ((g$ls/false$8064$1pJll4)
                (if (if g$ls/false$8064$1pJll4
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8065$1pJll4)
                             (g$id?$7375$1pJll4 g$id$8065$1pJll4)))
                          g$ls/false$8064$1pJll4))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8066$1pJll4)
                       ((case-lambda
                          ((g$lab$8067$1pJll4)
                           ((case-lambda
                              ((g$b$8068$1pJll4)
                               ((case-lambda
                                  ((g$type$8069$1pJll4)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8067$1pJll4)
                                           (g$raise-unbound-error$7394$1pJll4
                                             g$id$8066$1pJll4)
                                           (void))
                                         (if (not (if (eq? g$type$8069$1pJll4
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$7393$1pJll4
                                                               g$b$8068$1pJll4))))
                                                    '#f))
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"not a record type"
                                             g$e$8060$1pJll4)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$7393$1pJll4
                                             g$b$8068$1pJll4))))))))
                                (g$binding-type$7392$1pJll4 g$b$8068$1pJll4))))
                            (g$label->binding$7390$1pJll4
                              g$lab$8067$1pJll4
                              g$r$8061$1pJll4))))
                        (g$id->label$7388$1pJll4 g$id$8066$1pJll4))))
                    g$ls/false$8064$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8063$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8063$1pJll4 '(_ any)))))
         g$e$8060$1pJll4))))
   (g$record-type-descriptor-transformer$7607$1pJll4
     g$record-type-descriptor-transformer$11053$1pJll4
     (case-lambda
       ((g$e$8070$1pJll4 g$r$8071$1pJll4 g$mr$8072$1pJll4)
        ((case-lambda
           ((g$t$8073$1pJll4)
            ((case-lambda
               ((g$ls/false$8074$1pJll4)
                (if (if g$ls/false$8074$1pJll4
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8075$1pJll4)
                             (g$id?$7375$1pJll4 g$id$8075$1pJll4)))
                          g$ls/false$8074$1pJll4))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8076$1pJll4)
                       ((case-lambda
                          ((g$lab$8077$1pJll4)
                           ((case-lambda
                              ((g$b$8078$1pJll4)
                               ((case-lambda
                                  ((g$type$8079$1pJll4)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8077$1pJll4)
                                           (g$raise-unbound-error$7394$1pJll4
                                             g$id$8076$1pJll4)
                                           (void))
                                         (if (not (if (eq? g$type$8079$1pJll4
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7393$1pJll4
                                                          g$b$8078$1pJll4)))
                                                    '#f))
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"not a record type"
                                             g$e$8070$1pJll4)
                                           (void))
                                         (g$chi-expr$7671$1pJll4
                                           (car (g$binding-value$7393$1pJll4
                                                  g$b$8078$1pJll4))
                                           g$r$8071$1pJll4
                                           g$mr$8072$1pJll4)))))))
                                (g$binding-type$7392$1pJll4 g$b$8078$1pJll4))))
                            (g$label->binding$7390$1pJll4
                              g$lab$8077$1pJll4
                              g$r$8071$1pJll4))))
                        (g$id->label$7388$1pJll4 g$id$8076$1pJll4))))
                    g$ls/false$8074$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8073$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8073$1pJll4 '(_ any)))))
         g$e$8070$1pJll4))))
   (g$record-constructor-descriptor-transformer$7608$1pJll4
     g$record-constructor-descriptor-transformer$11054$1pJll4
     (case-lambda
       ((g$e$8080$1pJll4 g$r$8081$1pJll4 g$mr$8082$1pJll4)
        ((case-lambda
           ((g$t$8083$1pJll4)
            ((case-lambda
               ((g$ls/false$8084$1pJll4)
                (if (if g$ls/false$8084$1pJll4
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8085$1pJll4)
                             (g$id?$7375$1pJll4 g$id$8085$1pJll4)))
                          g$ls/false$8084$1pJll4))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8086$1pJll4)
                       ((case-lambda
                          ((g$lab$8087$1pJll4)
                           ((case-lambda
                              ((g$b$8088$1pJll4)
                               ((case-lambda
                                  ((g$type$8089$1pJll4)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8087$1pJll4)
                                           (g$raise-unbound-error$7394$1pJll4
                                             g$id$8086$1pJll4)
                                           (void))
                                         (if (not (if (eq? g$type$8089$1pJll4
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7393$1pJll4
                                                          g$b$8088$1pJll4)))
                                                    '#f))
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"invalid type"
                                             g$e$8080$1pJll4)
                                           (void))
                                         (g$chi-expr$7671$1pJll4
                                           (g$cadr$5022$1pJll4
                                             (g$binding-value$7393$1pJll4
                                               g$b$8088$1pJll4))
                                           g$r$8081$1pJll4
                                           g$mr$8082$1pJll4)))))))
                                (g$binding-type$7392$1pJll4 g$b$8088$1pJll4))))
                            (g$label->binding$7390$1pJll4
                              g$lab$8087$1pJll4
                              g$r$8081$1pJll4))))
                        (g$id->label$7388$1pJll4 g$id$8086$1pJll4))))
                    g$ls/false$8084$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8083$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8083$1pJll4 '(_ any)))))
         g$e$8080$1pJll4))))
   (g$when-macro$7609$1pJll4
     g$when-macro$11055$1pJll4
     (case-lambda
       ((g$e$8090$1pJll4)
        ((case-lambda
           ((g$t$8091$1pJll4)
            ((case-lambda
               ((g$ls/false$8092$1pJll4)
                (if g$ls/false$8092$1pJll4
                  (apply
                    (case-lambda
                      ((g$test$8093$1pJll4 g$e$8094$1pJll4 g$e*$8095$1pJll4)
                       (g$bless$7616$1pJll4
                         (list
                           'if
                           g$test$8093$1pJll4
                           (cons
                             'begin
                             (cons g$e$8094$1pJll4 g$e*$8095$1pJll4))))))
                    g$ls/false$8092$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8091$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8091$1pJll4
               '(_ any any . each-any)))))
         g$e$8090$1pJll4))))
   (g$unless-macro$7610$1pJll4
     g$unless-macro$11056$1pJll4
     (case-lambda
       ((g$e$8096$1pJll4)
        ((case-lambda
           ((g$t$8097$1pJll4)
            ((case-lambda
               ((g$ls/false$8098$1pJll4)
                (if g$ls/false$8098$1pJll4
                  (apply
                    (case-lambda
                      ((g$test$8099$1pJll4 g$e$8100$1pJll4 g$e*$8101$1pJll4)
                       (g$bless$7616$1pJll4
                         (list
                           'if
                           (list 'not g$test$8099$1pJll4)
                           (cons
                             'begin
                             (cons g$e$8100$1pJll4 g$e*$8101$1pJll4))))))
                    g$ls/false$8098$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8097$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8097$1pJll4
               '(_ any any . each-any)))))
         g$e$8096$1pJll4))))
   (g$if-transformer$7611$1pJll4
     g$if-transformer$11057$1pJll4
     (case-lambda
       ((g$e$8102$1pJll4 g$r$8103$1pJll4 g$mr$8104$1pJll4)
        ((case-lambda
           ((g$t$8105$1pJll4)
            ((case-lambda
               ((g$ls/false$8106$1pJll4)
                (if g$ls/false$8106$1pJll4
                  (apply
                    (case-lambda
                      ((g$e0$8107$1pJll4 g$e1$8108$1pJll4 g$e2$8109$1pJll4)
                       (list
                         'if
                         (g$chi-expr$7671$1pJll4
                           g$e0$8107$1pJll4
                           g$r$8103$1pJll4
                           g$mr$8104$1pJll4)
                         (g$chi-expr$7671$1pJll4
                           g$e1$8108$1pJll4
                           g$r$8103$1pJll4
                           g$mr$8104$1pJll4)
                         (g$chi-expr$7671$1pJll4
                           g$e2$8109$1pJll4
                           g$r$8103$1pJll4
                           g$mr$8104$1pJll4))))
                    g$ls/false$8106$1pJll4)
                  ((case-lambda
                     ((g$t$8110$1pJll4)
                      ((case-lambda
                         ((g$ls/false$8111$1pJll4)
                          (if g$ls/false$8111$1pJll4
                            (apply
                              (case-lambda
                                ((g$e0$8112$1pJll4 g$e1$8113$1pJll4)
                                 (list
                                   'if
                                   (g$chi-expr$7671$1pJll4
                                     g$e0$8112$1pJll4
                                     g$r$8103$1pJll4
                                     g$mr$8104$1pJll4)
                                   (g$chi-expr$7671$1pJll4
                                     g$e1$8113$1pJll4
                                     g$r$8103$1pJll4
                                     g$mr$8104$1pJll4)
                                   (g$build-void$7310$1pJll4))))
                              g$ls/false$8111$1pJll4)
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"invalid syntax"
                              g$t$8110$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$8110$1pJll4
                         '(_ any any)))))
                   g$t$8105$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8105$1pJll4 '(_ any any any)))))
         g$e$8102$1pJll4))))
   (g$case-macro$7612$1pJll4
     g$case-macro$11058$1pJll4
     (case-lambda
       ((g$e$8114$1pJll4)
        (letrec* ((g$build-last$8115$1pJll4
                    (case-lambda
                      ((g$cls$8135$1pJll4)
                       ((case-lambda
                          ((g$t$8136$1pJll4)
                           ((case-lambda
                              ((g$ls/false$8137$1pJll4)
                               (if g$ls/false$8137$1pJll4
                                 (apply
                                   (case-lambda
                                     ((g$e$8138$1pJll4 g$e*$8139$1pJll4)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$8138$1pJll4
                                          g$e*$8139$1pJll4))))
                                   g$ls/false$8137$1pJll4)
                                 ((case-lambda
                                    ((g$t$8140$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$8141$1pJll4)
                                         (if g$ls/false$8141$1pJll4
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8116$1pJll4
                                                  g$cls$8135$1pJll4
                                                  '(if #f #f))))
                                             g$ls/false$8141$1pJll4)
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"invalid syntax"
                                             g$t$8140$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$8140$1pJll4
                                        '_))))
                                  g$t$8136$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$8136$1pJll4
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8135$1pJll4))))
                  (g$build-one$8116$1pJll4
                    (case-lambda
                      ((g$cls$8128$1pJll4 g$k$8129$1pJll4)
                       ((case-lambda
                          ((g$t$8130$1pJll4)
                           ((case-lambda
                              ((g$ls/false$8131$1pJll4)
                               (if g$ls/false$8131$1pJll4
                                 (apply
                                   (case-lambda
                                     ((g$d*$8132$1pJll4
                                        g$e$8133$1pJll4
                                        g$e*$8134$1pJll4)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8132$1pJll4))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$8133$1pJll4
                                            g$e*$8134$1pJll4))
                                        g$k$8129$1pJll4)))
                                   g$ls/false$8131$1pJll4)
                                 (g$syntax-violation$7764$1pJll4
                                   '#f
                                   '"invalid syntax"
                                   g$t$8130$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$8130$1pJll4
                              '(each-any any . each-any)))))
                        g$cls$8128$1pJll4)))))
          ((case-lambda
             ((g$t$8117$1pJll4)
              ((case-lambda
                 ((g$ls/false$8118$1pJll4)
                  (if g$ls/false$8118$1pJll4
                    (apply
                      (case-lambda
                        ((g$expr$8119$1pJll4)
                         (g$bless$7616$1pJll4
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8119$1pJll4))
                               '((if #f #f)))))))
                      g$ls/false$8118$1pJll4)
                    ((case-lambda
                       ((g$t$8120$1pJll4)
                        ((case-lambda
                           ((g$ls/false$8121$1pJll4)
                            (if g$ls/false$8121$1pJll4
                              (apply
                                (case-lambda
                                  ((g$expr$8122$1pJll4
                                     g$cls$8123$1pJll4
                                     g$cls*$8124$1pJll4)
                                   (g$bless$7616$1pJll4
                                     (list
                                       'let
                                       (list (list 't g$expr$8122$1pJll4))
                                       ((letrec ((g$f$8125$1pJll4
                                                   (case-lambda
                                                     ((g$cls$8126$1pJll4
                                                        g$cls*$8127$1pJll4)
                                                      (if (null?
                                                            g$cls*$8127$1pJll4)
                                                        (g$build-last$8115$1pJll4
                                                          g$cls$8126$1pJll4)
                                                        (g$build-one$8116$1pJll4
                                                          g$cls$8126$1pJll4
                                                          (g$f$8125$1pJll4
                                                            (car g$cls*$8127$1pJll4)
                                                            (cdr g$cls*$8127$1pJll4))))))))
                                          g$f$8125$1pJll4)
                                        g$cls$8123$1pJll4
                                        g$cls*$8124$1pJll4)))))
                                g$ls/false$8121$1pJll4)
                              (g$syntax-violation$7764$1pJll4
                                '#f
                                '"invalid syntax"
                                g$t$8120$1pJll4))))
                         (g$syntax-dispatch$7653$1pJll4
                           g$t$8120$1pJll4
                           '(_ any any . each-any)))))
                     g$t$8117$1pJll4))))
               (g$syntax-dispatch$7653$1pJll4 g$t$8117$1pJll4 '(_ any)))))
           g$e$8114$1pJll4)))))
   (g$quote-transformer$7613$1pJll4
     g$quote-transformer$11059$1pJll4
     (case-lambda
       ((g$e$8142$1pJll4 g$r$8143$1pJll4 g$mr$8144$1pJll4)
        ((case-lambda
           ((g$t$8145$1pJll4)
            ((case-lambda
               ((g$ls/false$8146$1pJll4)
                (if g$ls/false$8146$1pJll4
                  (apply
                    (case-lambda
                      ((g$datum$8147$1pJll4)
                       (list
                         'quote
                         (g$stx->datum$7386$1pJll4 g$datum$8147$1pJll4))))
                    g$ls/false$8146$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8145$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8145$1pJll4 '(_ any)))))
         g$e$8142$1pJll4))))
   (g$case-lambda-transformer$7614$1pJll4
     g$case-lambda-transformer$11060$1pJll4
     (case-lambda
       ((g$e$8148$1pJll4 g$r$8149$1pJll4 g$mr$8150$1pJll4)
        ((case-lambda
           ((g$t$8151$1pJll4)
            ((case-lambda
               ((g$ls/false$8152$1pJll4)
                (if g$ls/false$8152$1pJll4
                  (apply
                    (case-lambda
                      ((g$fmls*$8153$1pJll4 g$b*$8154$1pJll4 g$b**$8155$1pJll4)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7675$1pJll4
                              g$e$8148$1pJll4
                              g$fmls*$8153$1pJll4
                              (map cons g$b*$8154$1pJll4 g$b**$8155$1pJll4)
                              g$r$8149$1pJll4
                              g$mr$8150$1pJll4)))
                         (case-lambda
                           ((g$fmls*$8158$1pJll4 g$body*$8159$1pJll4)
                            ((case-lambda
                               ((g$body*$8160$1pJll4 g$fmls*$8161$1pJll4)
                                (g$build-case-lambda$7307$1pJll4
                                  '#f
                                  g$fmls*$8161$1pJll4
                                  g$body*$8160$1pJll4)))
                             g$body*$8159$1pJll4
                             g$fmls*$8158$1pJll4))))))
                    g$ls/false$8152$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8151$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8151$1pJll4
               '(_ . #(each (any any . each-any)))))))
         g$e$8148$1pJll4))))
   (g$lambda-transformer$7615$1pJll4
     g$lambda-transformer$11061$1pJll4
     (case-lambda
       ((g$e$8162$1pJll4 g$r$8163$1pJll4 g$mr$8164$1pJll4)
        ((case-lambda
           ((g$t$8165$1pJll4)
            ((case-lambda
               ((g$ls/false$8166$1pJll4)
                (if g$ls/false$8166$1pJll4
                  (apply
                    (case-lambda
                      ((g$fmls$8167$1pJll4 g$b$8168$1pJll4 g$b*$8169$1pJll4)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7674$1pJll4
                              g$e$8162$1pJll4
                              g$fmls$8167$1pJll4
                              (cons g$b$8168$1pJll4 g$b*$8169$1pJll4)
                              g$r$8163$1pJll4
                              g$mr$8164$1pJll4)))
                         (case-lambda
                           ((g$fmls$8172$1pJll4 g$body$8173$1pJll4)
                            ((case-lambda
                               ((g$body$8174$1pJll4 g$fmls$8175$1pJll4)
                                (g$build-lambda$7306$1pJll4
                                  '#f
                                  g$fmls$8175$1pJll4
                                  g$body$8174$1pJll4)))
                             g$body$8173$1pJll4
                             g$fmls$8172$1pJll4))))))
                    g$ls/false$8166$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8165$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8165$1pJll4
               '(_ any any . each-any)))))
         g$e$8162$1pJll4))))
   (g$bless$7616$1pJll4
     g$bless$11062$1pJll4
     (case-lambda
       ((g$x$8176$1pJll4)
        (g$mkstx$7363$1pJll4
          ((letrec ((g$f$8177$1pJll4
                      (case-lambda
                        ((g$x$8178$1pJll4)
                         (if (g$stx?$7347$1pJll4 g$x$8178$1pJll4)
                           g$x$8178$1pJll4
                           (if (pair? g$x$8178$1pJll4)
                             (cons
                               (g$f$8177$1pJll4 (car g$x$8178$1pJll4))
                               (g$f$8177$1pJll4 (cdr g$x$8178$1pJll4)))
                             (if (symbol? g$x$8178$1pJll4)
                               (g$scheme-stx$7596$1pJll4 g$x$8178$1pJll4)
                               (if (vector? g$x$8178$1pJll4)
                                 (vector-map g$f$8177$1pJll4 g$x$8178$1pJll4)
                                 g$x$8178$1pJll4))))))))
             g$f$8177$1pJll4)
           g$x$8176$1pJll4)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7617$1pJll4
     g$with-syntax-macro$11063$1pJll4
     (case-lambda
       ((g$e$8179$1pJll4)
        ((case-lambda
           ((g$t$8180$1pJll4)
            ((case-lambda
               ((g$ls/false$8181$1pJll4)
                (if g$ls/false$8181$1pJll4
                  (apply
                    (case-lambda
                      ((g$pat*$8182$1pJll4
                         g$expr*$8183$1pJll4
                         g$b$8184$1pJll4
                         g$b*$8185$1pJll4)
                       ((case-lambda
                          ((g$idn*$8186$1pJll4)
                           (begin
                             (g$verify-formals$7673$1pJll4
                               (map car g$idn*$8186$1pJll4)
                               g$e$8179$1pJll4)
                             ((case-lambda
                                ((g$t*$8187$1pJll4)
                                 (g$bless$7616$1pJll4
                                   (list
                                     'let
                                     (map list
                                          g$t*$8187$1pJll4
                                          g$expr*$8183$1pJll4)
                                     ((letrec ((g$f$8188$1pJll4
                                                 (case-lambda
                                                   ((g$pat*$8189$1pJll4
                                                      g$t*$8190$1pJll4)
                                                    (if (null?
                                                          g$pat*$8189$1pJll4)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8184$1pJll4
                                                            g$b*$8185$1pJll4)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8190$1pJll4)
                                                        '()
                                                        (list
                                                          (car g$pat*$8189$1pJll4)
                                                          (g$f$8188$1pJll4
                                                            (cdr g$pat*$8189$1pJll4)
                                                            (cdr g$t*$8190$1pJll4)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8189$1pJll4))
                                                            (car g$t*$8190$1pJll4)))))))))
                                        g$f$8188$1pJll4)
                                      g$pat*$8182$1pJll4
                                      g$t*$8187$1pJll4)))))
                              (g$generate-temporaries$7754$1pJll4
                                g$expr*$8183$1pJll4)))))
                        ((letrec ((g$f$8191$1pJll4
                                    (case-lambda
                                      ((g$pat*$8192$1pJll4)
                                       (if (null? g$pat*$8192$1pJll4)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7652$1pJll4
                                                (car g$pat*$8192$1pJll4)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8195$1pJll4
                                                g$idn*$8196$1pJll4)
                                              ((case-lambda
                                                 ((g$idn*$8197$1pJll4
                                                    g$pat$8198$1pJll4)
                                                  (append
                                                    g$idn*$8197$1pJll4
                                                    (g$f$8191$1pJll4
                                                      (cdr g$pat*$8192$1pJll4)))))
                                               g$idn*$8196$1pJll4
                                               g$pat$8195$1pJll4)))))))))
                           g$f$8191$1pJll4)
                         g$pat*$8182$1pJll4))))
                    g$ls/false$8181$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8180$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8180$1pJll4
               '(_ #(each (any any)) any . each-any)))))
         g$e$8179$1pJll4))))
   (g$invalid-fmls-error$7618$1pJll4
     g$invalid-fmls-error$11064$1pJll4
     (case-lambda
       ((g$stx$8199$1pJll4 g$fmls$8200$1pJll4)
        ((case-lambda
           ((g$t$8201$1pJll4)
            ((case-lambda
               ((g$ls/false$8202$1pJll4)
                (if g$ls/false$8202$1pJll4
                  (apply
                    (case-lambda
                      ((g$id*$8203$1pJll4 g$last$8204$1pJll4)
                       ((letrec ((g$f$8205$1pJll4
                                   (case-lambda
                                     ((g$id*$8206$1pJll4)
                                      (if (null? g$id*$8206$1pJll4)
                                        (values)
                                        (if (not (g$id?$7375$1pJll4
                                                   (car g$id*$8206$1pJll4)))
                                          (g$syntax-violation$7764$1pJll4
                                            '#f
                                            '"not an identifier"
                                            g$stx$8199$1pJll4
                                            (car g$id*$8206$1pJll4))
                                          (begin
                                            (g$f$8205$1pJll4
                                              (cdr g$id*$8206$1pJll4))
                                            (if (g$bound-id-member?$7382$1pJll4
                                                  (car g$id*$8206$1pJll4)
                                                  (cdr g$id*$8206$1pJll4))
                                              (g$syntax-violation$7764$1pJll4
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8199$1pJll4
                                                (car g$id*$8206$1pJll4))
                                              (void)))))))))
                          g$f$8205$1pJll4)
                        (if (g$id?$7375$1pJll4 g$last$8204$1pJll4)
                          (cons g$last$8204$1pJll4 g$id*$8203$1pJll4)
                          (if (g$syntax-null?$7370$1pJll4 g$last$8204$1pJll4)
                            g$id*$8203$1pJll4
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"not an identifier"
                              g$stx$8199$1pJll4
                              g$last$8204$1pJll4))))))
                    g$ls/false$8202$1pJll4)
                  ((case-lambda
                     ((g$t$8207$1pJll4)
                      ((case-lambda
                         ((g$ls/false$8208$1pJll4)
                          (if g$ls/false$8208$1pJll4
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7764$1pJll4
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8199$1pJll4
                                   g$fmls$8200$1pJll4)))
                              g$ls/false$8208$1pJll4)
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"invalid syntax"
                              g$t$8207$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4 g$t$8207$1pJll4 '_))))
                   g$t$8201$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8201$1pJll4
               '#(each+ any () any)))))
         g$fmls$8200$1pJll4))))
   (g$let-macro$7619$1pJll4
     g$let-macro$11065$1pJll4
     (case-lambda
       ((g$stx$8209$1pJll4)
        ((case-lambda
           ((g$t$8210$1pJll4)
            ((case-lambda
               ((g$ls/false$8211$1pJll4)
                (if g$ls/false$8211$1pJll4
                  (apply
                    (case-lambda
                      ((g$lhs*$8212$1pJll4
                         g$rhs*$8213$1pJll4
                         g$b$8214$1pJll4
                         g$b*$8215$1pJll4)
                       (if (g$valid-bound-ids?$7380$1pJll4 g$lhs*$8212$1pJll4)
                         (g$bless$7616$1pJll4
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8212$1pJll4
                                 (cons g$b$8214$1pJll4 g$b*$8215$1pJll4)))
                             g$rhs*$8213$1pJll4))
                         (g$invalid-fmls-error$7618$1pJll4
                           g$stx$8209$1pJll4
                           g$lhs*$8212$1pJll4))))
                    g$ls/false$8211$1pJll4)
                  ((case-lambda
                     ((g$t$8216$1pJll4)
                      ((case-lambda
                         ((g$ls/false$8217$1pJll4)
                          (if (if g$ls/false$8217$1pJll4
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8218$1pJll4
                                         g$lhs*$8219$1pJll4
                                         g$rhs*$8220$1pJll4
                                         g$b$8221$1pJll4
                                         g$b*$8222$1pJll4)
                                       (g$id?$7375$1pJll4 g$f$8218$1pJll4)))
                                    g$ls/false$8217$1pJll4))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8223$1pJll4
                                   g$lhs*$8224$1pJll4
                                   g$rhs*$8225$1pJll4
                                   g$b$8226$1pJll4
                                   g$b*$8227$1pJll4)
                                 (if (g$valid-bound-ids?$7380$1pJll4
                                       g$lhs*$8224$1pJll4)
                                   (g$bless$7616$1pJll4
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8223$1pJll4
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8224$1pJll4
                                                 (cons
                                                   g$b$8226$1pJll4
                                                   g$b*$8227$1pJll4)))))
                                         g$f$8223$1pJll4)
                                       g$rhs*$8225$1pJll4))
                                   (g$invalid-fmls-error$7618$1pJll4
                                     g$stx$8209$1pJll4
                                     g$lhs*$8224$1pJll4))))
                              g$ls/false$8217$1pJll4)
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"invalid syntax"
                              g$t$8216$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$8216$1pJll4
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8210$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8210$1pJll4
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8209$1pJll4))))
   (g$let-values-macro$7620$1pJll4
     g$let-values-macro$11066$1pJll4
     (case-lambda
       ((g$stx$8228$1pJll4)
        (letrec* ((g$rename$8229$1pJll4
                    (case-lambda
                      ((g$x$8280$1pJll4 g$old*$8281$1pJll4 g$new*$8282$1pJll4)
                       (begin
                         (if (not (g$id?$7375$1pJll4 g$x$8280$1pJll4))
                           (g$syntax-violation$7764$1pJll4
                             '#f
                             '"not an indentifier"
                             g$stx$8228$1pJll4
                             g$x$8280$1pJll4)
                           (void))
                         (if (g$bound-id-member?$7382$1pJll4
                               g$x$8280$1pJll4
                               g$old*$8281$1pJll4)
                           (g$syntax-violation$7764$1pJll4
                             '#f
                             '"duplicate binding"
                             g$stx$8228$1pJll4
                             g$x$8280$1pJll4)
                           (void))
                         ((case-lambda
                            ((g$y$8283$1pJll4)
                             (values
                               g$y$8283$1pJll4
                               (cons g$x$8280$1pJll4 g$old*$8281$1pJll4)
                               (cons g$y$8283$1pJll4 g$new*$8282$1pJll4))))
                          (gensym
                            (g$syntax->datum$7767$1pJll4 g$x$8280$1pJll4)))))))
                  (g$rename*$8230$1pJll4
                    (case-lambda
                      ((g$x*$8271$1pJll4 g$old*$8272$1pJll4 g$new*$8273$1pJll4)
                       (if (null? g$x*$8271$1pJll4)
                         (values '() g$old*$8272$1pJll4 g$new*$8273$1pJll4)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8229$1pJll4
                                (car g$x*$8271$1pJll4)
                                g$old*$8272$1pJll4
                                g$new*$8273$1pJll4)))
                           (case-lambda
                             ((g$x$8274$1pJll4
                                g$old*$8275$1pJll4
                                g$new*$8276$1pJll4)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8230$1pJll4
                                     (cdr g$x*$8271$1pJll4)
                                     g$old*$8275$1pJll4
                                     g$new*$8276$1pJll4)))
                                (case-lambda
                                  ((g$x*$8277$1pJll4
                                     g$old*$8278$1pJll4
                                     g$new*$8279$1pJll4)
                                   (values
                                     (cons g$x$8274$1pJll4 g$x*$8277$1pJll4)
                                     g$old*$8278$1pJll4
                                     g$new*$8279$1pJll4))))))))))))
          ((case-lambda
             ((g$t$8231$1pJll4)
              ((case-lambda
                 ((g$ls/false$8232$1pJll4)
                  (if g$ls/false$8232$1pJll4
                    (apply
                      (case-lambda
                        ((g$b$8233$1pJll4 g$b*$8234$1pJll4)
                         (g$cons*$5505$1pJll4
                           (g$bless$7616$1pJll4 'let)
                           '()
                           g$b$8233$1pJll4
                           g$b*$8234$1pJll4)))
                      g$ls/false$8232$1pJll4)
                    ((case-lambda
                       ((g$t$8235$1pJll4)
                        ((case-lambda
                           ((g$ls/false$8236$1pJll4)
                            (if g$ls/false$8236$1pJll4
                              (apply
                                (case-lambda
                                  ((g$lhs*$8237$1pJll4
                                     g$rhs*$8238$1pJll4
                                     g$b$8239$1pJll4
                                     g$b*$8240$1pJll4)
                                   (g$bless$7616$1pJll4
                                     ((letrec ((g$f$8241$1pJll4
                                                 (case-lambda
                                                   ((g$lhs*$8242$1pJll4
                                                      g$rhs*$8243$1pJll4
                                                      g$old*$8244$1pJll4
                                                      g$new*$8245$1pJll4)
                                                    (if (null?
                                                          g$lhs*$8242$1pJll4)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8244$1pJll4
                                                               g$new*$8245$1pJll4)
                                                          (cons
                                                            g$b$8239$1pJll4
                                                            g$b*$8240$1pJll4)))
                                                      ((case-lambda
                                                         ((g$t$8246$1pJll4)
                                                          ((case-lambda
                                                             ((g$ls/false$8247$1pJll4)
                                                              (if g$ls/false$8247$1pJll4
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8248$1pJll4)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8230$1pJll4
                                                                            g$x*$8248$1pJll4
                                                                            g$old*$8244$1pJll4
                                                                            g$new*$8245$1pJll4)))
                                                                       (case-lambda
                                                                         ((g$y*$8252$1pJll4
                                                                            g$old*$8253$1pJll4
                                                                            g$new*$8254$1pJll4)
                                                                          ((case-lambda
                                                                             ((g$new*$8255$1pJll4
                                                                                g$old*$8256$1pJll4
                                                                                g$y*$8257$1pJll4)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8243$1pJll4))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8257$1pJll4
                                                                                  (g$f$8241$1pJll4
                                                                                    (cdr g$lhs*$8242$1pJll4)
                                                                                    (cdr g$rhs*$8243$1pJll4)
                                                                                    g$old*$8256$1pJll4
                                                                                    g$new*$8255$1pJll4)))))
                                                                           g$new*$8254$1pJll4
                                                                           g$old*$8253$1pJll4
                                                                           g$y*$8252$1pJll4))))))
                                                                  g$ls/false$8247$1pJll4)
                                                                ((case-lambda
                                                                   ((g$t$8258$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8259$1pJll4)
                                                                        (if g$ls/false$8259$1pJll4
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8260$1pJll4
                                                                                 g$x$8261$1pJll4)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8229$1pJll4
                                                                                      g$x$8261$1pJll4
                                                                                      g$old*$8244$1pJll4
                                                                                      g$new*$8245$1pJll4)))
                                                                                 (case-lambda
                                                                                   ((g$y$8262$1pJll4
                                                                                      g$old*$8263$1pJll4
                                                                                      g$new*$8264$1pJll4)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8230$1pJll4
                                                                                           g$x*$8260$1pJll4
                                                                                           g$old*$8263$1pJll4
                                                                                           g$new*$8264$1pJll4)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8265$1pJll4
                                                                                           g$old*$8266$1pJll4
                                                                                           g$new*$8267$1pJll4)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8243$1pJll4))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8265$1pJll4
                                                                                               g$y$8262$1pJll4)
                                                                                             (g$f$8241$1pJll4
                                                                                               (cdr g$lhs*$8242$1pJll4)
                                                                                               (cdr g$rhs*$8243$1pJll4)
                                                                                               g$old*$8266$1pJll4
                                                                                               g$new*$8267$1pJll4)))))))))))
                                                                            g$ls/false$8259$1pJll4)
                                                                          ((case-lambda
                                                                             ((g$t$8268$1pJll4)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8269$1pJll4)
                                                                                  (if g$ls/false$8269$1pJll4
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8270$1pJll4)
                                                                                         (g$syntax-violation$7764$1pJll4
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8228$1pJll4
                                                                                           g$others$8270$1pJll4)))
                                                                                      g$ls/false$8269$1pJll4)
                                                                                    (g$syntax-violation$7764$1pJll4
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8268$1pJll4))))
                                                                               (g$syntax-dispatch$7653$1pJll4
                                                                                 g$t$8268$1pJll4
                                                                                 'any))))
                                                                           g$t$8258$1pJll4))))
                                                                     (g$syntax-dispatch$7653$1pJll4
                                                                       g$t$8258$1pJll4
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8246$1pJll4))))
                                                           (g$syntax-dispatch$7653$1pJll4
                                                             g$t$8246$1pJll4
                                                             'each-any))))
                                                       (car g$lhs*$8242$1pJll4)))))))
                                        g$f$8241$1pJll4)
                                      g$lhs*$8237$1pJll4
                                      g$rhs*$8238$1pJll4
                                      '()
                                      '()))))
                                g$ls/false$8236$1pJll4)
                              (g$syntax-violation$7764$1pJll4
                                '#f
                                '"invalid syntax"
                                g$t$8235$1pJll4))))
                         (g$syntax-dispatch$7653$1pJll4
                           g$t$8235$1pJll4
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8231$1pJll4))))
               (g$syntax-dispatch$7653$1pJll4
                 g$t$8231$1pJll4
                 '(_ () any . each-any)))))
           g$stx$8228$1pJll4)))))
   (g$let*-values-macro$7621$1pJll4
     g$let*-values-macro$11067$1pJll4
     (case-lambda
       ((g$stx$8284$1pJll4)
        (letrec* ((g$check$8285$1pJll4
                    (case-lambda
                      ((g$x*$8309$1pJll4)
                       (if (not (null? g$x*$8309$1pJll4))
                         ((case-lambda
                            ((g$x$8310$1pJll4)
                             (begin
                               (if (not (g$id?$7375$1pJll4 g$x$8310$1pJll4))
                                 (g$syntax-violation$7764$1pJll4
                                   '#f
                                   '"not an identifier"
                                   g$stx$8284$1pJll4
                                   g$x$8310$1pJll4)
                                 (void))
                               (g$check$8285$1pJll4 (cdr g$x*$8309$1pJll4))
                               (if (g$bound-id-member?$7382$1pJll4
                                     g$x$8310$1pJll4
                                     (cdr g$x*$8309$1pJll4))
                                 (g$syntax-violation$7764$1pJll4
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8284$1pJll4
                                   g$x$8310$1pJll4)
                                 (void)))))
                          (car g$x*$8309$1pJll4))
                         (void))))))
          ((case-lambda
             ((g$t$8286$1pJll4)
              ((case-lambda
                 ((g$ls/false$8287$1pJll4)
                  (if g$ls/false$8287$1pJll4
                    (apply
                      (case-lambda
                        ((g$b$8288$1pJll4 g$b*$8289$1pJll4)
                         (g$cons*$5505$1pJll4
                           (g$bless$7616$1pJll4 'let)
                           '()
                           g$b$8288$1pJll4
                           g$b*$8289$1pJll4)))
                      g$ls/false$8287$1pJll4)
                    ((case-lambda
                       ((g$t$8290$1pJll4)
                        ((case-lambda
                           ((g$ls/false$8291$1pJll4)
                            (if g$ls/false$8291$1pJll4
                              (apply
                                (case-lambda
                                  ((g$lhs*$8292$1pJll4
                                     g$rhs*$8293$1pJll4
                                     g$b$8294$1pJll4
                                     g$b*$8295$1pJll4)
                                   (g$bless$7616$1pJll4
                                     ((letrec ((g$f$8296$1pJll4
                                                 (case-lambda
                                                   ((g$lhs*$8297$1pJll4
                                                      g$rhs*$8298$1pJll4)
                                                    (if (null?
                                                          g$lhs*$8297$1pJll4)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8294$1pJll4
                                                          g$b*$8295$1pJll4))
                                                      ((case-lambda
                                                         ((g$t$8299$1pJll4)
                                                          ((case-lambda
                                                             ((g$ls/false$8300$1pJll4)
                                                              (if g$ls/false$8300$1pJll4
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8301$1pJll4)
                                                                     (begin
                                                                       (g$check$8285$1pJll4
                                                                         g$x*$8301$1pJll4)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8298$1pJll4))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8301$1pJll4
                                                                           (g$f$8296$1pJll4
                                                                             (cdr g$lhs*$8297$1pJll4)
                                                                             (cdr g$rhs*$8298$1pJll4)))))))
                                                                  g$ls/false$8300$1pJll4)
                                                                ((case-lambda
                                                                   ((g$t$8302$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8303$1pJll4)
                                                                        (if g$ls/false$8303$1pJll4
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8304$1pJll4
                                                                                 g$x$8305$1pJll4)
                                                                               (begin
                                                                                 (g$check$8285$1pJll4
                                                                                   (cons
                                                                                     g$x$8305$1pJll4
                                                                                     g$x*$8304$1pJll4))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8298$1pJll4))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8304$1pJll4
                                                                                       g$x$8305$1pJll4)
                                                                                     (g$f$8296$1pJll4
                                                                                       (cdr g$lhs*$8297$1pJll4)
                                                                                       (cdr g$rhs*$8298$1pJll4)))))))
                                                                            g$ls/false$8303$1pJll4)
                                                                          ((case-lambda
                                                                             ((g$t$8306$1pJll4)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8307$1pJll4)
                                                                                  (if g$ls/false$8307$1pJll4
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8308$1pJll4)
                                                                                         (g$syntax-violation$7764$1pJll4
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8284$1pJll4
                                                                                           g$others$8308$1pJll4)))
                                                                                      g$ls/false$8307$1pJll4)
                                                                                    (g$syntax-violation$7764$1pJll4
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8306$1pJll4))))
                                                                               (g$syntax-dispatch$7653$1pJll4
                                                                                 g$t$8306$1pJll4
                                                                                 'any))))
                                                                           g$t$8302$1pJll4))))
                                                                     (g$syntax-dispatch$7653$1pJll4
                                                                       g$t$8302$1pJll4
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8299$1pJll4))))
                                                           (g$syntax-dispatch$7653$1pJll4
                                                             g$t$8299$1pJll4
                                                             'each-any))))
                                                       (car g$lhs*$8297$1pJll4)))))))
                                        g$f$8296$1pJll4)
                                      g$lhs*$8292$1pJll4
                                      g$rhs*$8293$1pJll4))))
                                g$ls/false$8291$1pJll4)
                              (g$syntax-violation$7764$1pJll4
                                '#f
                                '"invalid syntax"
                                g$t$8290$1pJll4))))
                         (g$syntax-dispatch$7653$1pJll4
                           g$t$8290$1pJll4
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8286$1pJll4))))
               (g$syntax-dispatch$7653$1pJll4
                 g$t$8286$1pJll4
                 '(_ () any . each-any)))))
           g$stx$8284$1pJll4)))))
   (g$trace-lambda-macro$7622$1pJll4
     g$trace-lambda-macro$11068$1pJll4
     (case-lambda
       ((g$stx$8311$1pJll4)
        ((case-lambda
           ((g$t$8312$1pJll4)
            ((case-lambda
               ((g$ls/false$8313$1pJll4)
                (if g$ls/false$8313$1pJll4
                  (apply
                    (case-lambda
                      ((g$who$8314$1pJll4
                         g$fmls$8315$1pJll4
                         g$b$8316$1pJll4
                         g$b*$8317$1pJll4)
                       (if (g$valid-bound-ids?$7380$1pJll4 g$fmls$8315$1pJll4)
                         (g$bless$7616$1pJll4
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8314$1pJll4)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8315$1pJll4
                                 (cons g$b$8316$1pJll4 g$b*$8317$1pJll4)))))
                         (g$invalid-fmls-error$7618$1pJll4
                           g$stx$8311$1pJll4
                           g$fmls$8315$1pJll4))))
                    g$ls/false$8313$1pJll4)
                  ((case-lambda
                     ((g$t$8318$1pJll4)
                      ((case-lambda
                         ((g$ls/false$8319$1pJll4)
                          (if g$ls/false$8319$1pJll4
                            (apply
                              (case-lambda
                                ((g$who$8320$1pJll4
                                   g$fmls$8321$1pJll4
                                   g$last$8322$1pJll4
                                   g$b$8323$1pJll4
                                   g$b*$8324$1pJll4)
                                 (if (g$valid-bound-ids?$7380$1pJll4
                                       (cons
                                         g$last$8322$1pJll4
                                         g$fmls$8321$1pJll4))
                                   (g$bless$7616$1pJll4
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8320$1pJll4)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8321$1pJll4
                                             g$last$8322$1pJll4)
                                           (cons
                                             g$b$8323$1pJll4
                                             g$b*$8324$1pJll4)))))
                                   (g$invalid-fmls-error$7618$1pJll4
                                     g$stx$8311$1pJll4
                                     (append
                                       g$fmls$8321$1pJll4
                                       g$last$8322$1pJll4)))))
                              g$ls/false$8319$1pJll4)
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"invalid syntax"
                              g$t$8318$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$8318$1pJll4
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8312$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8312$1pJll4
               '(_ any each-any any . each-any)))))
         g$stx$8311$1pJll4))))
   (g$trace-define-macro$7623$1pJll4
     g$trace-define-macro$11069$1pJll4
     (case-lambda
       ((g$stx$8325$1pJll4)
        ((case-lambda
           ((g$t$8326$1pJll4)
            ((case-lambda
               ((g$ls/false$8327$1pJll4)
                (if g$ls/false$8327$1pJll4
                  (apply
                    (case-lambda
                      ((g$who$8328$1pJll4
                         g$fmls$8329$1pJll4
                         g$b$8330$1pJll4
                         g$b*$8331$1pJll4)
                       (if (g$valid-bound-ids?$7380$1pJll4 g$fmls$8329$1pJll4)
                         (g$bless$7616$1pJll4
                           (list
                             'define
                             g$who$8328$1pJll4
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8328$1pJll4)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8329$1pJll4
                                   (cons g$b$8330$1pJll4 g$b*$8331$1pJll4))))))
                         (g$invalid-fmls-error$7618$1pJll4
                           g$stx$8325$1pJll4
                           g$fmls$8329$1pJll4))))
                    g$ls/false$8327$1pJll4)
                  ((case-lambda
                     ((g$t$8332$1pJll4)
                      ((case-lambda
                         ((g$ls/false$8333$1pJll4)
                          (if g$ls/false$8333$1pJll4
                            (apply
                              (case-lambda
                                ((g$who$8334$1pJll4
                                   g$fmls$8335$1pJll4
                                   g$last$8336$1pJll4
                                   g$b$8337$1pJll4
                                   g$b*$8338$1pJll4)
                                 (if (g$valid-bound-ids?$7380$1pJll4
                                       (cons
                                         g$last$8336$1pJll4
                                         g$fmls$8335$1pJll4))
                                   (g$bless$7616$1pJll4
                                     (list
                                       'define
                                       g$who$8334$1pJll4
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8334$1pJll4)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8335$1pJll4
                                               g$last$8336$1pJll4)
                                             (cons
                                               g$b$8337$1pJll4
                                               g$b*$8338$1pJll4))))))
                                   (g$invalid-fmls-error$7618$1pJll4
                                     g$stx$8325$1pJll4
                                     (append
                                       g$fmls$8335$1pJll4
                                       g$last$8336$1pJll4)))))
                              g$ls/false$8333$1pJll4)
                            ((case-lambda
                               ((g$t$8339$1pJll4)
                                ((case-lambda
                                   ((g$ls/false$8340$1pJll4)
                                    (if g$ls/false$8340$1pJll4
                                      (apply
                                        (case-lambda
                                          ((g$who$8341$1pJll4
                                             g$expr$8342$1pJll4)
                                           (if (g$id?$7375$1pJll4
                                                 g$who$8341$1pJll4)
                                             (g$bless$7616$1pJll4
                                               (list
                                                 'define
                                                 g$who$8341$1pJll4
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8342$1pJll4))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8341$1pJll4)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7764$1pJll4
                                               '#f
                                               '"invalid name"
                                               g$stx$8325$1pJll4))))
                                        g$ls/false$8340$1pJll4)
                                      (g$syntax-violation$7764$1pJll4
                                        '#f
                                        '"invalid syntax"
                                        g$t$8339$1pJll4))))
                                 (g$syntax-dispatch$7653$1pJll4
                                   g$t$8339$1pJll4
                                   '(_ any any)))))
                             g$t$8332$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$8332$1pJll4
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8326$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8326$1pJll4
               '(_ (any . each-any) any . each-any)))))
         g$stx$8325$1pJll4))))
   (g$trace-define-syntax-macro$7624$1pJll4
     g$trace-define-syntax-macro$11070$1pJll4
     (case-lambda
       ((g$stx$8343$1pJll4)
        ((case-lambda
           ((g$t$8344$1pJll4)
            ((case-lambda
               ((g$ls/false$8345$1pJll4)
                (if g$ls/false$8345$1pJll4
                  (apply
                    (case-lambda
                      ((g$who$8346$1pJll4 g$expr$8347$1pJll4)
                       (if (g$id?$7375$1pJll4 g$who$8346$1pJll4)
                         (g$bless$7616$1pJll4
                           (list
                             'define-syntax
                             g$who$8346$1pJll4
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8346$1pJll4)
                               g$expr$8347$1pJll4)))
                         (g$syntax-violation$7764$1pJll4
                           '#f
                           '"invalid name"
                           g$stx$8343$1pJll4))))
                    g$ls/false$8345$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8344$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8344$1pJll4 '(_ any any)))))
         g$stx$8343$1pJll4))))
   (g$trace-let/rec-syntax$7625$1pJll4
     g$trace-let/rec-syntax$11071$1pJll4
     (case-lambda
       ((g$who$8348$1pJll4)
        (case-lambda
          ((g$stx$8349$1pJll4)
           ((case-lambda
              ((g$t$8350$1pJll4)
               ((case-lambda
                  ((g$ls/false$8351$1pJll4)
                   (if g$ls/false$8351$1pJll4
                     (apply
                       (case-lambda
                         ((g$lhs*$8352$1pJll4
                            g$rhs*$8353$1pJll4
                            g$b$8354$1pJll4
                            g$b*$8355$1pJll4)
                          (if (g$valid-bound-ids?$7380$1pJll4
                                g$lhs*$8352$1pJll4)
                            ((case-lambda
                               ((g$rhs*$8356$1pJll4)
                                (g$bless$7616$1pJll4
                                  (cons
                                    g$who$8348$1pJll4
                                    (cons
                                      (map list
                                           g$lhs*$8352$1pJll4
                                           g$rhs*$8356$1pJll4)
                                      (cons
                                        g$b$8354$1pJll4
                                        g$b*$8355$1pJll4))))))
                             (map (case-lambda
                                    ((g$lhs$8357$1pJll4 g$rhs$8358$1pJll4)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8357$1pJll4)
                                       g$rhs$8358$1pJll4)))
                                  g$lhs*$8352$1pJll4
                                  g$rhs*$8353$1pJll4))
                            (g$invalid-fmls-error$7618$1pJll4
                              g$stx$8349$1pJll4
                              g$lhs*$8352$1pJll4))))
                       g$ls/false$8351$1pJll4)
                     (g$syntax-violation$7764$1pJll4
                       '#f
                       '"invalid syntax"
                       g$t$8350$1pJll4))))
                (g$syntax-dispatch$7653$1pJll4
                  g$t$8350$1pJll4
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8349$1pJll4))))))
   (g$trace-let-syntax-macro$7626$1pJll4
     g$trace-let-syntax-macro$11072$1pJll4
     (g$trace-let/rec-syntax$7625$1pJll4 'let-syntax))
   (g$trace-letrec-syntax-macro$7627$1pJll4
     g$trace-letrec-syntax-macro$11073$1pJll4
     (g$trace-let/rec-syntax$7625$1pJll4 'letrec-syntax))
   (g$guard-macro$7628$1pJll4
     g$guard-macro$11074$1pJll4
     (case-lambda
       ((g$x$8359$1pJll4)
        (letrec* ((g$gen-clauses$8360$1pJll4
                    (case-lambda
                      ((g$con$8372$1pJll4
                         g$outerk$8373$1pJll4
                         g$clause*$8374$1pJll4)
                       (letrec* ((g$f$8375$1pJll4
                                   (case-lambda
                                     ((g$x$8403$1pJll4 g$k$8404$1pJll4)
                                      ((case-lambda
                                         ((g$t$8405$1pJll4)
                                          ((case-lambda
                                             ((g$ls/false$8406$1pJll4)
                                              (if g$ls/false$8406$1pJll4
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8407$1pJll4
                                                       g$p$8408$1pJll4)
                                                     ((case-lambda
                                                        ((g$t$8409$1pJll4)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8409$1pJll4
                                                               g$e$8407$1pJll4))
                                                           (list
                                                             'if
                                                             g$t$8409$1pJll4
                                                             (list
                                                               g$p$8408$1pJll4
                                                               g$t$8409$1pJll4)
                                                             g$k$8404$1pJll4))))
                                                      (gensym))))
                                                  g$ls/false$8406$1pJll4)
                                                ((case-lambda
                                                   ((g$t$8410$1pJll4)
                                                    ((case-lambda
                                                       ((g$ls/false$8411$1pJll4)
                                                        (if g$ls/false$8411$1pJll4
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8412$1pJll4)
                                                               ((case-lambda
                                                                  ((g$t$8413$1pJll4)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8413$1pJll4
                                                                         g$e$8412$1pJll4))
                                                                     (list
                                                                       'if
                                                                       g$t$8413$1pJll4
                                                                       g$t$8413$1pJll4
                                                                       g$k$8404$1pJll4))))
                                                                (gensym))))
                                                            g$ls/false$8411$1pJll4)
                                                          ((case-lambda
                                                             ((g$t$8414$1pJll4)
                                                              ((case-lambda
                                                                 ((g$ls/false$8415$1pJll4)
                                                                  (if g$ls/false$8415$1pJll4
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8416$1pJll4
                                                                           g$v$8417$1pJll4
                                                                           g$v*$8418$1pJll4)
                                                                         (list
                                                                           'if
                                                                           g$e$8416$1pJll4
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8417$1pJll4
                                                                               g$v*$8418$1pJll4))
                                                                           g$k$8404$1pJll4)))
                                                                      g$ls/false$8415$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$t$8419$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8420$1pJll4)
                                                                            (if g$ls/false$8420$1pJll4
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7764$1pJll4
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8403$1pJll4)))
                                                                                g$ls/false$8420$1pJll4)
                                                                              (g$syntax-violation$7764$1pJll4
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8419$1pJll4))))
                                                                         (g$syntax-dispatch$7653$1pJll4
                                                                           g$t$8419$1pJll4
                                                                           '_))))
                                                                     g$t$8414$1pJll4))))
                                                               (g$syntax-dispatch$7653$1pJll4
                                                                 g$t$8414$1pJll4
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8410$1pJll4))))
                                                     (g$syntax-dispatch$7653$1pJll4
                                                       g$t$8410$1pJll4
                                                       '(any)))))
                                                 g$t$8405$1pJll4))))
                                           (g$syntax-dispatch$7653$1pJll4
                                             g$t$8405$1pJll4
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8403$1pJll4))))
                                 (g$f*$8376$1pJll4
                                   (case-lambda
                                     ((g$x*$8383$1pJll4)
                                      ((case-lambda
                                         ((g$t$8384$1pJll4)
                                          ((case-lambda
                                             ((g$ls/false$8385$1pJll4)
                                              (if g$ls/false$8385$1pJll4
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8372$1pJll4)
                                                       '#t)))
                                                  g$ls/false$8385$1pJll4)
                                                ((case-lambda
                                                   ((g$t$8386$1pJll4)
                                                    ((case-lambda
                                                       ((g$ls/false$8387$1pJll4)
                                                        (if g$ls/false$8387$1pJll4
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8388$1pJll4
                                                                 g$e*$8389$1pJll4)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8388$1pJll4
                                                                     g$e*$8389$1pJll4))
                                                                 '#f)))
                                                            g$ls/false$8387$1pJll4)
                                                          ((case-lambda
                                                             ((g$t$8390$1pJll4)
                                                              ((case-lambda
                                                                 ((g$ls/false$8391$1pJll4)
                                                                  (if g$ls/false$8391$1pJll4
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8392$1pJll4
                                                                           g$cls*$8393$1pJll4)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8376$1pJll4
                                                                                g$cls*$8393$1pJll4)))
                                                                           (case-lambda
                                                                             ((g$e$8396$1pJll4
                                                                                g$g$8397$1pJll4)
                                                                              ((case-lambda
                                                                                 ((g$g$8398$1pJll4
                                                                                    g$e$8399$1pJll4)
                                                                                  (values
                                                                                    (g$f$8375$1pJll4
                                                                                      g$cls$8392$1pJll4
                                                                                      g$e$8399$1pJll4)
                                                                                    g$g$8398$1pJll4)))
                                                                               g$g$8397$1pJll4
                                                                               g$e$8396$1pJll4))))))
                                                                      g$ls/false$8391$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$t$8400$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8401$1pJll4)
                                                                            (if g$ls/false$8401$1pJll4
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8402$1pJll4)
                                                                                   (g$syntax-violation$7764$1pJll4
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8402$1pJll4)))
                                                                                g$ls/false$8401$1pJll4)
                                                                              (g$syntax-violation$7764$1pJll4
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8400$1pJll4))))
                                                                         (g$syntax-dispatch$7653$1pJll4
                                                                           g$t$8400$1pJll4
                                                                           'any))))
                                                                     g$t$8390$1pJll4))))
                                                               (g$syntax-dispatch$7653$1pJll4
                                                                 g$t$8390$1pJll4
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8386$1pJll4))))
                                                     (g$syntax-dispatch$7653$1pJll4
                                                       g$t$8386$1pJll4
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8384$1pJll4))))
                                           (g$syntax-dispatch$7653$1pJll4
                                             g$t$8384$1pJll4
                                             '()))))
                                       g$x*$8383$1pJll4)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8376$1pJll4 g$clause*$8374$1pJll4)))
                           (case-lambda
                             ((g$code$8379$1pJll4 g$raisek$8380$1pJll4)
                              ((case-lambda
                                 ((g$raisek$8381$1pJll4 g$code$8382$1pJll4)
                                  (if g$raisek$8381$1pJll4
                                    (list
                                      g$outerk$8373$1pJll4
                                      g$code$8382$1pJll4)
                                    g$code$8382$1pJll4)))
                               g$raisek$8380$1pJll4
                               g$code$8379$1pJll4)))))))))
          ((case-lambda
             ((g$t$8361$1pJll4)
              ((case-lambda
                 ((g$ls/false$8362$1pJll4)
                  (if (if g$ls/false$8362$1pJll4
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8363$1pJll4
                                 g$clause*$8364$1pJll4
                                 g$b$8365$1pJll4
                                 g$b*$8366$1pJll4)
                               (g$id?$7375$1pJll4 g$con$8363$1pJll4)))
                            g$ls/false$8362$1pJll4))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8367$1pJll4
                           g$clause*$8368$1pJll4
                           g$b$8369$1pJll4
                           g$b*$8370$1pJll4)
                         ((case-lambda
                            ((g$outerk$8371$1pJll4)
                             (g$bless$7616$1pJll4
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8371$1pJll4)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8367$1pJll4)
                                           (g$gen-clauses$8360$1pJll4
                                             g$con$8367$1pJll4
                                             g$outerk$8371$1pJll4
                                             g$clause*$8368$1pJll4))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8369$1pJll4
                                                 g$b*$8370$1pJll4))))))))))))
                          (gensym))))
                      g$ls/false$8362$1pJll4)
                    (g$syntax-violation$7764$1pJll4
                      '#f
                      '"invalid syntax"
                      g$t$8361$1pJll4))))
               (g$syntax-dispatch$7653$1pJll4
                 g$t$8361$1pJll4
                 '(_ (any . each-any) any . each-any)))))
           g$x$8359$1pJll4)))))
   (g$define-enumeration-macro$7629$1pJll4
     g$define-enumeration-macro$11075$1pJll4
     (case-lambda
       ((g$stx$8421$1pJll4)
        (letrec* ((g$set?$8422$1pJll4
                    (case-lambda
                      ((g$x$8435$1pJll4)
                       ((case-lambda
                          ((g$t$8436$1pJll4)
                           (if g$t$8436$1pJll4
                             g$t$8436$1pJll4
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8435$1pJll4)
                                          (cdr g$x$8435$1pJll4)))
                                 (begin
                                   '#f
                                   (g$set?$8422$1pJll4 (cdr g$x$8435$1pJll4)))
                                 '#f)))))
                        (null? g$x$8435$1pJll4)))))
                  (g$remove-dups$8423$1pJll4
                    (case-lambda
                      ((g$ls$8434$1pJll4)
                       (if (null? g$ls$8434$1pJll4)
                         '()
                         (cons
                           (car g$ls$8434$1pJll4)
                           (g$remove-dups$8423$1pJll4
                             (g$remq$5510$1pJll4
                               (car g$ls$8434$1pJll4)
                               (cdr g$ls$8434$1pJll4)))))))))
          ((case-lambda
             ((g$t$8424$1pJll4)
              ((case-lambda
                 ((g$ls/false$8425$1pJll4)
                  (if (if g$ls/false$8425$1pJll4
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8426$1pJll4
                                 g$id*$8427$1pJll4
                                 g$maker$8428$1pJll4)
                               (if (g$id?$7375$1pJll4 g$name$8426$1pJll4)
                                 (if (g$id?$7375$1pJll4 g$maker$8428$1pJll4)
                                   (begin
                                     '#f
                                     (g$for-all$5503$1pJll4
                                       g$id?$7375$1pJll4
                                       g$id*$8427$1pJll4))
                                   '#f)
                                 '#f)))
                            g$ls/false$8425$1pJll4))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8429$1pJll4
                           g$id*$8430$1pJll4
                           g$maker$8431$1pJll4)
                         ((case-lambda
                            ((g$name*$8432$1pJll4 g$mk$8433$1pJll4)
                             (g$bless$7616$1pJll4
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8433$1pJll4
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8432$1pJll4))))
                                 (list
                                   'define-syntax
                                   g$name$8429$1pJll4
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8432$1pJll4))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8429$1pJll4)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8431$1pJll4
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8431$1pJll4)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8432$1pJll4))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8431$1pJll4)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8433$1pJll4
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8423$1pJll4
                            (g$syntax->datum$7767$1pJll4 g$id*$8430$1pJll4))
                          (gensym))))
                      g$ls/false$8425$1pJll4)
                    (g$syntax-violation$7764$1pJll4
                      '#f
                      '"invalid syntax"
                      g$t$8424$1pJll4))))
               (g$syntax-dispatch$7653$1pJll4
                 g$t$8424$1pJll4
                 '(_ any each-any any)))))
           g$stx$8421$1pJll4)))))
   (g$time-macro$7630$1pJll4
     g$time-macro$11076$1pJll4
     (case-lambda
       ((g$stx$8437$1pJll4)
        ((case-lambda
           ((g$t$8438$1pJll4)
            ((case-lambda
               ((g$ls/false$8439$1pJll4)
                (if g$ls/false$8439$1pJll4
                  (apply
                    (case-lambda
                      ((g$expr$8440$1pJll4)
                       ((case-lambda
                          ((g$str$8441$1pJll4)
                           (g$bless$7616$1pJll4
                             (list
                               'time-it
                               g$str$8441$1pJll4
                               (list 'lambda '() g$expr$8440$1pJll4)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6352$1pJll4)))
                          (case-lambda
                            ((g$p$8444$1pJll4 g$e$8445$1pJll4)
                             ((case-lambda
                                ((g$e$8446$1pJll4 g$p$8447$1pJll4)
                                 (begin
                                   (write
                                     (g$syntax->datum$7767$1pJll4
                                       g$expr$8440$1pJll4)
                                     g$p$8447$1pJll4)
                                   (g$e$8446$1pJll4))))
                              g$e$8445$1pJll4
                              g$p$8444$1pJll4)))))))
                    g$ls/false$8439$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8438$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8438$1pJll4 '(_ any)))))
         g$stx$8437$1pJll4))))
   (g$delay-macro$7631$1pJll4
     g$delay-macro$11077$1pJll4
     (case-lambda
       ((g$stx$8448$1pJll4)
        ((case-lambda
           ((g$t$8449$1pJll4)
            ((case-lambda
               ((g$ls/false$8450$1pJll4)
                (if g$ls/false$8450$1pJll4
                  (apply
                    (case-lambda
                      ((g$expr$8451$1pJll4)
                       (g$bless$7616$1pJll4
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8451$1pJll4)))))
                    g$ls/false$8450$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8449$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8449$1pJll4 '(_ any)))))
         g$stx$8448$1pJll4))))
   (g$assert-macro$7632$1pJll4
     g$assert-macro$11078$1pJll4
     (case-lambda
       ((g$stx$8452$1pJll4)
        ((case-lambda
           ((g$t$8453$1pJll4)
            ((case-lambda
               ((g$ls/false$8454$1pJll4)
                (if g$ls/false$8454$1pJll4
                  (apply
                    (case-lambda
                      ((g$expr$8455$1pJll4)
                       ((case-lambda
                          ((g$pos$8456$1pJll4)
                           (g$bless$7616$1pJll4
                             (list
                               'unless
                               g$expr$8455$1pJll4
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8455$1pJll4)
                                 (list 'quote g$pos$8456$1pJll4))))))
                        ((case-lambda
                           ((g$t$8457$1pJll4)
                            (if g$t$8457$1pJll4
                              g$t$8457$1pJll4
                              (begin
                                '#f
                                (g$expression-position$7759$1pJll4
                                  g$expr$8455$1pJll4)))))
                         (g$expression-position$7759$1pJll4
                           g$stx$8452$1pJll4)))))
                    g$ls/false$8454$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8453$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8453$1pJll4 '(_ any)))))
         g$stx$8452$1pJll4))))
   (g$endianness-macro$7633$1pJll4
     g$endianness-macro$11079$1pJll4
     (case-lambda
       ((g$stx$8458$1pJll4)
        ((case-lambda
           ((g$t$8459$1pJll4)
            ((case-lambda
               ((g$ls/false$8460$1pJll4)
                (if g$ls/false$8460$1pJll4
                  (apply
                    (case-lambda
                      ((g$e$8461$1pJll4)
                       ((case-lambda
                          ((g$t$8462$1pJll4)
                           (if (memv g$t$8462$1pJll4 '(little))
                             (g$bless$7616$1pJll4 ''little)
                             (if (memv g$t$8462$1pJll4 '(big))
                               (g$bless$7616$1pJll4 ''big)
                               (g$syntax-violation$7764$1pJll4
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8458$1pJll4)))))
                        (g$syntax->datum$7767$1pJll4 g$e$8461$1pJll4))))
                    g$ls/false$8460$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8459$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8459$1pJll4 '(_ any)))))
         g$stx$8458$1pJll4))))
   (g$identifier-syntax-macro$7634$1pJll4
     g$identifier-syntax-macro$11080$1pJll4
     (case-lambda
       ((g$stx$8463$1pJll4)
        ((case-lambda
           ((g$t$8464$1pJll4)
            ((case-lambda
               ((g$ls/false$8465$1pJll4)
                (if g$ls/false$8465$1pJll4
                  (apply
                    (case-lambda
                      ((g$expr$8466$1pJll4)
                       (g$bless$7616$1pJll4
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8466$1pJll4))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8466$1pJll4)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8465$1pJll4)
                  ((case-lambda
                     ((g$t$8467$1pJll4)
                      ((case-lambda
                         ((g$ls/false$8468$1pJll4)
                          (if (if g$ls/false$8468$1pJll4
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8469$1pJll4
                                         g$expr1$8470$1pJll4
                                         g$id2$8471$1pJll4
                                         g$expr2$8472$1pJll4
                                         g$expr3$8473$1pJll4)
                                       (if (g$id?$7375$1pJll4 g$id1$8469$1pJll4)
                                         (if (g$id?$7375$1pJll4
                                               g$id2$8471$1pJll4)
                                           (begin
                                             '#f
                                             (g$id?$7375$1pJll4
                                               g$expr2$8472$1pJll4))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8468$1pJll4))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8474$1pJll4
                                   g$expr1$8475$1pJll4
                                   g$id2$8476$1pJll4
                                   g$expr2$8477$1pJll4
                                   g$expr3$8478$1pJll4)
                                 (g$bless$7616$1pJll4
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8475$1pJll4))
                                         (list
                                           (list 'set! 'id g$expr2$8477$1pJll4)
                                           (list 'syntax g$expr3$8478$1pJll4))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8475$1pJll4
                                               '(e* ...))))))))))
                              g$ls/false$8468$1pJll4)
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"invalid syntax"
                              g$t$8467$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$8467$1pJll4
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8464$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8464$1pJll4 '(_ any)))))
         g$stx$8463$1pJll4))))
   (g$do-macro$7635$1pJll4
     g$do-macro$11081$1pJll4
     (case-lambda
       ((g$stx$8479$1pJll4)
        (letrec* ((g$bind$8480$1pJll4
                    (case-lambda
                      ((g$x$8492$1pJll4)
                       ((case-lambda
                          ((g$t$8493$1pJll4)
                           ((case-lambda
                              ((g$ls/false$8494$1pJll4)
                               (if g$ls/false$8494$1pJll4
                                 (apply
                                   (case-lambda
                                     ((g$x$8495$1pJll4 g$init$8496$1pJll4)
                                      (list
                                        g$x$8495$1pJll4
                                        g$init$8496$1pJll4
                                        g$x$8495$1pJll4)))
                                   g$ls/false$8494$1pJll4)
                                 ((case-lambda
                                    ((g$t$8497$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$8498$1pJll4)
                                         (if g$ls/false$8498$1pJll4
                                           (apply
                                             (case-lambda
                                               ((g$x$8499$1pJll4
                                                  g$init$8500$1pJll4
                                                  g$step$8501$1pJll4)
                                                (list
                                                  g$x$8499$1pJll4
                                                  g$init$8500$1pJll4
                                                  g$step$8501$1pJll4)))
                                             g$ls/false$8498$1pJll4)
                                           ((case-lambda
                                              ((g$t$8502$1pJll4)
                                               ((case-lambda
                                                  ((g$ls/false$8503$1pJll4)
                                                   (if g$ls/false$8503$1pJll4
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7764$1pJll4
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8479$1pJll4)))
                                                       g$ls/false$8503$1pJll4)
                                                     (g$syntax-violation$7764$1pJll4
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8502$1pJll4))))
                                                (g$syntax-dispatch$7653$1pJll4
                                                  g$t$8502$1pJll4
                                                  '_))))
                                            g$t$8497$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$8497$1pJll4
                                        '(any any any)))))
                                  g$t$8493$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$8493$1pJll4
                              '(any any)))))
                        g$x$8492$1pJll4)))))
          ((case-lambda
             ((g$t$8481$1pJll4)
              ((case-lambda
                 ((g$ls/false$8482$1pJll4)
                  (if g$ls/false$8482$1pJll4
                    (apply
                      (case-lambda
                        ((g$binding*$8483$1pJll4
                           g$test$8484$1pJll4
                           g$expr*$8485$1pJll4
                           g$command*$8486$1pJll4)
                         ((case-lambda
                            ((g$t$8487$1pJll4)
                             ((case-lambda
                                ((g$ls/false$8488$1pJll4)
                                 (if g$ls/false$8488$1pJll4
                                   (apply
                                     (case-lambda
                                       ((g$x*$8489$1pJll4
                                          g$init*$8490$1pJll4
                                          g$step*$8491$1pJll4)
                                        (if (g$valid-bound-ids?$7380$1pJll4
                                              g$x*$8489$1pJll4)
                                          (g$bless$7616$1pJll4
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8489$1pJll4
                                                    (list
                                                      'if
                                                      g$test$8484$1pJll4
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8485$1pJll4))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8486$1pJll4
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8491$1pJll4))))))))
                                              (cons 'loop g$init*$8490$1pJll4)))
                                          (g$syntax-violation$7764$1pJll4
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8479$1pJll4))))
                                     g$ls/false$8488$1pJll4)
                                   (g$syntax-violation$7764$1pJll4
                                     '#f
                                     '"invalid syntax"
                                     g$t$8487$1pJll4))))
                              (g$syntax-dispatch$7653$1pJll4
                                g$t$8487$1pJll4
                                '#(each (any any any))))))
                          (map g$bind$8480$1pJll4 g$binding*$8483$1pJll4))))
                      g$ls/false$8482$1pJll4)
                    (g$syntax-violation$7764$1pJll4
                      '#f
                      '"invalid syntax"
                      g$t$8481$1pJll4))))
               (g$syntax-dispatch$7653$1pJll4
                 g$t$8481$1pJll4
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8479$1pJll4)))))
   (g$let*-macro$7636$1pJll4
     g$let*-macro$11082$1pJll4
     (case-lambda
       ((g$stx$8504$1pJll4)
        ((case-lambda
           ((g$t$8505$1pJll4)
            ((case-lambda
               ((g$ls/false$8506$1pJll4)
                (if (if g$ls/false$8506$1pJll4
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8507$1pJll4
                               g$rhs*$8508$1pJll4
                               g$b$8509$1pJll4
                               g$b*$8510$1pJll4)
                             (g$for-all$5503$1pJll4
                               g$id?$7375$1pJll4
                               g$lhs*$8507$1pJll4)))
                          g$ls/false$8506$1pJll4))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8511$1pJll4
                         g$rhs*$8512$1pJll4
                         g$b$8513$1pJll4
                         g$b*$8514$1pJll4)
                       (g$bless$7616$1pJll4
                         ((letrec ((g$f$8515$1pJll4
                                     (case-lambda
                                       ((g$x*$8516$1pJll4)
                                        (if (null? g$x*$8516$1pJll4)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8513$1pJll4
                                                g$b*$8514$1pJll4)))
                                          (list
                                            'let
                                            (list (car g$x*$8516$1pJll4))
                                            (g$f$8515$1pJll4
                                              (cdr g$x*$8516$1pJll4))))))))
                            g$f$8515$1pJll4)
                          (map list g$lhs*$8511$1pJll4 g$rhs*$8512$1pJll4)))))
                    g$ls/false$8506$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8505$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8505$1pJll4
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8504$1pJll4))))
   (g$or-macro$7637$1pJll4
     g$or-macro$11083$1pJll4
     (case-lambda
       ((g$stx$8517$1pJll4)
        ((case-lambda
           ((g$t$8518$1pJll4)
            ((case-lambda
               ((g$ls/false$8519$1pJll4)
                (if g$ls/false$8519$1pJll4
                  (apply (case-lambda (() '#f)) g$ls/false$8519$1pJll4)
                  ((case-lambda
                     ((g$t$8520$1pJll4)
                      ((case-lambda
                         ((g$ls/false$8521$1pJll4)
                          (if g$ls/false$8521$1pJll4
                            (apply
                              (case-lambda
                                ((g$e$8522$1pJll4 g$e*$8523$1pJll4)
                                 (g$bless$7616$1pJll4
                                   ((letrec ((g$f$8524$1pJll4
                                               (case-lambda
                                                 ((g$e$8525$1pJll4
                                                    g$e*$8526$1pJll4)
                                                  (if (null? g$e*$8526$1pJll4)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8525$1pJll4)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8525$1pJll4))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8524$1pJll4
                                                          (car g$e*$8526$1pJll4)
                                                          (cdr g$e*$8526$1pJll4)))))))))
                                      g$f$8524$1pJll4)
                                    g$e$8522$1pJll4
                                    g$e*$8523$1pJll4))))
                              g$ls/false$8521$1pJll4)
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"invalid syntax"
                              g$t$8520$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$8520$1pJll4
                         '(_ any . each-any)))))
                   g$t$8518$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8518$1pJll4 '(_)))))
         g$stx$8517$1pJll4))))
   (g$and-macro$7638$1pJll4
     g$and-macro$11084$1pJll4
     (case-lambda
       ((g$stx$8527$1pJll4)
        ((case-lambda
           ((g$t$8528$1pJll4)
            ((case-lambda
               ((g$ls/false$8529$1pJll4)
                (if g$ls/false$8529$1pJll4
                  (apply (case-lambda (() '#t)) g$ls/false$8529$1pJll4)
                  ((case-lambda
                     ((g$t$8530$1pJll4)
                      ((case-lambda
                         ((g$ls/false$8531$1pJll4)
                          (if g$ls/false$8531$1pJll4
                            (apply
                              (case-lambda
                                ((g$e$8532$1pJll4 g$e*$8533$1pJll4)
                                 (g$bless$7616$1pJll4
                                   ((letrec ((g$f$8534$1pJll4
                                               (case-lambda
                                                 ((g$e$8535$1pJll4
                                                    g$e*$8536$1pJll4)
                                                  (if (null? g$e*$8536$1pJll4)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8535$1pJll4)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8535$1pJll4
                                                        (cons
                                                          (g$f$8534$1pJll4
                                                            (car g$e*$8536$1pJll4)
                                                            (cdr g$e*$8536$1pJll4))
                                                          '(#f)))))))))
                                      g$f$8534$1pJll4)
                                    g$e$8532$1pJll4
                                    g$e*$8533$1pJll4))))
                              g$ls/false$8531$1pJll4)
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"invalid syntax"
                              g$t$8530$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$8530$1pJll4
                         '(_ any . each-any)))))
                   g$t$8528$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8528$1pJll4 '(_)))))
         g$stx$8527$1pJll4))))
   (g$cond-macro$7639$1pJll4
     g$cond-macro$11085$1pJll4
     (case-lambda
       ((g$stx$8537$1pJll4)
        ((case-lambda
           ((g$t$8538$1pJll4)
            ((case-lambda
               ((g$ls/false$8539$1pJll4)
                (if g$ls/false$8539$1pJll4
                  (apply
                    (case-lambda
                      ((g$cls$8540$1pJll4 g$cls*$8541$1pJll4)
                       (g$bless$7616$1pJll4
                         ((letrec ((g$f$8542$1pJll4
                                     (case-lambda
                                       ((g$cls$8543$1pJll4 g$cls*$8544$1pJll4)
                                        (if (null? g$cls*$8544$1pJll4)
                                          ((case-lambda
                                             ((g$t$8545$1pJll4)
                                              ((case-lambda
                                                 ((g$ls/false$8546$1pJll4)
                                                  (if g$ls/false$8546$1pJll4
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8547$1pJll4
                                                           g$e*$8548$1pJll4)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8547$1pJll4
                                                             g$e*$8548$1pJll4))))
                                                      g$ls/false$8546$1pJll4)
                                                    ((case-lambda
                                                       ((g$t$8549$1pJll4)
                                                        ((case-lambda
                                                           ((g$ls/false$8550$1pJll4)
                                                            (if g$ls/false$8550$1pJll4
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8551$1pJll4
                                                                     g$p$8552$1pJll4)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8551$1pJll4))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8552$1pJll4
                                                                         '(t))))))
                                                                g$ls/false$8550$1pJll4)
                                                              ((case-lambda
                                                                 ((g$t$8553$1pJll4)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8554$1pJll4)
                                                                      (if g$ls/false$8554$1pJll4
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8555$1pJll4)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8555$1pJll4
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8554$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$t$8556$1pJll4)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8557$1pJll4)
                                                                                (if g$ls/false$8557$1pJll4
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8558$1pJll4
                                                                                         g$e*$8559$1pJll4)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8558$1pJll4
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8559$1pJll4))))
                                                                                    g$ls/false$8557$1pJll4)
                                                                                  ((case-lambda
                                                                                     ((g$t$8560$1pJll4)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8561$1pJll4)
                                                                                          (if g$ls/false$8561$1pJll4
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7764$1pJll4
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8537$1pJll4)))
                                                                                              g$ls/false$8561$1pJll4)
                                                                                            (g$syntax-violation$7764$1pJll4
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8560$1pJll4))))
                                                                                       (g$syntax-dispatch$7653$1pJll4
                                                                                         g$t$8560$1pJll4
                                                                                         '_))))
                                                                                   g$t$8556$1pJll4))))
                                                                             (g$syntax-dispatch$7653$1pJll4
                                                                               g$t$8556$1pJll4
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8553$1pJll4))))
                                                                   (g$syntax-dispatch$7653$1pJll4
                                                                     g$t$8553$1pJll4
                                                                     '(any)))))
                                                               g$t$8549$1pJll4))))
                                                         (g$syntax-dispatch$7653$1pJll4
                                                           g$t$8549$1pJll4
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8545$1pJll4))))
                                               (g$syntax-dispatch$7653$1pJll4
                                                 g$t$8545$1pJll4
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8543$1pJll4)
                                          ((case-lambda
                                             ((g$t$8562$1pJll4)
                                              ((case-lambda
                                                 ((g$ls/false$8563$1pJll4)
                                                  (if g$ls/false$8563$1pJll4
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8564$1pJll4
                                                           g$e*$8565$1pJll4)
                                                         (g$syntax-violation$7764$1pJll4
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8537$1pJll4)))
                                                      g$ls/false$8563$1pJll4)
                                                    ((case-lambda
                                                       ((g$t$8566$1pJll4)
                                                        ((case-lambda
                                                           ((g$ls/false$8567$1pJll4)
                                                            (if g$ls/false$8567$1pJll4
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8568$1pJll4
                                                                     g$p$8569$1pJll4)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8568$1pJll4))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8569$1pJll4
                                                                         '(t))
                                                                       (g$f$8542$1pJll4
                                                                         (car g$cls*$8544$1pJll4)
                                                                         (cdr g$cls*$8544$1pJll4))))))
                                                                g$ls/false$8567$1pJll4)
                                                              ((case-lambda
                                                                 ((g$t$8570$1pJll4)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8571$1pJll4)
                                                                      (if g$ls/false$8571$1pJll4
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8572$1pJll4)
                                                                             (list
                                                                               'or
                                                                               g$e$8572$1pJll4
                                                                               (g$f$8542$1pJll4
                                                                                 (car g$cls*$8544$1pJll4)
                                                                                 (cdr g$cls*$8544$1pJll4)))))
                                                                          g$ls/false$8571$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$t$8573$1pJll4)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8574$1pJll4)
                                                                                (if g$ls/false$8574$1pJll4
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8575$1pJll4
                                                                                         g$e*$8576$1pJll4)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8575$1pJll4
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8576$1pJll4)
                                                                                         (g$f$8542$1pJll4
                                                                                           (car g$cls*$8544$1pJll4)
                                                                                           (cdr g$cls*$8544$1pJll4)))))
                                                                                    g$ls/false$8574$1pJll4)
                                                                                  ((case-lambda
                                                                                     ((g$t$8577$1pJll4)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8578$1pJll4)
                                                                                          (if g$ls/false$8578$1pJll4
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7764$1pJll4
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8537$1pJll4)))
                                                                                              g$ls/false$8578$1pJll4)
                                                                                            (g$syntax-violation$7764$1pJll4
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8577$1pJll4))))
                                                                                       (g$syntax-dispatch$7653$1pJll4
                                                                                         g$t$8577$1pJll4
                                                                                         '_))))
                                                                                   g$t$8573$1pJll4))))
                                                                             (g$syntax-dispatch$7653$1pJll4
                                                                               g$t$8573$1pJll4
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8570$1pJll4))))
                                                                   (g$syntax-dispatch$7653$1pJll4
                                                                     g$t$8570$1pJll4
                                                                     '(any)))))
                                                               g$t$8566$1pJll4))))
                                                         (g$syntax-dispatch$7653$1pJll4
                                                           g$t$8566$1pJll4
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8562$1pJll4))))
                                               (g$syntax-dispatch$7653$1pJll4
                                                 g$t$8562$1pJll4
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8543$1pJll4))))))
                            g$f$8542$1pJll4)
                          g$cls$8540$1pJll4
                          g$cls*$8541$1pJll4))))
                    g$ls/false$8539$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8538$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8538$1pJll4
               '(_ any . each-any)))))
         g$stx$8537$1pJll4))))
   (g$do-include$7640$1pJll4
     g$do-include$11086$1pJll4
     (case-lambda
       ((g$stx$8579$1pJll4 g$id$8580$1pJll4 g$filename$8581$1pJll4)
        ((case-lambda
           ((g$filename$8582$1pJll4)
            (begin
              (if (not (if (string? g$filename$8582$1pJll4)
                         (begin '#f (g$id?$7375$1pJll4 g$id$8580$1pJll4))
                         '#f))
                (g$syntax-violation$7764$1pJll4
                  '#f
                  '"invalid syntax"
                  g$stx$8579$1pJll4)
                (void))
              (cons
                (g$bless$7616$1pJll4 'begin)
                (g$with-input-from-file$6386$1pJll4
                  g$filename$8582$1pJll4
                  (case-lambda
                    (()
                     ((letrec ((g$f$8583$1pJll4
                                 (case-lambda
                                   ((g$ls$8584$1pJll4)
                                    ((case-lambda
                                       ((g$x$8585$1pJll4)
                                        (if (eof-object? g$x$8585$1pJll4)
                                          (reverse g$ls$8584$1pJll4)
                                          (g$f$8583$1pJll4
                                            (cons
                                              (g$datum->stx$7358$1pJll4
                                                g$id$8580$1pJll4
                                                g$x$8585$1pJll4)
                                              g$ls$8584$1pJll4)))))
                                     (read-annotated))))))
                        g$f$8583$1pJll4)
                      '()))))))))
         (g$stx->datum$7386$1pJll4 g$filename$8581$1pJll4)))))
   (g$include-macro$7641$1pJll4
     g$include-macro$11087$1pJll4
     (case-lambda
       ((g$e$8586$1pJll4)
        ((case-lambda
           ((g$t$8587$1pJll4)
            ((case-lambda
               ((g$ls/false$8588$1pJll4)
                (if g$ls/false$8588$1pJll4
                  (apply
                    (case-lambda
                      ((g$id$8589$1pJll4 g$filename$8590$1pJll4)
                       (g$do-include$7640$1pJll4
                         g$e$8586$1pJll4
                         g$id$8589$1pJll4
                         g$filename$8590$1pJll4)))
                    g$ls/false$8588$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8587$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8587$1pJll4 '(any any)))))
         g$e$8586$1pJll4))))
   (g$include-into-macro$7642$1pJll4
     g$include-into-macro$11088$1pJll4
     (case-lambda
       ((g$e$8591$1pJll4)
        ((case-lambda
           ((g$t$8592$1pJll4)
            ((case-lambda
               ((g$ls/false$8593$1pJll4)
                (if g$ls/false$8593$1pJll4
                  (apply
                    (case-lambda
                      ((g$id$8594$1pJll4 g$filename$8595$1pJll4)
                       (g$do-include$7640$1pJll4
                         g$e$8591$1pJll4
                         g$id$8594$1pJll4
                         g$filename$8595$1pJll4)))
                    g$ls/false$8593$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8592$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$8592$1pJll4 '(_ any any)))))
         g$e$8591$1pJll4))))
   (g$syntax-rules-macro$7643$1pJll4
     g$syntax-rules-macro$11089$1pJll4
     (case-lambda
       ((g$e$8596$1pJll4)
        ((case-lambda
           ((g$t$8597$1pJll4)
            ((case-lambda
               ((g$ls/false$8598$1pJll4)
                (if g$ls/false$8598$1pJll4
                  (apply
                    (case-lambda
                      ((g$lits$8599$1pJll4
                         g$pat*$8600$1pJll4
                         g$tmp*$8601$1pJll4)
                       (begin
                         (g$verify-literals$7656$1pJll4
                           g$lits$8599$1pJll4
                           g$e$8596$1pJll4)
                         (g$bless$7616$1pJll4
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8599$1pJll4
                                   (map (case-lambda
                                          ((g$pat$8602$1pJll4 g$tmp$8603$1pJll4)
                                           ((case-lambda
                                              ((g$t$8604$1pJll4)
                                               ((case-lambda
                                                  ((g$ls/false$8605$1pJll4)
                                                   (if g$ls/false$8605$1pJll4
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8606$1pJll4)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8606$1pJll4)
                                                            (list
                                                              'syntax
                                                              g$tmp$8603$1pJll4))))
                                                       g$ls/false$8605$1pJll4)
                                                     ((case-lambda
                                                        ((g$t$8607$1pJll4)
                                                         ((case-lambda
                                                            ((g$ls/false$8608$1pJll4)
                                                             (if g$ls/false$8608$1pJll4
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7764$1pJll4
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8596$1pJll4
                                                                      g$pat$8602$1pJll4)))
                                                                 g$ls/false$8608$1pJll4)
                                                               (g$syntax-violation$7764$1pJll4
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8607$1pJll4))))
                                                          (g$syntax-dispatch$7653$1pJll4
                                                            g$t$8607$1pJll4
                                                            '_))))
                                                      g$t$8604$1pJll4))))
                                                (g$syntax-dispatch$7653$1pJll4
                                                  g$t$8604$1pJll4
                                                  '(_ . any)))))
                                            g$pat$8602$1pJll4)))
                                        g$pat*$8600$1pJll4
                                        g$tmp*$8601$1pJll4)))))))))
                    g$ls/false$8598$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$8597$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$8597$1pJll4
               '(_ each-any . #(each (any any)))))))
         g$e$8596$1pJll4))))
   (g$quasiquote-macro$7644$1pJll4
     g$quasiquote-macro$11090$1pJll4
     ((case-lambda
        (()
         (letrec* ((g$datum$8609$1pJll4
                     (case-lambda
                       ((g$x$8740$1pJll4)
                        (list
                          (g$scheme-stx$7596$1pJll4 'quote)
                          (g$mkstx$7363$1pJll4 g$x$8740$1pJll4 '() '() '())))))
                   (g$quasicons*$8625$1pJll4
                     (case-lambda
                       ((g$x$8736$1pJll4 g$y$8737$1pJll4)
                        ((letrec ((g$f$8738$1pJll4
                                    (case-lambda
                                      ((g$x$8739$1pJll4)
                                       (if (null? g$x$8739$1pJll4)
                                         g$y$8737$1pJll4
                                         (g$quasicons$8626$1pJll4
                                           (car g$x$8739$1pJll4)
                                           (g$f$8738$1pJll4
                                             (cdr g$x$8739$1pJll4))))))))
                           g$f$8738$1pJll4)
                         g$x$8736$1pJll4))))
                   (g$quasicons$8626$1pJll4
                     (case-lambda
                       ((g$x$8717$1pJll4 g$y$8718$1pJll4)
                        ((case-lambda
                           ((g$t$8719$1pJll4)
                            ((case-lambda
                               ((g$ls/false$8720$1pJll4)
                                (if g$ls/false$8720$1pJll4
                                  (apply
                                    (case-lambda
                                      ((g$dy$8721$1pJll4)
                                       ((case-lambda
                                          ((g$t$8722$1pJll4)
                                           ((case-lambda
                                              ((g$ls/false$8723$1pJll4)
                                               (if g$ls/false$8723$1pJll4
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8724$1pJll4)
                                                      (list
                                                        (g$scheme-stx$7596$1pJll4
                                                          'quote)
                                                        (cons
                                                          g$dx$8724$1pJll4
                                                          g$dy$8721$1pJll4))))
                                                   g$ls/false$8723$1pJll4)
                                                 ((case-lambda
                                                    ((g$t$8725$1pJll4)
                                                     ((case-lambda
                                                        ((g$ls/false$8726$1pJll4)
                                                         (if g$ls/false$8726$1pJll4
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8727$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8728$1pJll4)
                                                                        (if g$ls/false$8728$1pJll4
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7596$1pJll4
                                                                                   'list)
                                                                                 g$x$8717$1pJll4)))
                                                                            g$ls/false$8728$1pJll4)
                                                                          ((case-lambda
                                                                             ((g$t$8729$1pJll4)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8730$1pJll4)
                                                                                  (if g$ls/false$8730$1pJll4
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7596$1pJll4
                                                                                             'cons)
                                                                                           g$x$8717$1pJll4
                                                                                           g$y$8718$1pJll4)))
                                                                                      g$ls/false$8730$1pJll4)
                                                                                    (g$syntax-violation$7764$1pJll4
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8729$1pJll4))))
                                                                               (g$syntax-dispatch$7653$1pJll4
                                                                                 g$t$8729$1pJll4
                                                                                 '_))))
                                                                           g$t$8727$1pJll4))))
                                                                     (g$syntax-dispatch$7653$1pJll4
                                                                       g$t$8727$1pJll4
                                                                       '()))))
                                                                 g$dy$8721$1pJll4)))
                                                             g$ls/false$8726$1pJll4)
                                                           (g$syntax-violation$7764$1pJll4
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8725$1pJll4))))
                                                      (g$syntax-dispatch$7653$1pJll4
                                                        g$t$8725$1pJll4
                                                        '_))))
                                                  g$t$8722$1pJll4))))
                                            (g$syntax-dispatch$7653$1pJll4
                                              g$t$8722$1pJll4
                                              '(#(scheme-id quote) any)))))
                                        g$x$8717$1pJll4)))
                                    g$ls/false$8720$1pJll4)
                                  ((case-lambda
                                     ((g$t$8731$1pJll4)
                                      ((case-lambda
                                         ((g$ls/false$8732$1pJll4)
                                          (if g$ls/false$8732$1pJll4
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8733$1pJll4)
                                                 (g$cons*$5505$1pJll4
                                                   (g$scheme-stx$7596$1pJll4
                                                     'list)
                                                   g$x$8717$1pJll4
                                                   g$stuff$8733$1pJll4)))
                                              g$ls/false$8732$1pJll4)
                                            ((case-lambda
                                               ((g$t$8734$1pJll4)
                                                ((case-lambda
                                                   ((g$ls/false$8735$1pJll4)
                                                    (if g$ls/false$8735$1pJll4
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7596$1pJll4
                                                               'cons)
                                                             g$x$8717$1pJll4
                                                             g$y$8718$1pJll4)))
                                                        g$ls/false$8735$1pJll4)
                                                      (g$syntax-violation$7764$1pJll4
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8734$1pJll4))))
                                                 (g$syntax-dispatch$7653$1pJll4
                                                   g$t$8734$1pJll4
                                                   '_))))
                                             g$t$8731$1pJll4))))
                                       (g$syntax-dispatch$7653$1pJll4
                                         g$t$8731$1pJll4
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8719$1pJll4))))
                             (g$syntax-dispatch$7653$1pJll4
                               g$t$8719$1pJll4
                               '(#(scheme-id quote) any)))))
                         g$y$8718$1pJll4))))
                   (g$quasiappend$8627$1pJll4
                     (case-lambda
                       ((g$x$8704$1pJll4 g$y$8705$1pJll4)
                        ((case-lambda
                           ((g$ls$8706$1pJll4)
                            (if (null? g$ls$8706$1pJll4)
                              (list (g$scheme-stx$7596$1pJll4 'quote) '())
                              (if (null? (cdr g$ls$8706$1pJll4))
                                (car g$ls$8706$1pJll4)
                                (g$cons*$5505$1pJll4
                                  (g$scheme-stx$7596$1pJll4 'append)
                                  g$ls$8706$1pJll4)))))
                         ((letrec ((g$f$8707$1pJll4
                                     (case-lambda
                                       ((g$x$8708$1pJll4)
                                        (if (null? g$x$8708$1pJll4)
                                          ((case-lambda
                                             ((g$t$8709$1pJll4)
                                              ((case-lambda
                                                 ((g$ls/false$8710$1pJll4)
                                                  (if g$ls/false$8710$1pJll4
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8710$1pJll4)
                                                    ((case-lambda
                                                       ((g$t$8711$1pJll4)
                                                        ((case-lambda
                                                           ((g$ls/false$8712$1pJll4)
                                                            (if g$ls/false$8712$1pJll4
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8705$1pJll4)))
                                                                g$ls/false$8712$1pJll4)
                                                              (g$syntax-violation$7764$1pJll4
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8711$1pJll4))))
                                                         (g$syntax-dispatch$7653$1pJll4
                                                           g$t$8711$1pJll4
                                                           '_))))
                                                     g$t$8709$1pJll4))))
                                               (g$syntax-dispatch$7653$1pJll4
                                                 g$t$8709$1pJll4
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8705$1pJll4)
                                          ((case-lambda
                                             ((g$t$8713$1pJll4)
                                              ((case-lambda
                                                 ((g$ls/false$8714$1pJll4)
                                                  (if g$ls/false$8714$1pJll4
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8707$1pJll4
                                                           (cdr g$x$8708$1pJll4))))
                                                      g$ls/false$8714$1pJll4)
                                                    ((case-lambda
                                                       ((g$t$8715$1pJll4)
                                                        ((case-lambda
                                                           ((g$ls/false$8716$1pJll4)
                                                            (if g$ls/false$8716$1pJll4
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8708$1pJll4)
                                                                     (g$f$8707$1pJll4
                                                                       (cdr g$x$8708$1pJll4)))))
                                                                g$ls/false$8716$1pJll4)
                                                              (g$syntax-violation$7764$1pJll4
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8715$1pJll4))))
                                                         (g$syntax-dispatch$7653$1pJll4
                                                           g$t$8715$1pJll4
                                                           '_))))
                                                     g$t$8713$1pJll4))))
                                               (g$syntax-dispatch$7653$1pJll4
                                                 g$t$8713$1pJll4
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8708$1pJll4)))))))
                            g$f$8707$1pJll4)
                          g$x$8704$1pJll4)))))
                   (g$quasivector$8628$1pJll4
                     (case-lambda
                       ((g$x$8679$1pJll4)
                        ((case-lambda
                           ((g$pat-x$8680$1pJll4)
                            ((case-lambda
                               ((g$t$8681$1pJll4)
                                ((case-lambda
                                   ((g$ls/false$8682$1pJll4)
                                    (if g$ls/false$8682$1pJll4
                                      (apply
                                        (case-lambda
                                          ((g$x*$8683$1pJll4)
                                           (list
                                             (g$scheme-stx$7596$1pJll4 'quote)
                                             (list->vector g$x*$8683$1pJll4))))
                                        g$ls/false$8682$1pJll4)
                                      ((case-lambda
                                         ((g$t$8684$1pJll4)
                                          ((case-lambda
                                             ((g$ls/false$8685$1pJll4)
                                              (if g$ls/false$8685$1pJll4
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8686$1pJll4
                                                                 (case-lambda
                                                                   ((g$x$8687$1pJll4
                                                                      g$k$8688$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$t$8689$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8690$1pJll4)
                                                                            (if g$ls/false$8690$1pJll4
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8691$1pJll4)
                                                                                   (g$k$8688$1pJll4
                                                                                     (map (case-lambda
                                                                                            ((g$x$8692$1pJll4)
                                                                                             (list
                                                                                               (g$scheme-stx$7596$1pJll4
                                                                                                 'quote)
                                                                                               g$x$8692$1pJll4)))
                                                                                          g$x*$8691$1pJll4))))
                                                                                g$ls/false$8690$1pJll4)
                                                                              ((case-lambda
                                                                                 ((g$t$8693$1pJll4)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8694$1pJll4)
                                                                                      (if g$ls/false$8694$1pJll4
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8695$1pJll4)
                                                                                             (g$k$8688$1pJll4
                                                                                               g$x*$8695$1pJll4)))
                                                                                          g$ls/false$8694$1pJll4)
                                                                                        ((case-lambda
                                                                                           ((g$t$8696$1pJll4)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8697$1pJll4)
                                                                                                (if g$ls/false$8697$1pJll4
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8698$1pJll4
                                                                                                         g$y$8699$1pJll4)
                                                                                                       (g$f$8686$1pJll4
                                                                                                         g$y$8699$1pJll4
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8700$1pJll4)
                                                                                                            (g$k$8688$1pJll4
                                                                                                              (cons
                                                                                                                g$x$8698$1pJll4
                                                                                                                g$ls$8700$1pJll4)))))))
                                                                                                    g$ls/false$8697$1pJll4)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8701$1pJll4)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8702$1pJll4)
                                                                                                          (if g$ls/false$8702$1pJll4
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7596$1pJll4
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8680$1pJll4)))
                                                                                                              g$ls/false$8702$1pJll4)
                                                                                                            (g$syntax-violation$7764$1pJll4
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8701$1pJll4))))
                                                                                                       (g$syntax-dispatch$7653$1pJll4
                                                                                                         g$t$8701$1pJll4
                                                                                                         '_))))
                                                                                                   g$t$8696$1pJll4))))
                                                                                             (g$syntax-dispatch$7653$1pJll4
                                                                                               g$t$8696$1pJll4
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8693$1pJll4))))
                                                                                   (g$syntax-dispatch$7653$1pJll4
                                                                                     g$t$8693$1pJll4
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8689$1pJll4))))
                                                                         (g$syntax-dispatch$7653$1pJll4
                                                                           g$t$8689$1pJll4
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8687$1pJll4)))))
                                                        g$f$8686$1pJll4)
                                                      g$x$8679$1pJll4
                                                      (case-lambda
                                                        ((g$ls$8703$1pJll4)
                                                         (g$cons*$5505$1pJll4
                                                           (g$scheme-stx$7596$1pJll4
                                                             'vector)
                                                           g$ls$8703$1pJll4))))))
                                                  g$ls/false$8685$1pJll4)
                                                (g$syntax-violation$7764$1pJll4
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8684$1pJll4))))
                                           (g$syntax-dispatch$7653$1pJll4
                                             g$t$8684$1pJll4
                                             '_))))
                                       g$t$8681$1pJll4))))
                                 (g$syntax-dispatch$7653$1pJll4
                                   g$t$8681$1pJll4
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8680$1pJll4)))
                         g$x$8679$1pJll4))))
                   (g$vquasi$8629$1pJll4
                     (case-lambda
                       ((g$p$8662$1pJll4 g$lev$8663$1pJll4)
                        ((case-lambda
                           ((g$t$8664$1pJll4)
                            ((case-lambda
                               ((g$ls/false$8665$1pJll4)
                                (if g$ls/false$8665$1pJll4
                                  (apply
                                    (case-lambda
                                      ((g$p$8666$1pJll4 g$q$8667$1pJll4)
                                       ((case-lambda
                                          ((g$t$8668$1pJll4)
                                           ((case-lambda
                                              ((g$ls/false$8669$1pJll4)
                                               (if g$ls/false$8669$1pJll4
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8670$1pJll4)
                                                      (if (= g$lev$8663$1pJll4
                                                             '0)
                                                        (g$quasicons*$8625$1pJll4
                                                          g$p$8670$1pJll4
                                                          (g$vquasi$8629$1pJll4
                                                            g$q$8667$1pJll4
                                                            g$lev$8663$1pJll4))
                                                        (g$quasicons$8626$1pJll4
                                                          (g$quasicons$8626$1pJll4
                                                            (g$datum$8609$1pJll4
                                                              'unquote)
                                                            (g$quasi$8630$1pJll4
                                                              g$p$8670$1pJll4
                                                              (- g$lev$8663$1pJll4
                                                                 '1)))
                                                          (g$vquasi$8629$1pJll4
                                                            g$q$8667$1pJll4
                                                            g$lev$8663$1pJll4)))))
                                                   g$ls/false$8669$1pJll4)
                                                 ((case-lambda
                                                    ((g$t$8671$1pJll4)
                                                     ((case-lambda
                                                        ((g$ls/false$8672$1pJll4)
                                                         (if g$ls/false$8672$1pJll4
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8673$1pJll4)
                                                                (if (= g$lev$8663$1pJll4
                                                                       '0)
                                                                  (g$quasiappend$8627$1pJll4
                                                                    g$p$8673$1pJll4
                                                                    (g$vquasi$8629$1pJll4
                                                                      g$q$8667$1pJll4
                                                                      g$lev$8663$1pJll4))
                                                                  (g$quasicons$8626$1pJll4
                                                                    (g$quasicons$8626$1pJll4
                                                                      (g$datum$8609$1pJll4
                                                                        'unquote-splicing)
                                                                      (g$quasi$8630$1pJll4
                                                                        g$p$8673$1pJll4
                                                                        (- g$lev$8663$1pJll4
                                                                           '1)))
                                                                    (g$vquasi$8629$1pJll4
                                                                      g$q$8667$1pJll4
                                                                      g$lev$8663$1pJll4)))))
                                                             g$ls/false$8672$1pJll4)
                                                           ((case-lambda
                                                              ((g$t$8674$1pJll4)
                                                               ((case-lambda
                                                                  ((g$ls/false$8675$1pJll4)
                                                                   (if g$ls/false$8675$1pJll4
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8676$1pJll4)
                                                                          (g$quasicons$8626$1pJll4
                                                                            (g$quasi$8630$1pJll4
                                                                              g$p$8676$1pJll4
                                                                              g$lev$8663$1pJll4)
                                                                            (g$vquasi$8629$1pJll4
                                                                              g$q$8667$1pJll4
                                                                              g$lev$8663$1pJll4))))
                                                                       g$ls/false$8675$1pJll4)
                                                                     (g$syntax-violation$7764$1pJll4
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8674$1pJll4))))
                                                                (g$syntax-dispatch$7653$1pJll4
                                                                  g$t$8674$1pJll4
                                                                  'any))))
                                                            g$t$8671$1pJll4))))
                                                      (g$syntax-dispatch$7653$1pJll4
                                                        g$t$8671$1pJll4
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8668$1pJll4))))
                                            (g$syntax-dispatch$7653$1pJll4
                                              g$t$8668$1pJll4
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8666$1pJll4)))
                                    g$ls/false$8665$1pJll4)
                                  ((case-lambda
                                     ((g$t$8677$1pJll4)
                                      ((case-lambda
                                         ((g$ls/false$8678$1pJll4)
                                          (if g$ls/false$8678$1pJll4
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7596$1pJll4
                                                     'quote)
                                                   '())))
                                              g$ls/false$8678$1pJll4)
                                            (g$syntax-violation$7764$1pJll4
                                              '#f
                                              '"invalid syntax"
                                              g$t$8677$1pJll4))))
                                       (g$syntax-dispatch$7653$1pJll4
                                         g$t$8677$1pJll4
                                         '()))))
                                   g$t$8664$1pJll4))))
                             (g$syntax-dispatch$7653$1pJll4
                               g$t$8664$1pJll4
                               '(any . any)))))
                         g$p$8662$1pJll4))))
                   (g$quasi$8630$1pJll4
                     (case-lambda
                       ((g$p$8635$1pJll4 g$lev$8636$1pJll4)
                        ((case-lambda
                           ((g$t$8637$1pJll4)
                            ((case-lambda
                               ((g$ls/false$8638$1pJll4)
                                (if g$ls/false$8638$1pJll4
                                  (apply
                                    (case-lambda
                                      ((g$p$8639$1pJll4)
                                       (if (= g$lev$8636$1pJll4 '0)
                                         g$p$8639$1pJll4
                                         (g$quasicons$8626$1pJll4
                                           (g$datum$8609$1pJll4 'unquote)
                                           (g$quasi$8630$1pJll4
                                             (list g$p$8639$1pJll4)
                                             (- g$lev$8636$1pJll4 '1))))))
                                    g$ls/false$8638$1pJll4)
                                  ((case-lambda
                                     ((g$t$8640$1pJll4)
                                      ((case-lambda
                                         ((g$ls/false$8641$1pJll4)
                                          (if g$ls/false$8641$1pJll4
                                            (apply
                                              (case-lambda
                                                ((g$p$8642$1pJll4
                                                   g$q$8643$1pJll4)
                                                 (if (= g$lev$8636$1pJll4 '0)
                                                   (g$quasicons*$8625$1pJll4
                                                     g$p$8642$1pJll4
                                                     (g$quasi$8630$1pJll4
                                                       g$q$8643$1pJll4
                                                       g$lev$8636$1pJll4))
                                                   (g$quasicons$8626$1pJll4
                                                     (g$quasicons$8626$1pJll4
                                                       (g$datum$8609$1pJll4
                                                         'unquote)
                                                       (g$quasi$8630$1pJll4
                                                         g$p$8642$1pJll4
                                                         (- g$lev$8636$1pJll4
                                                            '1)))
                                                     (g$quasi$8630$1pJll4
                                                       g$q$8643$1pJll4
                                                       g$lev$8636$1pJll4)))))
                                              g$ls/false$8641$1pJll4)
                                            ((case-lambda
                                               ((g$t$8644$1pJll4)
                                                ((case-lambda
                                                   ((g$ls/false$8645$1pJll4)
                                                    (if g$ls/false$8645$1pJll4
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8646$1pJll4
                                                             g$q$8647$1pJll4)
                                                           (if (= g$lev$8636$1pJll4
                                                                  '0)
                                                             (g$quasiappend$8627$1pJll4
                                                               g$p$8646$1pJll4
                                                               (g$quasi$8630$1pJll4
                                                                 g$q$8647$1pJll4
                                                                 g$lev$8636$1pJll4))
                                                             (g$quasicons$8626$1pJll4
                                                               (g$quasicons$8626$1pJll4
                                                                 (g$datum$8609$1pJll4
                                                                   'unquote-splicing)
                                                                 (g$quasi$8630$1pJll4
                                                                   g$p$8646$1pJll4
                                                                   (- g$lev$8636$1pJll4
                                                                      '1)))
                                                               (g$quasi$8630$1pJll4
                                                                 g$q$8647$1pJll4
                                                                 g$lev$8636$1pJll4)))))
                                                        g$ls/false$8645$1pJll4)
                                                      ((case-lambda
                                                         ((g$t$8648$1pJll4)
                                                          ((case-lambda
                                                             ((g$ls/false$8649$1pJll4)
                                                              (if g$ls/false$8649$1pJll4
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8650$1pJll4)
                                                                     (g$quasicons$8626$1pJll4
                                                                       (g$datum$8609$1pJll4
                                                                         'quasiquote)
                                                                       (g$quasi$8630$1pJll4
                                                                         (list
                                                                           g$p$8650$1pJll4)
                                                                         (+ g$lev$8636$1pJll4
                                                                            '1)))))
                                                                  g$ls/false$8649$1pJll4)
                                                                ((case-lambda
                                                                   ((g$t$8651$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8652$1pJll4)
                                                                        (if g$ls/false$8652$1pJll4
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8653$1pJll4
                                                                                 g$q$8654$1pJll4)
                                                                               (g$quasicons$8626$1pJll4
                                                                                 (g$quasi$8630$1pJll4
                                                                                   g$p$8653$1pJll4
                                                                                   g$lev$8636$1pJll4)
                                                                                 (g$quasi$8630$1pJll4
                                                                                   g$q$8654$1pJll4
                                                                                   g$lev$8636$1pJll4))))
                                                                            g$ls/false$8652$1pJll4)
                                                                          ((case-lambda
                                                                             ((g$t$8655$1pJll4)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8656$1pJll4)
                                                                                  (if (if g$ls/false$8656$1pJll4
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8657$1pJll4)
                                                                                               (not (g$stx?$7347$1pJll4
                                                                                                      g$x$8657$1pJll4))))
                                                                                            g$ls/false$8656$1pJll4))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8658$1pJll4)
                                                                                         (g$quasivector$8628$1pJll4
                                                                                           (g$vquasi$8629$1pJll4
                                                                                             g$x$8658$1pJll4
                                                                                             g$lev$8636$1pJll4))))
                                                                                      g$ls/false$8656$1pJll4)
                                                                                    ((case-lambda
                                                                                       ((g$t$8659$1pJll4)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8660$1pJll4)
                                                                                            (if g$ls/false$8660$1pJll4
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8661$1pJll4)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7596$1pJll4
                                                                                                       'quote)
                                                                                                     g$p$8661$1pJll4)))
                                                                                                g$ls/false$8660$1pJll4)
                                                                                              (g$syntax-violation$7764$1pJll4
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8659$1pJll4))))
                                                                                         (g$syntax-dispatch$7653$1pJll4
                                                                                           g$t$8659$1pJll4
                                                                                           'any))))
                                                                                     g$t$8655$1pJll4))))
                                                                               (g$syntax-dispatch$7653$1pJll4
                                                                                 g$t$8655$1pJll4
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8651$1pJll4))))
                                                                     (g$syntax-dispatch$7653$1pJll4
                                                                       g$t$8651$1pJll4
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8648$1pJll4))))
                                                           (g$syntax-dispatch$7653$1pJll4
                                                             g$t$8648$1pJll4
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8644$1pJll4))))
                                                 (g$syntax-dispatch$7653$1pJll4
                                                   g$t$8644$1pJll4
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8640$1pJll4))))
                                       (g$syntax-dispatch$7653$1pJll4
                                         g$t$8640$1pJll4
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8637$1pJll4))))
                             (g$syntax-dispatch$7653$1pJll4
                               g$t$8637$1pJll4
                               '(#(scheme-id unquote) any)))))
                         g$p$8635$1pJll4)))))
           (case-lambda
             ((g$x$8631$1pJll4)
              ((case-lambda
                 ((g$t$8632$1pJll4)
                  ((case-lambda
                     ((g$ls/false$8633$1pJll4)
                      (if g$ls/false$8633$1pJll4
                        (apply
                          (case-lambda
                            ((g$e$8634$1pJll4)
                             (g$quasi$8630$1pJll4 g$e$8634$1pJll4 '0)))
                          g$ls/false$8633$1pJll4)
                        (g$syntax-violation$7764$1pJll4
                          '#f
                          '"invalid syntax"
                          g$t$8632$1pJll4))))
                   (g$syntax-dispatch$7653$1pJll4 g$t$8632$1pJll4 '(_ any)))))
               g$x$8631$1pJll4))))))))
   (g$quasisyntax-macro$7645$1pJll4
     g$quasisyntax-macro$11091$1pJll4
     ((case-lambda
        (()
         (letrec* ((g$quasi$8741$1pJll4
                     (case-lambda
                       ((g$p$8755$1pJll4 g$lev$8756$1pJll4)
                        ((case-lambda
                           ((g$t$8757$1pJll4)
                            ((case-lambda
                               ((g$ls/false$8758$1pJll4)
                                (if g$ls/false$8758$1pJll4
                                  (apply
                                    (case-lambda
                                      ((g$p$8759$1pJll4)
                                       (if (= g$lev$8756$1pJll4 '0)
                                         ((case-lambda
                                            ((g$g$8760$1pJll4)
                                             (values
                                               (list g$g$8760$1pJll4)
                                               (list g$p$8759$1pJll4)
                                               g$g$8760$1pJll4)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8741$1pJll4
                                                g$p$8759$1pJll4
                                                (- g$lev$8756$1pJll4 '1))))
                                           (case-lambda
                                             ((g$lhs*$8764$1pJll4
                                                g$rhs*$8765$1pJll4
                                                g$p$8766$1pJll4)
                                              ((case-lambda
                                                 ((g$p$8767$1pJll4
                                                    g$rhs*$8768$1pJll4
                                                    g$lhs*$8769$1pJll4)
                                                  (values
                                                    g$lhs*$8769$1pJll4
                                                    g$rhs*$8768$1pJll4
                                                    (list
                                                      'unsyntax
                                                      g$p$8767$1pJll4))))
                                               g$p$8766$1pJll4
                                               g$rhs*$8765$1pJll4
                                               g$lhs*$8764$1pJll4)))))))
                                    g$ls/false$8758$1pJll4)
                                  ((case-lambda
                                     ((g$t$8770$1pJll4)
                                      ((case-lambda
                                         ((g$ls/false$8771$1pJll4)
                                          (if (if g$ls/false$8771$1pJll4
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8756$1pJll4
                                                          '0)))
                                                    g$ls/false$8771$1pJll4))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7764$1pJll4
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8755$1pJll4)))
                                              g$ls/false$8771$1pJll4)
                                            ((case-lambda
                                               ((g$t$8772$1pJll4)
                                                ((case-lambda
                                                   ((g$ls/false$8773$1pJll4)
                                                    (if g$ls/false$8773$1pJll4
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$8774$1pJll4
                                                             g$q$8775$1pJll4)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8741$1pJll4
                                                                  g$q$8775$1pJll4
                                                                  g$lev$8756$1pJll4)))
                                                             (case-lambda
                                                               ((g$lhs*$8779$1pJll4
                                                                  g$rhs*$8780$1pJll4
                                                                  g$q$8781$1pJll4)
                                                                ((case-lambda
                                                                   ((g$q$8782$1pJll4
                                                                      g$rhs*$8783$1pJll4
                                                                      g$lhs*$8784$1pJll4)
                                                                    (if (= g$lev$8756$1pJll4
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$8785$1pJll4)
                                                                          (values
                                                                            (append
                                                                              g$g*$8785$1pJll4
                                                                              g$lhs*$8784$1pJll4)
                                                                            (append
                                                                              g$p*$8774$1pJll4
                                                                              g$rhs*$8783$1pJll4)
                                                                            (append
                                                                              g$g*$8785$1pJll4
                                                                              g$q$8782$1pJll4))))
                                                                       (map (case-lambda
                                                                              ((g$x$8786$1pJll4)
                                                                               (gensym)))
                                                                            g$p*$8774$1pJll4))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8741$1pJll4
                                                                             g$p*$8774$1pJll4
                                                                             (- g$lev$8756$1pJll4
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8790$1pJll4
                                                                             g$rhs2*$8791$1pJll4
                                                                             g$p*$8792$1pJll4)
                                                                           ((case-lambda
                                                                              ((g$p*$8793$1pJll4
                                                                                 g$rhs2*$8794$1pJll4
                                                                                 g$lhs2*$8795$1pJll4)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8795$1pJll4
                                                                                   g$lhs*$8784$1pJll4)
                                                                                 (append
                                                                                   g$rhs2*$8794$1pJll4
                                                                                   g$rhs*$8783$1pJll4)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$8793$1pJll4)
                                                                                   g$q$8782$1pJll4))))
                                                                            g$p*$8792$1pJll4
                                                                            g$rhs2*$8791$1pJll4
                                                                            g$lhs2*$8790$1pJll4)))))))
                                                                 g$q$8781$1pJll4
                                                                 g$rhs*$8780$1pJll4
                                                                 g$lhs*$8779$1pJll4))))))
                                                        g$ls/false$8773$1pJll4)
                                                      ((case-lambda
                                                         ((g$t$8796$1pJll4)
                                                          ((case-lambda
                                                             ((g$ls/false$8797$1pJll4)
                                                              (if g$ls/false$8797$1pJll4
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$8798$1pJll4
                                                                       g$q$8799$1pJll4)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$8741$1pJll4
                                                                            g$q$8799$1pJll4
                                                                            g$lev$8756$1pJll4)))
                                                                       (case-lambda
                                                                         ((g$lhs*$8803$1pJll4
                                                                            g$rhs*$8804$1pJll4
                                                                            g$q$8805$1pJll4)
                                                                          ((case-lambda
                                                                             ((g$q$8806$1pJll4
                                                                                g$rhs*$8807$1pJll4
                                                                                g$lhs*$8808$1pJll4)
                                                                              (if (= g$lev$8756$1pJll4
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$8809$1pJll4)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$8810$1pJll4)
                                                                                                (cons
                                                                                                  g$g$8810$1pJll4
                                                                                                  '(...))))
                                                                                             g$g*$8809$1pJll4)
                                                                                        g$lhs*$8808$1pJll4)
                                                                                      (append
                                                                                        g$p*$8798$1pJll4
                                                                                        g$rhs*$8807$1pJll4)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$8811$1pJll4)
                                                                                                  (cons
                                                                                                    g$g$8811$1pJll4
                                                                                                    '(...))))
                                                                                               g$g*$8809$1pJll4))
                                                                                        g$q$8806$1pJll4))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$8812$1pJll4)
                                                                                         (gensym)))
                                                                                      g$p*$8798$1pJll4))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$8741$1pJll4
                                                                                       g$p*$8798$1pJll4
                                                                                       (- g$lev$8756$1pJll4
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$8816$1pJll4
                                                                                       g$rhs2*$8817$1pJll4
                                                                                       g$p*$8818$1pJll4)
                                                                                     ((case-lambda
                                                                                        ((g$p*$8819$1pJll4
                                                                                           g$rhs2*$8820$1pJll4
                                                                                           g$lhs2*$8821$1pJll4)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$8821$1pJll4
                                                                                             g$lhs*$8808$1pJll4)
                                                                                           (append
                                                                                             g$rhs2*$8820$1pJll4
                                                                                             g$rhs*$8807$1pJll4)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$8819$1pJll4)
                                                                                             g$q$8806$1pJll4))))
                                                                                      g$p*$8818$1pJll4
                                                                                      g$rhs2*$8817$1pJll4
                                                                                      g$lhs2*$8816$1pJll4)))))))
                                                                           g$q$8805$1pJll4
                                                                           g$rhs*$8804$1pJll4
                                                                           g$lhs*$8803$1pJll4))))))
                                                                  g$ls/false$8797$1pJll4)
                                                                ((case-lambda
                                                                   ((g$t$8822$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8823$1pJll4)
                                                                        (if (if g$ls/false$8823$1pJll4
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$8756$1pJll4
                                                                                        '0)))
                                                                                  g$ls/false$8823$1pJll4))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$7764$1pJll4
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$8755$1pJll4)))
                                                                            g$ls/false$8823$1pJll4)
                                                                          ((case-lambda
                                                                             ((g$t$8824$1pJll4)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8825$1pJll4)
                                                                                  (if g$ls/false$8825$1pJll4
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8826$1pJll4)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8741$1pJll4
                                                                                                g$p$8826$1pJll4
                                                                                                (+ g$lev$8756$1pJll4
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8830$1pJll4
                                                                                                g$rhs*$8831$1pJll4
                                                                                                g$p$8832$1pJll4)
                                                                                              ((case-lambda
                                                                                                 ((g$p$8833$1pJll4
                                                                                                    g$rhs*$8834$1pJll4
                                                                                                    g$lhs*$8835$1pJll4)
                                                                                                  (values
                                                                                                    g$lhs*$8835$1pJll4
                                                                                                    g$rhs*$8834$1pJll4
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$8833$1pJll4))))
                                                                                               g$p$8832$1pJll4
                                                                                               g$rhs*$8831$1pJll4
                                                                                               g$lhs*$8830$1pJll4))))))
                                                                                      g$ls/false$8825$1pJll4)
                                                                                    ((case-lambda
                                                                                       ((g$t$8836$1pJll4)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8837$1pJll4)
                                                                                            (if g$ls/false$8837$1pJll4
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8838$1pJll4
                                                                                                     g$q$8839$1pJll4)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$8741$1pJll4
                                                                                                          g$p$8838$1pJll4
                                                                                                          g$lev$8756$1pJll4)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8846$1pJll4
                                                                                                          g$rhs*$8847$1pJll4
                                                                                                          g$p$8848$1pJll4)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$8741$1pJll4
                                                                                                               g$q$8839$1pJll4
                                                                                                               g$lev$8756$1pJll4)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$8849$1pJll4
                                                                                                               g$rhs2*$8850$1pJll4
                                                                                                               g$q$8851$1pJll4)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$8852$1pJll4
                                                                                                                   g$rhs2*$8853$1pJll4
                                                                                                                   g$lhs2*$8854$1pJll4
                                                                                                                   g$p$8855$1pJll4
                                                                                                                   g$rhs*$8856$1pJll4
                                                                                                                   g$lhs*$8857$1pJll4)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$8854$1pJll4
                                                                                                                     g$lhs*$8857$1pJll4)
                                                                                                                   (append
                                                                                                                     g$rhs2*$8853$1pJll4
                                                                                                                     g$rhs*$8856$1pJll4)
                                                                                                                   (cons
                                                                                                                     g$p$8855$1pJll4
                                                                                                                     g$q$8852$1pJll4))))
                                                                                                              g$q$8851$1pJll4
                                                                                                              g$rhs2*$8850$1pJll4
                                                                                                              g$lhs2*$8849$1pJll4
                                                                                                              g$p$8848$1pJll4
                                                                                                              g$rhs*$8847$1pJll4
                                                                                                              g$lhs*$8846$1pJll4)))))))))
                                                                                                g$ls/false$8837$1pJll4)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8858$1pJll4)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8859$1pJll4)
                                                                                                      (if g$ls/false$8859$1pJll4
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$8860$1pJll4)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$8741$1pJll4
                                                                                                                    g$x*$8860$1pJll4
                                                                                                                    g$lev$8756$1pJll4)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$8864$1pJll4
                                                                                                                    g$rhs*$8865$1pJll4
                                                                                                                    g$x*$8866$1pJll4)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$8867$1pJll4
                                                                                                                        g$rhs*$8868$1pJll4
                                                                                                                        g$lhs*$8869$1pJll4)
                                                                                                                      (values
                                                                                                                        g$lhs*$8869$1pJll4
                                                                                                                        g$rhs*$8868$1pJll4
                                                                                                                        (list->vector
                                                                                                                          g$x*$8867$1pJll4))))
                                                                                                                   g$x*$8866$1pJll4
                                                                                                                   g$rhs*$8865$1pJll4
                                                                                                                   g$lhs*$8864$1pJll4))))))
                                                                                                          g$ls/false$8859$1pJll4)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$8870$1pJll4)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$8871$1pJll4)
                                                                                                                (if g$ls/false$8871$1pJll4
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$8755$1pJll4)))
                                                                                                                    g$ls/false$8871$1pJll4)
                                                                                                                  (g$syntax-violation$7764$1pJll4
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$8870$1pJll4))))
                                                                                                             (g$syntax-dispatch$7653$1pJll4
                                                                                                               g$t$8870$1pJll4
                                                                                                               '_))))
                                                                                                         g$t$8858$1pJll4))))
                                                                                                   (g$syntax-dispatch$7653$1pJll4
                                                                                                     g$t$8858$1pJll4
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$8836$1pJll4))))
                                                                                         (g$syntax-dispatch$7653$1pJll4
                                                                                           g$t$8836$1pJll4
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$8824$1pJll4))))
                                                                               (g$syntax-dispatch$7653$1pJll4
                                                                                 g$t$8824$1pJll4
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$8822$1pJll4))))
                                                                     (g$syntax-dispatch$7653$1pJll4
                                                                       g$t$8822$1pJll4
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$8796$1pJll4))))
                                                           (g$syntax-dispatch$7653$1pJll4
                                                             g$t$8796$1pJll4
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$8772$1pJll4))))
                                                 (g$syntax-dispatch$7653$1pJll4
                                                   g$t$8772$1pJll4
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8770$1pJll4))))
                                       (g$syntax-dispatch$7653$1pJll4
                                         g$t$8770$1pJll4
                                         '#(scheme-id unsyntax)))))
                                   g$t$8757$1pJll4))))
                             (g$syntax-dispatch$7653$1pJll4
                               g$t$8757$1pJll4
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8755$1pJll4)))))
           (case-lambda
             ((g$x$8742$1pJll4)
              ((case-lambda
                 ((g$t$8743$1pJll4)
                  ((case-lambda
                     ((g$ls/false$8744$1pJll4)
                      (if g$ls/false$8744$1pJll4
                        (apply
                          (case-lambda
                            ((g$e$8745$1pJll4)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8741$1pJll4 g$e$8745$1pJll4 '0)))
                               (case-lambda
                                 ((g$lhs*$8749$1pJll4
                                    g$rhs*$8750$1pJll4
                                    g$v$8751$1pJll4)
                                  ((case-lambda
                                     ((g$v$8752$1pJll4
                                        g$rhs*$8753$1pJll4
                                        g$lhs*$8754$1pJll4)
                                      (g$bless$7616$1pJll4
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8753$1pJll4)
                                          '()
                                          (list
                                            g$lhs*$8754$1pJll4
                                            (list 'syntax g$v$8752$1pJll4))))))
                                   g$v$8751$1pJll4
                                   g$rhs*$8750$1pJll4
                                   g$lhs*$8749$1pJll4))))))
                          g$ls/false$8744$1pJll4)
                        (g$syntax-violation$7764$1pJll4
                          '#f
                          '"invalid syntax"
                          g$t$8743$1pJll4))))
                   (g$syntax-dispatch$7653$1pJll4 g$t$8743$1pJll4 '(_ any)))))
               g$x$8742$1pJll4))))))))
   (g$define-struct-macro$7646$1pJll4
     g$define-struct-macro$11092$1pJll4
     (case-lambda
       ((g$stx$8872$1pJll4)
        (g$syntax-violation$7764$1pJll4
          '#f
          '"define-struct not supported"
          g$stx$8872$1pJll4))))
   (g$define-record-type-macro$7647$1pJll4
     g$define-record-type-macro$11093$1pJll4
     (case-lambda
       ((g$x$8873$1pJll4)
        (letrec* ((g$id$8874$1pJll4
                    (case-lambda
                      ((g$ctxt$9126$1pJll4 . g$str*$9127$1pJll4)
                       (g$datum->syntax$7766$1pJll4
                         g$ctxt$9126$1pJll4
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9128$1pJll4)
                                     (if (symbol? g$x$9128$1pJll4)
                                       (symbol->string g$x$9128$1pJll4)
                                       (if (string? g$x$9128$1pJll4)
                                         g$x$9128$1pJll4
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9127$1pJll4)))))))
                  (g$get-record-name$8875$1pJll4
                    (case-lambda
                      ((g$spec$9117$1pJll4)
                       ((case-lambda
                          ((g$t$9118$1pJll4)
                           ((case-lambda
                              ((g$ls/false$9119$1pJll4)
                               (if g$ls/false$9119$1pJll4
                                 (apply
                                   (case-lambda
                                     ((g$foo$9120$1pJll4
                                        g$make-foo$9121$1pJll4
                                        g$foo?$9122$1pJll4)
                                      g$foo$9120$1pJll4))
                                   g$ls/false$9119$1pJll4)
                                 ((case-lambda
                                    ((g$t$9123$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$9124$1pJll4)
                                         (if g$ls/false$9124$1pJll4
                                           (apply
                                             (case-lambda
                                               ((g$foo$9125$1pJll4)
                                                g$foo$9125$1pJll4))
                                             g$ls/false$9124$1pJll4)
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"invalid syntax"
                                             g$t$9123$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$9123$1pJll4
                                        'any))))
                                  g$t$9118$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$9118$1pJll4
                              '(any any any)))))
                        g$spec$9117$1pJll4))))
                  (g$get-record-constructor-name$8876$1pJll4
                    (case-lambda
                      ((g$spec$9107$1pJll4)
                       ((case-lambda
                          ((g$t$9108$1pJll4)
                           ((case-lambda
                              ((g$ls/false$9109$1pJll4)
                               (if g$ls/false$9109$1pJll4
                                 (apply
                                   (case-lambda
                                     ((g$foo$9110$1pJll4
                                        g$make-foo$9111$1pJll4
                                        g$foo?$9112$1pJll4)
                                      g$make-foo$9111$1pJll4))
                                   g$ls/false$9109$1pJll4)
                                 ((case-lambda
                                    ((g$t$9113$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$9114$1pJll4)
                                         (if (if g$ls/false$9114$1pJll4
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9115$1pJll4)
                                                      (g$id?$7375$1pJll4
                                                        g$foo$9115$1pJll4)))
                                                   g$ls/false$9114$1pJll4))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9116$1pJll4)
                                                (g$id$8874$1pJll4
                                                  g$foo$9116$1pJll4
                                                  '"make-"
                                                  (g$stx->datum$7386$1pJll4
                                                    g$foo$9116$1pJll4))))
                                             g$ls/false$9114$1pJll4)
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"invalid syntax"
                                             g$t$9113$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$9113$1pJll4
                                        'any))))
                                  g$t$9108$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$9108$1pJll4
                              '(any any any)))))
                        g$spec$9107$1pJll4))))
                  (g$get-record-predicate-name$8877$1pJll4
                    (case-lambda
                      ((g$spec$9097$1pJll4)
                       ((case-lambda
                          ((g$t$9098$1pJll4)
                           ((case-lambda
                              ((g$ls/false$9099$1pJll4)
                               (if g$ls/false$9099$1pJll4
                                 (apply
                                   (case-lambda
                                     ((g$foo$9100$1pJll4
                                        g$make-foo$9101$1pJll4
                                        g$foo?$9102$1pJll4)
                                      g$foo?$9102$1pJll4))
                                   g$ls/false$9099$1pJll4)
                                 ((case-lambda
                                    ((g$t$9103$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$9104$1pJll4)
                                         (if (if g$ls/false$9104$1pJll4
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9105$1pJll4)
                                                      (g$id?$7375$1pJll4
                                                        g$foo$9105$1pJll4)))
                                                   g$ls/false$9104$1pJll4))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9106$1pJll4)
                                                (g$id$8874$1pJll4
                                                  g$foo$9106$1pJll4
                                                  (g$stx->datum$7386$1pJll4
                                                    g$foo$9106$1pJll4)
                                                  '"?")))
                                             g$ls/false$9104$1pJll4)
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"invalid syntax"
                                             g$t$9103$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$9103$1pJll4
                                        'any))))
                                  g$t$9098$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$9098$1pJll4
                              '(any any any)))))
                        g$spec$9097$1pJll4))))
                  (g$get-clause$8878$1pJll4
                    (case-lambda
                      ((g$id$9088$1pJll4 g$ls$9089$1pJll4)
                       ((case-lambda
                          ((g$t$9090$1pJll4)
                           ((case-lambda
                              ((g$ls/false$9091$1pJll4)
                               (if g$ls/false$9091$1pJll4
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9091$1pJll4)
                                 ((case-lambda
                                    ((g$t$9092$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$9093$1pJll4)
                                         (if g$ls/false$9093$1pJll4
                                           (apply
                                             (case-lambda
                                               ((g$x$9094$1pJll4
                                                  g$rest$9095$1pJll4
                                                  g$ls$9096$1pJll4)
                                                (if (g$free-id=?$7379$1pJll4
                                                      (g$bless$7616$1pJll4
                                                        g$id$9088$1pJll4)
                                                      g$x$9094$1pJll4)
                                                  (cons
                                                    g$x$9094$1pJll4
                                                    g$rest$9095$1pJll4)
                                                  (g$get-clause$8878$1pJll4
                                                    g$id$9088$1pJll4
                                                    g$ls$9096$1pJll4))))
                                             g$ls/false$9093$1pJll4)
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"invalid syntax"
                                             g$t$9092$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$9092$1pJll4
                                        '((any . any) . any)))))
                                  g$t$9090$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$9090$1pJll4
                              '()))))
                        g$ls$9089$1pJll4))))
                  (g$foo-rtd-code$8879$1pJll4
                    (case-lambda
                      ((g$name$9047$1pJll4
                         g$clause*$9048$1pJll4
                         g$parent-rtd-code$9049$1pJll4)
                       (letrec* ((g$convert-field-spec*$9050$1pJll4
                                   (case-lambda
                                     ((g$ls$9075$1pJll4)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$9076$1pJll4)
                                                ((case-lambda
                                                   ((g$t$9077$1pJll4)
                                                    ((case-lambda
                                                       ((g$ls/false$9078$1pJll4)
                                                        (if g$ls/false$9078$1pJll4
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$9079$1pJll4
                                                                 g$rest$9080$1pJll4)
                                                               (list
                                                                 'mutable
                                                                 g$name$9079$1pJll4)))
                                                            g$ls/false$9078$1pJll4)
                                                          ((case-lambda
                                                             ((g$t$9081$1pJll4)
                                                              ((case-lambda
                                                                 ((g$ls/false$9082$1pJll4)
                                                                  (if g$ls/false$9082$1pJll4
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$9083$1pJll4
                                                                           g$rest$9084$1pJll4)
                                                                         (list
                                                                           'immutable
                                                                           g$name$9083$1pJll4)))
                                                                      g$ls/false$9082$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$t$9085$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9086$1pJll4)
                                                                            (if g$ls/false$9086$1pJll4
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$9087$1pJll4)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$9087$1pJll4)))
                                                                                g$ls/false$9086$1pJll4)
                                                                              (g$syntax-violation$7764$1pJll4
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9085$1pJll4))))
                                                                         (g$syntax-dispatch$7653$1pJll4
                                                                           g$t$9085$1pJll4
                                                                           'any))))
                                                                     g$t$9081$1pJll4))))
                                                               (g$syntax-dispatch$7653$1pJll4
                                                                 g$t$9081$1pJll4
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$9077$1pJll4))))
                                                     (g$syntax-dispatch$7653$1pJll4
                                                       g$t$9077$1pJll4
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$9076$1pJll4)))
                                             g$ls$9075$1pJll4))))))
                         ((case-lambda
                            ((g$uid-code$9051$1pJll4
                               g$sealed?$9052$1pJll4
                               g$opaque?$9053$1pJll4
                               g$fields$9054$1pJll4)
                             (g$bless$7616$1pJll4
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9047$1pJll4)
                                 g$parent-rtd-code$9049$1pJll4
                                 g$uid-code$9051$1pJll4
                                 g$sealed?$9052$1pJll4
                                 g$opaque?$9053$1pJll4
                                 g$fields$9054$1pJll4))))
                          ((case-lambda
                             ((g$t$9055$1pJll4)
                              ((case-lambda
                                 ((g$ls/false$9056$1pJll4)
                                  (if g$ls/false$9056$1pJll4
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9056$1pJll4)
                                    ((case-lambda
                                       ((g$t$9057$1pJll4)
                                        ((case-lambda
                                           ((g$ls/false$9058$1pJll4)
                                            (if g$ls/false$9058$1pJll4
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9059$1pJll4)
                                                   (list
                                                     'quote
                                                     g$uid$9059$1pJll4)))
                                                g$ls/false$9058$1pJll4)
                                              ((case-lambda
                                                 ((g$t$9060$1pJll4)
                                                  ((case-lambda
                                                     ((g$ls/false$9061$1pJll4)
                                                      (if g$ls/false$9061$1pJll4
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9061$1pJll4)
                                                        (g$syntax-violation$7764$1pJll4
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9060$1pJll4))))
                                                   (g$syntax-dispatch$7653$1pJll4
                                                     g$t$9060$1pJll4
                                                     '_))))
                                               g$t$9057$1pJll4))))
                                         (g$syntax-dispatch$7653$1pJll4
                                           g$t$9057$1pJll4
                                           '(_ any)))))
                                     g$t$9055$1pJll4))))
                               (g$syntax-dispatch$7653$1pJll4
                                 g$t$9055$1pJll4
                                 '(_)))))
                           (g$get-clause$8878$1pJll4
                             'nongenerative
                             g$clause*$9048$1pJll4))
                          ((case-lambda
                             ((g$t$9062$1pJll4)
                              ((case-lambda
                                 ((g$ls/false$9063$1pJll4)
                                  (if g$ls/false$9063$1pJll4
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9063$1pJll4)
                                    ((case-lambda
                                       ((g$t$9064$1pJll4)
                                        ((case-lambda
                                           ((g$ls/false$9065$1pJll4)
                                            (if g$ls/false$9065$1pJll4
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9065$1pJll4)
                                              (g$syntax-violation$7764$1pJll4
                                                '#f
                                                '"invalid syntax"
                                                g$t$9064$1pJll4))))
                                         (g$syntax-dispatch$7653$1pJll4
                                           g$t$9064$1pJll4
                                           '_))))
                                     g$t$9062$1pJll4))))
                               (g$syntax-dispatch$7653$1pJll4
                                 g$t$9062$1pJll4
                                 '(_ #(atom #t))))))
                           (g$get-clause$8878$1pJll4
                             'sealed
                             g$clause*$9048$1pJll4))
                          ((case-lambda
                             ((g$t$9066$1pJll4)
                              ((case-lambda
                                 ((g$ls/false$9067$1pJll4)
                                  (if g$ls/false$9067$1pJll4
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9067$1pJll4)
                                    ((case-lambda
                                       ((g$t$9068$1pJll4)
                                        ((case-lambda
                                           ((g$ls/false$9069$1pJll4)
                                            (if g$ls/false$9069$1pJll4
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9069$1pJll4)
                                              (g$syntax-violation$7764$1pJll4
                                                '#f
                                                '"invalid syntax"
                                                g$t$9068$1pJll4))))
                                         (g$syntax-dispatch$7653$1pJll4
                                           g$t$9068$1pJll4
                                           '_))))
                                     g$t$9066$1pJll4))))
                               (g$syntax-dispatch$7653$1pJll4
                                 g$t$9066$1pJll4
                                 '(_ #(atom #t))))))
                           (g$get-clause$8878$1pJll4
                             'opaque
                             g$clause*$9048$1pJll4))
                          ((case-lambda
                             ((g$t$9070$1pJll4)
                              ((case-lambda
                                 ((g$ls/false$9071$1pJll4)
                                  (if g$ls/false$9071$1pJll4
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9072$1pJll4)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9050$1pJll4
                                             g$field-spec*$9072$1pJll4))))
                                      g$ls/false$9071$1pJll4)
                                    ((case-lambda
                                       ((g$t$9073$1pJll4)
                                        ((case-lambda
                                           ((g$ls/false$9074$1pJll4)
                                            (if g$ls/false$9074$1pJll4
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9074$1pJll4)
                                              (g$syntax-violation$7764$1pJll4
                                                '#f
                                                '"invalid syntax"
                                                g$t$9073$1pJll4))))
                                         (g$syntax-dispatch$7653$1pJll4
                                           g$t$9073$1pJll4
                                           '_))))
                                     g$t$9070$1pJll4))))
                               (g$syntax-dispatch$7653$1pJll4
                                 g$t$9070$1pJll4
                                 '(_ . each-any)))))
                           (g$get-clause$8878$1pJll4
                             'fields
                             g$clause*$9048$1pJll4)))))))
                  (g$parent-rtd-code$8880$1pJll4
                    (case-lambda
                      ((g$clause*$9035$1pJll4)
                       ((case-lambda
                          ((g$t$9036$1pJll4)
                           ((case-lambda
                              ((g$ls/false$9037$1pJll4)
                               (if g$ls/false$9037$1pJll4
                                 (apply
                                   (case-lambda
                                     ((g$name$9038$1pJll4)
                                      (list
                                        'record-type-descriptor
                                        g$name$9038$1pJll4)))
                                   g$ls/false$9037$1pJll4)
                                 ((case-lambda
                                    ((g$t$9039$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$9040$1pJll4)
                                         (if g$ls/false$9040$1pJll4
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9041$1pJll4)
                                                    ((case-lambda
                                                       ((g$ls/false$9042$1pJll4)
                                                        (if g$ls/false$9042$1pJll4
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9043$1pJll4
                                                                 g$rcd$9044$1pJll4)
                                                               g$rtd$9043$1pJll4))
                                                            g$ls/false$9042$1pJll4)
                                                          ((case-lambda
                                                             ((g$t$9045$1pJll4)
                                                              ((case-lambda
                                                                 ((g$ls/false$9046$1pJll4)
                                                                  (if g$ls/false$9046$1pJll4
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9046$1pJll4)
                                                                    (g$syntax-violation$7764$1pJll4
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9045$1pJll4))))
                                                               (g$syntax-dispatch$7653$1pJll4
                                                                 g$t$9045$1pJll4
                                                                 '#(atom #f)))))
                                                           g$t$9041$1pJll4))))
                                                     (g$syntax-dispatch$7653$1pJll4
                                                       g$t$9041$1pJll4
                                                       '(_ any any)))))
                                                 (g$get-clause$8878$1pJll4
                                                   'parent-rtd
                                                   g$clause*$9035$1pJll4))))
                                             g$ls/false$9040$1pJll4)
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"invalid syntax"
                                             g$t$9039$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$9039$1pJll4
                                        '#(atom #f)))))
                                  g$t$9036$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$9036$1pJll4
                              '(_ any)))))
                        (g$get-clause$8878$1pJll4
                          'parent
                          g$clause*$9035$1pJll4)))))
                  (g$parent-rcd-code$8881$1pJll4
                    (case-lambda
                      ((g$clause*$9023$1pJll4)
                       ((case-lambda
                          ((g$t$9024$1pJll4)
                           ((case-lambda
                              ((g$ls/false$9025$1pJll4)
                               (if g$ls/false$9025$1pJll4
                                 (apply
                                   (case-lambda
                                     ((g$name$9026$1pJll4)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9026$1pJll4)))
                                   g$ls/false$9025$1pJll4)
                                 ((case-lambda
                                    ((g$t$9027$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$9028$1pJll4)
                                         (if g$ls/false$9028$1pJll4
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9029$1pJll4)
                                                    ((case-lambda
                                                       ((g$ls/false$9030$1pJll4)
                                                        (if g$ls/false$9030$1pJll4
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9031$1pJll4
                                                                 g$rcd$9032$1pJll4)
                                                               g$rcd$9032$1pJll4))
                                                            g$ls/false$9030$1pJll4)
                                                          ((case-lambda
                                                             ((g$t$9033$1pJll4)
                                                              ((case-lambda
                                                                 ((g$ls/false$9034$1pJll4)
                                                                  (if g$ls/false$9034$1pJll4
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9034$1pJll4)
                                                                    (g$syntax-violation$7764$1pJll4
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9033$1pJll4))))
                                                               (g$syntax-dispatch$7653$1pJll4
                                                                 g$t$9033$1pJll4
                                                                 '#(atom #f)))))
                                                           g$t$9029$1pJll4))))
                                                     (g$syntax-dispatch$7653$1pJll4
                                                       g$t$9029$1pJll4
                                                       '(_ any any)))))
                                                 (g$get-clause$8878$1pJll4
                                                   'parent-rtd
                                                   g$clause*$9023$1pJll4))))
                                             g$ls/false$9028$1pJll4)
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"invalid syntax"
                                             g$t$9027$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$9027$1pJll4
                                        '#(atom #f)))))
                                  g$t$9024$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$9024$1pJll4
                              '(_ any)))))
                        (g$get-clause$8878$1pJll4
                          'parent
                          g$clause*$9023$1pJll4)))))
                  (g$foo-rcd-code$8882$1pJll4
                    (case-lambda
                      ((g$clause*$9019$1pJll4
                         g$foo-rtd$9020$1pJll4
                         g$protocol$9021$1pJll4
                         g$parent-rcd-code$9022$1pJll4)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9020$1pJll4
                         g$parent-rcd-code$9022$1pJll4
                         g$protocol$9021$1pJll4))))
                  (g$get-protocol-code$8883$1pJll4
                    (case-lambda
                      ((g$clause*$9013$1pJll4)
                       ((case-lambda
                          ((g$t$9014$1pJll4)
                           ((case-lambda
                              ((g$ls/false$9015$1pJll4)
                               (if g$ls/false$9015$1pJll4
                                 (apply
                                   (case-lambda
                                     ((g$expr$9016$1pJll4) g$expr$9016$1pJll4))
                                   g$ls/false$9015$1pJll4)
                                 ((case-lambda
                                    ((g$t$9017$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$9018$1pJll4)
                                         (if g$ls/false$9018$1pJll4
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9018$1pJll4)
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"invalid syntax"
                                             g$t$9017$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$9017$1pJll4
                                        '_))))
                                  g$t$9014$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$9014$1pJll4
                              '(_ any)))))
                        (g$get-clause$8878$1pJll4
                          'protocol
                          g$clause*$9013$1pJll4)))))
                  (g$get-fields$8884$1pJll4
                    (case-lambda
                      ((g$clause*$9004$1pJll4)
                       ((case-lambda
                          ((g$t$9005$1pJll4)
                           ((case-lambda
                              ((g$ls/false$9006$1pJll4)
                               (if g$ls/false$9006$1pJll4
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9006$1pJll4)
                                 ((case-lambda
                                    ((g$t$9007$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$9008$1pJll4)
                                         (if g$ls/false$9008$1pJll4
                                           (apply
                                             (case-lambda
                                               ((g$f*$9009$1pJll4)
                                                g$f*$9009$1pJll4))
                                             g$ls/false$9008$1pJll4)
                                           ((case-lambda
                                              ((g$t$9010$1pJll4)
                                               ((case-lambda
                                                  ((g$ls/false$9011$1pJll4)
                                                   (if g$ls/false$9011$1pJll4
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9012$1pJll4)
                                                          (g$get-fields$8884$1pJll4
                                                            g$rest$9012$1pJll4)))
                                                       g$ls/false$9011$1pJll4)
                                                     (g$syntax-violation$7764$1pJll4
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9010$1pJll4))))
                                                (g$syntax-dispatch$7653$1pJll4
                                                  g$t$9010$1pJll4
                                                  '(_ . any)))))
                                            g$t$9007$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$9007$1pJll4
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9005$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$9005$1pJll4
                              '()))))
                        g$clause*$9004$1pJll4))))
                  (g$get-mutator-indices$8885$1pJll4
                    (case-lambda
                      ((g$fields$8992$1pJll4)
                       ((letrec ((g$f$8993$1pJll4
                                   (case-lambda
                                     ((g$fields$8994$1pJll4 g$i$8995$1pJll4)
                                      ((case-lambda
                                         ((g$t$8996$1pJll4)
                                          ((case-lambda
                                             ((g$ls/false$8997$1pJll4)
                                              (if g$ls/false$8997$1pJll4
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8997$1pJll4)
                                                ((case-lambda
                                                   ((g$t$8998$1pJll4)
                                                    ((case-lambda
                                                       ((g$ls/false$8999$1pJll4)
                                                        (if g$ls/false$8999$1pJll4
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9000$1pJll4)
                                                               (cons
                                                                 g$i$8995$1pJll4
                                                                 (g$f$8993$1pJll4
                                                                   g$rest$9000$1pJll4
                                                                   (+ g$i$8995$1pJll4
                                                                      '1)))))
                                                            g$ls/false$8999$1pJll4)
                                                          ((case-lambda
                                                             ((g$t$9001$1pJll4)
                                                              ((case-lambda
                                                                 ((g$ls/false$9002$1pJll4)
                                                                  (if g$ls/false$9002$1pJll4
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9003$1pJll4)
                                                                         (g$f$8993$1pJll4
                                                                           g$rest$9003$1pJll4
                                                                           (+ g$i$8995$1pJll4
                                                                              '1))))
                                                                      g$ls/false$9002$1pJll4)
                                                                    (g$syntax-violation$7764$1pJll4
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9001$1pJll4))))
                                                               (g$syntax-dispatch$7653$1pJll4
                                                                 g$t$9001$1pJll4
                                                                 '(_ . any)))))
                                                           g$t$8998$1pJll4))))
                                                     (g$syntax-dispatch$7653$1pJll4
                                                       g$t$8998$1pJll4
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8996$1pJll4))))
                                           (g$syntax-dispatch$7653$1pJll4
                                             g$t$8996$1pJll4
                                             '()))))
                                       g$fields$8994$1pJll4)))))
                          g$f$8993$1pJll4)
                        g$fields$8992$1pJll4
                        '0))))
                  (g$get-mutators$8886$1pJll4
                    (case-lambda
                      ((g$foo$8971$1pJll4 g$fields$8972$1pJll4)
                       (letrec* ((g$gen-name$8973$1pJll4
                                   (case-lambda
                                     ((g$x$8991$1pJll4)
                                      (g$datum->syntax$7766$1pJll4
                                        g$foo$8971$1pJll4
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7767$1pJll4
                                                g$foo$8971$1pJll4))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7767$1pJll4
                                                g$x$8991$1pJll4))
                                            '"-set!")))))))
                         ((letrec ((g$f$8974$1pJll4
                                     (case-lambda
                                       ((g$fields$8975$1pJll4)
                                        ((case-lambda
                                           ((g$t$8976$1pJll4)
                                            ((case-lambda
                                               ((g$ls/false$8977$1pJll4)
                                                (if g$ls/false$8977$1pJll4
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8977$1pJll4)
                                                  ((case-lambda
                                                     ((g$t$8978$1pJll4)
                                                      ((case-lambda
                                                         ((g$ls/false$8979$1pJll4)
                                                          (if g$ls/false$8979$1pJll4
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8980$1pJll4
                                                                   g$accessor$8981$1pJll4
                                                                   g$mutator$8982$1pJll4
                                                                   g$rest$8983$1pJll4)
                                                                 (cons
                                                                   g$mutator$8982$1pJll4
                                                                   (g$f$8974$1pJll4
                                                                     g$rest$8983$1pJll4))))
                                                              g$ls/false$8979$1pJll4)
                                                            ((case-lambda
                                                               ((g$t$8984$1pJll4)
                                                                ((case-lambda
                                                                   ((g$ls/false$8985$1pJll4)
                                                                    (if g$ls/false$8985$1pJll4
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8986$1pJll4
                                                                             g$rest$8987$1pJll4)
                                                                           (cons
                                                                             (g$gen-name$8973$1pJll4
                                                                               g$name$8986$1pJll4)
                                                                             (g$f$8974$1pJll4
                                                                               g$rest$8987$1pJll4))))
                                                                        g$ls/false$8985$1pJll4)
                                                                      ((case-lambda
                                                                         ((g$t$8988$1pJll4)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8989$1pJll4)
                                                                              (if g$ls/false$8989$1pJll4
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8990$1pJll4)
                                                                                     (g$f$8974$1pJll4
                                                                                       g$rest$8990$1pJll4)))
                                                                                  g$ls/false$8989$1pJll4)
                                                                                (g$syntax-violation$7764$1pJll4
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8988$1pJll4))))
                                                                           (g$syntax-dispatch$7653$1pJll4
                                                                             g$t$8988$1pJll4
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8984$1pJll4))))
                                                                 (g$syntax-dispatch$7653$1pJll4
                                                                   g$t$8984$1pJll4
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8978$1pJll4))))
                                                       (g$syntax-dispatch$7653$1pJll4
                                                         g$t$8978$1pJll4
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8976$1pJll4))))
                                             (g$syntax-dispatch$7653$1pJll4
                                               g$t$8976$1pJll4
                                               '()))))
                                         g$fields$8975$1pJll4)))))
                            g$f$8974$1pJll4)
                          g$fields$8972$1pJll4)))))
                  (g$get-accessors$8887$1pJll4
                    (case-lambda
                      ((g$foo$8937$1pJll4 g$fields$8938$1pJll4)
                       (letrec* ((g$gen-name$8939$1pJll4
                                   (case-lambda
                                     ((g$x$8970$1pJll4)
                                      (g$datum->syntax$7766$1pJll4
                                        g$foo$8937$1pJll4
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7767$1pJll4
                                                g$foo$8937$1pJll4))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7767$1pJll4
                                                g$x$8970$1pJll4)))))))))
                         (map (case-lambda
                                ((g$field$8940$1pJll4)
                                 ((case-lambda
                                    ((g$t$8941$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$8942$1pJll4)
                                         (if (if g$ls/false$8942$1pJll4
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8943$1pJll4
                                                        g$accessor$8944$1pJll4
                                                        g$mutator$8945$1pJll4)
                                                      (g$id?$7375$1pJll4
                                                        g$accessor$8944$1pJll4)))
                                                   g$ls/false$8942$1pJll4))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8946$1pJll4
                                                  g$accessor$8947$1pJll4
                                                  g$mutator$8948$1pJll4)
                                                g$accessor$8947$1pJll4))
                                             g$ls/false$8942$1pJll4)
                                           ((case-lambda
                                              ((g$t$8949$1pJll4)
                                               ((case-lambda
                                                  ((g$ls/false$8950$1pJll4)
                                                   (if (if g$ls/false$8950$1pJll4
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8951$1pJll4
                                                                  g$accessor$8952$1pJll4)
                                                                (g$id?$7375$1pJll4
                                                                  g$accessor$8952$1pJll4)))
                                                             g$ls/false$8950$1pJll4))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8953$1pJll4
                                                            g$accessor$8954$1pJll4)
                                                          g$accessor$8954$1pJll4))
                                                       g$ls/false$8950$1pJll4)
                                                     ((case-lambda
                                                        ((g$t$8955$1pJll4)
                                                         ((case-lambda
                                                            ((g$ls/false$8956$1pJll4)
                                                             (if (if g$ls/false$8956$1pJll4
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8957$1pJll4)
                                                                          (g$id?$7375$1pJll4
                                                                            g$name$8957$1pJll4)))
                                                                       g$ls/false$8956$1pJll4))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8958$1pJll4)
                                                                    (g$gen-name$8939$1pJll4
                                                                      g$name$8958$1pJll4)))
                                                                 g$ls/false$8956$1pJll4)
                                                               ((case-lambda
                                                                  ((g$t$8959$1pJll4)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8960$1pJll4)
                                                                       (if (if g$ls/false$8960$1pJll4
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8961$1pJll4)
                                                                                    (g$id?$7375$1pJll4
                                                                                      g$name$8961$1pJll4)))
                                                                                 g$ls/false$8960$1pJll4))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8962$1pJll4)
                                                                              (g$gen-name$8939$1pJll4
                                                                                g$name$8962$1pJll4)))
                                                                           g$ls/false$8960$1pJll4)
                                                                         ((case-lambda
                                                                            ((g$t$8963$1pJll4)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8964$1pJll4)
                                                                                 (if (if g$ls/false$8964$1pJll4
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8965$1pJll4)
                                                                                              (g$id?$7375$1pJll4
                                                                                                g$name$8965$1pJll4)))
                                                                                           g$ls/false$8964$1pJll4))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8966$1pJll4)
                                                                                        (g$gen-name$8939$1pJll4
                                                                                          g$name$8966$1pJll4)))
                                                                                     g$ls/false$8964$1pJll4)
                                                                                   ((case-lambda
                                                                                      ((g$t$8967$1pJll4)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8968$1pJll4)
                                                                                           (if g$ls/false$8968$1pJll4
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8969$1pJll4)
                                                                                                  (g$syntax-violation$7764$1pJll4
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8940$1pJll4)))
                                                                                               g$ls/false$8968$1pJll4)
                                                                                             (g$syntax-violation$7764$1pJll4
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8967$1pJll4))))
                                                                                        (g$syntax-dispatch$7653$1pJll4
                                                                                          g$t$8967$1pJll4
                                                                                          'any))))
                                                                                    g$t$8963$1pJll4))))
                                                                              (g$syntax-dispatch$7653$1pJll4
                                                                                g$t$8963$1pJll4
                                                                                'any))))
                                                                          g$t$8959$1pJll4))))
                                                                    (g$syntax-dispatch$7653$1pJll4
                                                                      g$t$8959$1pJll4
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8955$1pJll4))))
                                                          (g$syntax-dispatch$7653$1pJll4
                                                            g$t$8955$1pJll4
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8949$1pJll4))))
                                                (g$syntax-dispatch$7653$1pJll4
                                                  g$t$8949$1pJll4
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8941$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$8941$1pJll4
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8940$1pJll4)))
                              g$fields$8938$1pJll4)))))
                  (g$enumerate$8888$1pJll4
                    (case-lambda
                      ((g$ls$8933$1pJll4)
                       ((letrec ((g$f$8934$1pJll4
                                   (case-lambda
                                     ((g$ls$8935$1pJll4 g$i$8936$1pJll4)
                                      (if (null? g$ls$8935$1pJll4)
                                        '()
                                        (cons
                                          g$i$8936$1pJll4
                                          (g$f$8934$1pJll4
                                            (cdr g$ls$8935$1pJll4)
                                            (+ g$i$8936$1pJll4 '1))))))))
                          g$f$8934$1pJll4)
                        g$ls$8933$1pJll4
                        '0))))
                  (g$do-define-record$8889$1pJll4
                    (case-lambda
                      ((g$namespec$8913$1pJll4 g$clause*$8914$1pJll4)
                       ((case-lambda
                          ((g$foo$8915$1pJll4)
                           ((case-lambda
                              ((g$foo-rtd$8916$1pJll4)
                               ((case-lambda
                                  ((g$foo-rcd$8917$1pJll4)
                                   ((case-lambda
                                      ((g$protocol$8918$1pJll4)
                                       ((case-lambda
                                          ((g$make-foo$8919$1pJll4)
                                           ((case-lambda
                                              ((g$fields$8920$1pJll4)
                                               ((case-lambda
                                                  ((g$idx*$8921$1pJll4)
                                                   ((case-lambda
                                                      ((g$foo-x*$8922$1pJll4)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8923$1pJll4)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8924$1pJll4)
                                                               ((case-lambda
                                                                  ((g$foo?$8925$1pJll4)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8926$1pJll4)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8927$1pJll4)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8928$1pJll4)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7616$1pJll4
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8916$1pJll4
                                                                                           g$foo-rtd-code$8926$1pJll4)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8918$1pJll4
                                                                                             g$protocol-code$8928$1pJll4)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8917$1pJll4
                                                                                               g$foo-rcd-code$8927$1pJll4)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8915$1pJll4
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8916$1pJll4)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8917$1pJll4)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8925$1pJll4
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8916$1pJll4))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8919$1pJll4
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8917$1pJll4))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8929$1pJll4
                                                                                                               g$idx$8930$1pJll4)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8929$1pJll4
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8916$1pJll4
                                                                                                                 g$idx$8930$1pJll4))))
                                                                                                          g$foo-x*$8922$1pJll4
                                                                                                          g$idx*$8921$1pJll4)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8931$1pJll4
                                                                                                               g$idx$8932$1pJll4)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8931$1pJll4
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8916$1pJll4
                                                                                                                 g$idx$8932$1pJll4))))
                                                                                                          g$set-foo-x!*$8923$1pJll4
                                                                                                          g$set-foo-idx*$8924$1pJll4)))))))))))))))
                                                                            (g$get-protocol-code$8883$1pJll4
                                                                              g$clause*$8914$1pJll4))))
                                                                        (g$foo-rcd-code$8882$1pJll4
                                                                          g$clause*$8914$1pJll4
                                                                          g$foo-rtd$8916$1pJll4
                                                                          g$protocol$8918$1pJll4
                                                                          (g$parent-rcd-code$8881$1pJll4
                                                                            g$clause*$8914$1pJll4)))))
                                                                    (g$foo-rtd-code$8879$1pJll4
                                                                      g$foo$8915$1pJll4
                                                                      g$clause*$8914$1pJll4
                                                                      (g$parent-rtd-code$8880$1pJll4
                                                                        g$clause*$8914$1pJll4)))))
                                                                (g$get-record-predicate-name$8877$1pJll4
                                                                  g$namespec$8913$1pJll4))))
                                                            (g$get-mutator-indices$8885$1pJll4
                                                              g$fields$8920$1pJll4))))
                                                        (g$get-mutators$8886$1pJll4
                                                          g$foo$8915$1pJll4
                                                          g$fields$8920$1pJll4))))
                                                    (g$get-accessors$8887$1pJll4
                                                      g$foo$8915$1pJll4
                                                      g$fields$8920$1pJll4))))
                                                (g$enumerate$8888$1pJll4
                                                  g$fields$8920$1pJll4))))
                                            (g$get-fields$8884$1pJll4
                                              g$clause*$8914$1pJll4))))
                                        (g$get-record-constructor-name$8876$1pJll4
                                          g$namespec$8913$1pJll4))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8875$1pJll4
                          g$namespec$8913$1pJll4)))))
                  (g$verify-clauses$8890$1pJll4
                    (case-lambda
                      ((g$x$8895$1pJll4 g$cls*$8896$1pJll4)
                       (letrec* ((g$valid-kwds$8897$1pJll4
                                   (map g$bless$7616$1pJll4
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8898$1pJll4
                                   (case-lambda
                                     ((g$x$8910$1pJll4 g$ls$8911$1pJll4)
                                      (if (pair? g$ls$8911$1pJll4)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8912$1pJll4)
                                              (if g$t$8912$1pJll4
                                                g$t$8912$1pJll4
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8898$1pJll4
                                                    g$x$8910$1pJll4
                                                    (cdr g$ls$8911$1pJll4))))))
                                           (g$free-id=?$7379$1pJll4
                                             g$x$8910$1pJll4
                                             (car g$ls$8911$1pJll4))))
                                        '#f)))))
                         ((letrec ((g$f$8899$1pJll4
                                     (case-lambda
                                       ((g$cls*$8900$1pJll4 g$seen*$8901$1pJll4)
                                        (if (not (null? g$cls*$8900$1pJll4))
                                          ((case-lambda
                                             ((g$t$8902$1pJll4)
                                              ((case-lambda
                                                 ((g$ls/false$8903$1pJll4)
                                                  (if g$ls/false$8903$1pJll4
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8904$1pJll4
                                                           g$rest$8905$1pJll4)
                                                         (if ((case-lambda
                                                                ((g$t$8906$1pJll4)
                                                                 (if g$t$8906$1pJll4
                                                                   g$t$8906$1pJll4
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8898$1pJll4
                                                                            g$kwd$8904$1pJll4
                                                                            g$valid-kwds$8897$1pJll4))))))
                                                              (not (g$id?$7375$1pJll4
                                                                     g$kwd$8904$1pJll4)))
                                                           (g$syntax-violation$7764$1pJll4
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8904$1pJll4)
                                                           (if (g$bound-id-member?$7382$1pJll4
                                                                 g$kwd$8904$1pJll4
                                                                 g$seen*$8901$1pJll4)
                                                             (g$syntax-violation$7764$1pJll4
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8895$1pJll4
                                                               g$kwd$8904$1pJll4)
                                                             (g$f$8899$1pJll4
                                                               (cdr g$cls*$8900$1pJll4)
                                                               (cons
                                                                 g$kwd$8904$1pJll4
                                                                 g$seen*$8901$1pJll4))))))
                                                      g$ls/false$8903$1pJll4)
                                                    ((case-lambda
                                                       ((g$t$8907$1pJll4)
                                                        ((case-lambda
                                                           ((g$ls/false$8908$1pJll4)
                                                            (if g$ls/false$8908$1pJll4
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8909$1pJll4)
                                                                   (g$syntax-violation$7764$1pJll4
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8909$1pJll4)))
                                                                g$ls/false$8908$1pJll4)
                                                              (g$syntax-violation$7764$1pJll4
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8907$1pJll4))))
                                                         (g$syntax-dispatch$7653$1pJll4
                                                           g$t$8907$1pJll4
                                                           'any))))
                                                     g$t$8902$1pJll4))))
                                               (g$syntax-dispatch$7653$1pJll4
                                                 g$t$8902$1pJll4
                                                 '(any . any)))))
                                           (car g$cls*$8900$1pJll4))
                                          (void))))))
                            g$f$8899$1pJll4)
                          g$cls*$8896$1pJll4
                          '()))))))
          ((case-lambda
             ((g$t$8891$1pJll4)
              ((case-lambda
                 ((g$ls/false$8892$1pJll4)
                  (if g$ls/false$8892$1pJll4
                    (apply
                      (case-lambda
                        ((g$namespec$8893$1pJll4 g$clause*$8894$1pJll4)
                         (begin
                           (g$verify-clauses$8890$1pJll4
                             g$x$8873$1pJll4
                             g$clause*$8894$1pJll4)
                           (g$do-define-record$8889$1pJll4
                             g$namespec$8893$1pJll4
                             g$clause*$8894$1pJll4))))
                      g$ls/false$8892$1pJll4)
                    (g$syntax-violation$7764$1pJll4
                      '#f
                      '"invalid syntax"
                      g$t$8891$1pJll4))))
               (g$syntax-dispatch$7653$1pJll4
                 g$t$8891$1pJll4
                 '(_ any . each-any)))))
           g$x$8873$1pJll4)))))
   (g$define-condition-type-macro$7648$1pJll4
     g$define-condition-type-macro$11094$1pJll4
     (case-lambda
       ((g$x$9129$1pJll4)
        (letrec* ((g$mkname$9130$1pJll4
                    (case-lambda
                      ((g$name$9153$1pJll4 g$suffix$9154$1pJll4)
                       (g$datum->syntax$7766$1pJll4
                         g$name$9153$1pJll4
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7767$1pJll4 g$name$9153$1pJll4))
                             g$suffix$9154$1pJll4)))))))
          ((case-lambda
             ((g$t$9131$1pJll4)
              ((case-lambda
                 ((g$ls/false$9132$1pJll4)
                  (if (if g$ls/false$9132$1pJll4
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9133$1pJll4
                                 g$name$9134$1pJll4
                                 g$super$9135$1pJll4
                                 g$constructor$9136$1pJll4
                                 g$predicate$9137$1pJll4
                                 g$field*$9138$1pJll4
                                 g$accessor*$9139$1pJll4)
                               (if (g$id?$7375$1pJll4 g$name$9134$1pJll4)
                                 (if (g$id?$7375$1pJll4 g$super$9135$1pJll4)
                                   (if (g$id?$7375$1pJll4
                                         g$constructor$9136$1pJll4)
                                     (if (g$id?$7375$1pJll4
                                           g$predicate$9137$1pJll4)
                                       (if (g$for-all$5503$1pJll4
                                             g$id?$7375$1pJll4
                                             g$field*$9138$1pJll4)
                                         (begin
                                           '#f
                                           (g$for-all$5503$1pJll4
                                             g$id?$7375$1pJll4
                                             g$accessor*$9139$1pJll4))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9132$1pJll4))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9140$1pJll4
                           g$name$9141$1pJll4
                           g$super$9142$1pJll4
                           g$constructor$9143$1pJll4
                           g$predicate$9144$1pJll4
                           g$field*$9145$1pJll4
                           g$accessor*$9146$1pJll4)
                         ((case-lambda
                            ((g$aux-accessor*$9147$1pJll4)
                             (g$bless$7616$1pJll4
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9141$1pJll4
                                         g$constructor$9143$1pJll4
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9142$1pJll4)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9148$1pJll4
                                                       g$aux$9149$1pJll4)
                                                     (list
                                                       'immutable
                                                       g$field$9148$1pJll4
                                                       g$aux$9149$1pJll4)))
                                                  g$field*$9145$1pJll4
                                                  g$aux-accessor*$9147$1pJll4))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9144$1pJll4
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9141$1pJll4)))
                                     (map (case-lambda
                                            ((g$accessor$9150$1pJll4
                                               g$aux$9151$1pJll4)
                                             (list
                                               'define
                                               g$accessor$9150$1pJll4
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9141$1pJll4)
                                                 g$aux$9151$1pJll4))))
                                          g$accessor*$9146$1pJll4
                                          g$aux-accessor*$9147$1pJll4)))))))
                          (map (case-lambda ((g$x$9152$1pJll4) (gensym)))
                               g$accessor*$9146$1pJll4))))
                      g$ls/false$9132$1pJll4)
                    (g$syntax-violation$7764$1pJll4
                      '#f
                      '"invalid syntax"
                      g$t$9131$1pJll4))))
               (g$syntax-dispatch$7653$1pJll4
                 g$t$9131$1pJll4
                 '(any any any any any . #(each (any any)))))))
           g$x$9129$1pJll4)))))
   (g$incorrect-usage-macro$7649$1pJll4
     g$incorrect-usage-macro$11095$1pJll4
     (case-lambda
       ((g$e$9155$1pJll4)
        (g$syntax-violation$7764$1pJll4
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9155$1pJll4))))
   (g$parameterize-macro$7650$1pJll4
     g$parameterize-macro$11096$1pJll4
     (case-lambda
       ((g$e$9156$1pJll4)
        ((case-lambda
           ((g$t$9157$1pJll4)
            ((case-lambda
               ((g$ls/false$9158$1pJll4)
                (if g$ls/false$9158$1pJll4
                  (apply
                    (case-lambda
                      ((g$b$9159$1pJll4 g$b*$9160$1pJll4)
                       (g$bless$7616$1pJll4
                         (cons
                           'begin
                           (cons g$b$9159$1pJll4 g$b*$9160$1pJll4)))))
                    g$ls/false$9158$1pJll4)
                  ((case-lambda
                     ((g$t$9161$1pJll4)
                      ((case-lambda
                         ((g$ls/false$9162$1pJll4)
                          (if g$ls/false$9162$1pJll4
                            (apply
                              (case-lambda
                                ((g$olhs*$9163$1pJll4
                                   g$orhs*$9164$1pJll4
                                   g$b$9165$1pJll4
                                   g$b*$9166$1pJll4)
                                 ((case-lambda
                                    ((g$lhs*$9167$1pJll4 g$rhs*$9168$1pJll4)
                                     (g$bless$7616$1pJll4
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9167$1pJll4
                                             g$rhs*$9168$1pJll4)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$9169$1pJll4
                                                               g$rhs$9170$1pJll4)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$9169$1pJll4)))
                                                               (list
                                                                 g$lhs$9169$1pJll4
                                                                 g$rhs$9170$1pJll4)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$9170$1pJll4
                                                                   '(t))))))
                                                          g$lhs*$9167$1pJll4
                                                          g$rhs*$9168$1pJll4)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9165$1pJll4
                                                         g$b*$9166$1pJll4)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9163$1pJll4
                                           g$orhs*$9164$1pJll4)))))
                                  (g$generate-temporaries$7754$1pJll4
                                    g$olhs*$9163$1pJll4)
                                  (g$generate-temporaries$7754$1pJll4
                                    g$orhs*$9164$1pJll4))))
                              g$ls/false$9162$1pJll4)
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"invalid syntax"
                              g$t$9161$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$9161$1pJll4
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9157$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$9157$1pJll4
               '(_ () any . each-any)))))
         g$e$9156$1pJll4))))
   (g$foreign-call-transformer$7651$1pJll4
     g$foreign-call-transformer$11097$1pJll4
     (case-lambda
       ((g$e$9171$1pJll4 g$r$9172$1pJll4 g$mr$9173$1pJll4)
        ((case-lambda
           ((g$t$9174$1pJll4)
            ((case-lambda
               ((g$ls/false$9175$1pJll4)
                (if g$ls/false$9175$1pJll4
                  (apply
                    (case-lambda
                      ((g$name$9176$1pJll4 g$arg*$9177$1pJll4)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7671$1pJll4
                             g$name$9176$1pJll4
                             g$r$9172$1pJll4
                             g$mr$9173$1pJll4)
                           (g$chi-expr*$7669$1pJll4
                             g$arg*$9177$1pJll4
                             g$r$9172$1pJll4
                             g$mr$9173$1pJll4)))))
                    g$ls/false$9175$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$9174$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$9174$1pJll4
               '(_ any . each-any)))))
         g$e$9171$1pJll4))))
   (g$convert-pattern$7652$1pJll4
     g$convert-pattern$11098$1pJll4
     (case-lambda
       ((g$pattern$9178$1pJll4 g$keys$9179$1pJll4)
        (letrec* ((g$cvt*$9180$1pJll4
                    (case-lambda
                      ((g$p*$9260$1pJll4 g$n$9261$1pJll4 g$ids$9262$1pJll4)
                       (if (null? g$p*$9260$1pJll4)
                         (values '() g$ids$9262$1pJll4)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9180$1pJll4
                                (cdr g$p*$9260$1pJll4)
                                g$n$9261$1pJll4
                                g$ids$9262$1pJll4)))
                           (case-lambda
                             ((g$y$9265$1pJll4 g$ids$9266$1pJll4)
                              ((case-lambda
                                 ((g$ids$9267$1pJll4 g$y$9268$1pJll4)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9181$1pJll4
                                         (car g$p*$9260$1pJll4)
                                         g$n$9261$1pJll4
                                         g$ids$9267$1pJll4)))
                                    (case-lambda
                                      ((g$x$9271$1pJll4 g$ids$9272$1pJll4)
                                       ((case-lambda
                                          ((g$ids$9273$1pJll4 g$x$9274$1pJll4)
                                           (values
                                             (cons
                                               g$x$9274$1pJll4
                                               g$y$9268$1pJll4)
                                             g$ids$9273$1pJll4)))
                                        g$ids$9272$1pJll4
                                        g$x$9271$1pJll4))))))
                               g$ids$9266$1pJll4
                               g$y$9265$1pJll4))))))))
                  (g$cvt$9181$1pJll4
                    (case-lambda
                      ((g$p$9182$1pJll4 g$n$9183$1pJll4 g$ids$9184$1pJll4)
                       ((case-lambda
                          ((g$t$9185$1pJll4)
                           ((case-lambda
                              ((g$ls/false$9186$1pJll4)
                               (if (if g$ls/false$9186$1pJll4
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9187$1pJll4)
                                            (g$id?$7375$1pJll4
                                              g$id$9187$1pJll4)))
                                         g$ls/false$9186$1pJll4))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9188$1pJll4)
                                      (if (g$bound-id-member?$7382$1pJll4
                                            g$p$9182$1pJll4
                                            g$keys$9179$1pJll4)
                                        (values
                                          (vector 'free-id g$p$9182$1pJll4)
                                          g$ids$9184$1pJll4)
                                        (if (g$free-id=?$7379$1pJll4
                                              g$p$9182$1pJll4
                                              (g$scheme-stx$7596$1pJll4 '_))
                                          (values '_ g$ids$9184$1pJll4)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9182$1pJll4
                                                g$n$9183$1pJll4)
                                              g$ids$9184$1pJll4))))))
                                   g$ls/false$9186$1pJll4)
                                 ((case-lambda
                                    ((g$t$9189$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$9190$1pJll4)
                                         (if (if g$ls/false$9190$1pJll4
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9191$1pJll4
                                                        g$dots$9192$1pJll4)
                                                      (g$ellipsis?$7654$1pJll4
                                                        g$dots$9192$1pJll4)))
                                                   g$ls/false$9190$1pJll4))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9193$1pJll4
                                                  g$dots$9194$1pJll4)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9181$1pJll4
                                                       g$p$9193$1pJll4
                                                       (+ g$n$9183$1pJll4 '1)
                                                       g$ids$9184$1pJll4)))
                                                  (case-lambda
                                                    ((g$p$9197$1pJll4
                                                       g$ids$9198$1pJll4)
                                                     ((case-lambda
                                                        ((g$ids$9199$1pJll4
                                                           g$p$9200$1pJll4)
                                                         (values
                                                           (if (eq? g$p$9200$1pJll4
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9200$1pJll4))
                                                           g$ids$9199$1pJll4)))
                                                      g$ids$9198$1pJll4
                                                      g$p$9197$1pJll4))))))
                                             g$ls/false$9190$1pJll4)
                                           ((case-lambda
                                              ((g$t$9201$1pJll4)
                                               ((case-lambda
                                                  ((g$ls/false$9202$1pJll4)
                                                   (if (if g$ls/false$9202$1pJll4
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9203$1pJll4
                                                                  g$dots$9204$1pJll4
                                                                  g$ys$9205$1pJll4
                                                                  g$z$9206$1pJll4)
                                                                (g$ellipsis?$7654$1pJll4
                                                                  g$dots$9204$1pJll4)))
                                                             g$ls/false$9202$1pJll4))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9207$1pJll4
                                                            g$dots$9208$1pJll4
                                                            g$ys$9209$1pJll4
                                                            g$z$9210$1pJll4)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9181$1pJll4
                                                                 g$z$9210$1pJll4
                                                                 g$n$9183$1pJll4
                                                                 g$ids$9184$1pJll4)))
                                                            (case-lambda
                                                              ((g$z$9213$1pJll4
                                                                 g$ids$9214$1pJll4)
                                                               ((case-lambda
                                                                  ((g$ids$9215$1pJll4
                                                                     g$z$9216$1pJll4)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9180$1pJll4
                                                                          g$ys$9209$1pJll4
                                                                          g$n$9183$1pJll4
                                                                          g$ids$9215$1pJll4)))
                                                                     (case-lambda
                                                                       ((g$ys$9219$1pJll4
                                                                          g$ids$9220$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$ids$9221$1pJll4
                                                                              g$ys$9222$1pJll4)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9181$1pJll4
                                                                                   g$x$9207$1pJll4
                                                                                   (+ g$n$9183$1pJll4
                                                                                      '1)
                                                                                   g$ids$9221$1pJll4)))
                                                                              (case-lambda
                                                                                ((g$x$9225$1pJll4
                                                                                   g$ids$9226$1pJll4)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9227$1pJll4
                                                                                       g$x$9228$1pJll4)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9228$1pJll4
                                                                                         (reverse
                                                                                           g$ys$9222$1pJll4)
                                                                                         g$z$9216$1pJll4)
                                                                                       g$ids$9227$1pJll4)))
                                                                                  g$ids$9226$1pJll4
                                                                                  g$x$9225$1pJll4))))))
                                                                         g$ids$9220$1pJll4
                                                                         g$ys$9219$1pJll4))))))
                                                                g$ids$9214$1pJll4
                                                                g$z$9213$1pJll4))))))
                                                       g$ls/false$9202$1pJll4)
                                                     ((case-lambda
                                                        ((g$t$9229$1pJll4)
                                                         ((case-lambda
                                                            ((g$ls/false$9230$1pJll4)
                                                             (if g$ls/false$9230$1pJll4
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9231$1pJll4
                                                                      g$y$9232$1pJll4)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9181$1pJll4
                                                                           g$y$9232$1pJll4
                                                                           g$n$9183$1pJll4
                                                                           g$ids$9184$1pJll4)))
                                                                      (case-lambda
                                                                        ((g$y$9235$1pJll4
                                                                           g$ids$9236$1pJll4)
                                                                         ((case-lambda
                                                                            ((g$ids$9237$1pJll4
                                                                               g$y$9238$1pJll4)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9181$1pJll4
                                                                                    g$x$9231$1pJll4
                                                                                    g$n$9183$1pJll4
                                                                                    g$ids$9237$1pJll4)))
                                                                               (case-lambda
                                                                                 ((g$x$9241$1pJll4
                                                                                    g$ids$9242$1pJll4)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9243$1pJll4
                                                                                        g$x$9244$1pJll4)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9244$1pJll4
                                                                                          g$y$9238$1pJll4)
                                                                                        g$ids$9243$1pJll4)))
                                                                                   g$ids$9242$1pJll4
                                                                                   g$x$9241$1pJll4))))))
                                                                          g$ids$9236$1pJll4
                                                                          g$y$9235$1pJll4))))))
                                                                 g$ls/false$9230$1pJll4)
                                                               ((case-lambda
                                                                  ((g$t$9245$1pJll4)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9246$1pJll4)
                                                                       (if g$ls/false$9246$1pJll4
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9184$1pJll4)))
                                                                           g$ls/false$9246$1pJll4)
                                                                         ((case-lambda
                                                                            ((g$t$9247$1pJll4)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9248$1pJll4)
                                                                                 (if (if g$ls/false$9248$1pJll4
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9249$1pJll4)
                                                                                              (not (g$stx?$7347$1pJll4
                                                                                                     g$p$9249$1pJll4))))
                                                                                           g$ls/false$9248$1pJll4))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9250$1pJll4)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9181$1pJll4
                                                                                               g$p$9250$1pJll4
                                                                                               g$n$9183$1pJll4
                                                                                               g$ids$9184$1pJll4)))
                                                                                          (case-lambda
                                                                                            ((g$p$9253$1pJll4
                                                                                               g$ids$9254$1pJll4)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9255$1pJll4
                                                                                                   g$p$9256$1pJll4)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9256$1pJll4)
                                                                                                   g$ids$9255$1pJll4)))
                                                                                              g$ids$9254$1pJll4
                                                                                              g$p$9253$1pJll4))))))
                                                                                     g$ls/false$9248$1pJll4)
                                                                                   ((case-lambda
                                                                                      ((g$t$9257$1pJll4)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9258$1pJll4)
                                                                                           (if g$ls/false$9258$1pJll4
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9259$1pJll4)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7386$1pJll4
                                                                                                        g$datum$9259$1pJll4))
                                                                                                    g$ids$9184$1pJll4)))
                                                                                               g$ls/false$9258$1pJll4)
                                                                                             (g$syntax-violation$7764$1pJll4
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9257$1pJll4))))
                                                                                        (g$syntax-dispatch$7653$1pJll4
                                                                                          g$t$9257$1pJll4
                                                                                          'any))))
                                                                                    g$t$9247$1pJll4))))
                                                                              (g$syntax-dispatch$7653$1pJll4
                                                                                g$t$9247$1pJll4
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9245$1pJll4))))
                                                                    (g$syntax-dispatch$7653$1pJll4
                                                                      g$t$9245$1pJll4
                                                                      '()))))
                                                                g$t$9229$1pJll4))))
                                                          (g$syntax-dispatch$7653$1pJll4
                                                            g$t$9229$1pJll4
                                                            '(any . any)))))
                                                      g$t$9201$1pJll4))))
                                                (g$syntax-dispatch$7653$1pJll4
                                                  g$t$9201$1pJll4
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9189$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$9189$1pJll4
                                        '(any any)))))
                                  g$t$9185$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$9185$1pJll4
                              'any))))
                        g$p$9182$1pJll4)))))
          (g$cvt$9181$1pJll4 g$pattern$9178$1pJll4 '0 '())))))
   (g$syntax-dispatch$7653$1pJll4
     g$syntax-dispatch$11099$1pJll4
     (case-lambda
       ((g$e$9275$1pJll4 g$p$9276$1pJll4)
        (letrec* ((g$stx^$9277$1pJll4
                    (case-lambda
                      ((g$e$9385$1pJll4
                         g$m*$9386$1pJll4
                         g$s*$9387$1pJll4
                         g$ae*$9388$1pJll4)
                       (if (if (null? g$m*$9386$1pJll4)
                             (if (null? g$s*$9387$1pJll4)
                               (begin '#f (null? g$ae*$9388$1pJll4))
                               '#f)
                             '#f)
                         g$e$9385$1pJll4
                         (g$mkstx$7363$1pJll4
                           g$e$9385$1pJll4
                           g$m*$9386$1pJll4
                           g$s*$9387$1pJll4
                           g$ae*$9388$1pJll4)))))
                  (g$match-each$9278$1pJll4
                    (case-lambda
                      ((g$e$9369$1pJll4
                         g$p$9370$1pJll4
                         g$m*$9371$1pJll4
                         g$s*$9372$1pJll4
                         g$ae*$9373$1pJll4)
                       (if (pair? g$e$9369$1pJll4)
                         ((case-lambda
                            ((g$first$9374$1pJll4)
                             (if g$first$9374$1pJll4
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9375$1pJll4)
                                     (if g$rest$9375$1pJll4
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9374$1pJll4
                                           g$rest$9375$1pJll4))
                                       '#f)))
                                  (g$match-each$9278$1pJll4
                                    (cdr g$e$9369$1pJll4)
                                    g$p$9370$1pJll4
                                    g$m*$9371$1pJll4
                                    g$s*$9372$1pJll4
                                    g$ae*$9373$1pJll4)))
                               '#f)))
                          (g$match$9284$1pJll4
                            (car g$e$9369$1pJll4)
                            g$p$9370$1pJll4
                            g$m*$9371$1pJll4
                            g$s*$9372$1pJll4
                            g$ae*$9373$1pJll4
                            '()))
                         (if (null? g$e$9369$1pJll4)
                           '()
                           (if (g$stx?$7347$1pJll4 g$e$9369$1pJll4)
                             (if (not (g$top-marked?$7318$1pJll4
                                        g$m*$9371$1pJll4))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7362$1pJll4
                                        g$m*$9371$1pJll4
                                        g$s*$9372$1pJll4
                                        g$ae*$9373$1pJll4
                                        g$e$9369$1pJll4)))
                                   (case-lambda
                                     ((g$m*$9379$1pJll4
                                        g$s*$9380$1pJll4
                                        g$ae*$9381$1pJll4)
                                      ((case-lambda
                                         ((g$ae*$9382$1pJll4
                                            g$s*$9383$1pJll4
                                            g$m*$9384$1pJll4)
                                          (g$match-each$9278$1pJll4
                                            (g$stx-expr$7349$1pJll4
                                              g$e$9369$1pJll4)
                                            g$p$9370$1pJll4
                                            g$m*$9384$1pJll4
                                            g$s*$9383$1pJll4
                                            g$ae*$9382$1pJll4)))
                                       g$ae*$9381$1pJll4
                                       g$s*$9380$1pJll4
                                       g$m*$9379$1pJll4)))))
                               '#f)
                             (if (annotation? g$e$9369$1pJll4)
                               (g$match-each$9278$1pJll4
                                 (annotation-expression g$e$9369$1pJll4)
                                 g$p$9370$1pJll4
                                 g$m*$9371$1pJll4
                                 g$s*$9372$1pJll4
                                 g$ae*$9373$1pJll4)
                               '#f)))))))
                  (g$match-each+$9279$1pJll4
                    (case-lambda
                      ((g$e$9337$1pJll4
                         g$x-pat$9338$1pJll4
                         g$y-pat$9339$1pJll4
                         g$z-pat$9340$1pJll4
                         g$m*$9341$1pJll4
                         g$s*$9342$1pJll4
                         g$ae*$9343$1pJll4
                         g$r$9344$1pJll4)
                       ((letrec ((g$f$9345$1pJll4
                                   (case-lambda
                                     ((g$e$9346$1pJll4
                                        g$m*$9347$1pJll4
                                        g$s*$9348$1pJll4
                                        g$ae*$9349$1pJll4)
                                      (if (pair? g$e$9346$1pJll4)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9345$1pJll4
                                               (cdr g$e$9346$1pJll4)
                                               g$m*$9347$1pJll4
                                               g$s*$9348$1pJll4
                                               g$ae*$9349$1pJll4)))
                                          (case-lambda
                                            ((g$xr*$9353$1pJll4
                                               g$y-pat$9354$1pJll4
                                               g$r$9355$1pJll4)
                                             ((case-lambda
                                                ((g$r$9356$1pJll4
                                                   g$y-pat$9357$1pJll4
                                                   g$xr*$9358$1pJll4)
                                                 (if g$r$9356$1pJll4
                                                   (if (null?
                                                         g$y-pat$9357$1pJll4)
                                                     ((case-lambda
                                                        ((g$xr$9359$1pJll4)
                                                         (if g$xr$9359$1pJll4
                                                           (values
                                                             (cons
                                                               g$xr$9359$1pJll4
                                                               g$xr*$9358$1pJll4)
                                                             g$y-pat$9357$1pJll4
                                                             g$r$9356$1pJll4)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9284$1pJll4
                                                        (car g$e$9346$1pJll4)
                                                        g$x-pat$9338$1pJll4
                                                        g$m*$9347$1pJll4
                                                        g$s*$9348$1pJll4
                                                        g$ae*$9349$1pJll4
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9357$1pJll4)
                                                       (g$match$9284$1pJll4
                                                         (car g$e$9346$1pJll4)
                                                         (car g$y-pat$9357$1pJll4)
                                                         g$m*$9347$1pJll4
                                                         g$s*$9348$1pJll4
                                                         g$ae*$9349$1pJll4
                                                         g$r$9356$1pJll4)))
                                                   (values '#f '#f '#f))))
                                              g$r$9355$1pJll4
                                              g$y-pat$9354$1pJll4
                                              g$xr*$9353$1pJll4))))
                                        (if (g$stx?$7347$1pJll4 g$e$9346$1pJll4)
                                          (if (g$top-marked?$7318$1pJll4
                                                g$m*$9347$1pJll4)
                                            (values
                                              '()
                                              g$y-pat$9339$1pJll4
                                              (g$match$9284$1pJll4
                                                g$e$9346$1pJll4
                                                g$z-pat$9340$1pJll4
                                                g$m*$9347$1pJll4
                                                g$s*$9348$1pJll4
                                                g$ae*$9349$1pJll4
                                                g$r$9344$1pJll4))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7362$1pJll4
                                                   g$m*$9347$1pJll4
                                                   g$s*$9348$1pJll4
                                                   g$ae*$9349$1pJll4
                                                   g$e$9346$1pJll4)))
                                              (case-lambda
                                                ((g$m*$9363$1pJll4
                                                   g$s*$9364$1pJll4
                                                   g$ae*$9365$1pJll4)
                                                 ((case-lambda
                                                    ((g$ae*$9366$1pJll4
                                                       g$s*$9367$1pJll4
                                                       g$m*$9368$1pJll4)
                                                     (g$f$9345$1pJll4
                                                       (g$stx-expr$7349$1pJll4
                                                         g$e$9346$1pJll4)
                                                       g$m*$9368$1pJll4
                                                       g$s*$9367$1pJll4
                                                       g$ae*$9366$1pJll4)))
                                                  g$ae*$9365$1pJll4
                                                  g$s*$9364$1pJll4
                                                  g$m*$9363$1pJll4)))))
                                          (if (annotation? g$e$9346$1pJll4)
                                            (g$f$9345$1pJll4
                                              (annotation-expression
                                                g$e$9346$1pJll4)
                                              g$m*$9347$1pJll4
                                              g$s*$9348$1pJll4
                                              g$ae*$9349$1pJll4)
                                            (values
                                              '()
                                              g$y-pat$9339$1pJll4
                                              (g$match$9284$1pJll4
                                                g$e$9346$1pJll4
                                                g$z-pat$9340$1pJll4
                                                g$m*$9347$1pJll4
                                                g$s*$9348$1pJll4
                                                g$ae*$9349$1pJll4
                                                g$r$9344$1pJll4)))))))))
                          g$f$9345$1pJll4)
                        g$e$9337$1pJll4
                        g$m*$9341$1pJll4
                        g$s*$9342$1pJll4
                        g$ae*$9343$1pJll4))))
                  (g$match-each-any$9280$1pJll4
                    (case-lambda
                      ((g$e$9323$1pJll4
                         g$m*$9324$1pJll4
                         g$s*$9325$1pJll4
                         g$ae*$9326$1pJll4)
                       (if (pair? g$e$9323$1pJll4)
                         ((case-lambda
                            ((g$l$9327$1pJll4)
                             (if g$l$9327$1pJll4
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9277$1pJll4
                                     (car g$e$9323$1pJll4)
                                     g$m*$9324$1pJll4
                                     g$s*$9325$1pJll4
                                     g$ae*$9326$1pJll4)
                                   g$l$9327$1pJll4))
                               '#f)))
                          (g$match-each-any$9280$1pJll4
                            (cdr g$e$9323$1pJll4)
                            g$m*$9324$1pJll4
                            g$s*$9325$1pJll4
                            g$ae*$9326$1pJll4))
                         (if (null? g$e$9323$1pJll4)
                           '()
                           (if (g$stx?$7347$1pJll4 g$e$9323$1pJll4)
                             (if (not (g$top-marked?$7318$1pJll4
                                        g$m*$9324$1pJll4))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7362$1pJll4
                                        g$m*$9324$1pJll4
                                        g$s*$9325$1pJll4
                                        g$ae*$9326$1pJll4
                                        g$e$9323$1pJll4)))
                                   (case-lambda
                                     ((g$m*$9331$1pJll4
                                        g$s*$9332$1pJll4
                                        g$ae*$9333$1pJll4)
                                      ((case-lambda
                                         ((g$ae*$9334$1pJll4
                                            g$s*$9335$1pJll4
                                            g$m*$9336$1pJll4)
                                          (g$match-each-any$9280$1pJll4
                                            (g$stx-expr$7349$1pJll4
                                              g$e$9323$1pJll4)
                                            g$m*$9336$1pJll4
                                            g$s*$9335$1pJll4
                                            g$ae*$9334$1pJll4)))
                                       g$ae*$9333$1pJll4
                                       g$s*$9332$1pJll4
                                       g$m*$9331$1pJll4)))))
                               '#f)
                             (if (annotation? g$e$9323$1pJll4)
                               (g$match-each-any$9280$1pJll4
                                 (annotation-expression g$e$9323$1pJll4)
                                 g$m*$9324$1pJll4
                                 g$s*$9325$1pJll4
                                 g$ae*$9326$1pJll4)
                               '#f)))))))
                  (g$match-empty$9281$1pJll4
                    (case-lambda
                      ((g$p$9320$1pJll4 g$r$9321$1pJll4)
                       (if (null? g$p$9320$1pJll4)
                         g$r$9321$1pJll4
                         (if (eq? g$p$9320$1pJll4 '_)
                           g$r$9321$1pJll4
                           (if (eq? g$p$9320$1pJll4 'any)
                             (cons '() g$r$9321$1pJll4)
                             (if (pair? g$p$9320$1pJll4)
                               (g$match-empty$9281$1pJll4
                                 (car g$p$9320$1pJll4)
                                 (g$match-empty$9281$1pJll4
                                   (cdr g$p$9320$1pJll4)
                                   g$r$9321$1pJll4))
                               (if (eq? g$p$9320$1pJll4 'each-any)
                                 (cons '() g$r$9321$1pJll4)
                                 ((case-lambda
                                    ((g$t$9322$1pJll4)
                                     (if (memv g$t$9322$1pJll4 '(each))
                                       (g$match-empty$9281$1pJll4
                                         (vector-ref g$p$9320$1pJll4 '1)
                                         g$r$9321$1pJll4)
                                       (if (memv g$t$9322$1pJll4 '(each+))
                                         (g$match-empty$9281$1pJll4
                                           (vector-ref g$p$9320$1pJll4 '1)
                                           (g$match-empty$9281$1pJll4
                                             (reverse
                                               (vector-ref g$p$9320$1pJll4 '2))
                                             (g$match-empty$9281$1pJll4
                                               (vector-ref g$p$9320$1pJll4 '3)
                                               g$r$9321$1pJll4)))
                                         (if (memv
                                               g$t$9322$1pJll4
                                               '(free-id atom))
                                           g$r$9321$1pJll4
                                           (if (memv
                                                 g$t$9322$1pJll4
                                                 '(scheme-id atom))
                                             g$r$9321$1pJll4
                                             (if (memv
                                                   g$t$9322$1pJll4
                                                   '(vector))
                                               (g$match-empty$9281$1pJll4
                                                 (vector-ref g$p$9320$1pJll4 '1)
                                                 g$r$9321$1pJll4)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9320$1pJll4))))))))
                                  (vector-ref g$p$9320$1pJll4 '0))))))))))
                  (g$combine$9282$1pJll4
                    (case-lambda
                      ((g$r*$9318$1pJll4 g$r$9319$1pJll4)
                       (if (null? (car g$r*$9318$1pJll4))
                         g$r$9319$1pJll4
                         (cons
                           (map car g$r*$9318$1pJll4)
                           (g$combine$9282$1pJll4
                             (map cdr g$r*$9318$1pJll4)
                             g$r$9319$1pJll4))))))
                  (g$match*$9283$1pJll4
                    (case-lambda
                      ((g$e$9300$1pJll4
                         g$p$9301$1pJll4
                         g$m*$9302$1pJll4
                         g$s*$9303$1pJll4
                         g$ae*$9304$1pJll4
                         g$r$9305$1pJll4)
                       (if (null? g$p$9301$1pJll4)
                         (if (null? g$e$9300$1pJll4)
                           (begin '#f g$r$9305$1pJll4)
                           '#f)
                         (if (pair? g$p$9301$1pJll4)
                           (if (pair? g$e$9300$1pJll4)
                             (begin
                               '#f
                               (g$match$9284$1pJll4
                                 (car g$e$9300$1pJll4)
                                 (car g$p$9301$1pJll4)
                                 g$m*$9302$1pJll4
                                 g$s*$9303$1pJll4
                                 g$ae*$9304$1pJll4
                                 (g$match$9284$1pJll4
                                   (cdr g$e$9300$1pJll4)
                                   (cdr g$p$9301$1pJll4)
                                   g$m*$9302$1pJll4
                                   g$s*$9303$1pJll4
                                   g$ae*$9304$1pJll4
                                   g$r$9305$1pJll4)))
                             '#f)
                           (if (eq? g$p$9301$1pJll4 'each-any)
                             ((case-lambda
                                ((g$l$9306$1pJll4)
                                 (if g$l$9306$1pJll4
                                   (begin
                                     '#f
                                     (cons g$l$9306$1pJll4 g$r$9305$1pJll4))
                                   '#f)))
                              (g$match-each-any$9280$1pJll4
                                g$e$9300$1pJll4
                                g$m*$9302$1pJll4
                                g$s*$9303$1pJll4
                                g$ae*$9304$1pJll4))
                             ((case-lambda
                                ((g$t$9307$1pJll4)
                                 (if (memv g$t$9307$1pJll4 '(each))
                                   (if (null? g$e$9300$1pJll4)
                                     (g$match-empty$9281$1pJll4
                                       (vector-ref g$p$9301$1pJll4 '1)
                                       g$r$9305$1pJll4)
                                     ((case-lambda
                                        ((g$r*$9308$1pJll4)
                                         (if g$r*$9308$1pJll4
                                           (begin
                                             '#f
                                             (g$combine$9282$1pJll4
                                               g$r*$9308$1pJll4
                                               g$r$9305$1pJll4))
                                           '#f)))
                                      (g$match-each$9278$1pJll4
                                        g$e$9300$1pJll4
                                        (vector-ref g$p$9301$1pJll4 '1)
                                        g$m*$9302$1pJll4
                                        g$s*$9303$1pJll4
                                        g$ae*$9304$1pJll4)))
                                   (if (memv g$t$9307$1pJll4 '(free-id))
                                     (if (symbol? g$e$9300$1pJll4)
                                       (if (g$top-marked?$7318$1pJll4
                                             g$m*$9302$1pJll4)
                                         (if (g$free-id=?$7379$1pJll4
                                               (g$stx^$9277$1pJll4
                                                 g$e$9300$1pJll4
                                                 g$m*$9302$1pJll4
                                                 g$s*$9303$1pJll4
                                                 g$ae*$9304$1pJll4)
                                               (vector-ref g$p$9301$1pJll4 '1))
                                           (begin '#f g$r$9305$1pJll4)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (memv g$t$9307$1pJll4 '(scheme-id))
                                       (if (symbol? g$e$9300$1pJll4)
                                         (if (g$top-marked?$7318$1pJll4
                                               g$m*$9302$1pJll4)
                                           (if (g$free-id=?$7379$1pJll4
                                                 (g$stx^$9277$1pJll4
                                                   g$e$9300$1pJll4
                                                   g$m*$9302$1pJll4
                                                   g$s*$9303$1pJll4
                                                   g$ae*$9304$1pJll4)
                                                 (g$scheme-stx$7596$1pJll4
                                                   (vector-ref
                                                     g$p$9301$1pJll4
                                                     '1)))
                                             (begin '#f g$r$9305$1pJll4)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (memv g$t$9307$1pJll4 '(each+))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9279$1pJll4
                                                g$e$9300$1pJll4
                                                (vector-ref g$p$9301$1pJll4 '1)
                                                (vector-ref g$p$9301$1pJll4 '2)
                                                (vector-ref g$p$9301$1pJll4 '3)
                                                g$m*$9302$1pJll4
                                                g$s*$9303$1pJll4
                                                g$ae*$9304$1pJll4
                                                g$r$9305$1pJll4)))
                                           (case-lambda
                                             ((g$xr*$9312$1pJll4
                                                g$y-pat$9313$1pJll4
                                                g$r$9314$1pJll4)
                                              ((case-lambda
                                                 ((g$r$9315$1pJll4
                                                    g$y-pat$9316$1pJll4
                                                    g$xr*$9317$1pJll4)
                                                  (if g$r$9315$1pJll4
                                                    (if (null?
                                                          g$y-pat$9316$1pJll4)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9317$1pJll4)
                                                          (g$match-empty$9281$1pJll4
                                                            (vector-ref
                                                              g$p$9301$1pJll4
                                                              '1)
                                                            g$r$9315$1pJll4)
                                                          (g$combine$9282$1pJll4
                                                            g$xr*$9317$1pJll4
                                                            g$r$9315$1pJll4)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9314$1pJll4
                                               g$y-pat$9313$1pJll4
                                               g$xr*$9312$1pJll4))))
                                         (if (memv g$t$9307$1pJll4 '(atom))
                                           (if (equal?
                                                 (vector-ref g$p$9301$1pJll4 '1)
                                                 (g$strip$7385$1pJll4
                                                   g$e$9300$1pJll4
                                                   g$m*$9302$1pJll4))
                                             (begin '#f g$r$9305$1pJll4)
                                             '#f)
                                           (if (memv g$t$9307$1pJll4 '(vector))
                                             (if (vector? g$e$9300$1pJll4)
                                               (begin
                                                 '#f
                                                 (g$match$9284$1pJll4
                                                   (vector->list
                                                     g$e$9300$1pJll4)
                                                   (vector-ref
                                                     g$p$9301$1pJll4
                                                     '1)
                                                   g$m*$9302$1pJll4
                                                   g$s*$9303$1pJll4
                                                   g$ae*$9304$1pJll4
                                                   g$r$9305$1pJll4))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9301$1pJll4)))))))))
                              (vector-ref g$p$9301$1pJll4 '0))))))))
                  (g$match$9284$1pJll4
                    (case-lambda
                      ((g$e$9285$1pJll4
                         g$p$9286$1pJll4
                         g$m*$9287$1pJll4
                         g$s*$9288$1pJll4
                         g$ae*$9289$1pJll4
                         g$r$9290$1pJll4)
                       (if (not g$r$9290$1pJll4)
                         '#f
                         (if (eq? g$p$9286$1pJll4 '_)
                           g$r$9290$1pJll4
                           (if (eq? g$p$9286$1pJll4 'any)
                             (cons
                               (g$stx^$9277$1pJll4
                                 g$e$9285$1pJll4
                                 g$m*$9287$1pJll4
                                 g$s*$9288$1pJll4
                                 g$ae*$9289$1pJll4)
                               g$r$9290$1pJll4)
                             (if (g$stx?$7347$1pJll4 g$e$9285$1pJll4)
                               (if (not (g$top-marked?$7318$1pJll4
                                          g$m*$9287$1pJll4))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7362$1pJll4
                                          g$m*$9287$1pJll4
                                          g$s*$9288$1pJll4
                                          g$ae*$9289$1pJll4
                                          g$e$9285$1pJll4)))
                                     (case-lambda
                                       ((g$m*$9294$1pJll4
                                          g$s*$9295$1pJll4
                                          g$ae*$9296$1pJll4)
                                        ((case-lambda
                                           ((g$ae*$9297$1pJll4
                                              g$s*$9298$1pJll4
                                              g$m*$9299$1pJll4)
                                            (g$match$9284$1pJll4
                                              (g$stx-expr$7349$1pJll4
                                                g$e$9285$1pJll4)
                                              g$p$9286$1pJll4
                                              g$m*$9299$1pJll4
                                              g$s*$9298$1pJll4
                                              g$ae*$9297$1pJll4
                                              g$r$9290$1pJll4)))
                                         g$ae*$9296$1pJll4
                                         g$s*$9295$1pJll4
                                         g$m*$9294$1pJll4)))))
                                 '#f)
                               (if (annotation? g$e$9285$1pJll4)
                                 (g$match$9284$1pJll4
                                   (annotation-expression g$e$9285$1pJll4)
                                   g$p$9286$1pJll4
                                   g$m*$9287$1pJll4
                                   g$s*$9288$1pJll4
                                   g$ae*$9289$1pJll4
                                   g$r$9290$1pJll4)
                                 (g$match*$9283$1pJll4
                                   g$e$9285$1pJll4
                                   g$p$9286$1pJll4
                                   g$m*$9287$1pJll4
                                   g$s*$9288$1pJll4
                                   g$ae*$9289$1pJll4
                                   g$r$9290$1pJll4))))))))))
          (g$match$9284$1pJll4
            g$e$9275$1pJll4
            g$p$9276$1pJll4
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$7654$1pJll4
     g$ellipsis?$11100$1pJll4
     (case-lambda
       ((g$x$9389$1pJll4)
        (if (g$id?$7375$1pJll4 g$x$9389$1pJll4)
          (begin
            '#f
            (g$free-id=?$7379$1pJll4
              g$x$9389$1pJll4
              (g$scheme-stx$7596$1pJll4 '...)))
          '#f))))
   (g$underscore?$7655$1pJll4
     g$underscore?$11101$1pJll4
     (case-lambda
       ((g$x$9390$1pJll4)
        (if (g$id?$7375$1pJll4 g$x$9390$1pJll4)
          (begin
            '#f
            (g$free-id=?$7379$1pJll4
              g$x$9390$1pJll4
              (g$scheme-stx$7596$1pJll4 '_)))
          '#f))))
   (g$verify-literals$7656$1pJll4
     g$verify-literals$11102$1pJll4
     (case-lambda
       ((g$lits$9391$1pJll4 g$expr$9392$1pJll4)
        (for-each
          (case-lambda
            ((g$x$9393$1pJll4)
             (if ((case-lambda
                    ((g$t$9394$1pJll4)
                     (if g$t$9394$1pJll4
                       g$t$9394$1pJll4
                       ((case-lambda
                          ((g$t$9395$1pJll4)
                           (if g$t$9395$1pJll4
                             g$t$9395$1pJll4
                             (begin
                               '#f
                               (g$underscore?$7655$1pJll4 g$x$9393$1pJll4)))))
                        (g$ellipsis?$7654$1pJll4 g$x$9393$1pJll4)))))
                  (not (g$id?$7375$1pJll4 g$x$9393$1pJll4)))
               (g$syntax-violation$7764$1pJll4
                 '#f
                 '"invalid literal"
                 g$expr$9392$1pJll4
                 g$x$9393$1pJll4)
               (void))))
          g$lits$9391$1pJll4))))
   (g$syntax-case-transformer$7657$1pJll4
     g$syntax-case-transformer$11103$1pJll4
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9396$1pJll4
                     (case-lambda
                       ((g$pvars$9453$1pJll4
                          g$expr$9454$1pJll4
                          g$y$9455$1pJll4
                          g$r$9456$1pJll4
                          g$mr$9457$1pJll4)
                        ((case-lambda
                           ((g$ids$9458$1pJll4 g$levels$9459$1pJll4)
                            ((case-lambda
                               ((g$labels$9460$1pJll4 g$new-vars$9461$1pJll4)
                                ((case-lambda
                                   ((g$body$9462$1pJll4)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7306$1pJll4
                                        '#f
                                        g$new-vars$9461$1pJll4
                                        g$body$9462$1pJll4)
                                      g$y$9455$1pJll4)))
                                 (g$chi-expr$7671$1pJll4
                                   (g$add-subst$7365$1pJll4
                                     (g$make-full-rib$7343$1pJll4
                                       g$ids$9458$1pJll4
                                       g$labels$9460$1pJll4)
                                     g$expr$9454$1pJll4)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9463$1pJll4
                                               g$var$9464$1pJll4
                                               g$level$9465$1pJll4)
                                             (cons
                                               g$label$9463$1pJll4
                                               (g$make-binding$7391$1pJll4
                                                 'syntax
                                                 (cons
                                                   g$var$9464$1pJll4
                                                   g$level$9465$1pJll4)))))
                                          g$labels$9460$1pJll4
                                          g$new-vars$9461$1pJll4
                                          (map cdr g$pvars$9453$1pJll4))
                                     g$r$9456$1pJll4)
                                   g$mr$9457$1pJll4))))
                             (map g$gen-label$7321$1pJll4 g$ids$9458$1pJll4)
                             (map g$gen-lexical$7319$1pJll4
                                  g$ids$9458$1pJll4))))
                         (map car g$pvars$9453$1pJll4)
                         (map cdr g$pvars$9453$1pJll4)))))
                   (g$invalid-ids-error$9397$1pJll4
                     (case-lambda
                       ((g$id*$9447$1pJll4 g$e$9448$1pJll4 g$class$9449$1pJll4)
                        ((letrec ((g$find$9450$1pJll4
                                    (case-lambda
                                      ((g$id*$9451$1pJll4 g$ok*$9452$1pJll4)
                                       (if (null? g$id*$9451$1pJll4)
                                         (g$syntax-violation$7764$1pJll4
                                           '#f
                                           '"invalid syntax"
                                           g$e$9448$1pJll4)
                                         (if (g$id?$7375$1pJll4
                                               (car g$id*$9451$1pJll4))
                                           (if (g$bound-id-member?$7382$1pJll4
                                                 (car g$id*$9451$1pJll4)
                                                 g$ok*$9452$1pJll4)
                                             (g$syntax-error$7761$1pJll4
                                               (car g$id*$9451$1pJll4)
                                               '"duplicate "
                                               g$class$9449$1pJll4)
                                             (g$find$9450$1pJll4
                                               (cdr g$id*$9451$1pJll4)
                                               (cons
                                                 (car g$id*$9451$1pJll4)
                                                 g$ok*$9452$1pJll4)))
                                           (g$syntax-error$7761$1pJll4
                                             (car g$id*$9451$1pJll4)
                                             '"invalid "
                                             g$class$9449$1pJll4)))))))
                           g$find$9450$1pJll4)
                         g$id*$9447$1pJll4
                         '()))))
                   (g$gen-clause$9398$1pJll4
                     (case-lambda
                       ((g$x$9427$1pJll4
                          g$keys$9428$1pJll4
                          g$clauses$9429$1pJll4
                          g$r$9430$1pJll4
                          g$mr$9431$1pJll4
                          g$pat$9432$1pJll4
                          g$fender$9433$1pJll4
                          g$expr$9434$1pJll4)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7652$1pJll4
                               g$pat$9432$1pJll4
                               g$keys$9428$1pJll4)))
                          (case-lambda
                            ((g$p$9437$1pJll4 g$pvars$9438$1pJll4)
                             ((case-lambda
                                ((g$pvars$9439$1pJll4 g$p$9440$1pJll4)
                                 (if (not (g$distinct-bound-ids?$7381$1pJll4
                                            (map car g$pvars$9439$1pJll4)))
                                   (g$invalid-ids-error$9397$1pJll4
                                     (map car g$pvars$9439$1pJll4)
                                     g$pat$9432$1pJll4
                                     '"pattern variable")
                                   (if (not (g$for-all$5503$1pJll4
                                              (case-lambda
                                                ((g$x$9441$1pJll4)
                                                 (not (g$ellipsis?$7654$1pJll4
                                                        (car g$x$9441$1pJll4)))))
                                              g$pvars$9439$1pJll4))
                                     (g$syntax-violation$7764$1pJll4
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9432$1pJll4)
                                     ((case-lambda
                                        ((g$y$9442$1pJll4)
                                         ((case-lambda
                                            ((g$test$9443$1pJll4)
                                             ((case-lambda
                                                ((g$conseq$9444$1pJll4)
                                                 ((case-lambda
                                                    ((g$altern$9445$1pJll4)
                                                     (list
                                                       (g$build-lambda$7306$1pJll4
                                                         '#f
                                                         (list g$y$9442$1pJll4)
                                                         (list
                                                           'if
                                                           g$test$9443$1pJll4
                                                           g$conseq$9444$1pJll4
                                                           g$altern$9445$1pJll4))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9427$1pJll4
                                                         (list
                                                           'quote
                                                           g$p$9440$1pJll4)))))
                                                  (g$gen-syntax-case$9399$1pJll4
                                                    g$x$9427$1pJll4
                                                    g$keys$9428$1pJll4
                                                    g$clauses$9429$1pJll4
                                                    g$r$9430$1pJll4
                                                    g$mr$9431$1pJll4))))
                                              (g$build-dispatch-call$9396$1pJll4
                                                g$pvars$9439$1pJll4
                                                g$expr$9434$1pJll4
                                                g$y$9442$1pJll4
                                                g$r$9430$1pJll4
                                                g$mr$9431$1pJll4))))
                                          (if (eq? g$fender$9433$1pJll4 '#t)
                                            g$y$9442$1pJll4
                                            ((case-lambda
                                               ((g$call$9446$1pJll4)
                                                (list
                                                  'if
                                                  g$y$9442$1pJll4
                                                  g$call$9446$1pJll4
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9396$1pJll4
                                               g$pvars$9439$1pJll4
                                               g$fender$9433$1pJll4
                                               g$y$9442$1pJll4
                                               g$r$9430$1pJll4
                                               g$mr$9431$1pJll4))))))
                                      (g$gen-lexical$7319$1pJll4 'tmp))))))
                              g$pvars$9438$1pJll4
                              g$p$9437$1pJll4)))))))
                   (g$gen-syntax-case$9399$1pJll4
                     (case-lambda
                       ((g$x$9410$1pJll4
                          g$keys$9411$1pJll4
                          g$clauses$9412$1pJll4
                          g$r$9413$1pJll4
                          g$mr$9414$1pJll4)
                        (if (null? g$clauses$9412$1pJll4)
                          (list '(primitive syntax-error) g$x$9410$1pJll4)
                          ((case-lambda
                             ((g$t$9415$1pJll4)
                              ((case-lambda
                                 ((g$ls/false$9416$1pJll4)
                                  (if g$ls/false$9416$1pJll4
                                    (apply
                                      (case-lambda
                                        ((g$pat$9417$1pJll4 g$expr$9418$1pJll4)
                                         (if (if (g$id?$7375$1pJll4
                                                   g$pat$9417$1pJll4)
                                               (if (not (g$bound-id-member?$7382$1pJll4
                                                          g$pat$9417$1pJll4
                                                          g$keys$9411$1pJll4))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7654$1pJll4
                                                          g$pat$9417$1pJll4)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7379$1pJll4
                                                 g$pat$9417$1pJll4
                                                 (g$scheme-stx$7596$1pJll4 '_))
                                             (g$chi-expr$7671$1pJll4
                                               g$expr$9418$1pJll4
                                               g$r$9413$1pJll4
                                               g$mr$9414$1pJll4)
                                             ((case-lambda
                                                ((g$lab$9419$1pJll4
                                                   g$lex$9420$1pJll4)
                                                 ((case-lambda
                                                    ((g$body$9421$1pJll4)
                                                     (list
                                                       (g$build-lambda$7306$1pJll4
                                                         '#f
                                                         (list
                                                           g$lex$9420$1pJll4)
                                                         g$body$9421$1pJll4)
                                                       g$x$9410$1pJll4)))
                                                  (g$chi-expr$7671$1pJll4
                                                    (g$add-subst$7365$1pJll4
                                                      (g$make-full-rib$7343$1pJll4
                                                        (list g$pat$9417$1pJll4)
                                                        (list
                                                          g$lab$9419$1pJll4))
                                                      g$expr$9418$1pJll4)
                                                    (cons
                                                      (cons
                                                        g$lab$9419$1pJll4
                                                        (g$make-binding$7391$1pJll4
                                                          'syntax
                                                          (cons
                                                            g$lex$9420$1pJll4
                                                            '0)))
                                                      g$r$9413$1pJll4)
                                                    g$mr$9414$1pJll4))))
                                              (g$gen-label$7321$1pJll4
                                                g$pat$9417$1pJll4)
                                              (g$gen-lexical$7319$1pJll4
                                                g$pat$9417$1pJll4)))
                                           (g$gen-clause$9398$1pJll4
                                             g$x$9410$1pJll4
                                             g$keys$9411$1pJll4
                                             (cdr g$clauses$9412$1pJll4)
                                             g$r$9413$1pJll4
                                             g$mr$9414$1pJll4
                                             g$pat$9417$1pJll4
                                             '#t
                                             g$expr$9418$1pJll4))))
                                      g$ls/false$9416$1pJll4)
                                    ((case-lambda
                                       ((g$t$9422$1pJll4)
                                        ((case-lambda
                                           ((g$ls/false$9423$1pJll4)
                                            (if g$ls/false$9423$1pJll4
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9424$1pJll4
                                                     g$fender$9425$1pJll4
                                                     g$expr$9426$1pJll4)
                                                   (g$gen-clause$9398$1pJll4
                                                     g$x$9410$1pJll4
                                                     g$keys$9411$1pJll4
                                                     (cdr g$clauses$9412$1pJll4)
                                                     g$r$9413$1pJll4
                                                     g$mr$9414$1pJll4
                                                     g$pat$9424$1pJll4
                                                     g$fender$9425$1pJll4
                                                     g$expr$9426$1pJll4)))
                                                g$ls/false$9423$1pJll4)
                                              (g$syntax-violation$7764$1pJll4
                                                '#f
                                                '"invalid syntax"
                                                g$t$9422$1pJll4))))
                                         (g$syntax-dispatch$7653$1pJll4
                                           g$t$9422$1pJll4
                                           '(any any any)))))
                                     g$t$9415$1pJll4))))
                               (g$syntax-dispatch$7653$1pJll4
                                 g$t$9415$1pJll4
                                 '(any any)))))
                           (car g$clauses$9412$1pJll4)))))))
           (case-lambda
             ((g$e$9400$1pJll4 g$r$9401$1pJll4 g$mr$9402$1pJll4)
              ((case-lambda
                 ((g$t$9403$1pJll4)
                  ((case-lambda
                     ((g$ls/false$9404$1pJll4)
                      (if g$ls/false$9404$1pJll4
                        (apply
                          (case-lambda
                            ((g$expr$9405$1pJll4
                               g$keys$9406$1pJll4
                               g$clauses$9407$1pJll4)
                             (begin
                               (g$verify-literals$7656$1pJll4
                                 g$keys$9406$1pJll4
                                 g$e$9400$1pJll4)
                               ((case-lambda
                                  ((g$x$9408$1pJll4)
                                   ((case-lambda
                                      ((g$body$9409$1pJll4)
                                       (list
                                         (g$build-lambda$7306$1pJll4
                                           '#f
                                           (list g$x$9408$1pJll4)
                                           g$body$9409$1pJll4)
                                         (g$chi-expr$7671$1pJll4
                                           g$expr$9405$1pJll4
                                           g$r$9401$1pJll4
                                           g$mr$9402$1pJll4))))
                                    (g$gen-syntax-case$9399$1pJll4
                                      g$x$9408$1pJll4
                                      g$keys$9406$1pJll4
                                      g$clauses$9407$1pJll4
                                      g$r$9401$1pJll4
                                      g$mr$9402$1pJll4))))
                                (g$gen-lexical$7319$1pJll4 'tmp)))))
                          g$ls/false$9404$1pJll4)
                        (g$syntax-violation$7764$1pJll4
                          '#f
                          '"invalid syntax"
                          g$t$9403$1pJll4))))
                   (g$syntax-dispatch$7653$1pJll4
                     g$t$9403$1pJll4
                     '(_ any each-any . each-any)))))
               g$e$9400$1pJll4))))))))
   (g$ellipsis-map$7658$1pJll4
     g$ellipsis-map$11104$1pJll4
     (case-lambda
       ((g$proc$9466$1pJll4 g$ls$9467$1pJll4 . g$ls*$9468$1pJll4)
        (letrec* ((g$who$9469$1pJll4 '...))
          (begin
            (if (not (list? g$ls$9467$1pJll4))
              (assertion-violation
                g$who$9469$1pJll4
                '"not a list"
                g$ls$9467$1pJll4)
              (void))
            (if (not (null? g$ls*$9468$1pJll4))
              ((case-lambda
                 ((g$n$9470$1pJll4)
                  (for-each
                    (case-lambda
                      ((g$x$9471$1pJll4)
                       (begin
                         (if (not (list? g$x$9471$1pJll4))
                           (assertion-violation
                             g$who$9469$1pJll4
                             '"not a list"
                             g$x$9471$1pJll4)
                           (void))
                         (if (not (= (length g$x$9471$1pJll4) g$n$9470$1pJll4))
                           (assertion-violation
                             g$who$9469$1pJll4
                             '"length mismatch"
                             g$ls$9467$1pJll4
                             g$x$9471$1pJll4)
                           (void)))))
                    g$ls*$9468$1pJll4)))
               (length g$ls$9467$1pJll4))
              (void))
            (apply
              map
              g$proc$9466$1pJll4
              g$ls$9467$1pJll4
              g$ls*$9468$1pJll4))))))
   (g$syntax-transformer$7659$1pJll4
     g$syntax-transformer$11105$1pJll4
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9472$1pJll4
                     (case-lambda
                       ((g$src$9532$1pJll4
                          g$e$9533$1pJll4
                          g$r$9534$1pJll4
                          g$maps$9535$1pJll4
                          g$ellipsis?$9536$1pJll4
                          g$vec?$9537$1pJll4)
                        ((case-lambda
                           ((g$t$9538$1pJll4)
                            ((case-lambda
                               ((g$ls/false$9539$1pJll4)
                                (if (if g$ls/false$9539$1pJll4
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9540$1pJll4)
                                             (g$ellipsis?$9536$1pJll4
                                               g$dots$9540$1pJll4)))
                                          g$ls/false$9539$1pJll4))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9541$1pJll4)
                                       (g$syntax-violation$7764$1pJll4
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9532$1pJll4)))
                                    g$ls/false$9539$1pJll4)
                                  ((case-lambda
                                     ((g$t$9542$1pJll4)
                                      ((case-lambda
                                         ((g$ls/false$9543$1pJll4)
                                          (if (if g$ls/false$9543$1pJll4
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9544$1pJll4)
                                                       (g$id?$7375$1pJll4
                                                         g$id$9544$1pJll4)))
                                                    g$ls/false$9543$1pJll4))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9545$1pJll4)
                                                 ((case-lambda
                                                    ((g$label$9546$1pJll4)
                                                     ((case-lambda
                                                        ((g$b$9547$1pJll4)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7392$1pJll4
                                                                        g$b$9547$1pJll4)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9550$1pJll4)
                                                                        (g$gen-ref$9473$1pJll4
                                                                          g$src$9532$1pJll4
                                                                          (car g$var.lev$9550$1pJll4)
                                                                          (cdr g$var.lev$9550$1pJll4)
                                                                          g$maps$9535$1pJll4)))
                                                                     (g$binding-value$7393$1pJll4
                                                                       g$b$9547$1pJll4))))
                                                                 (case-lambda
                                                                   ((g$var$9551$1pJll4
                                                                      g$maps$9552$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$maps$9553$1pJll4
                                                                          g$var$9554$1pJll4)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9554$1pJll4)
                                                                          g$maps$9553$1pJll4)))
                                                                     g$maps$9552$1pJll4
                                                                     g$var$9551$1pJll4))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9533$1pJll4)
                                                                 g$maps$9535$1pJll4)))))))
                                                      (g$label->binding$7390$1pJll4
                                                        g$label$9546$1pJll4
                                                        g$r$9534$1pJll4))))
                                                  (g$id->label$7388$1pJll4
                                                    g$e$9533$1pJll4))))
                                              g$ls/false$9543$1pJll4)
                                            ((case-lambda
                                               ((g$t$9555$1pJll4)
                                                ((case-lambda
                                                   ((g$ls/false$9556$1pJll4)
                                                    (if (if g$ls/false$9556$1pJll4
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9557$1pJll4
                                                                   g$e$9558$1pJll4)
                                                                 (g$ellipsis?$9536$1pJll4
                                                                   g$dots$9557$1pJll4)))
                                                              g$ls/false$9556$1pJll4))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9559$1pJll4
                                                             g$e$9560$1pJll4)
                                                           (if g$vec?$9537$1pJll4
                                                             (g$syntax-violation$7764$1pJll4
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9532$1pJll4)
                                                             (g$gen-syntax$9472$1pJll4
                                                               g$src$9532$1pJll4
                                                               g$e$9560$1pJll4
                                                               g$r$9534$1pJll4
                                                               g$maps$9535$1pJll4
                                                               (case-lambda
                                                                 ((g$x$9561$1pJll4)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9556$1pJll4)
                                                      ((case-lambda
                                                         ((g$t$9562$1pJll4)
                                                          ((case-lambda
                                                             ((g$ls/false$9563$1pJll4)
                                                              (if (if g$ls/false$9563$1pJll4
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9564$1pJll4
                                                                             g$dots$9565$1pJll4
                                                                             g$y$9566$1pJll4)
                                                                           (g$ellipsis?$9536$1pJll4
                                                                             g$dots$9565$1pJll4)))
                                                                        g$ls/false$9563$1pJll4))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9567$1pJll4
                                                                       g$dots$9568$1pJll4
                                                                       g$y$9569$1pJll4)
                                                                     ((letrec ((g$f$9570$1pJll4
                                                                                 (case-lambda
                                                                                   ((g$y$9571$1pJll4
                                                                                      g$k$9572$1pJll4)
                                                                                    ((case-lambda
                                                                                       ((g$t$9573$1pJll4)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9574$1pJll4)
                                                                                            (if g$ls/false$9574$1pJll4
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9572$1pJll4
                                                                                                     g$maps$9535$1pJll4)))
                                                                                                g$ls/false$9574$1pJll4)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9575$1pJll4)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9576$1pJll4)
                                                                                                      (if (if g$ls/false$9576$1pJll4
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9577$1pJll4
                                                                                                                     g$y$9578$1pJll4)
                                                                                                                   (g$ellipsis?$9536$1pJll4
                                                                                                                     g$dots$9577$1pJll4)))
                                                                                                                g$ls/false$9576$1pJll4))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9579$1pJll4
                                                                                                               g$y$9580$1pJll4)
                                                                                                             (g$f$9570$1pJll4
                                                                                                               g$y$9580$1pJll4
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9581$1pJll4)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9572$1pJll4
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9581$1pJll4))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9584$1pJll4
                                                                                                                         g$maps$9585$1pJll4)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9586$1pJll4
                                                                                                                             g$x$9587$1pJll4)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9586$1pJll4))
                                                                                                                             (g$syntax-violation$7764$1pJll4
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9532$1pJll4)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9475$1pJll4
                                                                                                                                 g$x$9587$1pJll4
                                                                                                                                 (car g$maps$9586$1pJll4))
                                                                                                                               (cdr g$maps$9586$1pJll4)))))
                                                                                                                        g$maps$9585$1pJll4
                                                                                                                        g$x$9584$1pJll4)))))))))
                                                                                                          g$ls/false$9576$1pJll4)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9588$1pJll4)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9589$1pJll4)
                                                                                                                (if g$ls/false$9589$1pJll4
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9472$1pJll4
                                                                                                                              g$src$9532$1pJll4
                                                                                                                              g$y$9571$1pJll4
                                                                                                                              g$r$9534$1pJll4
                                                                                                                              g$maps$9535$1pJll4
                                                                                                                              g$ellipsis?$9536$1pJll4
                                                                                                                              g$vec?$9537$1pJll4)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9592$1pJll4
                                                                                                                              g$maps$9593$1pJll4)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9594$1pJll4
                                                                                                                                  g$y$9595$1pJll4)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9572$1pJll4
                                                                                                                                       g$maps$9594$1pJll4)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9598$1pJll4
                                                                                                                                       g$maps$9599$1pJll4)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9600$1pJll4
                                                                                                                                           g$x$9601$1pJll4)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9474$1pJll4
                                                                                                                                             g$x$9601$1pJll4
                                                                                                                                             g$y$9595$1pJll4)
                                                                                                                                           g$maps$9600$1pJll4)))
                                                                                                                                      g$maps$9599$1pJll4
                                                                                                                                      g$x$9598$1pJll4))))))
                                                                                                                             g$maps$9593$1pJll4
                                                                                                                             g$y$9592$1pJll4))))))
                                                                                                                    g$ls/false$9589$1pJll4)
                                                                                                                  (g$syntax-violation$7764$1pJll4
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9588$1pJll4))))
                                                                                                             (g$syntax-dispatch$7653$1pJll4
                                                                                                               g$t$9588$1pJll4
                                                                                                               '_))))
                                                                                                         g$t$9575$1pJll4))))
                                                                                                   (g$syntax-dispatch$7653$1pJll4
                                                                                                     g$t$9575$1pJll4
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9573$1pJll4))))
                                                                                         (g$syntax-dispatch$7653$1pJll4
                                                                                           g$t$9573$1pJll4
                                                                                           '()))))
                                                                                     g$y$9571$1pJll4)))))
                                                                        g$f$9570$1pJll4)
                                                                      g$y$9569$1pJll4
                                                                      (case-lambda
                                                                        ((g$maps$9602$1pJll4)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9472$1pJll4
                                                                                g$src$9532$1pJll4
                                                                                g$x$9567$1pJll4
                                                                                g$r$9534$1pJll4
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9602$1pJll4)
                                                                                g$ellipsis?$9536$1pJll4
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9605$1pJll4
                                                                                g$maps$9606$1pJll4)
                                                                              ((case-lambda
                                                                                 ((g$maps$9607$1pJll4
                                                                                    g$x$9608$1pJll4)
                                                                                  (if (null?
                                                                                        (car g$maps$9607$1pJll4))
                                                                                    (g$syntax-violation$7764$1pJll4
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9532$1pJll4)
                                                                                    (values
                                                                                      (g$gen-map$9476$1pJll4
                                                                                        g$x$9608$1pJll4
                                                                                        (car g$maps$9607$1pJll4))
                                                                                      (cdr g$maps$9607$1pJll4)))))
                                                                               g$maps$9606$1pJll4
                                                                               g$x$9605$1pJll4)))))))))
                                                                  g$ls/false$9563$1pJll4)
                                                                ((case-lambda
                                                                   ((g$t$9609$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9610$1pJll4)
                                                                        (if g$ls/false$9610$1pJll4
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9611$1pJll4
                                                                                 g$y$9612$1pJll4)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9472$1pJll4
                                                                                      g$src$9532$1pJll4
                                                                                      g$x$9611$1pJll4
                                                                                      g$r$9534$1pJll4
                                                                                      g$maps$9535$1pJll4
                                                                                      g$ellipsis?$9536$1pJll4
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9615$1pJll4
                                                                                      g$maps$9616$1pJll4)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9617$1pJll4
                                                                                          g$xnew$9618$1pJll4)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9472$1pJll4
                                                                                               g$src$9532$1pJll4
                                                                                               g$y$9612$1pJll4
                                                                                               g$r$9534$1pJll4
                                                                                               g$maps$9617$1pJll4
                                                                                               g$ellipsis?$9536$1pJll4
                                                                                               g$vec?$9537$1pJll4)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9621$1pJll4
                                                                                               g$maps$9622$1pJll4)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9623$1pJll4
                                                                                                   g$ynew$9624$1pJll4)
                                                                                                 (values
                                                                                                   (g$gen-cons$9477$1pJll4
                                                                                                     g$e$9533$1pJll4
                                                                                                     g$x$9611$1pJll4
                                                                                                     g$y$9612$1pJll4
                                                                                                     g$xnew$9618$1pJll4
                                                                                                     g$ynew$9624$1pJll4)
                                                                                                   g$maps$9623$1pJll4)))
                                                                                              g$maps$9622$1pJll4
                                                                                              g$ynew$9621$1pJll4))))))
                                                                                     g$maps$9616$1pJll4
                                                                                     g$xnew$9615$1pJll4))))))
                                                                            g$ls/false$9610$1pJll4)
                                                                          ((case-lambda
                                                                             ((g$t$9625$1pJll4)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9626$1pJll4)
                                                                                  (if g$ls/false$9626$1pJll4
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9627$1pJll4)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9472$1pJll4
                                                                                                g$src$9532$1pJll4
                                                                                                g$ls$9627$1pJll4
                                                                                                g$r$9534$1pJll4
                                                                                                g$maps$9535$1pJll4
                                                                                                g$ellipsis?$9536$1pJll4
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9630$1pJll4
                                                                                                g$maps$9631$1pJll4)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9632$1pJll4
                                                                                                    g$lsnew$9633$1pJll4)
                                                                                                  (values
                                                                                                    (g$gen-vector$9478$1pJll4
                                                                                                      g$e$9533$1pJll4
                                                                                                      g$ls$9627$1pJll4
                                                                                                      g$lsnew$9633$1pJll4)
                                                                                                    g$maps$9632$1pJll4)))
                                                                                               g$maps$9631$1pJll4
                                                                                               g$lsnew$9630$1pJll4))))))
                                                                                      g$ls/false$9626$1pJll4)
                                                                                    ((case-lambda
                                                                                       ((g$t$9634$1pJll4)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9635$1pJll4)
                                                                                            (if g$ls/false$9635$1pJll4
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9533$1pJll4)
                                                                                                     g$maps$9535$1pJll4)))
                                                                                                g$ls/false$9635$1pJll4)
                                                                                              (g$syntax-violation$7764$1pJll4
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9634$1pJll4))))
                                                                                         (g$syntax-dispatch$7653$1pJll4
                                                                                           g$t$9634$1pJll4
                                                                                           '_))))
                                                                                     g$t$9625$1pJll4))))
                                                                               (g$syntax-dispatch$7653$1pJll4
                                                                                 g$t$9625$1pJll4
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9609$1pJll4))))
                                                                     (g$syntax-dispatch$7653$1pJll4
                                                                       g$t$9609$1pJll4
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9562$1pJll4))))
                                                           (g$syntax-dispatch$7653$1pJll4
                                                             g$t$9562$1pJll4
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9555$1pJll4))))
                                                 (g$syntax-dispatch$7653$1pJll4
                                                   g$t$9555$1pJll4
                                                   '(any any)))))
                                             g$t$9542$1pJll4))))
                                       (g$syntax-dispatch$7653$1pJll4
                                         g$t$9542$1pJll4
                                         'any))))
                                   g$t$9538$1pJll4))))
                             (g$syntax-dispatch$7653$1pJll4
                               g$t$9538$1pJll4
                               'any))))
                         g$e$9533$1pJll4))))
                   (g$gen-ref$9473$1pJll4
                     (case-lambda
                       ((g$src$9519$1pJll4
                          g$var$9520$1pJll4
                          g$level$9521$1pJll4
                          g$maps$9522$1pJll4)
                        (if (= g$level$9521$1pJll4 '0)
                          (values g$var$9520$1pJll4 g$maps$9522$1pJll4)
                          (if (null? g$maps$9522$1pJll4)
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9519$1pJll4)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9473$1pJll4
                                   g$src$9519$1pJll4
                                   g$var$9520$1pJll4
                                   (- g$level$9521$1pJll4 '1)
                                   (cdr g$maps$9522$1pJll4))))
                              (case-lambda
                                ((g$outer-var$9525$1pJll4
                                   g$outer-maps$9526$1pJll4)
                                 ((case-lambda
                                    ((g$outer-maps$9527$1pJll4
                                       g$outer-var$9528$1pJll4)
                                     ((case-lambda
                                        ((g$t$9529$1pJll4)
                                         (if g$t$9529$1pJll4
                                           ((case-lambda
                                              ((g$b$9530$1pJll4)
                                               (values
                                                 (cdr g$b$9530$1pJll4)
                                                 g$maps$9522$1pJll4)))
                                            g$t$9529$1pJll4)
                                           ((case-lambda
                                              ((g$inner-var$9531$1pJll4)
                                               (values
                                                 g$inner-var$9531$1pJll4
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9528$1pJll4
                                                       g$inner-var$9531$1pJll4)
                                                     (car g$maps$9522$1pJll4))
                                                   g$outer-maps$9527$1pJll4))))
                                            (g$gen-lexical$7319$1pJll4 'tmp)))))
                                      (assq
                                        g$outer-var$9528$1pJll4
                                        (car g$maps$9522$1pJll4)))))
                                  g$outer-maps$9526$1pJll4
                                  g$outer-var$9525$1pJll4)))))))))
                   (g$gen-append$9474$1pJll4
                     (case-lambda
                       ((g$x$9517$1pJll4 g$y$9518$1pJll4)
                        (if (equal? g$y$9518$1pJll4 ''())
                          g$x$9517$1pJll4
                          (list 'append g$x$9517$1pJll4 g$y$9518$1pJll4)))))
                   (g$gen-mappend$9475$1pJll4
                     (case-lambda
                       ((g$e$9515$1pJll4 g$map-env$9516$1pJll4)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9476$1pJll4
                            g$e$9515$1pJll4
                            g$map-env$9516$1pJll4)))))
                   (g$gen-map$9476$1pJll4
                     (case-lambda
                       ((g$e$9506$1pJll4 g$map-env$9507$1pJll4)
                        ((case-lambda
                           ((g$formals$9508$1pJll4 g$actuals$9509$1pJll4)
                            (if (eq? (car g$e$9506$1pJll4) 'ref)
                              (car g$actuals$9509$1pJll4)
                              (if (g$for-all$5503$1pJll4
                                    (case-lambda
                                      ((g$x$9510$1pJll4)
                                       (if (eq? (car g$x$9510$1pJll4) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$5022$1pJll4
                                               g$x$9510$1pJll4)
                                             g$formals$9508$1pJll4))
                                         '#f)))
                                    (cdr g$e$9506$1pJll4))
                                ((case-lambda
                                   ((g$args$9511$1pJll4)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9506$1pJll4))
                                        g$args$9511$1pJll4))))
                                 (map ((case-lambda
                                         ((g$r$9512$1pJll4)
                                          (case-lambda
                                            ((g$x$9513$1pJll4)
                                             (cdr (assq
                                                    (g$cadr$5022$1pJll4
                                                      g$x$9513$1pJll4)
                                                    g$r$9512$1pJll4))))))
                                       (map cons
                                            g$formals$9508$1pJll4
                                            g$actuals$9509$1pJll4))
                                      (cdr g$e$9506$1pJll4)))
                                (g$cons*$5505$1pJll4
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9508$1pJll4
                                    g$e$9506$1pJll4)
                                  g$actuals$9509$1pJll4)))))
                         (map cdr g$map-env$9507$1pJll4)
                         (map (case-lambda
                                ((g$x$9514$1pJll4)
                                 (list 'ref (car g$x$9514$1pJll4))))
                              g$map-env$9507$1pJll4)))))
                   (g$gen-cons$9477$1pJll4
                     (case-lambda
                       ((g$e$9498$1pJll4
                          g$x$9499$1pJll4
                          g$y$9500$1pJll4
                          g$xnew$9501$1pJll4
                          g$ynew$9502$1pJll4)
                        ((case-lambda
                           ((g$t$9503$1pJll4)
                            (if (memv g$t$9503$1pJll4 '(quote))
                              (if (eq? (car g$xnew$9501$1pJll4) 'quote)
                                ((case-lambda
                                   ((g$xnew$9504$1pJll4 g$ynew$9505$1pJll4)
                                    (if (if (eq? g$xnew$9504$1pJll4
                                                 g$x$9499$1pJll4)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9505$1pJll4
                                                 g$y$9500$1pJll4))
                                          '#f)
                                      (list 'quote g$e$9498$1pJll4)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9504$1pJll4
                                          g$ynew$9505$1pJll4)))))
                                 (g$cadr$5022$1pJll4 g$xnew$9501$1pJll4)
                                 (g$cadr$5022$1pJll4 g$ynew$9502$1pJll4))
                                (if (null?
                                      (g$cadr$5022$1pJll4 g$ynew$9502$1pJll4))
                                  (list 'list g$xnew$9501$1pJll4)
                                  (list
                                    'cons
                                    g$xnew$9501$1pJll4
                                    g$ynew$9502$1pJll4)))
                              (if (memv g$t$9503$1pJll4 '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9501$1pJll4
                                    (cdr g$ynew$9502$1pJll4)))
                                (list
                                  'cons
                                  g$xnew$9501$1pJll4
                                  g$ynew$9502$1pJll4)))))
                         (car g$ynew$9502$1pJll4)))))
                   (g$gen-vector$9478$1pJll4
                     (case-lambda
                       ((g$e$9495$1pJll4 g$ls$9496$1pJll4 g$lsnew$9497$1pJll4)
                        (if (eq? (car g$lsnew$9497$1pJll4) 'quote)
                          (if (eq? (g$cadr$5022$1pJll4 g$lsnew$9497$1pJll4)
                                   g$ls$9496$1pJll4)
                            (list 'quote g$e$9495$1pJll4)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5022$1pJll4 g$lsnew$9497$1pJll4))))
                          (if (eq? (car g$lsnew$9497$1pJll4) 'list)
                            (cons 'vector (cdr g$lsnew$9497$1pJll4))
                            (list 'list->vector g$lsnew$9497$1pJll4))))))
                   (g$regen$9479$1pJll4
                     (case-lambda
                       ((g$x$9492$1pJll4)
                        ((case-lambda
                           ((g$t$9493$1pJll4)
                            (if (memv g$t$9493$1pJll4 '(ref))
                              (g$cadr$5022$1pJll4 g$x$9492$1pJll4)
                              (if (memv g$t$9493$1pJll4 '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5022$1pJll4 g$x$9492$1pJll4))
                                (if (memv g$t$9493$1pJll4 '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5022$1pJll4 g$x$9492$1pJll4))
                                  (if (memv g$t$9493$1pJll4 '(lambda))
                                    (g$build-lambda$7306$1pJll4
                                      '#f
                                      (g$cadr$5022$1pJll4 g$x$9492$1pJll4)
                                      (g$regen$9479$1pJll4
                                        (g$caddr$5028$1pJll4 g$x$9492$1pJll4)))
                                    (if (memv g$t$9493$1pJll4 '(map))
                                      ((case-lambda
                                         ((g$ls$9494$1pJll4)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9494$1pJll4)))
                                       (map g$regen$9479$1pJll4
                                            (cdr g$x$9492$1pJll4)))
                                      (cons
                                        (list 'primitive (car g$x$9492$1pJll4))
                                        (map g$regen$9479$1pJll4
                                             (cdr g$x$9492$1pJll4))))))))))
                         (car g$x$9492$1pJll4))))))
           (case-lambda
             ((g$e$9480$1pJll4 g$r$9481$1pJll4 g$mr$9482$1pJll4)
              ((case-lambda
                 ((g$t$9483$1pJll4)
                  ((case-lambda
                     ((g$ls/false$9484$1pJll4)
                      (if g$ls/false$9484$1pJll4
                        (apply
                          (case-lambda
                            ((g$x$9485$1pJll4)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9472$1pJll4
                                    g$e$9480$1pJll4
                                    g$x$9485$1pJll4
                                    g$r$9481$1pJll4
                                    '()
                                    g$ellipsis?$7654$1pJll4
                                    '#f)))
                               (case-lambda
                                 ((g$e$9488$1pJll4 g$maps$9489$1pJll4)
                                  ((case-lambda
                                     ((g$maps$9490$1pJll4 g$e$9491$1pJll4)
                                      (g$regen$9479$1pJll4 g$e$9491$1pJll4)))
                                   g$maps$9489$1pJll4
                                   g$e$9488$1pJll4))))))
                          g$ls/false$9484$1pJll4)
                        (g$syntax-violation$7764$1pJll4
                          '#f
                          '"invalid syntax"
                          g$t$9483$1pJll4))))
                   (g$syntax-dispatch$7653$1pJll4 g$t$9483$1pJll4 '(_ any)))))
               g$e$9480$1pJll4))))))))
   (g$core-macro-transformer$7660$1pJll4
     g$core-macro-transformer$11106$1pJll4
     (case-lambda
       ((g$name$9636$1pJll4)
        ((case-lambda
           ((g$t$9637$1pJll4)
            (if (memv g$t$9637$1pJll4 '(quote))
              g$quote-transformer$7613$1pJll4
              (if (memv g$t$9637$1pJll4 '(lambda))
                g$lambda-transformer$7615$1pJll4
                (if (memv g$t$9637$1pJll4 '(case-lambda))
                  g$case-lambda-transformer$7614$1pJll4
                  (if (memv g$t$9637$1pJll4 '(letrec))
                    g$letrec-transformer$7603$1pJll4
                    (if (memv g$t$9637$1pJll4 '(letrec*))
                      g$letrec*-transformer$7604$1pJll4
                      (if (memv g$t$9637$1pJll4 '(if))
                        g$if-transformer$7611$1pJll4
                        (if (memv g$t$9637$1pJll4 '(foreign-call))
                          g$foreign-call-transformer$7651$1pJll4
                          (if (memv g$t$9637$1pJll4 '(syntax-case))
                            g$syntax-case-transformer$7657$1pJll4
                            (if (memv g$t$9637$1pJll4 '(syntax))
                              g$syntax-transformer$7659$1pJll4
                              (if (memv g$t$9637$1pJll4 '(type-descriptor))
                                g$type-descriptor-transformer$7606$1pJll4
                                (if (memv
                                      g$t$9637$1pJll4
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7607$1pJll4
                                  (if (memv
                                        g$t$9637$1pJll4
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7608$1pJll4
                                    (if (memv
                                          g$t$9637$1pJll4
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7605$1pJll4
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9636$1pJll4))))))))))))))))
         g$name$9636$1pJll4))))
   (g$file-options-macro$7661$1pJll4
     g$file-options-macro$11107$1pJll4
     (case-lambda
       ((g$x$9638$1pJll4)
        (letrec* ((g$valid-option?$9639$1pJll4
                    (case-lambda
                      ((g$x$9644$1pJll4)
                       (if (g$id?$7375$1pJll4 g$x$9644$1pJll4)
                         (begin
                           '#f
                           (memq
                             (g$id->sym$7376$1pJll4 g$x$9644$1pJll4)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$9640$1pJll4)
              ((case-lambda
                 ((g$ls/false$9641$1pJll4)
                  (if (if g$ls/false$9641$1pJll4
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$9642$1pJll4)
                               (if (g$for-all$5503$1pJll4
                                     g$valid-option?$9639$1pJll4
                                     g$opt*$9642$1pJll4)
                                 (begin
                                   '#f
                                   (g$file-options-spec$6645$1pJll4
                                     (map g$id->sym$7376$1pJll4
                                          g$opt*$9642$1pJll4)))
                                 '#f)))
                            g$ls/false$9641$1pJll4))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$9643$1pJll4)
                         (g$bless$7616$1pJll4
                           (list
                             'quote
                             (g$file-options-spec$6645$1pJll4
                               (map g$id->sym$7376$1pJll4
                                    g$opt*$9643$1pJll4))))))
                      g$ls/false$9641$1pJll4)
                    (g$syntax-violation$7764$1pJll4
                      '#f
                      '"invalid syntax"
                      g$t$9640$1pJll4))))
               (g$syntax-dispatch$7653$1pJll4
                 g$t$9640$1pJll4
                 '(_ . each-any)))))
           g$x$9638$1pJll4)))))
   (g$symbol-macro$7662$1pJll4
     g$symbol-macro$11108$1pJll4
     (case-lambda
       ((g$x$9645$1pJll4 g$set$9646$1pJll4)
        ((case-lambda
           ((g$t$9647$1pJll4)
            ((case-lambda
               ((g$ls/false$9648$1pJll4)
                (if (if g$ls/false$9648$1pJll4
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9649$1pJll4)
                             (if (g$id?$7375$1pJll4 g$name$9649$1pJll4)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7376$1pJll4 g$name$9649$1pJll4)
                                   g$set$9646$1pJll4))
                               '#f)))
                          g$ls/false$9648$1pJll4))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9650$1pJll4)
                       (g$bless$7616$1pJll4 (list 'quote g$name$9650$1pJll4))))
                    g$ls/false$9648$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$9647$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$9647$1pJll4 '(_ any)))))
         g$x$9645$1pJll4))))
   (g$macro-transformer$7663$1pJll4
     g$macro-transformer$11109$1pJll4
     (case-lambda
       ((g$x$9651$1pJll4)
        (if (procedure? g$x$9651$1pJll4)
          g$x$9651$1pJll4
          (if (symbol? g$x$9651$1pJll4)
            ((case-lambda
               ((g$t$9652$1pJll4)
                (if (memv g$t$9652$1pJll4 '(define-record-type))
                  g$define-record-type-macro$7647$1pJll4
                  (if (memv g$t$9652$1pJll4 '(define-struct))
                    g$define-struct-macro$7646$1pJll4
                    (if (memv g$t$9652$1pJll4 '(include))
                      g$include-macro$7641$1pJll4
                      (if (memv g$t$9652$1pJll4 '(cond))
                        g$cond-macro$7639$1pJll4
                        (if (memv g$t$9652$1pJll4 '(let))
                          g$let-macro$7619$1pJll4
                          (if (memv g$t$9652$1pJll4 '(do))
                            g$do-macro$7635$1pJll4
                            (if (memv g$t$9652$1pJll4 '(or))
                              g$or-macro$7637$1pJll4
                              (if (memv g$t$9652$1pJll4 '(and))
                                g$and-macro$7638$1pJll4
                                (if (memv g$t$9652$1pJll4 '(let*))
                                  g$let*-macro$7636$1pJll4
                                  (if (memv g$t$9652$1pJll4 '(let-values))
                                    g$let-values-macro$7620$1pJll4
                                    (if (memv g$t$9652$1pJll4 '(let*-values))
                                      g$let*-values-macro$7621$1pJll4
                                      (if (memv g$t$9652$1pJll4 '(syntax-rules))
                                        g$syntax-rules-macro$7643$1pJll4
                                        (if (memv g$t$9652$1pJll4 '(quasiquote))
                                          g$quasiquote-macro$7644$1pJll4
                                          (if (memv
                                                g$t$9652$1pJll4
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7645$1pJll4
                                            (if (memv
                                                  g$t$9652$1pJll4
                                                  '(with-syntax))
                                              g$with-syntax-macro$7617$1pJll4
                                              (if (memv g$t$9652$1pJll4 '(when))
                                                g$when-macro$7609$1pJll4
                                                (if (memv
                                                      g$t$9652$1pJll4
                                                      '(unless))
                                                  g$unless-macro$7610$1pJll4
                                                  (if (memv
                                                        g$t$9652$1pJll4
                                                        '(case))
                                                    g$case-macro$7612$1pJll4
                                                    (if (memv
                                                          g$t$9652$1pJll4
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7634$1pJll4
                                                      (if (memv
                                                            g$t$9652$1pJll4
                                                            '(time))
                                                        g$time-macro$7630$1pJll4
                                                        (if (memv
                                                              g$t$9652$1pJll4
                                                              '(delay))
                                                          g$delay-macro$7631$1pJll4
                                                          (if (memv
                                                                g$t$9652$1pJll4
                                                                '(assert))
                                                            g$assert-macro$7632$1pJll4
                                                            (if (memv
                                                                  g$t$9652$1pJll4
                                                                  '(endianness))
                                                              g$endianness-macro$7633$1pJll4
                                                              (if (memv
                                                                    g$t$9652$1pJll4
                                                                    '(guard))
                                                                g$guard-macro$7628$1pJll4
                                                                (if (memv
                                                                      g$t$9652$1pJll4
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7629$1pJll4
                                                                  (if (memv
                                                                        g$t$9652$1pJll4
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7622$1pJll4
                                                                    (if (memv
                                                                          g$t$9652$1pJll4
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7623$1pJll4
                                                                      (if (memv
                                                                            g$t$9652$1pJll4
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7624$1pJll4
                                                                        (if (memv
                                                                              g$t$9652$1pJll4
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7626$1pJll4
                                                                          (if (memv
                                                                                g$t$9652$1pJll4
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7627$1pJll4
                                                                            (if (memv
                                                                                  g$t$9652$1pJll4
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7648$1pJll4
                                                                              (if (memv
                                                                                    g$t$9652$1pJll4
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7650$1pJll4
                                                                                (if (memv
                                                                                      g$t$9652$1pJll4
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7642$1pJll4
                                                                                  (if (memv
                                                                                        g$t$9652$1pJll4
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$9653$1pJll4)
                                                                                       (g$symbol-macro$7662$1pJll4
                                                                                         g$x$9653$1pJll4
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (memv
                                                                                          g$t$9652$1pJll4
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$9654$1pJll4)
                                                                                         (g$symbol-macro$7662$1pJll4
                                                                                           g$x$9654$1pJll4
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (memv
                                                                                            g$t$9652$1pJll4
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$9655$1pJll4)
                                                                                           (g$symbol-macro$7662$1pJll4
                                                                                             g$x$9655$1pJll4
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (memv
                                                                                              g$t$9652$1pJll4
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7661$1pJll4
                                                                                          (if (memv
                                                                                                g$t$9652$1pJll4
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7649$1pJll4
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$9651$1pJll4)))))))))))))))))))))))))))))))))))))))))
             g$x$9651$1pJll4)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9651$1pJll4))))))
   (g$local-macro-transformer$7664$1pJll4
     g$local-macro-transformer$11110$1pJll4
     (case-lambda ((g$x$9656$1pJll4) (car g$x$9656$1pJll4))))
   (g$do-macro-call$7665$1pJll4
     g$do-macro-call$11111$1pJll4
     (case-lambda
       ((g$transformer$9657$1pJll4 g$expr$9658$1pJll4)
        ((case-lambda
           ((g$out$9659$1pJll4)
            (begin
              ((letrec ((g$f$9660$1pJll4
                          (case-lambda
                            ((g$x$9661$1pJll4)
                             (if (not (g$stx?$7347$1pJll4 g$x$9661$1pJll4))
                               (if (pair? g$x$9661$1pJll4)
                                 (begin
                                   (g$f$9660$1pJll4 (car g$x$9661$1pJll4))
                                   (g$f$9660$1pJll4 (cdr g$x$9661$1pJll4)))
                                 (if (vector? g$x$9661$1pJll4)
                                   (vector-for-each
                                     g$f$9660$1pJll4
                                     g$x$9661$1pJll4)
                                   (if (symbol? g$x$9661$1pJll4)
                                     (g$syntax-violation$7764$1pJll4
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9658$1pJll4
                                       g$x$9661$1pJll4)
                                     (void))))
                               (void))))))
                 g$f$9660$1pJll4)
               g$out$9659$1pJll4)
              (g$add-mark$7364$1pJll4
                (g$gen-mark$7359$1pJll4)
                g$out$9659$1pJll4
                g$expr$9658$1pJll4))))
         (g$transformer$9657$1pJll4
           (g$add-mark$7364$1pJll4
             g$anti-mark$7360$1pJll4
             g$expr$9658$1pJll4
             '#f))))))
   (g$chi-macro$7666$1pJll4
     g$chi-macro$11112$1pJll4
     (case-lambda
       ((g$p$9662$1pJll4 g$e$9663$1pJll4)
        (g$do-macro-call$7665$1pJll4
          (g$macro-transformer$7663$1pJll4 g$p$9662$1pJll4)
          g$e$9663$1pJll4))))
   (g$chi-local-macro$7667$1pJll4
     g$chi-local-macro$11113$1pJll4
     (case-lambda
       ((g$p$9664$1pJll4 g$e$9665$1pJll4)
        (g$do-macro-call$7665$1pJll4
          (g$local-macro-transformer$7664$1pJll4 g$p$9664$1pJll4)
          g$e$9665$1pJll4))))
   (g$chi-global-macro$7668$1pJll4
     g$chi-global-macro$11114$1pJll4
     (case-lambda
       ((g$p$9666$1pJll4 g$e$9667$1pJll4)
        ((case-lambda
           ((g$lib$9668$1pJll4 g$loc$9669$1pJll4)
            (begin
              (g$visit-library$7191$1pJll4 g$lib$9668$1pJll4)
              ((case-lambda
                 ((g$x$9670$1pJll4)
                  ((case-lambda
                     ((g$transformer$9671$1pJll4)
                      (g$do-macro-call$7665$1pJll4
                        g$transformer$9671$1pJll4
                        g$e$9667$1pJll4)))
                   (if (procedure? g$x$9670$1pJll4)
                     g$x$9670$1pJll4
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9670$1pJll4)))))
               (symbol-value g$loc$9669$1pJll4)))))
         (car g$p$9666$1pJll4)
         (cdr g$p$9666$1pJll4)))))
   (g$chi-expr*$7669$1pJll4
     g$chi-expr*$11115$1pJll4
     (case-lambda
       ((g$e*$9672$1pJll4 g$r$9673$1pJll4 g$mr$9674$1pJll4)
        (if (null? g$e*$9672$1pJll4)
          '()
          ((case-lambda
             ((g$e$9675$1pJll4)
              (cons
                g$e$9675$1pJll4
                (g$chi-expr*$7669$1pJll4
                  (cdr g$e*$9672$1pJll4)
                  g$r$9673$1pJll4
                  g$mr$9674$1pJll4))))
           (g$chi-expr$7671$1pJll4
             (car g$e*$9672$1pJll4)
             g$r$9673$1pJll4
             g$mr$9674$1pJll4))))))
   (g$chi-application$7670$1pJll4
     g$chi-application$11116$1pJll4
     (case-lambda
       ((g$e$9676$1pJll4 g$r$9677$1pJll4 g$mr$9678$1pJll4)
        ((case-lambda
           ((g$t$9679$1pJll4)
            ((case-lambda
               ((g$ls/false$9680$1pJll4)
                (if g$ls/false$9680$1pJll4
                  (apply
                    (case-lambda
                      ((g$rator$9681$1pJll4 g$rands$9682$1pJll4)
                       ((case-lambda
                          ((g$rator$9683$1pJll4)
                           (cons
                             g$rator$9683$1pJll4
                             (g$chi-expr*$7669$1pJll4
                               g$rands$9682$1pJll4
                               g$r$9677$1pJll4
                               g$mr$9678$1pJll4))))
                        (g$chi-expr$7671$1pJll4
                          g$rator$9681$1pJll4
                          g$r$9677$1pJll4
                          g$mr$9678$1pJll4))))
                    g$ls/false$9680$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$9679$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$9679$1pJll4
               '(any . each-any)))))
         g$e$9676$1pJll4))))
   (g$chi-expr$7671$1pJll4
     g$chi-expr$11117$1pJll4
     (case-lambda
       ((g$e$9684$1pJll4 g$r$9685$1pJll4 g$mr$9686$1pJll4)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7395$1pJll4 g$e$9684$1pJll4 g$r$9685$1pJll4)))
          (case-lambda
            ((g$type$9690$1pJll4 g$value$9691$1pJll4 g$kwd$9692$1pJll4)
             ((case-lambda
                ((g$kwd$9693$1pJll4 g$value$9694$1pJll4 g$type$9695$1pJll4)
                 ((case-lambda
                    ((g$t$9696$1pJll4)
                     (if (memv g$t$9696$1pJll4 '(core-macro))
                       ((case-lambda
                          ((g$transformer$9697$1pJll4)
                           (g$transformer$9697$1pJll4
                             g$e$9684$1pJll4
                             g$r$9685$1pJll4
                             g$mr$9686$1pJll4)))
                        (g$core-macro-transformer$7660$1pJll4
                          g$value$9694$1pJll4))
                       (if (memv g$t$9696$1pJll4 '(global))
                         ((case-lambda
                            ((g$lib$9698$1pJll4)
                             ((case-lambda
                                ((g$loc$9699$1pJll4)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7705$1pJll4)
                                        g$lib$9698$1pJll4)
                                       g$loc$9699$1pJll4))))))
                              (cdr g$value$9694$1pJll4))))
                          (car g$value$9694$1pJll4))
                         (if (memv g$t$9696$1pJll4 '(core-prim))
                           ((case-lambda
                              ((g$name$9700$1pJll4)
                               (list 'primitive g$name$9700$1pJll4)))
                            g$value$9694$1pJll4)
                           (if (memv g$t$9696$1pJll4 '(call))
                             (g$chi-application$7670$1pJll4
                               g$e$9684$1pJll4
                               g$r$9685$1pJll4
                               g$mr$9686$1pJll4)
                             (if (memv g$t$9696$1pJll4 '(lexical))
                               ((case-lambda
                                  ((g$lex$9701$1pJll4) g$lex$9701$1pJll4))
                                (g$lexical-var$7597$1pJll4 g$value$9694$1pJll4))
                               (if (memv
                                     g$t$9696$1pJll4
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7671$1pJll4
                                   (g$chi-global-macro$7668$1pJll4
                                     g$value$9694$1pJll4
                                     g$e$9684$1pJll4)
                                   g$r$9685$1pJll4
                                   g$mr$9686$1pJll4)
                                 (if (memv
                                       g$t$9696$1pJll4
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7671$1pJll4
                                     (g$chi-local-macro$7667$1pJll4
                                       g$value$9694$1pJll4
                                       g$e$9684$1pJll4)
                                     g$r$9685$1pJll4
                                     g$mr$9686$1pJll4)
                                   (if (memv g$t$9696$1pJll4 '(macro macro!))
                                     (g$chi-expr$7671$1pJll4
                                       (g$chi-macro$7666$1pJll4
                                         g$value$9694$1pJll4
                                         g$e$9684$1pJll4)
                                       g$r$9685$1pJll4
                                       g$mr$9686$1pJll4)
                                     (if (memv g$t$9696$1pJll4 '(constant))
                                       ((case-lambda
                                          ((g$datum$9702$1pJll4)
                                           (list 'quote g$datum$9702$1pJll4)))
                                        g$value$9694$1pJll4)
                                       (if (memv g$t$9696$1pJll4 '(set!))
                                         (g$chi-set!$7672$1pJll4
                                           g$e$9684$1pJll4
                                           g$r$9685$1pJll4
                                           g$mr$9686$1pJll4)
                                         (if (memv g$t$9696$1pJll4 '(begin))
                                           ((case-lambda
                                              ((g$t$9703$1pJll4)
                                               ((case-lambda
                                                  ((g$ls/false$9704$1pJll4)
                                                   (if g$ls/false$9704$1pJll4
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9705$1pJll4
                                                            g$x*$9706$1pJll4)
                                                          (g$build-sequence$7309$1pJll4
                                                            '#f
                                                            (g$chi-expr*$7669$1pJll4
                                                              (cons
                                                                g$x$9705$1pJll4
                                                                g$x*$9706$1pJll4)
                                                              g$r$9685$1pJll4
                                                              g$mr$9686$1pJll4))))
                                                       g$ls/false$9704$1pJll4)
                                                     (g$syntax-violation$7764$1pJll4
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9703$1pJll4))))
                                                (g$syntax-dispatch$7653$1pJll4
                                                  g$t$9703$1pJll4
                                                  '(_ any . each-any)))))
                                            g$e$9684$1pJll4)
                                           (if (memv
                                                 g$t$9696$1pJll4
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9707$1pJll4)
                                                 ((case-lambda
                                                    ((g$ls/false$9708$1pJll4)
                                                     (if (if g$ls/false$9708$1pJll4
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9709$1pJll4
                                                                    g$xrhs*$9710$1pJll4
                                                                    g$xbody$9711$1pJll4
                                                                    g$xbody*$9712$1pJll4)
                                                                  (if (not (g$valid-bound-ids?$7380$1pJll4
                                                                             g$xlhs*$9709$1pJll4))
                                                                    (g$syntax-violation$7764$1pJll4
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9684$1pJll4)
                                                                    (void))))
                                                               g$ls/false$9708$1pJll4))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9713$1pJll4
                                                              g$xrhs*$9714$1pJll4
                                                              g$xbody$9715$1pJll4
                                                              g$xbody*$9716$1pJll4)
                                                            ((case-lambda
                                                               ((g$xlab*$9717$1pJll4)
                                                                ((case-lambda
                                                                   ((g$xrib$9718$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$xb*$9719$1pJll4)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7309$1pJll4
                                                                              '#f
                                                                              (g$chi-expr*$7669$1pJll4
                                                                                (map (case-lambda
                                                                                       ((g$x$9720$1pJll4)
                                                                                        (g$add-subst$7365$1pJll4
                                                                                          g$xrib$9718$1pJll4
                                                                                          g$x$9720$1pJll4)))
                                                                                     (cons
                                                                                       g$xbody$9715$1pJll4
                                                                                       g$xbody*$9716$1pJll4))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9717$1pJll4
                                                                                       g$xb*$9719$1pJll4)
                                                                                  g$r$9685$1pJll4)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9717$1pJll4
                                                                                       g$xb*$9719$1pJll4)
                                                                                  g$mr$9686$1pJll4))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9721$1pJll4)
                                                                             (g$make-eval-transformer$7407$1pJll4
                                                                               (g$expand-transformer$7698$1pJll4
                                                                                 (if (eq? g$type$9695$1pJll4
                                                                                          'let-syntax)
                                                                                   g$x$9721$1pJll4
                                                                                   (g$add-subst$7365$1pJll4
                                                                                     g$xrib$9718$1pJll4
                                                                                     g$x$9721$1pJll4))
                                                                                 g$mr$9686$1pJll4))))
                                                                          g$xrhs*$9714$1pJll4))))
                                                                 (g$make-full-rib$7343$1pJll4
                                                                   g$xlhs*$9713$1pJll4
                                                                   g$xlab*$9717$1pJll4))))
                                                             (map g$gen-label$7321$1pJll4
                                                                  g$xlhs*$9713$1pJll4))))
                                                         g$ls/false$9708$1pJll4)
                                                       (g$syntax-violation$7764$1pJll4
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9707$1pJll4))))
                                                  (g$syntax-dispatch$7653$1pJll4
                                                    g$t$9707$1pJll4
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9684$1pJll4)
                                             (if (memv
                                                   g$t$9696$1pJll4
                                                   '(displaced-lexical))
                                               (g$syntax-violation$7764$1pJll4
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9684$1pJll4)
                                               (if (memv
                                                     g$t$9696$1pJll4
                                                     '(syntax))
                                                 (g$syntax-violation$7764$1pJll4
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9684$1pJll4)
                                                 (if (memv
                                                       g$t$9696$1pJll4
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7764$1pJll4
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9722$1pJll4)
                                                           (if (memv
                                                                 g$t$9722$1pJll4
                                                                 '(define))
                                                             '"a definition"
                                                             (if (memv
                                                                   g$t$9722$1pJll4
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (memv
                                                                     g$t$9722$1pJll4
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (memv
                                                                       g$t$9722$1pJll4
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (memv
                                                                         g$t$9722$1pJll4
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9695$1pJll4)
                                                       '" was found where an expression was expected")
                                                     g$e$9684$1pJll4)
                                                   (if (memv
                                                         g$t$9696$1pJll4
                                                         '(mutable))
                                                     (g$syntax-violation$7764$1pJll4
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9684$1pJll4)
                                                     (g$syntax-violation$7764$1pJll4
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9684$1pJll4)))))))))))))))))))
                  g$type$9695$1pJll4)))
              g$kwd$9692$1pJll4
              g$value$9691$1pJll4
              g$type$9690$1pJll4)))))))
   (g$chi-set!$7672$1pJll4
     g$chi-set!$11118$1pJll4
     (case-lambda
       ((g$e$9723$1pJll4 g$r$9724$1pJll4 g$mr$9725$1pJll4)
        ((case-lambda
           ((g$t$9726$1pJll4)
            ((case-lambda
               ((g$ls/false$9727$1pJll4)
                (if (if g$ls/false$9727$1pJll4
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9728$1pJll4 g$v$9729$1pJll4)
                             (g$id?$7375$1pJll4 g$x$9728$1pJll4)))
                          g$ls/false$9727$1pJll4))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9730$1pJll4 g$v$9731$1pJll4)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7395$1pJll4
                              g$x$9730$1pJll4
                              g$r$9724$1pJll4)))
                         (case-lambda
                           ((g$type$9735$1pJll4
                              g$value$9736$1pJll4
                              g$kwd$9737$1pJll4)
                            ((case-lambda
                               ((g$kwd$9738$1pJll4
                                  g$value$9739$1pJll4
                                  g$type$9740$1pJll4)
                                ((case-lambda
                                   ((g$t$9741$1pJll4)
                                    (if (memv g$t$9741$1pJll4 '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7599$1pJll4
                                          g$value$9739$1pJll4
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7597$1pJll4
                                            g$value$9739$1pJll4)
                                          (g$chi-expr$7671$1pJll4
                                            g$v$9731$1pJll4
                                            g$r$9724$1pJll4
                                            g$mr$9725$1pJll4)))
                                      (if (memv g$t$9741$1pJll4 '(core-prim))
                                        (g$syntax-violation$7764$1pJll4
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9723$1pJll4)
                                        (if (memv g$t$9741$1pJll4 '(global))
                                          (g$syntax-violation$7764$1pJll4
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9723$1pJll4)
                                          (if (memv
                                                g$t$9741$1pJll4
                                                '(global-macro!))
                                            (g$chi-expr$7671$1pJll4
                                              (g$chi-global-macro$7668$1pJll4
                                                g$value$9739$1pJll4
                                                g$e$9723$1pJll4)
                                              g$r$9724$1pJll4
                                              g$mr$9725$1pJll4)
                                            (if (memv
                                                  g$t$9741$1pJll4
                                                  '(local-macro!))
                                              (g$chi-expr$7671$1pJll4
                                                (g$chi-local-macro$7667$1pJll4
                                                  g$value$9739$1pJll4
                                                  g$e$9723$1pJll4)
                                                g$r$9724$1pJll4
                                                g$mr$9725$1pJll4)
                                              (if (memv
                                                    g$t$9741$1pJll4
                                                    '(mutable))
                                                (g$syntax-violation$7764$1pJll4
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9723$1pJll4)
                                                (g$syntax-violation$7764$1pJll4
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9723$1pJll4)))))))))
                                 g$type$9740$1pJll4)))
                             g$kwd$9737$1pJll4
                             g$value$9736$1pJll4
                             g$type$9735$1pJll4))))))
                    g$ls/false$9727$1pJll4)
                  (g$syntax-violation$7764$1pJll4
                    '#f
                    '"invalid syntax"
                    g$t$9726$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$9726$1pJll4 '(_ any any)))))
         g$e$9723$1pJll4))))
   (g$verify-formals$7673$1pJll4
     g$verify-formals$11119$1pJll4
     (case-lambda
       ((g$fmls$9742$1pJll4 g$stx$9743$1pJll4)
        ((case-lambda
           ((g$t$9744$1pJll4)
            ((case-lambda
               ((g$ls/false$9745$1pJll4)
                (if g$ls/false$9745$1pJll4
                  (apply
                    (case-lambda
                      ((g$x*$9746$1pJll4)
                       (if (not (g$valid-bound-ids?$7380$1pJll4
                                  g$x*$9746$1pJll4))
                         (g$invalid-fmls-error$7618$1pJll4
                           g$stx$9743$1pJll4
                           g$fmls$9742$1pJll4)
                         (void))))
                    g$ls/false$9745$1pJll4)
                  ((case-lambda
                     ((g$t$9747$1pJll4)
                      ((case-lambda
                         ((g$ls/false$9748$1pJll4)
                          (if g$ls/false$9748$1pJll4
                            (apply
                              (case-lambda
                                ((g$x*$9749$1pJll4 g$x$9750$1pJll4)
                                 (if (not (g$valid-bound-ids?$7380$1pJll4
                                            (cons
                                              g$x$9750$1pJll4
                                              g$x*$9749$1pJll4)))
                                   (g$invalid-fmls-error$7618$1pJll4
                                     g$stx$9743$1pJll4
                                     g$fmls$9742$1pJll4)
                                   (void))))
                              g$ls/false$9748$1pJll4)
                            ((case-lambda
                               ((g$t$9751$1pJll4)
                                ((case-lambda
                                   ((g$ls/false$9752$1pJll4)
                                    (if g$ls/false$9752$1pJll4
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9743$1pJll4)))
                                        g$ls/false$9752$1pJll4)
                                      (g$syntax-violation$7764$1pJll4
                                        '#f
                                        '"invalid syntax"
                                        g$t$9751$1pJll4))))
                                 (g$syntax-dispatch$7653$1pJll4
                                   g$t$9751$1pJll4
                                   '_))))
                             g$t$9747$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$9747$1pJll4
                         '#(each+ any () any)))))
                   g$t$9744$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$9744$1pJll4 'each-any))))
         g$fmls$9742$1pJll4))))
   (g$chi-lambda-clause$7674$1pJll4
     g$chi-lambda-clause$11120$1pJll4
     (case-lambda
       ((g$stx$9753$1pJll4
          g$fmls$9754$1pJll4
          g$body*$9755$1pJll4
          g$r$9756$1pJll4
          g$mr$9757$1pJll4)
        ((case-lambda
           ((g$t$9758$1pJll4)
            ((case-lambda
               ((g$ls/false$9759$1pJll4)
                (if g$ls/false$9759$1pJll4
                  (apply
                    (case-lambda
                      ((g$x*$9760$1pJll4)
                       (begin
                         (g$verify-formals$7673$1pJll4
                           g$fmls$9754$1pJll4
                           g$stx$9753$1pJll4)
                         ((case-lambda
                            ((g$lex*$9761$1pJll4 g$lab*$9762$1pJll4)
                             (values
                               g$lex*$9761$1pJll4
                               (g$chi-internal$7682$1pJll4
                                 (g$add-subst$7365$1pJll4
                                   (g$make-full-rib$7343$1pJll4
                                     g$x*$9760$1pJll4
                                     g$lab*$9762$1pJll4)
                                   g$body*$9755$1pJll4)
                                 (g$add-lexicals$7601$1pJll4
                                   g$lab*$9762$1pJll4
                                   g$lex*$9761$1pJll4
                                   g$r$9756$1pJll4)
                                 g$mr$9757$1pJll4))))
                          (map g$gen-lexical$7319$1pJll4 g$x*$9760$1pJll4)
                          (map g$gen-label$7321$1pJll4 g$x*$9760$1pJll4)))))
                    g$ls/false$9759$1pJll4)
                  ((case-lambda
                     ((g$t$9763$1pJll4)
                      ((case-lambda
                         ((g$ls/false$9764$1pJll4)
                          (if g$ls/false$9764$1pJll4
                            (apply
                              (case-lambda
                                ((g$x*$9765$1pJll4 g$x$9766$1pJll4)
                                 (begin
                                   (g$verify-formals$7673$1pJll4
                                     g$fmls$9754$1pJll4
                                     g$stx$9753$1pJll4)
                                   ((case-lambda
                                      ((g$lex*$9767$1pJll4
                                         g$lab*$9768$1pJll4
                                         g$lex$9769$1pJll4
                                         g$lab$9770$1pJll4)
                                       (values
                                         (append
                                           g$lex*$9767$1pJll4
                                           g$lex$9769$1pJll4)
                                         (g$chi-internal$7682$1pJll4
                                           (g$add-subst$7365$1pJll4
                                             (g$make-full-rib$7343$1pJll4
                                               (cons
                                                 g$x$9766$1pJll4
                                                 g$x*$9765$1pJll4)
                                               (cons
                                                 g$lab$9770$1pJll4
                                                 g$lab*$9768$1pJll4))
                                             g$body*$9755$1pJll4)
                                           (g$add-lexicals$7601$1pJll4
                                             (cons
                                               g$lab$9770$1pJll4
                                               g$lab*$9768$1pJll4)
                                             (cons
                                               g$lex$9769$1pJll4
                                               g$lex*$9767$1pJll4)
                                             g$r$9756$1pJll4)
                                           g$mr$9757$1pJll4))))
                                    (map g$gen-lexical$7319$1pJll4
                                         g$x*$9765$1pJll4)
                                    (map g$gen-label$7321$1pJll4
                                         g$x*$9765$1pJll4)
                                    (g$gen-lexical$7319$1pJll4 g$x$9766$1pJll4)
                                    (g$gen-label$7321$1pJll4
                                      g$x$9766$1pJll4)))))
                              g$ls/false$9764$1pJll4)
                            ((case-lambda
                               ((g$t$9771$1pJll4)
                                ((case-lambda
                                   ((g$ls/false$9772$1pJll4)
                                    (if g$ls/false$9772$1pJll4
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7764$1pJll4
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9754$1pJll4)))
                                        g$ls/false$9772$1pJll4)
                                      (g$syntax-violation$7764$1pJll4
                                        '#f
                                        '"invalid syntax"
                                        g$t$9771$1pJll4))))
                                 (g$syntax-dispatch$7653$1pJll4
                                   g$t$9771$1pJll4
                                   '_))))
                             g$t$9763$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$9763$1pJll4
                         '#(each+ any () any)))))
                   g$t$9758$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$9758$1pJll4 'each-any))))
         g$fmls$9754$1pJll4))))
   (g$chi-lambda-clause*$7675$1pJll4
     g$chi-lambda-clause*$11121$1pJll4
     (case-lambda
       ((g$stx$9773$1pJll4
          g$fmls*$9774$1pJll4
          g$body**$9775$1pJll4
          g$r$9776$1pJll4
          g$mr$9777$1pJll4)
        (if (null? g$fmls*$9774$1pJll4)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7674$1pJll4
                 g$stx$9773$1pJll4
                 (car g$fmls*$9774$1pJll4)
                 (car g$body**$9775$1pJll4)
                 g$r$9776$1pJll4
                 g$mr$9777$1pJll4)))
            (case-lambda
              ((g$a$9780$1pJll4 g$b$9781$1pJll4)
               ((case-lambda
                  ((g$b$9782$1pJll4 g$a$9783$1pJll4)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7675$1pJll4
                          g$stx$9773$1pJll4
                          (cdr g$fmls*$9774$1pJll4)
                          (cdr g$body**$9775$1pJll4)
                          g$r$9776$1pJll4
                          g$mr$9777$1pJll4)))
                     (case-lambda
                       ((g$a*$9786$1pJll4 g$b*$9787$1pJll4)
                        ((case-lambda
                           ((g$b*$9788$1pJll4 g$a*$9789$1pJll4)
                            (values
                              (cons g$a$9783$1pJll4 g$a*$9789$1pJll4)
                              (cons g$b$9782$1pJll4 g$b*$9788$1pJll4))))
                         g$b*$9787$1pJll4
                         g$a*$9786$1pJll4))))))
                g$b$9781$1pJll4
                g$a$9780$1pJll4))))))))
   (g$chi-defun$7676$1pJll4
     g$chi-defun$11122$1pJll4
     (case-lambda
       ((g$x$9790$1pJll4 g$r$9791$1pJll4 g$mr$9792$1pJll4)
        ((case-lambda
           ((g$fmls$9793$1pJll4 g$body*$9794$1pJll4)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7674$1pJll4
                   g$fmls$9793$1pJll4
                   g$fmls$9793$1pJll4
                   g$body*$9794$1pJll4
                   g$r$9791$1pJll4
                   g$mr$9792$1pJll4)))
              (case-lambda
                ((g$fmls$9797$1pJll4 g$body$9798$1pJll4)
                 ((case-lambda
                    ((g$body$9799$1pJll4 g$fmls$9800$1pJll4)
                     (g$build-lambda$7306$1pJll4
                       '#f
                       g$fmls$9800$1pJll4
                       g$body$9799$1pJll4)))
                  g$body$9798$1pJll4
                  g$fmls$9797$1pJll4))))))
         (car g$x$9790$1pJll4)
         (cdr g$x$9790$1pJll4)))))
   (g$chi-rhs$7677$1pJll4
     g$chi-rhs$11123$1pJll4
     (case-lambda
       ((g$rhs$9801$1pJll4 g$r$9802$1pJll4 g$mr$9803$1pJll4)
        ((case-lambda
           ((g$t$9804$1pJll4)
            (if (memv g$t$9804$1pJll4 '(defun))
              (g$chi-defun$7676$1pJll4
                (cdr g$rhs$9801$1pJll4)
                g$r$9802$1pJll4
                g$mr$9803$1pJll4)
              (if (memv g$t$9804$1pJll4 '(expr))
                ((case-lambda
                   ((g$expr$9805$1pJll4)
                    (g$chi-expr$7671$1pJll4
                      g$expr$9805$1pJll4
                      g$r$9802$1pJll4
                      g$mr$9803$1pJll4)))
                 (cdr g$rhs$9801$1pJll4))
                (if (memv g$t$9804$1pJll4 '(top-expr))
                  ((case-lambda
                     ((g$expr$9806$1pJll4)
                      (g$build-sequence$7309$1pJll4
                        '#f
                        (list
                          (g$chi-expr$7671$1pJll4
                            g$expr$9806$1pJll4
                            g$r$9802$1pJll4
                            g$mr$9803$1pJll4)
                          (g$build-void$7310$1pJll4)))))
                   (cdr g$rhs$9801$1pJll4))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9801$1pJll4))))))
         (car g$rhs$9801$1pJll4)))))
   (g$expand-interaction-rhs*/init*$7678$1pJll4
     g$expand-interaction-rhs*/init*$11124$1pJll4
     (case-lambda
       ((g$lhs*$9807$1pJll4
          g$rhs*$9808$1pJll4
          g$init*$9809$1pJll4
          g$r$9810$1pJll4
          g$mr$9811$1pJll4)
        ((letrec ((g$f$9812$1pJll4
                    (case-lambda
                      ((g$lhs*$9813$1pJll4 g$rhs*$9814$1pJll4)
                       (if (null? g$lhs*$9813$1pJll4)
                         (map (case-lambda
                                ((g$x$9815$1pJll4)
                                 (g$chi-expr$7671$1pJll4
                                   g$x$9815$1pJll4
                                   g$r$9810$1pJll4
                                   g$mr$9811$1pJll4)))
                              g$init*$9809$1pJll4)
                         ((case-lambda
                            ((g$lhs$9816$1pJll4 g$rhs$9817$1pJll4)
                             ((case-lambda
                                ((g$t$9818$1pJll4)
                                 (if (memv g$t$9818$1pJll4 '(defun))
                                   ((case-lambda
                                      ((g$rhs$9819$1pJll4)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9816$1pJll4
                                           g$rhs$9819$1pJll4)
                                         (g$f$9812$1pJll4
                                           (cdr g$lhs*$9813$1pJll4)
                                           (cdr g$rhs*$9814$1pJll4)))))
                                    (g$chi-defun$7676$1pJll4
                                      (cdr g$rhs$9817$1pJll4)
                                      g$r$9810$1pJll4
                                      g$mr$9811$1pJll4))
                                   (if (memv g$t$9818$1pJll4 '(expr))
                                     ((case-lambda
                                        ((g$rhs$9820$1pJll4)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9816$1pJll4
                                             g$rhs$9820$1pJll4)
                                           (g$f$9812$1pJll4
                                             (cdr g$lhs*$9813$1pJll4)
                                             (cdr g$rhs*$9814$1pJll4)))))
                                      (g$chi-expr$7671$1pJll4
                                        (cdr g$rhs$9817$1pJll4)
                                        g$r$9810$1pJll4
                                        g$mr$9811$1pJll4))
                                     (if (memv g$t$9818$1pJll4 '(top-expr))
                                       ((case-lambda
                                          ((g$e$9821$1pJll4)
                                           (cons
                                             g$e$9821$1pJll4
                                             (g$f$9812$1pJll4
                                               (cdr g$lhs*$9813$1pJll4)
                                               (cdr g$rhs*$9814$1pJll4)))))
                                        (g$chi-expr$7671$1pJll4
                                          (cdr g$rhs$9817$1pJll4)
                                          g$r$9810$1pJll4
                                          g$mr$9811$1pJll4))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9817$1pJll4))))))
                              (car g$rhs$9817$1pJll4))))
                          (car g$lhs*$9813$1pJll4)
                          (car g$rhs*$9814$1pJll4)))))))
           g$f$9812$1pJll4)
         g$lhs*$9807$1pJll4
         g$rhs*$9808$1pJll4))))
   (g$chi-rhs*$7679$1pJll4
     g$chi-rhs*$11125$1pJll4
     (case-lambda
       ((g$rhs*$9822$1pJll4 g$r$9823$1pJll4 g$mr$9824$1pJll4)
        ((letrec ((g$f$9825$1pJll4
                    (case-lambda
                      ((g$ls$9826$1pJll4)
                       (if (null? g$ls$9826$1pJll4)
                         '()
                         ((case-lambda
                            ((g$a$9827$1pJll4)
                             (cons
                               g$a$9827$1pJll4
                               (g$f$9825$1pJll4 (cdr g$ls$9826$1pJll4)))))
                          (g$chi-rhs$7677$1pJll4
                            (car g$ls$9826$1pJll4)
                            g$r$9823$1pJll4
                            g$mr$9824$1pJll4)))))))
           g$f$9825$1pJll4)
         g$rhs*$9822$1pJll4))))
   (g$find-bound=?$7680$1pJll4
     g$find-bound=?$11126$1pJll4
     (case-lambda
       ((g$x$9828$1pJll4 g$lhs*$9829$1pJll4 g$rhs*$9830$1pJll4)
        (if (null? g$lhs*$9829$1pJll4)
          '#f
          (if (g$bound-id=?$7378$1pJll4
                g$x$9828$1pJll4
                (car g$lhs*$9829$1pJll4))
            (car g$rhs*$9830$1pJll4)
            (g$find-bound=?$7680$1pJll4
              g$x$9828$1pJll4
              (cdr g$lhs*$9829$1pJll4)
              (cdr g$rhs*$9830$1pJll4)))))))
   (g$find-dups$7681$1pJll4
     g$find-dups$11127$1pJll4
     (case-lambda
       ((g$ls$9831$1pJll4)
        ((letrec ((g$f$9832$1pJll4
                    (case-lambda
                      ((g$ls$9833$1pJll4 g$dups$9834$1pJll4)
                       (if (null? g$ls$9833$1pJll4)
                         g$dups$9834$1pJll4
                         ((case-lambda
                            ((g$t$9835$1pJll4)
                             (if g$t$9835$1pJll4
                               ((case-lambda
                                  ((g$x$9836$1pJll4)
                                   (g$f$9832$1pJll4
                                     (cdr g$ls$9833$1pJll4)
                                     (cons
                                       (list
                                         (car g$ls$9833$1pJll4)
                                         g$x$9836$1pJll4)
                                       g$dups$9834$1pJll4))))
                                g$t$9835$1pJll4)
                               (g$f$9832$1pJll4
                                 (cdr g$ls$9833$1pJll4)
                                 g$dups$9834$1pJll4))))
                          (g$find-bound=?$7680$1pJll4
                            (car g$ls$9833$1pJll4)
                            (cdr g$ls$9833$1pJll4)
                            (cdr g$ls$9833$1pJll4))))))))
           g$f$9832$1pJll4)
         g$ls$9831$1pJll4
         '()))))
   (g$chi-internal$7682$1pJll4
     g$chi-internal$11128$1pJll4
     (case-lambda
       ((g$e*$9837$1pJll4 g$r$9838$1pJll4 g$mr$9839$1pJll4)
        ((case-lambda
           ((g$rib$9840$1pJll4)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7697$1pJll4
                   (map (case-lambda
                          ((g$x$9848$1pJll4)
                           (g$add-subst$7365$1pJll4
                             g$rib$9840$1pJll4
                             g$x$9848$1pJll4)))
                        (g$syntax->list$7374$1pJll4 g$e*$9837$1pJll4))
                   g$r$9838$1pJll4
                   g$mr$9839$1pJll4
                   '()
                   '()
                   '()
                   '()
                   g$rib$9840$1pJll4
                   '#f)))
              (case-lambda
                ((g$e*$9849$1pJll4
                   g$r$9850$1pJll4
                   g$mr$9851$1pJll4
                   g$lex*$9852$1pJll4
                   g$rhs*$9853$1pJll4
                   g$mod**$9854$1pJll4
                   g$kwd*$9855$1pJll4)
                 ((case-lambda
                    ((g$kwd*$9856$1pJll4
                       g$mod**$9857$1pJll4
                       g$rhs*$9858$1pJll4
                       g$lex*$9859$1pJll4
                       g$mr$9860$1pJll4
                       g$r$9861$1pJll4
                       g$e*$9862$1pJll4)
                     (begin
                       (if (null? g$e*$9862$1pJll4)
                         (g$syntax-violation$7764$1pJll4
                           '#f
                           '"no expression in body"
                           g$e*$9862$1pJll4)
                         (void))
                       ((case-lambda
                          ((g$init*$9863$1pJll4)
                           ((case-lambda
                              ((g$rhs*$9864$1pJll4)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7312$1pJll4
                                     '#f
                                     (reverse g$lex*$9859$1pJll4)
                                     (reverse g$rhs*$9864$1pJll4)
                                     (g$build-sequence$7309$1pJll4
                                       '#f
                                       g$init*$9863$1pJll4)))))))
                            (g$chi-rhs*$7679$1pJll4
                              g$rhs*$9858$1pJll4
                              g$r$9861$1pJll4
                              g$mr$9860$1pJll4))))
                        (g$chi-expr*$7669$1pJll4
                          (append
                            (apply append (reverse g$mod**$9857$1pJll4))
                            g$e*$9862$1pJll4)
                          g$r$9861$1pJll4
                          g$mr$9860$1pJll4)))))
                  g$kwd*$9855$1pJll4
                  g$mod**$9854$1pJll4
                  g$rhs*$9853$1pJll4
                  g$lex*$9852$1pJll4
                  g$mr$9851$1pJll4
                  g$r$9850$1pJll4
                  g$e*$9849$1pJll4))))))
         (g$make-empty-rib$7338$1pJll4)))))
   (g$parse-module$7683$1pJll4
     g$parse-module$11129$1pJll4
     (case-lambda
       ((g$e$9865$1pJll4)
        ((case-lambda
           ((g$t$9866$1pJll4)
            ((case-lambda
               ((g$ls/false$9867$1pJll4)
                (if g$ls/false$9867$1pJll4
                  (apply
                    (case-lambda
                      ((g$export*$9868$1pJll4 g$b*$9869$1pJll4)
                       (begin
                         (if (not (g$for-all$5503$1pJll4
                                    g$id?$7375$1pJll4
                                    g$export*$9868$1pJll4))
                           (g$syntax-violation$7764$1pJll4
                             '#f
                             '"module exports must be identifiers"
                             g$e$9865$1pJll4)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$9868$1pJll4)
                           g$b*$9869$1pJll4))))
                    g$ls/false$9867$1pJll4)
                  ((case-lambda
                     ((g$t$9870$1pJll4)
                      ((case-lambda
                         ((g$ls/false$9871$1pJll4)
                          (if g$ls/false$9871$1pJll4
                            (apply
                              (case-lambda
                                ((g$name$9872$1pJll4
                                   g$export*$9873$1pJll4
                                   g$b*$9874$1pJll4)
                                 (begin
                                   (if (not (g$id?$7375$1pJll4
                                              g$name$9872$1pJll4))
                                     (g$syntax-violation$7764$1pJll4
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9865$1pJll4)
                                     (void))
                                   (if (not (g$for-all$5503$1pJll4
                                              g$id?$7375$1pJll4
                                              g$export*$9873$1pJll4))
                                     (g$syntax-violation$7764$1pJll4
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9865$1pJll4)
                                     (void))
                                   (values
                                     g$name$9872$1pJll4
                                     (list->vector g$export*$9873$1pJll4)
                                     g$b*$9874$1pJll4))))
                              g$ls/false$9871$1pJll4)
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"invalid syntax"
                              g$t$9870$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$9870$1pJll4
                         '(_ any each-any . each-any)))))
                   g$t$9866$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$9866$1pJll4
               '(_ each-any . each-any)))))
         g$e$9865$1pJll4))))
   (g$8866$7684$1pJll4
     g$8866$11130$1pJll4
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8869$1pJll4
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8868$7685$1pJll4 g$8868$11131$1pJll4 '#f)
   (g$8867$7686$1pJll4
     g$8867$11132$1pJll4
     (make-record-constructor-descriptor
       g$8866$7684$1pJll4
       '#f
       g$8868$7685$1pJll4))
   (g$module-interface?$7687$1pJll4
     g$module-interface?$11133$1pJll4
     (record-predicate g$8866$7684$1pJll4))
   (g$make-module-interface$7688$1pJll4
     g$make-module-interface$11134$1pJll4
     (record-constructor g$8867$7686$1pJll4))
   (g$module-interface-first-mark$7689$1pJll4
     g$module-interface-first-mark$11135$1pJll4
     (record-accessor g$8866$7684$1pJll4 '0))
   (g$module-interface-exp-id-vec$7690$1pJll4
     g$module-interface-exp-id-vec$11136$1pJll4
     (record-accessor g$8866$7684$1pJll4 '1))
   (g$module-interface-exp-lab-vec$7691$1pJll4
     g$module-interface-exp-lab-vec$11137$1pJll4
     (record-accessor g$8866$7684$1pJll4 '2))
   (g$set-module-interface-first-mark!$7692$1pJll4
     g$set-module-interface-first-mark!$11138$1pJll4
     (record-mutator g$8866$7684$1pJll4 '0))
   (g$set-module-interface-exp-id-vec!$7693$1pJll4
     g$set-module-interface-exp-id-vec!$11139$1pJll4
     (record-mutator g$8866$7684$1pJll4 '1))
   (g$set-module-interface-exp-lab-vec!$7694$1pJll4
     g$set-module-interface-exp-lab-vec!$11140$1pJll4
     (record-mutator g$8866$7684$1pJll4 '2))
   (g$module-interface-exp-id*$7695$1pJll4
     g$module-interface-exp-id*$11141$1pJll4
     (case-lambda
       ((g$iface$9875$1pJll4 g$id$9876$1pJll4)
        (letrec* ((g$diff-marks$9877$1pJll4
                    (case-lambda
                      ((g$ls$9881$1pJll4 g$x$9882$1pJll4)
                       (begin
                         (if (null? g$ls$9881$1pJll4)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9883$1pJll4)
                             (if (eq? g$a$9883$1pJll4 g$x$9882$1pJll4)
                               '()
                               (cons
                                 g$a$9883$1pJll4
                                 (g$diff-marks$9877$1pJll4
                                   (cdr g$ls$9881$1pJll4)
                                   g$x$9882$1pJll4)))))
                          (car g$ls$9881$1pJll4)))))))
          ((case-lambda
             ((g$diff$9878$1pJll4 g$id-vec$9879$1pJll4)
              (if (null? g$diff$9878$1pJll4)
                g$id-vec$9879$1pJll4
                (vector-map
                  (case-lambda
                    ((g$x$9880$1pJll4)
                     (g$make-stx$7348$1pJll4
                       (g$stx-expr$7349$1pJll4 g$x$9880$1pJll4)
                       (append
                         g$diff$9878$1pJll4
                         (g$stx-mark*$7350$1pJll4 g$x$9880$1pJll4))
                       '()
                       '())))
                  g$id-vec$9879$1pJll4))))
           (g$diff-marks$9877$1pJll4
             (g$stx-mark*$7350$1pJll4 g$id$9876$1pJll4)
             (g$module-interface-first-mark$7689$1pJll4 g$iface$9875$1pJll4))
           (g$module-interface-exp-id-vec$7690$1pJll4 g$iface$9875$1pJll4))))))
   (g$chi-internal-module$7696$1pJll4
     g$chi-internal-module$11142$1pJll4
     (case-lambda
       ((g$e$9884$1pJll4
          g$r$9885$1pJll4
          g$mr$9886$1pJll4
          g$lex*$9887$1pJll4
          g$rhs*$9888$1pJll4
          g$mod**$9889$1pJll4
          g$kwd*$9890$1pJll4)
        (call-with-values
          (case-lambda (() (g$parse-module$7683$1pJll4 g$e$9884$1pJll4)))
          (case-lambda
            ((g$name$9894$1pJll4 g$exp-id*$9895$1pJll4 g$e*$9896$1pJll4)
             ((case-lambda
                ((g$e*$9897$1pJll4 g$exp-id*$9898$1pJll4 g$name$9899$1pJll4)
                 ((case-lambda
                    ((g$rib$9900$1pJll4)
                     ((case-lambda
                        ((g$e*$9901$1pJll4)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7697$1pJll4
                                    g$e*$9901$1pJll4
                                    g$r$9885$1pJll4
                                    g$mr$9886$1pJll4
                                    g$lex*$9887$1pJll4
                                    g$rhs*$9888$1pJll4
                                    g$mod**$9889$1pJll4
                                    g$kwd*$9890$1pJll4
                                    g$rib$9900$1pJll4
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9909$1pJll4
                                    g$r$9910$1pJll4
                                    g$mr$9911$1pJll4
                                    g$lex*$9912$1pJll4
                                    g$rhs*$9913$1pJll4
                                    g$mod**$9914$1pJll4
                                    g$kwd*$9915$1pJll4)
                                  ((case-lambda
                                     ((g$kwd*$9916$1pJll4
                                        g$mod**$9917$1pJll4
                                        g$rhs*$9918$1pJll4
                                        g$lex*$9919$1pJll4
                                        g$mr$9920$1pJll4
                                        g$r$9921$1pJll4
                                        g$e*$9922$1pJll4)
                                      ((case-lambda
                                         ((g$exp-lab*$9923$1pJll4
                                            g$mod**$9924$1pJll4)
                                          (if (not g$name$9899$1pJll4)
                                            (values
                                              g$lex*$9919$1pJll4
                                              g$rhs*$9918$1pJll4
                                              g$exp-id*$9898$1pJll4
                                              g$exp-lab*$9923$1pJll4
                                              g$r$9921$1pJll4
                                              g$mr$9920$1pJll4
                                              g$mod**$9924$1pJll4
                                              g$kwd*$9916$1pJll4)
                                            ((case-lambda
                                               ((g$lab$9925$1pJll4
                                                  g$iface$9926$1pJll4)
                                                (values
                                                  g$lex*$9919$1pJll4
                                                  g$rhs*$9918$1pJll4
                                                  (vector g$name$9899$1pJll4)
                                                  (vector g$lab$9925$1pJll4)
                                                  (cons
                                                    (cons
                                                      g$lab$9925$1pJll4
                                                      (cons
                                                        '$module
                                                        g$iface$9926$1pJll4))
                                                    g$r$9921$1pJll4)
                                                  (cons
                                                    (cons
                                                      g$lab$9925$1pJll4
                                                      (cons
                                                        '$module
                                                        g$iface$9926$1pJll4))
                                                    g$mr$9920$1pJll4)
                                                  g$mod**$9924$1pJll4
                                                  g$kwd*$9916$1pJll4)))
                                             (g$gen-label$7321$1pJll4 'module)
                                             (g$make-module-interface$7688$1pJll4
                                               (car (g$stx-mark*$7350$1pJll4
                                                      g$name$9899$1pJll4))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9927$1pJll4)
                                                    (g$make-stx$7348$1pJll4
                                                      (g$stx-expr$7349$1pJll4
                                                        g$x$9927$1pJll4)
                                                      (g$stx-mark*$7350$1pJll4
                                                        g$x$9927$1pJll4)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9898$1pJll4)
                                               g$exp-lab*$9923$1pJll4)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9928$1pJll4)
                                            ((case-lambda
                                               ((g$t$9929$1pJll4)
                                                (if g$t$9929$1pJll4
                                                  g$t$9929$1pJll4
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7764$1pJll4
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9928$1pJll4)))))
                                             (g$id->label$7388$1pJll4
                                               (g$make-stx$7348$1pJll4
                                                 (g$id->sym$7376$1pJll4
                                                   g$x$9928$1pJll4)
                                                 (g$stx-mark*$7350$1pJll4
                                                   g$x$9928$1pJll4)
                                                 (list g$rib$9900$1pJll4)
                                                 '())))))
                                         g$exp-id*$9898$1pJll4)
                                       (cons
                                         g$e*$9922$1pJll4
                                         g$mod**$9917$1pJll4))))
                                   g$kwd*$9915$1pJll4
                                   g$mod**$9914$1pJll4
                                   g$rhs*$9913$1pJll4
                                   g$lex*$9912$1pJll4
                                   g$mr$9911$1pJll4
                                   g$r$9910$1pJll4
                                   g$e*$9909$1pJll4)))))))))
                      (map (case-lambda
                             ((g$x$9930$1pJll4)
                              (g$add-subst$7365$1pJll4
                                g$rib$9900$1pJll4
                                g$x$9930$1pJll4)))
                           (g$syntax->list$7374$1pJll4 g$e*$9897$1pJll4)))))
                  (g$make-empty-rib$7338$1pJll4))))
              g$e*$9896$1pJll4
              g$exp-id*$9895$1pJll4
              g$name$9894$1pJll4)))))))
   (g$chi-body*$7697$1pJll4
     g$chi-body*$11143$1pJll4
     (case-lambda
       ((g$e*$9931$1pJll4
          g$r$9932$1pJll4
          g$mr$9933$1pJll4
          g$lex*$9934$1pJll4
          g$rhs*$9935$1pJll4
          g$mod**$9936$1pJll4
          g$kwd*$9937$1pJll4
          g$rib$9938$1pJll4
          g$top?$9939$1pJll4)
        (if (null? g$e*$9931$1pJll4)
          (values
            g$e*$9931$1pJll4
            g$r$9932$1pJll4
            g$mr$9933$1pJll4
            g$lex*$9934$1pJll4
            g$rhs*$9935$1pJll4
            g$mod**$9936$1pJll4
            g$kwd*$9937$1pJll4)
          ((case-lambda
             ((g$e$9940$1pJll4)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7395$1pJll4 g$e$9940$1pJll4 g$r$9932$1pJll4)))
                (case-lambda
                  ((g$type$9944$1pJll4 g$value$9945$1pJll4 g$kwd$9946$1pJll4)
                   ((case-lambda
                      ((g$kwd$9947$1pJll4
                         g$value$9948$1pJll4
                         g$type$9949$1pJll4)
                       ((case-lambda
                          ((g$kwd*$9950$1pJll4)
                           ((case-lambda
                              ((g$t$9951$1pJll4)
                               (if (memv g$t$9951$1pJll4 '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7593$1pJll4
                                        g$e$9940$1pJll4)))
                                   (case-lambda
                                     ((g$id$9954$1pJll4 g$rhs$9955$1pJll4)
                                      ((case-lambda
                                         ((g$rhs$9956$1pJll4 g$id$9957$1pJll4)
                                          (begin
                                            (if (g$bound-id-member?$7382$1pJll4
                                                  g$id$9957$1pJll4
                                                  g$kwd*$9950$1pJll4)
                                              (g$syntax-violation$7764$1pJll4
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9940$1pJll4)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7323$1pJll4
                                                   g$id$9957$1pJll4
                                                   g$rib$9938$1pJll4)))
                                              (case-lambda
                                                ((g$lab$9960$1pJll4
                                                   g$lex$9961$1pJll4)
                                                 ((case-lambda
                                                    ((g$lex$9962$1pJll4
                                                       g$lab$9963$1pJll4)
                                                     (begin
                                                       (g$extend-rib!$7339$1pJll4
                                                         g$rib$9938$1pJll4
                                                         g$id$9957$1pJll4
                                                         g$lab$9963$1pJll4)
                                                       (g$chi-body*$7697$1pJll4
                                                         (cdr g$e*$9931$1pJll4)
                                                         (g$add-lexical$7600$1pJll4
                                                           g$lab$9963$1pJll4
                                                           g$lex$9962$1pJll4
                                                           g$r$9932$1pJll4)
                                                         g$mr$9933$1pJll4
                                                         (cons
                                                           g$lex$9962$1pJll4
                                                           g$lex*$9934$1pJll4)
                                                         (cons
                                                           g$rhs$9956$1pJll4
                                                           g$rhs*$9935$1pJll4)
                                                         g$mod**$9936$1pJll4
                                                         g$kwd*$9950$1pJll4
                                                         g$rib$9938$1pJll4
                                                         g$top?$9939$1pJll4))))
                                                  g$lex$9961$1pJll4
                                                  g$lab$9960$1pJll4)))))))
                                       g$rhs$9955$1pJll4
                                       g$id$9954$1pJll4))))
                                 (if (memv g$t$9951$1pJll4 '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7594$1pJll4
                                          g$e$9940$1pJll4)))
                                     (case-lambda
                                       ((g$id$9966$1pJll4 g$rhs$9967$1pJll4)
                                        ((case-lambda
                                           ((g$rhs$9968$1pJll4 g$id$9969$1pJll4)
                                            (begin
                                              (if (g$bound-id-member?$7382$1pJll4
                                                    g$id$9969$1pJll4
                                                    g$kwd*$9950$1pJll4)
                                                (g$syntax-violation$7764$1pJll4
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9940$1pJll4)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9970$1pJll4
                                                    g$expanded-rhs$9971$1pJll4)
                                                  (begin
                                                    (g$extend-rib!$7339$1pJll4
                                                      g$rib$9938$1pJll4
                                                      g$id$9969$1pJll4
                                                      g$lab$9970$1pJll4)
                                                    ((case-lambda
                                                       ((g$b$9972$1pJll4)
                                                        (g$chi-body*$7697$1pJll4
                                                          (cdr g$e*$9931$1pJll4)
                                                          (cons
                                                            (cons
                                                              g$lab$9970$1pJll4
                                                              g$b$9972$1pJll4)
                                                            g$r$9932$1pJll4)
                                                          (cons
                                                            (cons
                                                              g$lab$9970$1pJll4
                                                              g$b$9972$1pJll4)
                                                            g$mr$9933$1pJll4)
                                                          g$lex*$9934$1pJll4
                                                          g$rhs*$9935$1pJll4
                                                          g$mod**$9936$1pJll4
                                                          g$kwd*$9950$1pJll4
                                                          g$rib$9938$1pJll4
                                                          g$top?$9939$1pJll4)))
                                                     (g$make-eval-transformer$7407$1pJll4
                                                       g$expanded-rhs$9971$1pJll4)))))
                                               (g$gen-define-label$7324$1pJll4
                                                 g$id$9969$1pJll4
                                                 g$rib$9938$1pJll4)
                                               (g$expand-transformer$7698$1pJll4
                                                 g$rhs$9968$1pJll4
                                                 g$mr$9933$1pJll4)))))
                                         g$rhs$9967$1pJll4
                                         g$id$9966$1pJll4))))
                                   (if (memv
                                         g$t$9951$1pJll4
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9973$1pJll4)
                                         ((case-lambda
                                            ((g$ls/false$9974$1pJll4)
                                             (if (if g$ls/false$9974$1pJll4
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9975$1pJll4
                                                            g$xrhs*$9976$1pJll4
                                                            g$xbody*$9977$1pJll4)
                                                          (if (not (g$valid-bound-ids?$7380$1pJll4
                                                                     g$xlhs*$9975$1pJll4))
                                                            (g$syntax-violation$7764$1pJll4
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9940$1pJll4)
                                                            (void))))
                                                       g$ls/false$9974$1pJll4))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9978$1pJll4
                                                      g$xrhs*$9979$1pJll4
                                                      g$xbody*$9980$1pJll4)
                                                    ((case-lambda
                                                       ((g$xlab*$9981$1pJll4)
                                                        ((case-lambda
                                                           ((g$xrib$9982$1pJll4)
                                                            ((case-lambda
                                                               ((g$xb*$9983$1pJll4)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7697$1pJll4
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9984$1pJll4)
                                                                                (g$add-subst$7365$1pJll4
                                                                                  g$xrib$9982$1pJll4
                                                                                  g$x$9984$1pJll4)))
                                                                             g$xbody*$9980$1pJll4)
                                                                        (cdr g$e*$9931$1pJll4))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9981$1pJll4
                                                                             g$xb*$9983$1pJll4)
                                                                        g$r$9932$1pJll4)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9981$1pJll4
                                                                             g$xb*$9983$1pJll4)
                                                                        g$mr$9933$1pJll4)
                                                                      g$lex*$9934$1pJll4
                                                                      g$rhs*$9935$1pJll4
                                                                      g$mod**$9936$1pJll4
                                                                      g$kwd*$9950$1pJll4
                                                                      g$rib$9938$1pJll4
                                                                      g$top?$9939$1pJll4))))))
                                                             (map (case-lambda
                                                                    ((g$x$9985$1pJll4)
                                                                     (g$make-eval-transformer$7407$1pJll4
                                                                       (g$expand-transformer$7698$1pJll4
                                                                         (if (eq? g$type$9949$1pJll4
                                                                                  'let-syntax)
                                                                           g$x$9985$1pJll4
                                                                           (g$add-subst$7365$1pJll4
                                                                             g$xrib$9982$1pJll4
                                                                             g$x$9985$1pJll4))
                                                                         g$mr$9933$1pJll4))))
                                                                  g$xrhs*$9979$1pJll4))))
                                                         (g$make-full-rib$7343$1pJll4
                                                           g$xlhs*$9978$1pJll4
                                                           g$xlab*$9981$1pJll4))))
                                                     (map g$gen-label$7321$1pJll4
                                                          g$xlhs*$9978$1pJll4))))
                                                 g$ls/false$9974$1pJll4)
                                               (g$syntax-violation$7764$1pJll4
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9973$1pJll4))))
                                          (g$syntax-dispatch$7653$1pJll4
                                            g$t$9973$1pJll4
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9940$1pJll4)
                                     (if (memv g$t$9951$1pJll4 '(begin))
                                       ((case-lambda
                                          ((g$t$9986$1pJll4)
                                           ((case-lambda
                                              ((g$ls/false$9987$1pJll4)
                                               (if g$ls/false$9987$1pJll4
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9988$1pJll4)
                                                      (g$chi-body*$7697$1pJll4
                                                        (append
                                                          g$x*$9988$1pJll4
                                                          (cdr g$e*$9931$1pJll4))
                                                        g$r$9932$1pJll4
                                                        g$mr$9933$1pJll4
                                                        g$lex*$9934$1pJll4
                                                        g$rhs*$9935$1pJll4
                                                        g$mod**$9936$1pJll4
                                                        g$kwd*$9950$1pJll4
                                                        g$rib$9938$1pJll4
                                                        g$top?$9939$1pJll4)))
                                                   g$ls/false$9987$1pJll4)
                                                 (g$syntax-violation$7764$1pJll4
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9986$1pJll4))))
                                            (g$syntax-dispatch$7653$1pJll4
                                              g$t$9986$1pJll4
                                              '(_ . each-any)))))
                                        g$e$9940$1pJll4)
                                       (if (memv
                                             g$t$9951$1pJll4
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7697$1pJll4
                                           (cons
                                             (g$add-subst$7365$1pJll4
                                               g$rib$9938$1pJll4
                                               (g$chi-global-macro$7668$1pJll4
                                                 g$value$9948$1pJll4
                                                 g$e$9940$1pJll4))
                                             (cdr g$e*$9931$1pJll4))
                                           g$r$9932$1pJll4
                                           g$mr$9933$1pJll4
                                           g$lex*$9934$1pJll4
                                           g$rhs*$9935$1pJll4
                                           g$mod**$9936$1pJll4
                                           g$kwd*$9950$1pJll4
                                           g$rib$9938$1pJll4
                                           g$top?$9939$1pJll4)
                                         (if (memv
                                               g$t$9951$1pJll4
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7697$1pJll4
                                             (cons
                                               (g$add-subst$7365$1pJll4
                                                 g$rib$9938$1pJll4
                                                 (g$chi-local-macro$7667$1pJll4
                                                   g$value$9948$1pJll4
                                                   g$e$9940$1pJll4))
                                               (cdr g$e*$9931$1pJll4))
                                             g$r$9932$1pJll4
                                             g$mr$9933$1pJll4
                                             g$lex*$9934$1pJll4
                                             g$rhs*$9935$1pJll4
                                             g$mod**$9936$1pJll4
                                             g$kwd*$9950$1pJll4
                                             g$rib$9938$1pJll4
                                             g$top?$9939$1pJll4)
                                           (if (memv
                                                 g$t$9951$1pJll4
                                                 '(macro macro!))
                                             (g$chi-body*$7697$1pJll4
                                               (cons
                                                 (g$add-subst$7365$1pJll4
                                                   g$rib$9938$1pJll4
                                                   (g$chi-macro$7666$1pJll4
                                                     g$value$9948$1pJll4
                                                     g$e$9940$1pJll4))
                                                 (cdr g$e*$9931$1pJll4))
                                               g$r$9932$1pJll4
                                               g$mr$9933$1pJll4
                                               g$lex*$9934$1pJll4
                                               g$rhs*$9935$1pJll4
                                               g$mod**$9936$1pJll4
                                               g$kwd*$9950$1pJll4
                                               g$rib$9938$1pJll4
                                               g$top?$9939$1pJll4)
                                             (if (memv
                                                   g$t$9951$1pJll4
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7696$1pJll4
                                                      g$e$9940$1pJll4
                                                      g$r$9932$1pJll4
                                                      g$mr$9933$1pJll4
                                                      g$lex*$9934$1pJll4
                                                      g$rhs*$9935$1pJll4
                                                      g$mod**$9936$1pJll4
                                                      g$kwd*$9950$1pJll4)))
                                                 (case-lambda
                                                   ((g$lex*$9997$1pJll4
                                                      g$rhs*$9998$1pJll4
                                                      g$m-exp-id*$9999$1pJll4
                                                      g$m-exp-lab*$10000$1pJll4
                                                      g$r$10001$1pJll4
                                                      g$mr$10002$1pJll4
                                                      g$mod**$10003$1pJll4
                                                      g$kwd*$10004$1pJll4)
                                                    ((case-lambda
                                                       ((g$kwd*$10005$1pJll4
                                                          g$mod**$10006$1pJll4
                                                          g$mr$10007$1pJll4
                                                          g$r$10008$1pJll4
                                                          g$m-exp-lab*$10009$1pJll4
                                                          g$m-exp-id*$10010$1pJll4
                                                          g$rhs*$10011$1pJll4
                                                          g$lex*$10012$1pJll4)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10013$1pJll4
                                                                 g$lab$10014$1pJll4)
                                                               (g$extend-rib!$7339$1pJll4
                                                                 g$rib$9938$1pJll4
                                                                 g$id$10013$1pJll4
                                                                 g$lab$10014$1pJll4)))
                                                            g$m-exp-id*$10010$1pJll4
                                                            g$m-exp-lab*$10009$1pJll4)
                                                          (g$chi-body*$7697$1pJll4
                                                            (cdr g$e*$9931$1pJll4)
                                                            g$r$10008$1pJll4
                                                            g$mr$10007$1pJll4
                                                            g$lex*$10012$1pJll4
                                                            g$rhs*$10011$1pJll4
                                                            g$mod**$10006$1pJll4
                                                            g$kwd*$10005$1pJll4
                                                            g$rib$9938$1pJll4
                                                            g$top?$9939$1pJll4))))
                                                     g$kwd*$10004$1pJll4
                                                     g$mod**$10003$1pJll4
                                                     g$mr$10002$1pJll4
                                                     g$r$10001$1pJll4
                                                     g$m-exp-lab*$10000$1pJll4
                                                     g$m-exp-id*$9999$1pJll4
                                                     g$rhs*$9998$1pJll4
                                                     g$lex*$9997$1pJll4))))
                                               (if (memv
                                                     g$t$9951$1pJll4
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$7748$1pJll4
                                                     (g$stx->datum$7386$1pJll4
                                                       g$e$9940$1pJll4))
                                                   (g$chi-body*$7697$1pJll4
                                                     (cdr g$e*$9931$1pJll4)
                                                     g$r$9932$1pJll4
                                                     g$mr$9933$1pJll4
                                                     g$lex*$9934$1pJll4
                                                     g$rhs*$9935$1pJll4
                                                     g$mod**$9936$1pJll4
                                                     g$kwd*$9950$1pJll4
                                                     g$rib$9938$1pJll4
                                                     g$top?$9939$1pJll4))
                                                 (if (memv
                                                       g$t$9951$1pJll4
                                                       '(import))
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10015$1pJll4
                                                                     (case-lambda
                                                                       ((g$e$10057$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$t$10058$1pJll4)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10059$1pJll4)
                                                                                (if (if g$ls/false$10059$1pJll4
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10060$1pJll4)
                                                                                             (g$id?$7375$1pJll4
                                                                                               g$id$10060$1pJll4)))
                                                                                          g$ls/false$10059$1pJll4))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10061$1pJll4)
                                                                                       '#t))
                                                                                    g$ls/false$10059$1pJll4)
                                                                                  ((case-lambda
                                                                                     ((g$t$10062$1pJll4)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10063$1pJll4)
                                                                                          (if g$ls/false$10063$1pJll4
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10064$1pJll4)
                                                                                                 '#f))
                                                                                              g$ls/false$10063$1pJll4)
                                                                                            ((case-lambda
                                                                                               ((g$t$10065$1pJll4)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10066$1pJll4)
                                                                                                    (if g$ls/false$10066$1pJll4
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7764$1pJll4
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10057$1pJll4)))
                                                                                                        g$ls/false$10066$1pJll4)
                                                                                                      (g$syntax-violation$7764$1pJll4
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10065$1pJll4))))
                                                                                                 (g$syntax-dispatch$7653$1pJll4
                                                                                                   g$t$10065$1pJll4
                                                                                                   '_))))
                                                                                             g$t$10062$1pJll4))))
                                                                                       (g$syntax-dispatch$7653$1pJll4
                                                                                         g$t$10062$1pJll4
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10058$1pJll4))))
                                                                             (g$syntax-dispatch$7653$1pJll4
                                                                               g$t$10058$1pJll4
                                                                               '(_ any)))))
                                                                         g$e$10057$1pJll4))))
                                                                   (g$module-import$10016$1pJll4
                                                                     (case-lambda
                                                                       ((g$e$10040$1pJll4
                                                                          g$r$10041$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$t$10042$1pJll4)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10043$1pJll4)
                                                                                (if (if g$ls/false$10043$1pJll4
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10044$1pJll4)
                                                                                             (g$id?$7375$1pJll4
                                                                                               g$id$10044$1pJll4)))
                                                                                          g$ls/false$10043$1pJll4))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10045$1pJll4)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7395$1pJll4
                                                                                              g$id$10045$1pJll4
                                                                                              g$r$10041$1pJll4)))
                                                                                         (case-lambda
                                                                                           ((g$type$10049$1pJll4
                                                                                              g$value$10050$1pJll4
                                                                                              g$kwd$10051$1pJll4)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10052$1pJll4
                                                                                                  g$value$10053$1pJll4
                                                                                                  g$type$10054$1pJll4)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10055$1pJll4)
                                                                                                    (if (memv
                                                                                                          g$t$10055$1pJll4
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10056$1pJll4)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7695$1pJll4
                                                                                                              g$iface$10056$1pJll4
                                                                                                              g$id$10045$1pJll4)
                                                                                                            (g$module-interface-exp-lab-vec$7691$1pJll4
                                                                                                              g$iface$10056$1pJll4))))
                                                                                                       g$value$10053$1pJll4)
                                                                                                      (g$syntax-violation$7764$1pJll4
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10040$1pJll4))))
                                                                                                 g$type$10054$1pJll4)))
                                                                                             g$kwd$10051$1pJll4
                                                                                             g$value$10050$1pJll4
                                                                                             g$type$10049$1pJll4))))))
                                                                                    g$ls/false$10043$1pJll4)
                                                                                  (g$syntax-violation$7764$1pJll4
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10042$1pJll4))))
                                                                             (g$syntax-dispatch$7653$1pJll4
                                                                               g$t$10042$1pJll4
                                                                               '(_ any)))))
                                                                         g$e$10040$1pJll4))))
                                                                   (g$library-import$10017$1pJll4
                                                                     (case-lambda
                                                                       ((g$e$10026$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$t$10027$1pJll4)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10028$1pJll4)
                                                                                (if g$ls/false$10028$1pJll4
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10029$1pJll4
                                                                                         g$imp*$10030$1pJll4)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7702$1pJll4
                                                                                              (g$syntax->datum$7767$1pJll4
                                                                                                g$imp*$10030$1pJll4))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10033$1pJll4
                                                                                              g$subst-labels$10034$1pJll4)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10035$1pJll4
                                                                                                  g$subst-names$10036$1pJll4)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10037$1pJll4)
                                                                                                       (g$datum->stx$7358$1pJll4
                                                                                                         g$ctxt$10029$1pJll4
                                                                                                         g$name$10037$1pJll4)))
                                                                                                    g$subst-names$10036$1pJll4)
                                                                                                  g$subst-labels$10035$1pJll4)))
                                                                                             g$subst-labels$10034$1pJll4
                                                                                             g$subst-names$10033$1pJll4))))))
                                                                                    g$ls/false$10028$1pJll4)
                                                                                  ((case-lambda
                                                                                     ((g$t$10038$1pJll4)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10039$1pJll4)
                                                                                          (if g$ls/false$10039$1pJll4
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7764$1pJll4
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10026$1pJll4)))
                                                                                              g$ls/false$10039$1pJll4)
                                                                                            (g$syntax-violation$7764$1pJll4
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10038$1pJll4))))
                                                                                       (g$syntax-dispatch$7653$1pJll4
                                                                                         g$t$10038$1pJll4
                                                                                         '_))))
                                                                                   g$t$10027$1pJll4))))
                                                                             (g$syntax-dispatch$7653$1pJll4
                                                                               g$t$10027$1pJll4
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10026$1pJll4)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$10015$1pJll4
                                                                      g$e$9940$1pJll4)
                                                                  (g$module-import$10016$1pJll4
                                                                    g$e$9940$1pJll4
                                                                    g$r$9932$1pJll4)
                                                                  (g$library-import$10017$1pJll4
                                                                    g$e$9940$1pJll4))))
                                                             (case-lambda
                                                               ((g$id*$10020$1pJll4
                                                                  g$lab*$10021$1pJll4)
                                                                ((case-lambda
                                                                   ((g$lab*$10022$1pJll4
                                                                      g$id*$10023$1pJll4)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$10024$1pJll4
                                                                           g$lab$10025$1pJll4)
                                                                         (g$extend-rib!$7339$1pJll4
                                                                           g$rib$9938$1pJll4
                                                                           g$id$10024$1pJll4
                                                                           g$lab$10025$1pJll4)))
                                                                      g$id*$10023$1pJll4
                                                                      g$lab*$10022$1pJll4)))
                                                                 g$lab*$10021$1pJll4
                                                                 g$id*$10020$1pJll4))))))))
                                                     (g$chi-body*$7697$1pJll4
                                                       (cdr g$e*$9931$1pJll4)
                                                       g$r$9932$1pJll4
                                                       g$mr$9933$1pJll4
                                                       g$lex*$9934$1pJll4
                                                       g$rhs*$9935$1pJll4
                                                       g$mod**$9936$1pJll4
                                                       g$kwd*$9950$1pJll4
                                                       g$rib$9938$1pJll4
                                                       g$top?$9939$1pJll4))
                                                   (if g$top?$9939$1pJll4
                                                     (g$chi-body*$7697$1pJll4
                                                       (cdr g$e*$9931$1pJll4)
                                                       g$r$9932$1pJll4
                                                       g$mr$9933$1pJll4
                                                       (cons
                                                         (g$gen-lexical$7319$1pJll4
                                                           'dummy)
                                                         g$lex*$9934$1pJll4)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$9940$1pJll4)
                                                         g$rhs*$9935$1pJll4)
                                                       g$mod**$9936$1pJll4
                                                       g$kwd*$9950$1pJll4
                                                       g$rib$9938$1pJll4
                                                       g$top?$9939$1pJll4)
                                                     (values
                                                       g$e*$9931$1pJll4
                                                       g$r$9932$1pJll4
                                                       g$mr$9933$1pJll4
                                                       g$lex*$9934$1pJll4
                                                       g$rhs*$9935$1pJll4
                                                       g$mod**$9936$1pJll4
                                                       g$kwd*$9950$1pJll4))))))))))))))
                            g$type$9949$1pJll4)))
                        (if (g$id?$7375$1pJll4 g$kwd$9947$1pJll4)
                          (cons g$kwd$9947$1pJll4 g$kwd*$9937$1pJll4)
                          g$kwd*$9937$1pJll4))))
                    g$kwd$9946$1pJll4
                    g$value$9945$1pJll4
                    g$type$9944$1pJll4))))))
           (car g$e*$9931$1pJll4))))))
   (g$expand-transformer$7698$1pJll4
     g$expand-transformer$11144$1pJll4
     (case-lambda
       ((g$expr$10067$1pJll4 g$r$10068$1pJll4)
        ((case-lambda
           ((g$rtc$10069$1pJll4)
            ((case-lambda
               ((g$expanded-rhs$10070$1pJll4)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$10071$1pJll4)
                        (case-lambda
                          ((g$x$10072$1pJll4)
                           (begin
                             (g$invoke-library$7190$1pJll4 g$x$10072$1pJll4)
                             (g$mark-visit$10071$1pJll4 g$x$10072$1pJll4))))))
                     (g$vis-collector$7706$1pJll4))
                    (g$rtc$10069$1pJll4))
                  g$expanded-rhs$10070$1pJll4)))
             ((case-lambda
                ((g$inv-collector$10077$1pJll4
                   g$vis-collector$10078$1pJll4
                   g$inv-collector$10079$1pJll4
                   g$vis-collector$10080$1pJll4)
                 ((case-lambda
                    ((g$swap$10081$1pJll4)
                     (dynamic-wind
                       g$swap$10081$1pJll4
                       (case-lambda
                         (()
                          (g$chi-expr$7671$1pJll4
                            g$expr$10067$1pJll4
                            g$r$10068$1pJll4
                            g$r$10068$1pJll4)))
                       g$swap$10081$1pJll4)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10082$1pJll4)
                           (begin
                             (g$inv-collector$10077$1pJll4
                               g$inv-collector$10079$1pJll4)
                             (set! g$inv-collector$10079$1pJll4
                               g$t$10082$1pJll4))))
                        (g$inv-collector$10077$1pJll4))
                       ((case-lambda
                          ((g$t$10083$1pJll4)
                           (begin
                             (g$vis-collector$10078$1pJll4
                               g$vis-collector$10080$1pJll4)
                             (set! g$vis-collector$10080$1pJll4
                               g$t$10083$1pJll4))))
                        (g$vis-collector$10078$1pJll4))))))))
              g$inv-collector$7705$1pJll4
              g$vis-collector$7706$1pJll4
              g$rtc$10069$1pJll4
              (case-lambda ((g$x$10084$1pJll4) (values)))))))
         (g$make-collector$7704$1pJll4)))))
   (g$parse-exports$7699$1pJll4
     g$parse-exports$11145$1pJll4
     (case-lambda
       ((g$exp*$10085$1pJll4)
        (letrec* ((g$idsyn?$10086$1pJll4
                    (case-lambda
                      ((g$x$10101$1pJll4)
                       (symbol?
                         (g$syntax->datum$7767$1pJll4 g$x$10101$1pJll4))))))
          ((letrec ((g$f$10087$1pJll4
                      (case-lambda
                        ((g$exp*$10088$1pJll4
                           g$int*$10089$1pJll4
                           g$ext*$10090$1pJll4)
                         (if (null? g$exp*$10088$1pJll4)
                           (begin
                             ((case-lambda
                                ((g$id*$10091$1pJll4)
                                 (if (not (g$valid-bound-ids?$7380$1pJll4
                                            g$id*$10091$1pJll4))
                                   (g$syntax-violation$7764$1pJll4
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7681$1pJll4
                                       g$id*$10091$1pJll4))
                                   (void))))
                              (map (case-lambda
                                     ((g$x$10092$1pJll4)
                                      (g$make-stx$7348$1pJll4
                                        g$x$10092$1pJll4
                                        g$top-mark*$7317$1pJll4
                                        '()
                                        '())))
                                   g$ext*$10090$1pJll4))
                             (values
                               (map g$syntax->datum$7767$1pJll4
                                    g$int*$10089$1pJll4)
                               (map g$syntax->datum$7767$1pJll4
                                    g$ext*$10090$1pJll4)))
                           ((case-lambda
                              ((g$t$10093$1pJll4)
                               ((case-lambda
                                  ((g$ls/false$10094$1pJll4)
                                   (if g$ls/false$10094$1pJll4
                                     (apply
                                       (case-lambda
                                         ((g$rename$10095$1pJll4
                                            g$i*$10096$1pJll4
                                            g$e*$10097$1pJll4)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$7767$1pJll4
                                                                g$rename$10095$1pJll4)
                                                              'rename)
                                                       (if (g$for-all$5503$1pJll4
                                                             g$idsyn?$10086$1pJll4
                                                             g$i*$10096$1pJll4)
                                                         (begin
                                                           '#f
                                                           (g$for-all$5503$1pJll4
                                                             g$idsyn?$10086$1pJll4
                                                             g$e*$10097$1pJll4))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$7764$1pJll4
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$10088$1pJll4))
                                              (void))
                                            (g$f$10087$1pJll4
                                              (cdr g$exp*$10088$1pJll4)
                                              (append
                                                g$i*$10096$1pJll4
                                                g$int*$10089$1pJll4)
                                              (append
                                                g$e*$10097$1pJll4
                                                g$ext*$10090$1pJll4)))))
                                       g$ls/false$10094$1pJll4)
                                     ((case-lambda
                                        ((g$t$10098$1pJll4)
                                         ((case-lambda
                                            ((g$ls/false$10099$1pJll4)
                                             (if g$ls/false$10099$1pJll4
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$10100$1pJll4)
                                                    (begin
                                                      (if (not (g$idsyn?$10086$1pJll4
                                                                 g$ie$10100$1pJll4))
                                                        (g$syntax-violation$7764$1pJll4
                                                          'export
                                                          '"invalid export"
                                                          g$ie$10100$1pJll4)
                                                        (void))
                                                      (g$f$10087$1pJll4
                                                        (cdr g$exp*$10088$1pJll4)
                                                        (cons
                                                          g$ie$10100$1pJll4
                                                          g$int*$10089$1pJll4)
                                                        (cons
                                                          g$ie$10100$1pJll4
                                                          g$ext*$10090$1pJll4)))))
                                                 g$ls/false$10099$1pJll4)
                                               (g$syntax-violation$7764$1pJll4
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10098$1pJll4))))
                                          (g$syntax-dispatch$7653$1pJll4
                                            g$t$10098$1pJll4
                                            'any))))
                                      g$t$10093$1pJll4))))
                                (g$syntax-dispatch$7653$1pJll4
                                  g$t$10093$1pJll4
                                  '(any . #(each (any any)))))))
                            (car g$exp*$10088$1pJll4)))))))
             g$f$10087$1pJll4)
           g$exp*$10085$1pJll4
           '()
           '())))))
   (g$parse-library-name$7700$1pJll4
     g$parse-library-name$11146$1pJll4
     (case-lambda
       ((g$spec$10102$1pJll4)
        (letrec* ((g$parse$10103$1pJll4
                    (case-lambda
                      ((g$x$10110$1pJll4)
                       ((case-lambda
                          ((g$t$10111$1pJll4)
                           ((case-lambda
                              ((g$ls/false$10112$1pJll4)
                               (if (if g$ls/false$10112$1pJll4
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10113$1pJll4)
                                            (g$for-all$5503$1pJll4
                                              (case-lambda
                                                ((g$x$10114$1pJll4)
                                                 ((case-lambda
                                                    ((g$x$10115$1pJll4)
                                                     (if (integer?
                                                           g$x$10115$1pJll4)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10115$1pJll4))
                                                       '#f)))
                                                  (g$syntax->datum$7767$1pJll4
                                                    g$x$10114$1pJll4))))
                                              g$v*$10113$1pJll4)))
                                         g$ls/false$10112$1pJll4))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10116$1pJll4)
                                      (values
                                        '()
                                        (map g$syntax->datum$7767$1pJll4
                                             g$v*$10116$1pJll4))))
                                   g$ls/false$10112$1pJll4)
                                 ((case-lambda
                                    ((g$t$10117$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$10118$1pJll4)
                                         (if (if g$ls/false$10118$1pJll4
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10119$1pJll4
                                                        g$rest$10120$1pJll4)
                                                      (symbol?
                                                        (g$syntax->datum$7767$1pJll4
                                                          g$x$10119$1pJll4))))
                                                   g$ls/false$10118$1pJll4))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10121$1pJll4
                                                  g$rest$10122$1pJll4)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10103$1pJll4
                                                       g$rest$10122$1pJll4)))
                                                  (case-lambda
                                                    ((g$x*$10125$1pJll4
                                                       g$v*$10126$1pJll4)
                                                     ((case-lambda
                                                        ((g$v*$10127$1pJll4
                                                           g$x*$10128$1pJll4)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7767$1pJll4
                                                               g$x$10121$1pJll4)
                                                             g$x*$10128$1pJll4)
                                                           g$v*$10127$1pJll4)))
                                                      g$v*$10126$1pJll4
                                                      g$x*$10125$1pJll4))))))
                                             g$ls/false$10118$1pJll4)
                                           ((case-lambda
                                              ((g$t$10129$1pJll4)
                                               ((case-lambda
                                                  ((g$ls/false$10130$1pJll4)
                                                   (if g$ls/false$10130$1pJll4
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10130$1pJll4)
                                                     ((case-lambda
                                                        ((g$t$10131$1pJll4)
                                                         ((case-lambda
                                                            ((g$ls/false$10132$1pJll4)
                                                             (if g$ls/false$10132$1pJll4
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7764$1pJll4
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10102$1pJll4)))
                                                                 g$ls/false$10132$1pJll4)
                                                               (g$syntax-violation$7764$1pJll4
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10131$1pJll4))))
                                                          (g$syntax-dispatch$7653$1pJll4
                                                            g$t$10131$1pJll4
                                                            '_))))
                                                      g$t$10129$1pJll4))))
                                                (g$syntax-dispatch$7653$1pJll4
                                                  g$t$10129$1pJll4
                                                  '()))))
                                            g$t$10117$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$10117$1pJll4
                                        '(any . any)))))
                                  g$t$10111$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$10111$1pJll4
                              '(each-any)))))
                        g$x$10110$1pJll4)))))
          (call-with-values
            (case-lambda (() (g$parse$10103$1pJll4 g$spec$10102$1pJll4)))
            (case-lambda
              ((g$name*$10106$1pJll4 g$ver*$10107$1pJll4)
               ((case-lambda
                  ((g$ver*$10108$1pJll4 g$name*$10109$1pJll4)
                   (begin
                     (if (null? g$name*$10109$1pJll4)
                       (g$syntax-violation$7764$1pJll4
                         '#f
                         '"empty library name"
                         g$spec$10102$1pJll4)
                       (void))
                     (values g$name*$10109$1pJll4 g$ver*$10108$1pJll4))))
                g$ver*$10107$1pJll4
                g$name*$10106$1pJll4))))))))
   (g$parse-library$7701$1pJll4
     g$parse-library$11147$1pJll4
     (case-lambda
       ((g$e$10133$1pJll4)
        ((case-lambda
           ((g$t$10134$1pJll4)
            ((case-lambda
               ((g$ls/false$10135$1pJll4)
                (if (if g$ls/false$10135$1pJll4
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10136$1pJll4
                               g$name*$10137$1pJll4
                               g$export$10138$1pJll4
                               g$exp*$10139$1pJll4
                               g$import$10140$1pJll4
                               g$imp*$10141$1pJll4
                               g$b*$10142$1pJll4)
                             (if (eq? (g$syntax->datum$7767$1pJll4
                                        g$export$10138$1pJll4)
                                      'export)
                               (if (eq? (g$syntax->datum$7767$1pJll4
                                          g$import$10140$1pJll4)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7767$1pJll4
                                          g$library$10136$1pJll4)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10135$1pJll4))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10143$1pJll4
                         g$name*$10144$1pJll4
                         g$export$10145$1pJll4
                         g$exp*$10146$1pJll4
                         g$import$10147$1pJll4
                         g$imp*$10148$1pJll4
                         g$b*$10149$1pJll4)
                       (values
                         g$name*$10144$1pJll4
                         g$exp*$10146$1pJll4
                         g$imp*$10148$1pJll4
                         g$b*$10149$1pJll4)))
                    g$ls/false$10135$1pJll4)
                  ((case-lambda
                     ((g$t$10150$1pJll4)
                      ((case-lambda
                         ((g$ls/false$10151$1pJll4)
                          (if g$ls/false$10151$1pJll4
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7764$1pJll4
                                   '#f
                                   '"malformed library"
                                   g$e$10133$1pJll4)))
                              g$ls/false$10151$1pJll4)
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"invalid syntax"
                              g$t$10150$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4 g$t$10150$1pJll4 '_))))
                   g$t$10134$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$10134$1pJll4
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10133$1pJll4))))
   (g$parse-import-spec*$7702$1pJll4
     g$parse-import-spec*$11148$1pJll4
     (case-lambda
       ((g$imp*$10152$1pJll4)
        (letrec* ((g$idsyn?$10153$1pJll4
                    (case-lambda
                      ((g$x$10413$1pJll4)
                       (symbol?
                         (g$syntax->datum$7767$1pJll4 g$x$10413$1pJll4)))))
                  (g$dup-error$10154$1pJll4
                    (case-lambda
                      ((g$name$10412$1pJll4)
                       (g$syntax-violation$7764$1pJll4
                         'import
                         '"two imports with different bindings"
                         g$name$10412$1pJll4))))
                  (g$merge-substs$10155$1pJll4
                    (case-lambda
                      ((g$s$10403$1pJll4 g$subst$10404$1pJll4)
                       (letrec* ((g$insert-to-subst$10405$1pJll4
                                   (case-lambda
                                     ((g$a$10406$1pJll4 g$subst$10407$1pJll4)
                                      ((case-lambda
                                         ((g$name$10408$1pJll4
                                            g$label$10409$1pJll4)
                                          ((case-lambda
                                             ((g$t$10410$1pJll4)
                                              (if g$t$10410$1pJll4
                                                ((case-lambda
                                                   ((g$x$10411$1pJll4)
                                                    (if (eq? (cdr g$x$10411$1pJll4)
                                                             g$label$10409$1pJll4)
                                                      g$subst$10407$1pJll4
                                                      (g$dup-error$10154$1pJll4
                                                        g$name$10408$1pJll4))))
                                                 g$t$10410$1pJll4)
                                                (cons
                                                  g$a$10406$1pJll4
                                                  g$subst$10407$1pJll4))))
                                           (assq
                                             g$name$10408$1pJll4
                                             g$subst$10407$1pJll4))))
                                       (car g$a$10406$1pJll4)
                                       (cdr g$a$10406$1pJll4))))))
                         (if (null? g$s$10403$1pJll4)
                           g$subst$10404$1pJll4
                           (g$insert-to-subst$10405$1pJll4
                             (car g$s$10403$1pJll4)
                             (g$merge-substs$10155$1pJll4
                               (cdr g$s$10403$1pJll4)
                               g$subst$10404$1pJll4)))))))
                  (g$exclude*$10156$1pJll4
                    (case-lambda
                      ((g$sym*$10379$1pJll4 g$subst$10380$1pJll4)
                       (letrec* ((g$exclude$10381$1pJll4
                                   (case-lambda
                                     ((g$sym$10394$1pJll4 g$subst$10395$1pJll4)
                                      (if (null? g$subst$10395$1pJll4)
                                        (g$syntax-violation$7764$1pJll4
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10394$1pJll4)
                                        (if (eq? g$sym$10394$1pJll4
                                                 (g$caar$5021$1pJll4
                                                   g$subst$10395$1pJll4))
                                          (values
                                            (g$cdar$5023$1pJll4
                                              g$subst$10395$1pJll4)
                                            (cdr g$subst$10395$1pJll4))
                                          ((case-lambda
                                             ((g$a$10396$1pJll4)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10381$1pJll4
                                                     g$sym$10394$1pJll4
                                                     (cdr g$subst$10395$1pJll4))))
                                                (case-lambda
                                                  ((g$old$10399$1pJll4
                                                     g$subst$10400$1pJll4)
                                                   ((case-lambda
                                                      ((g$subst$10401$1pJll4
                                                         g$old$10402$1pJll4)
                                                       (values
                                                         g$old$10402$1pJll4
                                                         (cons
                                                           g$a$10396$1pJll4
                                                           g$subst$10401$1pJll4))))
                                                    g$subst$10400$1pJll4
                                                    g$old$10399$1pJll4))))))
                                           (car g$subst$10395$1pJll4))))))))
                         (if (null? g$sym*$10379$1pJll4)
                           (values '() g$subst$10380$1pJll4)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10381$1pJll4
                                  (car g$sym*$10379$1pJll4)
                                  g$subst$10380$1pJll4)))
                             (case-lambda
                               ((g$old$10384$1pJll4 g$subst$10385$1pJll4)
                                ((case-lambda
                                   ((g$subst$10386$1pJll4 g$old$10387$1pJll4)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10156$1pJll4
                                           (cdr g$sym*$10379$1pJll4)
                                           g$subst$10386$1pJll4)))
                                      (case-lambda
                                        ((g$old*$10390$1pJll4
                                           g$subst$10391$1pJll4)
                                         ((case-lambda
                                            ((g$subst$10392$1pJll4
                                               g$old*$10393$1pJll4)
                                             (values
                                               (cons
                                                 g$old$10387$1pJll4
                                                 g$old*$10393$1pJll4)
                                               g$subst$10392$1pJll4)))
                                          g$subst$10391$1pJll4
                                          g$old*$10390$1pJll4))))))
                                 g$subst$10385$1pJll4
                                 g$old$10384$1pJll4)))))))))
                  (g$find*$10157$1pJll4
                    (case-lambda
                      ((g$sym*$10375$1pJll4 g$subst$10376$1pJll4)
                       (map (case-lambda
                              ((g$x$10377$1pJll4)
                               ((case-lambda
                                  ((g$t$10378$1pJll4)
                                   (if g$t$10378$1pJll4
                                     (cdr g$t$10378$1pJll4)
                                     (g$syntax-violation$7764$1pJll4
                                       'import
                                       '"cannot find identifier"
                                       g$x$10377$1pJll4))))
                                (assq g$x$10377$1pJll4 g$subst$10376$1pJll4))))
                            g$sym*$10375$1pJll4))))
                  (g$rem*$10158$1pJll4
                    (case-lambda
                      ((g$sym*$10371$1pJll4 g$subst$10372$1pJll4)
                       ((letrec ((g$f$10373$1pJll4
                                   (case-lambda
                                     ((g$subst$10374$1pJll4)
                                      (if (null? g$subst$10374$1pJll4)
                                        '()
                                        (if (memq
                                              (g$caar$5021$1pJll4
                                                g$subst$10374$1pJll4)
                                              g$sym*$10371$1pJll4)
                                          (g$f$10373$1pJll4
                                            (cdr g$subst$10374$1pJll4))
                                          (cons
                                            (car g$subst$10374$1pJll4)
                                            (g$f$10373$1pJll4
                                              (cdr g$subst$10374$1pJll4)))))))))
                          g$f$10373$1pJll4)
                        g$subst$10372$1pJll4))))
                  (g$remove-dups$10159$1pJll4
                    (case-lambda
                      ((g$ls$10370$1pJll4)
                       (if (null? g$ls$10370$1pJll4)
                         '()
                         (if (memq
                               (car g$ls$10370$1pJll4)
                               (cdr g$ls$10370$1pJll4))
                           (g$remove-dups$10159$1pJll4 (cdr g$ls$10370$1pJll4))
                           (cons
                             (car g$ls$10370$1pJll4)
                             (g$remove-dups$10159$1pJll4
                               (cdr g$ls$10370$1pJll4))))))))
                  (g$parse-library-name$10160$1pJll4
                    (case-lambda
                      ((g$spec$10254$1pJll4)
                       (letrec* ((g$subversion?$10255$1pJll4
                                   (case-lambda
                                     ((g$x$10368$1pJll4)
                                      ((case-lambda
                                         ((g$x$10369$1pJll4)
                                          (if (integer? g$x$10369$1pJll4)
                                            (if (exact? g$x$10369$1pJll4)
                                              (begin
                                                '#f
                                                (>= g$x$10369$1pJll4 '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$7767$1pJll4
                                         g$x$10368$1pJll4)))))
                                 (g$subversion-pred$10256$1pJll4
                                   (case-lambda
                                     ((g$x*$10320$1pJll4)
                                      ((case-lambda
                                         ((g$t$10321$1pJll4)
                                          ((case-lambda
                                             ((g$ls/false$10322$1pJll4)
                                              (if (if g$ls/false$10322$1pJll4
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10323$1pJll4)
                                                           (g$subversion?$10255$1pJll4
                                                             g$n$10323$1pJll4)))
                                                        g$ls/false$10322$1pJll4))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10324$1pJll4)
                                                     (case-lambda
                                                       ((g$x$10325$1pJll4)
                                                        (= g$x$10325$1pJll4
                                                           (g$syntax->datum$7767$1pJll4
                                                             g$n$10324$1pJll4))))))
                                                  g$ls/false$10322$1pJll4)
                                                ((case-lambda
                                                   ((g$t$10326$1pJll4)
                                                    ((case-lambda
                                                       ((g$ls/false$10327$1pJll4)
                                                        (if (if g$ls/false$10327$1pJll4
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10328$1pJll4
                                                                       g$sub*$10329$1pJll4)
                                                                     (eq? (g$syntax->datum$7767$1pJll4
                                                                            g$p?$10328$1pJll4)
                                                                          'and)))
                                                                  g$ls/false$10327$1pJll4))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10330$1pJll4
                                                                 g$sub*$10331$1pJll4)
                                                               ((case-lambda
                                                                  ((g$p*$10332$1pJll4)
                                                                   (case-lambda
                                                                     ((g$x$10333$1pJll4)
                                                                      (g$for-all$5503$1pJll4
                                                                        (case-lambda
                                                                          ((g$p$10334$1pJll4)
                                                                           (g$p$10334$1pJll4
                                                                             g$x$10333$1pJll4)))
                                                                        g$p*$10332$1pJll4)))))
                                                                (map g$subversion-pred$10256$1pJll4
                                                                     g$sub*$10331$1pJll4))))
                                                            g$ls/false$10327$1pJll4)
                                                          ((case-lambda
                                                             ((g$t$10335$1pJll4)
                                                              ((case-lambda
                                                                 ((g$ls/false$10336$1pJll4)
                                                                  (if (if g$ls/false$10336$1pJll4
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10337$1pJll4
                                                                                 g$sub*$10338$1pJll4)
                                                                               (eq? (g$syntax->datum$7767$1pJll4
                                                                                      g$p?$10337$1pJll4)
                                                                                    'or)))
                                                                            g$ls/false$10336$1pJll4))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10339$1pJll4
                                                                           g$sub*$10340$1pJll4)
                                                                         ((case-lambda
                                                                            ((g$p*$10341$1pJll4)
                                                                             (case-lambda
                                                                               ((g$x$10342$1pJll4)
                                                                                (g$exists$5504$1pJll4
                                                                                  (case-lambda
                                                                                    ((g$p$10343$1pJll4)
                                                                                     (g$p$10343$1pJll4
                                                                                       g$x$10342$1pJll4)))
                                                                                  g$p*$10341$1pJll4)))))
                                                                          (map g$subversion-pred$10256$1pJll4
                                                                               g$sub*$10340$1pJll4))))
                                                                      g$ls/false$10336$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$t$10344$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10345$1pJll4)
                                                                            (if (if g$ls/false$10345$1pJll4
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10346$1pJll4
                                                                                           g$sub$10347$1pJll4)
                                                                                         (eq? (g$syntax->datum$7767$1pJll4
                                                                                                g$p?$10346$1pJll4)
                                                                                              'not)))
                                                                                      g$ls/false$10345$1pJll4))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10348$1pJll4
                                                                                     g$sub$10349$1pJll4)
                                                                                   ((case-lambda
                                                                                      ((g$p$10350$1pJll4)
                                                                                       (case-lambda
                                                                                         ((g$x$10351$1pJll4)
                                                                                          (not (g$p$10350$1pJll4
                                                                                                 g$x$10351$1pJll4))))))
                                                                                    (g$subversion-pred$10256$1pJll4
                                                                                      g$sub$10349$1pJll4))))
                                                                                g$ls/false$10345$1pJll4)
                                                                              ((case-lambda
                                                                                 ((g$t$10352$1pJll4)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10353$1pJll4)
                                                                                      (if (if g$ls/false$10353$1pJll4
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10354$1pJll4
                                                                                                     g$n$10355$1pJll4)
                                                                                                   (if (eq? (g$syntax->datum$7767$1pJll4
                                                                                                              g$p?$10354$1pJll4)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10255$1pJll4
                                                                                                         g$n$10355$1pJll4))
                                                                                                     '#f)))
                                                                                                g$ls/false$10353$1pJll4))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10356$1pJll4
                                                                                               g$n$10357$1pJll4)
                                                                                             (case-lambda
                                                                                               ((g$x$10358$1pJll4)
                                                                                                (<= g$x$10358$1pJll4
                                                                                                    (g$syntax->datum$7767$1pJll4
                                                                                                      g$n$10357$1pJll4))))))
                                                                                          g$ls/false$10353$1pJll4)
                                                                                        ((case-lambda
                                                                                           ((g$t$10359$1pJll4)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10360$1pJll4)
                                                                                                (if (if g$ls/false$10360$1pJll4
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10361$1pJll4
                                                                                                               g$n$10362$1pJll4)
                                                                                                             (if (eq? (g$syntax->datum$7767$1pJll4
                                                                                                                        g$p?$10361$1pJll4)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10255$1pJll4
                                                                                                                   g$n$10362$1pJll4))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10360$1pJll4))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10363$1pJll4
                                                                                                         g$n$10364$1pJll4)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10365$1pJll4)
                                                                                                          (>= g$x$10365$1pJll4
                                                                                                              (g$syntax->datum$7767$1pJll4
                                                                                                                g$n$10364$1pJll4))))))
                                                                                                    g$ls/false$10360$1pJll4)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10366$1pJll4)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10367$1pJll4)
                                                                                                          (if g$ls/false$10367$1pJll4
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7764$1pJll4
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10254$1pJll4
                                                                                                                   g$x*$10320$1pJll4)))
                                                                                                              g$ls/false$10367$1pJll4)
                                                                                                            (g$syntax-violation$7764$1pJll4
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10366$1pJll4))))
                                                                                                       (g$syntax-dispatch$7653$1pJll4
                                                                                                         g$t$10366$1pJll4
                                                                                                         '_))))
                                                                                                   g$t$10359$1pJll4))))
                                                                                             (g$syntax-dispatch$7653$1pJll4
                                                                                               g$t$10359$1pJll4
                                                                                               '(any any)))))
                                                                                         g$t$10352$1pJll4))))
                                                                                   (g$syntax-dispatch$7653$1pJll4
                                                                                     g$t$10352$1pJll4
                                                                                     '(any any)))))
                                                                               g$t$10344$1pJll4))))
                                                                         (g$syntax-dispatch$7653$1pJll4
                                                                           g$t$10344$1pJll4
                                                                           '(any any)))))
                                                                     g$t$10335$1pJll4))))
                                                               (g$syntax-dispatch$7653$1pJll4
                                                                 g$t$10335$1pJll4
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10326$1pJll4))))
                                                     (g$syntax-dispatch$7653$1pJll4
                                                       g$t$10326$1pJll4
                                                       '(any . each-any)))))
                                                 g$t$10321$1pJll4))))
                                           (g$syntax-dispatch$7653$1pJll4
                                             g$t$10321$1pJll4
                                             'any))))
                                       g$x*$10320$1pJll4))))
                                 (g$version-pred$10257$1pJll4
                                   (case-lambda
                                     ((g$x*$10280$1pJll4)
                                      ((case-lambda
                                         ((g$t$10281$1pJll4)
                                          ((case-lambda
                                             ((g$ls/false$10282$1pJll4)
                                              (if g$ls/false$10282$1pJll4
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10283$1pJll4)
                                                        '#t))))
                                                  g$ls/false$10282$1pJll4)
                                                ((case-lambda
                                                   ((g$t$10284$1pJll4)
                                                    ((case-lambda
                                                       ((g$ls/false$10285$1pJll4)
                                                        (if (if g$ls/false$10285$1pJll4
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10286$1pJll4
                                                                       g$ver*$10287$1pJll4)
                                                                     (eq? (g$syntax->datum$7767$1pJll4
                                                                            g$c$10286$1pJll4)
                                                                          'and)))
                                                                  g$ls/false$10285$1pJll4))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10288$1pJll4
                                                                 g$ver*$10289$1pJll4)
                                                               ((case-lambda
                                                                  ((g$p*$10290$1pJll4)
                                                                   (case-lambda
                                                                     ((g$x$10291$1pJll4)
                                                                      (g$for-all$5503$1pJll4
                                                                        (case-lambda
                                                                          ((g$p$10292$1pJll4)
                                                                           (g$p$10292$1pJll4
                                                                             g$x$10291$1pJll4)))
                                                                        g$p*$10290$1pJll4)))))
                                                                (map g$version-pred$10257$1pJll4
                                                                     g$ver*$10289$1pJll4))))
                                                            g$ls/false$10285$1pJll4)
                                                          ((case-lambda
                                                             ((g$t$10293$1pJll4)
                                                              ((case-lambda
                                                                 ((g$ls/false$10294$1pJll4)
                                                                  (if (if g$ls/false$10294$1pJll4
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10295$1pJll4
                                                                                 g$ver*$10296$1pJll4)
                                                                               (eq? (g$syntax->datum$7767$1pJll4
                                                                                      g$c$10295$1pJll4)
                                                                                    'or)))
                                                                            g$ls/false$10294$1pJll4))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10297$1pJll4
                                                                           g$ver*$10298$1pJll4)
                                                                         ((case-lambda
                                                                            ((g$p*$10299$1pJll4)
                                                                             (case-lambda
                                                                               ((g$x$10300$1pJll4)
                                                                                (g$exists$5504$1pJll4
                                                                                  (case-lambda
                                                                                    ((g$p$10301$1pJll4)
                                                                                     (g$p$10301$1pJll4
                                                                                       g$x$10300$1pJll4)))
                                                                                  g$p*$10299$1pJll4)))))
                                                                          (map g$version-pred$10257$1pJll4
                                                                               g$ver*$10298$1pJll4))))
                                                                      g$ls/false$10294$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$t$10302$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10303$1pJll4)
                                                                            (if (if g$ls/false$10303$1pJll4
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10304$1pJll4
                                                                                           g$ver$10305$1pJll4)
                                                                                         (eq? (g$syntax->datum$7767$1pJll4
                                                                                                g$c$10304$1pJll4)
                                                                                              'not)))
                                                                                      g$ls/false$10303$1pJll4))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10306$1pJll4
                                                                                     g$ver$10307$1pJll4)
                                                                                   ((case-lambda
                                                                                      ((g$p$10308$1pJll4)
                                                                                       (case-lambda
                                                                                         ((g$x$10309$1pJll4)
                                                                                          (not (g$p$10308$1pJll4
                                                                                                 g$x$10309$1pJll4))))))
                                                                                    (g$version-pred$10257$1pJll4
                                                                                      g$ver$10307$1pJll4))))
                                                                                g$ls/false$10303$1pJll4)
                                                                              ((case-lambda
                                                                                 ((g$t$10310$1pJll4)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10311$1pJll4)
                                                                                      (if g$ls/false$10311$1pJll4
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10312$1pJll4)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10313$1pJll4)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10314$1pJll4)
                                                                                                    ((letrec ((g$f$10315$1pJll4
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10316$1pJll4
                                                                                                                     g$x$10317$1pJll4)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10316$1pJll4)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10317$1pJll4)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10316$1pJll4)
                                                                                                                            (car g$x$10317$1pJll4))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10315$1pJll4
                                                                                                                             (cdr g$p*$10316$1pJll4)
                                                                                                                             (cdr g$x$10317$1pJll4)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10315$1pJll4)
                                                                                                     g$p*$10313$1pJll4
                                                                                                     g$x$10314$1pJll4)))))
                                                                                              (map g$subversion-pred$10256$1pJll4
                                                                                                   g$sub*$10312$1pJll4))))
                                                                                          g$ls/false$10311$1pJll4)
                                                                                        ((case-lambda
                                                                                           ((g$t$10318$1pJll4)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10319$1pJll4)
                                                                                                (if g$ls/false$10319$1pJll4
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7764$1pJll4
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10254$1pJll4
                                                                                                         g$x*$10280$1pJll4)))
                                                                                                    g$ls/false$10319$1pJll4)
                                                                                                  (g$syntax-violation$7764$1pJll4
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10318$1pJll4))))
                                                                                             (g$syntax-dispatch$7653$1pJll4
                                                                                               g$t$10318$1pJll4
                                                                                               '_))))
                                                                                         g$t$10310$1pJll4))))
                                                                                   (g$syntax-dispatch$7653$1pJll4
                                                                                     g$t$10310$1pJll4
                                                                                     'each-any))))
                                                                               g$t$10302$1pJll4))))
                                                                         (g$syntax-dispatch$7653$1pJll4
                                                                           g$t$10302$1pJll4
                                                                           '(any any)))))
                                                                     g$t$10293$1pJll4))))
                                                               (g$syntax-dispatch$7653$1pJll4
                                                                 g$t$10293$1pJll4
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10284$1pJll4))))
                                                     (g$syntax-dispatch$7653$1pJll4
                                                       g$t$10284$1pJll4
                                                       '(any . each-any)))))
                                                 g$t$10281$1pJll4))))
                                           (g$syntax-dispatch$7653$1pJll4
                                             g$t$10281$1pJll4
                                             '()))))
                                       g$x*$10280$1pJll4)))))
                         ((letrec ((g$f$10258$1pJll4
                                     (case-lambda
                                       ((g$x$10259$1pJll4)
                                        ((case-lambda
                                           ((g$t$10260$1pJll4)
                                            ((case-lambda
                                               ((g$ls/false$10261$1pJll4)
                                                (if g$ls/false$10261$1pJll4
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10262$1pJll4)
                                                       (values
                                                         '()
                                                         (g$version-pred$10257$1pJll4
                                                           g$version-spec*$10262$1pJll4))))
                                                    g$ls/false$10261$1pJll4)
                                                  ((case-lambda
                                                     ((g$t$10263$1pJll4)
                                                      ((case-lambda
                                                         ((g$ls/false$10264$1pJll4)
                                                          (if (if g$ls/false$10264$1pJll4
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10265$1pJll4
                                                                         g$x*$10266$1pJll4)
                                                                       (g$idsyn?$10153$1pJll4
                                                                         g$x$10265$1pJll4)))
                                                                    g$ls/false$10264$1pJll4))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10267$1pJll4
                                                                   g$x*$10268$1pJll4)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10258$1pJll4
                                                                        g$x*$10268$1pJll4)))
                                                                   (case-lambda
                                                                     ((g$name$10271$1pJll4
                                                                        g$pred$10272$1pJll4)
                                                                      ((case-lambda
                                                                         ((g$pred$10273$1pJll4
                                                                            g$name$10274$1pJll4)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7767$1pJll4
                                                                                g$x$10267$1pJll4)
                                                                              g$name$10274$1pJll4)
                                                                            g$pred$10273$1pJll4)))
                                                                       g$pred$10272$1pJll4
                                                                       g$name$10271$1pJll4))))))
                                                              g$ls/false$10264$1pJll4)
                                                            ((case-lambda
                                                               ((g$t$10275$1pJll4)
                                                                ((case-lambda
                                                                   ((g$ls/false$10276$1pJll4)
                                                                    (if g$ls/false$10276$1pJll4
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10277$1pJll4)
                                                                                '#t)))))
                                                                        g$ls/false$10276$1pJll4)
                                                                      ((case-lambda
                                                                         ((g$t$10278$1pJll4)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10279$1pJll4)
                                                                              (if g$ls/false$10279$1pJll4
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7764$1pJll4
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10254$1pJll4)))
                                                                                  g$ls/false$10279$1pJll4)
                                                                                (g$syntax-violation$7764$1pJll4
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10278$1pJll4))))
                                                                           (g$syntax-dispatch$7653$1pJll4
                                                                             g$t$10278$1pJll4
                                                                             '_))))
                                                                       g$t$10275$1pJll4))))
                                                                 (g$syntax-dispatch$7653$1pJll4
                                                                   g$t$10275$1pJll4
                                                                   '()))))
                                                             g$t$10263$1pJll4))))
                                                       (g$syntax-dispatch$7653$1pJll4
                                                         g$t$10263$1pJll4
                                                         '(any . any)))))
                                                   g$t$10260$1pJll4))))
                                             (g$syntax-dispatch$7653$1pJll4
                                               g$t$10260$1pJll4
                                               '(each-any)))))
                                         g$x$10259$1pJll4)))))
                            g$f$10258$1pJll4)
                          g$spec$10254$1pJll4)))))
                  (g$import-library$10161$1pJll4
                    (case-lambda
                      ((g$spec*$10246$1pJll4)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10160$1pJll4
                              g$spec*$10246$1pJll4)))
                         (case-lambda
                           ((g$name$10249$1pJll4 g$pred$10250$1pJll4)
                            ((case-lambda
                               ((g$pred$10251$1pJll4 g$name$10252$1pJll4)
                                (begin
                                  (if (null? g$name$10252$1pJll4)
                                    (g$syntax-violation$7764$1pJll4
                                      'import
                                      '"empty library name"
                                      g$spec*$10246$1pJll4)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10253$1pJll4)
                                      (begin
                                        (if (not g$lib$10253$1pJll4)
                                          (g$syntax-violation$7764$1pJll4
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10252$1pJll4)
                                          (void))
                                        (if (not (g$pred$10251$1pJll4
                                                   (g$library-version$7143$1pJll4
                                                     g$lib$10253$1pJll4)))
                                          (g$syntax-violation$7764$1pJll4
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10246$1pJll4
                                            g$lib$10253$1pJll4)
                                          (void))
                                        ((g$imp-collector$7707$1pJll4)
                                         g$lib$10253$1pJll4)
                                        (g$library-subst$7147$1pJll4
                                          g$lib$10253$1pJll4))))
                                   (g$find-library-by-name$7183$1pJll4
                                     g$name$10252$1pJll4)))))
                             g$pred$10250$1pJll4
                             g$name$10249$1pJll4)))))))
                  (g$get-import$10162$1pJll4
                    (case-lambda
                      ((g$spec$10175$1pJll4)
                       ((case-lambda
                          ((g$t$10176$1pJll4)
                           ((case-lambda
                              ((g$ls/false$10177$1pJll4)
                               (if (if g$ls/false$10177$1pJll4
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10178$1pJll4 g$x*$10179$1pJll4)
                                            (not (memq
                                                   (g$syntax->datum$7767$1pJll4
                                                     g$x$10178$1pJll4)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10177$1pJll4))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10180$1pJll4 g$x*$10181$1pJll4)
                                      (g$import-library$10161$1pJll4
                                        (cons
                                          g$x$10180$1pJll4
                                          g$x*$10181$1pJll4))))
                                   g$ls/false$10177$1pJll4)
                                 ((case-lambda
                                    ((g$t$10182$1pJll4)
                                     ((case-lambda
                                        ((g$ls/false$10183$1pJll4)
                                         (if (if g$ls/false$10183$1pJll4
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10184$1pJll4
                                                        g$isp$10185$1pJll4
                                                        g$old*$10186$1pJll4
                                                        g$new*$10187$1pJll4)
                                                      (if (eq? (g$syntax->datum$7767$1pJll4
                                                                 g$rename$10184$1pJll4)
                                                               'rename)
                                                        (if (g$for-all$5503$1pJll4
                                                              g$idsyn?$10153$1pJll4
                                                              g$old*$10186$1pJll4)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5503$1pJll4
                                                              g$idsyn?$10153$1pJll4
                                                              g$new*$10187$1pJll4))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10183$1pJll4))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10188$1pJll4
                                                  g$isp$10189$1pJll4
                                                  g$old*$10190$1pJll4
                                                  g$new*$10191$1pJll4)
                                                ((case-lambda
                                                   ((g$subst$10192$1pJll4
                                                      g$old*$10193$1pJll4
                                                      g$new*$10194$1pJll4)
                                                    ((case-lambda
                                                       ((g$old-label*$10195$1pJll4)
                                                        ((case-lambda
                                                           ((g$subst$10196$1pJll4)
                                                            (g$merge-substs$10155$1pJll4
                                                              (map cons
                                                                   g$new*$10194$1pJll4
                                                                   g$old-label*$10195$1pJll4)
                                                              g$subst$10196$1pJll4)))
                                                         (g$rem*$10158$1pJll4
                                                           g$old*$10193$1pJll4
                                                           g$subst$10192$1pJll4))))
                                                     (g$find*$10157$1pJll4
                                                       g$old*$10193$1pJll4
                                                       g$subst$10192$1pJll4))))
                                                 (g$get-import$10162$1pJll4
                                                   g$isp$10189$1pJll4)
                                                 (map g$syntax->datum$7767$1pJll4
                                                      g$old*$10190$1pJll4)
                                                 (map g$syntax->datum$7767$1pJll4
                                                      g$new*$10191$1pJll4))))
                                             g$ls/false$10183$1pJll4)
                                           ((case-lambda
                                              ((g$t$10197$1pJll4)
                                               ((case-lambda
                                                  ((g$ls/false$10198$1pJll4)
                                                   (if (if g$ls/false$10198$1pJll4
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10199$1pJll4
                                                                  g$isp$10200$1pJll4
                                                                  g$sym*$10201$1pJll4)
                                                                (if (eq? (g$syntax->datum$7767$1pJll4
                                                                           g$except$10199$1pJll4)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5503$1pJll4
                                                                      g$idsyn?$10153$1pJll4
                                                                      g$sym*$10201$1pJll4))
                                                                  '#f)))
                                                             g$ls/false$10198$1pJll4))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10202$1pJll4
                                                            g$isp$10203$1pJll4
                                                            g$sym*$10204$1pJll4)
                                                          ((case-lambda
                                                             ((g$subst$10205$1pJll4)
                                                              (g$rem*$10158$1pJll4
                                                                (map g$syntax->datum$7767$1pJll4
                                                                     g$sym*$10204$1pJll4)
                                                                g$subst$10205$1pJll4)))
                                                           (g$get-import$10162$1pJll4
                                                             g$isp$10203$1pJll4))))
                                                       g$ls/false$10198$1pJll4)
                                                     ((case-lambda
                                                        ((g$t$10206$1pJll4)
                                                         ((case-lambda
                                                            ((g$ls/false$10207$1pJll4)
                                                             (if (if g$ls/false$10207$1pJll4
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10208$1pJll4
                                                                            g$isp$10209$1pJll4
                                                                            g$sym*$10210$1pJll4)
                                                                          (if (eq? (g$syntax->datum$7767$1pJll4
                                                                                     g$only$10208$1pJll4)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5503$1pJll4
                                                                                g$idsyn?$10153$1pJll4
                                                                                g$sym*$10210$1pJll4))
                                                                            '#f)))
                                                                       g$ls/false$10207$1pJll4))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10211$1pJll4
                                                                      g$isp$10212$1pJll4
                                                                      g$sym*$10213$1pJll4)
                                                                    ((case-lambda
                                                                       ((g$subst$10214$1pJll4
                                                                          g$sym*$10215$1pJll4)
                                                                        ((case-lambda
                                                                           ((g$sym*$10216$1pJll4)
                                                                            ((case-lambda
                                                                               ((g$lab*$10217$1pJll4)
                                                                                (map cons
                                                                                     g$sym*$10216$1pJll4
                                                                                     g$lab*$10217$1pJll4)))
                                                                             (g$find*$10157$1pJll4
                                                                               g$sym*$10216$1pJll4
                                                                               g$subst$10214$1pJll4))))
                                                                         (g$remove-dups$10159$1pJll4
                                                                           g$sym*$10215$1pJll4))))
                                                                     (g$get-import$10162$1pJll4
                                                                       g$isp$10212$1pJll4)
                                                                     (map g$syntax->datum$7767$1pJll4
                                                                          g$sym*$10213$1pJll4))))
                                                                 g$ls/false$10207$1pJll4)
                                                               ((case-lambda
                                                                  ((g$t$10218$1pJll4)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10219$1pJll4)
                                                                       (if (if g$ls/false$10219$1pJll4
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10220$1pJll4
                                                                                      g$isp$10221$1pJll4
                                                                                      g$p$10222$1pJll4)
                                                                                    (if (eq? (g$syntax->datum$7767$1pJll4
                                                                                               g$prefix$10220$1pJll4)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10153$1pJll4
                                                                                          g$p$10222$1pJll4))
                                                                                      '#f)))
                                                                                 g$ls/false$10219$1pJll4))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10223$1pJll4
                                                                                g$isp$10224$1pJll4
                                                                                g$p$10225$1pJll4)
                                                                              ((case-lambda
                                                                                 ((g$subst$10226$1pJll4
                                                                                    g$prefix$10227$1pJll4)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10228$1pJll4)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10227$1pJll4
                                                                                                (symbol->string
                                                                                                  (car g$x$10228$1pJll4))))
                                                                                            (cdr g$x$10228$1pJll4))))
                                                                                       g$subst$10226$1pJll4)))
                                                                               (g$get-import$10162$1pJll4
                                                                                 g$isp$10224$1pJll4)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7767$1pJll4
                                                                                   g$p$10225$1pJll4)))))
                                                                           g$ls/false$10219$1pJll4)
                                                                         ((case-lambda
                                                                            ((g$t$10229$1pJll4)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10230$1pJll4)
                                                                                 (if (if g$ls/false$10230$1pJll4
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10231$1pJll4
                                                                                                g$spec*$10232$1pJll4)
                                                                                              (eq? (g$syntax->datum$7767$1pJll4
                                                                                                     g$library$10231$1pJll4)
                                                                                                   'library)))
                                                                                           g$ls/false$10230$1pJll4))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10233$1pJll4
                                                                                          g$spec*$10234$1pJll4)
                                                                                        (g$import-library$10161$1pJll4
                                                                                          g$spec*$10234$1pJll4)))
                                                                                     g$ls/false$10230$1pJll4)
                                                                                   ((case-lambda
                                                                                      ((g$t$10235$1pJll4)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10236$1pJll4)
                                                                                           (if (if g$ls/false$10236$1pJll4
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10237$1pJll4
                                                                                                          g$isp$10238$1pJll4
                                                                                                          g$rest$10239$1pJll4)
                                                                                                        (eq? (g$syntax->datum$7767$1pJll4
                                                                                                               g$for$10237$1pJll4)
                                                                                                             'for)))
                                                                                                     g$ls/false$10236$1pJll4))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10240$1pJll4
                                                                                                    g$isp$10241$1pJll4
                                                                                                    g$rest$10242$1pJll4)
                                                                                                  (g$get-import$10162$1pJll4
                                                                                                    g$isp$10241$1pJll4)))
                                                                                               g$ls/false$10236$1pJll4)
                                                                                             ((case-lambda
                                                                                                ((g$t$10243$1pJll4)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10244$1pJll4)
                                                                                                     (if g$ls/false$10244$1pJll4
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10245$1pJll4)
                                                                                                            (g$syntax-violation$7764$1pJll4
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10245$1pJll4)))
                                                                                                         g$ls/false$10244$1pJll4)
                                                                                                       (g$syntax-violation$7764$1pJll4
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10243$1pJll4))))
                                                                                                  (g$syntax-dispatch$7653$1pJll4
                                                                                                    g$t$10243$1pJll4
                                                                                                    'any))))
                                                                                              g$t$10235$1pJll4))))
                                                                                        (g$syntax-dispatch$7653$1pJll4
                                                                                          g$t$10235$1pJll4
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10229$1pJll4))))
                                                                              (g$syntax-dispatch$7653$1pJll4
                                                                                g$t$10229$1pJll4
                                                                                '(any each-any)))))
                                                                          g$t$10218$1pJll4))))
                                                                    (g$syntax-dispatch$7653$1pJll4
                                                                      g$t$10218$1pJll4
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10206$1pJll4))))
                                                          (g$syntax-dispatch$7653$1pJll4
                                                            g$t$10206$1pJll4
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10197$1pJll4))))
                                                (g$syntax-dispatch$7653$1pJll4
                                                  g$t$10197$1pJll4
                                                  '(any any . each-any)))))
                                            g$t$10182$1pJll4))))
                                      (g$syntax-dispatch$7653$1pJll4
                                        g$t$10182$1pJll4
                                        '(any any . #(each (any any)))))))
                                  g$t$10176$1pJll4))))
                            (g$syntax-dispatch$7653$1pJll4
                              g$t$10176$1pJll4
                              '(any . each-any)))))
                        g$spec$10175$1pJll4))))
                  (g$add-imports!$10163$1pJll4
                    (case-lambda
                      ((g$imp$10167$1pJll4 g$h$10168$1pJll4)
                       ((case-lambda
                          ((g$subst$10169$1pJll4)
                           (for-each
                             (case-lambda
                               ((g$x$10170$1pJll4)
                                ((case-lambda
                                   ((g$name$10171$1pJll4 g$label$10172$1pJll4)
                                    ((case-lambda
                                       ((g$t$10173$1pJll4)
                                        (if g$t$10173$1pJll4
                                          ((case-lambda
                                             ((g$l$10174$1pJll4)
                                              (if (not (eq? g$l$10174$1pJll4
                                                            g$label$10172$1pJll4))
                                                (g$dup-error$10154$1pJll4
                                                  g$name$10171$1pJll4)
                                                (void))))
                                           g$t$10173$1pJll4)
                                          (g$hashtable-set!$5300$1pJll4
                                            g$h$10168$1pJll4
                                            g$name$10171$1pJll4
                                            g$label$10172$1pJll4))))
                                     (g$hashtable-ref$5299$1pJll4
                                       g$h$10168$1pJll4
                                       g$name$10171$1pJll4
                                       '#f))))
                                 (car g$x$10170$1pJll4)
                                 (cdr g$x$10170$1pJll4))))
                             g$subst$10169$1pJll4)))
                        (g$get-import$10162$1pJll4 g$imp$10167$1pJll4))))))
          ((letrec ((g$f$10164$1pJll4
                      (case-lambda
                        ((g$imp*$10165$1pJll4 g$h$10166$1pJll4)
                         (if (null? g$imp*$10165$1pJll4)
                           (hashtable-entries g$h$10166$1pJll4)
                           (begin
                             (g$add-imports!$10163$1pJll4
                               (car g$imp*$10165$1pJll4)
                               g$h$10166$1pJll4)
                             (g$f$10164$1pJll4
                               (cdr g$imp*$10165$1pJll4)
                               g$h$10166$1pJll4)))))))
             g$f$10164$1pJll4)
           g$imp*$10152$1pJll4
           (g$make-eq-hashtable$5296$1pJll4))))))
   (g$make-top-rib$7703$1pJll4
     g$make-top-rib$11149$1pJll4
     (case-lambda
       ((g$names$10414$1pJll4 g$labels$10415$1pJll4)
        ((case-lambda
           ((g$rib$10416$1pJll4)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10417$1pJll4 g$label$10418$1pJll4)
                   (begin
                     (if (not (symbol? g$name$10417$1pJll4))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10417$1pJll4)
                       (void))
                     (g$extend-rib!$7339$1pJll4
                       g$rib$10416$1pJll4
                       (g$make-stx$7348$1pJll4
                         g$name$10417$1pJll4
                         g$top-mark*$7317$1pJll4
                         '()
                         '())
                       g$label$10418$1pJll4))))
                g$names$10414$1pJll4
                g$labels$10415$1pJll4)
              g$rib$10416$1pJll4)))
         (g$make-empty-rib$7338$1pJll4)))))
   (g$make-collector$7704$1pJll4
     g$make-collector$11150$1pJll4
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10419$1pJll4)
            (case-lambda
              (() g$ls$10419$1pJll4)
              ((g$x$10420$1pJll4)
               (set! g$ls$10419$1pJll4
                 (g$set-cons$7314$1pJll4
                   g$x$10420$1pJll4
                   g$ls$10419$1pJll4))))))
         '()))))
   (g$inv-collector$7705$1pJll4
     g$inv-collector$11151$1pJll4
     (g$make-parameter$6643$1pJll4
       (case-lambda
         (g$args$10421$1pJll4
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10422$1pJll4)
          (begin
            (if (not (procedure? g$x$10422$1pJll4))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10422$1pJll4)
              (void))
            g$x$10422$1pJll4)))))
   (g$vis-collector$7706$1pJll4
     g$vis-collector$11152$1pJll4
     (g$make-parameter$6643$1pJll4
       (case-lambda
         (g$args$10423$1pJll4
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10424$1pJll4)
          (begin
            (if (not (procedure? g$x$10424$1pJll4))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10424$1pJll4)
              (void))
            g$x$10424$1pJll4)))))
   (g$imp-collector$7707$1pJll4
     g$imp-collector$11153$1pJll4
     (g$make-parameter$6643$1pJll4
       (case-lambda
         (g$args$10425$1pJll4
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10426$1pJll4)
          (begin
            (if (not (procedure? g$x$10426$1pJll4))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10426$1pJll4)
              (void))
            g$x$10426$1pJll4)))))
   (g$chi-library-internal$7708$1pJll4
     g$chi-library-internal$11154$1pJll4
     (case-lambda
       ((g$e*$10427$1pJll4 g$rib$10428$1pJll4 g$top?$10429$1pJll4)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7697$1pJll4
               g$e*$10427$1pJll4
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10428$1pJll4
               g$top?$10429$1pJll4)))
          (case-lambda
            ((g$e*$10437$1pJll4
               g$r$10438$1pJll4
               g$mr$10439$1pJll4
               g$lex*$10440$1pJll4
               g$rhs*$10441$1pJll4
               g$mod**$10442$1pJll4
               g$_kwd*$10443$1pJll4)
             ((case-lambda
                ((g$_kwd*$10444$1pJll4
                   g$mod**$10445$1pJll4
                   g$rhs*$10446$1pJll4
                   g$lex*$10447$1pJll4
                   g$mr$10448$1pJll4
                   g$r$10449$1pJll4
                   g$e*$10450$1pJll4)
                 (values
                   (append
                     (apply append (reverse g$mod**$10445$1pJll4))
                     g$e*$10450$1pJll4)
                   g$r$10449$1pJll4
                   g$mr$10448$1pJll4
                   (reverse g$lex*$10447$1pJll4)
                   (reverse g$rhs*$10446$1pJll4))))
              g$_kwd*$10443$1pJll4
              g$mod**$10442$1pJll4
              g$rhs*$10441$1pJll4
              g$lex*$10440$1pJll4
              g$mr$10439$1pJll4
              g$r$10438$1pJll4
              g$e*$10437$1pJll4)))))))
   (g$chi-interaction-expr$7709$1pJll4
     g$chi-interaction-expr$11155$1pJll4
     (case-lambda
       ((g$e$10451$1pJll4 g$rib$10452$1pJll4 g$r$10453$1pJll4)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7697$1pJll4
               (list g$e$10451$1pJll4)
               g$r$10453$1pJll4
               g$r$10453$1pJll4
               '()
               '()
               '()
               '()
               g$rib$10452$1pJll4
               '#t)))
          (case-lambda
            ((g$e*$10461$1pJll4
               g$r$10462$1pJll4
               g$mr$10463$1pJll4
               g$lex*$10464$1pJll4
               g$rhs*$10465$1pJll4
               g$mod**$10466$1pJll4
               g$_kwd*$10467$1pJll4)
             ((case-lambda
                ((g$_kwd*$10468$1pJll4
                   g$mod**$10469$1pJll4
                   g$rhs*$10470$1pJll4
                   g$lex*$10471$1pJll4
                   g$mr$10472$1pJll4
                   g$r$10473$1pJll4
                   g$e*$10474$1pJll4)
                 ((case-lambda
                    ((g$e*$10475$1pJll4)
                     ((case-lambda
                        ((g$e$10476$1pJll4)
                         (values g$e$10476$1pJll4 g$r$10473$1pJll4)))
                      (if (null? g$e*$10475$1pJll4)
                        (g$build-void$7310$1pJll4)
                        (if (null? (cdr g$e*$10475$1pJll4))
                          (car g$e*$10475$1pJll4)
                          (g$build-sequence$7309$1pJll4
                            '#f
                            g$e*$10475$1pJll4))))))
                  (g$expand-interaction-rhs*/init*$7678$1pJll4
                    (reverse g$lex*$10471$1pJll4)
                    (reverse g$rhs*$10470$1pJll4)
                    (append
                      (apply append (reverse g$mod**$10469$1pJll4))
                      g$e*$10474$1pJll4)
                    g$r$10473$1pJll4
                    g$mr$10472$1pJll4))))
              g$_kwd*$10467$1pJll4
              g$mod**$10466$1pJll4
              g$rhs*$10465$1pJll4
              g$lex*$10464$1pJll4
              g$mr$10463$1pJll4
              g$r$10462$1pJll4
              g$e*$10461$1pJll4)))))))
   (g$library-body-expander$7710$1pJll4
     g$library-body-expander$11156$1pJll4
     (case-lambda
       ((g$name$10477$1pJll4
          g$exp*$10478$1pJll4
          g$imp*$10479$1pJll4
          g$b*$10480$1pJll4
          g$top?$10481$1pJll4)
        (letrec* ((g$itc$10482$1pJll4 (g$make-collector$7704$1pJll4)))
          ((case-lambda
             ((g$imp-collector$10487$1pJll4
                g$top-level-context$10488$1pJll4
                g$imp-collector$10489$1pJll4
                g$top-level-context$10490$1pJll4)
              ((case-lambda
                 ((g$swap$10491$1pJll4)
                  (dynamic-wind
                    g$swap$10491$1pJll4
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-exports$7699$1pJll4 g$exp*$10478$1pJll4)))
                         (case-lambda
                           ((g$exp-int*$10494$1pJll4 g$exp-ext*$10495$1pJll4)
                            ((case-lambda
                               ((g$exp-ext*$10496$1pJll4
                                  g$exp-int*$10497$1pJll4)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7702$1pJll4
                                       g$imp*$10479$1pJll4)))
                                  (case-lambda
                                    ((g$subst-names$10500$1pJll4
                                       g$subst-labels$10501$1pJll4)
                                     ((case-lambda
                                        ((g$subst-labels$10502$1pJll4
                                           g$subst-names$10503$1pJll4)
                                         ((case-lambda
                                            ((g$rib$10504$1pJll4)
                                             ((case-lambda
                                                ((g$b*$10505$1pJll4
                                                   g$rtc$10506$1pJll4
                                                   g$vtc$10507$1pJll4)
                                                 ((case-lambda
                                                    ((g$inv-collector$10512$1pJll4
                                                       g$vis-collector$10513$1pJll4
                                                       g$inv-collector$10514$1pJll4
                                                       g$vis-collector$10515$1pJll4)
                                                     ((case-lambda
                                                        ((g$swap$10516$1pJll4)
                                                         (dynamic-wind
                                                           g$swap$10516$1pJll4
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7708$1pJll4
                                                                     g$b*$10505$1pJll4
                                                                     g$rib$10504$1pJll4
                                                                     g$top?$10481$1pJll4)))
                                                                (case-lambda
                                                                  ((g$init*$10522$1pJll4
                                                                     g$r$10523$1pJll4
                                                                     g$mr$10524$1pJll4
                                                                     g$lex*$10525$1pJll4
                                                                     g$rhs*$10526$1pJll4)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10527$1pJll4
                                                                         g$lex*$10528$1pJll4
                                                                         g$mr$10529$1pJll4
                                                                         g$r$10530$1pJll4
                                                                         g$init*$10531$1pJll4)
                                                                       (begin
                                                                         (g$seal-rib!$7341$1pJll4
                                                                           g$rib$10504$1pJll4)
                                                                         ((case-lambda
                                                                            ((g$init*$10532$1pJll4)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10533$1pJll4)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7342$1pJll4
                                                                                         g$rib$10504$1pJll4)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10534$1pJll4
                                                                                             g$export-subst$10535$1pJll4)
                                                                                           (letrec* ((g$errstr$10536$1pJll4
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7753$1pJll4
                                                                                                    g$lex*$10528$1pJll4
                                                                                                    g$loc*$10534$1pJll4
                                                                                                    g$r$10530$1pJll4)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10540$1pJll4
                                                                                                    g$global*$10541$1pJll4
                                                                                                    g$macro*$10542$1pJll4)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10543$1pJll4
                                                                                                        g$global*$10544$1pJll4
                                                                                                        g$export-env$10545$1pJll4)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10546$1pJll4)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10547$1pJll4
                                                                                                                   g$label$10548$1pJll4)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10549$1pJll4)
                                                                                                                     (if g$p$10549$1pJll4
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10550$1pJll4)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10551$1pJll4)
                                                                                                                               (if (eq? g$type$10551$1pJll4
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7764$1pJll4
                                                                                                                                   'export
                                                                                                                                   g$errstr$10536$1pJll4
                                                                                                                                   g$name$10547$1pJll4)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10550$1pJll4))))
                                                                                                                        (cdr g$p$10549$1pJll4))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10548$1pJll4
                                                                                                                    g$export-env$10545$1pJll4))))
                                                                                                              (car g$s$10546$1pJll4)
                                                                                                              (cdr g$s$10546$1pJll4))))
                                                                                                          g$export-subst$10535$1pJll4)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10552$1pJll4
                                                                                                              g$invoke-definitions$10553$1pJll4)
                                                                                                            (values
                                                                                                              (g$itc$10482$1pJll4)
                                                                                                              (g$rtc$10506$1pJll4)
                                                                                                              (g$vtc$10507$1pJll4)
                                                                                                              (g$build-sequence$7309$1pJll4
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10553$1pJll4
                                                                                                                  (list
                                                                                                                    g$invoke-body$10552$1pJll4)))
                                                                                                              g$macro*$10543$1pJll4
                                                                                                              g$export-subst$10535$1pJll4
                                                                                                              g$export-env$10545$1pJll4)))
                                                                                                         (g$build-library-letrec*$7313$1pJll4
                                                                                                           '#f
                                                                                                           g$name$10477$1pJll4
                                                                                                           g$lex*$10528$1pJll4
                                                                                                           g$loc*$10534$1pJll4
                                                                                                           g$rhs*$10533$1pJll4
                                                                                                           (if (null?
                                                                                                                 g$init*$10532$1pJll4)
                                                                                                             (g$build-void$7310$1pJll4)
                                                                                                             (g$build-sequence$7309$1pJll4
                                                                                                               '#f
                                                                                                               g$init*$10532$1pJll4)))
                                                                                                         (map g$build-global-define$7305$1pJll4
                                                                                                              (map cdr
                                                                                                                   g$global*$10544$1pJll4))))))
                                                                                                   g$macro*$10542$1pJll4
                                                                                                   g$global*$10541$1pJll4
                                                                                                   g$export-env$10540$1pJll4)))))))
                                                                                        (map g$gen-global$7320$1pJll4
                                                                                             g$lex*$10528$1pJll4)
                                                                                        (g$make-export-subst$7752$1pJll4
                                                                                          g$exp-int*$10497$1pJll4
                                                                                          g$exp-ext*$10496$1pJll4
                                                                                          g$rib$10504$1pJll4))))))))
                                                                              (g$chi-rhs*$7679$1pJll4
                                                                                g$rhs*$10527$1pJll4
                                                                                g$r$10530$1pJll4
                                                                                g$mr$10529$1pJll4))))
                                                                          (g$chi-expr*$7669$1pJll4
                                                                            g$init*$10531$1pJll4
                                                                            g$r$10530$1pJll4
                                                                            g$mr$10529$1pJll4)))))
                                                                    g$rhs*$10526$1pJll4
                                                                    g$lex*$10525$1pJll4
                                                                    g$mr$10524$1pJll4
                                                                    g$r$10523$1pJll4
                                                                    g$init*$10522$1pJll4))))))
                                                           g$swap$10516$1pJll4)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10554$1pJll4)
                                                               (begin
                                                                 (g$inv-collector$10512$1pJll4
                                                                   g$inv-collector$10514$1pJll4)
                                                                 (set! g$inv-collector$10514$1pJll4
                                                                   g$t$10554$1pJll4))))
                                                            (g$inv-collector$10512$1pJll4))
                                                           ((case-lambda
                                                              ((g$t$10555$1pJll4)
                                                               (begin
                                                                 (g$vis-collector$10513$1pJll4
                                                                   g$vis-collector$10515$1pJll4)
                                                                 (set! g$vis-collector$10515$1pJll4
                                                                   g$t$10555$1pJll4))))
                                                            (g$vis-collector$10513$1pJll4))))))))
                                                  g$inv-collector$7705$1pJll4
                                                  g$vis-collector$7706$1pJll4
                                                  g$rtc$10506$1pJll4
                                                  g$vtc$10507$1pJll4)))
                                              (map (case-lambda
                                                     ((g$x$10556$1pJll4)
                                                      (g$make-stx$7348$1pJll4
                                                        g$x$10556$1pJll4
                                                        g$top-mark*$7317$1pJll4
                                                        (list
                                                          g$rib$10504$1pJll4)
                                                        '())))
                                                   g$b*$10480$1pJll4)
                                              (g$make-collector$7704$1pJll4)
                                              (g$make-collector$7704$1pJll4))))
                                          (g$make-top-rib$7703$1pJll4
                                            g$subst-names$10503$1pJll4
                                            g$subst-labels$10502$1pJll4))))
                                      g$subst-labels$10501$1pJll4
                                      g$subst-names$10500$1pJll4))))))
                             g$exp-ext*$10495$1pJll4
                             g$exp-int*$10494$1pJll4))))))
                    g$swap$10491$1pJll4)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10557$1pJll4)
                        (begin
                          (g$imp-collector$10487$1pJll4
                            g$imp-collector$10489$1pJll4)
                          (set! g$imp-collector$10489$1pJll4
                            g$t$10557$1pJll4))))
                     (g$imp-collector$10487$1pJll4))
                    ((case-lambda
                       ((g$t$10558$1pJll4)
                        (begin
                          (g$top-level-context$10488$1pJll4
                            g$top-level-context$10490$1pJll4)
                          (set! g$top-level-context$10490$1pJll4
                            g$t$10558$1pJll4))))
                     (g$top-level-context$10488$1pJll4))))))))
           g$imp-collector$7707$1pJll4
           g$top-level-context$7771$1pJll4
           g$itc$10482$1pJll4
           '#f)))))
   (g$core-library-expander$7711$1pJll4
     g$core-library-expander$11157$1pJll4
     (case-lambda
       ((g$e$10559$1pJll4 g$verify-name$10560$1pJll4)
        (call-with-values
          (case-lambda (() (g$parse-library$7701$1pJll4 g$e$10559$1pJll4)))
          (case-lambda
            ((g$name*$10565$1pJll4
               g$exp*$10566$1pJll4
               g$imp*$10567$1pJll4
               g$b*$10568$1pJll4)
             ((case-lambda
                ((g$b*$10569$1pJll4
                   g$imp*$10570$1pJll4
                   g$exp*$10571$1pJll4
                   g$name*$10572$1pJll4)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$7700$1pJll4 g$name*$10572$1pJll4)))
                   (case-lambda
                     ((g$name$10575$1pJll4 g$ver$10576$1pJll4)
                      ((case-lambda
                         ((g$ver$10577$1pJll4 g$name$10578$1pJll4)
                          (begin
                            (g$verify-name$10560$1pJll4 g$name$10578$1pJll4)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7710$1pJll4
                                   g$name$10578$1pJll4
                                   g$exp*$10571$1pJll4
                                   g$imp*$10570$1pJll4
                                   g$b*$10569$1pJll4
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10586$1pJll4
                                   g$invoke-req*$10587$1pJll4
                                   g$visit-req*$10588$1pJll4
                                   g$invoke-code$10589$1pJll4
                                   g$visit-code$10590$1pJll4
                                   g$export-subst$10591$1pJll4
                                   g$export-env$10592$1pJll4)
                                 ((case-lambda
                                    ((g$export-env$10593$1pJll4
                                       g$export-subst$10594$1pJll4
                                       g$visit-code$10595$1pJll4
                                       g$invoke-code$10596$1pJll4
                                       g$visit-req*$10597$1pJll4
                                       g$invoke-req*$10598$1pJll4
                                       g$imp*$10599$1pJll4)
                                     (values
                                       g$name$10578$1pJll4
                                       g$ver$10577$1pJll4
                                       g$imp*$10599$1pJll4
                                       g$invoke-req*$10598$1pJll4
                                       g$visit-req*$10597$1pJll4
                                       g$invoke-code$10596$1pJll4
                                       g$visit-code$10595$1pJll4
                                       g$export-subst$10594$1pJll4
                                       g$export-env$10593$1pJll4)))
                                  g$export-env$10592$1pJll4
                                  g$export-subst$10591$1pJll4
                                  g$visit-code$10590$1pJll4
                                  g$invoke-code$10589$1pJll4
                                  g$visit-req*$10588$1pJll4
                                  g$invoke-req*$10587$1pJll4
                                  g$imp*$10586$1pJll4)))))))
                       g$ver$10576$1pJll4
                       g$name$10575$1pJll4))))))
              g$b*$10568$1pJll4
              g$imp*$10567$1pJll4
              g$exp*$10566$1pJll4
              g$name*$10565$1pJll4)))))))
   (g$parse-top-level-program$7712$1pJll4
     g$parse-top-level-program$11158$1pJll4
     (case-lambda
       ((g$e*$10600$1pJll4)
        ((case-lambda
           ((g$t$10601$1pJll4)
            ((case-lambda
               ((g$ls/false$10602$1pJll4)
                (if (if g$ls/false$10602$1pJll4
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10603$1pJll4
                               g$imp*$10604$1pJll4
                               g$b*$10605$1pJll4)
                             (eq? (g$syntax->datum$7767$1pJll4
                                    g$import$10603$1pJll4)
                                  'import)))
                          g$ls/false$10602$1pJll4))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10606$1pJll4
                         g$imp*$10607$1pJll4
                         g$b*$10608$1pJll4)
                       (values g$imp*$10607$1pJll4 g$b*$10608$1pJll4)))
                    g$ls/false$10602$1pJll4)
                  ((case-lambda
                     ((g$t$10609$1pJll4)
                      ((case-lambda
                         ((g$ls/false$10610$1pJll4)
                          (if (if g$ls/false$10610$1pJll4
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10611$1pJll4
                                         g$x$10612$1pJll4
                                         g$y$10613$1pJll4)
                                       (eq? (g$syntax->datum$7767$1pJll4
                                              g$import$10611$1pJll4)
                                            'import)))
                                    g$ls/false$10610$1pJll4))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10614$1pJll4
                                   g$x$10615$1pJll4
                                   g$y$10616$1pJll4)
                                 (g$syntax-violation$7764$1pJll4
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7372$1pJll4
                                     g$e*$10600$1pJll4))))
                              g$ls/false$10610$1pJll4)
                            ((case-lambda
                               ((g$t$10617$1pJll4)
                                ((case-lambda
                                   ((g$ls/false$10618$1pJll4)
                                    (if g$ls/false$10618$1pJll4
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10618$1pJll4)
                                      (g$syntax-violation$7764$1pJll4
                                        '#f
                                        '"invalid syntax"
                                        g$t$10617$1pJll4))))
                                 (g$syntax-dispatch$7653$1pJll4
                                   g$t$10617$1pJll4
                                   '_))))
                             g$t$10609$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4
                         g$t$10609$1pJll4
                         '((any . any) . any)))))
                   g$t$10601$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4
               g$t$10601$1pJll4
               '((any . each-any) . each-any)))))
         g$e*$10600$1pJll4))))
   (g$top-level-expander$7713$1pJll4
     g$top-level-expander$11159$1pJll4
     (case-lambda
       ((g$e*$10619$1pJll4)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7712$1pJll4 g$e*$10619$1pJll4)))
          (case-lambda
            ((g$imp*$10622$1pJll4 g$b*$10623$1pJll4)
             ((case-lambda
                ((g$b*$10624$1pJll4 g$imp*$10625$1pJll4)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7710$1pJll4
                        '()
                        '()
                        g$imp*$10625$1pJll4
                        g$b*$10624$1pJll4
                        '#t)))
                   (case-lambda
                     ((g$imp*$10633$1pJll4
                        g$invoke-req*$10634$1pJll4
                        g$visit-req*$10635$1pJll4
                        g$invoke-code$10636$1pJll4
                        g$visit-code$10637$1pJll4
                        g$export-subst$10638$1pJll4
                        g$export-env$10639$1pJll4)
                      ((case-lambda
                         ((g$export-env$10640$1pJll4
                            g$export-subst$10641$1pJll4
                            g$visit-code$10642$1pJll4
                            g$invoke-code$10643$1pJll4
                            g$visit-req*$10644$1pJll4
                            g$invoke-req*$10645$1pJll4
                            g$imp*$10646$1pJll4)
                          (values
                            g$invoke-req*$10645$1pJll4
                            g$invoke-code$10643$1pJll4)))
                       g$export-env$10639$1pJll4
                       g$export-subst$10638$1pJll4
                       g$visit-code$10637$1pJll4
                       g$invoke-code$10636$1pJll4
                       g$visit-req*$10635$1pJll4
                       g$invoke-req*$10634$1pJll4
                       g$imp*$10633$1pJll4))))))
              g$b*$10623$1pJll4
              g$imp*$10622$1pJll4)))))))
   (g$8903$7714$1pJll4
     g$8903$11160$1pJll4
     (make-record-type-descriptor
       'env
       '#f
       'g$8906$1pJll4
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8905$7715$1pJll4 g$8905$11161$1pJll4 '#f)
   (g$8904$7716$1pJll4
     g$8904$11162$1pJll4
     (make-record-constructor-descriptor
       g$8903$7714$1pJll4
       '#f
       g$8905$7715$1pJll4))
   (g$env?$7717$1pJll4
     g$env?$11163$1pJll4
     (record-predicate g$8903$7714$1pJll4))
   (g$make-env$7718$1pJll4
     g$make-env$11164$1pJll4
     (record-constructor g$8904$7716$1pJll4))
   (g$env-names$7719$1pJll4
     g$env-names$11165$1pJll4
     (record-accessor g$8903$7714$1pJll4 '0))
   (g$env-labels$7720$1pJll4
     g$env-labels$11166$1pJll4
     (record-accessor g$8903$7714$1pJll4 '1))
   (g$env-itc$7721$1pJll4
     g$env-itc$11167$1pJll4
     (record-accessor g$8903$7714$1pJll4 '2))
   (g$set-env-names!$7722$1pJll4
     g$set-env-names!$11168$1pJll4
     (record-mutator g$8903$7714$1pJll4 '0))
   (g$set-env-labels!$7723$1pJll4
     g$set-env-labels!$11169$1pJll4
     (record-mutator g$8903$7714$1pJll4 '1))
   (g$set-env-itc!$7724$1pJll4
     g$set-env-itc!$11170$1pJll4
     (record-mutator g$8903$7714$1pJll4 '2))
   (g$rp$7725$1pJll4
     g$rp$11171$1pJll4
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10647$1pJll4 g$p$10648$1pJll4)
          (display '"#<environment>" g$p$10648$1pJll4)))))
   (g$8922$7726$1pJll4
     g$8922$11172$1pJll4
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8925$1pJll4
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8924$7727$1pJll4 g$8924$11173$1pJll4 '#f)
   (g$8923$7728$1pJll4
     g$8923$11174$1pJll4
     (make-record-constructor-descriptor
       g$8922$7726$1pJll4
       '#f
       g$8924$7727$1pJll4))
   (g$interaction-env?$7729$1pJll4
     g$interaction-env?$11175$1pJll4
     (record-predicate g$8922$7726$1pJll4))
   (g$make-interaction-env$7730$1pJll4
     g$make-interaction-env$11176$1pJll4
     (record-constructor g$8923$7728$1pJll4))
   (g$interaction-env-rib$7731$1pJll4
     g$interaction-env-rib$11177$1pJll4
     (record-accessor g$8922$7726$1pJll4 '0))
   (g$interaction-env-r$7732$1pJll4
     g$interaction-env-r$11178$1pJll4
     (record-accessor g$8922$7726$1pJll4 '1))
   (g$interaction-env-locs$7733$1pJll4
     g$interaction-env-locs$11179$1pJll4
     (record-accessor g$8922$7726$1pJll4 '2))
   (g$set-interaction-env-rib!$7734$1pJll4
     g$set-interaction-env-rib!$11180$1pJll4
     (record-mutator g$8922$7726$1pJll4 '0))
   (g$set-interaction-env-r!$7735$1pJll4
     g$set-interaction-env-r!$11181$1pJll4
     (record-mutator g$8922$7726$1pJll4 '1))
   (g$set-interaction-env-locs!$7736$1pJll4
     g$set-interaction-env-locs!$11182$1pJll4
     (record-mutator g$8922$7726$1pJll4 '2))
   (g$rp$7737$1pJll4
     g$rp$11183$1pJll4
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10649$1pJll4 g$p$10650$1pJll4)
          (display '"#<environment>" g$p$10650$1pJll4)))))
   (g$interaction-environment-symbols$7738$1pJll4
     g$interaction-environment-symbols$11184$1pJll4
     (case-lambda
       (()
        (map (case-lambda ((g$x$10651$1pJll4) g$x$10651$1pJll4))
             (g$rib-sym*$7330$1pJll4
               (g$interaction-env-rib$7731$1pJll4
                 (g$interaction-environment$7770$1pJll4)))))))
   (g$environment-symbols$7739$1pJll4
     g$environment-symbols$11185$1pJll4
     (case-lambda
       ((g$e$10652$1pJll4)
        (vector->list (g$env-names$7719$1pJll4 g$e$10652$1pJll4)))))
   (g$environment-bindings$7740$1pJll4
     g$environment-bindings$11186$1pJll4
     (case-lambda
       ((g$e$10653$1pJll4)
        (vector->list
          (vector-map
            (case-lambda
              ((g$name$10654$1pJll4 g$label$10655$1pJll4)
               (g$parse-binding$7741$1pJll4
                 (cons
                   g$name$10654$1pJll4
                   (g$imported-label->binding$7189$1pJll4
                     g$label$10655$1pJll4)))))
            (g$env-names$7719$1pJll4 g$e$10653$1pJll4)
            (g$env-labels$7720$1pJll4 g$e$10653$1pJll4))))))
   (g$parse-binding$7741$1pJll4
     g$parse-binding$11187$1pJll4
     (case-lambda
       ((g$b$10656$1pJll4)
        (cons
          (car g$b$10656$1pJll4)
          ((case-lambda
             ((g$t$10657$1pJll4)
              (if (memv g$t$10657$1pJll4 '(core-prim global))
                'procedure
                (if (memv g$t$10657$1pJll4 '(core-macro macro global-macro))
                  'syntax
                  (if (memv g$t$10657$1pJll4 '($core-rtd))
                    'record
                    (if (eq? (car g$b$10656$1pJll4)
                             (g$cadr$5022$1pJll4 g$b$10656$1pJll4))
                      'syntax
                      'unknown))))))
           (g$cadr$5022$1pJll4 g$b$10656$1pJll4))))))
   (g$environment?$7742$1pJll4
     g$environment?$11188$1pJll4
     (case-lambda
       ((g$x$10658$1pJll4)
        ((case-lambda
           ((g$t$10659$1pJll4)
            (if g$t$10659$1pJll4
              g$t$10659$1pJll4
              (begin '#f (g$interaction-env?$7729$1pJll4 g$x$10658$1pJll4)))))
         (g$env?$7717$1pJll4 g$x$10658$1pJll4)))))
   (g$environment$7743$1pJll4
     g$environment$11189$1pJll4
     (case-lambda
       (g$imp*$10660$1pJll4
        ((case-lambda
           ((g$itc$10661$1pJll4)
            ((case-lambda
               ((g$imp-collector$10664$1pJll4 g$imp-collector$10665$1pJll4)
                ((case-lambda
                   ((g$swap$10666$1pJll4)
                    (dynamic-wind
                      g$swap$10666$1pJll4
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7702$1pJll4
                                g$imp*$10660$1pJll4)))
                           (case-lambda
                             ((g$subst-names$10669$1pJll4
                                g$subst-labels$10670$1pJll4)
                              ((case-lambda
                                 ((g$subst-labels$10671$1pJll4
                                    g$subst-names$10672$1pJll4)
                                  (g$make-env$7718$1pJll4
                                    g$subst-names$10672$1pJll4
                                    g$subst-labels$10671$1pJll4
                                    g$itc$10661$1pJll4)))
                               g$subst-labels$10670$1pJll4
                               g$subst-names$10669$1pJll4))))))
                      g$swap$10666$1pJll4)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10673$1pJll4)
                        (begin
                          (g$imp-collector$10664$1pJll4
                            g$imp-collector$10665$1pJll4)
                          (set! g$imp-collector$10665$1pJll4
                            g$t$10673$1pJll4))))
                     (g$imp-collector$10664$1pJll4)))))))
             g$imp-collector$7707$1pJll4
             g$itc$10661$1pJll4)))
         (g$make-collector$7704$1pJll4)))))
   (g$null-environment$7744$1pJll4
     g$null-environment$11190$1pJll4
     (case-lambda
       ((g$n$10674$1pJll4)
        (begin
          (if (not (eqv? g$n$10674$1pJll4 '5))
            (assertion-violation 'null-environment '"not 5" g$n$10674$1pJll4)
            (void))
          (g$environment$7743$1pJll4 '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7745$1pJll4
     g$scheme-report-environment$11191$1pJll4
     (case-lambda
       ((g$n$10675$1pJll4)
        (begin
          (if (not (eqv? g$n$10675$1pJll4 '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10675$1pJll4)
            (void))
          (g$environment$7743$1pJll4 '(psyntax scheme-report-environment-5))))))
   (g$expand$7746$1pJll4
     g$expand$11192$1pJll4
     (case-lambda
       ((g$x$10676$1pJll4 g$env$10677$1pJll4)
        (if (g$env?$7717$1pJll4 g$env$10677$1pJll4)
          ((case-lambda
             ((g$rib$10678$1pJll4)
              ((case-lambda
                 ((g$x$10679$1pJll4
                    g$itc$10680$1pJll4
                    g$rtc$10681$1pJll4
                    g$vtc$10682$1pJll4)
                  ((case-lambda
                     ((g$x$10683$1pJll4)
                      (begin
                        (g$seal-rib!$7341$1pJll4 g$rib$10678$1pJll4)
                        (values g$x$10683$1pJll4 (g$rtc$10681$1pJll4)))))
                   ((case-lambda
                      ((g$inv-collector$10690$1pJll4
                         g$vis-collector$10691$1pJll4
                         g$imp-collector$10692$1pJll4
                         g$inv-collector$10693$1pJll4
                         g$vis-collector$10694$1pJll4
                         g$imp-collector$10695$1pJll4)
                       ((case-lambda
                          ((g$swap$10696$1pJll4)
                           (dynamic-wind
                             g$swap$10696$1pJll4
                             (case-lambda
                               (()
                                (g$chi-expr$7671$1pJll4
                                  g$x$10679$1pJll4
                                  '()
                                  '())))
                             g$swap$10696$1pJll4)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10697$1pJll4)
                                 (begin
                                   (g$inv-collector$10690$1pJll4
                                     g$inv-collector$10693$1pJll4)
                                   (set! g$inv-collector$10693$1pJll4
                                     g$t$10697$1pJll4))))
                              (g$inv-collector$10690$1pJll4))
                             ((case-lambda
                                ((g$t$10698$1pJll4)
                                 (begin
                                   (g$vis-collector$10691$1pJll4
                                     g$vis-collector$10694$1pJll4)
                                   (set! g$vis-collector$10694$1pJll4
                                     g$t$10698$1pJll4))))
                              (g$vis-collector$10691$1pJll4))
                             ((case-lambda
                                ((g$t$10699$1pJll4)
                                 (begin
                                   (g$imp-collector$10692$1pJll4
                                     g$imp-collector$10695$1pJll4)
                                   (set! g$imp-collector$10695$1pJll4
                                     g$t$10699$1pJll4))))
                              (g$imp-collector$10692$1pJll4))))))))
                    g$inv-collector$7705$1pJll4
                    g$vis-collector$7706$1pJll4
                    g$imp-collector$7707$1pJll4
                    g$rtc$10681$1pJll4
                    g$vtc$10682$1pJll4
                    g$itc$10680$1pJll4))))
               (g$make-stx$7348$1pJll4
                 g$x$10676$1pJll4
                 g$top-mark*$7317$1pJll4
                 (list g$rib$10678$1pJll4)
                 '())
               (g$env-itc$7721$1pJll4 g$env$10677$1pJll4)
               (g$make-collector$7704$1pJll4)
               (g$make-collector$7704$1pJll4))))
           (g$make-top-rib$7703$1pJll4
             (g$env-names$7719$1pJll4 g$env$10677$1pJll4)
             (g$env-labels$7720$1pJll4 g$env$10677$1pJll4)))
          (if (g$interaction-env?$7729$1pJll4 g$env$10677$1pJll4)
            ((case-lambda
               ((g$rib$10700$1pJll4 g$r$10701$1pJll4 g$rtc$10702$1pJll4)
                ((case-lambda
                   ((g$x$10703$1pJll4)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10714$1pJll4
                               g$inv-collector$10715$1pJll4
                               g$vis-collector$10716$1pJll4
                               g$imp-collector$10717$1pJll4
                               g$top-level-context$10718$1pJll4
                               g$inv-collector$10719$1pJll4
                               g$vis-collector$10720$1pJll4
                               g$imp-collector$10721$1pJll4)
                             ((case-lambda
                                ((g$swap$10722$1pJll4)
                                 (dynamic-wind
                                   g$swap$10722$1pJll4
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7709$1pJll4
                                        g$x$10703$1pJll4
                                        g$rib$10700$1pJll4
                                        g$r$10701$1pJll4)))
                                   g$swap$10722$1pJll4)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10723$1pJll4)
                                       (begin
                                         (g$top-level-context$10714$1pJll4
                                           g$top-level-context$10718$1pJll4)
                                         (set! g$top-level-context$10718$1pJll4
                                           g$t$10723$1pJll4))))
                                    (g$top-level-context$10714$1pJll4))
                                   ((case-lambda
                                      ((g$t$10724$1pJll4)
                                       (begin
                                         (g$inv-collector$10715$1pJll4
                                           g$inv-collector$10719$1pJll4)
                                         (set! g$inv-collector$10719$1pJll4
                                           g$t$10724$1pJll4))))
                                    (g$inv-collector$10715$1pJll4))
                                   ((case-lambda
                                      ((g$t$10725$1pJll4)
                                       (begin
                                         (g$vis-collector$10716$1pJll4
                                           g$vis-collector$10720$1pJll4)
                                         (set! g$vis-collector$10720$1pJll4
                                           g$t$10725$1pJll4))))
                                    (g$vis-collector$10716$1pJll4))
                                   ((case-lambda
                                      ((g$t$10726$1pJll4)
                                       (begin
                                         (g$imp-collector$10717$1pJll4
                                           g$imp-collector$10721$1pJll4)
                                         (set! g$imp-collector$10721$1pJll4
                                           g$t$10726$1pJll4))))
                                    (g$imp-collector$10717$1pJll4))))))))
                          g$top-level-context$7771$1pJll4
                          g$inv-collector$7705$1pJll4
                          g$vis-collector$7706$1pJll4
                          g$imp-collector$7707$1pJll4
                          g$env$10677$1pJll4
                          g$rtc$10702$1pJll4
                          (g$make-collector$7704$1pJll4)
                          (g$make-collector$7704$1pJll4))))
                      (case-lambda
                        ((g$e$10727$1pJll4 g$r^$10728$1pJll4)
                         ((case-lambda
                            ((g$r^$10729$1pJll4 g$e$10730$1pJll4)
                             (begin
                               (g$set-interaction-env-r!$7735$1pJll4
                                 g$env$10677$1pJll4
                                 g$r^$10729$1pJll4)
                               (values g$e$10730$1pJll4 (g$rtc$10702$1pJll4)))))
                          g$r^$10728$1pJll4
                          g$e$10727$1pJll4))))))
                 (g$make-stx$7348$1pJll4
                   g$x$10676$1pJll4
                   g$top-mark*$7317$1pJll4
                   (list g$rib$10700$1pJll4)
                   '()))))
             (g$interaction-env-rib$7731$1pJll4 g$env$10677$1pJll4)
             (g$interaction-env-r$7732$1pJll4 g$env$10677$1pJll4)
             (g$make-collector$7704$1pJll4))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10677$1pJll4))))))
   (g$eval$7747$1pJll4
     g$eval$11193$1pJll4
     (case-lambda
       ((g$x$10731$1pJll4 g$env$10732$1pJll4)
        (begin
          (if (not (g$environment?$7742$1pJll4 g$env$10732$1pJll4))
            (error 'eval '"not an environment" g$env$10732$1pJll4)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$7746$1pJll4 g$x$10731$1pJll4 g$env$10732$1pJll4)))
            (case-lambda
              ((g$x$10735$1pJll4 g$invoke-req*$10736$1pJll4)
               ((case-lambda
                  ((g$invoke-req*$10737$1pJll4 g$x$10738$1pJll4)
                   (begin
                     (for-each
                       g$invoke-library$7190$1pJll4
                       g$invoke-req*$10737$1pJll4)
                     (eval-core
                       (g$expanded->core$6889$1pJll4 g$x$10738$1pJll4)))))
                g$invoke-req*$10736$1pJll4
                g$x$10735$1pJll4))))))))
   (g$library-expander$7748$1pJll4
     g$library-expander$11194$1pJll4
     (case-lambda
       ((g$x$10739$1pJll4 g$filename$10740$1pJll4 g$verify-name$10741$1pJll4)
        (letrec* ((g$build-visit-code$10742$1pJll4
                    (case-lambda
                      ((g$macro*$10785$1pJll4)
                       (if (null? g$macro*$10785$1pJll4)
                         (g$build-void$7310$1pJll4)
                         (g$build-sequence$7309$1pJll4
                           '#f
                           (map (case-lambda
                                  ((g$x$10786$1pJll4)
                                   ((case-lambda
                                      ((g$loc$10787$1pJll4 g$src$10788$1pJll4)
                                       (list
                                         'set!
                                         g$loc$10787$1pJll4
                                         g$src$10788$1pJll4)))
                                    (car g$x$10786$1pJll4)
                                    (g$cddr$5024$1pJll4 g$x$10786$1pJll4))))
                                g$macro*$10785$1pJll4))))))
                  (g$visit!$10743$1pJll4
                    (case-lambda
                      ((g$macro*$10781$1pJll4)
                       (for-each
                         (case-lambda
                           ((g$x$10782$1pJll4)
                            ((case-lambda
                               ((g$loc$10783$1pJll4 g$proc$10784$1pJll4)
                                (set-symbol-value!
                                  g$loc$10783$1pJll4
                                  g$proc$10784$1pJll4)))
                             (car g$x$10782$1pJll4)
                             (g$cadr$5022$1pJll4 g$x$10782$1pJll4))))
                         g$macro*$10781$1pJll4)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7711$1pJll4
                 g$x$10739$1pJll4
                 g$verify-name$10741$1pJll4)))
            (case-lambda
              ((g$name$10753$1pJll4
                 g$ver$10754$1pJll4
                 g$imp*$10755$1pJll4
                 g$inv*$10756$1pJll4
                 g$vis*$10757$1pJll4
                 g$invoke-code$10758$1pJll4
                 g$macro*$10759$1pJll4
                 g$export-subst$10760$1pJll4
                 g$export-env$10761$1pJll4)
               ((case-lambda
                  ((g$export-env$10762$1pJll4
                     g$export-subst$10763$1pJll4
                     g$macro*$10764$1pJll4
                     g$invoke-code$10765$1pJll4
                     g$vis*$10766$1pJll4
                     g$inv*$10767$1pJll4
                     g$imp*$10768$1pJll4
                     g$ver$10769$1pJll4
                     g$name$10770$1pJll4)
                   ((case-lambda
                      ((g$id$10771$1pJll4
                         g$name$10772$1pJll4
                         g$ver$10773$1pJll4
                         g$imp*$10774$1pJll4
                         g$vis*$10775$1pJll4
                         g$inv*$10776$1pJll4
                         g$visit-proc$10777$1pJll4
                         g$invoke-proc$10778$1pJll4
                         g$visit-code$10779$1pJll4
                         g$invoke-code$10780$1pJll4)
                       (begin
                         (g$install-library$7188$1pJll4
                           g$id$10771$1pJll4
                           g$name$10772$1pJll4
                           g$ver$10773$1pJll4
                           g$imp*$10774$1pJll4
                           g$vis*$10775$1pJll4
                           g$inv*$10776$1pJll4
                           g$export-subst$10763$1pJll4
                           g$export-env$10762$1pJll4
                           g$visit-proc$10777$1pJll4
                           g$invoke-proc$10778$1pJll4
                           g$visit-code$10779$1pJll4
                           g$invoke-code$10780$1pJll4
                           '#t
                           g$filename$10740$1pJll4)
                         (values
                           g$id$10771$1pJll4
                           g$name$10772$1pJll4
                           g$ver$10773$1pJll4
                           g$imp*$10774$1pJll4
                           g$vis*$10775$1pJll4
                           g$inv*$10776$1pJll4
                           g$invoke-code$10780$1pJll4
                           g$visit-code$10779$1pJll4
                           g$export-subst$10763$1pJll4
                           g$export-env$10762$1pJll4))))
                    (gensym)
                    g$name$10770$1pJll4
                    g$ver$10769$1pJll4
                    (map g$library-spec$7194$1pJll4 g$imp*$10768$1pJll4)
                    (map g$library-spec$7194$1pJll4 g$vis*$10766$1pJll4)
                    (map g$library-spec$7194$1pJll4 g$inv*$10767$1pJll4)
                    (case-lambda
                      (() (g$visit!$10743$1pJll4 g$macro*$10764$1pJll4)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6889$1pJll4
                           g$invoke-code$10765$1pJll4))))
                    (g$build-visit-code$10742$1pJll4 g$macro*$10764$1pJll4)
                    g$invoke-code$10765$1pJll4)))
                g$export-env$10761$1pJll4
                g$export-subst$10760$1pJll4
                g$macro*$10759$1pJll4
                g$invoke-code$10758$1pJll4
                g$vis*$10757$1pJll4
                g$inv*$10756$1pJll4
                g$imp*$10755$1pJll4
                g$ver$10754$1pJll4
                g$name$10753$1pJll4))))))
       ((g$x$10789$1pJll4 g$filename$10790$1pJll4)
        (g$library-expander$7748$1pJll4
          g$x$10789$1pJll4
          g$filename$10790$1pJll4
          (case-lambda ((g$x$10791$1pJll4) (values)))))
       ((g$x$10792$1pJll4)
        (g$library-expander$7748$1pJll4
          g$x$10792$1pJll4
          '#f
          (case-lambda ((g$x$10793$1pJll4) (values)))))))
   (g$boot-library-expand$7749$1pJll4
     g$boot-library-expand$11195$1pJll4
     (case-lambda
       ((g$x$10794$1pJll4)
        (call-with-values
          (case-lambda (() (g$library-expander$7748$1pJll4 g$x$10794$1pJll4)))
          (case-lambda
            ((g$id$10805$1pJll4
               g$name$10806$1pJll4
               g$ver$10807$1pJll4
               g$imp*$10808$1pJll4
               g$vis*$10809$1pJll4
               g$inv*$10810$1pJll4
               g$invoke-code$10811$1pJll4
               g$visit-code$10812$1pJll4
               g$export-subst$10813$1pJll4
               g$export-env$10814$1pJll4)
             ((case-lambda
                ((g$export-env$10815$1pJll4
                   g$export-subst$10816$1pJll4
                   g$visit-code$10817$1pJll4
                   g$invoke-code$10818$1pJll4
                   g$inv*$10819$1pJll4
                   g$vis*$10820$1pJll4
                   g$imp*$10821$1pJll4
                   g$ver$10822$1pJll4
                   g$name$10823$1pJll4
                   g$id$10824$1pJll4)
                 (values
                   g$name$10823$1pJll4
                   g$invoke-code$10818$1pJll4
                   g$export-subst$10816$1pJll4
                   g$export-env$10815$1pJll4)))
              g$export-env$10814$1pJll4
              g$export-subst$10813$1pJll4
              g$visit-code$10812$1pJll4
              g$invoke-code$10811$1pJll4
              g$inv*$10810$1pJll4
              g$vis*$10809$1pJll4
              g$imp*$10808$1pJll4
              g$ver$10807$1pJll4
              g$name$10806$1pJll4
              g$id$10805$1pJll4)))))))
   (g$rev-map-append$7750$1pJll4
     g$rev-map-append$11196$1pJll4
     (case-lambda
       ((g$f$10825$1pJll4 g$ls$10826$1pJll4 g$ac$10827$1pJll4)
        (if (null? g$ls$10826$1pJll4)
          g$ac$10827$1pJll4
          (g$rev-map-append$7750$1pJll4
            g$f$10825$1pJll4
            (cdr g$ls$10826$1pJll4)
            (cons
              (g$f$10825$1pJll4 (car g$ls$10826$1pJll4))
              g$ac$10827$1pJll4))))))
   (g$build-exports$7751$1pJll4
     g$build-exports$11197$1pJll4
     (case-lambda
       ((g$lex*+loc*$10828$1pJll4 g$init*$10829$1pJll4)
        (g$build-sequence$7309$1pJll4
          '#f
          (cons
            (g$build-void$7310$1pJll4)
            (g$rev-map-append$7750$1pJll4
              (case-lambda
                ((g$x$10830$1pJll4)
                 (list 'set! (cdr g$x$10830$1pJll4) (car g$x$10830$1pJll4))))
              g$lex*+loc*$10828$1pJll4
              g$init*$10829$1pJll4))))))
   (g$make-export-subst$7752$1pJll4
     g$make-export-subst$11198$1pJll4
     (case-lambda
       ((g$int*$10831$1pJll4 g$ext*$10832$1pJll4 g$rib$10833$1pJll4)
        (map (case-lambda
               ((g$int$10834$1pJll4 g$ext$10835$1pJll4)
                ((case-lambda
                   ((g$id$10836$1pJll4)
                    ((case-lambda
                       ((g$label$10837$1pJll4)
                        ((case-lambda
                           (()
                            (begin
                              (if (not g$label$10837$1pJll4)
                                (g$syntax-violation$7764$1pJll4
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$10836$1pJll4)
                                (void))
                              (cons
                                g$ext$10835$1pJll4
                                g$label$10837$1pJll4)))))))
                     (g$id->label$7388$1pJll4 g$id$10836$1pJll4))))
                 (g$make-stx$7348$1pJll4
                   g$int$10834$1pJll4
                   g$top-mark*$7317$1pJll4
                   (list g$rib$10833$1pJll4)
                   '()))))
             g$int*$10831$1pJll4
             g$ext*$10832$1pJll4))))
   (g$make-export-env/macros$7753$1pJll4
     g$make-export-env/macros$11199$1pJll4
     (case-lambda
       ((g$lex*$10838$1pJll4 g$loc*$10839$1pJll4 g$r$10840$1pJll4)
        (letrec* ((g$lookup$10841$1pJll4
                    (case-lambda
                      ((g$x$10856$1pJll4)
                       ((letrec ((g$f$10857$1pJll4
                                   (case-lambda
                                     ((g$x$10858$1pJll4
                                        g$lex*$10859$1pJll4
                                        g$loc*$10860$1pJll4)
                                      (if (pair? g$lex*$10859$1pJll4)
                                        (if (eq? g$x$10858$1pJll4
                                                 (car g$lex*$10859$1pJll4))
                                          (car g$loc*$10860$1pJll4)
                                          (g$f$10857$1pJll4
                                            g$x$10858$1pJll4
                                            (cdr g$lex*$10859$1pJll4)
                                            (cdr g$loc*$10860$1pJll4)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10857$1pJll4)
                        g$x$10856$1pJll4
                        g$lex*$10838$1pJll4
                        g$loc*$10839$1pJll4)))))
          ((letrec ((g$f$10842$1pJll4
                      (case-lambda
                        ((g$r$10843$1pJll4
                           g$env$10844$1pJll4
                           g$global*$10845$1pJll4
                           g$macro*$10846$1pJll4)
                         (if (null? g$r$10843$1pJll4)
                           (values
                             g$env$10844$1pJll4
                             g$global*$10845$1pJll4
                             g$macro*$10846$1pJll4)
                           ((case-lambda
                              ((g$x$10847$1pJll4)
                               ((case-lambda
                                  ((g$label$10848$1pJll4 g$b$10849$1pJll4)
                                   ((case-lambda
                                      ((g$t$10850$1pJll4)
                                       (if (memv g$t$10850$1pJll4 '(lexical))
                                         ((case-lambda
                                            ((g$v$10851$1pJll4)
                                             ((case-lambda
                                                ((g$loc$10852$1pJll4
                                                   g$type$10853$1pJll4)
                                                 (g$f$10842$1pJll4
                                                   (cdr g$r$10843$1pJll4)
                                                   (cons
                                                     (g$cons*$5505$1pJll4
                                                       g$label$10848$1pJll4
                                                       g$type$10853$1pJll4
                                                       g$loc$10852$1pJll4)
                                                     g$env$10844$1pJll4)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7597$1pJll4
                                                         g$v$10851$1pJll4)
                                                       g$loc$10852$1pJll4)
                                                     g$global*$10845$1pJll4)
                                                   g$macro*$10846$1pJll4)))
                                              (g$lookup$10841$1pJll4
                                                (g$lexical-var$7597$1pJll4
                                                  g$v$10851$1pJll4))
                                              (if (g$lexical-mutable?$7598$1pJll4
                                                    g$v$10851$1pJll4)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7393$1pJll4
                                            g$b$10849$1pJll4))
                                         (if (memv
                                               g$t$10850$1pJll4
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$10854$1pJll4)
                                               (g$f$10842$1pJll4
                                                 (cdr g$r$10843$1pJll4)
                                                 (cons
                                                   (g$cons*$5505$1pJll4
                                                     g$label$10848$1pJll4
                                                     'global-macro
                                                     g$loc$10854$1pJll4)
                                                   g$env$10844$1pJll4)
                                                 g$global*$10845$1pJll4
                                                 (cons
                                                   (cons
                                                     g$loc$10854$1pJll4
                                                     (g$binding-value$7393$1pJll4
                                                       g$b$10849$1pJll4))
                                                   g$macro*$10846$1pJll4))))
                                            (gensym))
                                           (if (memv
                                                 g$t$10850$1pJll4
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$10855$1pJll4)
                                                 (g$f$10842$1pJll4
                                                   (cdr g$r$10843$1pJll4)
                                                   (cons
                                                     (g$cons*$5505$1pJll4
                                                       g$label$10848$1pJll4
                                                       'global-macro!
                                                       g$loc$10855$1pJll4)
                                                     g$env$10844$1pJll4)
                                                   g$global*$10845$1pJll4
                                                   (cons
                                                     (cons
                                                       g$loc$10855$1pJll4
                                                       (g$binding-value$7393$1pJll4
                                                         g$b$10849$1pJll4))
                                                     g$macro*$10846$1pJll4))))
                                              (gensym))
                                             (if (memv
                                                   g$t$10850$1pJll4
                                                   '($rtd $module))
                                               (g$f$10842$1pJll4
                                                 (cdr g$r$10843$1pJll4)
                                                 (cons
                                                   g$x$10847$1pJll4
                                                   g$env$10844$1pJll4)
                                                 g$global*$10845$1pJll4
                                                 g$macro*$10846$1pJll4)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7392$1pJll4
                                                   g$b$10849$1pJll4)
                                                 (g$binding-value$7393$1pJll4
                                                   g$b$10849$1pJll4))))))))
                                    (g$binding-type$7392$1pJll4
                                      g$b$10849$1pJll4))))
                                (car g$x$10847$1pJll4)
                                (cdr g$x$10847$1pJll4))))
                            (car g$r$10843$1pJll4)))))))
             g$f$10842$1pJll4)
           g$r$10840$1pJll4
           '()
           '()
           '())))))
   (g$generate-temporaries$7754$1pJll4
     g$generate-temporaries$11200$1pJll4
     (case-lambda
       ((g$ls$10861$1pJll4)
        ((case-lambda
           ((g$t$10862$1pJll4)
            ((case-lambda
               ((g$ls/false$10863$1pJll4)
                (if g$ls/false$10863$1pJll4
                  (apply
                    (case-lambda
                      ((g$ls$10864$1pJll4)
                       (map (case-lambda
                              ((g$x$10865$1pJll4)
                               (g$make-stx$7348$1pJll4
                                 ((case-lambda
                                    ((g$x$10866$1pJll4)
                                     (if ((case-lambda
                                            ((g$t$10867$1pJll4)
                                             (if g$t$10867$1pJll4
                                               g$t$10867$1pJll4
                                               (begin
                                                 '#f
                                                 (string? g$x$10866$1pJll4)))))
                                          (symbol? g$x$10866$1pJll4))
                                       (gensym g$x$10866$1pJll4)
                                       (gensym 't))))
                                  (g$syntax->datum$7767$1pJll4
                                    g$x$10865$1pJll4))
                                 g$top-mark*$7317$1pJll4
                                 '()
                                 '())))
                            g$ls$10864$1pJll4)))
                    g$ls/false$10863$1pJll4)
                  ((case-lambda
                     ((g$t$10868$1pJll4)
                      ((case-lambda
                         ((g$ls/false$10869$1pJll4)
                          (if g$ls/false$10869$1pJll4
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10869$1pJll4)
                            (g$syntax-violation$7764$1pJll4
                              '#f
                              '"invalid syntax"
                              g$t$10868$1pJll4))))
                       (g$syntax-dispatch$7653$1pJll4 g$t$10868$1pJll4 '_))))
                   g$t$10862$1pJll4))))
             (g$syntax-dispatch$7653$1pJll4 g$t$10862$1pJll4 'each-any))))
         g$ls$10861$1pJll4))))
   (g$free-identifier=?$7755$1pJll4
     g$free-identifier=?$11201$1pJll4
     (case-lambda
       ((g$x$10870$1pJll4 g$y$10871$1pJll4)
        (if (g$id?$7375$1pJll4 g$x$10870$1pJll4)
          (if (g$id?$7375$1pJll4 g$y$10871$1pJll4)
            (g$free-id=?$7379$1pJll4 g$x$10870$1pJll4 g$y$10871$1pJll4)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10871$1pJll4))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10870$1pJll4)))))
   (g$bound-identifier=?$7756$1pJll4
     g$bound-identifier=?$11202$1pJll4
     (case-lambda
       ((g$x$10872$1pJll4 g$y$10873$1pJll4)
        (if (g$id?$7375$1pJll4 g$x$10872$1pJll4)
          (if (g$id?$7375$1pJll4 g$y$10873$1pJll4)
            (g$bound-id=?$7378$1pJll4 g$x$10872$1pJll4 g$y$10873$1pJll4)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10873$1pJll4))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10872$1pJll4)))))
   (g$make-source-condition$7757$1pJll4
     g$make-source-condition$11203$1pJll4
     (case-lambda
       ((g$x$10874$1pJll4)
        (letrec* ((g$11814$10875$1pJll4
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11817$1pJll4
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11816$10876$1pJll4 '#f)
                  (g$11815$10877$1pJll4
                    (make-record-constructor-descriptor
                      g$11814$10875$1pJll4
                      &condition-rcd
                      g$11816$10876$1pJll4))
                  (g$11813$10878$1pJll4 (record-predicate g$11814$10875$1pJll4))
                  (g$make-source-condition$10879$1pJll4
                    (record-constructor g$11815$10877$1pJll4))
                  (g$11811$10880$1pJll4
                    (record-accessor g$11814$10875$1pJll4 '0))
                  (g$11812$10881$1pJll4
                    (record-accessor g$11814$10875$1pJll4 '1))
                  (g$source-condition?$10882$1pJll4
                    (condition-predicate g$11814$10875$1pJll4))
                  (g$source-filename$10883$1pJll4
                    (condition-accessor
                      g$11814$10875$1pJll4
                      g$11811$10880$1pJll4))
                  (g$source-character$10884$1pJll4
                    (condition-accessor
                      g$11814$10875$1pJll4
                      g$11812$10881$1pJll4)))
          (if (pair? g$x$10874$1pJll4)
            (g$make-source-condition$10879$1pJll4
              (car g$x$10874$1pJll4)
              (cdr g$x$10874$1pJll4))
            (condition))))))
   (g$extract-position-condition$7758$1pJll4
     g$extract-position-condition$11204$1pJll4
     (case-lambda
       ((g$x$10885$1pJll4)
        (g$make-source-condition$7757$1pJll4
          (g$expression-position$7759$1pJll4 g$x$10885$1pJll4)))))
   (g$expression-position$7759$1pJll4
     g$expression-position$11205$1pJll4
     (case-lambda
       ((g$x$10886$1pJll4)
        (if (g$stx?$7347$1pJll4 g$x$10886$1pJll4)
          (begin
            '#f
            ((case-lambda
               ((g$x$10887$1pJll4)
                (if (annotation? g$x$10887$1pJll4)
                  (begin '#f (annotation-source g$x$10887$1pJll4))
                  '#f)))
             (g$stx-expr$7349$1pJll4 g$x$10886$1pJll4)))
          '#f))))
   (g$assertion-error$7760$1pJll4
     g$assertion-error$11206$1pJll4
     (case-lambda
       ((g$expr$10888$1pJll4 g$pos$10889$1pJll4)
        (raise
          (condition
            (g$make-assertion-violation$5789$1pJll4)
            (g$make-who-condition$5803$1pJll4 'assert)
            (g$make-message-condition$5757$1pJll4 '"assertion failed")
            (g$make-irritants-condition$5795$1pJll4 (list g$expr$10888$1pJll4))
            (g$make-source-condition$7757$1pJll4 g$pos$10889$1pJll4))))))
   (g$syntax-error$7761$1pJll4
     g$syntax-error$11207$1pJll4
     (case-lambda
       ((g$x$10890$1pJll4 . g$args$10891$1pJll4)
        (begin
          (if (not (g$for-all$5503$1pJll4 string? g$args$10891$1pJll4))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10891$1pJll4)
            (void))
          (raise
            (condition
              (g$make-message-condition$5757$1pJll4
                (if (null? g$args$10891$1pJll4)
                  '"invalid syntax"
                  (apply string-append g$args$10891$1pJll4)))
              (g$make-syntax-violation$5829$1pJll4
                (g$syntax->datum$7767$1pJll4 g$x$10890$1pJll4)
                '#f)
              (g$extract-position-condition$7758$1pJll4 g$x$10890$1pJll4)
              (g$extract-trace$7762$1pJll4 g$x$10890$1pJll4)))))))
   (g$extract-trace$7762$1pJll4
     g$extract-trace$11208$1pJll4
     (case-lambda
       ((g$x$10892$1pJll4)
        (letrec* ((g$11841$10893$1pJll4
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11844$1pJll4
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11843$10894$1pJll4 '#f)
                  (g$11842$10895$1pJll4
                    (make-record-constructor-descriptor
                      g$11841$10893$1pJll4
                      &condition-rcd
                      g$11843$10894$1pJll4))
                  (g$11840$10896$1pJll4 (record-predicate g$11841$10893$1pJll4))
                  (g$make-trace$10897$1pJll4
                    (record-constructor g$11842$10895$1pJll4))
                  (g$11839$10898$1pJll4
                    (record-accessor g$11841$10893$1pJll4 '0))
                  (g$trace?$10899$1pJll4
                    (condition-predicate g$11841$10893$1pJll4))
                  (g$trace-form$10900$1pJll4
                    (condition-accessor
                      g$11841$10893$1pJll4
                      g$11839$10898$1pJll4)))
          ((letrec ((g$f$10901$1pJll4
                      (case-lambda
                        ((g$x$10902$1pJll4)
                         (if (g$stx?$7347$1pJll4 g$x$10902$1pJll4)
                           (apply
                             condition
                             (g$make-trace$10897$1pJll4 g$x$10902$1pJll4)
                             (map g$f$10901$1pJll4
                                  (g$stx-ae*$7352$1pJll4 g$x$10902$1pJll4)))
                           (if (annotation? g$x$10902$1pJll4)
                             (g$make-trace$10897$1pJll4
                               (g$make-stx$7348$1pJll4
                                 g$x$10902$1pJll4
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10901$1pJll4)
           g$x$10892$1pJll4)))))
   (g$syntax-violation*$7763$1pJll4
     g$syntax-violation*$11209$1pJll4
     (case-lambda
       ((g$who$10903$1pJll4
          g$msg$10904$1pJll4
          g$form$10905$1pJll4
          g$condition-object$10906$1pJll4)
        (begin
          (if (not (string? g$msg$10904$1pJll4))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10904$1pJll4)
            (void))
          ((case-lambda
             ((g$who$10907$1pJll4)
              (raise
                (condition
                  (if g$who$10907$1pJll4
                    (g$make-who-condition$5803$1pJll4 g$who$10907$1pJll4)
                    (condition))
                  (g$make-message-condition$5757$1pJll4 g$msg$10904$1pJll4)
                  g$condition-object$10906$1pJll4
                  (g$extract-position-condition$7758$1pJll4 g$form$10905$1pJll4)
                  (g$extract-trace$7762$1pJll4 g$form$10905$1pJll4)))))
           (if ((case-lambda
                  ((g$t$10908$1pJll4)
                   (if g$t$10908$1pJll4
                     g$t$10908$1pJll4
                     (begin '#f (symbol? g$who$10903$1pJll4)))))
                (string? g$who$10903$1pJll4))
             g$who$10903$1pJll4
             (if (not g$who$10903$1pJll4)
               ((case-lambda
                  ((g$t$10909$1pJll4)
                   ((case-lambda
                      ((g$ls/false$10910$1pJll4)
                       (if (if g$ls/false$10910$1pJll4
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10911$1pJll4)
                                    (g$id?$7375$1pJll4 g$id$10911$1pJll4)))
                                 g$ls/false$10910$1pJll4))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10912$1pJll4)
                              (g$syntax->datum$7767$1pJll4 g$id$10912$1pJll4)))
                           g$ls/false$10910$1pJll4)
                         ((case-lambda
                            ((g$t$10913$1pJll4)
                             ((case-lambda
                                ((g$ls/false$10914$1pJll4)
                                 (if (if g$ls/false$10914$1pJll4
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10915$1pJll4
                                                g$rest$10916$1pJll4)
                                              (g$id?$7375$1pJll4
                                                g$id$10915$1pJll4)))
                                           g$ls/false$10914$1pJll4))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10917$1pJll4 g$rest$10918$1pJll4)
                                        (g$syntax->datum$7767$1pJll4
                                          g$id$10917$1pJll4)))
                                     g$ls/false$10914$1pJll4)
                                   ((case-lambda
                                      ((g$t$10919$1pJll4)
                                       ((case-lambda
                                          ((g$ls/false$10920$1pJll4)
                                           (if g$ls/false$10920$1pJll4
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10920$1pJll4)
                                             (g$syntax-violation$7764$1pJll4
                                               '#f
                                               '"invalid syntax"
                                               g$t$10919$1pJll4))))
                                        (g$syntax-dispatch$7653$1pJll4
                                          g$t$10919$1pJll4
                                          '_))))
                                    g$t$10913$1pJll4))))
                              (g$syntax-dispatch$7653$1pJll4
                                g$t$10913$1pJll4
                                '(any . any)))))
                          g$t$10909$1pJll4))))
                    (g$syntax-dispatch$7653$1pJll4 g$t$10909$1pJll4 'any))))
                g$form$10905$1pJll4)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10903$1pJll4))))))))
   (g$syntax-violation$7764$1pJll4
     g$syntax-violation$11210$1pJll4
     (case-lambda
       ((g$who$10921$1pJll4 g$msg$10922$1pJll4 g$form$10923$1pJll4)
        (g$syntax-violation$7764$1pJll4
          g$who$10921$1pJll4
          g$msg$10922$1pJll4
          g$form$10923$1pJll4
          '#f))
       ((g$who$10924$1pJll4
          g$msg$10925$1pJll4
          g$form$10926$1pJll4
          g$subform$10927$1pJll4)
        (g$syntax-violation*$7763$1pJll4
          g$who$10924$1pJll4
          g$msg$10925$1pJll4
          g$form$10926$1pJll4
          (g$make-syntax-violation$5829$1pJll4
            (g$syntax->datum$7767$1pJll4 g$form$10926$1pJll4)
            (g$syntax->datum$7767$1pJll4 g$subform$10927$1pJll4))))))
   (g$identifier?$7765$1pJll4
     g$identifier?$11211$1pJll4
     (case-lambda ((g$x$10928$1pJll4) (g$id?$7375$1pJll4 g$x$10928$1pJll4))))
   (g$datum->syntax$7766$1pJll4
     g$datum->syntax$11212$1pJll4
     (case-lambda
       ((g$id$10929$1pJll4 g$datum$10930$1pJll4)
        (if (g$id?$7375$1pJll4 g$id$10929$1pJll4)
          (g$datum->stx$7358$1pJll4 g$id$10929$1pJll4 g$datum$10930$1pJll4)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10929$1pJll4)))))
   (g$syntax->datum$7767$1pJll4
     g$syntax->datum$11213$1pJll4
     (case-lambda
       ((g$x$10931$1pJll4) (g$stx->datum$7386$1pJll4 g$x$10931$1pJll4))))
   (g$compile-r6rs-top-level$7768$1pJll4
     g$compile-r6rs-top-level$11214$1pJll4
     (case-lambda
       ((g$x*$10932$1pJll4)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7713$1pJll4 g$x*$10932$1pJll4)))
          (case-lambda
            ((g$lib*$10935$1pJll4 g$invoke-code$10936$1pJll4)
             ((case-lambda
                ((g$invoke-code$10937$1pJll4 g$lib*$10938$1pJll4)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$7190$1pJll4
                        g$lib*$10938$1pJll4)
                      (eval-core
                        (g$expanded->core$6889$1pJll4
                          g$invoke-code$10937$1pJll4)))))))
              g$invoke-code$10936$1pJll4
              g$lib*$10935$1pJll4)))))))
   (g$pre-compile-r6rs-top-level$7769$1pJll4
     g$pre-compile-r6rs-top-level$11215$1pJll4
     (case-lambda
       ((g$x*$10939$1pJll4)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7713$1pJll4 g$x*$10939$1pJll4)))
          (case-lambda
            ((g$lib*$10942$1pJll4 g$invoke-code$10943$1pJll4)
             ((case-lambda
                ((g$invoke-code$10944$1pJll4 g$lib*$10945$1pJll4)
                 (begin
                   (for-each g$invoke-library$7190$1pJll4 g$lib*$10945$1pJll4)
                   (compile-core
                     (g$expanded->core$6889$1pJll4
                       g$invoke-code$10944$1pJll4)))))
              g$invoke-code$10943$1pJll4
              g$lib*$10942$1pJll4)))))))
   (g$interaction-environment$7770$1pJll4
     g$interaction-environment$11216$1pJll4
     ((case-lambda
        ((g$the-env$10946$1pJll4)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10947$1pJll4)
                (if g$t$10947$1pJll4
                  g$t$10947$1pJll4
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10948$1pJll4 g$rib$10949$1pJll4)
                        (begin
                          ((case-lambda
                             ((g$subst$10950$1pJll4)
                              (begin
                                (g$set-rib-sym*!$7334$1pJll4
                                  g$rib$10949$1pJll4
                                  (map car g$subst$10950$1pJll4))
                                (g$set-rib-mark**!$7335$1pJll4
                                  g$rib$10949$1pJll4
                                  (map (case-lambda
                                         ((g$x$10951$1pJll4)
                                          g$top-mark*$7317$1pJll4))
                                       g$subst$10950$1pJll4))
                                (g$set-rib-label*!$7336$1pJll4
                                  g$rib$10949$1pJll4
                                  (map cdr g$subst$10950$1pJll4)))))
                           (g$library-subst$7147$1pJll4 g$lib$10948$1pJll4))
                          ((case-lambda
                             ((g$env$10952$1pJll4)
                              (begin
                                (set! g$the-env$10946$1pJll4 g$env$10952$1pJll4)
                                g$env$10952$1pJll4)))
                           (g$make-interaction-env$7730$1pJll4
                             g$rib$10949$1pJll4
                             '()
                             '())))))
                     (g$find-library-by-name$7183$1pJll4 '(ironscheme))
                     (g$make-empty-rib$7338$1pJll4))))))
             g$the-env$10946$1pJll4)))))
      '#f))
   (g$top-level-context$7771$1pJll4
     g$top-level-context$11217$1pJll4
     (g$make-parameter$6643$1pJll4 '#f)))
  (g$current-library-expander$7180$1pJll4 g$library-expander$7748$1pJll4))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6886$1pJll4
      (case-lambda
        ((g$x$11270$1pJll4)
         ((case-lambda
            ((g$t$11271$1pJll4)
             (if g$t$11271$1pJll4 (cdr g$t$11271$1pJll4) '#f)))
          (assq
            g$x$11270$1pJll4
            '((ellipsis-map . g$ellipsis-map$11104$1pJll4)
              (ironscheme-build . g$ironscheme-build$11263$1pJll4)
              (syntax-error . g$syntax-error$11207$1pJll4)
              (syntax-dispatch . g$syntax-dispatch$11099$1pJll4)
              (compile-system-libraries
                .
                g$compile-system-libraries$11265$1pJll4)
              (compile->closure . g$compile->closure$11267$1pJll4)
              (compile . g$compile$11266$1pJll4)
              (load . g$load$11262$1pJll4)
              (interaction-environment . g$interaction-environment$11216$1pJll4)
              (string-ci>? . g$string-ci>?$6042$1pJll4)
              (string-ci>=? . g$string-ci>=?$6044$1pJll4)
              (string-ci=? . g$string-ci=?$6040$1pJll4)
              (string-ci<? . g$string-ci<?$6041$1pJll4)
              (string-ci<=? . g$string-ci<=?$6043$1pJll4)
              (char-ci>? . g$char-ci>?$6047$1pJll4)
              (char-ci>=? . g$char-ci>=?$6049$1pJll4)
              (char-ci=? . g$char-ci=?$6045$1pJll4)
              (char-ci<? . g$char-ci<?$6046$1pJll4)
              (char-ci<=? . g$char-ci<=?$6048$1pJll4)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11037$1pJll4)
              (variable-transformer? . g$variable-transformer?$11036$1pJll4)
              (make-variable-transformer
                .
                g$make-variable-transformer$11035$1pJll4)
              (identifier? . g$identifier?$11211$1pJll4)
              (generate-temporaries . g$generate-temporaries$11200$1pJll4)
              (free-identifier=? . g$free-identifier=?$11201$1pJll4)
              (syntax->datum . g$syntax->datum$11213$1pJll4)
              (datum->syntax . g$datum->syntax$11212$1pJll4)
              (bound-identifier=? . g$bound-identifier=?$11202$1pJll4)
              (delete-file . g$delete-file$5375$1pJll4)
              (file-exists? . g$file-exists?$5374$1pJll4)
              (list-sort . g$list-sort$5900$1pJll4)
              (make-eqv-hashtable . g$make-eqv-hashtable$5297$1pJll4)
              (make-eq-hashtable . g$make-eq-hashtable$5296$1pJll4)
              (hashtable-update! . g$hashtable-update!$5303$1pJll4)
              (hashtable-size . g$hashtable-size$5298$1pJll4)
              (hashtable-set! . g$hashtable-set!$5300$1pJll4)
              (hashtable-ref . g$hashtable-ref$5299$1pJll4)
              (hashtable-delete! . g$hashtable-delete!$5301$1pJll4)
              (hashtable-contains? . g$hashtable-contains?$5302$1pJll4)
              (hashtable-clear! . g$hashtable-clear!$5304$1pJll4)
              (call-with-output-file . g$call-with-output-file$6389$1pJll4)
              (call-with-input-file . g$call-with-input-file$6388$1pJll4)
              (with-output-to-file . g$with-output-to-file$6387$1pJll4)
              (with-input-from-file . g$with-input-from-file$6386$1pJll4)
              (port? . g$port?$6353$1pJll4)
              (open-string-output-port . g$open-string-output-port$6352$1pJll4)
              (make-i/o-write-error . g$make-i/o-write-error$6278$1pJll4)
              (make-i/o-read-error . g$make-i/o-read-error$6272$1pJll4)
              (make-i/o-port-error . g$make-i/o-port-error$6324$1pJll4)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6284$1pJll4)
              (make-i/o-filename-error . g$make-i/o-filename-error$6292$1pJll4)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6300$1pJll4)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6306$1pJll4)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6318$1pJll4)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6312$1pJll4)
              (make-i/o-error . g$make-i/o-error$6266$1pJll4)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6338$1pJll4)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6332$1pJll4)
              (i/o-write-error? . g$i/o-write-error?$6279$1pJll4)
              (i/o-read-error? . g$i/o-read-error?$6273$1pJll4)
              (i/o-port-error? . g$i/o-port-error?$6326$1pJll4)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6286$1pJll4)
              (i/o-error-position . g$i/o-error-position$6287$1pJll4)
              (i/o-filename-error? . g$i/o-filename-error?$6294$1pJll4)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6301$1pJll4)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6307$1pJll4)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6319$1pJll4)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6313$1pJll4)
              (i/o-error? . g$i/o-error?$6267$1pJll4)
              (i/o-error-port . g$i/o-error-port$6327$1pJll4)
              (i/o-error-filename . g$i/o-error-filename$6295$1pJll4)
              (i/o-encoding-error? . g$i/o-encoding-error?$6340$1pJll4)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6341$1pJll4)
              (i/o-decoding-error? . g$i/o-decoding-error?$6333$1pJll4)
              (scheme-report-environment
                .
                g$scheme-report-environment$11191$1pJll4)
              (quotient . g$quotient$5867$1pJll4)
              (null-environment . g$null-environment$11190$1pJll4)
              (remainder . g$remainder$5868$1pJll4)
              (modulo . g$modulo$5869$1pJll4)
              (force . g$force$5871$1pJll4)
              (command-line . g$command-line$11259$1pJll4)
              (remove . g$remove$5508$1pJll4)
              (remv . g$remv$5509$1pJll4)
              (remp . g$remp$5494$1pJll4)
              (remq . g$remq$5510$1pJll4)
              (partition . g$partition$5493$1pJll4)
              (memp . g$memp$5500$1pJll4)
              (member . g$member$5499$1pJll4)
              (exists . g$exists$5504$1pJll4)
              (for-all . g$for-all$5503$1pJll4)
              (fold-right . g$fold-right$5507$1pJll4)
              (fold-left . g$fold-left$5506$1pJll4)
              (find . g$find$5492$1pJll4)
              (filter . g$filter$5495$1pJll4)
              (cons* . g$cons*$5505$1pJll4)
              (assv . g$assv$5496$1pJll4)
              (assp . g$assp$5498$1pJll4)
              (assoc . g$assoc$5497$1pJll4)
              (eval . g$eval$11193$1pJll4)
              (environment . g$environment$11189$1pJll4)
              (make-enumeration . g$make-enumeration$6520$1pJll4)
              (enum-set=? . g$enum-set=?$6527$1pJll4)
              (enum-set-universe . g$enum-set-universe$6521$1pJll4)
              (enum-set-union . g$enum-set-union$6528$1pJll4)
              (enum-set-subset? . g$enum-set-subset?$6526$1pJll4)
              (enum-set-projection . g$enum-set-projection$6532$1pJll4)
              (enum-set-member? . g$enum-set-member?$6525$1pJll4)
              (enum-set-intersection . g$enum-set-intersection$6529$1pJll4)
              (enum-set-indexer . g$enum-set-indexer$6522$1pJll4)
              (enum-set-difference . g$enum-set-difference$6530$1pJll4)
              (enum-set-constructor . g$enum-set-constructor$6523$1pJll4)
              (enum-set-complement . g$enum-set-complement$6531$1pJll4)
              (enum-set->list . g$enum-set->list$6524$1pJll4)
              (who-condition? . g$who-condition?$5805$1pJll4)
              (warning? . g$warning?$5766$1pJll4)
              (violation? . g$violation?$5784$1pJll4)
              (undefined-violation? . g$undefined-violation?$5840$1pJll4)
              (syntax-violation? . g$syntax-violation?$5832$1pJll4)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$5834$1pJll4)
              (syntax-violation-form . g$syntax-violation-form$5833$1pJll4)
              (syntax-violation . g$syntax-violation$11210$1pJll4)
              (serious-condition? . g$serious-condition?$5772$1pJll4)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5812$1pJll4)
              (message-condition? . g$message-condition?$5759$1pJll4)
              (make-who-condition . g$make-who-condition$5803$1pJll4)
              (make-warning . g$make-warning$5765$1pJll4)
              (make-violation . g$make-violation$5783$1pJll4)
              (make-undefined-violation
                .
                g$make-undefined-violation$5839$1pJll4)
              (make-syntax-violation . g$make-syntax-violation$5829$1pJll4)
              (make-serious-condition . g$make-serious-condition$5771$1pJll4)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5811$1pJll4)
              (make-message-condition . g$make-message-condition$5757$1pJll4)
              (make-lexical-violation . g$make-lexical-violation$5823$1pJll4)
              (make-irritants-condition
                .
                g$make-irritants-condition$5795$1pJll4)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5817$1pJll4)
              (make-error . g$make-error$5777$1pJll4)
              (make-assertion-violation
                .
                g$make-assertion-violation$5789$1pJll4)
              (lexical-violation? . g$lexical-violation?$5824$1pJll4)
              (irritants-condition? . g$irritants-condition?$5797$1pJll4)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5818$1pJll4)
              (error? . g$error?$5778$1pJll4)
              (condition-who . g$condition-who$5806$1pJll4)
              (condition-message . g$condition-message$5760$1pJll4)
              (condition-irritants . g$condition-irritants$5798$1pJll4)
              (assertion-violation? . g$assertion-violation?$5790$1pJll4)
              (native-endianness . g$native-endianness$5622$1pJll4)
              (bytevector-u64-set! . g$bytevector-u64-set!$5643$1pJll4)
              (bytevector-u64-ref . g$bytevector-u64-ref$5639$1pJll4)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5645$1pJll4)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5641$1pJll4)
              (bytevector-u32-set! . g$bytevector-u32-set!$5635$1pJll4)
              (bytevector-u32-ref . g$bytevector-u32-ref$5631$1pJll4)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5637$1pJll4)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5633$1pJll4)
              (bytevector-u16-set! . g$bytevector-u16-set!$5627$1pJll4)
              (bytevector-u16-ref . g$bytevector-u16-ref$5623$1pJll4)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5629$1pJll4)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5625$1pJll4)
              (bytevector-s64-set! . g$bytevector-s64-set!$5644$1pJll4)
              (bytevector-s64-ref . g$bytevector-s64-ref$5640$1pJll4)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5646$1pJll4)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5642$1pJll4)
              (bytevector-s32-set! . g$bytevector-s32-set!$5636$1pJll4)
              (bytevector-s32-ref . g$bytevector-s32-ref$5632$1pJll4)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5638$1pJll4)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5634$1pJll4)
              (bytevector-s16-set! . g$bytevector-s16-set!$5628$1pJll4)
              (bytevector-s16-ref . g$bytevector-s16-ref$5624$1pJll4)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5630$1pJll4)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5626$1pJll4)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5649$1pJll4)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5647$1pJll4)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5650$1pJll4)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5648$1pJll4)
              (no-nans-violation? . g$no-nans-violation?$6181$1pJll4)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$6175$1pJll4)
              (make-no-nans-violation . g$make-no-nans-violation$6180$1pJll4)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6174$1pJll4)
              (fxrotate-bit-field . g$fxrotate-bit-field$6157$1pJll4)
              (fxif . g$fxif$6151$1pJll4)
              (fxcopy-bit-field . g$fxcopy-bit-field$6154$1pJll4)
              (fxcopy-bit . g$fxcopy-bit$6152$1pJll4)
              (fxbit-field . g$fxbit-field$6153$1pJll4)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$6156$1pJll4)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6155$1pJll4)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$6103$1pJll4)
              (bitwise-if . g$bitwise-if$6097$1pJll4)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6100$1pJll4)
              (bitwise-copy-bit . g$bitwise-copy-bit$6098$1pJll4)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6102$1pJll4)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6101$1pJll4)
              (symbol=? . g$symbol=?$5054$1pJll4)
              (string>? . g$string>?$5051$1pJll4)
              (string>=? . g$string>=?$5053$1pJll4)
              (string=? . g$string=?$5049$1pJll4)
              (string<? . g$string<?$5050$1pJll4)
              (string<=? . g$string<=?$5052$1pJll4)
              (rationalize . g$rationalize$5061$1pJll4)
              (char>? . g$char>?$5058$1pJll4)
              (char>=? . g$char>=?$5060$1pJll4)
              (char=? . g$char=?$5056$1pJll4)
              (char<? . g$char<?$5057$1pJll4)
              (char<=? . g$char<=?$5059$1pJll4)
              (cddddr . g$cddddr$5048$1pJll4)
              (cdddar . g$cdddar$5047$1pJll4)
              (cddadr . g$cddadr$5046$1pJll4)
              (cddaar . g$cddaar$5045$1pJll4)
              (cdaddr . g$cdaddr$5044$1pJll4)
              (cdadar . g$cdadar$5043$1pJll4)
              (cdaadr . g$cdaadr$5042$1pJll4)
              (cdaaar . g$cdaaar$5041$1pJll4)
              (cadddr . g$cadddr$5040$1pJll4)
              (caddar . g$caddar$5039$1pJll4)
              (cadadr . g$cadadr$5038$1pJll4)
              (cadaar . g$cadaar$5037$1pJll4)
              (caaddr . g$caaddr$5036$1pJll4)
              (caadar . g$caadar$5035$1pJll4)
              (caaadr . g$caaadr$5034$1pJll4)
              (caaaar . g$caaaar$5033$1pJll4)
              (cdddr . g$cdddr$5032$1pJll4)
              (cddar . g$cddar$5031$1pJll4)
              (cdadr . g$cdadr$5030$1pJll4)
              (cdaar . g$cdaar$5029$1pJll4)
              (caddr . g$caddr$5028$1pJll4)
              (cadar . g$cadar$5027$1pJll4)
              (caadr . g$caadr$5026$1pJll4)
              (caaar . g$caaar$5025$1pJll4)
              (cddr . g$cddr$5024$1pJll4)
              (cdar . g$cdar$5023$1pJll4)
              (cadr . g$cadr$5022$1pJll4)
              (caar . g$caar$5021$1pJll4)
              (boolean=? . g$boolean=?$5055$1pJll4)
              (enum-set? . g$enum?$6501$1pJll4)
              (make-promise . g$make-promise$5870$1pJll4)
              (load/args . g$load/args$11261$1pJll4)
              (printf . g$printf$6556$1pJll4)
              (fprintf . g$fprintf$6557$1pJll4)
              (format . g$format$6558$1pJll4)
              (trace-printer . g$trace-printer$11258$1pJll4)
              (make-traced-macro . g$make-traced-macro$6562$1pJll4)
              (assertion-error . g$assertion-error$11206$1pJll4)
              (make-parameter . g$make-parameter$6643$1pJll4)
              (environment-bindings . g$environment-bindings$11186$1pJll4)
              (environment-symbols . g$environment-symbols$11185$1pJll4)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11184$1pJll4)
              (library-path . g$library-path$7172$1pJll4)))))))
    (g$install-library$7188$1pJll4
      'g$12566$1pJll4
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12503$1pJll4)
        (cosh . g$12502$1pJll4)
        (sinh . g$12501$1pJll4)
        (make-guid . g$12500$1pJll4)
        (unspecified? . g$12499$1pJll4)
        (make-trace . g$12498$1pJll4)
        (make-list . g$12497$1pJll4)
        (last-pair . g$12496$1pJll4)
        (load-r5rs . g$12495$1pJll4)
        (license . g$12494$1pJll4)
        (stacktrace . g$12493$1pJll4)
        (ironscheme-build . g$11913$1pJll4)
        (set-symbol-value! . g$12479$1pJll4)
        (symbol-value . g$12478$1pJll4)
        (ungensym . g$12477$1pJll4)
        (gensym . g$12476$1pJll4)
        (void . g$12475$1pJll4)
        (compile-system-libraries . g$11915$1pJll4)
        (compile->closure . g$11917$1pJll4)
        (compile . g$11916$1pJll4)
        (load . g$11912$1pJll4)
        (interaction-environment . g$8973$1pJll4)
        (string-upcase . g$12471$1pJll4)
        (string-titlecase . g$12470$1pJll4)
        (string-normalize-nfkd . g$12469$1pJll4)
        (string-normalize-nfkc . g$12468$1pJll4)
        (string-normalize-nfd . g$12467$1pJll4)
        (string-normalize-nfc . g$12466$1pJll4)
        (string-foldcase . g$12465$1pJll4)
        (string-downcase . g$12464$1pJll4)
        (string-ci>? . g$7040$1pJll4)
        (string-ci>=? . g$7042$1pJll4)
        (string-ci=? . g$7038$1pJll4)
        (string-ci<? . g$7039$1pJll4)
        (string-ci<=? . g$7041$1pJll4)
        (char-whitespace? . g$12463$1pJll4)
        (char-upper-case? . g$12462$1pJll4)
        (char-title-case? . g$12461$1pJll4)
        (char-numeric? . g$12460$1pJll4)
        (char-lower-case? . g$12459$1pJll4)
        (char-general-category . g$12458$1pJll4)
        (char-upcase . g$12457$1pJll4)
        (char-titlecase . g$12456$1pJll4)
        (char-foldcase . g$12455$1pJll4)
        (char-downcase . g$12454$1pJll4)
        (char-ci>? . g$7091$1pJll4)
        (char-ci>=? . g$7093$1pJll4)
        (char-ci=? . g$7089$1pJll4)
        (char-ci<? . g$7090$1pJll4)
        (char-ci<=? . g$7092$1pJll4)
        (char-alphabetic? . g$12453$1pJll4)
        (variable-transformer-procedure . g$8572$1pJll4)
        (variable-transformer? . g$8571$1pJll4)
        (make-variable-transformer . g$8570$1pJll4)
        (identifier? . g$8968$1pJll4)
        (generate-temporaries . g$8957$1pJll4)
        (free-identifier=? . g$8958$1pJll4)
        (syntax->datum . g$8970$1pJll4)
        (datum->syntax . g$8969$1pJll4)
        (bound-identifier=? . g$8959$1pJll4)
        (record-type-descriptor? . g$12452$1pJll4)
        (record-predicate . g$12451$1pJll4)
        (record-mutator . g$12450$1pJll4)
        (record-constructor . g$12449$1pJll4)
        (record-accessor . g$12448$1pJll4)
        (make-record-type-descriptor . g$12447$1pJll4)
        (make-record-constructor-descriptor . g$12446$1pJll4)
        (record? . g$12445$1pJll4)
        (record-type-uid . g$12444$1pJll4)
        (record-type-sealed? . g$12443$1pJll4)
        (record-type-parent . g$12442$1pJll4)
        (record-type-opaque? . g$12441$1pJll4)
        (record-type-name . g$12440$1pJll4)
        (record-type-generative? . g$12439$1pJll4)
        (record-type-field-names . g$12438$1pJll4)
        (record-rtd . g$12437$1pJll4)
        (record-field-mutable? . g$12436$1pJll4)
        (delete-file . g$6401$1pJll4)
        (file-exists? . g$6400$1pJll4)
        (vector-sort! . g$12435$1pJll4)
        (vector-sort . g$12434$1pJll4)
        (list-sort . g$6914$1pJll4)
        (symbol-hash . g$12433$1pJll4)
        (string-ci-hash . g$12432$1pJll4)
        (string-hash . g$12431$1pJll4)
        (equal-hash . g$12430$1pJll4)
        (hashtable-equivalence-function . g$12429$1pJll4)
        (make-hashtable . g$12428$1pJll4)
        (hashtable-hash-function . g$12427$1pJll4)
        (make-eqv-hashtable . g$6368$1pJll4)
        (make-eq-hashtable . g$6367$1pJll4)
        (hashtable? . g$12426$1pJll4)
        (hashtable-update! . g$6374$1pJll4)
        (hashtable-size . g$6369$1pJll4)
        (hashtable-set! . g$6371$1pJll4)
        (hashtable-ref . g$6370$1pJll4)
        (hashtable-mutable? . g$12425$1pJll4)
        (hashtable-keys . g$12424$1pJll4)
        (hashtable-entries . g$12423$1pJll4)
        (hashtable-delete! . g$6372$1pJll4)
        (hashtable-copy . g$12422$1pJll4)
        (hashtable-contains? . g$6373$1pJll4)
        (hashtable-clear! . g$6375$1pJll4)
        (call-with-output-file . g$7510$1pJll4)
        (call-with-input-file . g$7509$1pJll4)
        (write-char . g$12421$1pJll4)
        (write . g$12420$1pJll4)
        (with-output-to-file . g$7508$1pJll4)
        (with-input-from-file . g$7507$1pJll4)
        (read-char . g$12419$1pJll4)
        (read . g$12418$1pJll4)
        (peek-char . g$12417$1pJll4)
        (open-output-file . g$12416$1pJll4)
        (open-input-file . g$12415$1pJll4)
        (newline . g$12414$1pJll4)
        (display . g$12413$1pJll4)
        (close-output-port . g$12412$1pJll4)
        (close-input-port . g$12411$1pJll4)
        (eof-object? . g$12410$1pJll4)
        (eof-object . g$12409$1pJll4)
        (current-error-port . g$12408$1pJll4)
        (current-output-port . g$12407$1pJll4)
        (current-input-port . g$12406$1pJll4)
        (output-port? . g$12405$1pJll4)
        (input-port? . g$12404$1pJll4)
        (utf-8-codec . g$12403$1pJll4)
        (utf-16-codec . g$12402$1pJll4)
        (transcoder-error-handling-mode . g$12401$1pJll4)
        (transcoder-eol-style . g$12400$1pJll4)
        (transcoder-codec . g$12399$1pJll4)
        (transcoded-port . g$12398$1pJll4)
        (textual-port? . g$12397$1pJll4)
        (string->bytevector . g$12396$1pJll4)
        (standard-output-port . g$12395$1pJll4)
        (standard-input-port . g$12394$1pJll4)
        (standard-error-port . g$12393$1pJll4)
        (set-port-position! . g$12392$1pJll4)
        (put-u8 . g$12391$1pJll4)
        (put-string . g$12390$1pJll4)
        (put-datum . g$12389$1pJll4)
        (put-char . g$12388$1pJll4)
        (put-bytevector . g$12387$1pJll4)
        (port? . g$7486$1pJll4)
        (port-transcoder . g$12386$1pJll4)
        (port-position . g$12385$1pJll4)
        (port-has-set-port-position!? . g$12384$1pJll4)
        (port-has-port-position? . g$12383$1pJll4)
        (port-eof? . g$12382$1pJll4)
        (output-port-buffer-mode . g$12381$1pJll4)
        (open-string-output-port . g$7485$1pJll4)
        (open-string-input-port . g$12380$1pJll4)
        (open-file-output-port . g$12379$1pJll4)
        (open-file-input/output-port . g$12378$1pJll4)
        (open-file-input-port . g$12377$1pJll4)
        (open-bytevector-output-port . g$12376$1pJll4)
        (open-bytevector-input-port . g$12375$1pJll4)
        (native-transcoder . g$12374$1pJll4)
        (native-eol-style . g$12373$1pJll4)
        (make-transcoder . g$12372$1pJll4)
        (latin-1-codec . g$12371$1pJll4)
        (make-i/o-write-error . g$7342$1pJll4)
        (make-i/o-read-error . g$7328$1pJll4)
        (make-i/o-port-error . g$7447$1pJll4)
        (make-i/o-invalid-position-error . g$7357$1pJll4)
        (make-i/o-filename-error . g$7374$1pJll4)
        (make-i/o-file-protection-error . g$7390$1pJll4)
        (make-i/o-file-is-read-only-error . g$7404$1pJll4)
        (make-i/o-file-does-not-exist-error . g$7432$1pJll4)
        (make-i/o-file-already-exists-error . g$7418$1pJll4)
        (make-i/o-error . g$7314$1pJll4)
        (make-i/o-encoding-error . g$7478$1pJll4)
        (make-i/o-decoding-error . g$7463$1pJll4)
        (make-custom-textual-output-port . g$12370$1pJll4)
        (make-custom-textual-input/output-port . g$12369$1pJll4)
        (make-custom-textual-input-port . g$12368$1pJll4)
        (make-custom-binary-output-port . g$12367$1pJll4)
        (make-custom-binary-input/output-port . g$12366$1pJll4)
        (make-custom-binary-input-port . g$12365$1pJll4)
        (make-bytevector . g$12364$1pJll4)
        (lookahead-u8 . g$12363$1pJll4)
        (lookahead-char . g$12362$1pJll4)
        (i/o-write-error? . g$7343$1pJll4)
        (i/o-read-error? . g$7329$1pJll4)
        (i/o-port-error? . g$7449$1pJll4)
        (i/o-invalid-position-error? . g$7359$1pJll4)
        (i/o-error-position . g$7360$1pJll4)
        (i/o-filename-error? . g$7376$1pJll4)
        (i/o-file-protection-error? . g$7391$1pJll4)
        (i/o-file-is-read-only-error? . g$7405$1pJll4)
        (i/o-file-does-not-exist-error? . g$7433$1pJll4)
        (i/o-file-already-exists-error? . g$7419$1pJll4)
        (i/o-error? . g$7315$1pJll4)
        (i/o-error-port . g$7450$1pJll4)
        (i/o-error-filename . g$7377$1pJll4)
        (i/o-encoding-error? . g$7480$1pJll4)
        (i/o-encoding-error-char . g$7481$1pJll4)
        (i/o-decoding-error? . g$7464$1pJll4)
        (get-u8 . g$12361$1pJll4)
        (get-string-n! . g$12360$1pJll4)
        (get-string-n . g$12359$1pJll4)
        (get-string-all . g$12358$1pJll4)
        (get-line . g$12357$1pJll4)
        (get-datum . g$12356$1pJll4)
        (get-char . g$12355$1pJll4)
        (get-bytevector-some . g$12354$1pJll4)
        (get-bytevector-n! . g$12353$1pJll4)
        (get-bytevector-n . g$12352$1pJll4)
        (get-bytevector-all . g$12351$1pJll4)
        (flush-output-port . g$12350$1pJll4)
        (close-port . g$12349$1pJll4)
        (call-with-string-output-port . g$12348$1pJll4)
        (call-with-port . g$12347$1pJll4)
        (call-with-bytevector-output-port . g$12346$1pJll4)
        (bytevector->string . g$12345$1pJll4)
        (buffer-mode? . g$12344$1pJll4)
        (binary-port? . g$12343$1pJll4)
        (scheme-report-environment . g$8948$1pJll4)
        (quotient . g$6894$1pJll4)
        (null-environment . g$8947$1pJll4)
        (remainder . g$6895$1pJll4)
        (modulo . g$6896$1pJll4)
        (inexact->exact . g$12342$1pJll4)
        (force . g$6898$1pJll4)
        (exact->inexact . g$12341$1pJll4)
        (exit . g$12340$1pJll4)
        (command-line . g$11909$1pJll4)
        (string-fill! . g$12339$1pJll4)
        (string-set! . g$12338$1pJll4)
        (set-cdr! . g$12337$1pJll4)
        (set-car! . g$12336$1pJll4)
        (remove . g$6481$1pJll4)
        (remv . g$6482$1pJll4)
        (remp . g$6467$1pJll4)
        (remq . g$6483$1pJll4)
        (partition . g$6466$1pJll4)
        (memv . g$12335$1pJll4)
        (memq . g$12334$1pJll4)
        (memp . g$6473$1pJll4)
        (member . g$6472$1pJll4)
        (exists . g$6477$1pJll4)
        (for-all . g$6476$1pJll4)
        (fold-right . g$6480$1pJll4)
        (fold-left . g$6479$1pJll4)
        (find . g$6465$1pJll4)
        (filter . g$6468$1pJll4)
        (cons* . g$6478$1pJll4)
        (assv . g$6469$1pJll4)
        (assq . g$12333$1pJll4)
        (assp . g$6471$1pJll4)
        (assoc . g$6470$1pJll4)
        (with-exception-handler . g$12332$1pJll4)
        (raise-continuable . g$12331$1pJll4)
        (raise . g$12330$1pJll4)
        (eval . g$8950$1pJll4)
        (environment . g$8946$1pJll4)
        (make-enumeration . g$7568$1pJll4)
        (enum-set=? . g$7575$1pJll4)
        (enum-set-universe . g$7569$1pJll4)
        (enum-set-union . g$7576$1pJll4)
        (enum-set-subset? . g$7574$1pJll4)
        (enum-set-projection . g$7580$1pJll4)
        (enum-set-member? . g$7573$1pJll4)
        (enum-set-intersection . g$7577$1pJll4)
        (enum-set-indexer . g$7570$1pJll4)
        (enum-set-difference . g$7578$1pJll4)
        (enum-set-constructor . g$7571$1pJll4)
        (enum-set-complement . g$7579$1pJll4)
        (enum-set->list . g$7572$1pJll4)
        (who-condition? . g$6805$1pJll4)
        (warning? . g$6716$1pJll4)
        (violation? . g$6758$1pJll4)
        (undefined-violation? . g$6882$1pJll4)
        (syntax-violation? . g$6866$1pJll4)
        (syntax-violation-subform . g$6868$1pJll4)
        (syntax-violation-form . g$6867$1pJll4)
        (syntax-violation . g$8967$1pJll4)
        (simple-conditions . g$12329$1pJll4)
        (serious-condition? . g$6730$1pJll4)
        (non-continuable-violation? . g$6820$1pJll4)
        (message-condition? . g$6701$1pJll4)
        (make-who-condition . g$6803$1pJll4)
        (make-warning . g$6715$1pJll4)
        (make-violation . g$6757$1pJll4)
        (make-undefined-violation . g$6881$1pJll4)
        (make-syntax-violation . g$6863$1pJll4)
        (make-serious-condition . g$6729$1pJll4)
        (make-non-continuable-violation . g$6819$1pJll4)
        (make-message-condition . g$6699$1pJll4)
        (make-lexical-violation . g$6847$1pJll4)
        (make-irritants-condition . g$6786$1pJll4)
        (make-implementation-restriction-violation . g$6833$1pJll4)
        (make-error . g$6743$1pJll4)
        (make-assertion-violation . g$6771$1pJll4)
        (lexical-violation? . g$6848$1pJll4)
        (irritants-condition? . g$6788$1pJll4)
        (implementation-restriction-violation? . g$6834$1pJll4)
        (error? . g$6744$1pJll4)
        (condition-who . g$6806$1pJll4)
        (condition-predicate . g$12328$1pJll4)
        (condition-message . g$6702$1pJll4)
        (condition-irritants . g$6789$1pJll4)
        (condition-accessor . g$12327$1pJll4)
        (condition . g$12326$1pJll4)
        (assertion-violation? . g$6772$1pJll4)
        (condition? . g$12325$1pJll4)
        (utf32->string . g$12324$1pJll4)
        (utf16->string . g$12323$1pJll4)
        (utf8->string . g$12322$1pJll4)
        (uint-list->bytevector . g$12321$1pJll4)
        (u8-list->bytevector . g$12320$1pJll4)
        (string->utf8 . g$12319$1pJll4)
        (string->utf32 . g$12318$1pJll4)
        (string->utf16 . g$12317$1pJll4)
        (sint-list->bytevector . g$12316$1pJll4)
        (native-endianness . g$6557$1pJll4)
        (bytevector? . g$12315$1pJll4)
        (bytevector=? . g$12314$1pJll4)
        (bytevector-uint-set! . g$12313$1pJll4)
        (bytevector-uint-ref . g$12312$1pJll4)
        (bytevector-u8-set! . g$12311$1pJll4)
        (bytevector-u8-ref . g$12310$1pJll4)
        (bytevector-u64-set! . g$6578$1pJll4)
        (bytevector-u64-ref . g$6574$1pJll4)
        (bytevector-u64-native-set! . g$6580$1pJll4)
        (bytevector-u64-native-ref . g$6576$1pJll4)
        (bytevector-u32-set! . g$6570$1pJll4)
        (bytevector-u32-ref . g$6566$1pJll4)
        (bytevector-u32-native-set! . g$6572$1pJll4)
        (bytevector-u32-native-ref . g$6568$1pJll4)
        (bytevector-u16-set! . g$6562$1pJll4)
        (bytevector-u16-ref . g$6558$1pJll4)
        (bytevector-u16-native-set! . g$6564$1pJll4)
        (bytevector-u16-native-ref . g$6560$1pJll4)
        (bytevector-sint-set! . g$12309$1pJll4)
        (bytevector-sint-ref . g$12308$1pJll4)
        (bytevector-s8-set! . g$12307$1pJll4)
        (bytevector-s8-ref . g$12306$1pJll4)
        (bytevector-s64-set! . g$6579$1pJll4)
        (bytevector-s64-ref . g$6575$1pJll4)
        (bytevector-s64-native-set! . g$6581$1pJll4)
        (bytevector-s64-native-ref . g$6577$1pJll4)
        (bytevector-s32-set! . g$6571$1pJll4)
        (bytevector-s32-ref . g$6567$1pJll4)
        (bytevector-s32-native-set! . g$6573$1pJll4)
        (bytevector-s32-native-ref . g$6569$1pJll4)
        (bytevector-s16-set! . g$6563$1pJll4)
        (bytevector-s16-ref . g$6559$1pJll4)
        (bytevector-s16-native-set! . g$6565$1pJll4)
        (bytevector-s16-native-ref . g$6561$1pJll4)
        (bytevector-length . g$12305$1pJll4)
        (bytevector-ieee-single-set! . g$12304$1pJll4)
        (bytevector-ieee-single-ref . g$12303$1pJll4)
        (bytevector-ieee-single-native-set! . g$6584$1pJll4)
        (bytevector-ieee-single-native-ref . g$6582$1pJll4)
        (bytevector-ieee-double-set! . g$12302$1pJll4)
        (bytevector-ieee-double-ref . g$12301$1pJll4)
        (bytevector-ieee-double-native-set! . g$6585$1pJll4)
        (bytevector-ieee-double-native-ref . g$6583$1pJll4)
        (bytevector-fill! . g$12300$1pJll4)
        (bytevector-copy! . g$12299$1pJll4)
        (bytevector-copy . g$12298$1pJll4)
        (bytevector->uint-list . g$12297$1pJll4)
        (bytevector->u8-list . g$12296$1pJll4)
        (bytevector->sint-list . g$12295$1pJll4)
        (no-nans-violation? . g$7300$1pJll4)
        (no-infinities-violation? . g$7286$1pJll4)
        (make-no-nans-violation . g$7299$1pJll4)
        (make-no-infinities-violation . g$7285$1pJll4)
        (real->flonum . g$12294$1pJll4)
        (flzero? . g$12293$1pJll4)
        (fltruncate . g$12292$1pJll4)
        (fltan . g$12291$1pJll4)
        (flsqrt . g$12290$1pJll4)
        (flsin . g$12289$1pJll4)
        (flround . g$12288$1pJll4)
        (flpositive? . g$12287$1pJll4)
        (flonum? . g$12286$1pJll4)
        (flodd? . g$12285$1pJll4)
        (flnumerator . g$12284$1pJll4)
        (flnegative? . g$12283$1pJll4)
        (flnan? . g$12282$1pJll4)
        (flmod0 . g$12281$1pJll4)
        (flmod . g$12280$1pJll4)
        (flmin . g$12279$1pJll4)
        (flmax . g$12278$1pJll4)
        (fllog . g$12277$1pJll4)
        (flinteger? . g$12276$1pJll4)
        (flinfinite? . g$12275$1pJll4)
        (flfloor . g$12274$1pJll4)
        (flfinite? . g$12273$1pJll4)
        (flexpt . g$12272$1pJll4)
        (flexp . g$12271$1pJll4)
        (fleven? . g$12270$1pJll4)
        (fldiv0-and-mod0 . g$12269$1pJll4)
        (fldiv0 . g$12268$1pJll4)
        (fldiv-and-mod . g$12267$1pJll4)
        (fldiv . g$12266$1pJll4)
        (fldenominator . g$12265$1pJll4)
        (flcos . g$12264$1pJll4)
        (flceiling . g$12263$1pJll4)
        (flatan . g$12262$1pJll4)
        (flasin . g$12261$1pJll4)
        (flacos . g$12260$1pJll4)
        (flabs . g$12259$1pJll4)
        (fl>? . g$12258$1pJll4)
        (fl>=? . g$12257$1pJll4)
        (fl=? . g$12256$1pJll4)
        (fl<? . g$12255$1pJll4)
        (fl<=? . g$12254$1pJll4)
        (fl/ . g$12253$1pJll4)
        (fl- . g$12252$1pJll4)
        (fl+ . g$12251$1pJll4)
        (fl* . g$12250$1pJll4)
        (fixnum->flonum . g$12249$1pJll4)
        (fxzero? . g$12248$1pJll4)
        (fxxor . g$12247$1pJll4)
        (fxrotate-bit-field . g$7231$1pJll4)
        (fxreverse-bit-field . g$12246$1pJll4)
        (fxpositive? . g$12245$1pJll4)
        (fxodd? . g$12244$1pJll4)
        (fxnot . g$12243$1pJll4)
        (fxnegative? . g$12242$1pJll4)
        (fxmod0 . g$12241$1pJll4)
        (fxmod . g$12240$1pJll4)
        (fxmin . g$12239$1pJll4)
        (fxmax . g$12238$1pJll4)
        (fxlength . g$12237$1pJll4)
        (fxior . g$12236$1pJll4)
        (fxif . g$7225$1pJll4)
        (fxfirst-bit-set . g$12235$1pJll4)
        (fxeven? . g$12234$1pJll4)
        (fxdiv0-and-mod0 . g$12233$1pJll4)
        (fxdiv0 . g$12232$1pJll4)
        (fxdiv-and-mod . g$12231$1pJll4)
        (fxdiv . g$12230$1pJll4)
        (fxcopy-bit-field . g$7228$1pJll4)
        (fxcopy-bit . g$7226$1pJll4)
        (fxbit-set? . g$12229$1pJll4)
        (fxbit-field . g$7227$1pJll4)
        (fxbit-count . g$12228$1pJll4)
        (fxarithmetic-shift-right . g$7230$1pJll4)
        (fxarithmetic-shift-left . g$7229$1pJll4)
        (fxarithmetic-shift . g$12227$1pJll4)
        (fxand . g$12226$1pJll4)
        (fx>? . g$12225$1pJll4)
        (fx>=? . g$12224$1pJll4)
        (fx=? . g$12223$1pJll4)
        (fx<? . g$12222$1pJll4)
        (fx<=? . g$12221$1pJll4)
        (fx-/carry . g$12220$1pJll4)
        (fx- . g$12219$1pJll4)
        (fx+/carry . g$12218$1pJll4)
        (fx+ . g$12217$1pJll4)
        (fx*/carry . g$12216$1pJll4)
        (fx* . g$12215$1pJll4)
        (greatest-fixnum . g$12214$1pJll4)
        (least-fixnum . g$12213$1pJll4)
        (fixnum-width . g$12212$1pJll4)
        (fixnum? . g$12211$1pJll4)
        (bitwise-rotate-bit-field . g$7183$1pJll4)
        (bitwise-reverse-bit-field . g$12210$1pJll4)
        (bitwise-length . g$12209$1pJll4)
        (bitwise-if . g$7177$1pJll4)
        (bitwise-first-bit-set . g$12208$1pJll4)
        (bitwise-copy-bit-field . g$7180$1pJll4)
        (bitwise-copy-bit . g$7178$1pJll4)
        (bitwise-bit-set? . g$12207$1pJll4)
        (bitwise-bit-field . g$12206$1pJll4)
        (bitwise-bit-count . g$12205$1pJll4)
        (bitwise-xor . g$12204$1pJll4)
        (bitwise-ior . g$12203$1pJll4)
        (bitwise-and . g$12202$1pJll4)
        (bitwise-not . g$12201$1pJll4)
        (bitwise-arithmetic-shift-right . g$7182$1pJll4)
        (bitwise-arithmetic-shift-left . g$7181$1pJll4)
        (bitwise-arithmetic-shift . g$12200$1pJll4)
        (zero? . g$12199$1pJll4)
        (vector? . g$12198$1pJll4)
        (vector-set! . g$12197$1pJll4)
        (vector-ref . g$12196$1pJll4)
        (vector-map . g$12195$1pJll4)
        (vector-length . g$12194$1pJll4)
        (vector-for-each . g$12193$1pJll4)
        (vector-fill! . g$12192$1pJll4)
        (vector->list . g$12191$1pJll4)
        (vector . g$12190$1pJll4)
        (values . g$12189$1pJll4)
        (truncate . g$12188$1pJll4)
        (tan . g$12187$1pJll4)
        (symbol? . g$12186$1pJll4)
        (symbol=? . g$5866$1pJll4)
        (symbol->string . g$12185$1pJll4)
        (substring . g$12184$1pJll4)
        (string? . g$12183$1pJll4)
        (string>? . g$5863$1pJll4)
        (string>=? . g$5865$1pJll4)
        (string=? . g$5861$1pJll4)
        (string<? . g$5862$1pJll4)
        (string<=? . g$5864$1pJll4)
        (string-ref . g$12182$1pJll4)
        (string-length . g$12181$1pJll4)
        (string-for-each . g$12180$1pJll4)
        (string-copy . g$12179$1pJll4)
        (string-append . g$12178$1pJll4)
        (string->symbol . g$12177$1pJll4)
        (string->number . g$12176$1pJll4)
        (string->list . g$12175$1pJll4)
        (string . g$12174$1pJll4)
        (sqrt . g$12173$1pJll4)
        (sin . g$12172$1pJll4)
        (round . g$12171$1pJll4)
        (reverse . g$12170$1pJll4)
        (real? . g$12169$1pJll4)
        (real-valued? . g$12168$1pJll4)
        (real-part . g$12167$1pJll4)
        (rationalize . g$5919$1pJll4)
        (rational? . g$12166$1pJll4)
        (rational-valued? . g$12165$1pJll4)
        (procedure? . g$12164$1pJll4)
        (positive? . g$12163$1pJll4)
        (pair? . g$12162$1pJll4)
        (odd? . g$12161$1pJll4)
        (numerator . g$12160$1pJll4)
        (number? . g$12159$1pJll4)
        (number->string . g$12158$1pJll4)
        (null? . g$12157$1pJll4)
        (not . g$12156$1pJll4)
        (negative? . g$12155$1pJll4)
        (nan? . g$12154$1pJll4)
        (min . g$12153$1pJll4)
        (max . g$12152$1pJll4)
        (map . g$12151$1pJll4)
        (make-vector . g$12150$1pJll4)
        (make-string . g$12149$1pJll4)
        (make-rectangular . g$12148$1pJll4)
        (make-polar . g$12147$1pJll4)
        (magnitude . g$12146$1pJll4)
        (log . g$12145$1pJll4)
        (list? . g$12144$1pJll4)
        (list-tail . g$12143$1pJll4)
        (list-ref . g$12142$1pJll4)
        (list->vector . g$12141$1pJll4)
        (list->string . g$12140$1pJll4)
        (list . g$12139$1pJll4)
        (length . g$12138$1pJll4)
        (lcm . g$12137$1pJll4)
        (integer? . g$12136$1pJll4)
        (integer-valued? . g$12135$1pJll4)
        (integer->char . g$12134$1pJll4)
        (infinite? . g$12133$1pJll4)
        (inexact? . g$12132$1pJll4)
        (inexact . g$12131$1pJll4)
        (imag-part . g$12130$1pJll4)
        (gcd . g$12129$1pJll4)
        (for-each . g$12128$1pJll4)
        (floor . g$12127$1pJll4)
        (finite? . g$12126$1pJll4)
        (expt . g$12125$1pJll4)
        (exp . g$12124$1pJll4)
        (exact? . g$12123$1pJll4)
        (exact-integer-sqrt . g$12122$1pJll4)
        (exact . g$12121$1pJll4)
        (even? . g$12120$1pJll4)
        (error . g$12119$1pJll4)
        (eqv? . g$12118$1pJll4)
        (equal? . g$12117$1pJll4)
        (eq? . g$12116$1pJll4)
        (dynamic-wind . g$12115$1pJll4)
        (div0-and-mod0 . g$12114$1pJll4)
        (mod0 . g$12113$1pJll4)
        (div0 . g$12112$1pJll4)
        (div-and-mod . g$12111$1pJll4)
        (mod . g$12110$1pJll4)
        (div . g$12109$1pJll4)
        (denominator . g$12108$1pJll4)
        (cos . g$12107$1pJll4)
        (cons . g$12106$1pJll4)
        (complex? . g$12105$1pJll4)
        (char? . g$12104$1pJll4)
        (char>? . g$5916$1pJll4)
        (char>=? . g$5918$1pJll4)
        (char=? . g$5914$1pJll4)
        (char<? . g$5915$1pJll4)
        (char<=? . g$5917$1pJll4)
        (char->integer . g$12103$1pJll4)
        (ceiling . g$12102$1pJll4)
        (call-with-values . g$12101$1pJll4)
        (call/cc . g$12100$1pJll4)
        (call-with-current-continuation . g$12099$1pJll4)
        (cddddr . g$5814$1pJll4)
        (cdddar . g$5813$1pJll4)
        (cddadr . g$5812$1pJll4)
        (cddaar . g$5811$1pJll4)
        (cdaddr . g$5810$1pJll4)
        (cdadar . g$5809$1pJll4)
        (cdaadr . g$5808$1pJll4)
        (cdaaar . g$5807$1pJll4)
        (cadddr . g$5806$1pJll4)
        (caddar . g$5805$1pJll4)
        (cadadr . g$5804$1pJll4)
        (cadaar . g$5803$1pJll4)
        (caaddr . g$5802$1pJll4)
        (caadar . g$5801$1pJll4)
        (caaadr . g$5800$1pJll4)
        (caaaar . g$5799$1pJll4)
        (cdddr . g$5798$1pJll4)
        (cddar . g$5797$1pJll4)
        (cdadr . g$5796$1pJll4)
        (cdaar . g$5795$1pJll4)
        (caddr . g$5794$1pJll4)
        (cadar . g$5793$1pJll4)
        (caadr . g$5792$1pJll4)
        (caaar . g$5791$1pJll4)
        (cddr . g$5790$1pJll4)
        (cdar . g$5789$1pJll4)
        (cadr . g$5788$1pJll4)
        (caar . g$5787$1pJll4)
        (cdr . g$12098$1pJll4)
        (car . g$12097$1pJll4)
        (boolean? . g$12096$1pJll4)
        (boolean=? . g$5867$1pJll4)
        (atan . g$12095$1pJll4)
        (assertion-violation . g$12094$1pJll4)
        (asin . g$12093$1pJll4)
        (apply . g$12092$1pJll4)
        (append . g$12091$1pJll4)
        (angle . g$12090$1pJll4)
        (acos . g$12089$1pJll4)
        (abs . g$12088$1pJll4)
        (/ . g$12087$1pJll4)
        (* . g$12086$1pJll4)
        (- . g$12085$1pJll4)
        (+ . g$12084$1pJll4)
        (>= . g$12083$1pJll4)
        (> . g$12082$1pJll4)
        (= . g$12081$1pJll4)
        (<= . g$12080$1pJll4)
        (< . g$12079$1pJll4)
        (deserialize-port . g$12074$1pJll4)
        (serialize-port . g$12073$1pJll4)
        (enum-set? . g$7543$1pJll4)
        (make-promise . g$6897$1pJll4)
        (load/args . g$11911$1pJll4)
        (printf . g$7653$1pJll4)
        (fprintf . g$7654$1pJll4)
        (format . g$7655$1pJll4)
        (get-arity . g$12072$1pJll4)
        (gc-collect . g$12071$1pJll4)
        (clr-type? . g$12070$1pJll4)
        (get-clr-type . g$12069$1pJll4)
        (vector-append . g$12067$1pJll4)
        (vector-filter . g$12066$1pJll4)
        (vector-reverse! . g$12065$1pJll4)
        (vector-contains? . g$12064$1pJll4)
        (vector-index-of . g$12063$1pJll4)
        (vector-copy . g$12062$1pJll4)
        (vector-binary-search . g$12061$1pJll4)
        (get-output-string . g$12060$1pJll4)
        (open-output-string . g$12059$1pJll4)
        (open-input-string . g$12058$1pJll4)
        (string-ci-compare . g$12057$1pJll4)
        (string-compare . g$12056$1pJll4)
        (string-format . g$12055$1pJll4)
        (trace-printer . g$11908$1pJll4)
        (make-traced-procedure . g$12054$1pJll4)
        (make-traced-macro . g$7675$1pJll4)
        (pmap . g$12053$1pJll4)
        (time-it . g$12052$1pJll4)
        (make-parameter . g$7680$1pJll4)
        (library-locator . g$12051$1pJll4)
        (get-library-paths . g$12050$1pJll4)
        (environment-bindings . g$8943$1pJll4)
        (environment-symbols . g$8942$1pJll4)
        (interaction-environment-symbols . g$8941$1pJll4)
        (library-path . g$8110$1pJll4)
        (&no-nans . g$12049$1pJll4)
        (&no-infinities . g$12048$1pJll4)
        (&i/o-encoding . g$12047$1pJll4)
        (&i/o-decoding . g$12046$1pJll4)
        (&i/o-port . g$12045$1pJll4)
        (&i/o-file-does-not-exist . g$12044$1pJll4)
        (&i/o-file-already-exists . g$12043$1pJll4)
        (&i/o-file-is-read-only . g$12042$1pJll4)
        (&i/o-file-protection . g$12041$1pJll4)
        (&i/o-filename . g$12040$1pJll4)
        (&i/o-invalid-position . g$12039$1pJll4)
        (&i/o-write . g$12038$1pJll4)
        (&i/o-read . g$12037$1pJll4)
        (&i/o . g$12036$1pJll4)
        (&non-continuable . g$12035$1pJll4)
        (&undefined . g$12034$1pJll4)
        (&syntax . g$12033$1pJll4)
        (&lexical . g$12032$1pJll4)
        (&implementation-restriction . g$12031$1pJll4)
        (&who . g$12029$1pJll4)
        (&irritants . g$12028$1pJll4)
        (&assertion . g$12027$1pJll4)
        (&violation . g$12026$1pJll4)
        (&error . g$12025$1pJll4)
        (&serious . g$12024$1pJll4)
        (&warning . g$12023$1pJll4)
        (&message . g$12022$1pJll4)
        (&condition . g$12021$1pJll4)
        (define-condition-type . g$12020$1pJll4)
        (define-enumeration . g$12019$1pJll4)
        (define-record-type . g$12018$1pJll4)
        (parent-rtd . g$12017$1pJll4)
        (nongenerative . g$12016$1pJll4)
        (opaque . g$12015$1pJll4)
        (sealed . g$12014$1pJll4)
        (protocol . g$12013$1pJll4)
        (parent . g$12012$1pJll4)
        (immutable . g$12011$1pJll4)
        (mutable . g$12010$1pJll4)
        (fields . g$12009$1pJll4)
        (error-handling-mode . g$12008$1pJll4)
        (file-options . g$12007$1pJll4)
        (buffer-mode . g$12006$1pJll4)
        (eol-style . g$12005$1pJll4)
        (guard . g$12004$1pJll4)
        (trace-letrec-syntax . g$12003$1pJll4)
        (trace-let-syntax . g$12002$1pJll4)
        (trace-define-syntax . g$12001$1pJll4)
        (trace-define . g$12000$1pJll4)
        (trace-lambda . g$11999$1pJll4)
        (unsyntax-splicing . g$11998$1pJll4)
        (unsyntax . g$11997$1pJll4)
        (unquote-splicing . g$11996$1pJll4)
        (unquote . g$11995$1pJll4)
        (_ . g$11994$1pJll4)
        (else . g$11993$1pJll4)
        (=> . g$11992$1pJll4)
        (... . g$11991$1pJll4)
        (assert . g$11990$1pJll4)
        (endianness . g$11989$1pJll4)
        (delay . g$11988$1pJll4)
        (time . g$11987$1pJll4)
        (or . g$11986$1pJll4)
        (and . g$11985$1pJll4)
        (do . g$11984$1pJll4)
        (cond . g$11983$1pJll4)
        (let* . g$11982$1pJll4)
        (let . g$11981$1pJll4)
        (identifier-syntax . g$11980$1pJll4)
        (with-syntax . g$11979$1pJll4)
        (quasisyntax . g$11978$1pJll4)
        (quasiquote . g$11977$1pJll4)
        (syntax-rules . g$11976$1pJll4)
        (include-into . g$11975$1pJll4)
        (include . g$11974$1pJll4)
        (let-values . g$11972$1pJll4)
        (let*-values . g$11971$1pJll4)
        (record-constructor-descriptor . g$11970$1pJll4)
        (record-type-descriptor . g$11969$1pJll4)
        (fluid-let-syntax . g$11968$1pJll4)
        (case . g$11967$1pJll4)
        (parameterize . g$11966$1pJll4)
        (unless . g$11965$1pJll4)
        (when . g$11964$1pJll4)
        (if . g$11963$1pJll4)
        (letrec* . g$11962$1pJll4)
        (letrec . g$11961$1pJll4)
        (case-lambda . g$11959$1pJll4)
        (lambda . g$11958$1pJll4)
        (syntax . g$11957$1pJll4)
        (syntax-case . g$11956$1pJll4)
        (quote . g$11955$1pJll4)
        (letrec-syntax . g$11953$1pJll4)
        (let-syntax . g$11952$1pJll4)
        (set! . g$11951$1pJll4)
        (import . g$11950$1pJll4)
        (library . g$11949$1pJll4)
        (begin . g$11948$1pJll4)
        (module . g$11947$1pJll4)
        (define-syntax . g$11946$1pJll4)
        (define . g$11945$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12567$1pJll4
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12050$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7188$1pJll4
      'g$12568$1pJll4
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12508$1pJll4)
        (annotation-source . g$12507$1pJll4)
        (annotation-expression . g$12506$1pJll4)
        (annotation? . g$12505$1pJll4)
        (read-annotated . g$12504$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7188$1pJll4
      'g$12569$1pJll4
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12474$1pJll4)
        (serialize-library . g$12473$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7188$1pJll4
      'g$12570$1pJll4
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8572$1pJll4)
        (variable-transformer? . g$8571$1pJll4)
        (eqv-hash . g$12077$1pJll4)
        (eq-hash . g$12076$1pJll4)
        (reverse! . g$12075$1pJll4)
        (format . g$7655$1pJll4)
        (get-command-line . g$12068$1pJll4)
        (make-traced-procedure . g$12054$1pJll4)
        (assertion-error . g$8963$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7188$1pJll4
      'g$12571$1pJll4
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12078$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12572$1pJll4
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12492$1pJll4)
        (clr-field-set!-internal . g$12491$1pJll4)
        (clr-field-get-internal . g$12490$1pJll4)
        (clr-cast-internal . g$12489$1pJll4)
        (clr-call-internal . g$12488$1pJll4)
        (clr-new-internal . g$12487$1pJll4)
        (clr-new-array-internal . g$12486$1pJll4)
        (clr-is-internal . g$12485$1pJll4)
        (clr-reference-internal . g$12484$1pJll4)
        (clr-using-internal . g$12483$1pJll4)
        (clr-clear-usings-internal . g$12482$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12573$1pJll4
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11996$1pJll4)
        (unquote . g$11995$1pJll4)
        (else . g$11993$1pJll4)
        (=> . g$11992$1pJll4)
        (delay . g$11988$1pJll4)
        (or . g$11986$1pJll4)
        (and . g$11985$1pJll4)
        (do . g$11984$1pJll4)
        (cond . g$11983$1pJll4)
        (let* . g$11982$1pJll4)
        (let . g$11981$1pJll4)
        (quasiquote . g$11977$1pJll4)
        (syntax-rules . g$11976$1pJll4)
        (case . g$11967$1pJll4)
        (if . g$11963$1pJll4)
        (letrec . g$11961$1pJll4)
        (lambda . g$11958$1pJll4)
        (quote . g$11955$1pJll4)
        (letrec-syntax . g$11953$1pJll4)
        (let-syntax . g$11952$1pJll4)
        (set! . g$11951$1pJll4)
        (begin . g$11948$1pJll4)
        (define-syntax . g$11946$1pJll4)
        (define . g$11945$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7188$1pJll4
      'g$12574$1pJll4
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8973$1pJll4)
        (char-ready? . g$12472$1pJll4)
        (string-ci>? . g$7040$1pJll4)
        (string-ci>=? . g$7042$1pJll4)
        (string-ci=? . g$7038$1pJll4)
        (string-ci<? . g$7039$1pJll4)
        (string-ci<=? . g$7041$1pJll4)
        (char-whitespace? . g$12463$1pJll4)
        (char-upper-case? . g$12462$1pJll4)
        (char-numeric? . g$12460$1pJll4)
        (char-lower-case? . g$12459$1pJll4)
        (char-upcase . g$12457$1pJll4)
        (char-downcase . g$12454$1pJll4)
        (char-ci>? . g$7091$1pJll4)
        (char-ci>=? . g$7093$1pJll4)
        (char-ci=? . g$7089$1pJll4)
        (char-ci<? . g$7090$1pJll4)
        (char-ci<=? . g$7092$1pJll4)
        (char-alphabetic? . g$12453$1pJll4)
        (call-with-output-file . g$7510$1pJll4)
        (call-with-input-file . g$7509$1pJll4)
        (write-char . g$12421$1pJll4)
        (write . g$12420$1pJll4)
        (with-output-to-file . g$7508$1pJll4)
        (with-input-from-file . g$7507$1pJll4)
        (read-char . g$12419$1pJll4)
        (read . g$12418$1pJll4)
        (peek-char . g$12417$1pJll4)
        (open-output-file . g$12416$1pJll4)
        (open-input-file . g$12415$1pJll4)
        (newline . g$12414$1pJll4)
        (display . g$12413$1pJll4)
        (close-output-port . g$12412$1pJll4)
        (close-input-port . g$12411$1pJll4)
        (eof-object? . g$12410$1pJll4)
        (eof-object . g$12409$1pJll4)
        (current-error-port . g$12408$1pJll4)
        (current-output-port . g$12407$1pJll4)
        (current-input-port . g$12406$1pJll4)
        (output-port? . g$12405$1pJll4)
        (input-port? . g$12404$1pJll4)
        (scheme-report-environment . g$8948$1pJll4)
        (quotient . g$6894$1pJll4)
        (null-environment . g$8947$1pJll4)
        (remainder . g$6895$1pJll4)
        (modulo . g$6896$1pJll4)
        (inexact->exact . g$12342$1pJll4)
        (force . g$6898$1pJll4)
        (exact->inexact . g$12341$1pJll4)
        (string-fill! . g$12339$1pJll4)
        (string-set! . g$12338$1pJll4)
        (set-cdr! . g$12337$1pJll4)
        (set-car! . g$12336$1pJll4)
        (memv . g$12335$1pJll4)
        (memq . g$12334$1pJll4)
        (member . g$6472$1pJll4)
        (assv . g$6469$1pJll4)
        (assq . g$12333$1pJll4)
        (assoc . g$6470$1pJll4)
        (eval . g$8950$1pJll4)
        (zero? . g$12199$1pJll4)
        (vector? . g$12198$1pJll4)
        (vector-set! . g$12197$1pJll4)
        (vector-ref . g$12196$1pJll4)
        (vector-length . g$12194$1pJll4)
        (vector-fill! . g$12192$1pJll4)
        (vector->list . g$12191$1pJll4)
        (vector . g$12190$1pJll4)
        (values . g$12189$1pJll4)
        (truncate . g$12188$1pJll4)
        (tan . g$12187$1pJll4)
        (symbol? . g$12186$1pJll4)
        (symbol->string . g$12185$1pJll4)
        (substring . g$12184$1pJll4)
        (string? . g$12183$1pJll4)
        (string>? . g$5863$1pJll4)
        (string>=? . g$5865$1pJll4)
        (string=? . g$5861$1pJll4)
        (string<? . g$5862$1pJll4)
        (string<=? . g$5864$1pJll4)
        (string-ref . g$12182$1pJll4)
        (string-length . g$12181$1pJll4)
        (string-copy . g$12179$1pJll4)
        (string-append . g$12178$1pJll4)
        (string->symbol . g$12177$1pJll4)
        (string->number . g$12176$1pJll4)
        (string->list . g$12175$1pJll4)
        (string . g$12174$1pJll4)
        (sqrt . g$12173$1pJll4)
        (sin . g$12172$1pJll4)
        (round . g$12171$1pJll4)
        (reverse . g$12170$1pJll4)
        (real? . g$12169$1pJll4)
        (real-part . g$12167$1pJll4)
        (rationalize . g$5919$1pJll4)
        (rational? . g$12166$1pJll4)
        (procedure? . g$12164$1pJll4)
        (positive? . g$12163$1pJll4)
        (pair? . g$12162$1pJll4)
        (odd? . g$12161$1pJll4)
        (numerator . g$12160$1pJll4)
        (number? . g$12159$1pJll4)
        (number->string . g$12158$1pJll4)
        (null? . g$12157$1pJll4)
        (not . g$12156$1pJll4)
        (negative? . g$12155$1pJll4)
        (min . g$12153$1pJll4)
        (max . g$12152$1pJll4)
        (map . g$12151$1pJll4)
        (make-vector . g$12150$1pJll4)
        (make-string . g$12149$1pJll4)
        (make-rectangular . g$12148$1pJll4)
        (make-polar . g$12147$1pJll4)
        (magnitude . g$12146$1pJll4)
        (log . g$12145$1pJll4)
        (list? . g$12144$1pJll4)
        (list-tail . g$12143$1pJll4)
        (list-ref . g$12142$1pJll4)
        (list->vector . g$12141$1pJll4)
        (list->string . g$12140$1pJll4)
        (list . g$12139$1pJll4)
        (length . g$12138$1pJll4)
        (lcm . g$12137$1pJll4)
        (integer? . g$12136$1pJll4)
        (integer->char . g$12134$1pJll4)
        (inexact? . g$12132$1pJll4)
        (imag-part . g$12130$1pJll4)
        (gcd . g$12129$1pJll4)
        (for-each . g$12128$1pJll4)
        (floor . g$12127$1pJll4)
        (expt . g$12125$1pJll4)
        (exp . g$12124$1pJll4)
        (exact? . g$12123$1pJll4)
        (even? . g$12120$1pJll4)
        (eqv? . g$12118$1pJll4)
        (equal? . g$12117$1pJll4)
        (eq? . g$12116$1pJll4)
        (dynamic-wind . g$12115$1pJll4)
        (denominator . g$12108$1pJll4)
        (cos . g$12107$1pJll4)
        (cons . g$12106$1pJll4)
        (complex? . g$12105$1pJll4)
        (char? . g$12104$1pJll4)
        (char>? . g$5916$1pJll4)
        (char>=? . g$5918$1pJll4)
        (char=? . g$5914$1pJll4)
        (char<? . g$5915$1pJll4)
        (char<=? . g$5917$1pJll4)
        (char->integer . g$12103$1pJll4)
        (ceiling . g$12102$1pJll4)
        (call-with-values . g$12101$1pJll4)
        (call-with-current-continuation . g$12099$1pJll4)
        (cddddr . g$5814$1pJll4)
        (cdddar . g$5813$1pJll4)
        (cddadr . g$5812$1pJll4)
        (cddaar . g$5811$1pJll4)
        (cdaddr . g$5810$1pJll4)
        (cdadar . g$5809$1pJll4)
        (cdaadr . g$5808$1pJll4)
        (cdaaar . g$5807$1pJll4)
        (cadddr . g$5806$1pJll4)
        (caddar . g$5805$1pJll4)
        (cadadr . g$5804$1pJll4)
        (cadaar . g$5803$1pJll4)
        (caaddr . g$5802$1pJll4)
        (caadar . g$5801$1pJll4)
        (caaadr . g$5800$1pJll4)
        (caaaar . g$5799$1pJll4)
        (cdddr . g$5798$1pJll4)
        (cddar . g$5797$1pJll4)
        (cdadr . g$5796$1pJll4)
        (cdaar . g$5795$1pJll4)
        (caddr . g$5794$1pJll4)
        (cadar . g$5793$1pJll4)
        (caadr . g$5792$1pJll4)
        (caaar . g$5791$1pJll4)
        (cddr . g$5790$1pJll4)
        (cdar . g$5789$1pJll4)
        (cadr . g$5788$1pJll4)
        (caar . g$5787$1pJll4)
        (cdr . g$12098$1pJll4)
        (car . g$12097$1pJll4)
        (boolean? . g$12096$1pJll4)
        (atan . g$12095$1pJll4)
        (asin . g$12093$1pJll4)
        (apply . g$12092$1pJll4)
        (append . g$12091$1pJll4)
        (angle . g$12090$1pJll4)
        (acos . g$12089$1pJll4)
        (abs . g$12088$1pJll4)
        (/ . g$12087$1pJll4)
        (* . g$12086$1pJll4)
        (- . g$12085$1pJll4)
        (+ . g$12084$1pJll4)
        (>= . g$12083$1pJll4)
        (> . g$12082$1pJll4)
        (= . g$12081$1pJll4)
        (<= . g$12080$1pJll4)
        (< . g$12079$1pJll4)
        (unquote-splicing . g$11996$1pJll4)
        (unquote . g$11995$1pJll4)
        (else . g$11993$1pJll4)
        (=> . g$11992$1pJll4)
        (... . g$11991$1pJll4)
        (delay . g$11988$1pJll4)
        (or . g$11986$1pJll4)
        (and . g$11985$1pJll4)
        (do . g$11984$1pJll4)
        (cond . g$11983$1pJll4)
        (let* . g$11982$1pJll4)
        (let . g$11981$1pJll4)
        (quasiquote . g$11977$1pJll4)
        (syntax-rules . g$11976$1pJll4)
        (case . g$11967$1pJll4)
        (if . g$11963$1pJll4)
        (letrec . g$11961$1pJll4)
        (lambda . g$11958$1pJll4)
        (quote . g$11955$1pJll4)
        (letrec-syntax . g$11953$1pJll4)
        (let-syntax . g$11952$1pJll4)
        (set! . g$11951$1pJll4)
        (begin . g$11948$1pJll4)
        (define-syntax . g$11946$1pJll4)
        (define . g$11945$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7188$1pJll4
      'g$12575$1pJll4
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12471$1pJll4)
        (string-titlecase . g$12470$1pJll4)
        (string-normalize-nfkd . g$12469$1pJll4)
        (string-normalize-nfkc . g$12468$1pJll4)
        (string-normalize-nfd . g$12467$1pJll4)
        (string-normalize-nfc . g$12466$1pJll4)
        (string-foldcase . g$12465$1pJll4)
        (string-downcase . g$12464$1pJll4)
        (string-ci>? . g$7040$1pJll4)
        (string-ci>=? . g$7042$1pJll4)
        (string-ci=? . g$7038$1pJll4)
        (string-ci<? . g$7039$1pJll4)
        (string-ci<=? . g$7041$1pJll4)
        (char-whitespace? . g$12463$1pJll4)
        (char-upper-case? . g$12462$1pJll4)
        (char-title-case? . g$12461$1pJll4)
        (char-numeric? . g$12460$1pJll4)
        (char-lower-case? . g$12459$1pJll4)
        (char-general-category . g$12458$1pJll4)
        (char-upcase . g$12457$1pJll4)
        (char-titlecase . g$12456$1pJll4)
        (char-foldcase . g$12455$1pJll4)
        (char-downcase . g$12454$1pJll4)
        (char-ci>? . g$7091$1pJll4)
        (char-ci>=? . g$7093$1pJll4)
        (char-ci=? . g$7089$1pJll4)
        (char-ci<? . g$7090$1pJll4)
        (char-ci<=? . g$7092$1pJll4)
        (char-alphabetic? . g$12453$1pJll4)
        (make-variable-transformer . g$8570$1pJll4)
        (identifier? . g$8968$1pJll4)
        (generate-temporaries . g$8957$1pJll4)
        (free-identifier=? . g$8958$1pJll4)
        (syntax->datum . g$8970$1pJll4)
        (datum->syntax . g$8969$1pJll4)
        (bound-identifier=? . g$8959$1pJll4)
        (record-type-descriptor? . g$12452$1pJll4)
        (record-predicate . g$12451$1pJll4)
        (record-mutator . g$12450$1pJll4)
        (record-constructor . g$12449$1pJll4)
        (record-accessor . g$12448$1pJll4)
        (make-record-type-descriptor . g$12447$1pJll4)
        (make-record-constructor-descriptor . g$12446$1pJll4)
        (record? . g$12445$1pJll4)
        (record-type-uid . g$12444$1pJll4)
        (record-type-sealed? . g$12443$1pJll4)
        (record-type-parent . g$12442$1pJll4)
        (record-type-opaque? . g$12441$1pJll4)
        (record-type-name . g$12440$1pJll4)
        (record-type-generative? . g$12439$1pJll4)
        (record-type-field-names . g$12438$1pJll4)
        (record-rtd . g$12437$1pJll4)
        (record-field-mutable? . g$12436$1pJll4)
        (delete-file . g$6401$1pJll4)
        (file-exists? . g$6400$1pJll4)
        (vector-sort! . g$12435$1pJll4)
        (vector-sort . g$12434$1pJll4)
        (list-sort . g$6914$1pJll4)
        (symbol-hash . g$12433$1pJll4)
        (string-ci-hash . g$12432$1pJll4)
        (string-hash . g$12431$1pJll4)
        (equal-hash . g$12430$1pJll4)
        (hashtable-equivalence-function . g$12429$1pJll4)
        (make-hashtable . g$12428$1pJll4)
        (hashtable-hash-function . g$12427$1pJll4)
        (make-eqv-hashtable . g$6368$1pJll4)
        (make-eq-hashtable . g$6367$1pJll4)
        (hashtable? . g$12426$1pJll4)
        (hashtable-update! . g$6374$1pJll4)
        (hashtable-size . g$6369$1pJll4)
        (hashtable-set! . g$6371$1pJll4)
        (hashtable-ref . g$6370$1pJll4)
        (hashtable-mutable? . g$12425$1pJll4)
        (hashtable-keys . g$12424$1pJll4)
        (hashtable-entries . g$12423$1pJll4)
        (hashtable-delete! . g$6372$1pJll4)
        (hashtable-copy . g$12422$1pJll4)
        (hashtable-contains? . g$6373$1pJll4)
        (hashtable-clear! . g$6375$1pJll4)
        (call-with-output-file . g$7510$1pJll4)
        (call-with-input-file . g$7509$1pJll4)
        (write-char . g$12421$1pJll4)
        (write . g$12420$1pJll4)
        (with-output-to-file . g$7508$1pJll4)
        (with-input-from-file . g$7507$1pJll4)
        (read-char . g$12419$1pJll4)
        (read . g$12418$1pJll4)
        (peek-char . g$12417$1pJll4)
        (open-output-file . g$12416$1pJll4)
        (open-input-file . g$12415$1pJll4)
        (newline . g$12414$1pJll4)
        (display . g$12413$1pJll4)
        (close-output-port . g$12412$1pJll4)
        (close-input-port . g$12411$1pJll4)
        (eof-object? . g$12410$1pJll4)
        (eof-object . g$12409$1pJll4)
        (current-error-port . g$12408$1pJll4)
        (current-output-port . g$12407$1pJll4)
        (current-input-port . g$12406$1pJll4)
        (output-port? . g$12405$1pJll4)
        (input-port? . g$12404$1pJll4)
        (utf-8-codec . g$12403$1pJll4)
        (utf-16-codec . g$12402$1pJll4)
        (transcoder-error-handling-mode . g$12401$1pJll4)
        (transcoder-eol-style . g$12400$1pJll4)
        (transcoder-codec . g$12399$1pJll4)
        (transcoded-port . g$12398$1pJll4)
        (textual-port? . g$12397$1pJll4)
        (string->bytevector . g$12396$1pJll4)
        (standard-output-port . g$12395$1pJll4)
        (standard-input-port . g$12394$1pJll4)
        (standard-error-port . g$12393$1pJll4)
        (set-port-position! . g$12392$1pJll4)
        (put-u8 . g$12391$1pJll4)
        (put-string . g$12390$1pJll4)
        (put-datum . g$12389$1pJll4)
        (put-char . g$12388$1pJll4)
        (put-bytevector . g$12387$1pJll4)
        (port? . g$7486$1pJll4)
        (port-transcoder . g$12386$1pJll4)
        (port-position . g$12385$1pJll4)
        (port-has-set-port-position!? . g$12384$1pJll4)
        (port-has-port-position? . g$12383$1pJll4)
        (port-eof? . g$12382$1pJll4)
        (output-port-buffer-mode . g$12381$1pJll4)
        (open-string-output-port . g$7485$1pJll4)
        (open-string-input-port . g$12380$1pJll4)
        (open-file-output-port . g$12379$1pJll4)
        (open-file-input/output-port . g$12378$1pJll4)
        (open-file-input-port . g$12377$1pJll4)
        (open-bytevector-output-port . g$12376$1pJll4)
        (open-bytevector-input-port . g$12375$1pJll4)
        (native-transcoder . g$12374$1pJll4)
        (native-eol-style . g$12373$1pJll4)
        (make-transcoder . g$12372$1pJll4)
        (latin-1-codec . g$12371$1pJll4)
        (make-i/o-write-error . g$7342$1pJll4)
        (make-i/o-read-error . g$7328$1pJll4)
        (make-i/o-port-error . g$7447$1pJll4)
        (make-i/o-invalid-position-error . g$7357$1pJll4)
        (make-i/o-filename-error . g$7374$1pJll4)
        (make-i/o-file-protection-error . g$7390$1pJll4)
        (make-i/o-file-is-read-only-error . g$7404$1pJll4)
        (make-i/o-file-does-not-exist-error . g$7432$1pJll4)
        (make-i/o-file-already-exists-error . g$7418$1pJll4)
        (make-i/o-error . g$7314$1pJll4)
        (make-i/o-encoding-error . g$7478$1pJll4)
        (make-i/o-decoding-error . g$7463$1pJll4)
        (make-custom-textual-output-port . g$12370$1pJll4)
        (make-custom-textual-input/output-port . g$12369$1pJll4)
        (make-custom-textual-input-port . g$12368$1pJll4)
        (make-custom-binary-output-port . g$12367$1pJll4)
        (make-custom-binary-input/output-port . g$12366$1pJll4)
        (make-custom-binary-input-port . g$12365$1pJll4)
        (make-bytevector . g$12364$1pJll4)
        (lookahead-u8 . g$12363$1pJll4)
        (lookahead-char . g$12362$1pJll4)
        (i/o-write-error? . g$7343$1pJll4)
        (i/o-read-error? . g$7329$1pJll4)
        (i/o-port-error? . g$7449$1pJll4)
        (i/o-invalid-position-error? . g$7359$1pJll4)
        (i/o-error-position . g$7360$1pJll4)
        (i/o-filename-error? . g$7376$1pJll4)
        (i/o-file-protection-error? . g$7391$1pJll4)
        (i/o-file-is-read-only-error? . g$7405$1pJll4)
        (i/o-file-does-not-exist-error? . g$7433$1pJll4)
        (i/o-file-already-exists-error? . g$7419$1pJll4)
        (i/o-error? . g$7315$1pJll4)
        (i/o-error-port . g$7450$1pJll4)
        (i/o-error-filename . g$7377$1pJll4)
        (i/o-encoding-error? . g$7480$1pJll4)
        (i/o-encoding-error-char . g$7481$1pJll4)
        (i/o-decoding-error? . g$7464$1pJll4)
        (get-u8 . g$12361$1pJll4)
        (get-string-n! . g$12360$1pJll4)
        (get-string-n . g$12359$1pJll4)
        (get-string-all . g$12358$1pJll4)
        (get-line . g$12357$1pJll4)
        (get-datum . g$12356$1pJll4)
        (get-char . g$12355$1pJll4)
        (get-bytevector-some . g$12354$1pJll4)
        (get-bytevector-n! . g$12353$1pJll4)
        (get-bytevector-n . g$12352$1pJll4)
        (get-bytevector-all . g$12351$1pJll4)
        (flush-output-port . g$12350$1pJll4)
        (close-port . g$12349$1pJll4)
        (call-with-string-output-port . g$12348$1pJll4)
        (call-with-port . g$12347$1pJll4)
        (call-with-bytevector-output-port . g$12346$1pJll4)
        (bytevector->string . g$12345$1pJll4)
        (buffer-mode? . g$12344$1pJll4)
        (binary-port? . g$12343$1pJll4)
        (exit . g$12340$1pJll4)
        (command-line . g$11909$1pJll4)
        (remove . g$6481$1pJll4)
        (remv . g$6482$1pJll4)
        (remp . g$6467$1pJll4)
        (remq . g$6483$1pJll4)
        (partition . g$6466$1pJll4)
        (memv . g$12335$1pJll4)
        (memq . g$12334$1pJll4)
        (memp . g$6473$1pJll4)
        (member . g$6472$1pJll4)
        (exists . g$6477$1pJll4)
        (for-all . g$6476$1pJll4)
        (fold-right . g$6480$1pJll4)
        (fold-left . g$6479$1pJll4)
        (find . g$6465$1pJll4)
        (filter . g$6468$1pJll4)
        (cons* . g$6478$1pJll4)
        (assv . g$6469$1pJll4)
        (assq . g$12333$1pJll4)
        (assp . g$6471$1pJll4)
        (assoc . g$6470$1pJll4)
        (with-exception-handler . g$12332$1pJll4)
        (raise-continuable . g$12331$1pJll4)
        (raise . g$12330$1pJll4)
        (make-enumeration . g$7568$1pJll4)
        (enum-set=? . g$7575$1pJll4)
        (enum-set-universe . g$7569$1pJll4)
        (enum-set-union . g$7576$1pJll4)
        (enum-set-subset? . g$7574$1pJll4)
        (enum-set-projection . g$7580$1pJll4)
        (enum-set-member? . g$7573$1pJll4)
        (enum-set-intersection . g$7577$1pJll4)
        (enum-set-indexer . g$7570$1pJll4)
        (enum-set-difference . g$7578$1pJll4)
        (enum-set-constructor . g$7571$1pJll4)
        (enum-set-complement . g$7579$1pJll4)
        (enum-set->list . g$7572$1pJll4)
        (who-condition? . g$6805$1pJll4)
        (warning? . g$6716$1pJll4)
        (violation? . g$6758$1pJll4)
        (undefined-violation? . g$6882$1pJll4)
        (syntax-violation? . g$6866$1pJll4)
        (syntax-violation-subform . g$6868$1pJll4)
        (syntax-violation-form . g$6867$1pJll4)
        (syntax-violation . g$8967$1pJll4)
        (simple-conditions . g$12329$1pJll4)
        (serious-condition? . g$6730$1pJll4)
        (non-continuable-violation? . g$6820$1pJll4)
        (message-condition? . g$6701$1pJll4)
        (make-who-condition . g$6803$1pJll4)
        (make-warning . g$6715$1pJll4)
        (make-violation . g$6757$1pJll4)
        (make-undefined-violation . g$6881$1pJll4)
        (make-syntax-violation . g$6863$1pJll4)
        (make-serious-condition . g$6729$1pJll4)
        (make-non-continuable-violation . g$6819$1pJll4)
        (make-message-condition . g$6699$1pJll4)
        (make-lexical-violation . g$6847$1pJll4)
        (make-irritants-condition . g$6786$1pJll4)
        (make-implementation-restriction-violation . g$6833$1pJll4)
        (make-error . g$6743$1pJll4)
        (make-assertion-violation . g$6771$1pJll4)
        (lexical-violation? . g$6848$1pJll4)
        (irritants-condition? . g$6788$1pJll4)
        (implementation-restriction-violation? . g$6834$1pJll4)
        (error? . g$6744$1pJll4)
        (condition-who . g$6806$1pJll4)
        (condition-predicate . g$12328$1pJll4)
        (condition-message . g$6702$1pJll4)
        (condition-irritants . g$6789$1pJll4)
        (condition-accessor . g$12327$1pJll4)
        (condition . g$12326$1pJll4)
        (assertion-violation? . g$6772$1pJll4)
        (condition? . g$12325$1pJll4)
        (utf32->string . g$12324$1pJll4)
        (utf16->string . g$12323$1pJll4)
        (utf8->string . g$12322$1pJll4)
        (uint-list->bytevector . g$12321$1pJll4)
        (u8-list->bytevector . g$12320$1pJll4)
        (string->utf8 . g$12319$1pJll4)
        (string->utf32 . g$12318$1pJll4)
        (string->utf16 . g$12317$1pJll4)
        (sint-list->bytevector . g$12316$1pJll4)
        (native-endianness . g$6557$1pJll4)
        (bytevector? . g$12315$1pJll4)
        (bytevector=? . g$12314$1pJll4)
        (bytevector-uint-set! . g$12313$1pJll4)
        (bytevector-uint-ref . g$12312$1pJll4)
        (bytevector-u8-set! . g$12311$1pJll4)
        (bytevector-u8-ref . g$12310$1pJll4)
        (bytevector-u64-set! . g$6578$1pJll4)
        (bytevector-u64-ref . g$6574$1pJll4)
        (bytevector-u64-native-set! . g$6580$1pJll4)
        (bytevector-u64-native-ref . g$6576$1pJll4)
        (bytevector-u32-set! . g$6570$1pJll4)
        (bytevector-u32-ref . g$6566$1pJll4)
        (bytevector-u32-native-set! . g$6572$1pJll4)
        (bytevector-u32-native-ref . g$6568$1pJll4)
        (bytevector-u16-set! . g$6562$1pJll4)
        (bytevector-u16-ref . g$6558$1pJll4)
        (bytevector-u16-native-set! . g$6564$1pJll4)
        (bytevector-u16-native-ref . g$6560$1pJll4)
        (bytevector-sint-set! . g$12309$1pJll4)
        (bytevector-sint-ref . g$12308$1pJll4)
        (bytevector-s8-set! . g$12307$1pJll4)
        (bytevector-s8-ref . g$12306$1pJll4)
        (bytevector-s64-set! . g$6579$1pJll4)
        (bytevector-s64-ref . g$6575$1pJll4)
        (bytevector-s64-native-set! . g$6581$1pJll4)
        (bytevector-s64-native-ref . g$6577$1pJll4)
        (bytevector-s32-set! . g$6571$1pJll4)
        (bytevector-s32-ref . g$6567$1pJll4)
        (bytevector-s32-native-set! . g$6573$1pJll4)
        (bytevector-s32-native-ref . g$6569$1pJll4)
        (bytevector-s16-set! . g$6563$1pJll4)
        (bytevector-s16-ref . g$6559$1pJll4)
        (bytevector-s16-native-set! . g$6565$1pJll4)
        (bytevector-s16-native-ref . g$6561$1pJll4)
        (bytevector-length . g$12305$1pJll4)
        (bytevector-ieee-single-set! . g$12304$1pJll4)
        (bytevector-ieee-single-ref . g$12303$1pJll4)
        (bytevector-ieee-single-native-set! . g$6584$1pJll4)
        (bytevector-ieee-single-native-ref . g$6582$1pJll4)
        (bytevector-ieee-double-set! . g$12302$1pJll4)
        (bytevector-ieee-double-ref . g$12301$1pJll4)
        (bytevector-ieee-double-native-set! . g$6585$1pJll4)
        (bytevector-ieee-double-native-ref . g$6583$1pJll4)
        (bytevector-fill! . g$12300$1pJll4)
        (bytevector-copy! . g$12299$1pJll4)
        (bytevector-copy . g$12298$1pJll4)
        (bytevector->uint-list . g$12297$1pJll4)
        (bytevector->u8-list . g$12296$1pJll4)
        (bytevector->sint-list . g$12295$1pJll4)
        (no-nans-violation? . g$7300$1pJll4)
        (no-infinities-violation? . g$7286$1pJll4)
        (make-no-nans-violation . g$7299$1pJll4)
        (make-no-infinities-violation . g$7285$1pJll4)
        (real->flonum . g$12294$1pJll4)
        (flzero? . g$12293$1pJll4)
        (fltruncate . g$12292$1pJll4)
        (fltan . g$12291$1pJll4)
        (flsqrt . g$12290$1pJll4)
        (flsin . g$12289$1pJll4)
        (flround . g$12288$1pJll4)
        (flpositive? . g$12287$1pJll4)
        (flonum? . g$12286$1pJll4)
        (flodd? . g$12285$1pJll4)
        (flnumerator . g$12284$1pJll4)
        (flnegative? . g$12283$1pJll4)
        (flnan? . g$12282$1pJll4)
        (flmod0 . g$12281$1pJll4)
        (flmod . g$12280$1pJll4)
        (flmin . g$12279$1pJll4)
        (flmax . g$12278$1pJll4)
        (fllog . g$12277$1pJll4)
        (flinteger? . g$12276$1pJll4)
        (flinfinite? . g$12275$1pJll4)
        (flfloor . g$12274$1pJll4)
        (flfinite? . g$12273$1pJll4)
        (flexpt . g$12272$1pJll4)
        (flexp . g$12271$1pJll4)
        (fleven? . g$12270$1pJll4)
        (fldiv0-and-mod0 . g$12269$1pJll4)
        (fldiv0 . g$12268$1pJll4)
        (fldiv-and-mod . g$12267$1pJll4)
        (fldiv . g$12266$1pJll4)
        (fldenominator . g$12265$1pJll4)
        (flcos . g$12264$1pJll4)
        (flceiling . g$12263$1pJll4)
        (flatan . g$12262$1pJll4)
        (flasin . g$12261$1pJll4)
        (flacos . g$12260$1pJll4)
        (flabs . g$12259$1pJll4)
        (fl>? . g$12258$1pJll4)
        (fl>=? . g$12257$1pJll4)
        (fl=? . g$12256$1pJll4)
        (fl<? . g$12255$1pJll4)
        (fl<=? . g$12254$1pJll4)
        (fl/ . g$12253$1pJll4)
        (fl- . g$12252$1pJll4)
        (fl+ . g$12251$1pJll4)
        (fl* . g$12250$1pJll4)
        (fixnum->flonum . g$12249$1pJll4)
        (fxzero? . g$12248$1pJll4)
        (fxxor . g$12247$1pJll4)
        (fxrotate-bit-field . g$7231$1pJll4)
        (fxreverse-bit-field . g$12246$1pJll4)
        (fxpositive? . g$12245$1pJll4)
        (fxodd? . g$12244$1pJll4)
        (fxnot . g$12243$1pJll4)
        (fxnegative? . g$12242$1pJll4)
        (fxmod0 . g$12241$1pJll4)
        (fxmod . g$12240$1pJll4)
        (fxmin . g$12239$1pJll4)
        (fxmax . g$12238$1pJll4)
        (fxlength . g$12237$1pJll4)
        (fxior . g$12236$1pJll4)
        (fxif . g$7225$1pJll4)
        (fxfirst-bit-set . g$12235$1pJll4)
        (fxeven? . g$12234$1pJll4)
        (fxdiv0-and-mod0 . g$12233$1pJll4)
        (fxdiv0 . g$12232$1pJll4)
        (fxdiv-and-mod . g$12231$1pJll4)
        (fxdiv . g$12230$1pJll4)
        (fxcopy-bit-field . g$7228$1pJll4)
        (fxcopy-bit . g$7226$1pJll4)
        (fxbit-set? . g$12229$1pJll4)
        (fxbit-field . g$7227$1pJll4)
        (fxbit-count . g$12228$1pJll4)
        (fxarithmetic-shift-right . g$7230$1pJll4)
        (fxarithmetic-shift-left . g$7229$1pJll4)
        (fxarithmetic-shift . g$12227$1pJll4)
        (fxand . g$12226$1pJll4)
        (fx>? . g$12225$1pJll4)
        (fx>=? . g$12224$1pJll4)
        (fx=? . g$12223$1pJll4)
        (fx<? . g$12222$1pJll4)
        (fx<=? . g$12221$1pJll4)
        (fx-/carry . g$12220$1pJll4)
        (fx- . g$12219$1pJll4)
        (fx+/carry . g$12218$1pJll4)
        (fx+ . g$12217$1pJll4)
        (fx*/carry . g$12216$1pJll4)
        (fx* . g$12215$1pJll4)
        (greatest-fixnum . g$12214$1pJll4)
        (least-fixnum . g$12213$1pJll4)
        (fixnum-width . g$12212$1pJll4)
        (fixnum? . g$12211$1pJll4)
        (bitwise-rotate-bit-field . g$7183$1pJll4)
        (bitwise-reverse-bit-field . g$12210$1pJll4)
        (bitwise-length . g$12209$1pJll4)
        (bitwise-if . g$7177$1pJll4)
        (bitwise-first-bit-set . g$12208$1pJll4)
        (bitwise-copy-bit-field . g$7180$1pJll4)
        (bitwise-copy-bit . g$7178$1pJll4)
        (bitwise-bit-set? . g$12207$1pJll4)
        (bitwise-bit-field . g$12206$1pJll4)
        (bitwise-bit-count . g$12205$1pJll4)
        (bitwise-xor . g$12204$1pJll4)
        (bitwise-ior . g$12203$1pJll4)
        (bitwise-and . g$12202$1pJll4)
        (bitwise-not . g$12201$1pJll4)
        (bitwise-arithmetic-shift-right . g$7182$1pJll4)
        (bitwise-arithmetic-shift-left . g$7181$1pJll4)
        (bitwise-arithmetic-shift . g$12200$1pJll4)
        (zero? . g$12199$1pJll4)
        (vector? . g$12198$1pJll4)
        (vector-set! . g$12197$1pJll4)
        (vector-ref . g$12196$1pJll4)
        (vector-map . g$12195$1pJll4)
        (vector-length . g$12194$1pJll4)
        (vector-for-each . g$12193$1pJll4)
        (vector-fill! . g$12192$1pJll4)
        (vector->list . g$12191$1pJll4)
        (vector . g$12190$1pJll4)
        (values . g$12189$1pJll4)
        (truncate . g$12188$1pJll4)
        (tan . g$12187$1pJll4)
        (symbol? . g$12186$1pJll4)
        (symbol=? . g$5866$1pJll4)
        (symbol->string . g$12185$1pJll4)
        (substring . g$12184$1pJll4)
        (string? . g$12183$1pJll4)
        (string>? . g$5863$1pJll4)
        (string>=? . g$5865$1pJll4)
        (string=? . g$5861$1pJll4)
        (string<? . g$5862$1pJll4)
        (string<=? . g$5864$1pJll4)
        (string-ref . g$12182$1pJll4)
        (string-length . g$12181$1pJll4)
        (string-for-each . g$12180$1pJll4)
        (string-copy . g$12179$1pJll4)
        (string-append . g$12178$1pJll4)
        (string->symbol . g$12177$1pJll4)
        (string->number . g$12176$1pJll4)
        (string->list . g$12175$1pJll4)
        (string . g$12174$1pJll4)
        (sqrt . g$12173$1pJll4)
        (sin . g$12172$1pJll4)
        (round . g$12171$1pJll4)
        (reverse . g$12170$1pJll4)
        (real? . g$12169$1pJll4)
        (real-valued? . g$12168$1pJll4)
        (real-part . g$12167$1pJll4)
        (rationalize . g$5919$1pJll4)
        (rational? . g$12166$1pJll4)
        (rational-valued? . g$12165$1pJll4)
        (procedure? . g$12164$1pJll4)
        (positive? . g$12163$1pJll4)
        (pair? . g$12162$1pJll4)
        (odd? . g$12161$1pJll4)
        (numerator . g$12160$1pJll4)
        (number? . g$12159$1pJll4)
        (number->string . g$12158$1pJll4)
        (null? . g$12157$1pJll4)
        (not . g$12156$1pJll4)
        (negative? . g$12155$1pJll4)
        (nan? . g$12154$1pJll4)
        (min . g$12153$1pJll4)
        (max . g$12152$1pJll4)
        (map . g$12151$1pJll4)
        (make-vector . g$12150$1pJll4)
        (make-string . g$12149$1pJll4)
        (make-rectangular . g$12148$1pJll4)
        (make-polar . g$12147$1pJll4)
        (magnitude . g$12146$1pJll4)
        (log . g$12145$1pJll4)
        (list? . g$12144$1pJll4)
        (list-tail . g$12143$1pJll4)
        (list-ref . g$12142$1pJll4)
        (list->vector . g$12141$1pJll4)
        (list->string . g$12140$1pJll4)
        (list . g$12139$1pJll4)
        (length . g$12138$1pJll4)
        (lcm . g$12137$1pJll4)
        (integer? . g$12136$1pJll4)
        (integer-valued? . g$12135$1pJll4)
        (integer->char . g$12134$1pJll4)
        (infinite? . g$12133$1pJll4)
        (inexact? . g$12132$1pJll4)
        (inexact . g$12131$1pJll4)
        (imag-part . g$12130$1pJll4)
        (gcd . g$12129$1pJll4)
        (for-each . g$12128$1pJll4)
        (floor . g$12127$1pJll4)
        (finite? . g$12126$1pJll4)
        (expt . g$12125$1pJll4)
        (exp . g$12124$1pJll4)
        (exact? . g$12123$1pJll4)
        (exact-integer-sqrt . g$12122$1pJll4)
        (exact . g$12121$1pJll4)
        (even? . g$12120$1pJll4)
        (error . g$12119$1pJll4)
        (eqv? . g$12118$1pJll4)
        (equal? . g$12117$1pJll4)
        (eq? . g$12116$1pJll4)
        (dynamic-wind . g$12115$1pJll4)
        (div0-and-mod0 . g$12114$1pJll4)
        (mod0 . g$12113$1pJll4)
        (div0 . g$12112$1pJll4)
        (div-and-mod . g$12111$1pJll4)
        (mod . g$12110$1pJll4)
        (div . g$12109$1pJll4)
        (denominator . g$12108$1pJll4)
        (cos . g$12107$1pJll4)
        (cons . g$12106$1pJll4)
        (complex? . g$12105$1pJll4)
        (char? . g$12104$1pJll4)
        (char>? . g$5916$1pJll4)
        (char>=? . g$5918$1pJll4)
        (char=? . g$5914$1pJll4)
        (char<? . g$5915$1pJll4)
        (char<=? . g$5917$1pJll4)
        (char->integer . g$12103$1pJll4)
        (ceiling . g$12102$1pJll4)
        (call-with-values . g$12101$1pJll4)
        (call/cc . g$12100$1pJll4)
        (call-with-current-continuation . g$12099$1pJll4)
        (cddddr . g$5814$1pJll4)
        (cdddar . g$5813$1pJll4)
        (cddadr . g$5812$1pJll4)
        (cddaar . g$5811$1pJll4)
        (cdaddr . g$5810$1pJll4)
        (cdadar . g$5809$1pJll4)
        (cdaadr . g$5808$1pJll4)
        (cdaaar . g$5807$1pJll4)
        (cadddr . g$5806$1pJll4)
        (caddar . g$5805$1pJll4)
        (cadadr . g$5804$1pJll4)
        (cadaar . g$5803$1pJll4)
        (caaddr . g$5802$1pJll4)
        (caadar . g$5801$1pJll4)
        (caaadr . g$5800$1pJll4)
        (caaaar . g$5799$1pJll4)
        (cdddr . g$5798$1pJll4)
        (cddar . g$5797$1pJll4)
        (cdadr . g$5796$1pJll4)
        (cdaar . g$5795$1pJll4)
        (caddr . g$5794$1pJll4)
        (cadar . g$5793$1pJll4)
        (caadr . g$5792$1pJll4)
        (caaar . g$5791$1pJll4)
        (cddr . g$5790$1pJll4)
        (cdar . g$5789$1pJll4)
        (cadr . g$5788$1pJll4)
        (caar . g$5787$1pJll4)
        (cdr . g$12098$1pJll4)
        (car . g$12097$1pJll4)
        (boolean? . g$12096$1pJll4)
        (boolean=? . g$5867$1pJll4)
        (atan . g$12095$1pJll4)
        (assertion-violation . g$12094$1pJll4)
        (asin . g$12093$1pJll4)
        (apply . g$12092$1pJll4)
        (append . g$12091$1pJll4)
        (angle . g$12090$1pJll4)
        (acos . g$12089$1pJll4)
        (abs . g$12088$1pJll4)
        (/ . g$12087$1pJll4)
        (* . g$12086$1pJll4)
        (- . g$12085$1pJll4)
        (+ . g$12084$1pJll4)
        (>= . g$12083$1pJll4)
        (> . g$12082$1pJll4)
        (= . g$12081$1pJll4)
        (<= . g$12080$1pJll4)
        (< . g$12079$1pJll4)
        (&no-nans . g$12049$1pJll4)
        (&no-infinities . g$12048$1pJll4)
        (&i/o-encoding . g$12047$1pJll4)
        (&i/o-decoding . g$12046$1pJll4)
        (&i/o-port . g$12045$1pJll4)
        (&i/o-file-does-not-exist . g$12044$1pJll4)
        (&i/o-file-already-exists . g$12043$1pJll4)
        (&i/o-file-is-read-only . g$12042$1pJll4)
        (&i/o-file-protection . g$12041$1pJll4)
        (&i/o-filename . g$12040$1pJll4)
        (&i/o-invalid-position . g$12039$1pJll4)
        (&i/o-write . g$12038$1pJll4)
        (&i/o-read . g$12037$1pJll4)
        (&i/o . g$12036$1pJll4)
        (&non-continuable . g$12035$1pJll4)
        (&undefined . g$12034$1pJll4)
        (&syntax . g$12033$1pJll4)
        (&lexical . g$12032$1pJll4)
        (&implementation-restriction . g$12031$1pJll4)
        (&who . g$12029$1pJll4)
        (&irritants . g$12028$1pJll4)
        (&assertion . g$12027$1pJll4)
        (&violation . g$12026$1pJll4)
        (&error . g$12025$1pJll4)
        (&serious . g$12024$1pJll4)
        (&warning . g$12023$1pJll4)
        (&message . g$12022$1pJll4)
        (&condition . g$12021$1pJll4)
        (define-condition-type . g$12020$1pJll4)
        (define-enumeration . g$12019$1pJll4)
        (define-record-type . g$12018$1pJll4)
        (parent-rtd . g$12017$1pJll4)
        (nongenerative . g$12016$1pJll4)
        (opaque . g$12015$1pJll4)
        (sealed . g$12014$1pJll4)
        (protocol . g$12013$1pJll4)
        (parent . g$12012$1pJll4)
        (immutable . g$12011$1pJll4)
        (mutable . g$12010$1pJll4)
        (fields . g$12009$1pJll4)
        (error-handling-mode . g$12008$1pJll4)
        (file-options . g$12007$1pJll4)
        (buffer-mode . g$12006$1pJll4)
        (eol-style . g$12005$1pJll4)
        (guard . g$12004$1pJll4)
        (unsyntax-splicing . g$11998$1pJll4)
        (unsyntax . g$11997$1pJll4)
        (unquote-splicing . g$11996$1pJll4)
        (unquote . g$11995$1pJll4)
        (_ . g$11994$1pJll4)
        (else . g$11993$1pJll4)
        (=> . g$11992$1pJll4)
        (... . g$11991$1pJll4)
        (assert . g$11990$1pJll4)
        (endianness . g$11989$1pJll4)
        (or . g$11986$1pJll4)
        (and . g$11985$1pJll4)
        (do . g$11984$1pJll4)
        (cond . g$11983$1pJll4)
        (let* . g$11982$1pJll4)
        (let . g$11981$1pJll4)
        (identifier-syntax . g$11980$1pJll4)
        (with-syntax . g$11979$1pJll4)
        (quasisyntax . g$11978$1pJll4)
        (quasiquote . g$11977$1pJll4)
        (syntax-rules . g$11976$1pJll4)
        (let-values . g$11972$1pJll4)
        (let*-values . g$11971$1pJll4)
        (record-constructor-descriptor . g$11970$1pJll4)
        (record-type-descriptor . g$11969$1pJll4)
        (case . g$11967$1pJll4)
        (unless . g$11965$1pJll4)
        (when . g$11964$1pJll4)
        (if . g$11963$1pJll4)
        (letrec* . g$11962$1pJll4)
        (letrec . g$11961$1pJll4)
        (case-lambda . g$11959$1pJll4)
        (lambda . g$11958$1pJll4)
        (syntax . g$11957$1pJll4)
        (syntax-case . g$11956$1pJll4)
        (quote . g$11955$1pJll4)
        (letrec-syntax . g$11953$1pJll4)
        (let-syntax . g$11952$1pJll4)
        (set! . g$11951$1pJll4)
        (begin . g$11948$1pJll4)
        (define-syntax . g$11946$1pJll4)
        (define . g$11945$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12576$1pJll4
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8973$1pJll4)
        (scheme-report-environment . g$8948$1pJll4)
        (quotient . g$6894$1pJll4)
        (null-environment . g$8947$1pJll4)
        (remainder . g$6895$1pJll4)
        (modulo . g$6896$1pJll4)
        (inexact->exact . g$12342$1pJll4)
        (force . g$6898$1pJll4)
        (exact->inexact . g$12341$1pJll4)
        (delay . g$11988$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12577$1pJll4
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11984$1pJll4)
        (unless . g$11965$1pJll4)
        (when . g$11964$1pJll4)
        (case-lambda . g$11959$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12578$1pJll4
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8950$1pJll4) (environment . g$8946$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12579$1pJll4
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12337$1pJll4) (set-car! . g$12336$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12580$1pJll4
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12339$1pJll4) (string-set! . g$12338$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12581$1pJll4
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12340$1pJll4) (command-line . g$11909$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12582$1pJll4
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8570$1pJll4)
        (identifier? . g$8968$1pJll4)
        (generate-temporaries . g$8957$1pJll4)
        (free-identifier=? . g$8958$1pJll4)
        (syntax->datum . g$8970$1pJll4)
        (datum->syntax . g$8969$1pJll4)
        (bound-identifier=? . g$8959$1pJll4)
        (syntax-violation . g$8967$1pJll4)
        (unsyntax-splicing . g$11998$1pJll4)
        (unsyntax . g$11997$1pJll4)
        (_ . g$11994$1pJll4)
        (... . g$11991$1pJll4)
        (with-syntax . g$11979$1pJll4)
        (quasisyntax . g$11978$1pJll4)
        (syntax . g$11957$1pJll4)
        (syntax-case . g$11956$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12583$1pJll4
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6401$1pJll4)
        (file-exists? . g$6400$1pJll4)
        (make-i/o-write-error . g$7342$1pJll4)
        (make-i/o-read-error . g$7328$1pJll4)
        (make-i/o-port-error . g$7447$1pJll4)
        (make-i/o-invalid-position-error . g$7357$1pJll4)
        (make-i/o-filename-error . g$7374$1pJll4)
        (make-i/o-file-protection-error . g$7390$1pJll4)
        (make-i/o-file-is-read-only-error . g$7404$1pJll4)
        (make-i/o-file-does-not-exist-error . g$7432$1pJll4)
        (make-i/o-file-already-exists-error . g$7418$1pJll4)
        (make-i/o-error . g$7314$1pJll4)
        (i/o-write-error? . g$7343$1pJll4)
        (i/o-read-error? . g$7329$1pJll4)
        (i/o-port-error? . g$7449$1pJll4)
        (i/o-invalid-position-error? . g$7359$1pJll4)
        (i/o-error-position . g$7360$1pJll4)
        (i/o-filename-error? . g$7376$1pJll4)
        (i/o-file-protection-error? . g$7391$1pJll4)
        (i/o-file-is-read-only-error? . g$7405$1pJll4)
        (i/o-file-does-not-exist-error? . g$7433$1pJll4)
        (i/o-file-already-exists-error? . g$7419$1pJll4)
        (i/o-error? . g$7315$1pJll4)
        (i/o-error-port . g$7450$1pJll4)
        (i/o-error-filename . g$7377$1pJll4)
        (&i/o-port . g$12045$1pJll4)
        (&i/o-file-does-not-exist . g$12044$1pJll4)
        (&i/o-file-already-exists . g$12043$1pJll4)
        (&i/o-file-is-read-only . g$12042$1pJll4)
        (&i/o-file-protection . g$12041$1pJll4)
        (&i/o-filename . g$12040$1pJll4)
        (&i/o-invalid-position . g$12039$1pJll4)
        (&i/o-write . g$12038$1pJll4)
        (&i/o-read . g$12037$1pJll4)
        (&i/o . g$12036$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12584$1pJll4
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12435$1pJll4)
        (vector-sort . g$12434$1pJll4)
        (list-sort . g$6914$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12585$1pJll4
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12199$1pJll4)
        (vector? . g$12198$1pJll4)
        (vector-set! . g$12197$1pJll4)
        (vector-ref . g$12196$1pJll4)
        (vector-map . g$12195$1pJll4)
        (vector-length . g$12194$1pJll4)
        (vector-for-each . g$12193$1pJll4)
        (vector-fill! . g$12192$1pJll4)
        (vector->list . g$12191$1pJll4)
        (vector . g$12190$1pJll4)
        (values . g$12189$1pJll4)
        (truncate . g$12188$1pJll4)
        (tan . g$12187$1pJll4)
        (symbol? . g$12186$1pJll4)
        (symbol=? . g$5866$1pJll4)
        (symbol->string . g$12185$1pJll4)
        (substring . g$12184$1pJll4)
        (string? . g$12183$1pJll4)
        (string>? . g$5863$1pJll4)
        (string>=? . g$5865$1pJll4)
        (string=? . g$5861$1pJll4)
        (string<? . g$5862$1pJll4)
        (string<=? . g$5864$1pJll4)
        (string-ref . g$12182$1pJll4)
        (string-length . g$12181$1pJll4)
        (string-for-each . g$12180$1pJll4)
        (string-copy . g$12179$1pJll4)
        (string-append . g$12178$1pJll4)
        (string->symbol . g$12177$1pJll4)
        (string->number . g$12176$1pJll4)
        (string->list . g$12175$1pJll4)
        (string . g$12174$1pJll4)
        (sqrt . g$12173$1pJll4)
        (sin . g$12172$1pJll4)
        (round . g$12171$1pJll4)
        (reverse . g$12170$1pJll4)
        (real? . g$12169$1pJll4)
        (real-valued? . g$12168$1pJll4)
        (real-part . g$12167$1pJll4)
        (rationalize . g$5919$1pJll4)
        (rational? . g$12166$1pJll4)
        (rational-valued? . g$12165$1pJll4)
        (procedure? . g$12164$1pJll4)
        (positive? . g$12163$1pJll4)
        (pair? . g$12162$1pJll4)
        (odd? . g$12161$1pJll4)
        (numerator . g$12160$1pJll4)
        (number? . g$12159$1pJll4)
        (number->string . g$12158$1pJll4)
        (null? . g$12157$1pJll4)
        (not . g$12156$1pJll4)
        (negative? . g$12155$1pJll4)
        (nan? . g$12154$1pJll4)
        (min . g$12153$1pJll4)
        (max . g$12152$1pJll4)
        (map . g$12151$1pJll4)
        (make-vector . g$12150$1pJll4)
        (make-string . g$12149$1pJll4)
        (make-rectangular . g$12148$1pJll4)
        (make-polar . g$12147$1pJll4)
        (magnitude . g$12146$1pJll4)
        (log . g$12145$1pJll4)
        (list? . g$12144$1pJll4)
        (list-tail . g$12143$1pJll4)
        (list-ref . g$12142$1pJll4)
        (list->vector . g$12141$1pJll4)
        (list->string . g$12140$1pJll4)
        (list . g$12139$1pJll4)
        (length . g$12138$1pJll4)
        (lcm . g$12137$1pJll4)
        (integer? . g$12136$1pJll4)
        (integer-valued? . g$12135$1pJll4)
        (integer->char . g$12134$1pJll4)
        (infinite? . g$12133$1pJll4)
        (inexact? . g$12132$1pJll4)
        (inexact . g$12131$1pJll4)
        (imag-part . g$12130$1pJll4)
        (gcd . g$12129$1pJll4)
        (for-each . g$12128$1pJll4)
        (floor . g$12127$1pJll4)
        (finite? . g$12126$1pJll4)
        (expt . g$12125$1pJll4)
        (exp . g$12124$1pJll4)
        (exact? . g$12123$1pJll4)
        (exact-integer-sqrt . g$12122$1pJll4)
        (exact . g$12121$1pJll4)
        (even? . g$12120$1pJll4)
        (error . g$12119$1pJll4)
        (eqv? . g$12118$1pJll4)
        (equal? . g$12117$1pJll4)
        (eq? . g$12116$1pJll4)
        (dynamic-wind . g$12115$1pJll4)
        (div0-and-mod0 . g$12114$1pJll4)
        (mod0 . g$12113$1pJll4)
        (div0 . g$12112$1pJll4)
        (div-and-mod . g$12111$1pJll4)
        (mod . g$12110$1pJll4)
        (div . g$12109$1pJll4)
        (denominator . g$12108$1pJll4)
        (cos . g$12107$1pJll4)
        (cons . g$12106$1pJll4)
        (complex? . g$12105$1pJll4)
        (char? . g$12104$1pJll4)
        (char>? . g$5916$1pJll4)
        (char>=? . g$5918$1pJll4)
        (char=? . g$5914$1pJll4)
        (char<? . g$5915$1pJll4)
        (char<=? . g$5917$1pJll4)
        (char->integer . g$12103$1pJll4)
        (ceiling . g$12102$1pJll4)
        (call-with-values . g$12101$1pJll4)
        (call/cc . g$12100$1pJll4)
        (call-with-current-continuation . g$12099$1pJll4)
        (cddddr . g$5814$1pJll4)
        (cdddar . g$5813$1pJll4)
        (cddadr . g$5812$1pJll4)
        (cddaar . g$5811$1pJll4)
        (cdaddr . g$5810$1pJll4)
        (cdadar . g$5809$1pJll4)
        (cdaadr . g$5808$1pJll4)
        (cdaaar . g$5807$1pJll4)
        (cadddr . g$5806$1pJll4)
        (caddar . g$5805$1pJll4)
        (cadadr . g$5804$1pJll4)
        (cadaar . g$5803$1pJll4)
        (caaddr . g$5802$1pJll4)
        (caadar . g$5801$1pJll4)
        (caaadr . g$5800$1pJll4)
        (caaaar . g$5799$1pJll4)
        (cdddr . g$5798$1pJll4)
        (cddar . g$5797$1pJll4)
        (cdadr . g$5796$1pJll4)
        (cdaar . g$5795$1pJll4)
        (caddr . g$5794$1pJll4)
        (cadar . g$5793$1pJll4)
        (caadr . g$5792$1pJll4)
        (caaar . g$5791$1pJll4)
        (cddr . g$5790$1pJll4)
        (cdar . g$5789$1pJll4)
        (cadr . g$5788$1pJll4)
        (caar . g$5787$1pJll4)
        (cdr . g$12098$1pJll4)
        (car . g$12097$1pJll4)
        (boolean? . g$12096$1pJll4)
        (boolean=? . g$5867$1pJll4)
        (atan . g$12095$1pJll4)
        (assertion-violation . g$12094$1pJll4)
        (asin . g$12093$1pJll4)
        (apply . g$12092$1pJll4)
        (append . g$12091$1pJll4)
        (angle . g$12090$1pJll4)
        (acos . g$12089$1pJll4)
        (abs . g$12088$1pJll4)
        (/ . g$12087$1pJll4)
        (* . g$12086$1pJll4)
        (- . g$12085$1pJll4)
        (+ . g$12084$1pJll4)
        (>= . g$12083$1pJll4)
        (> . g$12082$1pJll4)
        (= . g$12081$1pJll4)
        (<= . g$12080$1pJll4)
        (< . g$12079$1pJll4)
        (unquote-splicing . g$11996$1pJll4)
        (unquote . g$11995$1pJll4)
        (_ . g$11994$1pJll4)
        (else . g$11993$1pJll4)
        (=> . g$11992$1pJll4)
        (... . g$11991$1pJll4)
        (assert . g$11990$1pJll4)
        (or . g$11986$1pJll4)
        (and . g$11985$1pJll4)
        (cond . g$11983$1pJll4)
        (let* . g$11982$1pJll4)
        (let . g$11981$1pJll4)
        (identifier-syntax . g$11980$1pJll4)
        (quasiquote . g$11977$1pJll4)
        (syntax-rules . g$11976$1pJll4)
        (let-values . g$11972$1pJll4)
        (let*-values . g$11971$1pJll4)
        (case . g$11967$1pJll4)
        (if . g$11963$1pJll4)
        (letrec* . g$11962$1pJll4)
        (letrec . g$11961$1pJll4)
        (lambda . g$11958$1pJll4)
        (quote . g$11955$1pJll4)
        (letrec-syntax . g$11953$1pJll4)
        (let-syntax . g$11952$1pJll4)
        (set! . g$11951$1pJll4)
        (begin . g$11948$1pJll4)
        (define-syntax . g$11946$1pJll4)
        (define . g$11945$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12586$1pJll4
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6481$1pJll4)
        (remv . g$6482$1pJll4)
        (remp . g$6467$1pJll4)
        (remq . g$6483$1pJll4)
        (partition . g$6466$1pJll4)
        (memv . g$12335$1pJll4)
        (memq . g$12334$1pJll4)
        (memp . g$6473$1pJll4)
        (member . g$6472$1pJll4)
        (exists . g$6477$1pJll4)
        (for-all . g$6476$1pJll4)
        (fold-right . g$6480$1pJll4)
        (fold-left . g$6479$1pJll4)
        (find . g$6465$1pJll4)
        (filter . g$6468$1pJll4)
        (cons* . g$6478$1pJll4)
        (assv . g$6469$1pJll4)
        (assq . g$12333$1pJll4)
        (assp . g$6471$1pJll4)
        (assoc . g$6470$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12587$1pJll4
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7510$1pJll4)
        (call-with-input-file . g$7509$1pJll4)
        (write-char . g$12421$1pJll4)
        (write . g$12420$1pJll4)
        (with-output-to-file . g$7508$1pJll4)
        (with-input-from-file . g$7507$1pJll4)
        (read-char . g$12419$1pJll4)
        (read . g$12418$1pJll4)
        (peek-char . g$12417$1pJll4)
        (open-output-file . g$12416$1pJll4)
        (open-input-file . g$12415$1pJll4)
        (newline . g$12414$1pJll4)
        (display . g$12413$1pJll4)
        (close-output-port . g$12412$1pJll4)
        (close-input-port . g$12411$1pJll4)
        (eof-object? . g$12410$1pJll4)
        (eof-object . g$12409$1pJll4)
        (current-error-port . g$12408$1pJll4)
        (current-output-port . g$12407$1pJll4)
        (current-input-port . g$12406$1pJll4)
        (output-port? . g$12405$1pJll4)
        (input-port? . g$12404$1pJll4)
        (make-i/o-write-error . g$7342$1pJll4)
        (make-i/o-read-error . g$7328$1pJll4)
        (make-i/o-port-error . g$7447$1pJll4)
        (make-i/o-invalid-position-error . g$7357$1pJll4)
        (make-i/o-filename-error . g$7374$1pJll4)
        (make-i/o-file-protection-error . g$7390$1pJll4)
        (make-i/o-file-is-read-only-error . g$7404$1pJll4)
        (make-i/o-file-does-not-exist-error . g$7432$1pJll4)
        (make-i/o-file-already-exists-error . g$7418$1pJll4)
        (make-i/o-error . g$7314$1pJll4)
        (i/o-write-error? . g$7343$1pJll4)
        (i/o-read-error? . g$7329$1pJll4)
        (i/o-port-error? . g$7449$1pJll4)
        (i/o-invalid-position-error? . g$7359$1pJll4)
        (i/o-error-position . g$7360$1pJll4)
        (i/o-filename-error? . g$7376$1pJll4)
        (i/o-file-protection-error? . g$7391$1pJll4)
        (i/o-file-is-read-only-error? . g$7405$1pJll4)
        (i/o-file-does-not-exist-error? . g$7433$1pJll4)
        (i/o-file-already-exists-error? . g$7419$1pJll4)
        (i/o-error? . g$7315$1pJll4)
        (i/o-error-port . g$7450$1pJll4)
        (i/o-error-filename . g$7377$1pJll4)
        (&i/o-port . g$12045$1pJll4)
        (&i/o-file-does-not-exist . g$12044$1pJll4)
        (&i/o-file-already-exists . g$12043$1pJll4)
        (&i/o-file-is-read-only . g$12042$1pJll4)
        (&i/o-file-protection . g$12041$1pJll4)
        (&i/o-filename . g$12040$1pJll4)
        (&i/o-invalid-position . g$12039$1pJll4)
        (&i/o-write . g$12038$1pJll4)
        (&i/o-read . g$12037$1pJll4)
        (&i/o . g$12036$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12588$1pJll4
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12364$1pJll4)
        (utf32->string . g$12324$1pJll4)
        (utf16->string . g$12323$1pJll4)
        (utf8->string . g$12322$1pJll4)
        (uint-list->bytevector . g$12321$1pJll4)
        (u8-list->bytevector . g$12320$1pJll4)
        (string->utf8 . g$12319$1pJll4)
        (string->utf32 . g$12318$1pJll4)
        (string->utf16 . g$12317$1pJll4)
        (sint-list->bytevector . g$12316$1pJll4)
        (native-endianness . g$6557$1pJll4)
        (bytevector? . g$12315$1pJll4)
        (bytevector=? . g$12314$1pJll4)
        (bytevector-uint-set! . g$12313$1pJll4)
        (bytevector-uint-ref . g$12312$1pJll4)
        (bytevector-u8-set! . g$12311$1pJll4)
        (bytevector-u8-ref . g$12310$1pJll4)
        (bytevector-u64-set! . g$6578$1pJll4)
        (bytevector-u64-ref . g$6574$1pJll4)
        (bytevector-u64-native-set! . g$6580$1pJll4)
        (bytevector-u64-native-ref . g$6576$1pJll4)
        (bytevector-u32-set! . g$6570$1pJll4)
        (bytevector-u32-ref . g$6566$1pJll4)
        (bytevector-u32-native-set! . g$6572$1pJll4)
        (bytevector-u32-native-ref . g$6568$1pJll4)
        (bytevector-u16-set! . g$6562$1pJll4)
        (bytevector-u16-ref . g$6558$1pJll4)
        (bytevector-u16-native-set! . g$6564$1pJll4)
        (bytevector-u16-native-ref . g$6560$1pJll4)
        (bytevector-sint-set! . g$12309$1pJll4)
        (bytevector-sint-ref . g$12308$1pJll4)
        (bytevector-s8-set! . g$12307$1pJll4)
        (bytevector-s8-ref . g$12306$1pJll4)
        (bytevector-s64-set! . g$6579$1pJll4)
        (bytevector-s64-ref . g$6575$1pJll4)
        (bytevector-s64-native-set! . g$6581$1pJll4)
        (bytevector-s64-native-ref . g$6577$1pJll4)
        (bytevector-s32-set! . g$6571$1pJll4)
        (bytevector-s32-ref . g$6567$1pJll4)
        (bytevector-s32-native-set! . g$6573$1pJll4)
        (bytevector-s32-native-ref . g$6569$1pJll4)
        (bytevector-s16-set! . g$6563$1pJll4)
        (bytevector-s16-ref . g$6559$1pJll4)
        (bytevector-s16-native-set! . g$6565$1pJll4)
        (bytevector-s16-native-ref . g$6561$1pJll4)
        (bytevector-length . g$12305$1pJll4)
        (bytevector-ieee-single-set! . g$12304$1pJll4)
        (bytevector-ieee-single-ref . g$12303$1pJll4)
        (bytevector-ieee-single-native-set! . g$6584$1pJll4)
        (bytevector-ieee-single-native-ref . g$6582$1pJll4)
        (bytevector-ieee-double-set! . g$12302$1pJll4)
        (bytevector-ieee-double-ref . g$12301$1pJll4)
        (bytevector-ieee-double-native-set! . g$6585$1pJll4)
        (bytevector-ieee-double-native-ref . g$6583$1pJll4)
        (bytevector-fill! . g$12300$1pJll4)
        (bytevector-copy! . g$12299$1pJll4)
        (bytevector-copy . g$12298$1pJll4)
        (bytevector->uint-list . g$12297$1pJll4)
        (bytevector->u8-list . g$12296$1pJll4)
        (bytevector->sint-list . g$12295$1pJll4)
        (endianness . g$11989$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12589$1pJll4
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12471$1pJll4)
        (string-titlecase . g$12470$1pJll4)
        (string-normalize-nfkd . g$12469$1pJll4)
        (string-normalize-nfkc . g$12468$1pJll4)
        (string-normalize-nfd . g$12467$1pJll4)
        (string-normalize-nfc . g$12466$1pJll4)
        (string-foldcase . g$12465$1pJll4)
        (string-downcase . g$12464$1pJll4)
        (string-ci>? . g$7040$1pJll4)
        (string-ci>=? . g$7042$1pJll4)
        (string-ci=? . g$7038$1pJll4)
        (string-ci<? . g$7039$1pJll4)
        (string-ci<=? . g$7041$1pJll4)
        (char-whitespace? . g$12463$1pJll4)
        (char-upper-case? . g$12462$1pJll4)
        (char-title-case? . g$12461$1pJll4)
        (char-numeric? . g$12460$1pJll4)
        (char-lower-case? . g$12459$1pJll4)
        (char-general-category . g$12458$1pJll4)
        (char-upcase . g$12457$1pJll4)
        (char-titlecase . g$12456$1pJll4)
        (char-foldcase . g$12455$1pJll4)
        (char-downcase . g$12454$1pJll4)
        (char-ci>? . g$7091$1pJll4)
        (char-ci>=? . g$7093$1pJll4)
        (char-ci=? . g$7089$1pJll4)
        (char-ci<? . g$7090$1pJll4)
        (char-ci<=? . g$7092$1pJll4)
        (char-alphabetic? . g$12453$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12590$1pJll4
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12332$1pJll4)
        (raise-continuable . g$12331$1pJll4)
        (raise . g$12330$1pJll4)
        (guard . g$12004$1pJll4)
        (else . g$11993$1pJll4)
        (=> . g$11992$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12591$1pJll4
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7183$1pJll4)
        (bitwise-reverse-bit-field . g$12210$1pJll4)
        (bitwise-length . g$12209$1pJll4)
        (bitwise-if . g$7177$1pJll4)
        (bitwise-first-bit-set . g$12208$1pJll4)
        (bitwise-copy-bit-field . g$7180$1pJll4)
        (bitwise-copy-bit . g$7178$1pJll4)
        (bitwise-bit-set? . g$12207$1pJll4)
        (bitwise-bit-field . g$12206$1pJll4)
        (bitwise-bit-count . g$12205$1pJll4)
        (bitwise-xor . g$12204$1pJll4)
        (bitwise-ior . g$12203$1pJll4)
        (bitwise-and . g$12202$1pJll4)
        (bitwise-not . g$12201$1pJll4)
        (bitwise-arithmetic-shift-right . g$7182$1pJll4)
        (bitwise-arithmetic-shift-left . g$7181$1pJll4)
        (bitwise-arithmetic-shift . g$12200$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12592$1pJll4
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12248$1pJll4)
        (fxxor . g$12247$1pJll4)
        (fxrotate-bit-field . g$7231$1pJll4)
        (fxreverse-bit-field . g$12246$1pJll4)
        (fxpositive? . g$12245$1pJll4)
        (fxodd? . g$12244$1pJll4)
        (fxnot . g$12243$1pJll4)
        (fxnegative? . g$12242$1pJll4)
        (fxmod0 . g$12241$1pJll4)
        (fxmod . g$12240$1pJll4)
        (fxmin . g$12239$1pJll4)
        (fxmax . g$12238$1pJll4)
        (fxlength . g$12237$1pJll4)
        (fxior . g$12236$1pJll4)
        (fxif . g$7225$1pJll4)
        (fxfirst-bit-set . g$12235$1pJll4)
        (fxeven? . g$12234$1pJll4)
        (fxdiv0-and-mod0 . g$12233$1pJll4)
        (fxdiv0 . g$12232$1pJll4)
        (fxdiv-and-mod . g$12231$1pJll4)
        (fxdiv . g$12230$1pJll4)
        (fxcopy-bit-field . g$7228$1pJll4)
        (fxcopy-bit . g$7226$1pJll4)
        (fxbit-set? . g$12229$1pJll4)
        (fxbit-field . g$7227$1pJll4)
        (fxbit-count . g$12228$1pJll4)
        (fxarithmetic-shift-right . g$7230$1pJll4)
        (fxarithmetic-shift-left . g$7229$1pJll4)
        (fxarithmetic-shift . g$12227$1pJll4)
        (fxand . g$12226$1pJll4)
        (fx>? . g$12225$1pJll4)
        (fx>=? . g$12224$1pJll4)
        (fx=? . g$12223$1pJll4)
        (fx<? . g$12222$1pJll4)
        (fx<=? . g$12221$1pJll4)
        (fx-/carry . g$12220$1pJll4)
        (fx- . g$12219$1pJll4)
        (fx+/carry . g$12218$1pJll4)
        (fx+ . g$12217$1pJll4)
        (fx*/carry . g$12216$1pJll4)
        (fx* . g$12215$1pJll4)
        (greatest-fixnum . g$12214$1pJll4)
        (least-fixnum . g$12213$1pJll4)
        (fixnum-width . g$12212$1pJll4)
        (fixnum? . g$12211$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12593$1pJll4
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7300$1pJll4)
        (no-infinities-violation? . g$7286$1pJll4)
        (make-no-nans-violation . g$7299$1pJll4)
        (make-no-infinities-violation . g$7285$1pJll4)
        (real->flonum . g$12294$1pJll4)
        (flzero? . g$12293$1pJll4)
        (fltruncate . g$12292$1pJll4)
        (fltan . g$12291$1pJll4)
        (flsqrt . g$12290$1pJll4)
        (flsin . g$12289$1pJll4)
        (flround . g$12288$1pJll4)
        (flpositive? . g$12287$1pJll4)
        (flonum? . g$12286$1pJll4)
        (flodd? . g$12285$1pJll4)
        (flnumerator . g$12284$1pJll4)
        (flnegative? . g$12283$1pJll4)
        (flnan? . g$12282$1pJll4)
        (flmod0 . g$12281$1pJll4)
        (flmod . g$12280$1pJll4)
        (flmin . g$12279$1pJll4)
        (flmax . g$12278$1pJll4)
        (fllog . g$12277$1pJll4)
        (flinteger? . g$12276$1pJll4)
        (flinfinite? . g$12275$1pJll4)
        (flfloor . g$12274$1pJll4)
        (flfinite? . g$12273$1pJll4)
        (flexpt . g$12272$1pJll4)
        (flexp . g$12271$1pJll4)
        (fleven? . g$12270$1pJll4)
        (fldiv0-and-mod0 . g$12269$1pJll4)
        (fldiv0 . g$12268$1pJll4)
        (fldiv-and-mod . g$12267$1pJll4)
        (fldiv . g$12266$1pJll4)
        (fldenominator . g$12265$1pJll4)
        (flcos . g$12264$1pJll4)
        (flceiling . g$12263$1pJll4)
        (flatan . g$12262$1pJll4)
        (flasin . g$12261$1pJll4)
        (flacos . g$12260$1pJll4)
        (flabs . g$12259$1pJll4)
        (fl>? . g$12258$1pJll4)
        (fl>=? . g$12257$1pJll4)
        (fl=? . g$12256$1pJll4)
        (fl<? . g$12255$1pJll4)
        (fl<=? . g$12254$1pJll4)
        (fl/ . g$12253$1pJll4)
        (fl- . g$12252$1pJll4)
        (fl+ . g$12251$1pJll4)
        (fl* . g$12250$1pJll4)
        (fixnum->flonum . g$12249$1pJll4)
        (&no-nans . g$12049$1pJll4)
        (&no-infinities . g$12048$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12594$1pJll4
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12433$1pJll4)
        (string-ci-hash . g$12432$1pJll4)
        (string-hash . g$12431$1pJll4)
        (equal-hash . g$12430$1pJll4)
        (hashtable-equivalence-function . g$12429$1pJll4)
        (make-hashtable . g$12428$1pJll4)
        (hashtable-hash-function . g$12427$1pJll4)
        (make-eqv-hashtable . g$6368$1pJll4)
        (make-eq-hashtable . g$6367$1pJll4)
        (hashtable? . g$12426$1pJll4)
        (hashtable-update! . g$6374$1pJll4)
        (hashtable-size . g$6369$1pJll4)
        (hashtable-set! . g$6371$1pJll4)
        (hashtable-ref . g$6370$1pJll4)
        (hashtable-mutable? . g$12425$1pJll4)
        (hashtable-keys . g$12424$1pJll4)
        (hashtable-entries . g$12423$1pJll4)
        (hashtable-delete! . g$6372$1pJll4)
        (hashtable-copy . g$12422$1pJll4)
        (hashtable-contains? . g$6373$1pJll4)
        (hashtable-clear! . g$6375$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12595$1pJll4
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12410$1pJll4)
        (eof-object . g$12409$1pJll4)
        (current-error-port . g$12408$1pJll4)
        (current-output-port . g$12407$1pJll4)
        (current-input-port . g$12406$1pJll4)
        (output-port? . g$12405$1pJll4)
        (input-port? . g$12404$1pJll4)
        (utf-8-codec . g$12403$1pJll4)
        (utf-16-codec . g$12402$1pJll4)
        (transcoder-error-handling-mode . g$12401$1pJll4)
        (transcoder-eol-style . g$12400$1pJll4)
        (transcoder-codec . g$12399$1pJll4)
        (transcoded-port . g$12398$1pJll4)
        (textual-port? . g$12397$1pJll4)
        (string->bytevector . g$12396$1pJll4)
        (standard-output-port . g$12395$1pJll4)
        (standard-input-port . g$12394$1pJll4)
        (standard-error-port . g$12393$1pJll4)
        (set-port-position! . g$12392$1pJll4)
        (put-u8 . g$12391$1pJll4)
        (put-string . g$12390$1pJll4)
        (put-datum . g$12389$1pJll4)
        (put-char . g$12388$1pJll4)
        (put-bytevector . g$12387$1pJll4)
        (port? . g$7486$1pJll4)
        (port-transcoder . g$12386$1pJll4)
        (port-position . g$12385$1pJll4)
        (port-has-set-port-position!? . g$12384$1pJll4)
        (port-has-port-position? . g$12383$1pJll4)
        (port-eof? . g$12382$1pJll4)
        (output-port-buffer-mode . g$12381$1pJll4)
        (open-string-output-port . g$7485$1pJll4)
        (open-string-input-port . g$12380$1pJll4)
        (open-file-output-port . g$12379$1pJll4)
        (open-file-input/output-port . g$12378$1pJll4)
        (open-file-input-port . g$12377$1pJll4)
        (open-bytevector-output-port . g$12376$1pJll4)
        (open-bytevector-input-port . g$12375$1pJll4)
        (native-transcoder . g$12374$1pJll4)
        (native-eol-style . g$12373$1pJll4)
        (make-transcoder . g$12372$1pJll4)
        (latin-1-codec . g$12371$1pJll4)
        (make-i/o-write-error . g$7342$1pJll4)
        (make-i/o-read-error . g$7328$1pJll4)
        (make-i/o-port-error . g$7447$1pJll4)
        (make-i/o-invalid-position-error . g$7357$1pJll4)
        (make-i/o-filename-error . g$7374$1pJll4)
        (make-i/o-file-protection-error . g$7390$1pJll4)
        (make-i/o-file-is-read-only-error . g$7404$1pJll4)
        (make-i/o-file-does-not-exist-error . g$7432$1pJll4)
        (make-i/o-file-already-exists-error . g$7418$1pJll4)
        (make-i/o-error . g$7314$1pJll4)
        (make-i/o-encoding-error . g$7478$1pJll4)
        (make-i/o-decoding-error . g$7463$1pJll4)
        (make-custom-textual-output-port . g$12370$1pJll4)
        (make-custom-textual-input/output-port . g$12369$1pJll4)
        (make-custom-textual-input-port . g$12368$1pJll4)
        (make-custom-binary-output-port . g$12367$1pJll4)
        (make-custom-binary-input/output-port . g$12366$1pJll4)
        (make-custom-binary-input-port . g$12365$1pJll4)
        (lookahead-u8 . g$12363$1pJll4)
        (lookahead-char . g$12362$1pJll4)
        (i/o-write-error? . g$7343$1pJll4)
        (i/o-read-error? . g$7329$1pJll4)
        (i/o-port-error? . g$7449$1pJll4)
        (i/o-invalid-position-error? . g$7359$1pJll4)
        (i/o-error-position . g$7360$1pJll4)
        (i/o-filename-error? . g$7376$1pJll4)
        (i/o-file-protection-error? . g$7391$1pJll4)
        (i/o-file-is-read-only-error? . g$7405$1pJll4)
        (i/o-file-does-not-exist-error? . g$7433$1pJll4)
        (i/o-file-already-exists-error? . g$7419$1pJll4)
        (i/o-error? . g$7315$1pJll4)
        (i/o-error-port . g$7450$1pJll4)
        (i/o-error-filename . g$7377$1pJll4)
        (i/o-encoding-error? . g$7480$1pJll4)
        (i/o-encoding-error-char . g$7481$1pJll4)
        (i/o-decoding-error? . g$7464$1pJll4)
        (get-u8 . g$12361$1pJll4)
        (get-string-n! . g$12360$1pJll4)
        (get-string-n . g$12359$1pJll4)
        (get-string-all . g$12358$1pJll4)
        (get-line . g$12357$1pJll4)
        (get-datum . g$12356$1pJll4)
        (get-char . g$12355$1pJll4)
        (get-bytevector-some . g$12354$1pJll4)
        (get-bytevector-n! . g$12353$1pJll4)
        (get-bytevector-n . g$12352$1pJll4)
        (get-bytevector-all . g$12351$1pJll4)
        (flush-output-port . g$12350$1pJll4)
        (close-port . g$12349$1pJll4)
        (call-with-string-output-port . g$12348$1pJll4)
        (call-with-port . g$12347$1pJll4)
        (call-with-bytevector-output-port . g$12346$1pJll4)
        (bytevector->string . g$12345$1pJll4)
        (buffer-mode? . g$12344$1pJll4)
        (binary-port? . g$12343$1pJll4)
        (&i/o-encoding . g$12047$1pJll4)
        (&i/o-decoding . g$12046$1pJll4)
        (&i/o-port . g$12045$1pJll4)
        (&i/o-file-does-not-exist . g$12044$1pJll4)
        (&i/o-file-already-exists . g$12043$1pJll4)
        (&i/o-file-is-read-only . g$12042$1pJll4)
        (&i/o-file-protection . g$12041$1pJll4)
        (&i/o-filename . g$12040$1pJll4)
        (&i/o-invalid-position . g$12039$1pJll4)
        (&i/o-write . g$12038$1pJll4)
        (&i/o-read . g$12037$1pJll4)
        (&i/o . g$12036$1pJll4)
        (error-handling-mode . g$12008$1pJll4)
        (file-options . g$12007$1pJll4)
        (buffer-mode . g$12006$1pJll4)
        (eol-style . g$12005$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12596$1pJll4
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7568$1pJll4)
        (enum-set=? . g$7575$1pJll4)
        (enum-set-universe . g$7569$1pJll4)
        (enum-set-union . g$7576$1pJll4)
        (enum-set-subset? . g$7574$1pJll4)
        (enum-set-projection . g$7580$1pJll4)
        (enum-set-member? . g$7573$1pJll4)
        (enum-set-intersection . g$7577$1pJll4)
        (enum-set-indexer . g$7570$1pJll4)
        (enum-set-difference . g$7578$1pJll4)
        (enum-set-constructor . g$7571$1pJll4)
        (enum-set-complement . g$7579$1pJll4)
        (enum-set->list . g$7572$1pJll4)
        (define-enumeration . g$12019$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12597$1pJll4
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6805$1pJll4)
        (warning? . g$6716$1pJll4)
        (violation? . g$6758$1pJll4)
        (undefined-violation? . g$6882$1pJll4)
        (syntax-violation? . g$6866$1pJll4)
        (syntax-violation-subform . g$6868$1pJll4)
        (syntax-violation-form . g$6867$1pJll4)
        (syntax-violation . g$8967$1pJll4)
        (simple-conditions . g$12329$1pJll4)
        (serious-condition? . g$6730$1pJll4)
        (non-continuable-violation? . g$6820$1pJll4)
        (message-condition? . g$6701$1pJll4)
        (make-who-condition . g$6803$1pJll4)
        (make-warning . g$6715$1pJll4)
        (make-violation . g$6757$1pJll4)
        (make-undefined-violation . g$6881$1pJll4)
        (make-syntax-violation . g$6863$1pJll4)
        (make-serious-condition . g$6729$1pJll4)
        (make-non-continuable-violation . g$6819$1pJll4)
        (make-message-condition . g$6699$1pJll4)
        (make-lexical-violation . g$6847$1pJll4)
        (make-irritants-condition . g$6786$1pJll4)
        (make-implementation-restriction-violation . g$6833$1pJll4)
        (make-error . g$6743$1pJll4)
        (make-assertion-violation . g$6771$1pJll4)
        (lexical-violation? . g$6848$1pJll4)
        (irritants-condition? . g$6788$1pJll4)
        (implementation-restriction-violation? . g$6834$1pJll4)
        (error? . g$6744$1pJll4)
        (condition-who . g$6806$1pJll4)
        (condition-predicate . g$12328$1pJll4)
        (condition-message . g$6702$1pJll4)
        (condition-irritants . g$6789$1pJll4)
        (condition-accessor . g$12327$1pJll4)
        (condition . g$12326$1pJll4)
        (assertion-violation? . g$6772$1pJll4)
        (condition? . g$12325$1pJll4)
        (&non-continuable . g$12035$1pJll4)
        (&undefined . g$12034$1pJll4)
        (&syntax . g$12033$1pJll4)
        (&lexical . g$12032$1pJll4)
        (&implementation-restriction . g$12031$1pJll4)
        (&who . g$12029$1pJll4)
        (&irritants . g$12028$1pJll4)
        (&assertion . g$12027$1pJll4)
        (&violation . g$12026$1pJll4)
        (&error . g$12025$1pJll4)
        (&serious . g$12024$1pJll4)
        (&warning . g$12023$1pJll4)
        (&message . g$12022$1pJll4)
        (&condition . g$12021$1pJll4)
        (define-condition-type . g$12020$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12598$1pJll4
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12445$1pJll4)
        (record-type-uid . g$12444$1pJll4)
        (record-type-sealed? . g$12443$1pJll4)
        (record-type-parent . g$12442$1pJll4)
        (record-type-opaque? . g$12441$1pJll4)
        (record-type-name . g$12440$1pJll4)
        (record-type-generative? . g$12439$1pJll4)
        (record-type-field-names . g$12438$1pJll4)
        (record-rtd . g$12437$1pJll4)
        (record-field-mutable? . g$12436$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12599$1pJll4
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12452$1pJll4)
        (record-predicate . g$12451$1pJll4)
        (record-mutator . g$12450$1pJll4)
        (record-constructor . g$12449$1pJll4)
        (record-accessor . g$12448$1pJll4)
        (make-record-type-descriptor . g$12447$1pJll4)
        (make-record-constructor-descriptor . g$12446$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12600$1pJll4
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12018$1pJll4)
        (parent-rtd . g$12017$1pJll4)
        (nongenerative . g$12016$1pJll4)
        (opaque . g$12015$1pJll4)
        (sealed . g$12014$1pJll4)
        (protocol . g$12013$1pJll4)
        (parent . g$12012$1pJll4)
        (immutable . g$12011$1pJll4)
        (mutable . g$12010$1pJll4)
        (fields . g$12009$1pJll4)
        (record-constructor-descriptor . g$11970$1pJll4)
        (record-type-descriptor . g$11969$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7188$1pJll4
      'g$12601$1pJll4
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8840$1pJll4)
        (&no-nans-rcd . g$12565$1pJll4)
        (&no-nans-rtd . g$12564$1pJll4)
        (&no-infinities-rcd . g$12563$1pJll4)
        (&no-infinities-rtd . g$12562$1pJll4)
        (&i/o-encoding-rcd . g$12561$1pJll4)
        (&i/o-encoding-rtd . g$12560$1pJll4)
        (&i/o-decoding-rcd . g$12559$1pJll4)
        (&i/o-decoding-rtd . g$12558$1pJll4)
        (&i/o-port-rcd . g$12557$1pJll4)
        (&i/o-port-rtd . g$12556$1pJll4)
        (&i/o-file-does-not-exist-rcd . g$12555$1pJll4)
        (&i/o-file-does-not-exist-rtd . g$12554$1pJll4)
        (&i/o-file-already-exists-rcd . g$12553$1pJll4)
        (&i/o-file-already-exists-rtd . g$12552$1pJll4)
        (&i/o-file-is-read-only-rcd . g$12551$1pJll4)
        (&i/o-file-is-read-only-rtd . g$12550$1pJll4)
        (&i/o-file-protection-rcd . g$12549$1pJll4)
        (&i/o-file-protection-rtd . g$12548$1pJll4)
        (&i/o-filename-rcd . g$12547$1pJll4)
        (&i/o-filename-rtd . g$12546$1pJll4)
        (&i/o-invalid-position-rcd . g$12545$1pJll4)
        (&i/o-invalid-position-rtd . g$12544$1pJll4)
        (&i/o-write-rcd . g$12543$1pJll4)
        (&i/o-write-rtd . g$12542$1pJll4)
        (&i/o-read-rcd . g$12541$1pJll4)
        (&i/o-read-rtd . g$12540$1pJll4)
        (&i/o-rcd . g$12539$1pJll4)
        (&i/o-rtd . g$12538$1pJll4)
        (&undefined-rcd . g$12537$1pJll4)
        (&undefined-rtd . g$12536$1pJll4)
        (&syntax-rcd . g$12535$1pJll4)
        (&syntax-rtd . g$12534$1pJll4)
        (&lexical-rcd . g$12533$1pJll4)
        (&lexical-rtd . g$12532$1pJll4)
        (&implementation-restriction-rcd . g$12531$1pJll4)
        (&implementation-restriction-rtd . g$12530$1pJll4)
        (&non-continuable-rcd . g$12529$1pJll4)
        (&non-continuable-rtd . g$12528$1pJll4)
        (&who-rcd . g$12527$1pJll4)
        (&who-rtd . g$12526$1pJll4)
        (&irritants-rcd . g$12525$1pJll4)
        (&irritants-rtd . g$12524$1pJll4)
        (&assertion-rcd . g$12523$1pJll4)
        (&assertion-rtd . g$12522$1pJll4)
        (&violation-rcd . g$12521$1pJll4)
        (&violation-rtd . g$12520$1pJll4)
        (&error-rcd . g$12519$1pJll4)
        (&error-rtd . g$12518$1pJll4)
        (&serious-rcd . g$12517$1pJll4)
        (&serious-rtd . g$12516$1pJll4)
        (&warning-rcd . g$12515$1pJll4)
        (&warning-rtd . g$12514$1pJll4)
        (&message-rcd . g$12513$1pJll4)
        (&message-rtd . g$12512$1pJll4)
        (&condition-rcd . g$12511$1pJll4)
        (&condition-rtd . g$12510$1pJll4)
        (library-letrec* . g$12509$1pJll4)
        (annotation-stripped . g$12508$1pJll4)
        (annotation-source . g$12507$1pJll4)
        (annotation-expression . g$12506$1pJll4)
        (annotation? . g$12505$1pJll4)
        (read-annotated . g$12504$1pJll4)
        (tanh . g$12503$1pJll4)
        (cosh . g$12502$1pJll4)
        (sinh . g$12501$1pJll4)
        (make-guid . g$12500$1pJll4)
        (unspecified? . g$12499$1pJll4)
        (make-trace . g$12498$1pJll4)
        (make-list . g$12497$1pJll4)
        (last-pair . g$12496$1pJll4)
        (load-r5rs . g$12495$1pJll4)
        (license . g$12494$1pJll4)
        (stacktrace . g$12493$1pJll4)
        (ironscheme-build . g$11913$1pJll4)
        (define-clr-class-internal . g$12492$1pJll4)
        (clr-field-set!-internal . g$12491$1pJll4)
        (clr-field-get-internal . g$12490$1pJll4)
        (clr-cast-internal . g$12489$1pJll4)
        (clr-call-internal . g$12488$1pJll4)
        (clr-new-internal . g$12487$1pJll4)
        (clr-new-array-internal . g$12486$1pJll4)
        (clr-is-internal . g$12485$1pJll4)
        (clr-reference-internal . g$12484$1pJll4)
        (clr-using-internal . g$12483$1pJll4)
        (clr-clear-usings-internal . g$12482$1pJll4)
        (syntax-error . g$8964$1pJll4)
        (syntax-dispatch . g$8835$1pJll4)
        (compile-core . g$12481$1pJll4)
        (eval-core . g$12480$1pJll4)
        (set-symbol-value! . g$12479$1pJll4)
        (symbol-value . g$12478$1pJll4)
        (ungensym . g$12477$1pJll4)
        (gensym . g$12476$1pJll4)
        (void . g$12475$1pJll4)
        (load-serialized-library . g$12474$1pJll4)
        (serialize-library . g$12473$1pJll4)
        (compile-system-libraries . g$11915$1pJll4)
        (compile->closure . g$11917$1pJll4)
        (compile . g$11916$1pJll4)
        (load . g$11912$1pJll4)
        (interaction-environment . g$8973$1pJll4)
        (char-ready? . g$12472$1pJll4)
        (string-upcase . g$12471$1pJll4)
        (string-titlecase . g$12470$1pJll4)
        (string-normalize-nfkd . g$12469$1pJll4)
        (string-normalize-nfkc . g$12468$1pJll4)
        (string-normalize-nfd . g$12467$1pJll4)
        (string-normalize-nfc . g$12466$1pJll4)
        (string-foldcase . g$12465$1pJll4)
        (string-downcase . g$12464$1pJll4)
        (string-ci>? . g$7040$1pJll4)
        (string-ci>=? . g$7042$1pJll4)
        (string-ci=? . g$7038$1pJll4)
        (string-ci<? . g$7039$1pJll4)
        (string-ci<=? . g$7041$1pJll4)
        (char-whitespace? . g$12463$1pJll4)
        (char-upper-case? . g$12462$1pJll4)
        (char-title-case? . g$12461$1pJll4)
        (char-numeric? . g$12460$1pJll4)
        (char-lower-case? . g$12459$1pJll4)
        (char-general-category . g$12458$1pJll4)
        (char-upcase . g$12457$1pJll4)
        (char-titlecase . g$12456$1pJll4)
        (char-foldcase . g$12455$1pJll4)
        (char-downcase . g$12454$1pJll4)
        (char-ci>? . g$7091$1pJll4)
        (char-ci>=? . g$7093$1pJll4)
        (char-ci=? . g$7089$1pJll4)
        (char-ci<? . g$7090$1pJll4)
        (char-ci<=? . g$7092$1pJll4)
        (char-alphabetic? . g$12453$1pJll4)
        (variable-transformer-procedure . g$8572$1pJll4)
        (variable-transformer? . g$8571$1pJll4)
        (make-variable-transformer . g$8570$1pJll4)
        (identifier? . g$8968$1pJll4)
        (generate-temporaries . g$8957$1pJll4)
        (free-identifier=? . g$8958$1pJll4)
        (syntax->datum . g$8970$1pJll4)
        (datum->syntax . g$8969$1pJll4)
        (bound-identifier=? . g$8959$1pJll4)
        (record-type-descriptor? . g$12452$1pJll4)
        (record-predicate . g$12451$1pJll4)
        (record-mutator . g$12450$1pJll4)
        (record-constructor . g$12449$1pJll4)
        (record-accessor . g$12448$1pJll4)
        (make-record-type-descriptor . g$12447$1pJll4)
        (make-record-constructor-descriptor . g$12446$1pJll4)
        (record? . g$12445$1pJll4)
        (record-type-uid . g$12444$1pJll4)
        (record-type-sealed? . g$12443$1pJll4)
        (record-type-parent . g$12442$1pJll4)
        (record-type-opaque? . g$12441$1pJll4)
        (record-type-name . g$12440$1pJll4)
        (record-type-generative? . g$12439$1pJll4)
        (record-type-field-names . g$12438$1pJll4)
        (record-rtd . g$12437$1pJll4)
        (record-field-mutable? . g$12436$1pJll4)
        (delete-file . g$6401$1pJll4)
        (file-exists? . g$6400$1pJll4)
        (vector-sort! . g$12435$1pJll4)
        (vector-sort . g$12434$1pJll4)
        (list-sort . g$6914$1pJll4)
        (symbol-hash . g$12433$1pJll4)
        (string-ci-hash . g$12432$1pJll4)
        (string-hash . g$12431$1pJll4)
        (equal-hash . g$12430$1pJll4)
        (hashtable-equivalence-function . g$12429$1pJll4)
        (make-hashtable . g$12428$1pJll4)
        (hashtable-hash-function . g$12427$1pJll4)
        (make-eqv-hashtable . g$6368$1pJll4)
        (make-eq-hashtable . g$6367$1pJll4)
        (hashtable? . g$12426$1pJll4)
        (hashtable-update! . g$6374$1pJll4)
        (hashtable-size . g$6369$1pJll4)
        (hashtable-set! . g$6371$1pJll4)
        (hashtable-ref . g$6370$1pJll4)
        (hashtable-mutable? . g$12425$1pJll4)
        (hashtable-keys . g$12424$1pJll4)
        (hashtable-entries . g$12423$1pJll4)
        (hashtable-delete! . g$6372$1pJll4)
        (hashtable-copy . g$12422$1pJll4)
        (hashtable-contains? . g$6373$1pJll4)
        (hashtable-clear! . g$6375$1pJll4)
        (call-with-output-file . g$7510$1pJll4)
        (call-with-input-file . g$7509$1pJll4)
        (write-char . g$12421$1pJll4)
        (write . g$12420$1pJll4)
        (with-output-to-file . g$7508$1pJll4)
        (with-input-from-file . g$7507$1pJll4)
        (read-char . g$12419$1pJll4)
        (read . g$12418$1pJll4)
        (peek-char . g$12417$1pJll4)
        (open-output-file . g$12416$1pJll4)
        (open-input-file . g$12415$1pJll4)
        (newline . g$12414$1pJll4)
        (display . g$12413$1pJll4)
        (close-output-port . g$12412$1pJll4)
        (close-input-port . g$12411$1pJll4)
        (eof-object? . g$12410$1pJll4)
        (eof-object . g$12409$1pJll4)
        (current-error-port . g$12408$1pJll4)
        (current-output-port . g$12407$1pJll4)
        (current-input-port . g$12406$1pJll4)
        (output-port? . g$12405$1pJll4)
        (input-port? . g$12404$1pJll4)
        (utf-8-codec . g$12403$1pJll4)
        (utf-16-codec . g$12402$1pJll4)
        (transcoder-error-handling-mode . g$12401$1pJll4)
        (transcoder-eol-style . g$12400$1pJll4)
        (transcoder-codec . g$12399$1pJll4)
        (transcoded-port . g$12398$1pJll4)
        (textual-port? . g$12397$1pJll4)
        (string->bytevector . g$12396$1pJll4)
        (standard-output-port . g$12395$1pJll4)
        (standard-input-port . g$12394$1pJll4)
        (standard-error-port . g$12393$1pJll4)
        (set-port-position! . g$12392$1pJll4)
        (put-u8 . g$12391$1pJll4)
        (put-string . g$12390$1pJll4)
        (put-datum . g$12389$1pJll4)
        (put-char . g$12388$1pJll4)
        (put-bytevector . g$12387$1pJll4)
        (port? . g$7486$1pJll4)
        (port-transcoder . g$12386$1pJll4)
        (port-position . g$12385$1pJll4)
        (port-has-set-port-position!? . g$12384$1pJll4)
        (port-has-port-position? . g$12383$1pJll4)
        (port-eof? . g$12382$1pJll4)
        (output-port-buffer-mode . g$12381$1pJll4)
        (open-string-output-port . g$7485$1pJll4)
        (open-string-input-port . g$12380$1pJll4)
        (open-file-output-port . g$12379$1pJll4)
        (open-file-input/output-port . g$12378$1pJll4)
        (open-file-input-port . g$12377$1pJll4)
        (open-bytevector-output-port . g$12376$1pJll4)
        (open-bytevector-input-port . g$12375$1pJll4)
        (native-transcoder . g$12374$1pJll4)
        (native-eol-style . g$12373$1pJll4)
        (make-transcoder . g$12372$1pJll4)
        (latin-1-codec . g$12371$1pJll4)
        (make-i/o-write-error . g$7342$1pJll4)
        (make-i/o-read-error . g$7328$1pJll4)
        (make-i/o-port-error . g$7447$1pJll4)
        (make-i/o-invalid-position-error . g$7357$1pJll4)
        (make-i/o-filename-error . g$7374$1pJll4)
        (make-i/o-file-protection-error . g$7390$1pJll4)
        (make-i/o-file-is-read-only-error . g$7404$1pJll4)
        (make-i/o-file-does-not-exist-error . g$7432$1pJll4)
        (make-i/o-file-already-exists-error . g$7418$1pJll4)
        (make-i/o-error . g$7314$1pJll4)
        (make-i/o-encoding-error . g$7478$1pJll4)
        (make-i/o-decoding-error . g$7463$1pJll4)
        (make-custom-textual-output-port . g$12370$1pJll4)
        (make-custom-textual-input/output-port . g$12369$1pJll4)
        (make-custom-textual-input-port . g$12368$1pJll4)
        (make-custom-binary-output-port . g$12367$1pJll4)
        (make-custom-binary-input/output-port . g$12366$1pJll4)
        (make-custom-binary-input-port . g$12365$1pJll4)
        (make-bytevector . g$12364$1pJll4)
        (lookahead-u8 . g$12363$1pJll4)
        (lookahead-char . g$12362$1pJll4)
        (i/o-write-error? . g$7343$1pJll4)
        (i/o-read-error? . g$7329$1pJll4)
        (i/o-port-error? . g$7449$1pJll4)
        (i/o-invalid-position-error? . g$7359$1pJll4)
        (i/o-error-position . g$7360$1pJll4)
        (i/o-filename-error? . g$7376$1pJll4)
        (i/o-file-protection-error? . g$7391$1pJll4)
        (i/o-file-is-read-only-error? . g$7405$1pJll4)
        (i/o-file-does-not-exist-error? . g$7433$1pJll4)
        (i/o-file-already-exists-error? . g$7419$1pJll4)
        (i/o-error? . g$7315$1pJll4)
        (i/o-error-port . g$7450$1pJll4)
        (i/o-error-filename . g$7377$1pJll4)
        (i/o-encoding-error? . g$7480$1pJll4)
        (i/o-encoding-error-char . g$7481$1pJll4)
        (i/o-decoding-error? . g$7464$1pJll4)
        (get-u8 . g$12361$1pJll4)
        (get-string-n! . g$12360$1pJll4)
        (get-string-n . g$12359$1pJll4)
        (get-string-all . g$12358$1pJll4)
        (get-line . g$12357$1pJll4)
        (get-datum . g$12356$1pJll4)
        (get-char . g$12355$1pJll4)
        (get-bytevector-some . g$12354$1pJll4)
        (get-bytevector-n! . g$12353$1pJll4)
        (get-bytevector-n . g$12352$1pJll4)
        (get-bytevector-all . g$12351$1pJll4)
        (flush-output-port . g$12350$1pJll4)
        (close-port . g$12349$1pJll4)
        (call-with-string-output-port . g$12348$1pJll4)
        (call-with-port . g$12347$1pJll4)
        (call-with-bytevector-output-port . g$12346$1pJll4)
        (bytevector->string . g$12345$1pJll4)
        (buffer-mode? . g$12344$1pJll4)
        (binary-port? . g$12343$1pJll4)
        (scheme-report-environment . g$8948$1pJll4)
        (quotient . g$6894$1pJll4)
        (null-environment . g$8947$1pJll4)
        (remainder . g$6895$1pJll4)
        (modulo . g$6896$1pJll4)
        (inexact->exact . g$12342$1pJll4)
        (force . g$6898$1pJll4)
        (exact->inexact . g$12341$1pJll4)
        (exit . g$12340$1pJll4)
        (command-line . g$11909$1pJll4)
        (string-fill! . g$12339$1pJll4)
        (string-set! . g$12338$1pJll4)
        (set-cdr! . g$12337$1pJll4)
        (set-car! . g$12336$1pJll4)
        (remove . g$6481$1pJll4)
        (remv . g$6482$1pJll4)
        (remp . g$6467$1pJll4)
        (remq . g$6483$1pJll4)
        (partition . g$6466$1pJll4)
        (memv . g$12335$1pJll4)
        (memq . g$12334$1pJll4)
        (memp . g$6473$1pJll4)
        (member . g$6472$1pJll4)
        (exists . g$6477$1pJll4)
        (for-all . g$6476$1pJll4)
        (fold-right . g$6480$1pJll4)
        (fold-left . g$6479$1pJll4)
        (find . g$6465$1pJll4)
        (filter . g$6468$1pJll4)
        (cons* . g$6478$1pJll4)
        (assv . g$6469$1pJll4)
        (assq . g$12333$1pJll4)
        (assp . g$6471$1pJll4)
        (assoc . g$6470$1pJll4)
        (with-exception-handler . g$12332$1pJll4)
        (raise-continuable . g$12331$1pJll4)
        (raise . g$12330$1pJll4)
        (eval . g$8950$1pJll4)
        (environment . g$8946$1pJll4)
        (make-enumeration . g$7568$1pJll4)
        (enum-set=? . g$7575$1pJll4)
        (enum-set-universe . g$7569$1pJll4)
        (enum-set-union . g$7576$1pJll4)
        (enum-set-subset? . g$7574$1pJll4)
        (enum-set-projection . g$7580$1pJll4)
        (enum-set-member? . g$7573$1pJll4)
        (enum-set-intersection . g$7577$1pJll4)
        (enum-set-indexer . g$7570$1pJll4)
        (enum-set-difference . g$7578$1pJll4)
        (enum-set-constructor . g$7571$1pJll4)
        (enum-set-complement . g$7579$1pJll4)
        (enum-set->list . g$7572$1pJll4)
        (who-condition? . g$6805$1pJll4)
        (warning? . g$6716$1pJll4)
        (violation? . g$6758$1pJll4)
        (undefined-violation? . g$6882$1pJll4)
        (syntax-violation? . g$6866$1pJll4)
        (syntax-violation-subform . g$6868$1pJll4)
        (syntax-violation-form . g$6867$1pJll4)
        (syntax-violation . g$8967$1pJll4)
        (simple-conditions . g$12329$1pJll4)
        (serious-condition? . g$6730$1pJll4)
        (non-continuable-violation? . g$6820$1pJll4)
        (message-condition? . g$6701$1pJll4)
        (make-who-condition . g$6803$1pJll4)
        (make-warning . g$6715$1pJll4)
        (make-violation . g$6757$1pJll4)
        (make-undefined-violation . g$6881$1pJll4)
        (make-syntax-violation . g$6863$1pJll4)
        (make-serious-condition . g$6729$1pJll4)
        (make-non-continuable-violation . g$6819$1pJll4)
        (make-message-condition . g$6699$1pJll4)
        (make-lexical-violation . g$6847$1pJll4)
        (make-irritants-condition . g$6786$1pJll4)
        (make-implementation-restriction-violation . g$6833$1pJll4)
        (make-error . g$6743$1pJll4)
        (make-assertion-violation . g$6771$1pJll4)
        (lexical-violation? . g$6848$1pJll4)
        (irritants-condition? . g$6788$1pJll4)
        (implementation-restriction-violation? . g$6834$1pJll4)
        (error? . g$6744$1pJll4)
        (condition-who . g$6806$1pJll4)
        (condition-predicate . g$12328$1pJll4)
        (condition-message . g$6702$1pJll4)
        (condition-irritants . g$6789$1pJll4)
        (condition-accessor . g$12327$1pJll4)
        (condition . g$12326$1pJll4)
        (assertion-violation? . g$6772$1pJll4)
        (condition? . g$12325$1pJll4)
        (utf32->string . g$12324$1pJll4)
        (utf16->string . g$12323$1pJll4)
        (utf8->string . g$12322$1pJll4)
        (uint-list->bytevector . g$12321$1pJll4)
        (u8-list->bytevector . g$12320$1pJll4)
        (string->utf8 . g$12319$1pJll4)
        (string->utf32 . g$12318$1pJll4)
        (string->utf16 . g$12317$1pJll4)
        (sint-list->bytevector . g$12316$1pJll4)
        (native-endianness . g$6557$1pJll4)
        (bytevector? . g$12315$1pJll4)
        (bytevector=? . g$12314$1pJll4)
        (bytevector-uint-set! . g$12313$1pJll4)
        (bytevector-uint-ref . g$12312$1pJll4)
        (bytevector-u8-set! . g$12311$1pJll4)
        (bytevector-u8-ref . g$12310$1pJll4)
        (bytevector-u64-set! . g$6578$1pJll4)
        (bytevector-u64-ref . g$6574$1pJll4)
        (bytevector-u64-native-set! . g$6580$1pJll4)
        (bytevector-u64-native-ref . g$6576$1pJll4)
        (bytevector-u32-set! . g$6570$1pJll4)
        (bytevector-u32-ref . g$6566$1pJll4)
        (bytevector-u32-native-set! . g$6572$1pJll4)
        (bytevector-u32-native-ref . g$6568$1pJll4)
        (bytevector-u16-set! . g$6562$1pJll4)
        (bytevector-u16-ref . g$6558$1pJll4)
        (bytevector-u16-native-set! . g$6564$1pJll4)
        (bytevector-u16-native-ref . g$6560$1pJll4)
        (bytevector-sint-set! . g$12309$1pJll4)
        (bytevector-sint-ref . g$12308$1pJll4)
        (bytevector-s8-set! . g$12307$1pJll4)
        (bytevector-s8-ref . g$12306$1pJll4)
        (bytevector-s64-set! . g$6579$1pJll4)
        (bytevector-s64-ref . g$6575$1pJll4)
        (bytevector-s64-native-set! . g$6581$1pJll4)
        (bytevector-s64-native-ref . g$6577$1pJll4)
        (bytevector-s32-set! . g$6571$1pJll4)
        (bytevector-s32-ref . g$6567$1pJll4)
        (bytevector-s32-native-set! . g$6573$1pJll4)
        (bytevector-s32-native-ref . g$6569$1pJll4)
        (bytevector-s16-set! . g$6563$1pJll4)
        (bytevector-s16-ref . g$6559$1pJll4)
        (bytevector-s16-native-set! . g$6565$1pJll4)
        (bytevector-s16-native-ref . g$6561$1pJll4)
        (bytevector-length . g$12305$1pJll4)
        (bytevector-ieee-single-set! . g$12304$1pJll4)
        (bytevector-ieee-single-ref . g$12303$1pJll4)
        (bytevector-ieee-single-native-set! . g$6584$1pJll4)
        (bytevector-ieee-single-native-ref . g$6582$1pJll4)
        (bytevector-ieee-double-set! . g$12302$1pJll4)
        (bytevector-ieee-double-ref . g$12301$1pJll4)
        (bytevector-ieee-double-native-set! . g$6585$1pJll4)
        (bytevector-ieee-double-native-ref . g$6583$1pJll4)
        (bytevector-fill! . g$12300$1pJll4)
        (bytevector-copy! . g$12299$1pJll4)
        (bytevector-copy . g$12298$1pJll4)
        (bytevector->uint-list . g$12297$1pJll4)
        (bytevector->u8-list . g$12296$1pJll4)
        (bytevector->sint-list . g$12295$1pJll4)
        (no-nans-violation? . g$7300$1pJll4)
        (no-infinities-violation? . g$7286$1pJll4)
        (make-no-nans-violation . g$7299$1pJll4)
        (make-no-infinities-violation . g$7285$1pJll4)
        (real->flonum . g$12294$1pJll4)
        (flzero? . g$12293$1pJll4)
        (fltruncate . g$12292$1pJll4)
        (fltan . g$12291$1pJll4)
        (flsqrt . g$12290$1pJll4)
        (flsin . g$12289$1pJll4)
        (flround . g$12288$1pJll4)
        (flpositive? . g$12287$1pJll4)
        (flonum? . g$12286$1pJll4)
        (flodd? . g$12285$1pJll4)
        (flnumerator . g$12284$1pJll4)
        (flnegative? . g$12283$1pJll4)
        (flnan? . g$12282$1pJll4)
        (flmod0 . g$12281$1pJll4)
        (flmod . g$12280$1pJll4)
        (flmin . g$12279$1pJll4)
        (flmax . g$12278$1pJll4)
        (fllog . g$12277$1pJll4)
        (flinteger? . g$12276$1pJll4)
        (flinfinite? . g$12275$1pJll4)
        (flfloor . g$12274$1pJll4)
        (flfinite? . g$12273$1pJll4)
        (flexpt . g$12272$1pJll4)
        (flexp . g$12271$1pJll4)
        (fleven? . g$12270$1pJll4)
        (fldiv0-and-mod0 . g$12269$1pJll4)
        (fldiv0 . g$12268$1pJll4)
        (fldiv-and-mod . g$12267$1pJll4)
        (fldiv . g$12266$1pJll4)
        (fldenominator . g$12265$1pJll4)
        (flcos . g$12264$1pJll4)
        (flceiling . g$12263$1pJll4)
        (flatan . g$12262$1pJll4)
        (flasin . g$12261$1pJll4)
        (flacos . g$12260$1pJll4)
        (flabs . g$12259$1pJll4)
        (fl>? . g$12258$1pJll4)
        (fl>=? . g$12257$1pJll4)
        (fl=? . g$12256$1pJll4)
        (fl<? . g$12255$1pJll4)
        (fl<=? . g$12254$1pJll4)
        (fl/ . g$12253$1pJll4)
        (fl- . g$12252$1pJll4)
        (fl+ . g$12251$1pJll4)
        (fl* . g$12250$1pJll4)
        (fixnum->flonum . g$12249$1pJll4)
        (fxzero? . g$12248$1pJll4)
        (fxxor . g$12247$1pJll4)
        (fxrotate-bit-field . g$7231$1pJll4)
        (fxreverse-bit-field . g$12246$1pJll4)
        (fxpositive? . g$12245$1pJll4)
        (fxodd? . g$12244$1pJll4)
        (fxnot . g$12243$1pJll4)
        (fxnegative? . g$12242$1pJll4)
        (fxmod0 . g$12241$1pJll4)
        (fxmod . g$12240$1pJll4)
        (fxmin . g$12239$1pJll4)
        (fxmax . g$12238$1pJll4)
        (fxlength . g$12237$1pJll4)
        (fxior . g$12236$1pJll4)
        (fxif . g$7225$1pJll4)
        (fxfirst-bit-set . g$12235$1pJll4)
        (fxeven? . g$12234$1pJll4)
        (fxdiv0-and-mod0 . g$12233$1pJll4)
        (fxdiv0 . g$12232$1pJll4)
        (fxdiv-and-mod . g$12231$1pJll4)
        (fxdiv . g$12230$1pJll4)
        (fxcopy-bit-field . g$7228$1pJll4)
        (fxcopy-bit . g$7226$1pJll4)
        (fxbit-set? . g$12229$1pJll4)
        (fxbit-field . g$7227$1pJll4)
        (fxbit-count . g$12228$1pJll4)
        (fxarithmetic-shift-right . g$7230$1pJll4)
        (fxarithmetic-shift-left . g$7229$1pJll4)
        (fxarithmetic-shift . g$12227$1pJll4)
        (fxand . g$12226$1pJll4)
        (fx>? . g$12225$1pJll4)
        (fx>=? . g$12224$1pJll4)
        (fx=? . g$12223$1pJll4)
        (fx<? . g$12222$1pJll4)
        (fx<=? . g$12221$1pJll4)
        (fx-/carry . g$12220$1pJll4)
        (fx- . g$12219$1pJll4)
        (fx+/carry . g$12218$1pJll4)
        (fx+ . g$12217$1pJll4)
        (fx*/carry . g$12216$1pJll4)
        (fx* . g$12215$1pJll4)
        (greatest-fixnum . g$12214$1pJll4)
        (least-fixnum . g$12213$1pJll4)
        (fixnum-width . g$12212$1pJll4)
        (fixnum? . g$12211$1pJll4)
        (bitwise-rotate-bit-field . g$7183$1pJll4)
        (bitwise-reverse-bit-field . g$12210$1pJll4)
        (bitwise-length . g$12209$1pJll4)
        (bitwise-if . g$7177$1pJll4)
        (bitwise-first-bit-set . g$12208$1pJll4)
        (bitwise-copy-bit-field . g$7180$1pJll4)
        (bitwise-copy-bit . g$7178$1pJll4)
        (bitwise-bit-set? . g$12207$1pJll4)
        (bitwise-bit-field . g$12206$1pJll4)
        (bitwise-bit-count . g$12205$1pJll4)
        (bitwise-xor . g$12204$1pJll4)
        (bitwise-ior . g$12203$1pJll4)
        (bitwise-and . g$12202$1pJll4)
        (bitwise-not . g$12201$1pJll4)
        (bitwise-arithmetic-shift-right . g$7182$1pJll4)
        (bitwise-arithmetic-shift-left . g$7181$1pJll4)
        (bitwise-arithmetic-shift . g$12200$1pJll4)
        (zero? . g$12199$1pJll4)
        (vector? . g$12198$1pJll4)
        (vector-set! . g$12197$1pJll4)
        (vector-ref . g$12196$1pJll4)
        (vector-map . g$12195$1pJll4)
        (vector-length . g$12194$1pJll4)
        (vector-for-each . g$12193$1pJll4)
        (vector-fill! . g$12192$1pJll4)
        (vector->list . g$12191$1pJll4)
        (vector . g$12190$1pJll4)
        (values . g$12189$1pJll4)
        (truncate . g$12188$1pJll4)
        (tan . g$12187$1pJll4)
        (symbol? . g$12186$1pJll4)
        (symbol=? . g$5866$1pJll4)
        (symbol->string . g$12185$1pJll4)
        (substring . g$12184$1pJll4)
        (string? . g$12183$1pJll4)
        (string>? . g$5863$1pJll4)
        (string>=? . g$5865$1pJll4)
        (string=? . g$5861$1pJll4)
        (string<? . g$5862$1pJll4)
        (string<=? . g$5864$1pJll4)
        (string-ref . g$12182$1pJll4)
        (string-length . g$12181$1pJll4)
        (string-for-each . g$12180$1pJll4)
        (string-copy . g$12179$1pJll4)
        (string-append . g$12178$1pJll4)
        (string->symbol . g$12177$1pJll4)
        (string->number . g$12176$1pJll4)
        (string->list . g$12175$1pJll4)
        (string . g$12174$1pJll4)
        (sqrt . g$12173$1pJll4)
        (sin . g$12172$1pJll4)
        (round . g$12171$1pJll4)
        (reverse . g$12170$1pJll4)
        (real? . g$12169$1pJll4)
        (real-valued? . g$12168$1pJll4)
        (real-part . g$12167$1pJll4)
        (rationalize . g$5919$1pJll4)
        (rational? . g$12166$1pJll4)
        (rational-valued? . g$12165$1pJll4)
        (procedure? . g$12164$1pJll4)
        (positive? . g$12163$1pJll4)
        (pair? . g$12162$1pJll4)
        (odd? . g$12161$1pJll4)
        (numerator . g$12160$1pJll4)
        (number? . g$12159$1pJll4)
        (number->string . g$12158$1pJll4)
        (null? . g$12157$1pJll4)
        (not . g$12156$1pJll4)
        (negative? . g$12155$1pJll4)
        (nan? . g$12154$1pJll4)
        (min . g$12153$1pJll4)
        (max . g$12152$1pJll4)
        (map . g$12151$1pJll4)
        (make-vector . g$12150$1pJll4)
        (make-string . g$12149$1pJll4)
        (make-rectangular . g$12148$1pJll4)
        (make-polar . g$12147$1pJll4)
        (magnitude . g$12146$1pJll4)
        (log . g$12145$1pJll4)
        (list? . g$12144$1pJll4)
        (list-tail . g$12143$1pJll4)
        (list-ref . g$12142$1pJll4)
        (list->vector . g$12141$1pJll4)
        (list->string . g$12140$1pJll4)
        (list . g$12139$1pJll4)
        (length . g$12138$1pJll4)
        (lcm . g$12137$1pJll4)
        (integer? . g$12136$1pJll4)
        (integer-valued? . g$12135$1pJll4)
        (integer->char . g$12134$1pJll4)
        (infinite? . g$12133$1pJll4)
        (inexact? . g$12132$1pJll4)
        (inexact . g$12131$1pJll4)
        (imag-part . g$12130$1pJll4)
        (gcd . g$12129$1pJll4)
        (for-each . g$12128$1pJll4)
        (floor . g$12127$1pJll4)
        (finite? . g$12126$1pJll4)
        (expt . g$12125$1pJll4)
        (exp . g$12124$1pJll4)
        (exact? . g$12123$1pJll4)
        (exact-integer-sqrt . g$12122$1pJll4)
        (exact . g$12121$1pJll4)
        (even? . g$12120$1pJll4)
        (error . g$12119$1pJll4)
        (eqv? . g$12118$1pJll4)
        (equal? . g$12117$1pJll4)
        (eq? . g$12116$1pJll4)
        (dynamic-wind . g$12115$1pJll4)
        (div0-and-mod0 . g$12114$1pJll4)
        (mod0 . g$12113$1pJll4)
        (div0 . g$12112$1pJll4)
        (div-and-mod . g$12111$1pJll4)
        (mod . g$12110$1pJll4)
        (div . g$12109$1pJll4)
        (denominator . g$12108$1pJll4)
        (cos . g$12107$1pJll4)
        (cons . g$12106$1pJll4)
        (complex? . g$12105$1pJll4)
        (char? . g$12104$1pJll4)
        (char>? . g$5916$1pJll4)
        (char>=? . g$5918$1pJll4)
        (char=? . g$5914$1pJll4)
        (char<? . g$5915$1pJll4)
        (char<=? . g$5917$1pJll4)
        (char->integer . g$12103$1pJll4)
        (ceiling . g$12102$1pJll4)
        (call-with-values . g$12101$1pJll4)
        (call/cc . g$12100$1pJll4)
        (call-with-current-continuation . g$12099$1pJll4)
        (cddddr . g$5814$1pJll4)
        (cdddar . g$5813$1pJll4)
        (cddadr . g$5812$1pJll4)
        (cddaar . g$5811$1pJll4)
        (cdaddr . g$5810$1pJll4)
        (cdadar . g$5809$1pJll4)
        (cdaadr . g$5808$1pJll4)
        (cdaaar . g$5807$1pJll4)
        (cadddr . g$5806$1pJll4)
        (caddar . g$5805$1pJll4)
        (cadadr . g$5804$1pJll4)
        (cadaar . g$5803$1pJll4)
        (caaddr . g$5802$1pJll4)
        (caadar . g$5801$1pJll4)
        (caaadr . g$5800$1pJll4)
        (caaaar . g$5799$1pJll4)
        (cdddr . g$5798$1pJll4)
        (cddar . g$5797$1pJll4)
        (cdadr . g$5796$1pJll4)
        (cdaar . g$5795$1pJll4)
        (caddr . g$5794$1pJll4)
        (cadar . g$5793$1pJll4)
        (caadr . g$5792$1pJll4)
        (caaar . g$5791$1pJll4)
        (cddr . g$5790$1pJll4)
        (cdar . g$5789$1pJll4)
        (cadr . g$5788$1pJll4)
        (caar . g$5787$1pJll4)
        (cdr . g$12098$1pJll4)
        (car . g$12097$1pJll4)
        (boolean? . g$12096$1pJll4)
        (boolean=? . g$5867$1pJll4)
        (atan . g$12095$1pJll4)
        (assertion-violation . g$12094$1pJll4)
        (asin . g$12093$1pJll4)
        (apply . g$12092$1pJll4)
        (append . g$12091$1pJll4)
        (angle . g$12090$1pJll4)
        (acos . g$12089$1pJll4)
        (abs . g$12088$1pJll4)
        (/ . g$12087$1pJll4)
        (* . g$12086$1pJll4)
        (- . g$12085$1pJll4)
        (+ . g$12084$1pJll4)
        (>= . g$12083$1pJll4)
        (> . g$12082$1pJll4)
        (= . g$12081$1pJll4)
        (<= . g$12080$1pJll4)
        (< . g$12079$1pJll4)
        (make-record-printer . g$12078$1pJll4)
        (eqv-hash . g$12077$1pJll4)
        (eq-hash . g$12076$1pJll4)
        (reverse! . g$12075$1pJll4)
        (deserialize-port . g$12074$1pJll4)
        (serialize-port . g$12073$1pJll4)
        (enum-set? . g$7543$1pJll4)
        (make-promise . g$6897$1pJll4)
        (load/args . g$11911$1pJll4)
        (printf . g$7653$1pJll4)
        (fprintf . g$7654$1pJll4)
        (format . g$7655$1pJll4)
        (get-arity . g$12072$1pJll4)
        (gc-collect . g$12071$1pJll4)
        (clr-type? . g$12070$1pJll4)
        (get-clr-type . g$12069$1pJll4)
        (get-command-line . g$12068$1pJll4)
        (vector-append . g$12067$1pJll4)
        (vector-filter . g$12066$1pJll4)
        (vector-reverse! . g$12065$1pJll4)
        (vector-contains? . g$12064$1pJll4)
        (vector-index-of . g$12063$1pJll4)
        (vector-copy . g$12062$1pJll4)
        (vector-binary-search . g$12061$1pJll4)
        (get-output-string . g$12060$1pJll4)
        (open-output-string . g$12059$1pJll4)
        (open-input-string . g$12058$1pJll4)
        (string-ci-compare . g$12057$1pJll4)
        (string-compare . g$12056$1pJll4)
        (string-format . g$12055$1pJll4)
        (trace-printer . g$11908$1pJll4)
        (make-traced-procedure . g$12054$1pJll4)
        (make-traced-macro . g$7675$1pJll4)
        (assertion-error . g$8963$1pJll4)
        (pmap . g$12053$1pJll4)
        (time-it . g$12052$1pJll4)
        (make-parameter . g$7680$1pJll4)
        (library-locator . g$12051$1pJll4)
        (get-library-paths . g$12050$1pJll4)
        (environment-bindings . g$8943$1pJll4)
        (environment-symbols . g$8942$1pJll4)
        (interaction-environment-symbols . g$8941$1pJll4)
        (library-path . g$8110$1pJll4)
        (&no-nans . g$12049$1pJll4)
        (&no-infinities . g$12048$1pJll4)
        (&i/o-encoding . g$12047$1pJll4)
        (&i/o-decoding . g$12046$1pJll4)
        (&i/o-port . g$12045$1pJll4)
        (&i/o-file-does-not-exist . g$12044$1pJll4)
        (&i/o-file-already-exists . g$12043$1pJll4)
        (&i/o-file-is-read-only . g$12042$1pJll4)
        (&i/o-file-protection . g$12041$1pJll4)
        (&i/o-filename . g$12040$1pJll4)
        (&i/o-invalid-position . g$12039$1pJll4)
        (&i/o-write . g$12038$1pJll4)
        (&i/o-read . g$12037$1pJll4)
        (&i/o . g$12036$1pJll4)
        (&non-continuable . g$12035$1pJll4)
        (&undefined . g$12034$1pJll4)
        (&syntax . g$12033$1pJll4)
        (&lexical . g$12032$1pJll4)
        (&implementation-restriction . g$12031$1pJll4)
        (&non . g$12030$1pJll4)
        (&who . g$12029$1pJll4)
        (&irritants . g$12028$1pJll4)
        (&assertion . g$12027$1pJll4)
        (&violation . g$12026$1pJll4)
        (&error . g$12025$1pJll4)
        (&serious . g$12024$1pJll4)
        (&warning . g$12023$1pJll4)
        (&message . g$12022$1pJll4)
        (&condition . g$12021$1pJll4)
        (define-condition-type . g$12020$1pJll4)
        (define-enumeration . g$12019$1pJll4)
        (define-record-type . g$12018$1pJll4)
        (parent-rtd . g$12017$1pJll4)
        (nongenerative . g$12016$1pJll4)
        (opaque . g$12015$1pJll4)
        (sealed . g$12014$1pJll4)
        (protocol . g$12013$1pJll4)
        (parent . g$12012$1pJll4)
        (immutable . g$12011$1pJll4)
        (mutable . g$12010$1pJll4)
        (fields . g$12009$1pJll4)
        (error-handling-mode . g$12008$1pJll4)
        (file-options . g$12007$1pJll4)
        (buffer-mode . g$12006$1pJll4)
        (eol-style . g$12005$1pJll4)
        (guard . g$12004$1pJll4)
        (trace-letrec-syntax . g$12003$1pJll4)
        (trace-let-syntax . g$12002$1pJll4)
        (trace-define-syntax . g$12001$1pJll4)
        (trace-define . g$12000$1pJll4)
        (trace-lambda . g$11999$1pJll4)
        (unsyntax-splicing . g$11998$1pJll4)
        (unsyntax . g$11997$1pJll4)
        (unquote-splicing . g$11996$1pJll4)
        (unquote . g$11995$1pJll4)
        (_ . g$11994$1pJll4)
        (else . g$11993$1pJll4)
        (=> . g$11992$1pJll4)
        (... . g$11991$1pJll4)
        (assert . g$11990$1pJll4)
        (endianness . g$11989$1pJll4)
        (delay . g$11988$1pJll4)
        (time . g$11987$1pJll4)
        (or . g$11986$1pJll4)
        (and . g$11985$1pJll4)
        (do . g$11984$1pJll4)
        (cond . g$11983$1pJll4)
        (let* . g$11982$1pJll4)
        (let . g$11981$1pJll4)
        (identifier-syntax . g$11980$1pJll4)
        (with-syntax . g$11979$1pJll4)
        (quasisyntax . g$11978$1pJll4)
        (quasiquote . g$11977$1pJll4)
        (syntax-rules . g$11976$1pJll4)
        (include-into . g$11975$1pJll4)
        (include . g$11974$1pJll4)
        (define-struct . g$11973$1pJll4)
        (let-values . g$11972$1pJll4)
        (let*-values . g$11971$1pJll4)
        (record-constructor-descriptor . g$11970$1pJll4)
        (record-type-descriptor . g$11969$1pJll4)
        (fluid-let-syntax . g$11968$1pJll4)
        (case . g$11967$1pJll4)
        (parameterize . g$11966$1pJll4)
        (unless . g$11965$1pJll4)
        (when . g$11964$1pJll4)
        (if . g$11963$1pJll4)
        (letrec* . g$11962$1pJll4)
        (letrec . g$11961$1pJll4)
        (type-descriptor . g$11960$1pJll4)
        (case-lambda . g$11959$1pJll4)
        (lambda . g$11958$1pJll4)
        (syntax . g$11957$1pJll4)
        (syntax-case . g$11956$1pJll4)
        (quote . g$11955$1pJll4)
        (foreign-call . g$11954$1pJll4)
        (letrec-syntax . g$11953$1pJll4)
        (let-syntax . g$11952$1pJll4)
        (set! . g$11951$1pJll4)
        (import . g$11950$1pJll4)
        (library . g$11949$1pJll4)
        (begin . g$11948$1pJll4)
        (module . g$11947$1pJll4)
        (define-syntax . g$11946$1pJll4)
        (define . g$11945$1pJll4))
      '((g$8840$1pJll4 core-prim . ellipsis-map)
        (g$12565$1pJll4 core-prim . &no-nans-rcd)
        (g$12564$1pJll4 core-prim . &no-nans-rtd)
        (g$12563$1pJll4 core-prim . &no-infinities-rcd)
        (g$12562$1pJll4 core-prim . &no-infinities-rtd)
        (g$12561$1pJll4 core-prim . &i/o-encoding-rcd)
        (g$12560$1pJll4 core-prim . &i/o-encoding-rtd)
        (g$12559$1pJll4 core-prim . &i/o-decoding-rcd)
        (g$12558$1pJll4 core-prim . &i/o-decoding-rtd)
        (g$12557$1pJll4 core-prim . &i/o-port-rcd)
        (g$12556$1pJll4 core-prim . &i/o-port-rtd)
        (g$12555$1pJll4 core-prim . &i/o-file-does-not-exist-rcd)
        (g$12554$1pJll4 core-prim . &i/o-file-does-not-exist-rtd)
        (g$12553$1pJll4 core-prim . &i/o-file-already-exists-rcd)
        (g$12552$1pJll4 core-prim . &i/o-file-already-exists-rtd)
        (g$12551$1pJll4 core-prim . &i/o-file-is-read-only-rcd)
        (g$12550$1pJll4 core-prim . &i/o-file-is-read-only-rtd)
        (g$12549$1pJll4 core-prim . &i/o-file-protection-rcd)
        (g$12548$1pJll4 core-prim . &i/o-file-protection-rtd)
        (g$12547$1pJll4 core-prim . &i/o-filename-rcd)
        (g$12546$1pJll4 core-prim . &i/o-filename-rtd)
        (g$12545$1pJll4 core-prim . &i/o-invalid-position-rcd)
        (g$12544$1pJll4 core-prim . &i/o-invalid-position-rtd)
        (g$12543$1pJll4 core-prim . &i/o-write-rcd)
        (g$12542$1pJll4 core-prim . &i/o-write-rtd)
        (g$12541$1pJll4 core-prim . &i/o-read-rcd)
        (g$12540$1pJll4 core-prim . &i/o-read-rtd)
        (g$12539$1pJll4 core-prim . &i/o-rcd)
        (g$12538$1pJll4 core-prim . &i/o-rtd)
        (g$12537$1pJll4 core-prim . &undefined-rcd)
        (g$12536$1pJll4 core-prim . &undefined-rtd)
        (g$12535$1pJll4 core-prim . &syntax-rcd)
        (g$12534$1pJll4 core-prim . &syntax-rtd)
        (g$12533$1pJll4 core-prim . &lexical-rcd)
        (g$12532$1pJll4 core-prim . &lexical-rtd)
        (g$12531$1pJll4 core-prim . &implementation-restriction-rcd)
        (g$12530$1pJll4 core-prim . &implementation-restriction-rtd)
        (g$12529$1pJll4 core-prim . &non-continuable-rcd)
        (g$12528$1pJll4 core-prim . &non-continuable-rtd)
        (g$12527$1pJll4 core-prim . &who-rcd)
        (g$12526$1pJll4 core-prim . &who-rtd)
        (g$12525$1pJll4 core-prim . &irritants-rcd)
        (g$12524$1pJll4 core-prim . &irritants-rtd)
        (g$12523$1pJll4 core-prim . &assertion-rcd)
        (g$12522$1pJll4 core-prim . &assertion-rtd)
        (g$12521$1pJll4 core-prim . &violation-rcd)
        (g$12520$1pJll4 core-prim . &violation-rtd)
        (g$12519$1pJll4 core-prim . &error-rcd)
        (g$12518$1pJll4 core-prim . &error-rtd)
        (g$12517$1pJll4 core-prim . &serious-rcd)
        (g$12516$1pJll4 core-prim . &serious-rtd)
        (g$12515$1pJll4 core-prim . &warning-rcd)
        (g$12514$1pJll4 core-prim . &warning-rtd)
        (g$12513$1pJll4 core-prim . &message-rcd)
        (g$12512$1pJll4 core-prim . &message-rtd)
        (g$12511$1pJll4 core-prim . &condition-rcd)
        (g$12510$1pJll4 core-prim . &condition-rtd)
        (g$12509$1pJll4 core-prim . library-letrec*)
        (g$12508$1pJll4 core-prim . annotation-stripped)
        (g$12507$1pJll4 core-prim . annotation-source)
        (g$12506$1pJll4 core-prim . annotation-expression)
        (g$12505$1pJll4 core-prim . annotation?)
        (g$12504$1pJll4 core-prim . read-annotated)
        (g$12503$1pJll4 core-prim . tanh)
        (g$12502$1pJll4 core-prim . cosh)
        (g$12501$1pJll4 core-prim . sinh)
        (g$12500$1pJll4 core-prim . make-guid)
        (g$12499$1pJll4 core-prim . unspecified?)
        (g$12498$1pJll4 core-prim . make-trace)
        (g$12497$1pJll4 core-prim . make-list)
        (g$12496$1pJll4 core-prim . last-pair)
        (g$12495$1pJll4 core-prim . load-r5rs)
        (g$12494$1pJll4 core-prim . license)
        (g$12493$1pJll4 core-prim . stacktrace)
        (g$11913$1pJll4 core-prim . ironscheme-build)
        (g$12492$1pJll4 core-prim . define-clr-class-internal)
        (g$12491$1pJll4 core-prim . clr-field-set!-internal)
        (g$12490$1pJll4 core-prim . clr-field-get-internal)
        (g$12489$1pJll4 core-prim . clr-cast-internal)
        (g$12488$1pJll4 core-prim . clr-call-internal)
        (g$12487$1pJll4 core-prim . clr-new-internal)
        (g$12486$1pJll4 core-prim . clr-new-array-internal)
        (g$12485$1pJll4 core-prim . clr-is-internal)
        (g$12484$1pJll4 core-prim . clr-reference-internal)
        (g$12483$1pJll4 core-prim . clr-using-internal)
        (g$12482$1pJll4 core-prim . clr-clear-usings-internal)
        (g$8964$1pJll4 core-prim . syntax-error)
        (g$8835$1pJll4 core-prim . syntax-dispatch)
        (g$12481$1pJll4 core-prim . compile-core)
        (g$12480$1pJll4 core-prim . eval-core)
        (g$12479$1pJll4 core-prim . set-symbol-value!)
        (g$12478$1pJll4 core-prim . symbol-value)
        (g$12477$1pJll4 core-prim . ungensym)
        (g$12476$1pJll4 core-prim . gensym)
        (g$12475$1pJll4 core-prim . void)
        (g$12474$1pJll4 core-prim . load-serialized-library)
        (g$12473$1pJll4 core-prim . serialize-library)
        (g$11915$1pJll4 core-prim . compile-system-libraries)
        (g$11917$1pJll4 core-prim . compile->closure)
        (g$11916$1pJll4 core-prim . compile)
        (g$11912$1pJll4 core-prim . load)
        (g$8973$1pJll4 core-prim . interaction-environment)
        (g$12472$1pJll4 core-prim . char-ready?)
        (g$12471$1pJll4 core-prim . string-upcase)
        (g$12470$1pJll4 core-prim . string-titlecase)
        (g$12469$1pJll4 core-prim . string-normalize-nfkd)
        (g$12468$1pJll4 core-prim . string-normalize-nfkc)
        (g$12467$1pJll4 core-prim . string-normalize-nfd)
        (g$12466$1pJll4 core-prim . string-normalize-nfc)
        (g$12465$1pJll4 core-prim . string-foldcase)
        (g$12464$1pJll4 core-prim . string-downcase)
        (g$7040$1pJll4 core-prim . string-ci>?)
        (g$7042$1pJll4 core-prim . string-ci>=?)
        (g$7038$1pJll4 core-prim . string-ci=?)
        (g$7039$1pJll4 core-prim . string-ci<?)
        (g$7041$1pJll4 core-prim . string-ci<=?)
        (g$12463$1pJll4 core-prim . char-whitespace?)
        (g$12462$1pJll4 core-prim . char-upper-case?)
        (g$12461$1pJll4 core-prim . char-title-case?)
        (g$12460$1pJll4 core-prim . char-numeric?)
        (g$12459$1pJll4 core-prim . char-lower-case?)
        (g$12458$1pJll4 core-prim . char-general-category)
        (g$12457$1pJll4 core-prim . char-upcase)
        (g$12456$1pJll4 core-prim . char-titlecase)
        (g$12455$1pJll4 core-prim . char-foldcase)
        (g$12454$1pJll4 core-prim . char-downcase)
        (g$7091$1pJll4 core-prim . char-ci>?)
        (g$7093$1pJll4 core-prim . char-ci>=?)
        (g$7089$1pJll4 core-prim . char-ci=?)
        (g$7090$1pJll4 core-prim . char-ci<?)
        (g$7092$1pJll4 core-prim . char-ci<=?)
        (g$12453$1pJll4 core-prim . char-alphabetic?)
        (g$8572$1pJll4 core-prim . variable-transformer-procedure)
        (g$8571$1pJll4 core-prim . variable-transformer?)
        (g$8570$1pJll4 core-prim . make-variable-transformer)
        (g$8968$1pJll4 core-prim . identifier?)
        (g$8957$1pJll4 core-prim . generate-temporaries)
        (g$8958$1pJll4 core-prim . free-identifier=?)
        (g$8970$1pJll4 core-prim . syntax->datum)
        (g$8969$1pJll4 core-prim . datum->syntax)
        (g$8959$1pJll4 core-prim . bound-identifier=?)
        (g$12452$1pJll4 core-prim . record-type-descriptor?)
        (g$12451$1pJll4 core-prim . record-predicate)
        (g$12450$1pJll4 core-prim . record-mutator)
        (g$12449$1pJll4 core-prim . record-constructor)
        (g$12448$1pJll4 core-prim . record-accessor)
        (g$12447$1pJll4 core-prim . make-record-type-descriptor)
        (g$12446$1pJll4 core-prim . make-record-constructor-descriptor)
        (g$12445$1pJll4 core-prim . record?)
        (g$12444$1pJll4 core-prim . record-type-uid)
        (g$12443$1pJll4 core-prim . record-type-sealed?)
        (g$12442$1pJll4 core-prim . record-type-parent)
        (g$12441$1pJll4 core-prim . record-type-opaque?)
        (g$12440$1pJll4 core-prim . record-type-name)
        (g$12439$1pJll4 core-prim . record-type-generative?)
        (g$12438$1pJll4 core-prim . record-type-field-names)
        (g$12437$1pJll4 core-prim . record-rtd)
        (g$12436$1pJll4 core-prim . record-field-mutable?)
        (g$6401$1pJll4 core-prim . delete-file)
        (g$6400$1pJll4 core-prim . file-exists?)
        (g$12435$1pJll4 core-prim . vector-sort!)
        (g$12434$1pJll4 core-prim . vector-sort)
        (g$6914$1pJll4 core-prim . list-sort)
        (g$12433$1pJll4 core-prim . symbol-hash)
        (g$12432$1pJll4 core-prim . string-ci-hash)
        (g$12431$1pJll4 core-prim . string-hash)
        (g$12430$1pJll4 core-prim . equal-hash)
        (g$12429$1pJll4 core-prim . hashtable-equivalence-function)
        (g$12428$1pJll4 core-prim . make-hashtable)
        (g$12427$1pJll4 core-prim . hashtable-hash-function)
        (g$6368$1pJll4 core-prim . make-eqv-hashtable)
        (g$6367$1pJll4 core-prim . make-eq-hashtable)
        (g$12426$1pJll4 core-prim . hashtable?)
        (g$6374$1pJll4 core-prim . hashtable-update!)
        (g$6369$1pJll4 core-prim . hashtable-size)
        (g$6371$1pJll4 core-prim . hashtable-set!)
        (g$6370$1pJll4 core-prim . hashtable-ref)
        (g$12425$1pJll4 core-prim . hashtable-mutable?)
        (g$12424$1pJll4 core-prim . hashtable-keys)
        (g$12423$1pJll4 core-prim . hashtable-entries)
        (g$6372$1pJll4 core-prim . hashtable-delete!)
        (g$12422$1pJll4 core-prim . hashtable-copy)
        (g$6373$1pJll4 core-prim . hashtable-contains?)
        (g$6375$1pJll4 core-prim . hashtable-clear!)
        (g$7510$1pJll4 core-prim . call-with-output-file)
        (g$7509$1pJll4 core-prim . call-with-input-file)
        (g$12421$1pJll4 core-prim . write-char)
        (g$12420$1pJll4 core-prim . write)
        (g$7508$1pJll4 core-prim . with-output-to-file)
        (g$7507$1pJll4 core-prim . with-input-from-file)
        (g$12419$1pJll4 core-prim . read-char)
        (g$12418$1pJll4 core-prim . read)
        (g$12417$1pJll4 core-prim . peek-char)
        (g$12416$1pJll4 core-prim . open-output-file)
        (g$12415$1pJll4 core-prim . open-input-file)
        (g$12414$1pJll4 core-prim . newline)
        (g$12413$1pJll4 core-prim . display)
        (g$12412$1pJll4 core-prim . close-output-port)
        (g$12411$1pJll4 core-prim . close-input-port)
        (g$12410$1pJll4 core-prim . eof-object?)
        (g$12409$1pJll4 core-prim . eof-object)
        (g$12408$1pJll4 core-prim . current-error-port)
        (g$12407$1pJll4 core-prim . current-output-port)
        (g$12406$1pJll4 core-prim . current-input-port)
        (g$12405$1pJll4 core-prim . output-port?)
        (g$12404$1pJll4 core-prim . input-port?)
        (g$12403$1pJll4 core-prim . utf-8-codec)
        (g$12402$1pJll4 core-prim . utf-16-codec)
        (g$12401$1pJll4 core-prim . transcoder-error-handling-mode)
        (g$12400$1pJll4 core-prim . transcoder-eol-style)
        (g$12399$1pJll4 core-prim . transcoder-codec)
        (g$12398$1pJll4 core-prim . transcoded-port)
        (g$12397$1pJll4 core-prim . textual-port?)
        (g$12396$1pJll4 core-prim . string->bytevector)
        (g$12395$1pJll4 core-prim . standard-output-port)
        (g$12394$1pJll4 core-prim . standard-input-port)
        (g$12393$1pJll4 core-prim . standard-error-port)
        (g$12392$1pJll4 core-prim . set-port-position!)
        (g$12391$1pJll4 core-prim . put-u8)
        (g$12390$1pJll4 core-prim . put-string)
        (g$12389$1pJll4 core-prim . put-datum)
        (g$12388$1pJll4 core-prim . put-char)
        (g$12387$1pJll4 core-prim . put-bytevector)
        (g$7486$1pJll4 core-prim . port?)
        (g$12386$1pJll4 core-prim . port-transcoder)
        (g$12385$1pJll4 core-prim . port-position)
        (g$12384$1pJll4 core-prim . port-has-set-port-position!?)
        (g$12383$1pJll4 core-prim . port-has-port-position?)
        (g$12382$1pJll4 core-prim . port-eof?)
        (g$12381$1pJll4 core-prim . output-port-buffer-mode)
        (g$7485$1pJll4 core-prim . open-string-output-port)
        (g$12380$1pJll4 core-prim . open-string-input-port)
        (g$12379$1pJll4 core-prim . open-file-output-port)
        (g$12378$1pJll4 core-prim . open-file-input/output-port)
        (g$12377$1pJll4 core-prim . open-file-input-port)
        (g$12376$1pJll4 core-prim . open-bytevector-output-port)
        (g$12375$1pJll4 core-prim . open-bytevector-input-port)
        (g$12374$1pJll4 core-prim . native-transcoder)
        (g$12373$1pJll4 core-prim . native-eol-style)
        (g$12372$1pJll4 core-prim . make-transcoder)
        (g$12371$1pJll4 core-prim . latin-1-codec)
        (g$7342$1pJll4 core-prim . make-i/o-write-error)
        (g$7328$1pJll4 core-prim . make-i/o-read-error)
        (g$7447$1pJll4 core-prim . make-i/o-port-error)
        (g$7357$1pJll4 core-prim . make-i/o-invalid-position-error)
        (g$7374$1pJll4 core-prim . make-i/o-filename-error)
        (g$7390$1pJll4 core-prim . make-i/o-file-protection-error)
        (g$7404$1pJll4 core-prim . make-i/o-file-is-read-only-error)
        (g$7432$1pJll4 core-prim . make-i/o-file-does-not-exist-error)
        (g$7418$1pJll4 core-prim . make-i/o-file-already-exists-error)
        (g$7314$1pJll4 core-prim . make-i/o-error)
        (g$7478$1pJll4 core-prim . make-i/o-encoding-error)
        (g$7463$1pJll4 core-prim . make-i/o-decoding-error)
        (g$12370$1pJll4 core-prim . make-custom-textual-output-port)
        (g$12369$1pJll4 core-prim . make-custom-textual-input/output-port)
        (g$12368$1pJll4 core-prim . make-custom-textual-input-port)
        (g$12367$1pJll4 core-prim . make-custom-binary-output-port)
        (g$12366$1pJll4 core-prim . make-custom-binary-input/output-port)
        (g$12365$1pJll4 core-prim . make-custom-binary-input-port)
        (g$12364$1pJll4 core-prim . make-bytevector)
        (g$12363$1pJll4 core-prim . lookahead-u8)
        (g$12362$1pJll4 core-prim . lookahead-char)
        (g$7343$1pJll4 core-prim . i/o-write-error?)
        (g$7329$1pJll4 core-prim . i/o-read-error?)
        (g$7449$1pJll4 core-prim . i/o-port-error?)
        (g$7359$1pJll4 core-prim . i/o-invalid-position-error?)
        (g$7360$1pJll4 core-prim . i/o-error-position)
        (g$7376$1pJll4 core-prim . i/o-filename-error?)
        (g$7391$1pJll4 core-prim . i/o-file-protection-error?)
        (g$7405$1pJll4 core-prim . i/o-file-is-read-only-error?)
        (g$7433$1pJll4 core-prim . i/o-file-does-not-exist-error?)
        (g$7419$1pJll4 core-prim . i/o-file-already-exists-error?)
        (g$7315$1pJll4 core-prim . i/o-error?)
        (g$7450$1pJll4 core-prim . i/o-error-port)
        (g$7377$1pJll4 core-prim . i/o-error-filename)
        (g$7480$1pJll4 core-prim . i/o-encoding-error?)
        (g$7481$1pJll4 core-prim . i/o-encoding-error-char)
        (g$7464$1pJll4 core-prim . i/o-decoding-error?)
        (g$12361$1pJll4 core-prim . get-u8)
        (g$12360$1pJll4 core-prim . get-string-n!)
        (g$12359$1pJll4 core-prim . get-string-n)
        (g$12358$1pJll4 core-prim . get-string-all)
        (g$12357$1pJll4 core-prim . get-line)
        (g$12356$1pJll4 core-prim . get-datum)
        (g$12355$1pJll4 core-prim . get-char)
        (g$12354$1pJll4 core-prim . get-bytevector-some)
        (g$12353$1pJll4 core-prim . get-bytevector-n!)
        (g$12352$1pJll4 core-prim . get-bytevector-n)
        (g$12351$1pJll4 core-prim . get-bytevector-all)
        (g$12350$1pJll4 core-prim . flush-output-port)
        (g$12349$1pJll4 core-prim . close-port)
        (g$12348$1pJll4 core-prim . call-with-string-output-port)
        (g$12347$1pJll4 core-prim . call-with-port)
        (g$12346$1pJll4 core-prim . call-with-bytevector-output-port)
        (g$12345$1pJll4 core-prim . bytevector->string)
        (g$12344$1pJll4 core-prim . buffer-mode?)
        (g$12343$1pJll4 core-prim . binary-port?)
        (g$8948$1pJll4 core-prim . scheme-report-environment)
        (g$6894$1pJll4 core-prim . quotient)
        (g$8947$1pJll4 core-prim . null-environment)
        (g$6895$1pJll4 core-prim . remainder)
        (g$6896$1pJll4 core-prim . modulo)
        (g$12342$1pJll4 core-prim . inexact->exact)
        (g$6898$1pJll4 core-prim . force)
        (g$12341$1pJll4 core-prim . exact->inexact)
        (g$12340$1pJll4 core-prim . exit)
        (g$11909$1pJll4 core-prim . command-line)
        (g$12339$1pJll4 core-prim . string-fill!)
        (g$12338$1pJll4 core-prim . string-set!)
        (g$12337$1pJll4 core-prim . set-cdr!)
        (g$12336$1pJll4 core-prim . set-car!)
        (g$6481$1pJll4 core-prim . remove)
        (g$6482$1pJll4 core-prim . remv)
        (g$6467$1pJll4 core-prim . remp)
        (g$6483$1pJll4 core-prim . remq)
        (g$6466$1pJll4 core-prim . partition)
        (g$12335$1pJll4 core-prim . memv)
        (g$12334$1pJll4 core-prim . memq)
        (g$6473$1pJll4 core-prim . memp)
        (g$6472$1pJll4 core-prim . member)
        (g$6477$1pJll4 core-prim . exists)
        (g$6476$1pJll4 core-prim . for-all)
        (g$6480$1pJll4 core-prim . fold-right)
        (g$6479$1pJll4 core-prim . fold-left)
        (g$6465$1pJll4 core-prim . find)
        (g$6468$1pJll4 core-prim . filter)
        (g$6478$1pJll4 core-prim . cons*)
        (g$6469$1pJll4 core-prim . assv)
        (g$12333$1pJll4 core-prim . assq)
        (g$6471$1pJll4 core-prim . assp)
        (g$6470$1pJll4 core-prim . assoc)
        (g$12332$1pJll4 core-prim . with-exception-handler)
        (g$12331$1pJll4 core-prim . raise-continuable)
        (g$12330$1pJll4 core-prim . raise)
        (g$8950$1pJll4 core-prim . eval)
        (g$8946$1pJll4 core-prim . environment)
        (g$7568$1pJll4 core-prim . make-enumeration)
        (g$7575$1pJll4 core-prim . enum-set=?)
        (g$7569$1pJll4 core-prim . enum-set-universe)
        (g$7576$1pJll4 core-prim . enum-set-union)
        (g$7574$1pJll4 core-prim . enum-set-subset?)
        (g$7580$1pJll4 core-prim . enum-set-projection)
        (g$7573$1pJll4 core-prim . enum-set-member?)
        (g$7577$1pJll4 core-prim . enum-set-intersection)
        (g$7570$1pJll4 core-prim . enum-set-indexer)
        (g$7578$1pJll4 core-prim . enum-set-difference)
        (g$7571$1pJll4 core-prim . enum-set-constructor)
        (g$7579$1pJll4 core-prim . enum-set-complement)
        (g$7572$1pJll4 core-prim . enum-set->list)
        (g$6805$1pJll4 core-prim . who-condition?)
        (g$6716$1pJll4 core-prim . warning?)
        (g$6758$1pJll4 core-prim . violation?)
        (g$6882$1pJll4 core-prim . undefined-violation?)
        (g$6866$1pJll4 core-prim . syntax-violation?)
        (g$6868$1pJll4 core-prim . syntax-violation-subform)
        (g$6867$1pJll4 core-prim . syntax-violation-form)
        (g$8967$1pJll4 core-prim . syntax-violation)
        (g$12329$1pJll4 core-prim . simple-conditions)
        (g$6730$1pJll4 core-prim . serious-condition?)
        (g$6820$1pJll4 core-prim . non-continuable-violation?)
        (g$6701$1pJll4 core-prim . message-condition?)
        (g$6803$1pJll4 core-prim . make-who-condition)
        (g$6715$1pJll4 core-prim . make-warning)
        (g$6757$1pJll4 core-prim . make-violation)
        (g$6881$1pJll4 core-prim . make-undefined-violation)
        (g$6863$1pJll4 core-prim . make-syntax-violation)
        (g$6729$1pJll4 core-prim . make-serious-condition)
        (g$6819$1pJll4 core-prim . make-non-continuable-violation)
        (g$6699$1pJll4 core-prim . make-message-condition)
        (g$6847$1pJll4 core-prim . make-lexical-violation)
        (g$6786$1pJll4 core-prim . make-irritants-condition)
        (g$6833$1pJll4 core-prim . make-implementation-restriction-violation)
        (g$6743$1pJll4 core-prim . make-error)
        (g$6771$1pJll4 core-prim . make-assertion-violation)
        (g$6848$1pJll4 core-prim . lexical-violation?)
        (g$6788$1pJll4 core-prim . irritants-condition?)
        (g$6834$1pJll4 core-prim . implementation-restriction-violation?)
        (g$6744$1pJll4 core-prim . error?)
        (g$6806$1pJll4 core-prim . condition-who)
        (g$12328$1pJll4 core-prim . condition-predicate)
        (g$6702$1pJll4 core-prim . condition-message)
        (g$6789$1pJll4 core-prim . condition-irritants)
        (g$12327$1pJll4 core-prim . condition-accessor)
        (g$12326$1pJll4 core-prim . condition)
        (g$6772$1pJll4 core-prim . assertion-violation?)
        (g$12325$1pJll4 core-prim . condition?)
        (g$12324$1pJll4 core-prim . utf32->string)
        (g$12323$1pJll4 core-prim . utf16->string)
        (g$12322$1pJll4 core-prim . utf8->string)
        (g$12321$1pJll4 core-prim . uint-list->bytevector)
        (g$12320$1pJll4 core-prim . u8-list->bytevector)
        (g$12319$1pJll4 core-prim . string->utf8)
        (g$12318$1pJll4 core-prim . string->utf32)
        (g$12317$1pJll4 core-prim . string->utf16)
        (g$12316$1pJll4 core-prim . sint-list->bytevector)
        (g$6557$1pJll4 core-prim . native-endianness)
        (g$12315$1pJll4 core-prim . bytevector?)
        (g$12314$1pJll4 core-prim . bytevector=?)
        (g$12313$1pJll4 core-prim . bytevector-uint-set!)
        (g$12312$1pJll4 core-prim . bytevector-uint-ref)
        (g$12311$1pJll4 core-prim . bytevector-u8-set!)
        (g$12310$1pJll4 core-prim . bytevector-u8-ref)
        (g$6578$1pJll4 core-prim . bytevector-u64-set!)
        (g$6574$1pJll4 core-prim . bytevector-u64-ref)
        (g$6580$1pJll4 core-prim . bytevector-u64-native-set!)
        (g$6576$1pJll4 core-prim . bytevector-u64-native-ref)
        (g$6570$1pJll4 core-prim . bytevector-u32-set!)
        (g$6566$1pJll4 core-prim . bytevector-u32-ref)
        (g$6572$1pJll4 core-prim . bytevector-u32-native-set!)
        (g$6568$1pJll4 core-prim . bytevector-u32-native-ref)
        (g$6562$1pJll4 core-prim . bytevector-u16-set!)
        (g$6558$1pJll4 core-prim . bytevector-u16-ref)
        (g$6564$1pJll4 core-prim . bytevector-u16-native-set!)
        (g$6560$1pJll4 core-prim . bytevector-u16-native-ref)
        (g$12309$1pJll4 core-prim . bytevector-sint-set!)
        (g$12308$1pJll4 core-prim . bytevector-sint-ref)
        (g$12307$1pJll4 core-prim . bytevector-s8-set!)
        (g$12306$1pJll4 core-prim . bytevector-s8-ref)
        (g$6579$1pJll4 core-prim . bytevector-s64-set!)
        (g$6575$1pJll4 core-prim . bytevector-s64-ref)
        (g$6581$1pJll4 core-prim . bytevector-s64-native-set!)
        (g$6577$1pJll4 core-prim . bytevector-s64-native-ref)
        (g$6571$1pJll4 core-prim . bytevector-s32-set!)
        (g$6567$1pJll4 core-prim . bytevector-s32-ref)
        (g$6573$1pJll4 core-prim . bytevector-s32-native-set!)
        (g$6569$1pJll4 core-prim . bytevector-s32-native-ref)
        (g$6563$1pJll4 core-prim . bytevector-s16-set!)
        (g$6559$1pJll4 core-prim . bytevector-s16-ref)
        (g$6565$1pJll4 core-prim . bytevector-s16-native-set!)
        (g$6561$1pJll4 core-prim . bytevector-s16-native-ref)
        (g$12305$1pJll4 core-prim . bytevector-length)
        (g$12304$1pJll4 core-prim . bytevector-ieee-single-set!)
        (g$12303$1pJll4 core-prim . bytevector-ieee-single-ref)
        (g$6584$1pJll4 core-prim . bytevector-ieee-single-native-set!)
        (g$6582$1pJll4 core-prim . bytevector-ieee-single-native-ref)
        (g$12302$1pJll4 core-prim . bytevector-ieee-double-set!)
        (g$12301$1pJll4 core-prim . bytevector-ieee-double-ref)
        (g$6585$1pJll4 core-prim . bytevector-ieee-double-native-set!)
        (g$6583$1pJll4 core-prim . bytevector-ieee-double-native-ref)
        (g$12300$1pJll4 core-prim . bytevector-fill!)
        (g$12299$1pJll4 core-prim . bytevector-copy!)
        (g$12298$1pJll4 core-prim . bytevector-copy)
        (g$12297$1pJll4 core-prim . bytevector->uint-list)
        (g$12296$1pJll4 core-prim . bytevector->u8-list)
        (g$12295$1pJll4 core-prim . bytevector->sint-list)
        (g$7300$1pJll4 core-prim . no-nans-violation?)
        (g$7286$1pJll4 core-prim . no-infinities-violation?)
        (g$7299$1pJll4 core-prim . make-no-nans-violation)
        (g$7285$1pJll4 core-prim . make-no-infinities-violation)
        (g$12294$1pJll4 core-prim . real->flonum)
        (g$12293$1pJll4 core-prim . flzero?)
        (g$12292$1pJll4 core-prim . fltruncate)
        (g$12291$1pJll4 core-prim . fltan)
        (g$12290$1pJll4 core-prim . flsqrt)
        (g$12289$1pJll4 core-prim . flsin)
        (g$12288$1pJll4 core-prim . flround)
        (g$12287$1pJll4 core-prim . flpositive?)
        (g$12286$1pJll4 core-prim . flonum?)
        (g$12285$1pJll4 core-prim . flodd?)
        (g$12284$1pJll4 core-prim . flnumerator)
        (g$12283$1pJll4 core-prim . flnegative?)
        (g$12282$1pJll4 core-prim . flnan?)
        (g$12281$1pJll4 core-prim . flmod0)
        (g$12280$1pJll4 core-prim . flmod)
        (g$12279$1pJll4 core-prim . flmin)
        (g$12278$1pJll4 core-prim . flmax)
        (g$12277$1pJll4 core-prim . fllog)
        (g$12276$1pJll4 core-prim . flinteger?)
        (g$12275$1pJll4 core-prim . flinfinite?)
        (g$12274$1pJll4 core-prim . flfloor)
        (g$12273$1pJll4 core-prim . flfinite?)
        (g$12272$1pJll4 core-prim . flexpt)
        (g$12271$1pJll4 core-prim . flexp)
        (g$12270$1pJll4 core-prim . fleven?)
        (g$12269$1pJll4 core-prim . fldiv0-and-mod0)
        (g$12268$1pJll4 core-prim . fldiv0)
        (g$12267$1pJll4 core-prim . fldiv-and-mod)
        (g$12266$1pJll4 core-prim . fldiv)
        (g$12265$1pJll4 core-prim . fldenominator)
        (g$12264$1pJll4 core-prim . flcos)
        (g$12263$1pJll4 core-prim . flceiling)
        (g$12262$1pJll4 core-prim . flatan)
        (g$12261$1pJll4 core-prim . flasin)
        (g$12260$1pJll4 core-prim . flacos)
        (g$12259$1pJll4 core-prim . flabs)
        (g$12258$1pJll4 core-prim . fl>?)
        (g$12257$1pJll4 core-prim . fl>=?)
        (g$12256$1pJll4 core-prim . fl=?)
        (g$12255$1pJll4 core-prim . fl<?)
        (g$12254$1pJll4 core-prim . fl<=?)
        (g$12253$1pJll4 core-prim . fl/)
        (g$12252$1pJll4 core-prim . fl-)
        (g$12251$1pJll4 core-prim . fl+)
        (g$12250$1pJll4 core-prim . fl*)
        (g$12249$1pJll4 core-prim . fixnum->flonum)
        (g$12248$1pJll4 core-prim . fxzero?)
        (g$12247$1pJll4 core-prim . fxxor)
        (g$7231$1pJll4 core-prim . fxrotate-bit-field)
        (g$12246$1pJll4 core-prim . fxreverse-bit-field)
        (g$12245$1pJll4 core-prim . fxpositive?)
        (g$12244$1pJll4 core-prim . fxodd?)
        (g$12243$1pJll4 core-prim . fxnot)
        (g$12242$1pJll4 core-prim . fxnegative?)
        (g$12241$1pJll4 core-prim . fxmod0)
        (g$12240$1pJll4 core-prim . fxmod)
        (g$12239$1pJll4 core-prim . fxmin)
        (g$12238$1pJll4 core-prim . fxmax)
        (g$12237$1pJll4 core-prim . fxlength)
        (g$12236$1pJll4 core-prim . fxior)
        (g$7225$1pJll4 core-prim . fxif)
        (g$12235$1pJll4 core-prim . fxfirst-bit-set)
        (g$12234$1pJll4 core-prim . fxeven?)
        (g$12233$1pJll4 core-prim . fxdiv0-and-mod0)
        (g$12232$1pJll4 core-prim . fxdiv0)
        (g$12231$1pJll4 core-prim . fxdiv-and-mod)
        (g$12230$1pJll4 core-prim . fxdiv)
        (g$7228$1pJll4 core-prim . fxcopy-bit-field)
        (g$7226$1pJll4 core-prim . fxcopy-bit)
        (g$12229$1pJll4 core-prim . fxbit-set?)
        (g$7227$1pJll4 core-prim . fxbit-field)
        (g$12228$1pJll4 core-prim . fxbit-count)
        (g$7230$1pJll4 core-prim . fxarithmetic-shift-right)
        (g$7229$1pJll4 core-prim . fxarithmetic-shift-left)
        (g$12227$1pJll4 core-prim . fxarithmetic-shift)
        (g$12226$1pJll4 core-prim . fxand)
        (g$12225$1pJll4 core-prim . fx>?)
        (g$12224$1pJll4 core-prim . fx>=?)
        (g$12223$1pJll4 core-prim . fx=?)
        (g$12222$1pJll4 core-prim . fx<?)
        (g$12221$1pJll4 core-prim . fx<=?)
        (g$12220$1pJll4 core-prim . fx-/carry)
        (g$12219$1pJll4 core-prim . fx-)
        (g$12218$1pJll4 core-prim . fx+/carry)
        (g$12217$1pJll4 core-prim . fx+)
        (g$12216$1pJll4 core-prim . fx*/carry)
        (g$12215$1pJll4 core-prim . fx*)
        (g$12214$1pJll4 core-prim . greatest-fixnum)
        (g$12213$1pJll4 core-prim . least-fixnum)
        (g$12212$1pJll4 core-prim . fixnum-width)
        (g$12211$1pJll4 core-prim . fixnum?)
        (g$7183$1pJll4 core-prim . bitwise-rotate-bit-field)
        (g$12210$1pJll4 core-prim . bitwise-reverse-bit-field)
        (g$12209$1pJll4 core-prim . bitwise-length)
        (g$7177$1pJll4 core-prim . bitwise-if)
        (g$12208$1pJll4 core-prim . bitwise-first-bit-set)
        (g$7180$1pJll4 core-prim . bitwise-copy-bit-field)
        (g$7178$1pJll4 core-prim . bitwise-copy-bit)
        (g$12207$1pJll4 core-prim . bitwise-bit-set?)
        (g$12206$1pJll4 core-prim . bitwise-bit-field)
        (g$12205$1pJll4 core-prim . bitwise-bit-count)
        (g$12204$1pJll4 core-prim . bitwise-xor)
        (g$12203$1pJll4 core-prim . bitwise-ior)
        (g$12202$1pJll4 core-prim . bitwise-and)
        (g$12201$1pJll4 core-prim . bitwise-not)
        (g$7182$1pJll4 core-prim . bitwise-arithmetic-shift-right)
        (g$7181$1pJll4 core-prim . bitwise-arithmetic-shift-left)
        (g$12200$1pJll4 core-prim . bitwise-arithmetic-shift)
        (g$12199$1pJll4 core-prim . zero?)
        (g$12198$1pJll4 core-prim . vector?)
        (g$12197$1pJll4 core-prim . vector-set!)
        (g$12196$1pJll4 core-prim . vector-ref)
        (g$12195$1pJll4 core-prim . vector-map)
        (g$12194$1pJll4 core-prim . vector-length)
        (g$12193$1pJll4 core-prim . vector-for-each)
        (g$12192$1pJll4 core-prim . vector-fill!)
        (g$12191$1pJll4 core-prim . vector->list)
        (g$12190$1pJll4 core-prim . vector)
        (g$12189$1pJll4 core-prim . values)
        (g$12188$1pJll4 core-prim . truncate)
        (g$12187$1pJll4 core-prim . tan)
        (g$12186$1pJll4 core-prim . symbol?)
        (g$5866$1pJll4 core-prim . symbol=?)
        (g$12185$1pJll4 core-prim . symbol->string)
        (g$12184$1pJll4 core-prim . substring)
        (g$12183$1pJll4 core-prim . string?)
        (g$5863$1pJll4 core-prim . string>?)
        (g$5865$1pJll4 core-prim . string>=?)
        (g$5861$1pJll4 core-prim . string=?)
        (g$5862$1pJll4 core-prim . string<?)
        (g$5864$1pJll4 core-prim . string<=?)
        (g$12182$1pJll4 core-prim . string-ref)
        (g$12181$1pJll4 core-prim . string-length)
        (g$12180$1pJll4 core-prim . string-for-each)
        (g$12179$1pJll4 core-prim . string-copy)
        (g$12178$1pJll4 core-prim . string-append)
        (g$12177$1pJll4 core-prim . string->symbol)
        (g$12176$1pJll4 core-prim . string->number)
        (g$12175$1pJll4 core-prim . string->list)
        (g$12174$1pJll4 core-prim . string)
        (g$12173$1pJll4 core-prim . sqrt)
        (g$12172$1pJll4 core-prim . sin)
        (g$12171$1pJll4 core-prim . round)
        (g$12170$1pJll4 core-prim . reverse)
        (g$12169$1pJll4 core-prim . real?)
        (g$12168$1pJll4 core-prim . real-valued?)
        (g$12167$1pJll4 core-prim . real-part)
        (g$5919$1pJll4 core-prim . rationalize)
        (g$12166$1pJll4 core-prim . rational?)
        (g$12165$1pJll4 core-prim . rational-valued?)
        (g$12164$1pJll4 core-prim . procedure?)
        (g$12163$1pJll4 core-prim . positive?)
        (g$12162$1pJll4 core-prim . pair?)
        (g$12161$1pJll4 core-prim . odd?)
        (g$12160$1pJll4 core-prim . numerator)
        (g$12159$1pJll4 core-prim . number?)
        (g$12158$1pJll4 core-prim . number->string)
        (g$12157$1pJll4 core-prim . null?)
        (g$12156$1pJll4 core-prim . not)
        (g$12155$1pJll4 core-prim . negative?)
        (g$12154$1pJll4 core-prim . nan?)
        (g$12153$1pJll4 core-prim . min)
        (g$12152$1pJll4 core-prim . max)
        (g$12151$1pJll4 core-prim . map)
        (g$12150$1pJll4 core-prim . make-vector)
        (g$12149$1pJll4 core-prim . make-string)
        (g$12148$1pJll4 core-prim . make-rectangular)
        (g$12147$1pJll4 core-prim . make-polar)
        (g$12146$1pJll4 core-prim . magnitude)
        (g$12145$1pJll4 core-prim . log)
        (g$12144$1pJll4 core-prim . list?)
        (g$12143$1pJll4 core-prim . list-tail)
        (g$12142$1pJll4 core-prim . list-ref)
        (g$12141$1pJll4 core-prim . list->vector)
        (g$12140$1pJll4 core-prim . list->string)
        (g$12139$1pJll4 core-prim . list)
        (g$12138$1pJll4 core-prim . length)
        (g$12137$1pJll4 core-prim . lcm)
        (g$12136$1pJll4 core-prim . integer?)
        (g$12135$1pJll4 core-prim . integer-valued?)
        (g$12134$1pJll4 core-prim . integer->char)
        (g$12133$1pJll4 core-prim . infinite?)
        (g$12132$1pJll4 core-prim . inexact?)
        (g$12131$1pJll4 core-prim . inexact)
        (g$12130$1pJll4 core-prim . imag-part)
        (g$12129$1pJll4 core-prim . gcd)
        (g$12128$1pJll4 core-prim . for-each)
        (g$12127$1pJll4 core-prim . floor)
        (g$12126$1pJll4 core-prim . finite?)
        (g$12125$1pJll4 core-prim . expt)
        (g$12124$1pJll4 core-prim . exp)
        (g$12123$1pJll4 core-prim . exact?)
        (g$12122$1pJll4 core-prim . exact-integer-sqrt)
        (g$12121$1pJll4 core-prim . exact)
        (g$12120$1pJll4 core-prim . even?)
        (g$12119$1pJll4 core-prim . error)
        (g$12118$1pJll4 core-prim . eqv?)
        (g$12117$1pJll4 core-prim . equal?)
        (g$12116$1pJll4 core-prim . eq?)
        (g$12115$1pJll4 core-prim . dynamic-wind)
        (g$12114$1pJll4 core-prim . div0-and-mod0)
        (g$12113$1pJll4 core-prim . mod0)
        (g$12112$1pJll4 core-prim . div0)
        (g$12111$1pJll4 core-prim . div-and-mod)
        (g$12110$1pJll4 core-prim . mod)
        (g$12109$1pJll4 core-prim . div)
        (g$12108$1pJll4 core-prim . denominator)
        (g$12107$1pJll4 core-prim . cos)
        (g$12106$1pJll4 core-prim . cons)
        (g$12105$1pJll4 core-prim . complex?)
        (g$12104$1pJll4 core-prim . char?)
        (g$5916$1pJll4 core-prim . char>?)
        (g$5918$1pJll4 core-prim . char>=?)
        (g$5914$1pJll4 core-prim . char=?)
        (g$5915$1pJll4 core-prim . char<?)
        (g$5917$1pJll4 core-prim . char<=?)
        (g$12103$1pJll4 core-prim . char->integer)
        (g$12102$1pJll4 core-prim . ceiling)
        (g$12101$1pJll4 core-prim . call-with-values)
        (g$12100$1pJll4 core-prim . call/cc)
        (g$12099$1pJll4 core-prim . call-with-current-continuation)
        (g$5814$1pJll4 core-prim . cddddr)
        (g$5813$1pJll4 core-prim . cdddar)
        (g$5812$1pJll4 core-prim . cddadr)
        (g$5811$1pJll4 core-prim . cddaar)
        (g$5810$1pJll4 core-prim . cdaddr)
        (g$5809$1pJll4 core-prim . cdadar)
        (g$5808$1pJll4 core-prim . cdaadr)
        (g$5807$1pJll4 core-prim . cdaaar)
        (g$5806$1pJll4 core-prim . cadddr)
        (g$5805$1pJll4 core-prim . caddar)
        (g$5804$1pJll4 core-prim . cadadr)
        (g$5803$1pJll4 core-prim . cadaar)
        (g$5802$1pJll4 core-prim . caaddr)
        (g$5801$1pJll4 core-prim . caadar)
        (g$5800$1pJll4 core-prim . caaadr)
        (g$5799$1pJll4 core-prim . caaaar)
        (g$5798$1pJll4 core-prim . cdddr)
        (g$5797$1pJll4 core-prim . cddar)
        (g$5796$1pJll4 core-prim . cdadr)
        (g$5795$1pJll4 core-prim . cdaar)
        (g$5794$1pJll4 core-prim . caddr)
        (g$5793$1pJll4 core-prim . cadar)
        (g$5792$1pJll4 core-prim . caadr)
        (g$5791$1pJll4 core-prim . caaar)
        (g$5790$1pJll4 core-prim . cddr)
        (g$5789$1pJll4 core-prim . cdar)
        (g$5788$1pJll4 core-prim . cadr)
        (g$5787$1pJll4 core-prim . caar)
        (g$12098$1pJll4 core-prim . cdr)
        (g$12097$1pJll4 core-prim . car)
        (g$12096$1pJll4 core-prim . boolean?)
        (g$5867$1pJll4 core-prim . boolean=?)
        (g$12095$1pJll4 core-prim . atan)
        (g$12094$1pJll4 core-prim . assertion-violation)
        (g$12093$1pJll4 core-prim . asin)
        (g$12092$1pJll4 core-prim . apply)
        (g$12091$1pJll4 core-prim . append)
        (g$12090$1pJll4 core-prim . angle)
        (g$12089$1pJll4 core-prim . acos)
        (g$12088$1pJll4 core-prim . abs)
        (g$12087$1pJll4 core-prim . /)
        (g$12086$1pJll4 core-prim . *)
        (g$12085$1pJll4 core-prim . -)
        (g$12084$1pJll4 core-prim . +)
        (g$12083$1pJll4 core-prim . >=)
        (g$12082$1pJll4 core-prim . >)
        (g$12081$1pJll4 core-prim . =)
        (g$12080$1pJll4 core-prim . <=)
        (g$12079$1pJll4 core-prim . <)
        (g$12078$1pJll4 core-prim . make-record-printer)
        (g$12077$1pJll4 core-prim . eqv-hash)
        (g$12076$1pJll4 core-prim . eq-hash)
        (g$12075$1pJll4 core-prim . reverse!)
        (g$12074$1pJll4 core-prim . deserialize-port)
        (g$12073$1pJll4 core-prim . serialize-port)
        (g$7543$1pJll4 core-prim . enum-set?)
        (g$6897$1pJll4 core-prim . make-promise)
        (g$11911$1pJll4 core-prim . load/args)
        (g$7653$1pJll4 core-prim . printf)
        (g$7654$1pJll4 core-prim . fprintf)
        (g$7655$1pJll4 core-prim . format)
        (g$12072$1pJll4 core-prim . get-arity)
        (g$12071$1pJll4 core-prim . gc-collect)
        (g$12070$1pJll4 core-prim . clr-type?)
        (g$12069$1pJll4 core-prim . get-clr-type)
        (g$12068$1pJll4 core-prim . get-command-line)
        (g$12067$1pJll4 core-prim . vector-append)
        (g$12066$1pJll4 core-prim . vector-filter)
        (g$12065$1pJll4 core-prim . vector-reverse!)
        (g$12064$1pJll4 core-prim . vector-contains?)
        (g$12063$1pJll4 core-prim . vector-index-of)
        (g$12062$1pJll4 core-prim . vector-copy)
        (g$12061$1pJll4 core-prim . vector-binary-search)
        (g$12060$1pJll4 core-prim . get-output-string)
        (g$12059$1pJll4 core-prim . open-output-string)
        (g$12058$1pJll4 core-prim . open-input-string)
        (g$12057$1pJll4 core-prim . string-ci-compare)
        (g$12056$1pJll4 core-prim . string-compare)
        (g$12055$1pJll4 core-prim . string-format)
        (g$11908$1pJll4 core-prim . trace-printer)
        (g$12054$1pJll4 core-prim . make-traced-procedure)
        (g$7675$1pJll4 core-prim . make-traced-macro)
        (g$8963$1pJll4 core-prim . assertion-error)
        (g$12053$1pJll4 core-prim . pmap)
        (g$12052$1pJll4 core-prim . time-it)
        (g$7680$1pJll4 core-prim . make-parameter)
        (g$12051$1pJll4 core-prim . library-locator)
        (g$12050$1pJll4 core-prim . get-library-paths)
        (g$8943$1pJll4 core-prim . environment-bindings)
        (g$8942$1pJll4 core-prim . environment-symbols)
        (g$8941$1pJll4 core-prim . interaction-environment-symbols)
        (g$8110$1pJll4 core-prim . library-path)
        (g$12049$1pJll4 $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12048$1pJll4 $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12047$1pJll4 $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12046$1pJll4 $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12045$1pJll4 $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12044$1pJll4
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12043$1pJll4
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12042$1pJll4
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12041$1pJll4
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12040$1pJll4 $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12039$1pJll4
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12038$1pJll4 $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12037$1pJll4 $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12036$1pJll4 $core-rtd &i/o-rtd &i/o-rcd)
        (g$12035$1pJll4 $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12034$1pJll4 $core-rtd &undefined-rtd &undefined-rcd)
        (g$12033$1pJll4 $core-rtd &syntax-rtd &syntax-rcd)
        (g$12032$1pJll4 $core-rtd &lexical-rtd &lexical-rcd)
        (g$12031$1pJll4
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12030$1pJll4 $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12029$1pJll4 $core-rtd &who-rtd &who-rcd)
        (g$12028$1pJll4 $core-rtd &irritants-rtd &irritants-rcd)
        (g$12027$1pJll4 $core-rtd &assertion-rtd &assertion-rcd)
        (g$12026$1pJll4 $core-rtd &violation-rtd &violation-rcd)
        (g$12025$1pJll4 $core-rtd &error-rtd &error-rcd)
        (g$12024$1pJll4 $core-rtd &serious-rtd &serious-rcd)
        (g$12023$1pJll4 $core-rtd &warning-rtd &warning-rcd)
        (g$12022$1pJll4 $core-rtd &message-rtd &message-rcd)
        (g$12021$1pJll4 $core-rtd &condition-rtd &condition-rcd)
        (g$12020$1pJll4 macro . define-condition-type)
        (g$12019$1pJll4 macro . define-enumeration)
        (g$12018$1pJll4 macro . define-record-type)
        (g$12017$1pJll4 macro . parent-rtd)
        (g$12016$1pJll4 macro . nongenerative)
        (g$12015$1pJll4 macro . opaque)
        (g$12014$1pJll4 macro . sealed)
        (g$12013$1pJll4 macro . protocol)
        (g$12012$1pJll4 macro . parent)
        (g$12011$1pJll4 macro . immutable)
        (g$12010$1pJll4 macro . mutable)
        (g$12009$1pJll4 macro . fields)
        (g$12008$1pJll4 macro . error-handling-mode)
        (g$12007$1pJll4 macro . file-options)
        (g$12006$1pJll4 macro . buffer-mode)
        (g$12005$1pJll4 macro . eol-style)
        (g$12004$1pJll4 macro . guard)
        (g$12003$1pJll4 macro . trace-letrec-syntax)
        (g$12002$1pJll4 macro . trace-let-syntax)
        (g$12001$1pJll4 macro . trace-define-syntax)
        (g$12000$1pJll4 macro . trace-define)
        (g$11999$1pJll4 macro . trace-lambda)
        (g$11998$1pJll4 macro . unsyntax-splicing)
        (g$11997$1pJll4 macro . unsyntax)
        (g$11996$1pJll4 macro . unquote-splicing)
        (g$11995$1pJll4 macro . unquote)
        (g$11994$1pJll4 macro . _)
        (g$11993$1pJll4 macro . else)
        (g$11992$1pJll4 macro . =>)
        (g$11991$1pJll4 macro . ...)
        (g$11990$1pJll4 macro . assert)
        (g$11989$1pJll4 macro . endianness)
        (g$11988$1pJll4 macro . delay)
        (g$11987$1pJll4 macro . time)
        (g$11986$1pJll4 macro . or)
        (g$11985$1pJll4 macro . and)
        (g$11984$1pJll4 macro . do)
        (g$11983$1pJll4 macro . cond)
        (g$11982$1pJll4 macro . let*)
        (g$11981$1pJll4 macro . let)
        (g$11980$1pJll4 macro . identifier-syntax)
        (g$11979$1pJll4 macro . with-syntax)
        (g$11978$1pJll4 macro . quasisyntax)
        (g$11977$1pJll4 macro . quasiquote)
        (g$11976$1pJll4 macro . syntax-rules)
        (g$11975$1pJll4 macro . include-into)
        (g$11974$1pJll4 macro . include)
        (g$11973$1pJll4 macro . define-struct)
        (g$11972$1pJll4 macro . let-values)
        (g$11971$1pJll4 macro . let*-values)
        (g$11970$1pJll4 core-macro . record-constructor-descriptor)
        (g$11969$1pJll4 core-macro . record-type-descriptor)
        (g$11968$1pJll4 core-macro . fluid-let-syntax)
        (g$11967$1pJll4 macro . case)
        (g$11966$1pJll4 macro . parameterize)
        (g$11965$1pJll4 macro . unless)
        (g$11964$1pJll4 macro . when)
        (g$11963$1pJll4 core-macro . if)
        (g$11962$1pJll4 core-macro . letrec*)
        (g$11961$1pJll4 core-macro . letrec)
        (g$11960$1pJll4 core-macro . type-descriptor)
        (g$11959$1pJll4 core-macro . case-lambda)
        (g$11958$1pJll4 core-macro . lambda)
        (g$11957$1pJll4 core-macro . syntax)
        (g$11956$1pJll4 core-macro . syntax-case)
        (g$11955$1pJll4 core-macro . quote)
        (g$11954$1pJll4 core-macro . foreign-call)
        (g$11953$1pJll4 letrec-syntax)
        (g$11952$1pJll4 let-syntax)
        (g$11951$1pJll4 set!)
        (g$11950$1pJll4 import)
        (g$11949$1pJll4 library)
        (g$11948$1pJll4 begin)
        (g$11947$1pJll4 module)
        (g$11946$1pJll4 define-syntax)
        (g$11945$1pJll4 define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7188$1pJll4
      'g$12602$1pJll4
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12481$1pJll4)
        (eval-core . g$12480$1pJll4)
        (set-symbol-value! . g$12479$1pJll4)
        (symbol-value . g$12478$1pJll4)
        (gensym . g$12476$1pJll4)
        (void . g$12475$1pJll4))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11218$1pJll4
     g$trace-printer$11258$1pJll4
     (g$make-parameter$6643$1pJll4 write))
   (g$command-line$11219$1pJll4
     g$command-line$11259$1pJll4
     (g$make-parameter$6643$1pJll4 (get-command-line)))
   (g$local-library-path$11220$1pJll4
     g$local-library-path$11260$1pJll4
     (case-lambda
       ((g$filename$11231$1pJll4)
        (cons
          (g$get-directory-name$5389$1pJll4 g$filename$11231$1pJll4)
          (g$library-path$7172$1pJll4)))))
   (g$load/args$11221$1pJll4
     g$load/args$11261$1pJll4
     (case-lambda
       ((g$filename$11232$1pJll4 . g$args$11233$1pJll4)
        (begin
          (apply
            g$load-r6rs-top-level$11228$1pJll4
            g$filename$11232$1pJll4
            'load
            g$args$11233$1pJll4)
          (void)))))
   (g$load$11222$1pJll4
     g$load$11262$1pJll4
     (case-lambda
       ((g$filename$11234$1pJll4)
        (begin
          (apply
            g$load-r6rs-top-level$11228$1pJll4
            g$filename$11234$1pJll4
            'load
            (cdr (g$command-line$11219$1pJll4)))
          (void)))))
   (g$ironscheme-build$11223$1pJll4
     g$ironscheme-build$11263$1pJll4
     (case-lambda (() (g$load$11222$1pJll4 '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11224$1pJll4
     g$eval-top-level$11264$1pJll4
     (case-lambda
       ((g$x$11235$1pJll4)
        (g$eval$11193$1pJll4
          g$x$11235$1pJll4
          (g$interaction-environment$11216$1pJll4)))))
   (g$compile-system-libraries$11225$1pJll4
     g$compile-system-libraries$11265$1pJll4
     (case-lambda
       (()
        (g$eval-top-level$11224$1pJll4
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11226$1pJll4
     g$compile$11266$1pJll4
     (case-lambda
       ((g$filename$11236$1pJll4)
        (g$load-r6rs-top-level$11228$1pJll4 g$filename$11236$1pJll4 'compile))))
   (g$compile->closure$11227$1pJll4
     g$compile->closure$11267$1pJll4
     (case-lambda
       ((g$filename$11237$1pJll4)
        (g$load-r6rs-top-level$11228$1pJll4 g$filename$11237$1pJll4 'closure))))
   (g$load-r6rs-top-level$11228$1pJll4
     g$load-r6rs-top-level$11268$1pJll4
     (case-lambda
       ((g$filename$11238$1pJll4 g$how$11239$1pJll4 . g$args$11240$1pJll4)
        ((case-lambda
           ((g$library-path$11243$1pJll4 g$library-path$11244$1pJll4)
            ((case-lambda
               ((g$swap$11245$1pJll4)
                (dynamic-wind
                  g$swap$11245$1pJll4
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11246$1pJll4)
                         ((case-lambda
                            ((g$t$11247$1pJll4)
                             (if (memv g$t$11247$1pJll4 '(closure))
                               (g$pre-compile-r6rs-top-level$11215$1pJll4
                                 g$x*$11246$1pJll4)
                               (if (memv g$t$11247$1pJll4 '(load))
                                 ((case-lambda
                                    ((g$command-line$11250$1pJll4
                                       g$command-line$11251$1pJll4)
                                     ((case-lambda
                                        ((g$swap$11252$1pJll4)
                                         (dynamic-wind
                                           g$swap$11252$1pJll4
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11214$1pJll4
                                                 g$x*$11246$1pJll4))))
                                           g$swap$11252$1pJll4)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11253$1pJll4)
                                             (begin
                                               (g$command-line$11250$1pJll4
                                                 g$command-line$11251$1pJll4)
                                               (set! g$command-line$11251$1pJll4
                                                 g$t$11253$1pJll4))))
                                          (g$command-line$11250$1pJll4)))))))
                                  g$command-line$11219$1pJll4
                                  (cons
                                    g$filename$11238$1pJll4
                                    (map (case-lambda
                                           ((g$x$11254$1pJll4)
                                            (g$format$6558$1pJll4
                                              '"~a"
                                              g$x$11254$1pJll4)))
                                         g$args$11240$1pJll4)))
                                 (if (memv g$t$11247$1pJll4 '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11214$1pJll4
                                       g$x*$11246$1pJll4)
                                     (g$serialize-all$7176$1pJll4
                                       serialize-library
                                       g$compile-core-expr$6890$1pJll4))
                                   (if '#f '#f (void)))))))
                          g$how$11239$1pJll4)))
                      (g$with-input-from-file$6386$1pJll4
                        g$filename$11238$1pJll4
                        (case-lambda
                          (()
                           ((letrec ((g$f$11255$1pJll4
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11256$1pJll4)
                                              (if (eof-object? g$x$11256$1pJll4)
                                                '()
                                                (cons
                                                  g$x$11256$1pJll4
                                                  (g$f$11255$1pJll4)))))
                                           (read-annotated))))))
                              g$f$11255$1pJll4))))))))
                  g$swap$11245$1pJll4)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11257$1pJll4)
                    (begin
                      (g$library-path$11243$1pJll4 g$library-path$11244$1pJll4)
                      (set! g$library-path$11244$1pJll4 g$t$11257$1pJll4))))
                 (g$library-path$11243$1pJll4)))))))
         g$library-path$7172$1pJll4
         (g$local-library-path$11220$1pJll4 g$filename$11238$1pJll4)))))
   (g$fo$11229$1pJll4
     g$fo$11269$1pJll4
     (g$make-enumeration$6520$1pJll4 '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7177$1pJll4
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11230$1pJll4)
         (if (g$serious-condition?$5772$1pJll4 g$ex$11230$1pJll4)
           (raise g$ex$11230$1pJll4)
           (begin (display g$ex$11230$1pJll4) (newline))))))
    (set-symbol-value! 'load g$load$11222$1pJll4)
    (set-symbol-value! 'compile g$compile$11226$1pJll4)
    (set-symbol-value! 'compile->closure g$compile->closure$11227$1pJll4)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11224$1pJll4)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11184$1pJll4)
    (set-symbol-value! 'expanded2core g$expanded->core$6889$1pJll4)
    (set-symbol-value! 'trace-printer g$trace-printer$11218$1pJll4)
    (g$file-options-constructor$6644$1pJll4
      (g$enum-set-constructor$6523$1pJll4 g$fo$11229$1pJll4))
    (g$library-path$7172$1pJll4 (get-library-paths))))

