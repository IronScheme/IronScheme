;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$5477$XcRv&
     g$caar$5549$XcRv&
     (case-lambda ((g$x$5508$XcRv&) (car (car g$x$5508$XcRv&)))))
   (g$cadr$5478$XcRv&
     g$cadr$5550$XcRv&
     (case-lambda ((g$x$5509$XcRv&) (car (cdr g$x$5509$XcRv&)))))
   (g$cdar$5479$XcRv&
     g$cdar$5551$XcRv&
     (case-lambda ((g$x$5510$XcRv&) (cdr (car g$x$5510$XcRv&)))))
   (g$cddr$5480$XcRv&
     g$cddr$5552$XcRv&
     (case-lambda ((g$x$5511$XcRv&) (cdr (cdr g$x$5511$XcRv&)))))
   (g$caaar$5481$XcRv&
     g$caaar$5553$XcRv&
     (case-lambda
       ((g$x$5512$XcRv&) (g$caar$5477$XcRv& (car g$x$5512$XcRv&)))))
   (g$caadr$5482$XcRv&
     g$caadr$5554$XcRv&
     (case-lambda
       ((g$x$5513$XcRv&) (g$caar$5477$XcRv& (cdr g$x$5513$XcRv&)))))
   (g$cadar$5483$XcRv&
     g$cadar$5555$XcRv&
     (case-lambda
       ((g$x$5514$XcRv&) (g$cadr$5478$XcRv& (car g$x$5514$XcRv&)))))
   (g$caddr$5484$XcRv&
     g$caddr$5556$XcRv&
     (case-lambda
       ((g$x$5515$XcRv&) (g$cadr$5478$XcRv& (cdr g$x$5515$XcRv&)))))
   (g$cdaar$5485$XcRv&
     g$cdaar$5557$XcRv&
     (case-lambda
       ((g$x$5516$XcRv&) (g$cdar$5479$XcRv& (car g$x$5516$XcRv&)))))
   (g$cdadr$5486$XcRv&
     g$cdadr$5558$XcRv&
     (case-lambda
       ((g$x$5517$XcRv&) (g$cdar$5479$XcRv& (cdr g$x$5517$XcRv&)))))
   (g$cddar$5487$XcRv&
     g$cddar$5559$XcRv&
     (case-lambda
       ((g$x$5518$XcRv&) (g$cddr$5480$XcRv& (car g$x$5518$XcRv&)))))
   (g$cdddr$5488$XcRv&
     g$cdddr$5560$XcRv&
     (case-lambda
       ((g$x$5519$XcRv&) (g$cddr$5480$XcRv& (cdr g$x$5519$XcRv&)))))
   (g$caaaar$5489$XcRv&
     g$caaaar$5561$XcRv&
     (case-lambda
       ((g$x$5520$XcRv&) (g$caaar$5481$XcRv& (car g$x$5520$XcRv&)))))
   (g$caaadr$5490$XcRv&
     g$caaadr$5562$XcRv&
     (case-lambda
       ((g$x$5521$XcRv&) (g$caaar$5481$XcRv& (cdr g$x$5521$XcRv&)))))
   (g$caadar$5491$XcRv&
     g$caadar$5563$XcRv&
     (case-lambda
       ((g$x$5522$XcRv&) (g$caadr$5482$XcRv& (car g$x$5522$XcRv&)))))
   (g$caaddr$5492$XcRv&
     g$caaddr$5564$XcRv&
     (case-lambda
       ((g$x$5523$XcRv&) (g$caadr$5482$XcRv& (cdr g$x$5523$XcRv&)))))
   (g$cadaar$5493$XcRv&
     g$cadaar$5565$XcRv&
     (case-lambda
       ((g$x$5524$XcRv&) (g$cadar$5483$XcRv& (car g$x$5524$XcRv&)))))
   (g$cadadr$5494$XcRv&
     g$cadadr$5566$XcRv&
     (case-lambda
       ((g$x$5525$XcRv&) (g$cadar$5483$XcRv& (cdr g$x$5525$XcRv&)))))
   (g$caddar$5495$XcRv&
     g$caddar$5567$XcRv&
     (case-lambda
       ((g$x$5526$XcRv&) (g$caddr$5484$XcRv& (car g$x$5526$XcRv&)))))
   (g$cadddr$5496$XcRv&
     g$cadddr$5568$XcRv&
     (case-lambda
       ((g$x$5527$XcRv&) (g$caddr$5484$XcRv& (cdr g$x$5527$XcRv&)))))
   (g$cdaaar$5497$XcRv&
     g$cdaaar$5569$XcRv&
     (case-lambda
       ((g$x$5528$XcRv&) (g$cdaar$5485$XcRv& (car g$x$5528$XcRv&)))))
   (g$cdaadr$5498$XcRv&
     g$cdaadr$5570$XcRv&
     (case-lambda
       ((g$x$5529$XcRv&) (g$cdaar$5485$XcRv& (cdr g$x$5529$XcRv&)))))
   (g$cdadar$5499$XcRv&
     g$cdadar$5571$XcRv&
     (case-lambda
       ((g$x$5530$XcRv&) (g$cdadr$5486$XcRv& (car g$x$5530$XcRv&)))))
   (g$cdaddr$5500$XcRv&
     g$cdaddr$5572$XcRv&
     (case-lambda
       ((g$x$5531$XcRv&) (g$cdadr$5486$XcRv& (cdr g$x$5531$XcRv&)))))
   (g$cddaar$5501$XcRv&
     g$cddaar$5573$XcRv&
     (case-lambda
       ((g$x$5532$XcRv&) (g$cddar$5487$XcRv& (car g$x$5532$XcRv&)))))
   (g$cddadr$5502$XcRv&
     g$cddadr$5574$XcRv&
     (case-lambda
       ((g$x$5533$XcRv&) (g$cddar$5487$XcRv& (cdr g$x$5533$XcRv&)))))
   (g$cdddar$5503$XcRv&
     g$cdddar$5575$XcRv&
     (case-lambda
       ((g$x$5534$XcRv&) (g$cdddr$5488$XcRv& (car g$x$5534$XcRv&)))))
   (g$cddddr$5504$XcRv&
     g$cddddr$5576$XcRv&
     (case-lambda
       ((g$x$5535$XcRv&) (g$cdddr$5488$XcRv& (cdr g$x$5535$XcRv&)))))
   (g$rationalize$5505$XcRv&
     g$rationalize$5577$XcRv&
     (case-lambda
       ((g$x$5536$XcRv& g$e$5537$XcRv&)
        (apply / (g$find-ratio$5506$XcRv& g$x$5536$XcRv& g$e$5537$XcRv&)))))
   (g$find-ratio$5506$XcRv&
     g$find-ratio$5578$XcRv&
     (case-lambda
       ((g$x$5538$XcRv& g$e$5539$XcRv&)
        (g$find-ratio-between$5507$XcRv&
          (- g$x$5538$XcRv& g$e$5539$XcRv&)
          (+ g$x$5538$XcRv& g$e$5539$XcRv&)))))
   (g$find-ratio-between$5507$XcRv&
     g$find-ratio-between$5579$XcRv&
     (case-lambda
       ((g$x$5540$XcRv& g$y$5541$XcRv&)
        (letrec* ((g$sr$5542$XcRv&
                    (case-lambda
                      ((g$x$5544$XcRv& g$y$5545$XcRv&)
                       ((case-lambda
                          ((g$fx$5546$XcRv& g$fy$5547$XcRv&)
                           (if (>= g$fx$5546$XcRv& g$x$5544$XcRv&)
                             (list g$fx$5546$XcRv& '1)
                             (if (= g$fx$5546$XcRv& g$fy$5547$XcRv&)
                               ((case-lambda
                                  ((g$rat$5548$XcRv&)
                                   (list
                                     (+ (g$cadr$5478$XcRv& g$rat$5548$XcRv&)
                                        (* g$fx$5546$XcRv&
                                           (car g$rat$5548$XcRv&)))
                                     (car g$rat$5548$XcRv&))))
                                (g$sr$5542$XcRv&
                                  (/ (- g$y$5545$XcRv& g$fy$5547$XcRv&))
                                  (/ (- g$x$5544$XcRv& g$fx$5546$XcRv&))))
                               (list (+ '1 g$fx$5546$XcRv&) '1)))))
                        (exact (floor g$x$5544$XcRv&))
                        (exact (floor g$y$5545$XcRv&)))))))
          (if (< g$y$5541$XcRv& g$x$5540$XcRv&)
            (g$find-ratio-between$5507$XcRv& g$y$5541$XcRv& g$x$5540$XcRv&)
            (if (>= g$x$5540$XcRv& g$y$5541$XcRv&)
              (list g$x$5540$XcRv& '1)
              (if (positive? g$x$5540$XcRv&)
                (g$sr$5542$XcRv& g$x$5540$XcRv& g$y$5541$XcRv&)
                (if (negative? g$y$5541$XcRv&)
                  ((case-lambda
                     ((g$rat$5543$XcRv&)
                      (list
                        (- (car g$rat$5543$XcRv&))
                        (g$cadr$5478$XcRv& g$rat$5543$XcRv&))))
                   (g$sr$5542$XcRv& (- g$y$5541$XcRv&) (- g$x$5540$XcRv&)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5775$XcRv& g$using$5810$XcRv& (clr-using-internal 'system))
   (g$using$5777$XcRv&
     g$using$5811$XcRv&
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5778$XcRv&
     g$make-eq-hashtable$5812$XcRv&
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5789$XcRv&)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5789$XcRv&)))))
   (g$make-eqv-hashtable$5779$XcRv&
     g$make-eqv-hashtable$5813$XcRv&
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5790$XcRv&) (make-hashtable eqv-hash eqv? g$k$5790$XcRv&))))
   (g$hashtable-size$5780$XcRv&
     g$hashtable-size$5814$XcRv&
     (case-lambda
       ((g$ht$5791$XcRv&)
        (clr-call-internal 'hashtable 'get_count g$ht$5791$XcRv&))))
   (g$hashtable-ref$5781$XcRv&
     g$hashtable-ref$5815$XcRv&
     (case-lambda
       ((g$ht$5792$XcRv& g$key$5793$XcRv& g$default$5794$XcRv&)
        (letrec* ((g$r$5795$XcRv&
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5792$XcRv&
                      g$key$5793$XcRv&)))
          (if (not (null? g$r$5795$XcRv&))
            g$r$5795$XcRv&
            g$default$5794$XcRv&)))))
   (g$hashtable-set!$5782$XcRv&
     g$hashtable-set!$5816$XcRv&
     (case-lambda
       ((g$ht$5796$XcRv& g$key$5797$XcRv& g$obj$5798$XcRv&)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5796$XcRv&
          g$key$5797$XcRv&
          g$obj$5798$XcRv&))))
   (g$hashtable-delete!$5783$XcRv&
     g$hashtable-delete!$5817$XcRv&
     (case-lambda
       ((g$ht$5799$XcRv& g$key$5800$XcRv&)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5799$XcRv&
          g$key$5800$XcRv&))))
   (g$hashtable-contains?$5784$XcRv&
     g$hashtable-contains?$5818$XcRv&
     (case-lambda
       ((g$ht$5801$XcRv& g$key$5802$XcRv&)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5801$XcRv&
          g$key$5802$XcRv&))))
   (g$hashtable-update!$5785$XcRv&
     g$hashtable-update!$5819$XcRv&
     (case-lambda
       ((g$ht$5803$XcRv&
          g$key$5804$XcRv&
          g$proc$5805$XcRv&
          g$default$5806$XcRv&)
        (g$hashtable-set!$5782$XcRv&
          g$ht$5803$XcRv&
          g$key$5804$XcRv&
          (g$proc$5805$XcRv&
            (g$hashtable-ref$5781$XcRv&
              g$ht$5803$XcRv&
              g$key$5804$XcRv&
              g$default$5806$XcRv&))))))
   (g$hashtable-clear!$5786$XcRv&
     g$hashtable-clear!$5820$XcRv&
     (case-lambda
       ((g$ht$5807$XcRv&)
        (clr-call-internal 'hashtable 'clear g$ht$5807$XcRv&))
       ((g$ht$5808$XcRv& g$k$5809$XcRv&)
        (clr-call-internal 'hashtable 'clear g$ht$5808$XcRv&))))
   (g$clear-usings$5788$XcRv&
     g$clear-usings$5821$XcRv&
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5823$XcRv& g$using$5889$XcRv& (clr-using-internal 'system.io))
   (g$file-exists?$5824$XcRv&
     g$file-exists?$5890$XcRv&
     (case-lambda
       ((g$fn$5852$XcRv&)
        (clr-call-internal 'file 'exists '() g$fn$5852$XcRv&))))
   (g$delete-file$5825$XcRv&
     g$delete-file$5891$XcRv&
     (case-lambda
       ((g$fn$5853$XcRv&)
        (clr-call-internal 'file 'delete '() g$fn$5853$XcRv&))))
   (g$file-copy$5826$XcRv&
     g$file-copy$5892$XcRv&
     (case-lambda
       ((g$from$5854$XcRv& g$to$5855$XcRv&)
        (g$file-copy$5826$XcRv& g$from$5854$XcRv& g$to$5855$XcRv& '#f))
       ((g$from$5856$XcRv& g$to$5857$XcRv& g$overwrite?$5858$XcRv&)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5856$XcRv&
          g$to$5857$XcRv&
          g$overwrite?$5858$XcRv&))))
   (g$file-move$5827$XcRv&
     g$file-move$5893$XcRv&
     (case-lambda
       ((g$from$5859$XcRv& g$to$5860$XcRv&)
        (clr-call-internal 'file 'move '() g$from$5859$XcRv& g$to$5860$XcRv&))))
   (g$file-create-time$5828$XcRv&
     g$file-create-time$5894$XcRv&
     (case-lambda
       ((g$fn$5861$XcRv&)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5861$XcRv&))))
   (g$file-access-time$5829$XcRv&
     g$file-access-time$5895$XcRv&
     (case-lambda
       ((g$fn$5862$XcRv&)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5862$XcRv&))))
   (g$file-modified-time$5830$XcRv&
     g$file-modified-time$5896$XcRv&
     (case-lambda
       ((g$fn$5863$XcRv&)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5863$XcRv&))))
   (g$directory-exists?$5831$XcRv&
     g$directory-exists?$5897$XcRv&
     (case-lambda
       ((g$fn$5864$XcRv&)
        (clr-call-internal 'directory 'exists '() g$fn$5864$XcRv&))))
   (g$delete-directory$5832$XcRv&
     g$delete-directory$5898$XcRv&
     (case-lambda
       ((g$dir$5865$XcRv&)
        (g$delete-directory$5832$XcRv& g$dir$5865$XcRv& '#f))
       ((g$dir$5866$XcRv& g$recursive?$5867$XcRv&)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5866$XcRv&
          g$recursive?$5867$XcRv&))))
   (g$directory-move$5833$XcRv&
     g$directory-move$5899$XcRv&
     (case-lambda
       ((g$from$5868$XcRv& g$to$5869$XcRv&)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5868$XcRv&
          g$to$5869$XcRv&))))
   (g$create-directory$5834$XcRv&
     g$create-directory$5900$XcRv&
     (case-lambda
       ((g$name$5870$XcRv&)
        (clr-call-internal 'directory 'createdirectory '() g$name$5870$XcRv&))))
   (g$get-files$5835$XcRv&
     g$get-files$5901$XcRv&
     (case-lambda
       ((g$dir$5871$XcRv&) (g$get-files$5835$XcRv& g$dir$5871$XcRv& '"*"))
       ((g$dir$5872$XcRv& g$pattern$5873$XcRv&)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5872$XcRv&
          g$pattern$5873$XcRv&))))
   (g$get-directories$5836$XcRv&
     g$get-directories$5902$XcRv&
     (case-lambda
       ((g$dir$5874$XcRv&)
        (g$get-directories$5836$XcRv& g$dir$5874$XcRv& '"*"))
       ((g$dir$5875$XcRv& g$pattern$5876$XcRv&)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5875$XcRv&
          g$pattern$5876$XcRv&))))
   (g$change-extension$5837$XcRv&
     g$change-extension$5903$XcRv&
     (case-lambda
       ((g$path$5877$XcRv& g$extension$5878$XcRv&)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5877$XcRv&
          g$extension$5878$XcRv&))))
   (g$path-combine$5838$XcRv&
     g$path-combine$5904$XcRv&
     (case-lambda
       ((g$path1$5879$XcRv& g$path2$5880$XcRv&)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5879$XcRv&
          g$path2$5880$XcRv&))))
   (g$get-directory-name$5839$XcRv&
     g$get-directory-name$5905$XcRv&
     (case-lambda
       ((g$path$5881$XcRv&)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5881$XcRv&))))
   (g$get-extension$5840$XcRv&
     g$get-extension$5906$XcRv&
     (case-lambda
       ((g$path$5882$XcRv&)
        (clr-call-internal 'path 'getextension '() g$path$5882$XcRv&))))
   (g$get-filename$5841$XcRv&
     g$get-filename$5907$XcRv&
     (case-lambda
       ((g$path$5883$XcRv&)
        (clr-call-internal 'path 'getfilename '() g$path$5883$XcRv&))))
   (g$get-filename-without-extension$5842$XcRv&
     g$get-filename-without-extension$5908$XcRv&
     (case-lambda
       ((g$path$5884$XcRv&)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5884$XcRv&))))
   (g$get-full-path$5843$XcRv&
     g$get-full-path$5909$XcRv&
     (case-lambda
       ((g$path$5885$XcRv&)
        (clr-call-internal 'path 'getfullpath '() g$path$5885$XcRv&))))
   (g$get-path-root$5844$XcRv&
     g$get-path-root$5910$XcRv&
     (case-lambda
       ((g$path$5886$XcRv&)
        (clr-call-internal 'path 'getpathroot '() g$path$5886$XcRv&))))
   (g$get-random-filename$5845$XcRv&
     g$get-random-filename$5911$XcRv&
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5846$XcRv&
     g$get-temp-filename$5912$XcRv&
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5847$XcRv&
     g$get-temp-path$5913$XcRv&
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5848$XcRv&
     g$path-rooted?$5914$XcRv&
     (case-lambda
       ((g$path$5887$XcRv&)
        (clr-call-internal 'path 'ispathrooted '() g$path$5887$XcRv&))))
   (g$path-has-extension?$5849$XcRv&
     g$path-has-extension?$5915$XcRv&
     (case-lambda
       ((g$path$5888$XcRv&)
        (clr-call-internal 'path 'hasextension '() g$path$5888$XcRv&))))
   (g$clear-usings$5851$XcRv&
     g$clear-usings$5916$XcRv&
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5917$XcRv&
     g$find$6008$XcRv&
     (case-lambda
       ((g$proc$5936$XcRv& g$l$5937$XcRv&)
        (if (null? g$l$5937$XcRv&)
          '#f
          ((case-lambda
             ((g$e$5938$XcRv&)
              (if (g$proc$5936$XcRv& g$e$5938$XcRv&)
                g$e$5938$XcRv&
                (g$find$5917$XcRv& g$proc$5936$XcRv& (cdr g$l$5937$XcRv&)))))
           (car g$l$5937$XcRv&))))))
   (g$partition$5918$XcRv&
     g$partition$6009$XcRv&
     (case-lambda
       ((g$proc$5939$XcRv& g$l$5940$XcRv&)
        ((letrec ((g$f$5941$XcRv&
                    (case-lambda
                      ((g$l$5942$XcRv& g$a$5943$XcRv& g$b$5944$XcRv&)
                       (if (null? g$l$5942$XcRv&)
                         (values
                           (reverse! g$a$5943$XcRv&)
                           (reverse! g$b$5944$XcRv&))
                         ((case-lambda
                            ((g$e$5945$XcRv&)
                             (if (g$proc$5939$XcRv& g$e$5945$XcRv&)
                               (g$f$5941$XcRv&
                                 (cdr g$l$5942$XcRv&)
                                 (cons g$e$5945$XcRv& g$a$5943$XcRv&)
                                 g$b$5944$XcRv&)
                               (g$f$5941$XcRv&
                                 (cdr g$l$5942$XcRv&)
                                 g$a$5943$XcRv&
                                 (cons g$e$5945$XcRv& g$b$5944$XcRv&)))))
                          (car g$l$5942$XcRv&)))))))
           g$f$5941$XcRv&)
         g$l$5940$XcRv&
         '()
         '()))))
   (g$remp$5919$XcRv&
     g$remp$6010$XcRv&
     (case-lambda
       ((g$proc$5946$XcRv& g$l$5947$XcRv&)
        ((letrec ((g$f$5948$XcRv&
                    (case-lambda
                      ((g$l$5949$XcRv& g$a$5950$XcRv&)
                       (if (null? g$l$5949$XcRv&)
                         (reverse! g$a$5950$XcRv&)
                         ((case-lambda
                            ((g$e$5951$XcRv&)
                             (if (g$proc$5946$XcRv& g$e$5951$XcRv&)
                               (g$f$5948$XcRv&
                                 (cdr g$l$5949$XcRv&)
                                 g$a$5950$XcRv&)
                               (g$f$5948$XcRv&
                                 (cdr g$l$5949$XcRv&)
                                 (cons g$e$5951$XcRv& g$a$5950$XcRv&)))))
                          (car g$l$5949$XcRv&)))))))
           g$f$5948$XcRv&)
         g$l$5947$XcRv&
         '()))))
   (g$filter$5920$XcRv&
     g$filter$6011$XcRv&
     (case-lambda
       ((g$proc$5952$XcRv& g$l$5953$XcRv&)
        ((letrec ((g$f$5954$XcRv&
                    (case-lambda
                      ((g$l$5955$XcRv& g$a$5956$XcRv&)
                       (if (null? g$l$5955$XcRv&)
                         (reverse! g$a$5956$XcRv&)
                         ((case-lambda
                            ((g$e$5957$XcRv&)
                             (if (g$proc$5952$XcRv& g$e$5957$XcRv&)
                               (g$f$5954$XcRv&
                                 (cdr g$l$5955$XcRv&)
                                 (cons g$e$5957$XcRv& g$a$5956$XcRv&))
                               (g$f$5954$XcRv&
                                 (cdr g$l$5955$XcRv&)
                                 g$a$5956$XcRv&))))
                          (car g$l$5955$XcRv&)))))))
           g$f$5954$XcRv&)
         g$l$5953$XcRv&
         '()))))
   (g$assv$5921$XcRv&
     g$assv$6012$XcRv&
     (case-lambda
       ((g$obj$5958$XcRv& g$lst$5959$XcRv&)
        (if (null? g$lst$5959$XcRv&)
          '#f
          ((case-lambda
             ((g$c$5960$XcRv&)
              (if (eqv? g$obj$5958$XcRv& (car g$c$5960$XcRv&))
                g$c$5960$XcRv&
                (g$assv$5921$XcRv& g$obj$5958$XcRv& (cdr g$lst$5959$XcRv&)))))
           (car g$lst$5959$XcRv&))))))
   (g$assoc$5922$XcRv&
     g$assoc$6013$XcRv&
     (case-lambda
       ((g$obj$5961$XcRv& g$lst$5962$XcRv&)
        (if (null? g$lst$5962$XcRv&)
          '#f
          ((case-lambda
             ((g$c$5963$XcRv&)
              (if (equal? g$obj$5961$XcRv& (car g$c$5963$XcRv&))
                g$c$5963$XcRv&
                (g$assoc$5922$XcRv& g$obj$5961$XcRv& (cdr g$lst$5962$XcRv&)))))
           (car g$lst$5962$XcRv&))))))
   (g$assp$5923$XcRv&
     g$assp$6014$XcRv&
     (case-lambda
       ((g$p?$5964$XcRv& g$lst$5965$XcRv&)
        (if (null? g$lst$5965$XcRv&)
          '#f
          ((case-lambda
             ((g$c$5966$XcRv&)
              (if (g$p?$5964$XcRv& (car g$c$5966$XcRv&))
                g$c$5966$XcRv&
                (g$assp$5923$XcRv& g$p?$5964$XcRv& (cdr g$lst$5965$XcRv&)))))
           (car g$lst$5965$XcRv&))))))
   (g$member$5924$XcRv&
     g$member$6015$XcRv&
     (case-lambda
       ((g$obj$5967$XcRv& g$lst$5968$XcRv&)
        (if (null? g$lst$5968$XcRv&)
          '#f
          (if (equal? g$obj$5967$XcRv& (car g$lst$5968$XcRv&))
            g$lst$5968$XcRv&
            (g$member$5924$XcRv& g$obj$5967$XcRv& (cdr g$lst$5968$XcRv&)))))))
   (g$memp$5925$XcRv&
     g$memp$6016$XcRv&
     (case-lambda
       ((g$p?$5969$XcRv& g$lst$5970$XcRv&)
        (if (null? g$lst$5970$XcRv&)
          '#f
          (if (g$p?$5969$XcRv& (car g$lst$5970$XcRv&))
            g$lst$5970$XcRv&
            (g$memp$5925$XcRv& g$p?$5969$XcRv& (cdr g$lst$5970$XcRv&)))))))
   (g$all-empty?$5926$XcRv&
     g$all-empty?$6017$XcRv&
     (case-lambda
       ((g$ls$5971$XcRv&)
        ((case-lambda
           ((g$t$5972$XcRv&)
            (if g$t$5972$XcRv&
              g$t$5972$XcRv&
              (begin
                '#f
                (if (null? (car g$ls$5971$XcRv&))
                  (begin '#f (g$all-empty?$5926$XcRv& (cdr g$ls$5971$XcRv&)))
                  '#f)))))
         (null? g$ls$5971$XcRv&)))))
   (g$split$5927$XcRv&
     g$split$6018$XcRv&
     (case-lambda
       ((g$ls$5973$XcRv&)
        (if (null? g$ls$5973$XcRv&)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5927$XcRv& (cdr g$ls$5973$XcRv&))))
            (case-lambda
              ((g$cars$5974$XcRv& g$cdrs$5975$XcRv&)
               ((case-lambda
                  ((g$a$5976$XcRv&)
                   (values
                     (cons (car g$a$5976$XcRv&) g$cars$5974$XcRv&)
                     (cons (cdr g$a$5976$XcRv&) g$cdrs$5975$XcRv&))))
                (car g$ls$5973$XcRv&)))))))))
   (g$for-all$5928$XcRv&
     g$for-all$6019$XcRv&
     (case-lambda
       ((g$f$5977$XcRv& . g$args$5978$XcRv&)
        (if (g$all-empty?$5926$XcRv& g$args$5978$XcRv&)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5927$XcRv& g$args$5978$XcRv&)))
            (case-lambda
              ((g$cars$5979$XcRv& g$cdrs$5980$XcRv&)
               (if (apply g$f$5977$XcRv& g$cars$5979$XcRv&)
                 (begin
                   '#f
                   (apply
                     g$for-all$5928$XcRv&
                     g$f$5977$XcRv&
                     g$cdrs$5980$XcRv&))
                 '#f))))))))
   (g$exists$5929$XcRv&
     g$exists$6020$XcRv&
     (case-lambda
       ((g$f$5981$XcRv& . g$args$5982$XcRv&)
        (if (g$all-empty?$5926$XcRv& g$args$5982$XcRv&)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5927$XcRv& g$args$5982$XcRv&)))
            (case-lambda
              ((g$cars$5983$XcRv& g$cdrs$5984$XcRv&)
               ((case-lambda
                  ((g$t$5985$XcRv&)
                   (if g$t$5985$XcRv&
                     g$t$5985$XcRv&
                     (begin
                       '#f
                       (apply
                         g$exists$5929$XcRv&
                         g$f$5981$XcRv&
                         g$cdrs$5984$XcRv&)))))
                (apply g$f$5981$XcRv& g$cars$5983$XcRv&)))))))))
   (g$cons*$5930$XcRv&
     g$cons*$6021$XcRv&
     (case-lambda
       ((g$a$5986$XcRv& . g$rest$5987$XcRv&)
        ((letrec ((g$f$5988$XcRv&
                    (case-lambda
                      ((g$a$5989$XcRv& g$rest$5990$XcRv&)
                       (if (null? g$rest$5990$XcRv&)
                         g$a$5989$XcRv&
                         (cons
                           g$a$5989$XcRv&
                           (g$f$5988$XcRv&
                             (car g$rest$5990$XcRv&)
                             (cdr g$rest$5990$XcRv&))))))))
           g$f$5988$XcRv&)
         g$a$5986$XcRv&
         g$rest$5987$XcRv&))))
   (g$fold-left$5931$XcRv&
     g$fold-left$6022$XcRv&
     (case-lambda
       ((g$combine$5991$XcRv&
          g$nil$5992$XcRv&
          g$list1$5993$XcRv&
          .
          g$lists$5994$XcRv&)
        (if (null? g$list1$5993$XcRv&)
          g$nil$5992$XcRv&
          (apply
            g$fold-left$5931$XcRv&
            (g$cons*$5930$XcRv&
              g$combine$5991$XcRv&
              (apply
                g$combine$5991$XcRv&
                (g$cons*$5930$XcRv&
                  g$nil$5992$XcRv&
                  (car g$list1$5993$XcRv&)
                  (map car g$lists$5994$XcRv&)))
              (cdr g$list1$5993$XcRv&)
              (map cdr g$lists$5994$XcRv&)))))))
   (g$fold-right$5932$XcRv&
     g$fold-right$6023$XcRv&
     (case-lambda
       ((g$combine$5995$XcRv&
          g$nil$5996$XcRv&
          g$list1$5997$XcRv&
          .
          g$lists$5998$XcRv&)
        (if (null? g$list1$5997$XcRv&)
          g$nil$5996$XcRv&
          (apply
            g$combine$5995$XcRv&
            (append
              (list (car g$list1$5997$XcRv&))
              (map car g$lists$5998$XcRv&)
              (list
                (apply
                  g$fold-right$5932$XcRv&
                  (g$cons*$5930$XcRv&
                    g$combine$5995$XcRv&
                    g$nil$5996$XcRv&
                    (cdr g$list1$5997$XcRv&)
                    (map cdr g$lists$5998$XcRv&))))))))))
   (g$remove$5933$XcRv&
     g$remove$6024$XcRv&
     (case-lambda
       ((g$obj$5999$XcRv& g$list$6000$XcRv&)
        (g$remp$5919$XcRv&
          (case-lambda
            ((g$x$6001$XcRv&) (equal? g$obj$5999$XcRv& g$x$6001$XcRv&)))
          g$list$6000$XcRv&))))
   (g$remv$5934$XcRv&
     g$remv$6025$XcRv&
     (case-lambda
       ((g$obj$6002$XcRv& g$list$6003$XcRv&)
        (g$remp$5919$XcRv&
          (case-lambda
            ((g$x$6004$XcRv&) (eqv? g$obj$6002$XcRv& g$x$6004$XcRv&)))
          g$list$6003$XcRv&))))
   (g$remq$5935$XcRv&
     g$remq$6026$XcRv&
     (case-lambda
       ((g$obj$6005$XcRv& g$list$6006$XcRv&)
        (g$remp$5919$XcRv&
          (case-lambda ((g$x$6007$XcRv&) (eq? g$obj$6005$XcRv& g$x$6007$XcRv&)))
          g$list$6006$XcRv&)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$6027$XcRv&
     g$native-endianness$6138$XcRv&
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$6028$XcRv&
     g$bytevector-u16-ref$6139$XcRv&
     (case-lambda
       ((g$bytevector$6056$XcRv& g$k$6057$XcRv& g$endianness$6058$XcRv&)
        (bytevector-uint-ref
          g$bytevector$6056$XcRv&
          g$k$6057$XcRv&
          g$endianness$6058$XcRv&
          '2))))
   (g$bytevector-s16-ref$6029$XcRv&
     g$bytevector-s16-ref$6140$XcRv&
     (case-lambda
       ((g$bytevector$6059$XcRv& g$k$6060$XcRv& g$endianness$6061$XcRv&)
        (bytevector-sint-ref
          g$bytevector$6059$XcRv&
          g$k$6060$XcRv&
          g$endianness$6061$XcRv&
          '2))))
   (g$bytevector-u16-native-ref$6030$XcRv&
     g$bytevector-u16-native-ref$6141$XcRv&
     (case-lambda
       ((g$bytevector$6062$XcRv& g$k$6063$XcRv&)
        (bytevector-uint-ref
          g$bytevector$6062$XcRv&
          g$k$6063$XcRv&
          (g$native-endianness$6027$XcRv&)
          '2))))
   (g$bytevector-s16-native-ref$6031$XcRv&
     g$bytevector-s16-native-ref$6142$XcRv&
     (case-lambda
       ((g$bytevector$6064$XcRv& g$k$6065$XcRv&)
        (bytevector-sint-ref
          g$bytevector$6064$XcRv&
          g$k$6065$XcRv&
          (g$native-endianness$6027$XcRv&)
          '2))))
   (g$bytevector-u16-set!$6032$XcRv&
     g$bytevector-u16-set!$6143$XcRv&
     (case-lambda
       ((g$bytevector$6066$XcRv&
          g$k$6067$XcRv&
          g$n$6068$XcRv&
          g$endianness$6069$XcRv&)
        (bytevector-uint-ref
          g$bytevector$6066$XcRv&
          g$k$6067$XcRv&
          g$endianness$6069$XcRv&
          '2))))
   (g$bytevector-s16-set!$6033$XcRv&
     g$bytevector-s16-set!$6144$XcRv&
     (case-lambda
       ((g$bytevector$6070$XcRv&
          g$k$6071$XcRv&
          g$n$6072$XcRv&
          g$endianness$6073$XcRv&)
        (bytevector-sint-ref
          g$bytevector$6070$XcRv&
          g$k$6071$XcRv&
          g$endianness$6073$XcRv&
          '2))))
   (g$bytevector-u16-native-set!$6034$XcRv&
     g$bytevector-u16-native-set!$6145$XcRv&
     (case-lambda
       ((g$bytevector$6074$XcRv& g$k$6075$XcRv& g$n$6076$XcRv&)
        (bytevector-uint-ref
          g$bytevector$6074$XcRv&
          g$k$6075$XcRv&
          (g$native-endianness$6027$XcRv&)
          '2))))
   (g$bytevector-s16-native-set!$6035$XcRv&
     g$bytevector-s16-native-set!$6146$XcRv&
     (case-lambda
       ((g$bytevector$6077$XcRv& g$k$6078$XcRv& g$n$6079$XcRv&)
        (bytevector-sint-ref
          g$bytevector$6077$XcRv&
          g$k$6078$XcRv&
          (g$native-endianness$6027$XcRv&)
          '2))))
   (g$bytevector-u32-ref$6036$XcRv&
     g$bytevector-u32-ref$6147$XcRv&
     (case-lambda
       ((g$bytevector$6080$XcRv& g$k$6081$XcRv& g$endianness$6082$XcRv&)
        (bytevector-uint-ref
          g$bytevector$6080$XcRv&
          g$k$6081$XcRv&
          g$endianness$6082$XcRv&
          '4))))
   (g$bytevector-s32-ref$6037$XcRv&
     g$bytevector-s32-ref$6148$XcRv&
     (case-lambda
       ((g$bytevector$6083$XcRv& g$k$6084$XcRv& g$endianness$6085$XcRv&)
        (bytevector-sint-ref
          g$bytevector$6083$XcRv&
          g$k$6084$XcRv&
          g$endianness$6085$XcRv&
          '4))))
   (g$bytevector-u32-native-ref$6038$XcRv&
     g$bytevector-u32-native-ref$6149$XcRv&
     (case-lambda
       ((g$bytevector$6086$XcRv& g$k$6087$XcRv&)
        (bytevector-uint-ref
          g$bytevector$6086$XcRv&
          g$k$6087$XcRv&
          (g$native-endianness$6027$XcRv&)
          '4))))
   (g$bytevector-s32-native-ref$6039$XcRv&
     g$bytevector-s32-native-ref$6150$XcRv&
     (case-lambda
       ((g$bytevector$6088$XcRv& g$k$6089$XcRv&)
        (bytevector-sint-ref
          g$bytevector$6088$XcRv&
          g$k$6089$XcRv&
          (g$native-endianness$6027$XcRv&)
          '4))))
   (g$bytevector-u32-set!$6040$XcRv&
     g$bytevector-u32-set!$6151$XcRv&
     (case-lambda
       ((g$bytevector$6090$XcRv&
          g$k$6091$XcRv&
          g$n$6092$XcRv&
          g$endianness$6093$XcRv&)
        (bytevector-uint-ref
          g$bytevector$6090$XcRv&
          g$k$6091$XcRv&
          g$endianness$6093$XcRv&
          '4))))
   (g$bytevector-s32-set!$6041$XcRv&
     g$bytevector-s32-set!$6152$XcRv&
     (case-lambda
       ((g$bytevector$6094$XcRv&
          g$k$6095$XcRv&
          g$n$6096$XcRv&
          g$endianness$6097$XcRv&)
        (bytevector-sint-ref
          g$bytevector$6094$XcRv&
          g$k$6095$XcRv&
          g$endianness$6097$XcRv&
          '4))))
   (g$bytevector-u32-native-set!$6042$XcRv&
     g$bytevector-u32-native-set!$6153$XcRv&
     (case-lambda
       ((g$bytevector$6098$XcRv& g$k$6099$XcRv& g$n$6100$XcRv&)
        (bytevector-uint-ref
          g$bytevector$6098$XcRv&
          g$k$6099$XcRv&
          (g$native-endianness$6027$XcRv&)
          '4))))
   (g$bytevector-s32-native-set!$6043$XcRv&
     g$bytevector-s32-native-set!$6154$XcRv&
     (case-lambda
       ((g$bytevector$6101$XcRv& g$k$6102$XcRv& g$n$6103$XcRv&)
        (bytevector-sint-ref
          g$bytevector$6101$XcRv&
          g$k$6102$XcRv&
          (g$native-endianness$6027$XcRv&)
          '4))))
   (g$bytevector-u64-ref$6044$XcRv&
     g$bytevector-u64-ref$6155$XcRv&
     (case-lambda
       ((g$bytevector$6104$XcRv& g$k$6105$XcRv& g$endianness$6106$XcRv&)
        (bytevector-uint-ref
          g$bytevector$6104$XcRv&
          g$k$6105$XcRv&
          g$endianness$6106$XcRv&
          '8))))
   (g$bytevector-s64-ref$6045$XcRv&
     g$bytevector-s64-ref$6156$XcRv&
     (case-lambda
       ((g$bytevector$6107$XcRv& g$k$6108$XcRv& g$endianness$6109$XcRv&)
        (bytevector-sint-ref
          g$bytevector$6107$XcRv&
          g$k$6108$XcRv&
          g$endianness$6109$XcRv&
          '8))))
   (g$bytevector-u64-native-ref$6046$XcRv&
     g$bytevector-u64-native-ref$6157$XcRv&
     (case-lambda
       ((g$bytevector$6110$XcRv& g$k$6111$XcRv&)
        (bytevector-uint-ref
          g$bytevector$6110$XcRv&
          g$k$6111$XcRv&
          (g$native-endianness$6027$XcRv&)
          '8))))
   (g$bytevector-s64-native-ref$6047$XcRv&
     g$bytevector-s64-native-ref$6158$XcRv&
     (case-lambda
       ((g$bytevector$6112$XcRv& g$k$6113$XcRv&)
        (bytevector-sint-ref
          g$bytevector$6112$XcRv&
          g$k$6113$XcRv&
          (g$native-endianness$6027$XcRv&)
          '8))))
   (g$bytevector-u64-set!$6048$XcRv&
     g$bytevector-u64-set!$6159$XcRv&
     (case-lambda
       ((g$bytevector$6114$XcRv&
          g$k$6115$XcRv&
          g$n$6116$XcRv&
          g$endianness$6117$XcRv&)
        (bytevector-uint-ref
          g$bytevector$6114$XcRv&
          g$k$6115$XcRv&
          g$endianness$6117$XcRv&
          '8))))
   (g$bytevector-s64-set!$6049$XcRv&
     g$bytevector-s64-set!$6160$XcRv&
     (case-lambda
       ((g$bytevector$6118$XcRv&
          g$k$6119$XcRv&
          g$n$6120$XcRv&
          g$endianness$6121$XcRv&)
        (bytevector-sint-ref
          g$bytevector$6118$XcRv&
          g$k$6119$XcRv&
          g$endianness$6121$XcRv&
          '8))))
   (g$bytevector-u64-native-set!$6050$XcRv&
     g$bytevector-u64-native-set!$6161$XcRv&
     (case-lambda
       ((g$bytevector$6122$XcRv& g$k$6123$XcRv& g$n$6124$XcRv&)
        (bytevector-uint-ref
          g$bytevector$6122$XcRv&
          g$k$6123$XcRv&
          (g$native-endianness$6027$XcRv&)
          '8))))
   (g$bytevector-s64-native-set!$6051$XcRv&
     g$bytevector-s64-native-set!$6162$XcRv&
     (case-lambda
       ((g$bytevector$6125$XcRv& g$k$6126$XcRv& g$n$6127$XcRv&)
        (bytevector-sint-ref
          g$bytevector$6125$XcRv&
          g$k$6126$XcRv&
          (g$native-endianness$6027$XcRv&)
          '8))))
   (g$bytevector-ieee-single-native-ref$6052$XcRv&
     g$bytevector-ieee-single-native-ref$6163$XcRv&
     (case-lambda
       ((g$bytevector$6128$XcRv& g$k$6129$XcRv&)
        (bytevector-ieee-single-ref
          g$bytevector$6128$XcRv&
          g$k$6129$XcRv&
          (g$native-endianness$6027$XcRv&)))))
   (g$bytevector-ieee-double-native-ref$6053$XcRv&
     g$bytevector-ieee-double-native-ref$6164$XcRv&
     (case-lambda
       ((g$bytevector$6130$XcRv& g$k$6131$XcRv&)
        (bytevector-ieee-double-ref
          g$bytevector$6130$XcRv&
          g$k$6131$XcRv&
          (g$native-endianness$6027$XcRv&)))))
   (g$bytevector-ieee-single-native-set!$6054$XcRv&
     g$bytevector-ieee-single-native-set!$6165$XcRv&
     (case-lambda
       ((g$bytevector$6132$XcRv& g$k$6133$XcRv& g$x$6134$XcRv&)
        (bytevector-ieee-single-set!
          g$bytevector$6132$XcRv&
          g$k$6133$XcRv&
          g$x$6134$XcRv&
          (g$native-endianness$6027$XcRv&)))))
   (g$bytevector-ieee-double-native-set!$6055$XcRv&
     g$bytevector-ieee-double-native-set!$6166$XcRv&
     (case-lambda
       ((g$bytevector$6135$XcRv& g$k$6136$XcRv& g$x$6137$XcRv&)
        (bytevector-ieee-double-set!
          g$bytevector$6135$XcRv&
          g$k$6136$XcRv&
          g$x$6137$XcRv&
          (g$native-endianness$6027$XcRv&))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6889$6167$XcRv&
     g$6889$6262$XcRv&
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6892$XcRv&
       '#f
       '#f
       '#()))
   (g$6891$6168$XcRv& g$6891$6263$XcRv& '#f)
   (g$6890$6169$XcRv&
     g$6890$6264$XcRv&
     (make-record-constructor-descriptor
       g$6889$6167$XcRv&
       '#f
       g$6891$6168$XcRv&))
   (g$&condition?$6170$XcRv&
     g$&condition?$6265$XcRv&
     (record-predicate g$6889$6167$XcRv&))
   (g$make-&condition$6171$XcRv&
     g$make-&condition$6266$XcRv&
     (record-constructor g$6890$6169$XcRv&))
   (g$&condition-rtd$6172$XcRv&
     g$&condition-rtd$6267$XcRv&
     g$6889$6167$XcRv&)
   (g$&condition-rcd$6173$XcRv&
     g$&condition-rcd$6268$XcRv&
     g$6890$6169$XcRv&)
   (g$6905$6174$XcRv&
     g$6905$6269$XcRv&
     (make-record-type-descriptor
       '&message
       g$6889$6167$XcRv&
       'g$6908$XcRv&
       '#f
       '#f
       '#((immutable message))))
   (g$6907$6175$XcRv& g$6907$6270$XcRv& '#f)
   (g$6906$6176$XcRv&
     g$6906$6271$XcRv&
     (make-record-constructor-descriptor
       g$6905$6174$XcRv&
       g$6890$6169$XcRv&
       g$6907$6175$XcRv&))
   (g$6904$6177$XcRv&
     g$6904$6272$XcRv&
     (record-predicate g$6905$6174$XcRv&))
   (g$make-message-condition$6178$XcRv&
     g$make-message-condition$6273$XcRv&
     (record-constructor g$6906$6176$XcRv&))
   (g$6903$6179$XcRv&
     g$6903$6274$XcRv&
     (record-accessor g$6905$6174$XcRv& '0))
   (g$message-condition?$6180$XcRv&
     g$message-condition?$6275$XcRv&
     (condition-predicate g$6905$6174$XcRv&))
   (g$condition-message$6181$XcRv&
     g$condition-message$6276$XcRv&
     (condition-accessor g$6905$6174$XcRv& g$6903$6179$XcRv&))
   (g$6921$6182$XcRv&
     g$6921$6277$XcRv&
     (make-record-type-descriptor
       '&warning
       g$6889$6167$XcRv&
       'g$6924$XcRv&
       '#f
       '#f
       '#()))
   (g$6923$6183$XcRv& g$6923$6278$XcRv& '#f)
   (g$6922$6184$XcRv&
     g$6922$6279$XcRv&
     (make-record-constructor-descriptor
       g$6921$6182$XcRv&
       g$6890$6169$XcRv&
       g$6923$6183$XcRv&))
   (g$6920$6185$XcRv&
     g$6920$6280$XcRv&
     (record-predicate g$6921$6182$XcRv&))
   (g$make-warning$6186$XcRv&
     g$make-warning$6281$XcRv&
     (record-constructor g$6922$6184$XcRv&))
   (g$warning?$6187$XcRv&
     g$warning?$6282$XcRv&
     (condition-predicate g$6921$6182$XcRv&))
   (g$6935$6188$XcRv&
     g$6935$6283$XcRv&
     (make-record-type-descriptor
       '&serious
       g$6889$6167$XcRv&
       'g$6938$XcRv&
       '#f
       '#f
       '#()))
   (g$6937$6189$XcRv& g$6937$6284$XcRv& '#f)
   (g$6936$6190$XcRv&
     g$6936$6285$XcRv&
     (make-record-constructor-descriptor
       g$6935$6188$XcRv&
       g$6890$6169$XcRv&
       g$6937$6189$XcRv&))
   (g$6934$6191$XcRv&
     g$6934$6286$XcRv&
     (record-predicate g$6935$6188$XcRv&))
   (g$make-serious-condition$6192$XcRv&
     g$make-serious-condition$6287$XcRv&
     (record-constructor g$6936$6190$XcRv&))
   (g$serious-condition?$6193$XcRv&
     g$serious-condition?$6288$XcRv&
     (condition-predicate g$6935$6188$XcRv&))
   (g$6949$6194$XcRv&
     g$6949$6289$XcRv&
     (make-record-type-descriptor
       '&error
       g$6935$6188$XcRv&
       'g$6952$XcRv&
       '#f
       '#f
       '#()))
   (g$6951$6195$XcRv& g$6951$6290$XcRv& '#f)
   (g$6950$6196$XcRv&
     g$6950$6291$XcRv&
     (make-record-constructor-descriptor
       g$6949$6194$XcRv&
       g$6936$6190$XcRv&
       g$6951$6195$XcRv&))
   (g$6948$6197$XcRv&
     g$6948$6292$XcRv&
     (record-predicate g$6949$6194$XcRv&))
   (g$make-error$6198$XcRv&
     g$make-error$6293$XcRv&
     (record-constructor g$6950$6196$XcRv&))
   (g$error?$6199$XcRv&
     g$error?$6294$XcRv&
     (condition-predicate g$6949$6194$XcRv&))
   (g$6963$6200$XcRv&
     g$6963$6295$XcRv&
     (make-record-type-descriptor
       '&violation
       g$6935$6188$XcRv&
       'g$6966$XcRv&
       '#f
       '#f
       '#()))
   (g$6965$6201$XcRv& g$6965$6296$XcRv& '#f)
   (g$6964$6202$XcRv&
     g$6964$6297$XcRv&
     (make-record-constructor-descriptor
       g$6963$6200$XcRv&
       g$6936$6190$XcRv&
       g$6965$6201$XcRv&))
   (g$6962$6203$XcRv&
     g$6962$6298$XcRv&
     (record-predicate g$6963$6200$XcRv&))
   (g$make-violation$6204$XcRv&
     g$make-violation$6299$XcRv&
     (record-constructor g$6964$6202$XcRv&))
   (g$violation?$6205$XcRv&
     g$violation?$6300$XcRv&
     (condition-predicate g$6963$6200$XcRv&))
   (g$6977$6206$XcRv&
     g$6977$6301$XcRv&
     (make-record-type-descriptor
       '&assertion
       g$6963$6200$XcRv&
       'g$6980$XcRv&
       '#f
       '#f
       '#()))
   (g$6979$6207$XcRv& g$6979$6302$XcRv& '#f)
   (g$6978$6208$XcRv&
     g$6978$6303$XcRv&
     (make-record-constructor-descriptor
       g$6977$6206$XcRv&
       g$6964$6202$XcRv&
       g$6979$6207$XcRv&))
   (g$6976$6209$XcRv&
     g$6976$6304$XcRv&
     (record-predicate g$6977$6206$XcRv&))
   (g$make-assertion-violation$6210$XcRv&
     g$make-assertion-violation$6305$XcRv&
     (record-constructor g$6978$6208$XcRv&))
   (g$assertion-violation?$6211$XcRv&
     g$assertion-violation?$6306$XcRv&
     (condition-predicate g$6977$6206$XcRv&))
   (g$6992$6212$XcRv&
     g$6992$6307$XcRv&
     (make-record-type-descriptor
       '&irritants
       g$6889$6167$XcRv&
       'g$6995$XcRv&
       '#f
       '#f
       '#((immutable irritants))))
   (g$6994$6213$XcRv& g$6994$6308$XcRv& '#f)
   (g$6993$6214$XcRv&
     g$6993$6309$XcRv&
     (make-record-constructor-descriptor
       g$6992$6212$XcRv&
       g$6890$6169$XcRv&
       g$6994$6213$XcRv&))
   (g$6991$6215$XcRv&
     g$6991$6310$XcRv&
     (record-predicate g$6992$6212$XcRv&))
   (g$make-irritants-condition$6216$XcRv&
     g$make-irritants-condition$6311$XcRv&
     (record-constructor g$6993$6214$XcRv&))
   (g$6990$6217$XcRv&
     g$6990$6312$XcRv&
     (record-accessor g$6992$6212$XcRv& '0))
   (g$irritants-condition?$6218$XcRv&
     g$irritants-condition?$6313$XcRv&
     (condition-predicate g$6992$6212$XcRv&))
   (g$condition-irritants$6219$XcRv&
     g$condition-irritants$6314$XcRv&
     (condition-accessor g$6992$6212$XcRv& g$6990$6217$XcRv&))
   (g$7009$6220$XcRv&
     g$7009$6315$XcRv&
     (make-record-type-descriptor
       '&who
       g$6889$6167$XcRv&
       'g$7012$XcRv&
       '#f
       '#f
       '#((immutable who))))
   (g$7011$6221$XcRv& g$7011$6316$XcRv& '#f)
   (g$7010$6222$XcRv&
     g$7010$6317$XcRv&
     (make-record-constructor-descriptor
       g$7009$6220$XcRv&
       g$6890$6169$XcRv&
       g$7011$6221$XcRv&))
   (g$7008$6223$XcRv&
     g$7008$6318$XcRv&
     (record-predicate g$7009$6220$XcRv&))
   (g$make-who-condition$6224$XcRv&
     g$make-who-condition$6319$XcRv&
     (record-constructor g$7010$6222$XcRv&))
   (g$7007$6225$XcRv&
     g$7007$6320$XcRv&
     (record-accessor g$7009$6220$XcRv& '0))
   (g$who-condition?$6226$XcRv&
     g$who-condition?$6321$XcRv&
     (condition-predicate g$7009$6220$XcRv&))
   (g$condition-who$6227$XcRv&
     g$condition-who$6322$XcRv&
     (condition-accessor g$7009$6220$XcRv& g$7007$6225$XcRv&))
   (g$7025$6228$XcRv&
     g$7025$6323$XcRv&
     (make-record-type-descriptor
       '&non-continuable
       g$6963$6200$XcRv&
       'g$7028$XcRv&
       '#f
       '#f
       '#()))
   (g$7027$6229$XcRv& g$7027$6324$XcRv& '#f)
   (g$7026$6230$XcRv&
     g$7026$6325$XcRv&
     (make-record-constructor-descriptor
       g$7025$6228$XcRv&
       g$6964$6202$XcRv&
       g$7027$6229$XcRv&))
   (g$7024$6231$XcRv&
     g$7024$6326$XcRv&
     (record-predicate g$7025$6228$XcRv&))
   (g$make-non-continuable-violation$6232$XcRv&
     g$make-non-continuable-violation$6327$XcRv&
     (record-constructor g$7026$6230$XcRv&))
   (g$non-continuable-violation?$6233$XcRv&
     g$non-continuable-violation?$6328$XcRv&
     (condition-predicate g$7025$6228$XcRv&))
   (g$7039$6234$XcRv&
     g$7039$6329$XcRv&
     (make-record-type-descriptor
       '&implementation-restriction
       g$6963$6200$XcRv&
       'g$7042$XcRv&
       '#f
       '#f
       '#()))
   (g$7041$6235$XcRv& g$7041$6330$XcRv& '#f)
   (g$7040$6236$XcRv&
     g$7040$6331$XcRv&
     (make-record-constructor-descriptor
       g$7039$6234$XcRv&
       g$6964$6202$XcRv&
       g$7041$6235$XcRv&))
   (g$7038$6237$XcRv&
     g$7038$6332$XcRv&
     (record-predicate g$7039$6234$XcRv&))
   (g$make-implementation-restriction-violation$6238$XcRv&
     g$make-implementation-restriction-violation$6333$XcRv&
     (record-constructor g$7040$6236$XcRv&))
   (g$implementation-restriction-violation?$6239$XcRv&
     g$implementation-restriction-violation?$6334$XcRv&
     (condition-predicate g$7039$6234$XcRv&))
   (g$7053$6240$XcRv&
     g$7053$6335$XcRv&
     (make-record-type-descriptor
       '&lexical
       g$6963$6200$XcRv&
       'g$7056$XcRv&
       '#f
       '#f
       '#()))
   (g$7055$6241$XcRv& g$7055$6336$XcRv& '#f)
   (g$7054$6242$XcRv&
     g$7054$6337$XcRv&
     (make-record-constructor-descriptor
       g$7053$6240$XcRv&
       g$6964$6202$XcRv&
       g$7055$6241$XcRv&))
   (g$7052$6243$XcRv&
     g$7052$6338$XcRv&
     (record-predicate g$7053$6240$XcRv&))
   (g$make-lexical-violation$6244$XcRv&
     g$make-lexical-violation$6339$XcRv&
     (record-constructor g$7054$6242$XcRv&))
   (g$lexical-violation?$6245$XcRv&
     g$lexical-violation?$6340$XcRv&
     (condition-predicate g$7053$6240$XcRv&))
   (g$7069$6246$XcRv&
     g$7069$6341$XcRv&
     (make-record-type-descriptor
       '&syntax
       g$6963$6200$XcRv&
       'g$7072$XcRv&
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$7071$6247$XcRv& g$7071$6342$XcRv& '#f)
   (g$7070$6248$XcRv&
     g$7070$6343$XcRv&
     (make-record-constructor-descriptor
       g$7069$6246$XcRv&
       g$6964$6202$XcRv&
       g$7071$6247$XcRv&))
   (g$7068$6249$XcRv&
     g$7068$6344$XcRv&
     (record-predicate g$7069$6246$XcRv&))
   (g$make-syntax-violation$6250$XcRv&
     g$make-syntax-violation$6345$XcRv&
     (record-constructor g$7070$6248$XcRv&))
   (g$7066$6251$XcRv&
     g$7066$6346$XcRv&
     (record-accessor g$7069$6246$XcRv& '0))
   (g$7067$6252$XcRv&
     g$7067$6347$XcRv&
     (record-accessor g$7069$6246$XcRv& '1))
   (g$syntax-violation?$6253$XcRv&
     g$syntax-violation?$6348$XcRv&
     (condition-predicate g$7069$6246$XcRv&))
   (g$syntax-violation-form$6254$XcRv&
     g$syntax-violation-form$6349$XcRv&
     (condition-accessor g$7069$6246$XcRv& g$7066$6251$XcRv&))
   (g$syntax-violation-subform$6255$XcRv&
     g$syntax-violation-subform$6350$XcRv&
     (condition-accessor g$7069$6246$XcRv& g$7067$6252$XcRv&))
   (g$7087$6256$XcRv&
     g$7087$6351$XcRv&
     (make-record-type-descriptor
       '&undefined
       g$6963$6200$XcRv&
       'g$7090$XcRv&
       '#f
       '#f
       '#()))
   (g$7089$6257$XcRv& g$7089$6352$XcRv& '#f)
   (g$7088$6258$XcRv&
     g$7088$6353$XcRv&
     (make-record-constructor-descriptor
       g$7087$6256$XcRv&
       g$6964$6202$XcRv&
       g$7089$6257$XcRv&))
   (g$7086$6259$XcRv&
     g$7086$6354$XcRv&
     (record-predicate g$7087$6256$XcRv&))
   (g$make-undefined-violation$6260$XcRv&
     g$make-undefined-violation$6355$XcRv&
     (record-constructor g$7088$6258$XcRv&))
   (g$undefined-violation?$6261$XcRv&
     g$undefined-violation?$6356$XcRv&
     (condition-predicate g$7087$6256$XcRv&)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$6357$XcRv&
     g$append!$6363$XcRv&
     (case-lambda
       ((g$a$6358$XcRv& . g$b$6359$XcRv&)
        (if (null? g$a$6358$XcRv&)
          g$b$6359$XcRv&
          (if (null? g$b$6359$XcRv&)
            g$a$6358$XcRv&
            (begin
              ((letrec ((g$f$6360$XcRv&
                          (case-lambda
                            ((g$a$6361$XcRv&)
                             ((case-lambda
                                ((g$n$6362$XcRv&)
                                 (if (null? g$n$6362$XcRv&)
                                   (set-cdr! g$a$6361$XcRv& g$b$6359$XcRv&)
                                   (g$f$6360$XcRv& g$n$6362$XcRv&))))
                              (cdr g$a$6361$XcRv&))))))
                 g$f$6360$XcRv&)
               g$a$6358$XcRv&)
              g$a$6358$XcRv&)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$6364$XcRv&
     g$sign$6375$XcRv&
     (case-lambda
       ((g$n$6368$XcRv&)
        (if (> g$n$6368$XcRv& '0) '1 (if (< g$n$6368$XcRv& '0) '-1 '0)))))
   (g$quotient$6365$XcRv&
     g$quotient$6376$XcRv&
     (case-lambda
       ((g$n1$6369$XcRv& g$n2$6370$XcRv&)
        (* (g$sign$6364$XcRv& g$n1$6369$XcRv&)
           (g$sign$6364$XcRv& g$n2$6370$XcRv&)
           (div (abs g$n1$6369$XcRv&) (abs g$n2$6370$XcRv&))))))
   (g$remainder$6366$XcRv&
     g$remainder$6377$XcRv&
     (case-lambda
       ((g$n1$6371$XcRv& g$n2$6372$XcRv&)
        (* (g$sign$6364$XcRv& g$n1$6371$XcRv&)
           (mod (abs g$n1$6371$XcRv&) (abs g$n2$6372$XcRv&))))))
   (g$modulo$6367$XcRv&
     g$modulo$6378$XcRv&
     (case-lambda
       ((g$n1$6373$XcRv& g$n2$6374$XcRv&)
        (* (g$sign$6364$XcRv& g$n2$6374$XcRv&)
           (mod (* (g$sign$6364$XcRv& g$n2$6374$XcRv&) g$n1$6373$XcRv&)
                (abs g$n2$6374$XcRv&)))))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$6379$XcRv&
     g$split$6405$XcRv&
     (case-lambda
       ((g$ls$6382$XcRv&)
        ((letrec ((g$loop$6383$XcRv&
                    (case-lambda
                      ((g$rest$6384$XcRv& g$left$6385$XcRv& g$right$6386$XcRv&)
                       (if (null? g$rest$6384$XcRv&)
                         (cons g$left$6385$XcRv& g$right$6386$XcRv&)
                         (if (null? (cdr g$rest$6384$XcRv&))
                           (cons
                             (cons (car g$rest$6384$XcRv&) g$left$6385$XcRv&)
                             g$right$6386$XcRv&)
                           (g$loop$6383$XcRv&
                             (g$cddr$5552$XcRv& g$rest$6384$XcRv&)
                             (cons (car g$rest$6384$XcRv&) g$left$6385$XcRv&)
                             (cons
                               (g$cadr$5550$XcRv& g$rest$6384$XcRv&)
                               g$right$6386$XcRv&))))))))
           g$loop$6383$XcRv&)
         g$ls$6382$XcRv&
         '()
         '()))))
   (g$reverse-it$6380$XcRv&
     g$reverse-it$6406$XcRv&
     (case-lambda
       ((g$head$6387$XcRv& g$tail$6388$XcRv&)
        (if (null? g$head$6387$XcRv&)
          g$tail$6388$XcRv&
          ((case-lambda
             ((g$hd$6389$XcRv& g$tl$6390$XcRv&)
              (g$reverse-it$6380$XcRv&
                g$tl$6390$XcRv&
                (cons g$hd$6389$XcRv& g$tail$6388$XcRv&))))
           (car g$head$6387$XcRv&)
           (cdr g$head$6387$XcRv&))))))
   (g$list-sort$6381$XcRv&
     g$list-sort$6407$XcRv&
     (case-lambda
       ((g$precedes?$6391$XcRv& g$ls$6392$XcRv&)
        ((case-lambda
           ((g$merge$6393$XcRv&)
            ((case-lambda
               (()
                (if (null? g$ls$6392$XcRv&)
                  '()
                  ((letrec ((g$helper$6394$XcRv&
                              (case-lambda
                                ((g$piece$6395$XcRv&)
                                 (if (null? (cdr g$piece$6395$XcRv&))
                                   g$piece$6395$XcRv&
                                   ((case-lambda
                                      ((g$parts$6396$XcRv&)
                                       (g$merge$6393$XcRv&
                                         (g$helper$6394$XcRv&
                                           (car g$parts$6396$XcRv&))
                                         (g$helper$6394$XcRv&
                                           (cdr g$parts$6396$XcRv&)))))
                                    (g$split$6379$XcRv&
                                      g$piece$6395$XcRv&)))))))
                     g$helper$6394$XcRv&)
                   g$ls$6392$XcRv&)))))))
         (case-lambda
           ((g$list-1$6397$XcRv& g$list-2$6398$XcRv&)
            ((letrec ((g$loop$6399$XcRv&
                        (case-lambda
                          ((g$source-1$6400$XcRv&
                             g$source-2$6401$XcRv&
                             g$so-far$6402$XcRv&)
                           (if (null? g$source-1$6400$XcRv&)
                             (g$reverse-it$6380$XcRv&
                               g$so-far$6402$XcRv&
                               g$source-2$6401$XcRv&)
                             (if (null? g$source-2$6401$XcRv&)
                               (g$reverse-it$6380$XcRv&
                                 g$so-far$6402$XcRv&
                                 g$source-1$6400$XcRv&)
                               ((case-lambda
                                  ((g$car-1$6403$XcRv& g$car-2$6404$XcRv&)
                                   (if (g$precedes?$6391$XcRv&
                                         g$car-2$6404$XcRv&
                                         g$car-1$6403$XcRv&)
                                     (g$loop$6399$XcRv&
                                       g$source-1$6400$XcRv&
                                       (cdr g$source-2$6401$XcRv&)
                                       (cons
                                         g$car-2$6404$XcRv&
                                         g$so-far$6402$XcRv&))
                                     (g$loop$6399$XcRv&
                                       g$source-2$6401$XcRv&
                                       (cdr g$source-1$6400$XcRv&)
                                       (cons
                                         g$car-1$6403$XcRv&
                                         g$so-far$6402$XcRv&)))))
                                (car g$source-1$6400$XcRv&)
                                (car g$source-2$6401$XcRv&))))))))
               g$loop$6399$XcRv&)
             g$list-1$6397$XcRv&
             g$list-2$6398$XcRv&
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode) () (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6445$XcRv&
     g$bitwise-if$6496$XcRv&
     (case-lambda
       ((g$ei1$6453$XcRv& g$ei2$6454$XcRv& g$ei3$6455$XcRv&)
        (bitwise-ior
          (bitwise-and g$ei1$6453$XcRv& g$ei2$6454$XcRv&)
          (bitwise-and (bitwise-not g$ei1$6453$XcRv&) g$ei3$6455$XcRv&)))))
   (g$bitwise-copy-bit$6446$XcRv&
     g$bitwise-copy-bit$6497$XcRv&
     (case-lambda
       ((g$ei1$6456$XcRv& g$ei2$6457$XcRv& g$ei3$6458$XcRv&)
        ((case-lambda
           ((g$mask$6459$XcRv&)
            ((case-lambda
               (()
                (g$bitwise-if$6445$XcRv&
                  g$mask$6459$XcRv&
                  (g$bitwise-arithmetic-shift-left$6449$XcRv&
                    g$ei3$6458$XcRv&
                    g$ei2$6457$XcRv&)
                  g$ei1$6456$XcRv&))))))
         (g$bitwise-arithmetic-shift-left$6449$XcRv& '1 g$ei2$6457$XcRv&)))))
   (g$bitwise-bit-field$6447$XcRv&
     g$bitwise-bit-field$6498$XcRv&
     (case-lambda
       ((g$ei1$6460$XcRv& g$ei2$6461$XcRv& g$ei3$6462$XcRv&)
        ((case-lambda
           ((g$mask$6463$XcRv&)
            (g$bitwise-arithmetic-shift-right$6450$XcRv&
              (bitwise-and g$ei1$6460$XcRv& g$mask$6463$XcRv&)
              g$ei2$6461$XcRv&)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$6449$XcRv&
             '-1
             g$ei3$6462$XcRv&))))))
   (g$bitwise-copy-bit-field$6448$XcRv&
     g$bitwise-copy-bit-field$6499$XcRv&
     (case-lambda
       ((g$ei1$6464$XcRv& g$ei2$6465$XcRv& g$ei3$6466$XcRv& g$ei4$6467$XcRv&)
        ((case-lambda
           ((g$to$6468$XcRv&)
            ((case-lambda
               ((g$start$6469$XcRv&)
                ((case-lambda
                   ((g$end$6470$XcRv&)
                    ((case-lambda
                       ((g$from$6471$XcRv&)
                        ((case-lambda
                           ((g$mask1$6472$XcRv&)
                            ((case-lambda
                               ((g$mask2$6473$XcRv&)
                                ((case-lambda
                                   ((g$mask$6474$XcRv&)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$6445$XcRv&
                                          g$mask$6474$XcRv&
                                          (g$bitwise-arithmetic-shift-left$6449$XcRv&
                                            g$from$6471$XcRv&
                                            g$start$6469$XcRv&)
                                          g$to$6468$XcRv&))))))
                                 (bitwise-and
                                   g$mask1$6472$XcRv&
                                   g$mask2$6473$XcRv&))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$6449$XcRv&
                                 '-1
                                 g$end$6470$XcRv&)))))
                         (g$bitwise-arithmetic-shift-left$6449$XcRv&
                           '-1
                           g$start$6469$XcRv&))))
                     g$ei4$6467$XcRv&)))
                 g$ei3$6466$XcRv&)))
             g$ei2$6465$XcRv&)))
         g$ei1$6464$XcRv&))))
   (g$bitwise-arithmetic-shift-left$6449$XcRv&
     g$bitwise-arithmetic-shift-left$6500$XcRv&
     (case-lambda
       ((g$ei1$6475$XcRv& g$ei2$6476$XcRv&)
        (bitwise-arithmetic-shift g$ei1$6475$XcRv& g$ei2$6476$XcRv&))))
   (g$bitwise-arithmetic-shift-right$6450$XcRv&
     g$bitwise-arithmetic-shift-right$6501$XcRv&
     (case-lambda
       ((g$ei1$6477$XcRv& g$ei2$6478$XcRv&)
        (bitwise-arithmetic-shift g$ei1$6477$XcRv& (- g$ei2$6478$XcRv&)))))
   (g$bitwise-rotate-bit-field$6451$XcRv&
     g$bitwise-rotate-bit-field$6502$XcRv&
     (case-lambda
       ((g$ei1$6479$XcRv& g$ei2$6480$XcRv& g$ei3$6481$XcRv& g$ei4$6482$XcRv&)
        ((case-lambda
           ((g$n$6483$XcRv&)
            ((case-lambda
               ((g$start$6484$XcRv&)
                ((case-lambda
                   ((g$end$6485$XcRv&)
                    ((case-lambda
                       ((g$count$6486$XcRv&)
                        ((case-lambda
                           ((g$width$6487$XcRv&)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6487$XcRv&)
                                  ((case-lambda
                                     ((g$count$6488$XcRv&)
                                      ((case-lambda
                                         ((g$field0$6489$XcRv&)
                                          ((case-lambda
                                             ((g$field1$6490$XcRv&)
                                              ((case-lambda
                                                 ((g$field2$6491$XcRv&)
                                                  ((case-lambda
                                                     ((g$field$6492$XcRv&)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$6448$XcRv&
                                                            g$n$6483$XcRv&
                                                            g$start$6484$XcRv&
                                                            g$end$6485$XcRv&
                                                            g$field$6492$XcRv&))))))
                                                   (bitwise-ior
                                                     g$field1$6490$XcRv&
                                                     g$field2$6491$XcRv&))))
                                               (g$bitwise-arithmetic-shift-right$6450$XcRv&
                                                 g$field0$6489$XcRv&
                                                 (- g$width$6487$XcRv&
                                                    g$count$6488$XcRv&)))))
                                           (g$bitwise-arithmetic-shift-left$6449$XcRv&
                                             g$field0$6489$XcRv&
                                             g$count$6488$XcRv&))))
                                       (g$bitwise-bit-field$6447$XcRv&
                                         g$n$6483$XcRv&
                                         g$start$6484$XcRv&
                                         g$end$6485$XcRv&))))
                                   (mod g$count$6486$XcRv& g$width$6487$XcRv&))
                                  g$n$6483$XcRv&))))))
                         (- g$end$6485$XcRv& g$start$6484$XcRv&))))
                     g$ei4$6482$XcRv&)))
                 g$ei3$6481$XcRv&)))
             g$ei2$6480$XcRv&)))
         g$ei1$6479$XcRv&))))
   (g$bitwise-reverse-bit-field$6452$XcRv&
     g$bitwise-reverse-bit-field$6503$XcRv&
     (case-lambda
       ((g$ei1$6493$XcRv& g$ei2$6494$XcRv& g$ei3$6495$XcRv&) 'TODO))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$6504$XcRv&
     g$fxif$6551$XcRv&
     (case-lambda
       ((g$fx1$6511$XcRv& g$fx2$6512$XcRv& g$fx3$6513$XcRv&)
        (fxior
          (fxand g$fx1$6511$XcRv& g$fx2$6512$XcRv&)
          (fxand (fxnot g$fx1$6511$XcRv&) g$fx3$6513$XcRv&)))))
   (g$fxcopy-bit$6505$XcRv&
     g$fxcopy-bit$6552$XcRv&
     (case-lambda
       ((g$fx1$6514$XcRv& g$fx2$6515$XcRv& g$fx3$6516$XcRv&)
        ((case-lambda
           ((g$mask$6517$XcRv&)
            ((case-lambda
               (()
                (g$fxif$6504$XcRv&
                  g$mask$6517$XcRv&
                  (g$fxarithmetic-shift-left$6508$XcRv&
                    g$fx3$6516$XcRv&
                    g$fx2$6515$XcRv&)
                  g$fx1$6514$XcRv&))))))
         (g$fxarithmetic-shift-left$6508$XcRv& '1 g$fx2$6515$XcRv&)))))
   (g$fxbit-field$6506$XcRv&
     g$fxbit-field$6553$XcRv&
     (case-lambda
       ((g$fx1$6518$XcRv& g$fx2$6519$XcRv& g$fx3$6520$XcRv&)
        ((case-lambda
           ((g$mask$6521$XcRv&)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$6509$XcRv&
                  (fxand g$fx1$6518$XcRv& g$mask$6521$XcRv&)
                  g$fx2$6519$XcRv&))))))
         (fxnot (g$fxarithmetic-shift-left$6508$XcRv& '-1 g$fx3$6520$XcRv&))))))
   (g$fxcopy-bit-field$6507$XcRv&
     g$fxcopy-bit-field$6554$XcRv&
     (case-lambda
       ((g$fx1$6522$XcRv& g$fx2$6523$XcRv& g$fx3$6524$XcRv& g$fx4$6525$XcRv&)
        ((case-lambda
           ((g$to$6526$XcRv&)
            ((case-lambda
               ((g$start$6527$XcRv&)
                ((case-lambda
                   ((g$end$6528$XcRv&)
                    ((case-lambda
                       ((g$from$6529$XcRv&)
                        ((case-lambda
                           ((g$mask1$6530$XcRv&)
                            ((case-lambda
                               ((g$mask2$6531$XcRv&)
                                ((case-lambda
                                   ((g$mask$6532$XcRv&)
                                    ((case-lambda
                                       (()
                                        (g$fxif$6504$XcRv&
                                          g$mask$6532$XcRv&
                                          (g$fxarithmetic-shift-left$6508$XcRv&
                                            g$from$6529$XcRv&
                                            g$start$6527$XcRv&)
                                          g$to$6526$XcRv&))))))
                                 (fxand
                                   g$mask1$6530$XcRv&
                                   g$mask2$6531$XcRv&))))
                             (fxnot
                               (g$fxarithmetic-shift-left$6508$XcRv&
                                 '-1
                                 g$end$6528$XcRv&)))))
                         (g$fxarithmetic-shift-left$6508$XcRv&
                           '-1
                           g$start$6527$XcRv&))))
                     g$fx4$6525$XcRv&)))
                 g$fx3$6524$XcRv&)))
             g$fx2$6523$XcRv&)))
         g$fx1$6522$XcRv&))))
   (g$fxarithmetic-shift-left$6508$XcRv&
     g$fxarithmetic-shift-left$6555$XcRv&
     (case-lambda
       ((g$fx1$6533$XcRv& g$fx2$6534$XcRv&)
        (fxarithmetic-shift g$fx1$6533$XcRv& g$fx2$6534$XcRv&))))
   (g$fxarithmetic-shift-right$6509$XcRv&
     g$fxarithmetic-shift-right$6556$XcRv&
     (case-lambda
       ((g$fx1$6535$XcRv& g$fx2$6536$XcRv&)
        (fxarithmetic-shift g$fx1$6535$XcRv& (- g$fx2$6536$XcRv&)))))
   (g$fxrotate-bit-field$6510$XcRv&
     g$fxrotate-bit-field$6557$XcRv&
     (case-lambda
       ((g$fx1$6537$XcRv& g$fx2$6538$XcRv& g$fx3$6539$XcRv& g$fx4$6540$XcRv&)
        ((case-lambda
           ((g$n$6541$XcRv&)
            ((case-lambda
               ((g$start$6542$XcRv&)
                ((case-lambda
                   ((g$end$6543$XcRv&)
                    ((case-lambda
                       ((g$count$6544$XcRv&)
                        ((case-lambda
                           ((g$width$6545$XcRv&)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6545$XcRv&)
                                  ((case-lambda
                                     ((g$count$6546$XcRv&)
                                      ((case-lambda
                                         ((g$field0$6547$XcRv&)
                                          ((case-lambda
                                             ((g$field1$6548$XcRv&)
                                              ((case-lambda
                                                 ((g$field2$6549$XcRv&)
                                                  ((case-lambda
                                                     ((g$field$6550$XcRv&)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$6507$XcRv&
                                                            g$n$6541$XcRv&
                                                            g$start$6542$XcRv&
                                                            g$end$6543$XcRv&
                                                            g$field$6550$XcRv&))))))
                                                   (fxior
                                                     g$field1$6548$XcRv&
                                                     g$field2$6549$XcRv&))))
                                               (g$fxarithmetic-shift-right$6509$XcRv&
                                                 g$field0$6547$XcRv&
                                                 (- g$width$6545$XcRv&
                                                    g$count$6546$XcRv&)))))
                                           (g$fxarithmetic-shift-left$6508$XcRv&
                                             g$field0$6547$XcRv&
                                             g$count$6546$XcRv&))))
                                       (g$fxbit-field$6506$XcRv&
                                         g$n$6541$XcRv&
                                         g$start$6542$XcRv&
                                         g$end$6543$XcRv&))))
                                   (mod g$count$6544$XcRv& g$width$6545$XcRv&))
                                  g$n$6541$XcRv&))))))
                         (- g$end$6543$XcRv& g$start$6542$XcRv&))))
                     g$fx4$6540$XcRv&)))
                 g$fx3$6539$XcRv&)))
             g$fx2$6538$XcRv&)))
         g$fx1$6537$XcRv&)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7304$6558$XcRv&
     g$7304$6570$XcRv&
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7307$XcRv&
       '#f
       '#f
       '#()))
   (g$7306$6559$XcRv& g$7306$6571$XcRv& '#f)
   (g$7305$6560$XcRv&
     g$7305$6572$XcRv&
     (make-record-constructor-descriptor
       g$7304$6558$XcRv&
       &implementation-restriction-rcd
       g$7306$6559$XcRv&))
   (g$7303$6561$XcRv&
     g$7303$6573$XcRv&
     (record-predicate g$7304$6558$XcRv&))
   (g$make-no-infinities-violation$6562$XcRv&
     g$make-no-infinities-violation$6574$XcRv&
     (record-constructor g$7305$6560$XcRv&))
   (g$no-infinities-violation?$6563$XcRv&
     g$no-infinities-violation?$6575$XcRv&
     (condition-predicate g$7304$6558$XcRv&))
   (g$7318$6564$XcRv&
     g$7318$6576$XcRv&
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7321$XcRv&
       '#f
       '#f
       '#()))
   (g$7320$6565$XcRv& g$7320$6577$XcRv& '#f)
   (g$7319$6566$XcRv&
     g$7319$6578$XcRv&
     (make-record-constructor-descriptor
       g$7318$6564$XcRv&
       &implementation-restriction-rcd
       g$7320$6565$XcRv&))
   (g$7317$6567$XcRv&
     g$7317$6579$XcRv&
     (record-predicate g$7318$6564$XcRv&))
   (g$make-no-nans-violation$6568$XcRv&
     g$make-no-nans-violation$6580$XcRv&
     (record-constructor g$7319$6566$XcRv&))
   (g$no-nans-violation?$6569$XcRv&
     g$no-nans-violation?$6581$XcRv&
     (condition-predicate g$7318$6564$XcRv&)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7333$6582$XcRv&
     g$7333$6662$XcRv&
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7336$XcRv&
       '#f
       '#f
       '#()))
   (g$7335$6583$XcRv& g$7335$6663$XcRv& '#f)
   (g$7334$6584$XcRv&
     g$7334$6664$XcRv&
     (make-record-constructor-descriptor
       g$7333$6582$XcRv&
       &error-rcd
       g$7335$6583$XcRv&))
   (g$7332$6585$XcRv&
     g$7332$6665$XcRv&
     (record-predicate g$7333$6582$XcRv&))
   (g$make-i/o-error$6586$XcRv&
     g$make-i/o-error$6666$XcRv&
     (record-constructor g$7334$6584$XcRv&))
   (g$i/o-error?$6587$XcRv&
     g$i/o-error?$6667$XcRv&
     (condition-predicate g$7333$6582$XcRv&))
   (g$7347$6588$XcRv&
     g$7347$6668$XcRv&
     (make-record-type-descriptor
       '&i/o-read
       g$7333$6582$XcRv&
       'g$7350$XcRv&
       '#f
       '#f
       '#()))
   (g$7349$6589$XcRv& g$7349$6669$XcRv& '#f)
   (g$7348$6590$XcRv&
     g$7348$6670$XcRv&
     (make-record-constructor-descriptor
       g$7347$6588$XcRv&
       g$7334$6584$XcRv&
       g$7349$6589$XcRv&))
   (g$7346$6591$XcRv&
     g$7346$6671$XcRv&
     (record-predicate g$7347$6588$XcRv&))
   (g$make-i/o-read-error$6592$XcRv&
     g$make-i/o-read-error$6672$XcRv&
     (record-constructor g$7348$6590$XcRv&))
   (g$i/o-read-error?$6593$XcRv&
     g$i/o-read-error?$6673$XcRv&
     (condition-predicate g$7347$6588$XcRv&))
   (g$7361$6594$XcRv&
     g$7361$6674$XcRv&
     (make-record-type-descriptor
       '&i/o-write
       g$7333$6582$XcRv&
       'g$7364$XcRv&
       '#f
       '#f
       '#()))
   (g$7363$6595$XcRv& g$7363$6675$XcRv& '#f)
   (g$7362$6596$XcRv&
     g$7362$6676$XcRv&
     (make-record-constructor-descriptor
       g$7361$6594$XcRv&
       g$7334$6584$XcRv&
       g$7363$6595$XcRv&))
   (g$7360$6597$XcRv&
     g$7360$6677$XcRv&
     (record-predicate g$7361$6594$XcRv&))
   (g$make-i/o-write-error$6598$XcRv&
     g$make-i/o-write-error$6678$XcRv&
     (record-constructor g$7362$6596$XcRv&))
   (g$i/o-write-error?$6599$XcRv&
     g$i/o-write-error?$6679$XcRv&
     (condition-predicate g$7361$6594$XcRv&))
   (g$7376$6600$XcRv&
     g$7376$6680$XcRv&
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7333$6582$XcRv&
       'g$7379$XcRv&
       '#f
       '#f
       '#((immutable position))))
   (g$7378$6601$XcRv& g$7378$6681$XcRv& '#f)
   (g$7377$6602$XcRv&
     g$7377$6682$XcRv&
     (make-record-constructor-descriptor
       g$7376$6600$XcRv&
       g$7334$6584$XcRv&
       g$7378$6601$XcRv&))
   (g$7375$6603$XcRv&
     g$7375$6683$XcRv&
     (record-predicate g$7376$6600$XcRv&))
   (g$make-i/o-invalid-position-error$6604$XcRv&
     g$make-i/o-invalid-position-error$6684$XcRv&
     (record-constructor g$7377$6602$XcRv&))
   (g$7374$6605$XcRv&
     g$7374$6685$XcRv&
     (record-accessor g$7376$6600$XcRv& '0))
   (g$i/o-invalid-position-error?$6606$XcRv&
     g$i/o-invalid-position-error?$6686$XcRv&
     (condition-predicate g$7376$6600$XcRv&))
   (g$i/o-error-position$6607$XcRv&
     g$i/o-error-position$6687$XcRv&
     (condition-accessor g$7376$6600$XcRv& g$7374$6605$XcRv&))
   (g$7393$6608$XcRv&
     g$7393$6688$XcRv&
     (make-record-type-descriptor
       '&i/o-filename
       g$7333$6582$XcRv&
       'g$7396$XcRv&
       '#f
       '#f
       '#((immutable filename))))
   (g$7395$6609$XcRv& g$7395$6689$XcRv& '#f)
   (g$7394$6610$XcRv&
     g$7394$6690$XcRv&
     (make-record-constructor-descriptor
       g$7393$6608$XcRv&
       g$7334$6584$XcRv&
       g$7395$6609$XcRv&))
   (g$7392$6611$XcRv&
     g$7392$6691$XcRv&
     (record-predicate g$7393$6608$XcRv&))
   (g$make-i/o-filename-error$6612$XcRv&
     g$make-i/o-filename-error$6692$XcRv&
     (record-constructor g$7394$6610$XcRv&))
   (g$7391$6613$XcRv&
     g$7391$6693$XcRv&
     (record-accessor g$7393$6608$XcRv& '0))
   (g$i/o-filename-error?$6614$XcRv&
     g$i/o-filename-error?$6694$XcRv&
     (condition-predicate g$7393$6608$XcRv&))
   (g$i/o-error-filename$6615$XcRv&
     g$i/o-error-filename$6695$XcRv&
     (condition-accessor g$7393$6608$XcRv& g$7391$6613$XcRv&))
   (g$7409$6616$XcRv&
     g$7409$6696$XcRv&
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7393$6608$XcRv&
       'g$7412$XcRv&
       '#f
       '#f
       '#()))
   (g$7411$6617$XcRv& g$7411$6697$XcRv& '#f)
   (g$7410$6618$XcRv&
     g$7410$6698$XcRv&
     (make-record-constructor-descriptor
       g$7409$6616$XcRv&
       g$7394$6610$XcRv&
       g$7411$6617$XcRv&))
   (g$7408$6619$XcRv&
     g$7408$6699$XcRv&
     (record-predicate g$7409$6616$XcRv&))
   (g$make-i/o-file-protection-error$6620$XcRv&
     g$make-i/o-file-protection-error$6700$XcRv&
     (record-constructor g$7410$6618$XcRv&))
   (g$i/o-file-protection-error?$6621$XcRv&
     g$i/o-file-protection-error?$6701$XcRv&
     (condition-predicate g$7409$6616$XcRv&))
   (g$7423$6622$XcRv&
     g$7423$6702$XcRv&
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7409$6616$XcRv&
       'g$7426$XcRv&
       '#f
       '#f
       '#()))
   (g$7425$6623$XcRv& g$7425$6703$XcRv& '#f)
   (g$7424$6624$XcRv&
     g$7424$6704$XcRv&
     (make-record-constructor-descriptor
       g$7423$6622$XcRv&
       g$7410$6618$XcRv&
       g$7425$6623$XcRv&))
   (g$7422$6625$XcRv&
     g$7422$6705$XcRv&
     (record-predicate g$7423$6622$XcRv&))
   (g$make-i/o-file-is-read-only-error$6626$XcRv&
     g$make-i/o-file-is-read-only-error$6706$XcRv&
     (record-constructor g$7424$6624$XcRv&))
   (g$i/o-file-is-read-only-error?$6627$XcRv&
     g$i/o-file-is-read-only-error?$6707$XcRv&
     (condition-predicate g$7423$6622$XcRv&))
   (g$7437$6628$XcRv&
     g$7437$6708$XcRv&
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7393$6608$XcRv&
       'g$7440$XcRv&
       '#f
       '#f
       '#()))
   (g$7439$6629$XcRv& g$7439$6709$XcRv& '#f)
   (g$7438$6630$XcRv&
     g$7438$6710$XcRv&
     (make-record-constructor-descriptor
       g$7437$6628$XcRv&
       g$7394$6610$XcRv&
       g$7439$6629$XcRv&))
   (g$7436$6631$XcRv&
     g$7436$6711$XcRv&
     (record-predicate g$7437$6628$XcRv&))
   (g$make-i/o-file-already-exists-error$6632$XcRv&
     g$make-i/o-file-already-exists-error$6712$XcRv&
     (record-constructor g$7438$6630$XcRv&))
   (g$i/o-file-already-exists-error?$6633$XcRv&
     g$i/o-file-already-exists-error?$6713$XcRv&
     (condition-predicate g$7437$6628$XcRv&))
   (g$7451$6634$XcRv&
     g$7451$6714$XcRv&
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7393$6608$XcRv&
       'g$7454$XcRv&
       '#f
       '#f
       '#()))
   (g$7453$6635$XcRv& g$7453$6715$XcRv& '#f)
   (g$7452$6636$XcRv&
     g$7452$6716$XcRv&
     (make-record-constructor-descriptor
       g$7451$6634$XcRv&
       g$7394$6610$XcRv&
       g$7453$6635$XcRv&))
   (g$7450$6637$XcRv&
     g$7450$6717$XcRv&
     (record-predicate g$7451$6634$XcRv&))
   (g$make-i/o-file-does-not-exist-error$6638$XcRv&
     g$make-i/o-file-does-not-exist-error$6718$XcRv&
     (record-constructor g$7452$6636$XcRv&))
   (g$i/o-file-does-not-exist-error?$6639$XcRv&
     g$i/o-file-does-not-exist-error?$6719$XcRv&
     (condition-predicate g$7451$6634$XcRv&))
   (g$7466$6640$XcRv&
     g$7466$6720$XcRv&
     (make-record-type-descriptor
       '&i/o-port
       g$7333$6582$XcRv&
       'g$7469$XcRv&
       '#f
       '#f
       '#((immutable port))))
   (g$7468$6641$XcRv& g$7468$6721$XcRv& '#f)
   (g$7467$6642$XcRv&
     g$7467$6722$XcRv&
     (make-record-constructor-descriptor
       g$7466$6640$XcRv&
       g$7334$6584$XcRv&
       g$7468$6641$XcRv&))
   (g$7465$6643$XcRv&
     g$7465$6723$XcRv&
     (record-predicate g$7466$6640$XcRv&))
   (g$make-i/o-port-error$6644$XcRv&
     g$make-i/o-port-error$6724$XcRv&
     (record-constructor g$7467$6642$XcRv&))
   (g$7464$6645$XcRv&
     g$7464$6725$XcRv&
     (record-accessor g$7466$6640$XcRv& '0))
   (g$i/o-port-error?$6646$XcRv&
     g$i/o-port-error?$6726$XcRv&
     (condition-predicate g$7466$6640$XcRv&))
   (g$i/o-error-port$6647$XcRv&
     g$i/o-error-port$6727$XcRv&
     (condition-accessor g$7466$6640$XcRv& g$7464$6645$XcRv&))
   (g$7482$6648$XcRv&
     g$7482$6728$XcRv&
     (make-record-type-descriptor
       '&i/o-decoding
       g$7466$6640$XcRv&
       'g$7485$XcRv&
       '#f
       '#f
       '#()))
   (g$7484$6649$XcRv& g$7484$6729$XcRv& '#f)
   (g$7483$6650$XcRv&
     g$7483$6730$XcRv&
     (make-record-constructor-descriptor
       g$7482$6648$XcRv&
       g$7467$6642$XcRv&
       g$7484$6649$XcRv&))
   (g$7481$6651$XcRv&
     g$7481$6731$XcRv&
     (record-predicate g$7482$6648$XcRv&))
   (g$make-i/o-decoding-error$6652$XcRv&
     g$make-i/o-decoding-error$6732$XcRv&
     (record-constructor g$7483$6650$XcRv&))
   (g$i/o-decoding-error?$6653$XcRv&
     g$i/o-decoding-error?$6733$XcRv&
     (condition-predicate g$7482$6648$XcRv&))
   (g$7497$6654$XcRv&
     g$7497$6734$XcRv&
     (make-record-type-descriptor
       '&i/o-encoding
       g$7466$6640$XcRv&
       'g$7500$XcRv&
       '#f
       '#f
       '#((immutable char))))
   (g$7499$6655$XcRv& g$7499$6735$XcRv& '#f)
   (g$7498$6656$XcRv&
     g$7498$6736$XcRv&
     (make-record-constructor-descriptor
       g$7497$6654$XcRv&
       g$7467$6642$XcRv&
       g$7499$6655$XcRv&))
   (g$7496$6657$XcRv&
     g$7496$6737$XcRv&
     (record-predicate g$7497$6654$XcRv&))
   (g$make-i/o-encoding-error$6658$XcRv&
     g$make-i/o-encoding-error$6738$XcRv&
     (record-constructor g$7498$6656$XcRv&))
   (g$7495$6659$XcRv&
     g$7495$6739$XcRv&
     (record-accessor g$7497$6654$XcRv& '0))
   (g$i/o-encoding-error?$6660$XcRv&
     g$i/o-encoding-error?$6740$XcRv&
     (condition-predicate g$7497$6654$XcRv&))
   (g$i/o-encoding-error-char$6661$XcRv&
     g$i/o-encoding-error-char$6741$XcRv&
     (condition-accessor g$7497$6654$XcRv& g$7495$6659$XcRv&)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6742$XcRv&
     g$get-output-string$6747$XcRv&
     (case-lambda
       ((g$port$6745$XcRv&)
        (clr-call-internal
          'system.io.stringwriter
          'tostring
          g$port$6745$XcRv&))))
   (g$open-output-string$6743$XcRv&
     g$open-output-string$6748$XcRv&
     (case-lambda (() (clr-new-internal 'system.io.stringwriter))))
   (g$open-string-output-port$6744$XcRv&
     g$open-string-output-port$6749$XcRv&
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6746$XcRv&)
            (values
              g$p$6746$XcRv&
              (case-lambda
                (() (g$get-output-string$6742$XcRv& g$p$6746$XcRv&))))))
         (g$open-output-string$6743$XcRv&))))))
  (void))

(library-letrec* (ironscheme io simple) () (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$enummap$6750$XcRv&
     g$enummap$6876$XcRv&
     (g$make-eq-hashtable$5812$XcRv&))
   (g$enumordermap$6751$XcRv&
     g$enumordermap$6877$XcRv&
     (g$make-eq-hashtable$5812$XcRv&))
   (g$rcdmap$6752$XcRv&
     g$rcdmap$6878$XcRv&
     (g$make-eq-hashtable$5812$XcRv&))
   (g$7526$6753$XcRv&
     g$7526$6879$XcRv&
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value))))
   (g$7528$6754$XcRv& g$7528$6880$XcRv& '#f)
   (g$7527$6755$XcRv&
     g$7527$6881$XcRv&
     (make-record-constructor-descriptor
       g$7526$6753$XcRv&
       '#f
       g$7528$6754$XcRv&))
   (g$enum?$6756$XcRv&
     g$enum?$6882$XcRv&
     (record-predicate g$7526$6753$XcRv&))
   (g$make-enum$6757$XcRv&
     g$make-enum$6883$XcRv&
     (record-constructor g$7527$6755$XcRv&))
   (g$enum-value$6758$XcRv&
     g$enum-value$6884$XcRv&
     (record-accessor g$7526$6753$XcRv& '0))
   (g$get-symbols$6767$XcRv&
     g$get-symbols$6885$XcRv&
     (case-lambda
       ((g$rtd$6785$XcRv&)
        (g$hashtable-ref$5815$XcRv&
          g$enumordermap$6751$XcRv&
          g$rtd$6785$XcRv&
          '#f))))
   (g$get-value$6768$XcRv&
     g$get-value$6886$XcRv&
     (case-lambda
       ((g$rtd$6786$XcRv& g$s$6787$XcRv&)
        (g$hashtable-ref$5815$XcRv&
          (g$hashtable-ref$5815$XcRv& g$enummap$6750$XcRv& g$rtd$6786$XcRv& '#f)
          g$s$6787$XcRv&
          '#f))))
   (g$construct$6769$XcRv&
     g$construct$6887$XcRv&
     (case-lambda
       ((g$rtd$6788$XcRv& g$value$6789$XcRv&)
        ((record-constructor
           (g$hashtable-ref$5815$XcRv&
             g$rcdmap$6752$XcRv&
             g$rtd$6788$XcRv&
             '#f))
         g$value$6789$XcRv&))))
   (g$assert-enum$6770$XcRv&
     g$assert-enum$6888$XcRv&
     (case-lambda
       ((g$who$6790$XcRv& g$enumset$6791$XcRv&)
        (if (g$enum?$6756$XcRv& g$enumset$6791$XcRv&)
          (void)
          (assertion-violation
            g$who$6790$XcRv&
            '"not an enumeration"
            g$enumset$6791$XcRv&)))))
   (g$distinct$6771$XcRv&
     g$distinct$6889$XcRv&
     (case-lambda
       ((g$symbols$6792$XcRv&)
        ((case-lambda
           ((g$ht$6793$XcRv&)
            ((letrec ((g$f$6794$XcRv&
                        (case-lambda
                          ((g$s$6795$XcRv& g$a$6796$XcRv&)
                           (if (null? g$s$6795$XcRv&)
                             (reverse! g$a$6796$XcRv&)
                             (if (g$hashtable-contains?$5818$XcRv&
                                   g$ht$6793$XcRv&
                                   (car g$s$6795$XcRv&))
                               (g$f$6794$XcRv&
                                 (cdr g$s$6795$XcRv&)
                                 g$a$6796$XcRv&)
                               (begin
                                 (g$hashtable-set!$5816$XcRv&
                                   g$ht$6793$XcRv&
                                   (car g$s$6795$XcRv&)
                                   '#t)
                                 (g$f$6794$XcRv&
                                   (cdr g$s$6795$XcRv&)
                                   (cons
                                     (car g$s$6795$XcRv&)
                                     g$a$6796$XcRv&)))))))))
               g$f$6794$XcRv&)
             g$symbols$6792$XcRv&
             '())))
         (g$make-eq-hashtable$5812$XcRv&)))))
   (g$make-enumeration$6772$XcRv&
     g$make-enumeration$6890$XcRv&
     (case-lambda
       ((g$symbols$6797$XcRv&)
        (begin
          (if (g$for-all$6019$XcRv& symbol? g$symbols$6797$XcRv&)
            (void)
            (assertion-violation
              'make-enumeration
              '"not a list of symbols"
              g$symbols$6797$XcRv&))
          (call-with-values
            (case-lambda
              (()
               (letrec* ((g$7591$6798$XcRv&
                           (make-record-type-descriptor
                             'g$7590$XcRv&
                             g$7526$6753$XcRv&
                             '#f
                             '#t
                             '#f
                             '#()))
                         (g$7593$6799$XcRv& '#f)
                         (g$7592$6800$XcRv&
                           (make-record-constructor-descriptor
                             g$7591$6798$XcRv&
                             g$7527$6755$XcRv&
                             g$7593$6799$XcRv&))
                         (g$7590$6801$XcRv&
                           (record-predicate g$7591$6798$XcRv&))
                         (g$7590$6802$XcRv&
                           (record-constructor g$7592$6800$XcRv&)))
                 (begin
                   (make-record-printer
                     'g$7590$XcRv&
                     (case-lambda
                       ((g$x$6803$XcRv& g$p$6804$XcRv&)
                        (g$fprintf$6927$XcRv&
                          g$p$6804$XcRv&
                          '"#[enum-set ~a]"
                          (g$enum-set->list$6776$XcRv& g$x$6803$XcRv&)))))
                   (values g$7591$6798$XcRv& g$7592$6800$XcRv&)))))
            (case-lambda
              ((g$rtd$6805$XcRv& g$rcd$6806$XcRv&)
               ((case-lambda
                  ((g$s$6807$XcRv& g$mask$6808$XcRv& g$intmap$6809$XcRv&)
                   (begin
                     (g$hashtable-set!$5816$XcRv&
                       g$rcdmap$6752$XcRv&
                       g$rtd$6805$XcRv&
                       g$rcd$6806$XcRv&)
                     (g$hashtable-set!$5816$XcRv&
                       g$enumordermap$6751$XcRv&
                       g$rtd$6805$XcRv&
                       g$s$6807$XcRv&)
                     (for-each
                       (case-lambda
                         ((g$e$6810$XcRv&)
                          (begin
                            (g$hashtable-set!$5816$XcRv&
                              g$intmap$6809$XcRv&
                              g$e$6810$XcRv&
                              g$mask$6808$XcRv&)
                            (set! g$mask$6808$XcRv&
                              (g$bitwise-arithmetic-shift-left$6500$XcRv&
                                g$mask$6808$XcRv&
                                '1)))))
                       g$s$6807$XcRv&)
                     (g$hashtable-set!$5816$XcRv&
                       g$enummap$6750$XcRv&
                       g$rtd$6805$XcRv&
                       g$intmap$6809$XcRv&)
                     ((record-constructor g$rcd$6806$XcRv&)
                      (- (g$bitwise-arithmetic-shift-left$6500$XcRv&
                           '1
                           (length g$s$6807$XcRv&))
                         '1)))))
                (g$distinct$6771$XcRv& g$symbols$6797$XcRv&)
                '1
                (g$make-eq-hashtable$5812$XcRv&)))))))))
   (g$enum-set-universe$6773$XcRv&
     g$enum-set-universe$6891$XcRv&
     (case-lambda
       ((g$enumset$6811$XcRv&)
        (begin
          (g$assert-enum$6770$XcRv& 'enum-set-universe g$enumset$6811$XcRv&)
          ((case-lambda
             ((g$rtd$6812$XcRv&)
              ((case-lambda
                 ((g$count$6813$XcRv&)
                  ((case-lambda
                     (()
                      (g$construct$6769$XcRv&
                        g$rtd$6812$XcRv&
                        (- (g$bitwise-arithmetic-shift-left$6500$XcRv&
                             '1
                             g$count$6813$XcRv&)
                           '1)))))))
               (length (g$get-symbols$6767$XcRv& g$rtd$6812$XcRv&)))))
           (record-rtd g$enumset$6811$XcRv&))))))
   (g$enum-set-indexer$6774$XcRv&
     g$enum-set-indexer$6892$XcRv&
     (case-lambda
       ((g$enumset$6814$XcRv&)
        (begin
          (g$assert-enum$6770$XcRv& 'enum-set-indexer g$enumset$6814$XcRv&)
          (case-lambda
            ((g$symbol$6815$XcRv&)
             ((letrec ((g$f$6816$XcRv&
                         (case-lambda
                           ((g$s$6817$XcRv& g$i$6818$XcRv&)
                            (if (null? g$s$6817$XcRv&)
                              '#f
                              (if (eq? (car g$s$6817$XcRv&) g$symbol$6815$XcRv&)
                                g$i$6818$XcRv&
                                (g$f$6816$XcRv&
                                  (cdr g$s$6817$XcRv&)
                                  (+ g$i$6818$XcRv& '1))))))))
                g$f$6816$XcRv&)
              (g$get-symbols$6767$XcRv& (record-rtd g$enumset$6814$XcRv&))
              '0)))))))
   (g$enum-set-constructor$6775$XcRv&
     g$enum-set-constructor$6893$XcRv&
     (case-lambda
       ((g$enumset$6819$XcRv&)
        (begin
          (g$assert-enum$6770$XcRv& 'enum-set-constructor g$enumset$6819$XcRv&)
          ((case-lambda
             ((g$rtd$6820$XcRv&)
              (case-lambda
                ((g$symbols$6821$XcRv&)
                 ((letrec ((g$f$6822$XcRv&
                             (case-lambda
                               ((g$v$6823$XcRv& g$s$6824$XcRv&)
                                (if (null? g$s$6824$XcRv&)
                                  (g$construct$6769$XcRv&
                                    g$rtd$6820$XcRv&
                                    g$v$6823$XcRv&)
                                  (g$f$6822$XcRv&
                                    (bitwise-ior
                                      g$v$6823$XcRv&
                                      (g$get-value$6768$XcRv&
                                        g$rtd$6820$XcRv&
                                        (car g$s$6824$XcRv&)))
                                    (cdr g$s$6824$XcRv&)))))))
                    g$f$6822$XcRv&)
                  '0
                  g$symbols$6821$XcRv&)))))
           (record-rtd g$enumset$6819$XcRv&))))))
   (g$enum-set->list$6776$XcRv&
     g$enum-set->list$6894$XcRv&
     (case-lambda
       ((g$enumset$6825$XcRv&)
        (begin
          (g$assert-enum$6770$XcRv& 'enum-set->list g$enumset$6825$XcRv&)
          ((case-lambda
             ((g$rtd$6826$XcRv& g$value$6827$XcRv&)
              ((letrec ((g$f$6828$XcRv&
                          (case-lambda
                            ((g$s$6829$XcRv& g$l$6830$XcRv&)
                             (if (null? g$s$6829$XcRv&)
                               (reverse! g$l$6830$XcRv&)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6768$XcRv&
                                         g$rtd$6826$XcRv&
                                         (car g$s$6829$XcRv&))
                                       g$value$6827$XcRv&))
                                 (g$f$6828$XcRv&
                                   (cdr g$s$6829$XcRv&)
                                   g$l$6830$XcRv&)
                                 (g$f$6828$XcRv&
                                   (cdr g$s$6829$XcRv&)
                                   (cons
                                     (car g$s$6829$XcRv&)
                                     g$l$6830$XcRv&))))))))
                 g$f$6828$XcRv&)
               (g$get-symbols$6767$XcRv& g$rtd$6826$XcRv&)
               '())))
           (record-rtd g$enumset$6825$XcRv&)
           (g$enum-value$6758$XcRv& g$enumset$6825$XcRv&))))))
   (g$enum-set-member?$6777$XcRv&
     g$enum-set-member?$6895$XcRv&
     (case-lambda
       ((g$symbol$6831$XcRv& g$enumset$6832$XcRv&)
        (begin
          (if (symbol? g$symbol$6831$XcRv&)
            (void)
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6831$XcRv&))
          (g$assert-enum$6770$XcRv& 'enum-set-member? g$enumset$6832$XcRv&)
          ((case-lambda
             ((g$v$6833$XcRv&)
              (if g$v$6833$XcRv&
                (not (zero?
                       (bitwise-and
                         g$v$6833$XcRv&
                         (g$enum-value$6758$XcRv& g$enumset$6832$XcRv&))))
                '#f)))
           (g$get-value$6768$XcRv&
             (record-rtd g$enumset$6832$XcRv&)
             g$symbol$6831$XcRv&))))))
   (g$enum-set-subset?$6778$XcRv&
     g$enum-set-subset?$6896$XcRv&
     (case-lambda
       ((g$enumset1$6834$XcRv& g$enumset2$6835$XcRv&)
        (begin
          (g$assert-enum$6770$XcRv& 'enum-set-subset? g$enumset1$6834$XcRv&)
          (g$assert-enum$6770$XcRv& 'enum-set-subset? g$enumset2$6835$XcRv&)
          ((case-lambda
             ((g$v1$6836$XcRv&
                g$v2$6837$XcRv&
                g$rtd1$6838$XcRv&
                g$rtd2$6839$XcRv&)
              (if (eq? g$rtd1$6838$XcRv& g$rtd2$6839$XcRv&)
                (= (bitwise-and g$v1$6836$XcRv& g$v2$6837$XcRv&)
                   g$v1$6836$XcRv&)
                ((letrec ((g$f$6840$XcRv&
                            (case-lambda
                              ((g$s$6841$XcRv&)
                               (if (null? g$s$6841$XcRv&)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6842$XcRv& g$v2*$6843$XcRv&)
                                     (if g$v2*$6843$XcRv&
                                       ((case-lambda
                                          ((g$has1$6844$XcRv& g$has2$6845$XcRv&)
                                           (if (if g$has1$6844$XcRv&
                                                 (begin
                                                   '#f
                                                   (not g$has2$6845$XcRv&))
                                                 '#f)
                                             '#f
                                             (g$f$6840$XcRv&
                                               (cdr g$s$6841$XcRv&)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6836$XcRv&
                                                 g$v1*$6842$XcRv&)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6837$XcRv&
                                                 g$v2*$6843$XcRv&))))
                                       '#f)))
                                  (g$get-value$6768$XcRv&
                                    g$rtd1$6838$XcRv&
                                    (car g$s$6841$XcRv&))
                                  (g$get-value$6768$XcRv&
                                    g$rtd2$6839$XcRv&
                                    (car g$s$6841$XcRv&))))))))
                   g$f$6840$XcRv&)
                 (g$get-symbols$6767$XcRv& g$rtd1$6838$XcRv&)))))
           (g$enum-value$6758$XcRv& g$enumset1$6834$XcRv&)
           (g$enum-value$6758$XcRv& g$enumset2$6835$XcRv&)
           (record-rtd g$enumset1$6834$XcRv&)
           (record-rtd g$enumset2$6835$XcRv&))))))
   (g$enum-set=?$6779$XcRv&
     g$enum-set=?$6897$XcRv&
     (case-lambda
       ((g$enumset1$6846$XcRv& g$enumset2$6847$XcRv&)
        (begin
          (g$assert-enum$6770$XcRv& 'enum-set=? g$enumset1$6846$XcRv&)
          (g$assert-enum$6770$XcRv& 'enum-set=? g$enumset2$6847$XcRv&)
          (if (g$enum-set-subset?$6778$XcRv&
                g$enumset1$6846$XcRv&
                g$enumset2$6847$XcRv&)
            (begin
              '#f
              (g$enum-set-subset?$6778$XcRv&
                g$enumset2$6847$XcRv&
                g$enumset1$6846$XcRv&))
            '#f)))))
   (g$enum-set-union$6780$XcRv&
     g$enum-set-union$6898$XcRv&
     (case-lambda
       ((g$enumset1$6848$XcRv& g$enumset2$6849$XcRv&)
        (begin
          (g$assert-enum$6770$XcRv& 'enum-set-union g$enumset1$6848$XcRv&)
          (g$assert-enum$6770$XcRv& 'enum-set-union g$enumset2$6849$XcRv&)
          ((case-lambda
             ((g$v1$6850$XcRv&
                g$v2$6851$XcRv&
                g$rtd1$6852$XcRv&
                g$rtd2$6853$XcRv&)
              (if (eq? g$rtd1$6852$XcRv& g$rtd2$6853$XcRv&)
                (g$construct$6769$XcRv&
                  g$rtd1$6852$XcRv&
                  (bitwise-ior g$v1$6850$XcRv& g$v2$6851$XcRv&))
                '#f)))
           (g$enum-value$6758$XcRv& g$enumset1$6848$XcRv&)
           (g$enum-value$6758$XcRv& g$enumset2$6849$XcRv&)
           (record-rtd g$enumset1$6848$XcRv&)
           (record-rtd g$enumset2$6849$XcRv&))))))
   (g$enum-set-intersection$6781$XcRv&
     g$enum-set-intersection$6899$XcRv&
     (case-lambda
       ((g$enumset1$6854$XcRv& g$enumset2$6855$XcRv&)
        (begin
          (g$assert-enum$6770$XcRv&
            'enum-set-intersection
            g$enumset1$6854$XcRv&)
          (g$assert-enum$6770$XcRv&
            'enum-set-intersection
            g$enumset2$6855$XcRv&)
          ((case-lambda
             ((g$v1$6856$XcRv&
                g$v2$6857$XcRv&
                g$rtd1$6858$XcRv&
                g$rtd2$6859$XcRv&)
              (if (eq? g$rtd1$6858$XcRv& g$rtd2$6859$XcRv&)
                (g$construct$6769$XcRv&
                  g$rtd1$6858$XcRv&
                  (bitwise-and g$v1$6856$XcRv& g$v2$6857$XcRv&))
                '#f)))
           (g$enum-value$6758$XcRv& g$enumset1$6854$XcRv&)
           (g$enum-value$6758$XcRv& g$enumset2$6855$XcRv&)
           (record-rtd g$enumset1$6854$XcRv&)
           (record-rtd g$enumset2$6855$XcRv&))))))
   (g$enum-set-difference$6782$XcRv&
     g$enum-set-difference$6900$XcRv&
     (case-lambda
       ((g$enumset1$6860$XcRv& g$enumset2$6861$XcRv&)
        (begin
          (g$assert-enum$6770$XcRv& 'enum-set-difference g$enumset1$6860$XcRv&)
          (g$assert-enum$6770$XcRv& 'enum-set-difference g$enumset2$6861$XcRv&)
          ((case-lambda
             ((g$v1$6862$XcRv&
                g$v2$6863$XcRv&
                g$rtd1$6864$XcRv&
                g$rtd2$6865$XcRv&)
              (if (eq? g$rtd1$6864$XcRv& g$rtd2$6865$XcRv&)
                (g$construct$6769$XcRv&
                  g$rtd1$6864$XcRv&
                  (bitwise-xor g$v1$6862$XcRv& g$v2$6863$XcRv&))
                '#f)))
           (g$enum-value$6758$XcRv& g$enumset1$6860$XcRv&)
           (g$enum-value$6758$XcRv& g$enumset2$6861$XcRv&)
           (record-rtd g$enumset1$6860$XcRv&)
           (record-rtd g$enumset2$6861$XcRv&))))))
   (g$enum-set-complement$6783$XcRv&
     g$enum-set-complement$6901$XcRv&
     (case-lambda
       ((g$enumset$6866$XcRv&)
        (begin
          (g$assert-enum$6770$XcRv& 'enum-set-complement g$enumset$6866$XcRv&)
          (g$enum-set-difference$6782$XcRv&
            g$enumset$6866$XcRv&
            (g$enum-set-universe$6773$XcRv& g$enumset$6866$XcRv&))))))
   (g$enum-set-projection$6784$XcRv&
     g$enum-set-projection$6902$XcRv&
     (case-lambda
       ((g$enumset1$6867$XcRv& g$enumset2$6868$XcRv&)
        (begin
          (g$assert-enum$6770$XcRv& 'enum-set-projection g$enumset1$6867$XcRv&)
          (g$assert-enum$6770$XcRv& 'enum-set-projection g$enumset2$6868$XcRv&)
          ((case-lambda
             ((g$v1$6869$XcRv& g$rtd1$6870$XcRv& g$rtd2$6871$XcRv&)
              ((letrec ((g$f$6872$XcRv&
                          (case-lambda
                            ((g$s$6873$XcRv& g$v$6874$XcRv&)
                             (if (null? g$s$6873$XcRv&)
                               (g$construct$6769$XcRv&
                                 g$rtd2$6871$XcRv&
                                 g$v$6874$XcRv&)
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6869$XcRv&
                                       (g$get-value$6768$XcRv&
                                         g$rtd1$6870$XcRv&
                                         (car g$s$6873$XcRv&))))
                                 (g$f$6872$XcRv&
                                   (cdr g$s$6873$XcRv&)
                                   g$v$6874$XcRv&)
                                 ((case-lambda
                                    ((g$v2$6875$XcRv&)
                                     (if g$v2$6875$XcRv&
                                       (g$f$6872$XcRv&
                                         (cdr g$s$6873$XcRv&)
                                         (bitwise-ior
                                           g$v$6874$XcRv&
                                           g$v2$6875$XcRv&))
                                       (g$f$6872$XcRv&
                                         (cdr g$s$6873$XcRv&)
                                         g$v$6874$XcRv&))))
                                  (g$get-value$6768$XcRv&
                                    g$rtd2$6871$XcRv&
                                    (car g$s$6873$XcRv&)))))))))
                 g$f$6872$XcRv&)
               (g$get-symbols$6767$XcRv& g$rtd1$6870$XcRv&)
               '0)))
           (g$enum-value$6758$XcRv& g$enumset1$6867$XcRv&)
           (record-rtd g$enumset1$6867$XcRv&)
           (record-rtd g$enumset2$6868$XcRv&)))))))
  (void))

(library-letrec* (ironscheme format)
  ((g$dofmt$6903$XcRv&
     g$dofmt$6925$XcRv&
     (case-lambda
       ((g$p$6907$XcRv& g$cntl$6908$XcRv& g$args$6909$XcRv&)
        ((case-lambda
           ((g$nmax$6910$XcRv&)
            ((letrec ((g$loop$6911$XcRv&
                        (case-lambda
                          ((g$n$6912$XcRv& g$a$6913$XcRv&)
                           (if (fx<=? g$n$6912$XcRv& g$nmax$6910$XcRv&)
                             ((case-lambda
                                ((g$c$6914$XcRv&)
                                 (if (if (char=? g$c$6914$XcRv& '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6912$XcRv&
                                           g$nmax$6910$XcRv&))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6915$XcRv&)
                                       (if (eqv? g$t$6915$XcRv& '#\a)
                                         (begin
                                           (display
                                             (car g$a$6913$XcRv&)
                                             g$p$6907$XcRv&)
                                           (g$loop$6911$XcRv&
                                             (fx+ g$n$6912$XcRv& '2)
                                             (cdr g$a$6913$XcRv&)))
                                         (if (eqv? g$t$6915$XcRv& '#\s)
                                           (begin
                                             (write
                                               (car g$a$6913$XcRv&)
                                               g$p$6907$XcRv&)
                                             (g$loop$6911$XcRv&
                                               (fx+ g$n$6912$XcRv& '2)
                                               (cdr g$a$6913$XcRv&)))
                                           (if (eqv? g$t$6915$XcRv& '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6913$XcRv&)
                                                   '2)
                                                 g$p$6907$XcRv&)
                                               (g$loop$6911$XcRv&
                                                 (fx+ g$n$6912$XcRv& '2)
                                                 (cdr g$a$6913$XcRv&)))
                                             (if (eqv? g$t$6915$XcRv& '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6913$XcRv&)
                                                     '8)
                                                   g$p$6907$XcRv&)
                                                 (g$loop$6911$XcRv&
                                                   (fx+ g$n$6912$XcRv& '2)
                                                   (cdr g$a$6913$XcRv&)))
                                               (if (eqv? g$t$6915$XcRv& '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6913$XcRv&)
                                                       '16)
                                                     g$p$6907$XcRv&)
                                                   (g$loop$6911$XcRv&
                                                     (fx+ g$n$6912$XcRv& '2)
                                                     (cdr g$a$6913$XcRv&)))
                                                 (if (eqv? g$t$6915$XcRv& '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6913$XcRv&)
                                                         '10)
                                                       g$p$6907$XcRv&)
                                                     (g$loop$6911$XcRv&
                                                       (fx+ g$n$6912$XcRv& '2)
                                                       (cdr g$a$6913$XcRv&)))
                                                   (if (eqv?
                                                         g$t$6915$XcRv&
                                                         '#\~)
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6907$XcRv&)
                                                       (g$loop$6911$XcRv&
                                                         (fx+ g$n$6912$XcRv& '2)
                                                         g$a$6913$XcRv&))
                                                     (begin
                                                       (write-char
                                                         g$c$6914$XcRv&
                                                         g$p$6907$XcRv&)
                                                       (g$loop$6911$XcRv&
                                                         (fx+ g$n$6912$XcRv& '1)
                                                         g$a$6913$XcRv&)))))))))))
                                    (string-ref
                                      g$cntl$6908$XcRv&
                                      (fx+ g$n$6912$XcRv& '1)))
                                   (begin
                                     (write-char g$c$6914$XcRv& g$p$6907$XcRv&)
                                     (g$loop$6911$XcRv&
                                       (fx+ g$n$6912$XcRv& '1)
                                       g$a$6913$XcRv&)))))
                              (string-ref g$cntl$6908$XcRv& g$n$6912$XcRv&))
                             (void))))))
               g$loop$6911$XcRv&)
             '0
             g$args$6909$XcRv&)))
         (fx- (string-length g$cntl$6908$XcRv&) '1)))))
   (g$printf$6904$XcRv&
     g$printf$6926$XcRv&
     (case-lambda
       ((g$control$6916$XcRv& . g$args$6917$XcRv&)
        (g$dofmt$6903$XcRv&
          (current-output-port)
          g$control$6916$XcRv&
          g$args$6917$XcRv&))))
   (g$fprintf$6905$XcRv&
     g$fprintf$6927$XcRv&
     (case-lambda
       ((g$p$6918$XcRv& g$control$6919$XcRv& . g$args$6920$XcRv&)
        (g$dofmt$6903$XcRv&
          g$p$6918$XcRv&
          g$control$6919$XcRv&
          g$args$6920$XcRv&))))
   (g$format$6906$XcRv&
     g$format$6928$XcRv&
     (case-lambda
       ((g$control$6921$XcRv& . g$args$6922$XcRv&)
        (call-with-values
          g$open-string-output-port$6749$XcRv&
          (case-lambda
            ((g$p$6923$XcRv& g$c$6924$XcRv&)
             (begin
               (g$dofmt$6903$XcRv&
                 g$p$6923$XcRv&
                 g$control$6921$XcRv&
                 g$args$6922$XcRv&)
               (g$c$6924$XcRv&)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6929$XcRv&
     g$make-traced-macro$6932$XcRv&
     (case-lambda
       ((g$name$6930$XcRv& g$x$6931$XcRv&)
        (if (procedure? g$x$6931$XcRv&)
          (make-traced-procedure
            g$name$6930$XcRv&
            g$x$6931$XcRv&
            g$syntax->datum$11581$XcRv&)
          (if (g$variable-transformer?$11409$XcRv& g$x$6931$XcRv&)
            (g$make-variable-transformer$11408$XcRv&
              (make-traced-procedure
                g$name$6930$XcRv&
                (g$variable-transformer-procedure$11410$XcRv& g$x$6931$XcRv&)
                g$syntax->datum$11581$XcRv&))
            g$x$6931$XcRv&))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6933$XcRv&
     g$read-library-source-file$7011$XcRv&
     (case-lambda
       ((g$file-name$7003$XcRv&)
        (with-input-from-file g$file-name$7003$XcRv& read-annotated))))
   (g$make-parameter$6934$XcRv&
     g$make-parameter$7012$XcRv&
     (case-lambda
       ((g$x$7004$XcRv&)
        (g$make-parameter$6934$XcRv&
          g$x$7004$XcRv&
          (case-lambda ((g$x$7005$XcRv&) g$x$7005$XcRv&))))
       ((g$x$7006$XcRv& g$fender$7007$XcRv&)
        (begin
          (if (procedure? g$fender$7007$XcRv&)
            (void)
            (assertion-violation '#f '"assertion failed" '(procedure? fender)))
          ((case-lambda
             ((g$x$7008$XcRv&)
              (case-lambda
                (() g$x$7008$XcRv&)
                ((g$v$7009$XcRv&)
                 (set! g$x$7008$XcRv& (g$fender$7007$XcRv& g$v$7009$XcRv&))))))
           (g$fender$7007$XcRv& g$x$7006$XcRv&))))))
   (g$file-options-spec$7002$XcRv&
     g$file-options-spec$7013$XcRv&
     (case-lambda ((g$x$7010$XcRv&) g$x$7010$XcRv&))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7210$XcRv&
     g$current-primitive-locations$7255$XcRv&
     (g$make-parameter$7012$XcRv&
       (case-lambda ((g$x$7216$XcRv&) '#f))
       (case-lambda
         ((g$p$7217$XcRv&)
          (begin
            (if (procedure? g$p$7217$XcRv&)
              (void)
              (assertion-violation '#f '"assertion failed" '(procedure? p)))
            g$p$7217$XcRv&)))))
   (g$mutable?$7211$XcRv&
     g$mutable?$7256$XcRv&
     (case-lambda
       ((g$x$7218$XcRv&)
        (letrec* ((g$simple?$7219$XcRv&
                    (case-lambda
                      ((g$x$7220$XcRv&)
                       ((case-lambda
                          ((g$t$7221$XcRv&)
                           (if g$t$7221$XcRv&
                             g$t$7221$XcRv&
                             ((case-lambda
                                ((g$t$7222$XcRv&)
                                 (if g$t$7222$XcRv&
                                   g$t$7222$XcRv&
                                   ((case-lambda
                                      ((g$t$7223$XcRv&)
                                       (if g$t$7223$XcRv&
                                         g$t$7223$XcRv&
                                         ((case-lambda
                                            ((g$t$7224$XcRv&)
                                             (if g$t$7224$XcRv&
                                               g$t$7224$XcRv&
                                               ((case-lambda
                                                  ((g$t$7225$XcRv&)
                                                   (if g$t$7225$XcRv&
                                                     g$t$7225$XcRv&
                                                     ((case-lambda
                                                        ((g$t$7226$XcRv&)
                                                         (if g$t$7226$XcRv&
                                                           g$t$7226$XcRv&
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7220$XcRv&)))))
                                                      (bytevector?
                                                        g$x$7220$XcRv&)))))
                                                (string? g$x$7220$XcRv&)))))
                                          (boolean? g$x$7220$XcRv&)))))
                                    (symbol? g$x$7220$XcRv&)))))
                              (char? g$x$7220$XcRv&)))))
                        (null? g$x$7220$XcRv&))))))
          (not (g$simple?$7219$XcRv& g$x$7218$XcRv&))))))
   (g$rewriter$7212$XcRv&
     g$rewriter$7257$XcRv&
     (case-lambda
       ((g$quote-hack?$7227$XcRv&)
        (letrec* ((g$f$7228$XcRv&
                    (case-lambda
                      ((g$x$7229$XcRv&)
                       (if (pair? g$x$7229$XcRv&)
                         ((case-lambda
                            ((g$t$7230$XcRv&)
                             (if (eqv? g$t$7230$XcRv& 'quote)
                               (if (if g$quote-hack?$7227$XcRv&
                                     (begin
                                       '#f
                                       (g$mutable?$7211$XcRv&
                                         (g$cadr$5550$XcRv& g$x$7229$XcRv&)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7250$XcRv&)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7250$XcRv&
                                         (g$cadr$5550$XcRv& g$x$7229$XcRv&))
                                       g$g$7250$XcRv&)))
                                  (gensym))
                                 g$x$7229$XcRv&)
                               (if (eqv? g$t$7230$XcRv& 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$7249$XcRv&)
                                           (cons
                                             (car g$x$7249$XcRv&)
                                             (map g$f$7228$XcRv&
                                                  (cdr g$x$7249$XcRv&)))))
                                        (cdr g$x$7229$XcRv&)))
                                 (if (eqv? g$t$7230$XcRv& 'lambda)
                                   (g$cons*$6021$XcRv&
                                     'lambda
                                     (g$cadr$5550$XcRv& g$x$7229$XcRv&)
                                     (map g$f$7228$XcRv&
                                          (g$cddr$5552$XcRv& g$x$7229$XcRv&)))
                                   (if (eqv? g$t$7230$XcRv& 'letrec)
                                     ((case-lambda
                                        ((g$bindings$7245$XcRv&
                                           g$body*$7246$XcRv&)
                                         ((case-lambda
                                            ((g$lhs*$7247$XcRv&
                                               g$rhs*$7248$XcRv&)
                                             (g$cons*$6021$XcRv&
                                               'letrec
                                               (map list
                                                    g$lhs*$7247$XcRv&
                                                    (map g$f$7228$XcRv&
                                                         g$rhs*$7248$XcRv&))
                                               (map g$f$7228$XcRv&
                                                    g$body*$7246$XcRv&))))
                                          (map car g$bindings$7245$XcRv&)
                                          (map g$cadr$5550$XcRv&
                                               g$bindings$7245$XcRv&))))
                                      (g$cadr$5550$XcRv& g$x$7229$XcRv&)
                                      (g$cddr$5552$XcRv& g$x$7229$XcRv&))
                                     (if (eqv? g$t$7230$XcRv& 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$7241$XcRv&
                                             g$body*$7242$XcRv&)
                                           ((case-lambda
                                              ((g$lhs*$7243$XcRv&
                                                 g$rhs*$7244$XcRv&)
                                               (g$cons*$6021$XcRv&
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$7243$XcRv&
                                                      (map g$f$7228$XcRv&
                                                           g$rhs*$7244$XcRv&))
                                                 (map g$f$7228$XcRv&
                                                      g$body*$7242$XcRv&))))
                                            (map car g$bindings$7241$XcRv&)
                                            (map g$cadr$5550$XcRv&
                                                 g$bindings$7241$XcRv&))))
                                        (g$cadr$5550$XcRv& g$x$7229$XcRv&)
                                        (g$cddr$5552$XcRv& g$x$7229$XcRv&))
                                       (if (eqv?
                                             g$t$7230$XcRv&
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$7234$XcRv& g$x$7235$XcRv&)
                                             ((case-lambda
                                                ((g$bindings$7236$XcRv&
                                                   g$body*$7237$XcRv&)
                                                 ((case-lambda
                                                    ((g$lhs*$7238$XcRv&
                                                       g$lhs**$7239$XcRv&
                                                       g$rhs*$7240$XcRv&)
                                                     (g$cons*$6021$XcRv&
                                                       'library-letrec*
                                                       g$name$7234$XcRv&
                                                       (map list
                                                            g$lhs*$7238$XcRv&
                                                            g$lhs**$7239$XcRv&
                                                            (map g$f$7228$XcRv&
                                                                 g$rhs*$7240$XcRv&))
                                                       (map g$f$7228$XcRv&
                                                            g$body*$7237$XcRv&))))
                                                  (map car
                                                       g$bindings$7236$XcRv&)
                                                  (map g$cadr$5550$XcRv&
                                                       g$bindings$7236$XcRv&)
                                                  (map g$caddr$5556$XcRv&
                                                       g$bindings$7236$XcRv&))))
                                              (g$cadr$5550$XcRv& g$x$7235$XcRv&)
                                              (g$cddr$5552$XcRv&
                                                g$x$7235$XcRv&))))
                                          (g$cadr$5550$XcRv& g$x$7229$XcRv&)
                                          (cdr g$x$7229$XcRv&))
                                         (if (eqv? g$t$7230$XcRv& 'begin)
                                           (cons
                                             'begin
                                             (map g$f$7228$XcRv&
                                                  (cdr g$x$7229$XcRv&)))
                                           (if (eqv? g$t$7230$XcRv& 'set!)
                                             (list
                                               'set!
                                               (g$cadr$5550$XcRv&
                                                 g$x$7229$XcRv&)
                                               (g$f$7228$XcRv&
                                                 (g$caddr$5556$XcRv&
                                                   g$x$7229$XcRv&)))
                                             (if (eqv?
                                                   g$t$7230$XcRv&
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$7231$XcRv&)
                                                   ((case-lambda
                                                      ((g$t$7232$XcRv&)
                                                       (if g$t$7232$XcRv&
                                                         ((case-lambda
                                                            ((g$loc$7233$XcRv&)
                                                             g$loc$7233$XcRv&))
                                                          g$t$7232$XcRv&)
                                                         g$op$7231$XcRv&)))
                                                    ((g$current-primitive-locations$7210$XcRv&)
                                                     g$op$7231$XcRv&))))
                                                (g$cadr$5550$XcRv&
                                                  g$x$7229$XcRv&))
                                               (if (eqv? g$t$7230$XcRv& 'define)
                                                 g$x$7229$XcRv&
                                                 (if (list? g$x$7229$XcRv&)
                                                   (map g$f$7228$XcRv&
                                                        g$x$7229$XcRv&)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7229$XcRv&
                                                     (list?
                                                       g$x$7229$XcRv&)))))))))))))))
                          (car g$x$7229$XcRv&))
                         g$x$7229$XcRv&)))))
          g$f$7228$XcRv&))))
   (g$expanded->core$7213$XcRv&
     g$expanded->core$7258$XcRv&
     (case-lambda
       ((g$x$7251$XcRv&) ((g$rewriter$7212$XcRv& '#t) g$x$7251$XcRv&))))
   (g$compile-core-expr$7214$XcRv&
     g$compile-core-expr$7259$XcRv&
     (case-lambda
       ((g$x$7252$XcRv&) ((g$rewriter$7212$XcRv& '#f) g$x$7252$XcRv&))))
   (g$compile-core-expr-to-port$7215$XcRv&
     g$compile-core-expr-to-port$7260$XcRv&
     (case-lambda
       ((g$x$7253$XcRv& g$p$7254$XcRv&)
        (g$pretty-print$7209$XcRv&
          ((g$rewriter$7212$XcRv& '#f) g$x$7253$XcRv&)
          g$p$7254$XcRv&)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$7299$XcRv&
     g$make-collection$7503$XcRv&
     (case-lambda
       (()
        ((case-lambda
           ((g$set$7360$XcRv&)
            (letrec* ((g$set-cons$7361$XcRv&
                        (case-lambda
                          ((g$x$7363$XcRv& g$ls$7364$XcRv&)
                           (if (memq g$x$7363$XcRv& g$ls$7364$XcRv&)
                             g$ls$7364$XcRv&
                             (cons g$x$7363$XcRv& g$ls$7364$XcRv&))))))
              (case-lambda
                (() g$set$7360$XcRv&)
                ((g$x$7362$XcRv&)
                 (set! g$set$7360$XcRv&
                   (g$set-cons$7361$XcRv& g$x$7362$XcRv& g$set$7360$XcRv&)))))))
         '()))))
   (g$current-library-collection$7300$XcRv&
     g$current-library-collection$7504$XcRv&
     (g$make-parameter$7012$XcRv&
       (g$make-collection$7299$XcRv&)
       (case-lambda
         ((g$x$7365$XcRv&)
          (begin
            (if (procedure? g$x$7365$XcRv&)
              (void)
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$7365$XcRv&))
            g$x$7365$XcRv&)))))
   (g$8086$7301$XcRv&
     g$8086$7505$XcRv&
     (make-record-type-descriptor
       'library
       '#f
       'g$8089$XcRv&
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8088$7302$XcRv& g$8088$7506$XcRv& '#f)
   (g$8087$7303$XcRv&
     g$8087$7507$XcRv&
     (make-record-constructor-descriptor
       g$8086$7301$XcRv&
       '#f
       g$8088$7302$XcRv&))
   (g$library?$7304$XcRv&
     g$library?$7508$XcRv&
     (record-predicate g$8086$7301$XcRv&))
   (g$make-library$7305$XcRv&
     g$make-library$7509$XcRv&
     (record-constructor g$8087$7303$XcRv&))
   (g$library-id$7306$XcRv&
     g$library-id$7510$XcRv&
     (record-accessor g$8086$7301$XcRv& '0))
   (g$library-name$7307$XcRv&
     g$library-name$7511$XcRv&
     (record-accessor g$8086$7301$XcRv& '1))
   (g$library-version$7308$XcRv&
     g$library-version$7512$XcRv&
     (record-accessor g$8086$7301$XcRv& '2))
   (g$library-imp*$7309$XcRv&
     g$library-imp*$7513$XcRv&
     (record-accessor g$8086$7301$XcRv& '3))
   (g$library-vis*$7310$XcRv&
     g$library-vis*$7514$XcRv&
     (record-accessor g$8086$7301$XcRv& '4))
   (g$library-inv*$7311$XcRv&
     g$library-inv*$7515$XcRv&
     (record-accessor g$8086$7301$XcRv& '5))
   (g$library-subst$7312$XcRv&
     g$library-subst$7516$XcRv&
     (record-accessor g$8086$7301$XcRv& '6))
   (g$library-env$7313$XcRv&
     g$library-env$7517$XcRv&
     (record-accessor g$8086$7301$XcRv& '7))
   (g$library-visit-state$7314$XcRv&
     g$library-visit-state$7518$XcRv&
     (record-accessor g$8086$7301$XcRv& '8))
   (g$library-invoke-state$7315$XcRv&
     g$library-invoke-state$7519$XcRv&
     (record-accessor g$8086$7301$XcRv& '9))
   (g$library-visit-code$7316$XcRv&
     g$library-visit-code$7520$XcRv&
     (record-accessor g$8086$7301$XcRv& '10))
   (g$library-invoke-code$7317$XcRv&
     g$library-invoke-code$7521$XcRv&
     (record-accessor g$8086$7301$XcRv& '11))
   (g$library-visible?$7318$XcRv&
     g$library-visible?$7522$XcRv&
     (record-accessor g$8086$7301$XcRv& '12))
   (g$library-source-file-name$7319$XcRv&
     g$library-source-file-name$7523$XcRv&
     (record-accessor g$8086$7301$XcRv& '13))
   (g$set-library-id!$7320$XcRv&
     g$set-library-id!$7524$XcRv&
     (record-mutator g$8086$7301$XcRv& '0))
   (g$set-library-name!$7321$XcRv&
     g$set-library-name!$7525$XcRv&
     (record-mutator g$8086$7301$XcRv& '1))
   (g$set-library-version!$7322$XcRv&
     g$set-library-version!$7526$XcRv&
     (record-mutator g$8086$7301$XcRv& '2))
   (g$set-library-imp*!$7323$XcRv&
     g$set-library-imp*!$7527$XcRv&
     (record-mutator g$8086$7301$XcRv& '3))
   (g$set-library-vis*!$7324$XcRv&
     g$set-library-vis*!$7528$XcRv&
     (record-mutator g$8086$7301$XcRv& '4))
   (g$set-library-inv*!$7325$XcRv&
     g$set-library-inv*!$7529$XcRv&
     (record-mutator g$8086$7301$XcRv& '5))
   (g$set-library-subst!$7326$XcRv&
     g$set-library-subst!$7530$XcRv&
     (record-mutator g$8086$7301$XcRv& '6))
   (g$set-library-env!$7327$XcRv&
     g$set-library-env!$7531$XcRv&
     (record-mutator g$8086$7301$XcRv& '7))
   (g$set-library-visit-state!$7328$XcRv&
     g$set-library-visit-state!$7532$XcRv&
     (record-mutator g$8086$7301$XcRv& '8))
   (g$set-library-invoke-state!$7329$XcRv&
     g$set-library-invoke-state!$7533$XcRv&
     (record-mutator g$8086$7301$XcRv& '9))
   (g$set-library-visit-code!$7330$XcRv&
     g$set-library-visit-code!$7534$XcRv&
     (record-mutator g$8086$7301$XcRv& '10))
   (g$set-library-invoke-code!$7331$XcRv&
     g$set-library-invoke-code!$7535$XcRv&
     (record-mutator g$8086$7301$XcRv& '11))
   (g$set-library-visible?!$7332$XcRv&
     g$set-library-visible?!$7536$XcRv&
     (record-mutator g$8086$7301$XcRv& '12))
   (g$set-library-source-file-name!$7333$XcRv&
     g$set-library-source-file-name!$7537$XcRv&
     (record-mutator g$8086$7301$XcRv& '13))
   (g$rp$7334$XcRv&
     g$rp$7538$XcRv&
     (make-record-printer
       'library
       (case-lambda
         ((g$x$7366$XcRv& g$p$7367$XcRv&)
          (begin
            (if (g$library?$7304$XcRv& g$x$7366$XcRv&)
              (void)
              (assertion-violation 'record-type-printer '"not a library"))
            (display
              (g$format$6928$XcRv&
                '"#<library ~s>"
                (if (null? (g$library-version$7308$XcRv& g$x$7366$XcRv&))
                  (g$library-name$7307$XcRv& g$x$7366$XcRv&)
                  (append
                    (g$library-name$7307$XcRv& g$x$7366$XcRv&)
                    (list (g$library-version$7308$XcRv& g$x$7366$XcRv&)))))
              g$p$7367$XcRv&))))))
   (g$find-dependencies$7335$XcRv&
     g$find-dependencies$7539$XcRv&
     (case-lambda
       ((g$ls$7368$XcRv&)
        (if (null? g$ls$7368$XcRv&)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$7336$XcRv&
     g$find-library-by$7540$XcRv&
     (case-lambda
       ((g$pred$7369$XcRv&)
        ((letrec ((g$f$7370$XcRv&
                    (case-lambda
                      ((g$ls$7371$XcRv&)
                       (if (null? g$ls$7371$XcRv&)
                         '#f
                         (if (g$pred$7369$XcRv& (car g$ls$7371$XcRv&))
                           (car g$ls$7371$XcRv&)
                           (g$f$7370$XcRv& (cdr g$ls$7371$XcRv&))))))))
           g$f$7370$XcRv&)
         ((g$current-library-collection$7300$XcRv&))))))
   (g$library-path$7337$XcRv&
     g$library-path$7541$XcRv&
     (g$make-parameter$7012$XcRv&
       '(".")
       (case-lambda
         ((g$x$7372$XcRv&)
          (if (if (list? g$x$7372$XcRv&)
                (begin '#f (g$for-all$6019$XcRv& string? g$x$7372$XcRv&))
                '#f)
            (map (case-lambda ((g$x$7373$XcRv&) g$x$7373$XcRv&)) g$x$7372$XcRv&)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7372$XcRv&))))))
   (g$library-extensions$7338$XcRv&
     g$library-extensions$7542$XcRv&
     (g$make-parameter$7012$XcRv&
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7374$XcRv&)
          (if (if (list? g$x$7374$XcRv&)
                (begin '#f (g$for-all$6019$XcRv& string? g$x$7374$XcRv&))
                '#f)
            (map (case-lambda ((g$x$7375$XcRv&) g$x$7375$XcRv&)) g$x$7374$XcRv&)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7374$XcRv&))))))
   (g$library-name->file-name$7339$XcRv&
     g$library-name->file-name$7543$XcRv&
     (case-lambda
       ((g$x$7376$XcRv&)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6749$XcRv&)))
          (case-lambda
            ((g$p$7379$XcRv& g$extract$7380$XcRv&)
             ((case-lambda
                ((g$extract$7381$XcRv& g$p$7382$XcRv&)
                 (letrec* ((g$display-hex$7383$XcRv&
                             (case-lambda
                               ((g$n$7391$XcRv&)
                                (if (<= '0 g$n$7391$XcRv& '9)
                                  (display g$n$7391$XcRv& g$p$7382$XcRv&)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7391$XcRv& '10)))
                                    g$p$7382$XcRv&))))))
                   (begin
                     ((letrec ((g$f$7384$XcRv&
                                 (case-lambda
                                   ((g$ls$7385$XcRv&)
                                    (if (null? g$ls$7385$XcRv&)
                                      (void)
                                      (begin
                                        (display '"/" g$p$7382$XcRv&)
                                        (for-each
                                          (case-lambda
                                            ((g$c$7386$XcRv&)
                                             (if ((case-lambda
                                                    ((g$t$7387$XcRv&)
                                                     (if g$t$7387$XcRv&
                                                       g$t$7387$XcRv&
                                                       ((case-lambda
                                                          ((g$t$7388$XcRv&)
                                                           (if g$t$7388$XcRv&
                                                             g$t$7388$XcRv&
                                                             ((case-lambda
                                                                ((g$t$7389$XcRv&)
                                                                 (if g$t$7389$XcRv&
                                                                   g$t$7389$XcRv&
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$7386$XcRv&
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (char<=?
                                                                '#\0
                                                                g$c$7386$XcRv&
                                                                '#\9)))))
                                                        (char<=?
                                                          '#\A
                                                          g$c$7386$XcRv&
                                                          '#\Z)))))
                                                  (char<=?
                                                    '#\a
                                                    g$c$7386$XcRv&
                                                    '#\z))
                                               (display
                                                 g$c$7386$XcRv&
                                                 g$p$7382$XcRv&)
                                               (begin
                                                 (display '"%" g$p$7382$XcRv&)
                                                 ((case-lambda
                                                    ((g$n$7390$XcRv&)
                                                     (begin
                                                       (g$display-hex$7383$XcRv&
                                                         (g$quotient$6376$XcRv&
                                                           g$n$7390$XcRv&
                                                           '16))
                                                       (g$display-hex$7383$XcRv&
                                                         (g$remainder$6377$XcRv&
                                                           g$n$7390$XcRv&
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7386$XcRv&))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7385$XcRv&))))
                                        (g$f$7384$XcRv&
                                          (cdr g$ls$7385$XcRv&))))))))
                        g$f$7384$XcRv&)
                      g$x$7376$XcRv&)
                     (g$extract$7381$XcRv&)))))
              g$extract$7380$XcRv&
              g$p$7379$XcRv&)))))))
   (g$file-locator$7340$XcRv&
     g$file-locator$7544$XcRv&
     (g$make-parameter$7012$XcRv&
       (case-lambda
         ((g$x$7392$XcRv&)
          ((case-lambda
             ((g$str$7393$XcRv&)
              ((letrec ((g$f$7394$XcRv&
                          (case-lambda
                            ((g$ls$7395$XcRv&
                               g$exts$7396$XcRv&
                               g$failed-list$7397$XcRv&)
                             (if (null? g$ls$7395$XcRv&)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8191$7398$XcRv&
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8194$XcRv&
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8193$7399$XcRv& '#f)
                                             (g$8192$7400$XcRv&
                                               (make-record-constructor-descriptor
                                                 g$8191$7398$XcRv&
                                                 &condition-rcd
                                                 g$8193$7399$XcRv&))
                                             (g$8190$7401$XcRv&
                                               (record-predicate
                                                 g$8191$7398$XcRv&))
                                             (g$make-library-resolution-condition$7402$XcRv&
                                               (record-constructor
                                                 g$8192$7400$XcRv&))
                                             (g$8188$7403$XcRv&
                                               (record-accessor
                                                 g$8191$7398$XcRv&
                                                 '0))
                                             (g$8189$7404$XcRv&
                                               (record-accessor
                                                 g$8191$7398$XcRv&
                                                 '1))
                                             (g$library-resolution-condition?$7405$XcRv&
                                               (condition-predicate
                                                 g$8191$7398$XcRv&))
                                             (g$condition-library$7406$XcRv&
                                               (condition-accessor
                                                 g$8191$7398$XcRv&
                                                 g$8188$7403$XcRv&))
                                             (g$condition-files$7407$XcRv&
                                               (condition-accessor
                                                 g$8191$7398$XcRv&
                                                 g$8189$7404$XcRv&)))
                                     (raise
                                       (condition
                                         (g$make-error$6293$XcRv&)
                                         (g$make-who-condition$6319$XcRv&
                                           'expander)
                                         (g$make-message-condition$6273$XcRv&
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$7402$XcRv&
                                           g$x$7392$XcRv&
                                           (reverse
                                             g$failed-list$7397$XcRv&))))))))
                               (if (null? g$exts$7396$XcRv&)
                                 (g$f$7394$XcRv&
                                   (cdr g$ls$7395$XcRv&)
                                   (g$library-extensions$7338$XcRv&)
                                   g$failed-list$7397$XcRv&)
                                 ((case-lambda
                                    ((g$name$7408$XcRv&)
                                     (if (g$file-exists?$5890$XcRv&
                                           g$name$7408$XcRv&)
                                       g$name$7408$XcRv&
                                       (g$f$7394$XcRv&
                                         g$ls$7395$XcRv&
                                         (cdr g$exts$7396$XcRv&)
                                         (cons
                                           g$name$7408$XcRv&
                                           g$failed-list$7397$XcRv&)))))
                                  (string-append
                                    (car g$ls$7395$XcRv&)
                                    g$str$7393$XcRv&
                                    (car g$exts$7396$XcRv&)))))))))
                 g$f$7394$XcRv&)
               (g$library-path$7337$XcRv&)
               (g$library-extensions$7338$XcRv&)
               '())))
           (g$library-name->file-name$7339$XcRv& g$x$7392$XcRv&))))
       (case-lambda
         ((g$f$7409$XcRv&)
          (if (procedure? g$f$7409$XcRv&)
            g$f$7409$XcRv&
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7409$XcRv&))))))
   (g$serialize-all$7341$XcRv&
     g$serialize-all$7545$XcRv&
     (case-lambda
       ((g$serialize$7410$XcRv& g$compile$7411$XcRv&)
        (letrec* ((g$library-desc$7412$XcRv&
                    (case-lambda
                      ((g$x$7414$XcRv&)
                       (list
                         (g$library-id$7306$XcRv& g$x$7414$XcRv&)
                         (g$library-name$7307$XcRv& g$x$7414$XcRv&))))))
          (for-each
            (case-lambda
              ((g$x$7413$XcRv&)
               (if (g$library-source-file-name$7319$XcRv& g$x$7413$XcRv&)
                 (g$serialize$7410$XcRv&
                   (g$library-source-file-name$7319$XcRv& g$x$7413$XcRv&)
                   (list
                     (g$library-id$7306$XcRv& g$x$7413$XcRv&)
                     (g$library-name$7307$XcRv& g$x$7413$XcRv&)
                     (g$library-version$7308$XcRv& g$x$7413$XcRv&)
                     (map g$library-desc$7412$XcRv&
                          (g$library-imp*$7309$XcRv& g$x$7413$XcRv&))
                     (map g$library-desc$7412$XcRv&
                          (g$library-vis*$7310$XcRv& g$x$7413$XcRv&))
                     (map g$library-desc$7412$XcRv&
                          (g$library-inv*$7311$XcRv& g$x$7413$XcRv&))
                     (g$library-subst$7312$XcRv& g$x$7413$XcRv&)
                     (g$library-env$7313$XcRv& g$x$7413$XcRv&)
                     (g$compile$7411$XcRv&
                       (g$library-visit-code$7316$XcRv& g$x$7413$XcRv&))
                     (g$compile$7411$XcRv&
                       (g$library-invoke-code$7317$XcRv& g$x$7413$XcRv&))
                     (g$library-visible?$7318$XcRv& g$x$7413$XcRv&)))
                 (void))))
            ((g$current-library-collection$7300$XcRv&)))))))
   (g$current-precompiled-library-loader$7342$XcRv&
     g$current-precompiled-library-loader$7546$XcRv&
     (g$make-parameter$7012$XcRv&
       (case-lambda ((g$filename$7415$XcRv& g$sk$7416$XcRv&) '#f))))
   (g$try-load-from-file$7343$XcRv&
     g$try-load-from-file$7547$XcRv&
     (case-lambda
       ((g$filename$7417$XcRv&)
        ((g$current-precompiled-library-loader$7342$XcRv&)
         g$filename$7417$XcRv&
         (case-lambda
           ((g$id$7418$XcRv&
              g$name$7419$XcRv&
              g$ver$7420$XcRv&
              g$imp*$7421$XcRv&
              g$vis*$7422$XcRv&
              g$inv*$7423$XcRv&
              g$exp-subst$7424$XcRv&
              g$exp-env$7425$XcRv&
              g$visit-proc$7426$XcRv&
              g$invoke-proc$7427$XcRv&
              g$visible?$7428$XcRv&)
            ((letrec ((g$f$7429$XcRv&
                        (case-lambda
                          ((g$deps$7430$XcRv&)
                           (if (null? g$deps$7430$XcRv&)
                             (begin
                               (g$install-library$7353$XcRv&
                                 g$id$7418$XcRv&
                                 g$name$7419$XcRv&
                                 g$ver$7420$XcRv&
                                 g$imp*$7421$XcRv&
                                 g$vis*$7422$XcRv&
                                 g$inv*$7423$XcRv&
                                 g$exp-subst$7424$XcRv&
                                 g$exp-env$7425$XcRv&
                                 g$visit-proc$7426$XcRv&
                                 g$invoke-proc$7427$XcRv&
                                 '#f
                                 '#f
                                 g$visible?$7428$XcRv&
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7431$XcRv&)
                                 ((case-lambda
                                    ((g$label$7432$XcRv& g$dname$7433$XcRv&)
                                     ((case-lambda
                                        ((g$l$7434$XcRv&)
                                         (if (if (g$library?$7304$XcRv&
                                                   g$l$7434$XcRv&)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7432$XcRv&
                                                      (g$library-id$7306$XcRv&
                                                        g$l$7434$XcRv&)))
                                               '#f)
                                           (g$f$7429$XcRv&
                                             (cdr g$deps$7430$XcRv&))
                                           (begin
                                             (g$fprintf$6927$XcRv&
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from \\
                           source.
"
                                               g$name$7419$XcRv&
                                               g$dname$7433$XcRv&
                                               g$filename$7417$XcRv&)
                                             '#f))))
                                      (g$find-library-by-name$7348$XcRv&
                                        g$dname$7433$XcRv&))))
                                  (car g$d$7431$XcRv&)
                                  (g$cadr$5550$XcRv& g$d$7431$XcRv&))))
                              (car g$deps$7430$XcRv&)))))))
               g$f$7429$XcRv&)
             (append g$imp*$7421$XcRv& g$vis*$7422$XcRv& g$inv*$7423$XcRv&)))
           (g$others$7435$XcRv& '#f))))))
   (g$library-loader$7344$XcRv&
     g$library-loader$7548$XcRv&
     (g$make-parameter$7012$XcRv&
       (case-lambda
         ((g$x$7436$XcRv&)
          ((case-lambda
             ((g$file-name$7437$XcRv&)
              (if (not g$file-name$7437$XcRv&)
                (assertion-violation '#f '"cannot file library" g$x$7436$XcRv&)
                ((case-lambda
                   ((g$t$7438$XcRv&)
                    (if g$t$7438$XcRv&
                      g$t$7438$XcRv&
                      (begin
                        '#f
                        ((g$current-library-expander$7345$XcRv&)
                         (g$read-library-source-file$7011$XcRv&
                           g$file-name$7437$XcRv&)
                         g$file-name$7437$XcRv&
                         (case-lambda
                           ((g$name$7439$XcRv&)
                            (if (equal? g$name$7439$XcRv& g$x$7436$XcRv&)
                              (void)
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6749$XcRv&)))
                                  (case-lambda
                                    ((g$p$7442$XcRv& g$e$7443$XcRv&)
                                     ((case-lambda
                                        ((g$e$7444$XcRv& g$p$7445$XcRv&)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7445$XcRv&)
                                           (write g$x$7436$XcRv& g$p$7445$XcRv&)
                                           (display '" in file " g$p$7445$XcRv&)
                                           (display
                                             g$file-name$7437$XcRv&
                                             g$p$7445$XcRv&)
                                           (display '", found " g$p$7445$XcRv&)
                                           (write
                                             g$name$7439$XcRv&
                                             g$p$7445$XcRv&)
                                           (display '" instead" g$p$7445$XcRv&)
                                           (g$e$7444$XcRv&))))
                                      g$e$7443$XcRv&
                                      g$p$7442$XcRv&)))))))))))))
                 (g$try-load-from-file$7343$XcRv& g$file-name$7437$XcRv&)))))
           ((g$file-locator$7340$XcRv&) g$x$7436$XcRv&))))
       (case-lambda
         ((g$f$7446$XcRv&)
          (if (procedure? g$f$7446$XcRv&)
            g$f$7446$XcRv&
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7446$XcRv&))))))
   (g$current-library-expander$7345$XcRv&
     g$current-library-expander$7549$XcRv&
     (g$make-parameter$7012$XcRv&
       (case-lambda
         ((g$x$7447$XcRv&)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7448$XcRv&)
          (if (procedure? g$f$7448$XcRv&)
            g$f$7448$XcRv&
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7448$XcRv&))))))
   (g$external-pending-libraries$7346$XcRv&
     g$external-pending-libraries$7550$XcRv&
     (g$make-parameter$7012$XcRv& '()))
   (g$find-external-library$7347$XcRv&
     g$find-external-library$7551$XcRv&
     (case-lambda
       ((g$name$7449$XcRv&)
        (begin
          (if (g$member$6015$XcRv&
                g$name$7449$XcRv&
                (g$external-pending-libraries$7346$XcRv&))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7449$XcRv&)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7452$XcRv&
                g$external-pending-libraries$7453$XcRv&)
              ((case-lambda
                 ((g$swap$7454$XcRv&)
                  (dynamic-wind
                    g$swap$7454$XcRv&
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$7344$XcRv&) g$name$7449$XcRv&)
                         ((case-lambda
                            ((g$t$7455$XcRv&)
                             (if g$t$7455$XcRv&
                               g$t$7455$XcRv&
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7449$XcRv&)))))
                          (g$find-library-by$7336$XcRv&
                            (case-lambda
                              ((g$x$7456$XcRv&)
                               (equal?
                                 (g$library-name$7307$XcRv& g$x$7456$XcRv&)
                                 g$name$7449$XcRv&))))))))
                    g$swap$7454$XcRv&)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7457$XcRv&)
                      (begin
                        (g$external-pending-libraries$7452$XcRv&
                          g$external-pending-libraries$7453$XcRv&)
                        (set! g$external-pending-libraries$7453$XcRv&
                          g$t$7457$XcRv&))))
                   (g$external-pending-libraries$7452$XcRv&)))))))
           g$external-pending-libraries$7346$XcRv&
           (cons
             g$name$7449$XcRv&
             (g$external-pending-libraries$7346$XcRv&)))))))
   (g$find-library-by-name$7348$XcRv&
     g$find-library-by-name$7552$XcRv&
     (case-lambda
       ((g$name$7458$XcRv&)
        ((case-lambda
           ((g$t$7459$XcRv&)
            (if g$t$7459$XcRv&
              g$t$7459$XcRv&
              (begin
                '#f
                (g$find-external-library$7347$XcRv& g$name$7458$XcRv&)))))
         (g$find-library-by$7336$XcRv&
           (case-lambda
             ((g$x$7460$XcRv&)
              (equal?
                (g$library-name$7307$XcRv& g$x$7460$XcRv&)
                g$name$7458$XcRv&))))))))
   (g$library-exists?$7349$XcRv&
     g$library-exists?$7553$XcRv&
     (case-lambda
       ((g$name$7461$XcRv&)
        (if (g$find-library-by$7336$XcRv&
              (case-lambda
                ((g$x$7462$XcRv&)
                 (equal?
                   (g$library-name$7307$XcRv& g$x$7462$XcRv&)
                   g$name$7461$XcRv&))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$7350$XcRv&
     g$find-library-by-spec/die$7554$XcRv&
     (case-lambda
       ((g$spec$7463$XcRv&)
        ((case-lambda
           ((g$id$7464$XcRv&)
            ((case-lambda
               ((g$t$7465$XcRv&)
                (if g$t$7465$XcRv&
                  g$t$7465$XcRv&
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7463$XcRv&)))))
             (g$find-library-by$7336$XcRv&
               (case-lambda
                 ((g$x$7466$XcRv&)
                  (eq? g$id$7464$XcRv&
                       (g$library-id$7306$XcRv& g$x$7466$XcRv&))))))))
         (car g$spec$7463$XcRv&)))))
   (g$label->binding-table$7351$XcRv&
     g$label->binding-table$7555$XcRv&
     (g$make-eq-hashtable$5812$XcRv&))
   (g$install-library-record$7352$XcRv&
     g$install-library-record$7556$XcRv&
     (case-lambda
       ((g$lib$7467$XcRv&)
        (begin
          ((case-lambda
             ((g$exp-env$7468$XcRv&)
              (for-each
                (case-lambda
                  ((g$x$7469$XcRv&)
                   ((case-lambda
                      ((g$label$7470$XcRv& g$binding$7471$XcRv&)
                       ((case-lambda
                          ((g$binding$7472$XcRv&)
                           (g$hashtable-set!$5816$XcRv&
                             g$label->binding-table$7351$XcRv&
                             g$label$7470$XcRv&
                             g$binding$7472$XcRv&)))
                        ((case-lambda
                           ((g$t$7473$XcRv&)
                            (if (eqv? g$t$7473$XcRv& 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$7467$XcRv&
                                  (cdr g$binding$7471$XcRv&)))
                              (if (eqv? g$t$7473$XcRv& 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7467$XcRv&
                                    (cdr g$binding$7471$XcRv&)))
                                (if (eqv? g$t$7473$XcRv& 'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7467$XcRv&
                                      (cdr g$binding$7471$XcRv&)))
                                  g$binding$7471$XcRv&)))))
                         (car g$binding$7471$XcRv&)))))
                    (car g$x$7469$XcRv&)
                    (cdr g$x$7469$XcRv&))))
                g$exp-env$7468$XcRv&)))
           (g$library-env$7313$XcRv& g$lib$7467$XcRv&))
          ((g$current-library-collection$7300$XcRv&) g$lib$7467$XcRv&)))))
   (g$install-library$7353$XcRv&
     g$install-library$7557$XcRv&
     (case-lambda
       ((g$id$7474$XcRv&
          g$name$7475$XcRv&
          g$ver$7476$XcRv&
          g$imp*$7477$XcRv&
          g$vis*$7478$XcRv&
          g$inv*$7479$XcRv&
          g$exp-subst$7480$XcRv&
          g$exp-env$7481$XcRv&
          g$visit-proc$7482$XcRv&
          g$invoke-proc$7483$XcRv&
          g$visit-code$7484$XcRv&
          g$invoke-code$7485$XcRv&
          g$visible?$7486$XcRv&
          g$source-file-name$7487$XcRv&)
        ((case-lambda
           ((g$imp-lib*$7488$XcRv& g$vis-lib*$7489$XcRv& g$inv-lib*$7490$XcRv&)
            (begin
              (if (if (symbol? g$id$7474$XcRv&)
                    (if (list? g$name$7475$XcRv&)
                      (begin '#f (list? g$ver$7476$XcRv&))
                      '#f)
                    '#f)
                (void)
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7474$XcRv&
                  g$name$7475$XcRv&
                  g$ver$7476$XcRv&))
              (if (g$library-exists?$7349$XcRv& g$name$7475$XcRv&)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7475$XcRv&)
                (void))
              ((case-lambda
                 ((g$lib$7491$XcRv&)
                  (g$install-library-record$7352$XcRv& g$lib$7491$XcRv&)))
               (g$make-library$7305$XcRv&
                 g$id$7474$XcRv&
                 g$name$7475$XcRv&
                 g$ver$7476$XcRv&
                 g$imp-lib*$7488$XcRv&
                 g$vis-lib*$7489$XcRv&
                 g$inv-lib*$7490$XcRv&
                 g$exp-subst$7480$XcRv&
                 g$exp-env$7481$XcRv&
                 g$visit-proc$7482$XcRv&
                 g$invoke-proc$7483$XcRv&
                 g$visit-code$7484$XcRv&
                 g$invoke-code$7485$XcRv&
                 g$visible?$7486$XcRv&
                 g$source-file-name$7487$XcRv&)))))
         (map g$find-library-by-spec/die$7350$XcRv& g$imp*$7477$XcRv&)
         (map g$find-library-by-spec/die$7350$XcRv& g$vis*$7478$XcRv&)
         (map g$find-library-by-spec/die$7350$XcRv& g$inv*$7479$XcRv&)))))
   (g$imported-label->binding$7354$XcRv&
     g$imported-label->binding$7558$XcRv&
     (case-lambda
       ((g$lab$7492$XcRv&)
        (g$hashtable-ref$5815$XcRv&
          g$label->binding-table$7351$XcRv&
          g$lab$7492$XcRv&
          '#f))))
   (g$invoke-library$7355$XcRv&
     g$invoke-library$7559$XcRv&
     (case-lambda
       ((g$lib$7493$XcRv&)
        ((case-lambda
           ((g$invoke$7494$XcRv&)
            (if (procedure? g$invoke$7494$XcRv&)
              (begin
                (g$set-library-invoke-state!$7329$XcRv&
                  g$lib$7493$XcRv&
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7493$XcRv&))))
                (for-each
                  g$invoke-library$7355$XcRv&
                  (g$library-inv*$7311$XcRv& g$lib$7493$XcRv&))
                (g$set-library-invoke-state!$7329$XcRv&
                  g$lib$7493$XcRv&
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7493$XcRv&))))
                (g$invoke$7494$XcRv&)
                (g$set-library-invoke-state!$7329$XcRv& g$lib$7493$XcRv& '#t))
              (void))))
         (g$library-invoke-state$7315$XcRv& g$lib$7493$XcRv&)))))
   (g$visit-library$7356$XcRv&
     g$visit-library$7560$XcRv&
     (case-lambda
       ((g$lib$7495$XcRv&)
        ((case-lambda
           ((g$visit$7496$XcRv&)
            (if (procedure? g$visit$7496$XcRv&)
              (begin
                (g$set-library-visit-state!$7328$XcRv&
                  g$lib$7495$XcRv&
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7495$XcRv&))))
                (for-each
                  g$invoke-library$7355$XcRv&
                  (g$library-vis*$7310$XcRv& g$lib$7495$XcRv&))
                (g$set-library-visit-state!$7328$XcRv&
                  g$lib$7495$XcRv&
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7495$XcRv&))))
                (g$visit$7496$XcRv&)
                (g$set-library-visit-state!$7328$XcRv& g$lib$7495$XcRv& '#t))
              (void))))
         (g$library-visit-state$7314$XcRv& g$lib$7495$XcRv&)))))
   (g$invoke-library-by-spec$7357$XcRv&
     g$invoke-library-by-spec$7561$XcRv&
     (case-lambda
       ((g$spec$7497$XcRv&)
        (g$invoke-library$7355$XcRv&
          (g$find-library-by-spec/die$7350$XcRv& g$spec$7497$XcRv&)))))
   (g$installed-libraries$7358$XcRv&
     g$installed-libraries$7562$XcRv&
     (case-lambda
       ((g$all?$7498$XcRv&)
        ((letrec ((g$f$7499$XcRv&
                    (case-lambda
                      ((g$ls$7500$XcRv&)
                       (if (null? g$ls$7500$XcRv&)
                         '()
                         (if ((case-lambda
                                ((g$t$7501$XcRv&)
                                 (if g$t$7501$XcRv&
                                   g$t$7501$XcRv&
                                   (begin
                                     '#f
                                     (g$library-visible?$7318$XcRv&
                                       (car g$ls$7500$XcRv&))))))
                              g$all?$7498$XcRv&)
                           (cons
                             (car g$ls$7500$XcRv&)
                             (g$f$7499$XcRv& (cdr g$ls$7500$XcRv&)))
                           (g$f$7499$XcRv& (cdr g$ls$7500$XcRv&))))))))
           g$f$7499$XcRv&)
         ((g$current-library-collection$7300$XcRv&))))
       (() (g$installed-libraries$7358$XcRv& '#f))))
   (g$library-spec$7359$XcRv&
     g$library-spec$7563$XcRv&
     (case-lambda
       ((g$x$7502$XcRv&)
        (begin
          (if (g$library?$7304$XcRv& g$x$7502$XcRv&)
            (void)
            (assertion-violation 'library-spec '"not a library" g$x$7502$XcRv&))
          (list
            (g$library-id$7306$XcRv& g$x$7502$XcRv&)
            (g$library-name$7307$XcRv& g$x$7502$XcRv&)
            (g$library-version$7308$XcRv& g$x$7502$XcRv&)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7564$XcRv&
     g$build-global-define$7674$XcRv&
     (case-lambda ((g$x$7645$XcRv&) (g$build-void$7641$XcRv&))))
   (g$build-lambda$7613$XcRv&
     g$build-lambda$7675$XcRv&
     (case-lambda
       ((g$ae$7646$XcRv& g$vars$7647$XcRv& g$exp$7648$XcRv&)
        (list 'case-lambda (list g$vars$7647$XcRv& g$exp$7648$XcRv&)))))
   (g$build-case-lambda$7614$XcRv&
     g$build-case-lambda$7676$XcRv&
     (case-lambda
       ((g$ae$7649$XcRv& g$vars*$7650$XcRv& g$exp*$7651$XcRv&)
        (cons 'case-lambda (map list g$vars*$7650$XcRv& g$exp*$7651$XcRv&)))))
   (g$build-let$7615$XcRv&
     g$build-let$7677$XcRv&
     (case-lambda
       ((g$ae$7652$XcRv& g$lhs*$7653$XcRv& g$rhs*$7654$XcRv& g$body$7655$XcRv&)
        (cons
          (g$build-lambda$7613$XcRv&
            g$ae$7652$XcRv&
            g$lhs*$7653$XcRv&
            g$body$7655$XcRv&)
          g$rhs*$7654$XcRv&))))
   (g$build-sequence$7640$XcRv&
     g$build-sequence$7678$XcRv&
     (case-lambda
       ((g$ae$7656$XcRv& g$exps$7657$XcRv&)
        ((letrec ((g$loop$7658$XcRv&
                    (case-lambda
                      ((g$exps$7659$XcRv&)
                       (if (null? (cdr g$exps$7659$XcRv&))
                         (car g$exps$7659$XcRv&)
                         (if (equal?
                               (car g$exps$7659$XcRv&)
                               (g$build-void$7641$XcRv&))
                           (g$loop$7658$XcRv& (cdr g$exps$7659$XcRv&))
                           (cons 'begin g$exps$7659$XcRv&)))))))
           g$loop$7658$XcRv&)
         g$exps$7657$XcRv&))))
   (g$build-void$7641$XcRv&
     g$build-void$7679$XcRv&
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7642$XcRv&
     g$build-letrec$7680$XcRv&
     (case-lambda
       ((g$ae$7660$XcRv&
          g$vars$7661$XcRv&
          g$val-exps$7662$XcRv&
          g$body-exp$7663$XcRv&)
        (if (null? g$vars$7661$XcRv&)
          g$body-exp$7663$XcRv&
          (list
            'letrec
            (map list g$vars$7661$XcRv& g$val-exps$7662$XcRv&)
            g$body-exp$7663$XcRv&)))))
   (g$build-letrec*$7643$XcRv&
     g$build-letrec*$7681$XcRv&
     (case-lambda
       ((g$ae$7664$XcRv&
          g$vars$7665$XcRv&
          g$val-exps$7666$XcRv&
          g$body-exp$7667$XcRv&)
        (if (null? g$vars$7665$XcRv&)
          g$body-exp$7667$XcRv&
          (list
            'letrec*
            (map list g$vars$7665$XcRv& g$val-exps$7666$XcRv&)
            g$body-exp$7667$XcRv&)))))
   (g$build-library-letrec*$7644$XcRv&
     g$build-library-letrec*$7682$XcRv&
     (case-lambda
       ((g$ae$7668$XcRv&
          g$name$7669$XcRv&
          g$vars$7670$XcRv&
          g$locs$7671$XcRv&
          g$val-exps$7672$XcRv&
          g$body-exp$7673$XcRv&)
        (list
          'library-letrec*
          g$name$7669$XcRv&
          (map list g$vars$7670$XcRv& g$locs$7671$XcRv& g$val-exps$7672$XcRv&)
          g$body-exp$7673$XcRv&)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7683$XcRv&
     g$set-cons$11326$XcRv&
     (case-lambda
       ((g$x$8136$XcRv& g$ls$8137$XcRv&)
        (if (memq g$x$8136$XcRv& g$ls$8137$XcRv&)
          g$ls$8137$XcRv&
          (cons g$x$8136$XcRv& g$ls$8137$XcRv&)))))
   (g$set-union$7684$XcRv&
     g$set-union$11327$XcRv&
     (case-lambda
       ((g$ls1$8138$XcRv& g$ls2$8139$XcRv&)
        (if (null? g$ls1$8138$XcRv&)
          g$ls2$8139$XcRv&
          (if (memq (car g$ls1$8138$XcRv&) g$ls2$8139$XcRv&)
            (g$set-union$7684$XcRv& (cdr g$ls1$8138$XcRv&) g$ls2$8139$XcRv&)
            (cons
              (car g$ls1$8138$XcRv&)
              (g$set-union$7684$XcRv&
                (cdr g$ls1$8138$XcRv&)
                g$ls2$8139$XcRv&)))))))
   (g$top-mark*$7686$XcRv& g$top-mark*$11328$XcRv& '(top))
   (g$top-marked?$7687$XcRv&
     g$top-marked?$11329$XcRv&
     (case-lambda ((g$m*$8140$XcRv&) (memq 'top g$m*$8140$XcRv&))))
   (g$gen-lexical$7688$XcRv&
     g$gen-lexical$11330$XcRv&
     (case-lambda
       ((g$sym$8141$XcRv&)
        (if (symbol? g$sym$8141$XcRv&)
          (gensym g$sym$8141$XcRv&)
          (if (g$stx?$7716$XcRv& g$sym$8141$XcRv&)
            (g$gen-lexical$7688$XcRv& (g$id->sym$7745$XcRv& g$sym$8141$XcRv&))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$8141$XcRv&))))))
   (g$gen-global$7689$XcRv&
     g$gen-global$11331$XcRv&
     (case-lambda
       ((g$x$8142$XcRv&) (g$gen-lexical$7688$XcRv& g$x$8142$XcRv&))))
   (g$gen-label$7690$XcRv&
     g$gen-label$11332$XcRv&
     (case-lambda ((g$_$8143$XcRv&) (gensym))))
   (g$gen-top-level-label$7691$XcRv&
     g$gen-top-level-label$11333$XcRv&
     (case-lambda
       ((g$id$8144$XcRv& g$rib$8145$XcRv&)
        (letrec* ((g$find$8146$XcRv&
                    (case-lambda
                      ((g$sym$8152$XcRv&
                         g$mark*$8153$XcRv&
                         g$sym*$8154$XcRv&
                         g$mark**$8155$XcRv&
                         g$label*$8156$XcRv&)
                       (if (pair? g$sym*$8154$XcRv&)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8152$XcRv&
                                        (car g$sym*$8154$XcRv&))
                                 (begin
                                   '#f
                                   (g$same-marks?$7746$XcRv&
                                     g$mark*$8153$XcRv&
                                     (car g$mark**$8155$XcRv&)))
                                 '#f)
                             (car g$label*$8156$XcRv&)
                             (g$find$8146$XcRv&
                               g$sym$8152$XcRv&
                               g$mark*$8153$XcRv&
                               (cdr g$sym*$8154$XcRv&)
                               (cdr g$mark**$8155$XcRv&)
                               (cdr g$label*$8156$XcRv&))))
                         '#f)))))
          ((case-lambda
             ((g$sym$8147$XcRv& g$mark*$8148$XcRv&)
              ((case-lambda
                 ((g$sym*$8149$XcRv&)
                  ((case-lambda
                     ((g$t$8150$XcRv&)
                      (if g$t$8150$XcRv&
                        ((case-lambda
                           ((g$label$8151$XcRv&)
                            (if (g$imported-label->binding$7558$XcRv&
                                  g$label$8151$XcRv&)
                              (gensym)
                              g$label$8151$XcRv&)))
                         g$t$8150$XcRv&)
                        (gensym))))
                   (if (memq
                         g$sym$8147$XcRv&
                         (g$rib-sym*$7699$XcRv& g$rib$8145$XcRv&))
                     (begin
                       '#f
                       (g$find$8146$XcRv&
                         g$sym$8147$XcRv&
                         g$mark*$8148$XcRv&
                         g$sym*$8149$XcRv&
                         (g$rib-mark**$7700$XcRv& g$rib$8145$XcRv&)
                         (g$rib-label*$7701$XcRv& g$rib$8145$XcRv&)))
                     '#f))))
               (g$rib-sym*$7699$XcRv& g$rib$8145$XcRv&))))
           (g$id->sym$7745$XcRv& g$id$8144$XcRv&)
           (g$stx-mark*$7719$XcRv& g$id$8144$XcRv&))))))
   (g$gen-define-label+loc$7692$XcRv&
     g$gen-define-label+loc$11334$XcRv&
     (case-lambda
       ((g$id$8157$XcRv& g$rib$8158$XcRv&)
        ((case-lambda
           ((g$t$8159$XcRv&)
            (if g$t$8159$XcRv&
              ((case-lambda
                 ((g$env$8160$XcRv&)
                  ((case-lambda
                     ((g$label$8161$XcRv& g$locs$8162$XcRv&)
                      (values
                        g$label$8161$XcRv&
                        ((case-lambda
                           ((g$t$8163$XcRv&)
                            (if g$t$8163$XcRv&
                              (cdr g$t$8163$XcRv&)
                              ((case-lambda
                                 ((g$loc$8164$XcRv&)
                                  (begin
                                    (g$set-interaction-env-locs!$8105$XcRv&
                                      g$env$8160$XcRv&
                                      (cons
                                        (cons
                                          g$label$8161$XcRv&
                                          g$loc$8164$XcRv&)
                                        g$locs$8162$XcRv&))
                                    g$loc$8164$XcRv&)))
                               (g$gen-lexical$7688$XcRv& g$id$8157$XcRv&)))))
                         (assq g$label$8161$XcRv& g$locs$8162$XcRv&)))))
                   (g$gen-top-level-label$7691$XcRv&
                     g$id$8157$XcRv&
                     g$rib$8158$XcRv&)
                   (g$interaction-env-locs$8102$XcRv& g$env$8160$XcRv&))))
               g$t$8159$XcRv&)
              (values (gensym) (g$gen-lexical$7688$XcRv& g$id$8157$XcRv&)))))
         (g$top-level-context$8135$XcRv&)))))
   (g$gen-define-label$7693$XcRv&
     g$gen-define-label$11335$XcRv&
     (case-lambda
       ((g$id$8165$XcRv& g$rib$8166$XcRv&)
        (if (g$top-level-context$8135$XcRv&)
          (g$gen-top-level-label$7691$XcRv& g$id$8165$XcRv& g$rib$8166$XcRv&)
          (gensym)))))
   (g$8488$7694$XcRv&
     g$8488$11336$XcRv&
     (make-record-type-descriptor
       'rib
       '#f
       'g$8491$XcRv&
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8490$7695$XcRv& g$8490$11337$XcRv& '#f)
   (g$8489$7696$XcRv&
     g$8489$11338$XcRv&
     (make-record-constructor-descriptor
       g$8488$7694$XcRv&
       '#f
       g$8490$7695$XcRv&))
   (g$rib?$7697$XcRv&
     g$rib?$11339$XcRv&
     (record-predicate g$8488$7694$XcRv&))
   (g$make-rib$7698$XcRv&
     g$make-rib$11340$XcRv&
     (record-constructor g$8489$7696$XcRv&))
   (g$rib-sym*$7699$XcRv&
     g$rib-sym*$11341$XcRv&
     (record-accessor g$8488$7694$XcRv& '0))
   (g$rib-mark**$7700$XcRv&
     g$rib-mark**$11342$XcRv&
     (record-accessor g$8488$7694$XcRv& '1))
   (g$rib-label*$7701$XcRv&
     g$rib-label*$11343$XcRv&
     (record-accessor g$8488$7694$XcRv& '2))
   (g$rib-sealed/freq$7702$XcRv&
     g$rib-sealed/freq$11344$XcRv&
     (record-accessor g$8488$7694$XcRv& '3))
   (g$set-rib-sym*!$7703$XcRv&
     g$set-rib-sym*!$11345$XcRv&
     (record-mutator g$8488$7694$XcRv& '0))
   (g$set-rib-mark**!$7704$XcRv&
     g$set-rib-mark**!$11346$XcRv&
     (record-mutator g$8488$7694$XcRv& '1))
   (g$set-rib-label*!$7705$XcRv&
     g$set-rib-label*!$11347$XcRv&
     (record-mutator g$8488$7694$XcRv& '2))
   (g$set-rib-sealed/freq!$7706$XcRv&
     g$set-rib-sealed/freq!$11348$XcRv&
     (record-mutator g$8488$7694$XcRv& '3))
   (g$make-empty-rib$7707$XcRv&
     g$make-empty-rib$11349$XcRv&
     (case-lambda (() (g$make-rib$7698$XcRv& '() '() '() '#f))))
   (g$extend-rib!$7708$XcRv&
     g$extend-rib!$11350$XcRv&
     (case-lambda
       ((g$rib$8167$XcRv& g$id$8168$XcRv& g$label$8169$XcRv&)
        (letrec* ((g$find$8170$XcRv&
                    (case-lambda
                      ((g$sym$8176$XcRv&
                         g$mark*$8177$XcRv&
                         g$sym*$8178$XcRv&
                         g$mark**$8179$XcRv&
                         g$label*$8180$XcRv&)
                       (if (pair? g$sym*$8178$XcRv&)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8176$XcRv&
                                        (car g$sym*$8178$XcRv&))
                                 (begin
                                   '#f
                                   (g$same-marks?$7746$XcRv&
                                     g$mark*$8177$XcRv&
                                     (car g$mark**$8179$XcRv&)))
                                 '#f)
                             g$label*$8180$XcRv&
                             (g$find$8170$XcRv&
                               g$sym$8176$XcRv&
                               g$mark*$8177$XcRv&
                               (cdr g$sym*$8178$XcRv&)
                               (cdr g$mark**$8179$XcRv&)
                               (cdr g$label*$8180$XcRv&))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7702$XcRv& g$rib$8167$XcRv&)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$8167$XcRv&)
              (void))
            ((case-lambda
               ((g$sym$8171$XcRv& g$mark*$8172$XcRv&)
                ((case-lambda
                   ((g$sym*$8173$XcRv&)
                    ((case-lambda
                       ((g$t$8174$XcRv&)
                        (if g$t$8174$XcRv&
                          ((case-lambda
                             ((g$p$8175$XcRv&)
                              (if (eq? g$label$8169$XcRv& (car g$p$8175$XcRv&))
                                (void)
                                (if (g$top-level-context$8135$XcRv&)
                                  (set-car! g$p$8175$XcRv& g$label$8169$XcRv&)
                                  (g$syntax-violation$8128$XcRv&
                                    '#f
                                    '"cannot redefine"
                                    g$id$8168$XcRv&)))))
                           g$t$8174$XcRv&)
                          (begin
                            (g$set-rib-sym*!$7703$XcRv&
                              g$rib$8167$XcRv&
                              (cons g$sym$8171$XcRv& g$sym*$8173$XcRv&))
                            (g$set-rib-mark**!$7704$XcRv&
                              g$rib$8167$XcRv&
                              (cons
                                g$mark*$8172$XcRv&
                                (g$rib-mark**$7700$XcRv& g$rib$8167$XcRv&)))
                            (g$set-rib-label*!$7705$XcRv&
                              g$rib$8167$XcRv&
                              (cons
                                g$label$8169$XcRv&
                                (g$rib-label*$7701$XcRv& g$rib$8167$XcRv&)))))))
                     (if (memq
                           g$sym$8171$XcRv&
                           (g$rib-sym*$7699$XcRv& g$rib$8167$XcRv&))
                       (begin
                         '#f
                         (g$find$8170$XcRv&
                           g$sym$8171$XcRv&
                           g$mark*$8172$XcRv&
                           g$sym*$8173$XcRv&
                           (g$rib-mark**$7700$XcRv& g$rib$8167$XcRv&)
                           (g$rib-label*$7701$XcRv& g$rib$8167$XcRv&)))
                       '#f))))
                 (g$rib-sym*$7699$XcRv& g$rib$8167$XcRv&))))
             (g$id->sym$7745$XcRv& g$id$8168$XcRv&)
             (g$stx-mark*$7719$XcRv& g$id$8168$XcRv&)))))))
   (g$make-rib-map$7709$XcRv&
     g$make-rib-map$11351$XcRv&
     (case-lambda
       ((g$sym*$8181$XcRv&)
        ((case-lambda
           ((g$ht$8182$XcRv&)
            ((letrec ((g$f$8183$XcRv&
                        (case-lambda
                          ((g$i$8184$XcRv& g$sym*$8185$XcRv&)
                           (if (null? g$sym*$8185$XcRv&)
                             g$ht$8182$XcRv&
                             (begin
                               (g$hashtable-update!$5819$XcRv&
                                 g$ht$8182$XcRv&
                                 (car g$sym*$8185$XcRv&)
                                 (case-lambda
                                   ((g$x$8186$XcRv&)
                                    (cons g$i$8184$XcRv& g$x$8186$XcRv&)))
                                 '())
                               (g$f$8183$XcRv&
                                 (+ g$i$8184$XcRv& '1)
                                 (cdr g$sym*$8185$XcRv&))))))))
               g$f$8183$XcRv&)
             '0
             g$sym*$8181$XcRv&)))
         (g$make-eq-hashtable$5812$XcRv&)))))
   (g$seal-rib!$7710$XcRv&
     g$seal-rib!$11352$XcRv&
     (case-lambda
       ((g$rib$8187$XcRv&)
        ((case-lambda
           ((g$sym*$8188$XcRv&)
            (if (null? g$sym*$8188$XcRv&)
              (void)
              (begin
                (g$set-rib-sym*!$7703$XcRv&
                  g$rib$8187$XcRv&
                  (list->vector g$sym*$8188$XcRv&))
                (g$set-rib-mark**!$7704$XcRv&
                  g$rib$8187$XcRv&
                  (list->vector (g$rib-mark**$7700$XcRv& g$rib$8187$XcRv&)))
                (g$set-rib-label*!$7705$XcRv&
                  g$rib$8187$XcRv&
                  (list->vector (g$rib-label*$7701$XcRv& g$rib$8187$XcRv&)))
                (g$set-rib-sealed/freq!$7706$XcRv&
                  g$rib$8187$XcRv&
                  (g$make-rib-map$7709$XcRv& g$sym*$8188$XcRv&))))))
         (g$rib-sym*$7699$XcRv& g$rib$8187$XcRv&)))))
   (g$unseal-rib!$7711$XcRv&
     g$unseal-rib!$11353$XcRv&
     (case-lambda
       ((g$rib$8189$XcRv&)
        (if (g$rib-sealed/freq$7702$XcRv& g$rib$8189$XcRv&)
          (begin
            (g$set-rib-sealed/freq!$7706$XcRv& g$rib$8189$XcRv& '#f)
            (g$set-rib-sym*!$7703$XcRv&
              g$rib$8189$XcRv&
              (vector->list (g$rib-sym*$7699$XcRv& g$rib$8189$XcRv&)))
            (g$set-rib-mark**!$7704$XcRv&
              g$rib$8189$XcRv&
              (vector->list (g$rib-mark**$7700$XcRv& g$rib$8189$XcRv&)))
            (g$set-rib-label*!$7705$XcRv&
              g$rib$8189$XcRv&
              (vector->list (g$rib-label*$7701$XcRv& g$rib$8189$XcRv&))))
          (void)))))
   (g$make-full-rib$7712$XcRv&
     g$make-full-rib$11354$XcRv&
     (case-lambda
       ((g$id*$8190$XcRv& g$label*$8191$XcRv&)
        ((case-lambda
           ((g$r$8192$XcRv&)
            (begin (g$seal-rib!$7710$XcRv& g$r$8192$XcRv&) g$r$8192$XcRv&)))
         (g$make-rib$7698$XcRv&
           (map g$id->sym$7745$XcRv& g$id*$8190$XcRv&)
           (map g$stx-mark*$7719$XcRv& g$id*$8190$XcRv&)
           g$label*$8191$XcRv&
           '#f)))))
   (g$8514$7713$XcRv&
     g$8514$11355$XcRv&
     (make-record-type-descriptor
       'stx
       '#f
       'g$8517$XcRv&
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8516$7714$XcRv& g$8516$11356$XcRv& '#f)
   (g$8515$7715$XcRv&
     g$8515$11357$XcRv&
     (make-record-constructor-descriptor
       g$8514$7713$XcRv&
       '#f
       g$8516$7714$XcRv&))
   (g$stx?$7716$XcRv&
     g$stx?$11358$XcRv&
     (record-predicate g$8514$7713$XcRv&))
   (g$make-stx$7717$XcRv&
     g$make-stx$11359$XcRv&
     (record-constructor g$8515$7715$XcRv&))
   (g$stx-expr$7718$XcRv&
     g$stx-expr$11360$XcRv&
     (record-accessor g$8514$7713$XcRv& '0))
   (g$stx-mark*$7719$XcRv&
     g$stx-mark*$11361$XcRv&
     (record-accessor g$8514$7713$XcRv& '1))
   (g$stx-subst*$7720$XcRv&
     g$stx-subst*$11362$XcRv&
     (record-accessor g$8514$7713$XcRv& '2))
   (g$stx-ae*$7721$XcRv&
     g$stx-ae*$11363$XcRv&
     (record-accessor g$8514$7713$XcRv& '3))
   (g$set-stx-expr!$7722$XcRv&
     g$set-stx-expr!$11364$XcRv&
     (record-mutator g$8514$7713$XcRv& '0))
   (g$set-stx-mark*!$7723$XcRv&
     g$set-stx-mark*!$11365$XcRv&
     (record-mutator g$8514$7713$XcRv& '1))
   (g$set-stx-subst*!$7724$XcRv&
     g$set-stx-subst*!$11366$XcRv&
     (record-mutator g$8514$7713$XcRv& '2))
   (g$set-stx-ae*!$7725$XcRv&
     g$set-stx-ae*!$11367$XcRv&
     (record-mutator g$8514$7713$XcRv& '3))
   (g$rp$7726$XcRv&
     g$rp$11368$XcRv&
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8193$XcRv& g$p$8194$XcRv&)
          (begin
            (display '"#<syntax " g$p$8194$XcRv&)
            (write (g$stx->datum$7755$XcRv& g$x$8193$XcRv&) g$p$8194$XcRv&)
            ((case-lambda
               ((g$expr$8195$XcRv&)
                (if (annotation? g$expr$8195$XcRv&)
                  ((case-lambda
                     ((g$src$8196$XcRv&)
                      (if (pair? g$src$8196$XcRv&)
                        (begin
                          (display '" [" g$p$8194$XcRv&)
                          (display (cdr g$src$8196$XcRv&) g$p$8194$XcRv&)
                          (display '" of " g$p$8194$XcRv&)
                          (display (car g$src$8196$XcRv&) g$p$8194$XcRv&)
                          (display '"]" g$p$8194$XcRv&))
                        (void))))
                   (annotation-source g$expr$8195$XcRv&))
                  (void))))
             (g$stx-expr$7718$XcRv& g$x$8193$XcRv&))
            (display '">" g$p$8194$XcRv&))))))
   (g$datum->stx$7727$XcRv&
     g$datum->stx$11369$XcRv&
     (case-lambda
       ((g$id$8197$XcRv& g$datum$8198$XcRv&)
        (g$make-stx$7717$XcRv&
          g$datum$8198$XcRv&
          (g$stx-mark*$7719$XcRv& g$id$8197$XcRv&)
          (g$stx-subst*$7720$XcRv& g$id$8197$XcRv&)
          (g$stx-ae*$7721$XcRv& g$id$8197$XcRv&)))))
   (g$gen-mark$7728$XcRv&
     g$gen-mark$11370$XcRv&
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7729$XcRv& g$anti-mark$11371$XcRv& '#f)
   (g$anti-mark?$7730$XcRv& g$anti-mark?$11372$XcRv& not)
   (g$join-wraps$7731$XcRv&
     g$join-wraps$11373$XcRv&
     (case-lambda
       ((g$m1*$8199$XcRv& g$s1*$8200$XcRv& g$ae1*$8201$XcRv& g$e$8202$XcRv&)
        (letrec* ((g$cancel$8203$XcRv&
                    (case-lambda
                      ((g$ls1$8207$XcRv& g$ls2$8208$XcRv&)
                       ((letrec ((g$f$8209$XcRv&
                                   (case-lambda
                                     ((g$x$8210$XcRv& g$ls1$8211$XcRv&)
                                      (if (null? g$ls1$8211$XcRv&)
                                        (cdr g$ls2$8208$XcRv&)
                                        (cons
                                          g$x$8210$XcRv&
                                          (g$f$8209$XcRv&
                                            (car g$ls1$8211$XcRv&)
                                            (cdr g$ls1$8211$XcRv&))))))))
                          g$f$8209$XcRv&)
                        (car g$ls1$8207$XcRv&)
                        (cdr g$ls1$8207$XcRv&))))))
          ((case-lambda
             ((g$m2*$8204$XcRv& g$s2*$8205$XcRv& g$ae2*$8206$XcRv&)
              (if (if (not (null? g$m1*$8199$XcRv&))
                    (if (not (null? g$m2*$8204$XcRv&))
                      (begin
                        '#f
                        (g$anti-mark?$7730$XcRv& (car g$m2*$8204$XcRv&)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$8203$XcRv& g$m1*$8199$XcRv& g$m2*$8204$XcRv&)
                  (g$cancel$8203$XcRv& g$s1*$8200$XcRv& g$s2*$8205$XcRv&)
                  (g$cancel$8203$XcRv& g$ae1*$8201$XcRv& g$ae2*$8206$XcRv&))
                (values
                  (append g$m1*$8199$XcRv& g$m2*$8204$XcRv&)
                  (append g$s1*$8200$XcRv& g$s2*$8205$XcRv&)
                  (append g$ae1*$8201$XcRv& g$ae2*$8206$XcRv&)))))
           (g$stx-mark*$7719$XcRv& g$e$8202$XcRv&)
           (g$stx-subst*$7720$XcRv& g$e$8202$XcRv&)
           (g$stx-ae*$7721$XcRv& g$e$8202$XcRv&))))))
   (g$mkstx$7732$XcRv&
     g$mkstx$11374$XcRv&
     (case-lambda
       ((g$e$8212$XcRv& g$m*$8213$XcRv& g$s*$8214$XcRv& g$ae*$8215$XcRv&)
        (if (g$stx?$7716$XcRv& g$e$8212$XcRv&)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7731$XcRv&
                 g$m*$8213$XcRv&
                 g$s*$8214$XcRv&
                 g$ae*$8215$XcRv&
                 g$e$8212$XcRv&)))
            (case-lambda
              ((g$m*$8219$XcRv& g$s*$8220$XcRv& g$ae*$8221$XcRv&)
               ((case-lambda
                  ((g$ae*$8222$XcRv& g$s*$8223$XcRv& g$m*$8224$XcRv&)
                   (g$make-stx$7717$XcRv&
                     (g$stx-expr$7718$XcRv& g$e$8212$XcRv&)
                     g$m*$8224$XcRv&
                     g$s*$8223$XcRv&
                     g$ae*$8222$XcRv&)))
                g$ae*$8221$XcRv&
                g$s*$8220$XcRv&
                g$m*$8219$XcRv&))))
          (g$make-stx$7717$XcRv&
            g$e$8212$XcRv&
            g$m*$8213$XcRv&
            g$s*$8214$XcRv&
            g$ae*$8215$XcRv&)))))
   (g$add-mark$7733$XcRv&
     g$add-mark$11375$XcRv&
     (case-lambda
       ((g$m$8225$XcRv& g$e$8226$XcRv& g$ae$8227$XcRv&)
        (g$mkstx$7732$XcRv&
          g$e$8226$XcRv&
          (list g$m$8225$XcRv&)
          '(shift)
          (list g$ae$8227$XcRv&)))))
   (g$add-subst$7734$XcRv&
     g$add-subst$11376$XcRv&
     (case-lambda
       ((g$subst$8228$XcRv& g$e$8229$XcRv&)
        (g$mkstx$7732$XcRv& g$e$8229$XcRv& '() (list g$subst$8228$XcRv&) '()))))
   (g$syntax-kind?$7735$XcRv&
     g$syntax-kind?$11377$XcRv&
     (case-lambda
       ((g$x$8230$XcRv& g$p?$8231$XcRv&)
        (if (g$stx?$7716$XcRv& g$x$8230$XcRv&)
          (g$syntax-kind?$7735$XcRv&
            (g$stx-expr$7718$XcRv& g$x$8230$XcRv&)
            g$p?$8231$XcRv&)
          (if (annotation? g$x$8230$XcRv&)
            (g$syntax-kind?$7735$XcRv&
              (annotation-expression g$x$8230$XcRv&)
              g$p?$8231$XcRv&)
            (g$p?$8231$XcRv& g$x$8230$XcRv&))))))
   (g$syntax-vector->list$7736$XcRv&
     g$syntax-vector->list$11378$XcRv&
     (case-lambda
       ((g$x$8232$XcRv&)
        (if (g$stx?$7716$XcRv& g$x$8232$XcRv&)
          ((case-lambda
             ((g$ls$8233$XcRv& g$m*$8234$XcRv& g$s*$8235$XcRv& g$ae*$8236$XcRv&)
              (map (case-lambda
                     ((g$x$8237$XcRv&)
                      (g$mkstx$7732$XcRv&
                        g$x$8237$XcRv&
                        g$m*$8234$XcRv&
                        g$s*$8235$XcRv&
                        g$ae*$8236$XcRv&)))
                   g$ls$8233$XcRv&)))
           (g$syntax-vector->list$7736$XcRv&
             (g$stx-expr$7718$XcRv& g$x$8232$XcRv&))
           (g$stx-mark*$7719$XcRv& g$x$8232$XcRv&)
           (g$stx-subst*$7720$XcRv& g$x$8232$XcRv&)
           (g$stx-ae*$7721$XcRv& g$x$8232$XcRv&))
          (if (annotation? g$x$8232$XcRv&)
            (g$syntax-vector->list$7736$XcRv&
              (annotation-expression g$x$8232$XcRv&))
            (if (vector? g$x$8232$XcRv&)
              (vector->list g$x$8232$XcRv&)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$8232$XcRv&)))))))
   (g$syntax-pair?$7737$XcRv&
     g$syntax-pair?$11379$XcRv&
     (case-lambda
       ((g$x$8238$XcRv&) (g$syntax-kind?$7735$XcRv& g$x$8238$XcRv& pair?))))
   (g$syntax-vector?$7738$XcRv&
     g$syntax-vector?$11380$XcRv&
     (case-lambda
       ((g$x$8239$XcRv&) (g$syntax-kind?$7735$XcRv& g$x$8239$XcRv& vector?))))
   (g$syntax-null?$7739$XcRv&
     g$syntax-null?$11381$XcRv&
     (case-lambda
       ((g$x$8240$XcRv&) (g$syntax-kind?$7735$XcRv& g$x$8240$XcRv& null?))))
   (g$syntax-list?$7740$XcRv&
     g$syntax-list?$11382$XcRv&
     (case-lambda
       ((g$x$8241$XcRv&)
        ((case-lambda
           ((g$t$8242$XcRv&)
            (if g$t$8242$XcRv&
              g$t$8242$XcRv&
              (begin
                '#f
                (if (g$syntax-pair?$7737$XcRv& g$x$8241$XcRv&)
                  (begin
                    '#f
                    (g$syntax-list?$7740$XcRv&
                      (g$syntax-cdr$7742$XcRv& g$x$8241$XcRv&)))
                  '#f)))))
         (g$syntax-null?$7739$XcRv& g$x$8241$XcRv&)))))
   (g$syntax-car$7741$XcRv&
     g$syntax-car$11383$XcRv&
     (case-lambda
       ((g$x$8243$XcRv&)
        (if (g$stx?$7716$XcRv& g$x$8243$XcRv&)
          (g$mkstx$7732$XcRv&
            (g$syntax-car$7741$XcRv& (g$stx-expr$7718$XcRv& g$x$8243$XcRv&))
            (g$stx-mark*$7719$XcRv& g$x$8243$XcRv&)
            (g$stx-subst*$7720$XcRv& g$x$8243$XcRv&)
            (g$stx-ae*$7721$XcRv& g$x$8243$XcRv&))
          (if (annotation? g$x$8243$XcRv&)
            (g$syntax-car$7741$XcRv& (annotation-expression g$x$8243$XcRv&))
            (if (pair? g$x$8243$XcRv&)
              (car g$x$8243$XcRv&)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$8243$XcRv&)))))))
   (g$syntax-cdr$7742$XcRv&
     g$syntax-cdr$11384$XcRv&
     (case-lambda
       ((g$x$8244$XcRv&)
        (if (g$stx?$7716$XcRv& g$x$8244$XcRv&)
          (g$mkstx$7732$XcRv&
            (g$syntax-cdr$7742$XcRv& (g$stx-expr$7718$XcRv& g$x$8244$XcRv&))
            (g$stx-mark*$7719$XcRv& g$x$8244$XcRv&)
            (g$stx-subst*$7720$XcRv& g$x$8244$XcRv&)
            (g$stx-ae*$7721$XcRv& g$x$8244$XcRv&))
          (if (annotation? g$x$8244$XcRv&)
            (g$syntax-cdr$7742$XcRv& (annotation-expression g$x$8244$XcRv&))
            (if (pair? g$x$8244$XcRv&)
              (cdr g$x$8244$XcRv&)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$8244$XcRv&)))))))
   (g$syntax->list$7743$XcRv&
     g$syntax->list$11385$XcRv&
     (case-lambda
       ((g$x$8245$XcRv&)
        (if (g$syntax-pair?$7737$XcRv& g$x$8245$XcRv&)
          (cons
            (g$syntax-car$7741$XcRv& g$x$8245$XcRv&)
            (g$syntax->list$7743$XcRv&
              (g$syntax-cdr$7742$XcRv& g$x$8245$XcRv&)))
          (if (g$syntax-null?$7739$XcRv& g$x$8245$XcRv&)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$8245$XcRv&))))))
   (g$id?$7744$XcRv&
     g$id?$11386$XcRv&
     (case-lambda
       ((g$x$8246$XcRv&)
        (if (g$stx?$7716$XcRv& g$x$8246$XcRv&)
          (begin
            '#f
            ((case-lambda
               ((g$expr$8247$XcRv&)
                (symbol?
                  (if (annotation? g$expr$8247$XcRv&)
                    (annotation-stripped g$expr$8247$XcRv&)
                    g$expr$8247$XcRv&))))
             (g$stx-expr$7718$XcRv& g$x$8246$XcRv&)))
          '#f))))
   (g$id->sym$7745$XcRv&
     g$id->sym$11387$XcRv&
     (case-lambda
       ((g$x$8248$XcRv&)
        (begin
          (if (g$stx?$7716$XcRv& g$x$8248$XcRv&)
            (void)
            (error 'id->sym '"BUG in ikarus: not an id" g$x$8248$XcRv&))
          ((case-lambda
             ((g$expr$8249$XcRv&)
              ((case-lambda
                 ((g$sym$8250$XcRv&)
                  (if (symbol? g$sym$8250$XcRv&)
                    g$sym$8250$XcRv&
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$8248$XcRv&))))
               (if (annotation? g$expr$8249$XcRv&)
                 (annotation-stripped g$expr$8249$XcRv&)
                 g$expr$8249$XcRv&))))
           (g$stx-expr$7718$XcRv& g$x$8248$XcRv&))))))
   (g$same-marks?$7746$XcRv&
     g$same-marks?$11388$XcRv&
     (case-lambda
       ((g$x$8251$XcRv& g$y$8252$XcRv&)
        ((case-lambda
           ((g$t$8253$XcRv&)
            (if g$t$8253$XcRv&
              g$t$8253$XcRv&
              (begin
                '#f
                (if (pair? g$x$8251$XcRv&)
                  (if (pair? g$y$8252$XcRv&)
                    (if (eq? (car g$x$8251$XcRv&) (car g$y$8252$XcRv&))
                      (begin
                        '#f
                        (g$same-marks?$7746$XcRv&
                          (cdr g$x$8251$XcRv&)
                          (cdr g$y$8252$XcRv&)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$8251$XcRv&) (begin '#f (null? g$y$8252$XcRv&)) '#f)))))
   (g$bound-id=?$7747$XcRv&
     g$bound-id=?$11389$XcRv&
     (case-lambda
       ((g$x$8254$XcRv& g$y$8255$XcRv&)
        (if (eq? (g$id->sym$7745$XcRv& g$x$8254$XcRv&)
                 (g$id->sym$7745$XcRv& g$y$8255$XcRv&))
          (begin
            '#f
            (g$same-marks?$7746$XcRv&
              (g$stx-mark*$7719$XcRv& g$x$8254$XcRv&)
              (g$stx-mark*$7719$XcRv& g$y$8255$XcRv&)))
          '#f))))
   (g$free-id=?$7748$XcRv&
     g$free-id=?$11390$XcRv&
     (case-lambda
       ((g$i$8256$XcRv& g$j$8257$XcRv&)
        ((case-lambda
           ((g$t0$8258$XcRv& g$t1$8259$XcRv&)
            (if ((case-lambda
                   ((g$t$8260$XcRv&)
                    (if g$t$8260$XcRv&
                      g$t$8260$XcRv&
                      (begin '#f g$t1$8259$XcRv&))))
                 g$t0$8258$XcRv&)
              (eq? g$t0$8258$XcRv& g$t1$8259$XcRv&)
              (eq? (g$id->sym$7745$XcRv& g$i$8256$XcRv&)
                   (g$id->sym$7745$XcRv& g$j$8257$XcRv&)))))
         (g$id->real-label$7758$XcRv& g$i$8256$XcRv&)
         (g$id->real-label$7758$XcRv& g$j$8257$XcRv&)))))
   (g$valid-bound-ids?$7749$XcRv&
     g$valid-bound-ids?$11391$XcRv&
     (case-lambda
       ((g$id*$8261$XcRv&)
        (if (g$for-all$6019$XcRv& g$id?$7744$XcRv& g$id*$8261$XcRv&)
          (begin '#f (g$distinct-bound-ids?$7750$XcRv& g$id*$8261$XcRv&))
          '#f))))
   (g$distinct-bound-ids?$7750$XcRv&
     g$distinct-bound-ids?$11392$XcRv&
     (case-lambda
       ((g$id*$8262$XcRv&)
        ((case-lambda
           ((g$t$8263$XcRv&)
            (if g$t$8263$XcRv&
              g$t$8263$XcRv&
              (begin
                '#f
                (if (not (g$bound-id-member?$7751$XcRv&
                           (car g$id*$8262$XcRv&)
                           (cdr g$id*$8262$XcRv&)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7750$XcRv& (cdr g$id*$8262$XcRv&)))
                  '#f)))))
         (null? g$id*$8262$XcRv&)))))
   (g$bound-id-member?$7751$XcRv&
     g$bound-id-member?$11393$XcRv&
     (case-lambda
       ((g$id$8264$XcRv& g$id*$8265$XcRv&)
        (if (pair? g$id*$8265$XcRv&)
          (begin
            '#f
            ((case-lambda
               ((g$t$8266$XcRv&)
                (if g$t$8266$XcRv&
                  g$t$8266$XcRv&
                  (begin
                    '#f
                    (g$bound-id-member?$7751$XcRv&
                      g$id$8264$XcRv&
                      (cdr g$id*$8265$XcRv&))))))
             (g$bound-id=?$7747$XcRv& g$id$8264$XcRv& (car g$id*$8265$XcRv&))))
          '#f))))
   (g$self-evaluating?$7752$XcRv&
     g$self-evaluating?$11394$XcRv&
     (case-lambda
       ((g$x$8267$XcRv&)
        ((case-lambda
           ((g$t$8268$XcRv&)
            (if g$t$8268$XcRv&
              g$t$8268$XcRv&
              ((case-lambda
                 ((g$t$8269$XcRv&)
                  (if g$t$8269$XcRv&
                    g$t$8269$XcRv&
                    ((case-lambda
                       ((g$t$8270$XcRv&)
                        (if g$t$8270$XcRv&
                          g$t$8270$XcRv&
                          ((case-lambda
                             ((g$t$8271$XcRv&)
                              (if g$t$8271$XcRv&
                                g$t$8271$XcRv&
                                (begin '#f (bytevector? g$x$8267$XcRv&)))))
                           (boolean? g$x$8267$XcRv&)))))
                     (char? g$x$8267$XcRv&)))))
               (string? g$x$8267$XcRv&)))))
         (number? g$x$8267$XcRv&)))))
   (g$strip-annotations$7753$XcRv&
     g$strip-annotations$11395$XcRv&
     (case-lambda
       ((g$x$8272$XcRv&)
        (if (pair? g$x$8272$XcRv&)
          (cons
            (g$strip-annotations$7753$XcRv& (car g$x$8272$XcRv&))
            (g$strip-annotations$7753$XcRv& (cdr g$x$8272$XcRv&)))
          (if (vector? g$x$8272$XcRv&)
            (vector-map g$strip-annotations$7753$XcRv& g$x$8272$XcRv&)
            (if (annotation? g$x$8272$XcRv&)
              (annotation-stripped g$x$8272$XcRv&)
              g$x$8272$XcRv&))))))
   (g$strip$7754$XcRv&
     g$strip$11396$XcRv&
     (case-lambda
       ((g$x$8273$XcRv& g$m*$8274$XcRv&)
        (if (g$top-marked?$7687$XcRv& g$m*$8274$XcRv&)
          (if ((case-lambda
                 ((g$t$8275$XcRv&)
                  (if g$t$8275$XcRv&
                    g$t$8275$XcRv&
                    ((case-lambda
                       ((g$t$8276$XcRv&)
                        (if g$t$8276$XcRv&
                          g$t$8276$XcRv&
                          (begin
                            '#f
                            (if (vector? g$x$8273$XcRv&)
                              (if (> (vector-length g$x$8273$XcRv&) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$8273$XcRv& '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$8273$XcRv&)
                       (begin '#f (annotation? (car g$x$8273$XcRv&)))
                       '#f)))))
               (annotation? g$x$8273$XcRv&))
            (g$strip-annotations$7753$XcRv& g$x$8273$XcRv&)
            g$x$8273$XcRv&)
          ((letrec ((g$f$8277$XcRv&
                      (case-lambda
                        ((g$x$8278$XcRv&)
                         (if (g$stx?$7716$XcRv& g$x$8278$XcRv&)
                           (g$strip$7754$XcRv&
                             (g$stx-expr$7718$XcRv& g$x$8278$XcRv&)
                             (g$stx-mark*$7719$XcRv& g$x$8278$XcRv&))
                           (if (annotation? g$x$8278$XcRv&)
                             (annotation-stripped g$x$8278$XcRv&)
                             (if (pair? g$x$8278$XcRv&)
                               ((case-lambda
                                  ((g$a$8279$XcRv& g$d$8280$XcRv&)
                                   (if (if (eq? g$a$8279$XcRv&
                                                (car g$x$8278$XcRv&))
                                         (begin
                                           '#f
                                           (eq? g$d$8280$XcRv&
                                                (cdr g$x$8278$XcRv&)))
                                         '#f)
                                     g$x$8278$XcRv&
                                     (cons g$a$8279$XcRv& g$d$8280$XcRv&))))
                                (g$f$8277$XcRv& (car g$x$8278$XcRv&))
                                (g$f$8277$XcRv& (cdr g$x$8278$XcRv&)))
                               (if (vector? g$x$8278$XcRv&)
                                 ((case-lambda
                                    ((g$old$8281$XcRv&)
                                     ((case-lambda
                                        ((g$new$8282$XcRv&)
                                         (if (g$for-all$6019$XcRv&
                                               eq?
                                               g$old$8281$XcRv&
                                               g$new$8282$XcRv&)
                                           g$x$8278$XcRv&
                                           (list->vector g$new$8282$XcRv&))))
                                      (map g$f$8277$XcRv& g$old$8281$XcRv&))))
                                  (vector->list g$x$8278$XcRv&))
                                 g$x$8278$XcRv&))))))))
             g$f$8277$XcRv&)
           g$x$8273$XcRv&)))))
   (g$stx->datum$7755$XcRv&
     g$stx->datum$11397$XcRv&
     (case-lambda
       ((g$x$8283$XcRv&) (g$strip$7754$XcRv& g$x$8283$XcRv& '()))))
   (g$same-marks*?$7756$XcRv&
     g$same-marks*?$11398$XcRv&
     (case-lambda
       ((g$mark*$8284$XcRv& g$mark**$8285$XcRv& g$si$8286$XcRv&)
        (if (null? g$si$8286$XcRv&)
          '#f
          (if (g$same-marks?$7746$XcRv&
                g$mark*$8284$XcRv&
                (vector-ref g$mark**$8285$XcRv& (car g$si$8286$XcRv&)))
            (car g$si$8286$XcRv&)
            (g$same-marks*?$7756$XcRv&
              g$mark*$8284$XcRv&
              g$mark**$8285$XcRv&
              (cdr g$si$8286$XcRv&)))))))
   (g$id->label$7757$XcRv&
     g$id->label$11399$XcRv&
     (case-lambda
       ((g$id$8287$XcRv&)
        ((case-lambda
           ((g$t$8288$XcRv&)
            (if g$t$8288$XcRv&
              g$t$8288$XcRv&
              (begin
                '#f
                ((case-lambda
                   ((g$t$8289$XcRv&)
                    (if g$t$8289$XcRv&
                      ((case-lambda
                         ((g$env$8290$XcRv&)
                          ((case-lambda
                             ((g$rib$8291$XcRv&)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7692$XcRv&
                                     g$id$8287$XcRv&
                                     g$rib$8291$XcRv&)))
                                (case-lambda
                                  ((g$lab$8294$XcRv& g$loc_$8295$XcRv&)
                                   ((case-lambda
                                      ((g$loc_$8296$XcRv& g$lab$8297$XcRv&)
                                       (begin
                                         (g$extend-rib!$7708$XcRv&
                                           g$rib$8291$XcRv&
                                           g$id$8287$XcRv&
                                           g$lab$8297$XcRv&)
                                         g$lab$8297$XcRv&)))
                                    g$loc_$8295$XcRv&
                                    g$lab$8294$XcRv&))))))
                           (g$interaction-env-rib$8100$XcRv&
                             g$env$8290$XcRv&))))
                       g$t$8289$XcRv&)
                      '#f)))
                 (g$top-level-context$8135$XcRv&))))))
         (g$id->real-label$7758$XcRv& g$id$8287$XcRv&)))))
   (g$id->real-label$7758$XcRv&
     g$id->real-label$11400$XcRv&
     (case-lambda
       ((g$id$8298$XcRv&)
        ((case-lambda
           ((g$sym$8299$XcRv&)
            ((letrec ((g$search$8300$XcRv&
                        (case-lambda
                          ((g$subst*$8301$XcRv& g$mark*$8302$XcRv&)
                           (if (null? g$subst*$8301$XcRv&)
                             '#f
                             (if (eq? (car g$subst*$8301$XcRv&) 'shift)
                               (g$search$8300$XcRv&
                                 (cdr g$subst*$8301$XcRv&)
                                 (cdr g$mark*$8302$XcRv&))
                               ((case-lambda
                                  ((g$rib$8303$XcRv&)
                                   ((case-lambda
                                      ((g$t$8304$XcRv&)
                                       (if g$t$8304$XcRv&
                                         ((case-lambda
                                            ((g$ht$8305$XcRv&)
                                             ((case-lambda
                                                ((g$si$8306$XcRv&)
                                                 ((case-lambda
                                                    ((g$i$8307$XcRv&)
                                                     (if g$i$8307$XcRv&
                                                       (vector-ref
                                                         (g$rib-label*$7701$XcRv&
                                                           g$rib$8303$XcRv&)
                                                         g$i$8307$XcRv&)
                                                       (g$search$8300$XcRv&
                                                         (cdr g$subst*$8301$XcRv&)
                                                         g$mark*$8302$XcRv&))))
                                                  (if g$si$8306$XcRv&
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7756$XcRv&
                                                        g$mark*$8302$XcRv&
                                                        (g$rib-mark**$7700$XcRv&
                                                          g$rib$8303$XcRv&)
                                                        (reverse
                                                          g$si$8306$XcRv&)))
                                                    '#f))))
                                              (g$hashtable-ref$5815$XcRv&
                                                g$ht$8305$XcRv&
                                                g$sym$8299$XcRv&
                                                '#f))))
                                          g$t$8304$XcRv&)
                                         ((letrec ((g$f$8308$XcRv&
                                                     (case-lambda
                                                       ((g$sym*$8309$XcRv&
                                                          g$mark**$8310$XcRv&
                                                          g$label*$8311$XcRv&)
                                                        (if (null?
                                                              g$sym*$8309$XcRv&)
                                                          (g$search$8300$XcRv&
                                                            (cdr g$subst*$8301$XcRv&)
                                                            g$mark*$8302$XcRv&)
                                                          (if (if (eq? (car g$sym*$8309$XcRv&)
                                                                       g$sym$8299$XcRv&)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7746$XcRv&
                                                                    (car g$mark**$8310$XcRv&)
                                                                    g$mark*$8302$XcRv&))
                                                                '#f)
                                                            (car g$label*$8311$XcRv&)
                                                            (g$f$8308$XcRv&
                                                              (cdr g$sym*$8309$XcRv&)
                                                              (cdr g$mark**$8310$XcRv&)
                                                              (cdr g$label*$8311$XcRv&))))))))
                                            g$f$8308$XcRv&)
                                          (g$rib-sym*$7699$XcRv&
                                            g$rib$8303$XcRv&)
                                          (g$rib-mark**$7700$XcRv&
                                            g$rib$8303$XcRv&)
                                          (g$rib-label*$7701$XcRv&
                                            g$rib$8303$XcRv&)))))
                                    (g$rib-sealed/freq$7702$XcRv&
                                      g$rib$8303$XcRv&))))
                                (car g$subst*$8301$XcRv&))))))))
               g$search$8300$XcRv&)
             (g$stx-subst*$7720$XcRv& g$id$8298$XcRv&)
             (g$stx-mark*$7719$XcRv& g$id$8298$XcRv&))))
         (g$id->sym$7745$XcRv& g$id$8298$XcRv&)))))
   (g$label->binding$7759$XcRv&
     g$label->binding$11401$XcRv&
     (case-lambda
       ((g$x$8312$XcRv& g$r$8313$XcRv&)
        ((case-lambda
           ((g$t$8314$XcRv&)
            (if g$t$8314$XcRv&
              ((case-lambda
                 ((g$b$8315$XcRv&)
                  (if (if (pair? g$b$8315$XcRv&)
                        (begin '#f (eq? (car g$b$8315$XcRv&) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7985$XcRv& (cdr g$b$8315$XcRv&)))
                    (if (if (pair? g$b$8315$XcRv&)
                          (begin '#f (eq? (car g$b$8315$XcRv&) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$8316$XcRv& g$loc$8317$XcRv&)
                          (cons '$rtd (symbol-value g$loc$8317$XcRv&))))
                       (g$cadr$5550$XcRv& g$b$8315$XcRv&)
                       (g$cddr$5552$XcRv& g$b$8315$XcRv&))
                      g$b$8315$XcRv&))))
               g$t$8314$XcRv&)
              ((case-lambda
                 ((g$t$8318$XcRv&)
                  (if g$t$8318$XcRv&
                    (cdr g$t$8318$XcRv&)
                    ((case-lambda
                       ((g$t$8319$XcRv&)
                        (if g$t$8319$XcRv&
                          ((case-lambda
                             ((g$env$8320$XcRv&)
                              ((case-lambda
                                 ((g$t$8321$XcRv&)
                                  (if g$t$8321$XcRv&
                                    ((case-lambda
                                       ((g$p$8322$XcRv&)
                                        (g$cons*$6021$XcRv&
                                          'lexical
                                          (cdr g$p$8322$XcRv&)
                                          '#f)))
                                     g$t$8321$XcRv&)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$8312$XcRv&
                                 (g$interaction-env-locs$8102$XcRv&
                                   g$env$8320$XcRv&)))))
                           g$t$8319$XcRv&)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$8135$XcRv&)))))
               (assq g$x$8312$XcRv& g$r$8313$XcRv&)))))
         (g$imported-label->binding$7558$XcRv& g$x$8312$XcRv&)))))
   (g$make-binding$7760$XcRv& g$make-binding$11402$XcRv& cons)
   (g$binding-type$7761$XcRv& g$binding-type$11403$XcRv& car)
   (g$binding-value$7762$XcRv& g$binding-value$11404$XcRv& cdr)
   (g$raise-unbound-error$7763$XcRv&
     g$raise-unbound-error$11405$XcRv&
     (case-lambda
       ((g$id$8323$XcRv&)
        (g$syntax-violation*$8127$XcRv&
          '#f
          '"unbound identifier"
          g$id$8323$XcRv&
          (g$make-undefined-violation$6355$XcRv&)))))
   (g$syntax-type$7764$XcRv&
     g$syntax-type$11406$XcRv&
     (case-lambda
       ((g$e$8324$XcRv& g$r$8325$XcRv&)
        (if (g$id?$7744$XcRv& g$e$8324$XcRv&)
          ((case-lambda
             ((g$id$8326$XcRv&)
              ((case-lambda
                 ((g$label$8327$XcRv&)
                  ((case-lambda
                     ((g$b$8328$XcRv&)
                      ((case-lambda
                         ((g$type$8329$XcRv&)
                          ((case-lambda
                             (()
                              (begin
                                (if g$label$8327$XcRv&
                                  (void)
                                  (g$raise-unbound-error$7763$XcRv&
                                    g$id$8326$XcRv&))
                                ((case-lambda
                                   ((g$t$8330$XcRv&)
                                    (if (memv
                                          g$t$8330$XcRv&
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$8329$XcRv&
                                        (g$binding-value$7762$XcRv&
                                          g$b$8328$XcRv&)
                                        g$id$8326$XcRv&)
                                      (values 'other '#f '#f))))
                                 g$type$8329$XcRv&)))))))
                       (g$binding-type$7761$XcRv& g$b$8328$XcRv&))))
                   (g$label->binding$7759$XcRv&
                     g$label$8327$XcRv&
                     g$r$8325$XcRv&))))
               (g$id->label$7757$XcRv& g$id$8326$XcRv&))))
           g$e$8324$XcRv&)
          (if (g$syntax-pair?$7737$XcRv& g$e$8324$XcRv&)
            ((case-lambda
               ((g$id$8331$XcRv&)
                (if (g$id?$7744$XcRv& g$id$8331$XcRv&)
                  ((case-lambda
                     ((g$label$8332$XcRv&)
                      ((case-lambda
                         ((g$b$8333$XcRv&)
                          ((case-lambda
                             ((g$type$8334$XcRv&)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if g$label$8332$XcRv&
                                      (void)
                                      (g$raise-unbound-error$7763$XcRv&
                                        g$id$8331$XcRv&))
                                    ((case-lambda
                                       ((g$t$8335$XcRv&)
                                        (if (memv
                                              g$t$8335$XcRv&
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$8334$XcRv&
                                            (g$binding-value$7762$XcRv&
                                              g$b$8333$XcRv&)
                                            g$id$8331$XcRv&)
                                          (values 'call '#f '#f))))
                                     g$type$8334$XcRv&)))))))
                           (g$binding-type$7761$XcRv& g$b$8333$XcRv&))))
                       (g$label->binding$7759$XcRv&
                         g$label$8332$XcRv&
                         g$r$8325$XcRv&))))
                   (g$id->label$7757$XcRv& g$id$8331$XcRv&))
                  (values 'call '#f '#f))))
             (g$syntax-car$7741$XcRv& g$e$8324$XcRv&))
            ((case-lambda
               ((g$d$8336$XcRv&)
                (if (g$self-evaluating?$7752$XcRv& g$d$8336$XcRv&)
                  (values 'constant g$d$8336$XcRv& '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7755$XcRv& g$e$8324$XcRv&)))))))
   (g$sanitize-binding$7772$XcRv&
     g$sanitize-binding$11407$XcRv&
     (case-lambda
       ((g$x$8337$XcRv& g$src$8338$XcRv&)
        (if (procedure? g$x$8337$XcRv&)
          (g$cons*$6021$XcRv& 'local-macro g$x$8337$XcRv& g$src$8338$XcRv&)
          (if (if (pair? g$x$8337$XcRv&)
                (if (eq? (car g$x$8337$XcRv&) 'macro!)
                  (begin '#f (procedure? (cdr g$x$8337$XcRv&)))
                  '#f)
                '#f)
            (g$cons*$6021$XcRv&
              'local-macro!
              (cdr g$x$8337$XcRv&)
              g$src$8338$XcRv&)
            (if (if (pair? g$x$8337$XcRv&)
                  (begin '#f (eq? (car g$x$8337$XcRv&) '$rtd))
                  '#f)
              g$x$8337$XcRv&
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$8337$XcRv&)))))))
   (g$make-variable-transformer$7773$XcRv&
     g$make-variable-transformer$11408$XcRv&
     (case-lambda
       ((g$x$8339$XcRv&)
        (if (procedure? g$x$8339$XcRv&)
          (cons 'macro! g$x$8339$XcRv&)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$8339$XcRv&)))))
   (g$variable-transformer?$7774$XcRv&
     g$variable-transformer?$11409$XcRv&
     (case-lambda
       ((g$x$8340$XcRv&)
        (if (pair? g$x$8340$XcRv&)
          (if (eq? (car g$x$8340$XcRv&) 'macro!)
            (begin '#f (procedure? (cdr g$x$8340$XcRv&)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7775$XcRv&
     g$variable-transformer-procedure$11410$XcRv&
     (case-lambda
       ((g$x$8341$XcRv&)
        (if (g$variable-transformer?$7774$XcRv& g$x$8341$XcRv&)
          (cdr g$x$8341$XcRv&)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$8341$XcRv&)))))
   (g$make-eval-transformer$7776$XcRv&
     g$make-eval-transformer$11411$XcRv&
     (case-lambda
       ((g$x$8342$XcRv&)
        (g$sanitize-binding$7772$XcRv&
          (eval-core (g$expanded->core$7258$XcRv& g$x$8342$XcRv&))
          g$x$8342$XcRv&))))
   (g$parse-define$7962$XcRv&
     g$parse-define$11412$XcRv&
     (case-lambda
       ((g$x$8343$XcRv&)
        ((case-lambda
           ((g$t$8344$XcRv&)
            ((case-lambda
               ((g$ls/false$8345$XcRv&)
                (if (if g$ls/false$8345$XcRv&
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8346$XcRv&
                               g$fmls$8347$XcRv&
                               g$b$8348$XcRv&
                               g$b*$8349$XcRv&)
                             (g$id?$7744$XcRv& g$id$8346$XcRv&)))
                          g$ls/false$8345$XcRv&))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8350$XcRv&
                         g$fmls$8351$XcRv&
                         g$b$8352$XcRv&
                         g$b*$8353$XcRv&)
                       (begin
                         (g$verify-formals$8042$XcRv&
                           g$fmls$8351$XcRv&
                           g$x$8343$XcRv&)
                         (values
                           g$id$8350$XcRv&
                           (cons
                             'defun
                             (cons
                               g$fmls$8351$XcRv&
                               (cons g$b$8352$XcRv& g$b*$8353$XcRv&)))))))
                    g$ls/false$8345$XcRv&)
                  ((case-lambda
                     ((g$t$8354$XcRv&)
                      ((case-lambda
                         ((g$ls/false$8355$XcRv&)
                          (if (if g$ls/false$8355$XcRv&
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$8356$XcRv& g$val$8357$XcRv&)
                                       (g$id?$7744$XcRv& g$id$8356$XcRv&)))
                                    g$ls/false$8355$XcRv&))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$8358$XcRv& g$val$8359$XcRv&)
                                 (values
                                   g$id$8358$XcRv&
                                   (cons 'expr g$val$8359$XcRv&))))
                              g$ls/false$8355$XcRv&)
                            ((case-lambda
                               ((g$t$8360$XcRv&)
                                ((case-lambda
                                   ((g$ls/false$8361$XcRv&)
                                    (if (if g$ls/false$8361$XcRv&
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$8362$XcRv&)
                                                 (g$id?$7744$XcRv&
                                                   g$id$8362$XcRv&)))
                                              g$ls/false$8361$XcRv&))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$8363$XcRv&)
                                           (values
                                             g$id$8363$XcRv&
                                             (cons
                                               'expr
                                               (g$bless$7985$XcRv& '(void))))))
                                        g$ls/false$8361$XcRv&)
                                      (g$syntax-violation$8128$XcRv&
                                        '#f
                                        '"invalid syntax"
                                        g$t$8360$XcRv&))))
                                 (g$syntax-dispatch$8022$XcRv&
                                   g$t$8360$XcRv&
                                   '(_ any)))))
                             g$t$8354$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$8354$XcRv&
                         '(_ any any)))))
                   g$t$8344$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8344$XcRv&
               '(_ (any . any) any . each-any)))))
         g$x$8343$XcRv&))))
   (g$parse-define-syntax$7963$XcRv&
     g$parse-define-syntax$11413$XcRv&
     (case-lambda
       ((g$x$8364$XcRv&)
        ((case-lambda
           ((g$t$8365$XcRv&)
            ((case-lambda
               ((g$ls/false$8366$XcRv&)
                (if (if g$ls/false$8366$XcRv&
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8367$XcRv& g$val$8368$XcRv&)
                             (g$id?$7744$XcRv& g$id$8367$XcRv&)))
                          g$ls/false$8366$XcRv&))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8369$XcRv& g$val$8370$XcRv&)
                       (values g$id$8369$XcRv& g$val$8370$XcRv&)))
                    g$ls/false$8366$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8365$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8365$XcRv& '(_ any any)))))
         g$x$8364$XcRv&))))
   (g$scheme-stx-hashtable$7964$XcRv&
     g$scheme-stx-hashtable$11414$XcRv&
     (g$make-eq-hashtable$5812$XcRv&))
   (g$scheme-stx$7965$XcRv&
     g$scheme-stx$11415$XcRv&
     (case-lambda
       ((g$sym$8371$XcRv&)
        ((case-lambda
           ((g$t$8372$XcRv&)
            (if g$t$8372$XcRv&
              g$t$8372$XcRv&
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8373$XcRv&)
                    ((case-lambda
                       ((g$stx$8374$XcRv&)
                        ((case-lambda
                           ((g$stx$8375$XcRv&)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5816$XcRv&
                                    g$scheme-stx-hashtable$7964$XcRv&
                                    g$sym$8371$XcRv&
                                    g$stx$8375$XcRv&)
                                  g$stx$8375$XcRv&))))))
                         ((case-lambda
                            ((g$t$8376$XcRv&)
                             (if g$t$8376$XcRv&
                               ((case-lambda
                                  ((g$x$8377$XcRv&)
                                   ((case-lambda
                                      ((g$name$8378$XcRv& g$label$8379$XcRv&)
                                       (g$add-subst$7734$XcRv&
                                         (g$make-rib$7698$XcRv&
                                           (list g$name$8378$XcRv&)
                                           (list g$top-mark*$7686$XcRv&)
                                           (list g$label$8379$XcRv&)
                                           '#f)
                                         g$stx$8374$XcRv&)))
                                    (car g$x$8377$XcRv&)
                                    (cdr g$x$8377$XcRv&))))
                                g$t$8376$XcRv&)
                               g$stx$8374$XcRv&)))
                          (assq g$sym$8371$XcRv& g$subst$8373$XcRv&)))))
                     (g$make-stx$7717$XcRv&
                       g$sym$8371$XcRv&
                       g$top-mark*$7686$XcRv&
                       '()
                       '()))))
                 (g$library-subst$7516$XcRv&
                   (g$find-library-by-name$7552$XcRv&
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5815$XcRv&
           g$scheme-stx-hashtable$7964$XcRv&
           g$sym$8371$XcRv&
           '#f)))))
   (g$lexical-var$7966$XcRv& g$lexical-var$11416$XcRv& car)
   (g$lexical-mutable?$7967$XcRv& g$lexical-mutable?$11417$XcRv& cdr)
   (g$set-lexical-mutable!$7968$XcRv&
     g$set-lexical-mutable!$11418$XcRv&
     set-cdr!)
   (g$add-lexical$7969$XcRv&
     g$add-lexical$11419$XcRv&
     (case-lambda
       ((g$lab$8380$XcRv& g$lex$8381$XcRv& g$r$8382$XcRv&)
        (cons
          (g$cons*$6021$XcRv& g$lab$8380$XcRv& 'lexical g$lex$8381$XcRv& '#f)
          g$r$8382$XcRv&))))
   (g$add-lexicals$7970$XcRv&
     g$add-lexicals$11420$XcRv&
     (case-lambda
       ((g$lab*$8383$XcRv& g$lex*$8384$XcRv& g$r$8385$XcRv&)
        (if (null? g$lab*$8383$XcRv&)
          g$r$8385$XcRv&
          (g$add-lexicals$7970$XcRv&
            (cdr g$lab*$8383$XcRv&)
            (cdr g$lex*$8384$XcRv&)
            (g$add-lexical$7969$XcRv&
              (car g$lab*$8383$XcRv&)
              (car g$lex*$8384$XcRv&)
              g$r$8385$XcRv&))))))
   (g$letrec-helper$7971$XcRv&
     g$letrec-helper$11421$XcRv&
     (case-lambda
       ((g$e$8386$XcRv& g$r$8387$XcRv& g$mr$8388$XcRv& g$build$8389$XcRv&)
        ((case-lambda
           ((g$t$8390$XcRv&)
            ((case-lambda
               ((g$ls/false$8391$XcRv&)
                (if g$ls/false$8391$XcRv&
                  (apply
                    (case-lambda
                      ((g$lhs*$8392$XcRv&
                         g$rhs*$8393$XcRv&
                         g$b$8394$XcRv&
                         g$b*$8395$XcRv&)
                       (if (not (g$valid-bound-ids?$7749$XcRv&
                                  g$lhs*$8392$XcRv&))
                         (g$invalid-fmls-error$7987$XcRv&
                           g$e$8386$XcRv&
                           g$lhs*$8392$XcRv&)
                         ((case-lambda
                            ((g$lex*$8396$XcRv& g$lab*$8397$XcRv&)
                             ((case-lambda
                                ((g$rib$8398$XcRv& g$r$8399$XcRv&)
                                 ((case-lambda
                                    ((g$body$8400$XcRv& g$rhs*$8401$XcRv&)
                                     (g$build$8389$XcRv&
                                       '#f
                                       g$lex*$8396$XcRv&
                                       g$rhs*$8401$XcRv&
                                       g$body$8400$XcRv&)))
                                  (g$chi-internal$8051$XcRv&
                                    (g$add-subst$7734$XcRv&
                                      g$rib$8398$XcRv&
                                      (cons g$b$8394$XcRv& g$b*$8395$XcRv&))
                                    g$r$8399$XcRv&
                                    g$mr$8388$XcRv&)
                                  (g$chi-expr*$8038$XcRv&
                                    (map (case-lambda
                                           ((g$x$8402$XcRv&)
                                            (g$add-subst$7734$XcRv&
                                              g$rib$8398$XcRv&
                                              g$x$8402$XcRv&)))
                                         g$rhs*$8393$XcRv&)
                                    g$r$8399$XcRv&
                                    g$mr$8388$XcRv&))))
                              (g$make-full-rib$7712$XcRv&
                                g$lhs*$8392$XcRv&
                                g$lab*$8397$XcRv&)
                              (g$add-lexicals$7970$XcRv&
                                g$lab*$8397$XcRv&
                                g$lex*$8396$XcRv&
                                g$r$8387$XcRv&))))
                          (map g$gen-lexical$7688$XcRv& g$lhs*$8392$XcRv&)
                          (map g$gen-label$7690$XcRv& g$lhs*$8392$XcRv&)))))
                    g$ls/false$8391$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8390$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8390$XcRv&
               '(_ #(each (any any)) any . each-any)))))
         g$e$8386$XcRv&))))
   (g$letrec-transformer$7972$XcRv&
     g$letrec-transformer$11422$XcRv&
     (case-lambda
       ((g$e$8403$XcRv& g$r$8404$XcRv& g$mr$8405$XcRv&)
        (g$letrec-helper$7971$XcRv&
          g$e$8403$XcRv&
          g$r$8404$XcRv&
          g$mr$8405$XcRv&
          g$build-letrec$7680$XcRv&))))
   (g$letrec*-transformer$7973$XcRv&
     g$letrec*-transformer$11423$XcRv&
     (case-lambda
       ((g$e$8406$XcRv& g$r$8407$XcRv& g$mr$8408$XcRv&)
        (g$letrec-helper$7971$XcRv&
          g$e$8406$XcRv&
          g$r$8407$XcRv&
          g$mr$8408$XcRv&
          g$build-letrec*$7681$XcRv&))))
   (g$fluid-let-syntax-transformer$7974$XcRv&
     g$fluid-let-syntax-transformer$11424$XcRv&
     (case-lambda
       ((g$e$8409$XcRv& g$r$8410$XcRv& g$mr$8411$XcRv&)
        (letrec* ((g$lookup$8412$XcRv&
                    (case-lambda
                      ((g$x$8422$XcRv&)
                       ((case-lambda
                          ((g$t$8423$XcRv&)
                           (if g$t$8423$XcRv&
                             g$t$8423$XcRv&
                             (begin
                               '#f
                               (g$syntax-violation$8128$XcRv&
                                 '#f
                                 '"unbound identifier"
                                 g$e$8409$XcRv&
                                 g$x$8422$XcRv&)))))
                        (g$id->label$7757$XcRv& g$x$8422$XcRv&))))))
          ((case-lambda
             ((g$t$8413$XcRv&)
              ((case-lambda
                 ((g$ls/false$8414$XcRv&)
                  (if g$ls/false$8414$XcRv&
                    (apply
                      (case-lambda
                        ((g$lhs*$8415$XcRv&
                           g$rhs*$8416$XcRv&
                           g$b$8417$XcRv&
                           g$b*$8418$XcRv&)
                         (if (not (g$valid-bound-ids?$7749$XcRv&
                                    g$lhs*$8415$XcRv&))
                           (g$invalid-fmls-error$7987$XcRv&
                             g$e$8409$XcRv&
                             g$lhs*$8415$XcRv&)
                           ((case-lambda
                              ((g$lab*$8419$XcRv& g$rhs*$8420$XcRv&)
                               (g$chi-internal$8051$XcRv&
                                 (cons g$b$8417$XcRv& g$b*$8418$XcRv&)
                                 (append
                                   (map cons
                                        g$lab*$8419$XcRv&
                                        g$rhs*$8420$XcRv&)
                                   g$r$8410$XcRv&)
                                 (append
                                   (map cons
                                        g$lab*$8419$XcRv&
                                        g$rhs*$8420$XcRv&)
                                   g$mr$8411$XcRv&))))
                            (map g$lookup$8412$XcRv& g$lhs*$8415$XcRv&)
                            (map (case-lambda
                                   ((g$x$8421$XcRv&)
                                    (g$make-eval-transformer$7776$XcRv&
                                      (g$expand-transformer$8067$XcRv&
                                        g$x$8421$XcRv&
                                        g$mr$8411$XcRv&))))
                                 g$rhs*$8416$XcRv&)))))
                      g$ls/false$8414$XcRv&)
                    (g$syntax-violation$8128$XcRv&
                      '#f
                      '"invalid syntax"
                      g$t$8413$XcRv&))))
               (g$syntax-dispatch$8022$XcRv&
                 g$t$8413$XcRv&
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8409$XcRv&)))))
   (g$type-descriptor-transformer$7975$XcRv&
     g$type-descriptor-transformer$11425$XcRv&
     (case-lambda
       ((g$e$8424$XcRv& g$r$8425$XcRv& g$mr$8426$XcRv&)
        ((case-lambda
           ((g$t$8427$XcRv&)
            ((case-lambda
               ((g$ls/false$8428$XcRv&)
                (if (if g$ls/false$8428$XcRv&
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8429$XcRv&)
                             (g$id?$7744$XcRv& g$id$8429$XcRv&)))
                          g$ls/false$8428$XcRv&))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8430$XcRv&)
                       ((case-lambda
                          ((g$lab$8431$XcRv&)
                           ((case-lambda
                              ((g$b$8432$XcRv&)
                               ((case-lambda
                                  ((g$type$8433$XcRv&)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$8431$XcRv&
                                           (void)
                                           (g$raise-unbound-error$7763$XcRv&
                                             g$id$8430$XcRv&))
                                         (if (if (eq? g$type$8433$XcRv& '$rtd)
                                               (begin
                                                 '#f
                                                 (not (list?
                                                        (g$binding-value$7762$XcRv&
                                                          g$b$8432$XcRv&))))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"not a record type"
                                             g$e$8424$XcRv&))
                                         (list
                                           'quote
                                           (g$binding-value$7762$XcRv&
                                             g$b$8432$XcRv&))))))))
                                (g$binding-type$7761$XcRv& g$b$8432$XcRv&))))
                            (g$label->binding$7759$XcRv&
                              g$lab$8431$XcRv&
                              g$r$8425$XcRv&))))
                        (g$id->label$7757$XcRv& g$id$8430$XcRv&))))
                    g$ls/false$8428$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8427$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8427$XcRv& '(_ any)))))
         g$e$8424$XcRv&))))
   (g$record-type-descriptor-transformer$7976$XcRv&
     g$record-type-descriptor-transformer$11426$XcRv&
     (case-lambda
       ((g$e$8434$XcRv& g$r$8435$XcRv& g$mr$8436$XcRv&)
        ((case-lambda
           ((g$t$8437$XcRv&)
            ((case-lambda
               ((g$ls/false$8438$XcRv&)
                (if (if g$ls/false$8438$XcRv&
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8439$XcRv&)
                             (g$id?$7744$XcRv& g$id$8439$XcRv&)))
                          g$ls/false$8438$XcRv&))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8440$XcRv&)
                       ((case-lambda
                          ((g$lab$8441$XcRv&)
                           ((case-lambda
                              ((g$b$8442$XcRv&)
                               ((case-lambda
                                  ((g$type$8443$XcRv&)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$8441$XcRv&
                                           (void)
                                           (g$raise-unbound-error$7763$XcRv&
                                             g$id$8440$XcRv&))
                                         (if (if (eq? g$type$8443$XcRv& '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$7762$XcRv&
                                                     g$b$8442$XcRv&)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"not a record type"
                                             g$e$8434$XcRv&))
                                         (g$chi-expr$8040$XcRv&
                                           (car (g$binding-value$7762$XcRv&
                                                  g$b$8442$XcRv&))
                                           g$r$8435$XcRv&
                                           g$mr$8436$XcRv&)))))))
                                (g$binding-type$7761$XcRv& g$b$8442$XcRv&))))
                            (g$label->binding$7759$XcRv&
                              g$lab$8441$XcRv&
                              g$r$8435$XcRv&))))
                        (g$id->label$7757$XcRv& g$id$8440$XcRv&))))
                    g$ls/false$8438$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8437$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8437$XcRv& '(_ any)))))
         g$e$8434$XcRv&))))
   (g$record-constructor-descriptor-transformer$7977$XcRv&
     g$record-constructor-descriptor-transformer$11427$XcRv&
     (case-lambda
       ((g$e$8444$XcRv& g$r$8445$XcRv& g$mr$8446$XcRv&)
        ((case-lambda
           ((g$t$8447$XcRv&)
            ((case-lambda
               ((g$ls/false$8448$XcRv&)
                (if (if g$ls/false$8448$XcRv&
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8449$XcRv&)
                             (g$id?$7744$XcRv& g$id$8449$XcRv&)))
                          g$ls/false$8448$XcRv&))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8450$XcRv&)
                       ((case-lambda
                          ((g$lab$8451$XcRv&)
                           ((case-lambda
                              ((g$b$8452$XcRv&)
                               ((case-lambda
                                  ((g$type$8453$XcRv&)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$8451$XcRv&
                                           (void)
                                           (g$raise-unbound-error$7763$XcRv&
                                             g$id$8450$XcRv&))
                                         (if (if (eq? g$type$8453$XcRv& '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$7762$XcRv&
                                                     g$b$8452$XcRv&)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"invalid type"
                                             g$e$8444$XcRv&))
                                         (g$chi-expr$8040$XcRv&
                                           (g$cadr$5550$XcRv&
                                             (g$binding-value$7762$XcRv&
                                               g$b$8452$XcRv&))
                                           g$r$8445$XcRv&
                                           g$mr$8446$XcRv&)))))))
                                (g$binding-type$7761$XcRv& g$b$8452$XcRv&))))
                            (g$label->binding$7759$XcRv&
                              g$lab$8451$XcRv&
                              g$r$8445$XcRv&))))
                        (g$id->label$7757$XcRv& g$id$8450$XcRv&))))
                    g$ls/false$8448$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8447$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8447$XcRv& '(_ any)))))
         g$e$8444$XcRv&))))
   (g$when-transformer$7978$XcRv&
     g$when-transformer$11428$XcRv&
     (case-lambda
       ((g$e$8454$XcRv& g$r$8455$XcRv& g$mr$8456$XcRv&)
        ((case-lambda
           ((g$t$8457$XcRv&)
            ((case-lambda
               ((g$ls/false$8458$XcRv&)
                (if g$ls/false$8458$XcRv&
                  (apply
                    (case-lambda
                      ((g$test$8459$XcRv& g$e$8460$XcRv& g$e*$8461$XcRv&)
                       (list
                         'if
                         (g$chi-expr$8040$XcRv&
                           g$test$8459$XcRv&
                           g$r$8455$XcRv&
                           g$mr$8456$XcRv&)
                         (g$build-sequence$7678$XcRv&
                           '#f
                           (g$chi-expr*$8038$XcRv&
                             (cons g$e$8460$XcRv& g$e*$8461$XcRv&)
                             g$r$8455$XcRv&
                             g$mr$8456$XcRv&))
                         (g$build-void$7679$XcRv&))))
                    g$ls/false$8458$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8457$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8457$XcRv&
               '(_ any any . each-any)))))
         g$e$8454$XcRv&))))
   (g$unless-transformer$7979$XcRv&
     g$unless-transformer$11429$XcRv&
     (case-lambda
       ((g$e$8462$XcRv& g$r$8463$XcRv& g$mr$8464$XcRv&)
        ((case-lambda
           ((g$t$8465$XcRv&)
            ((case-lambda
               ((g$ls/false$8466$XcRv&)
                (if g$ls/false$8466$XcRv&
                  (apply
                    (case-lambda
                      ((g$test$8467$XcRv& g$e$8468$XcRv& g$e*$8469$XcRv&)
                       (list
                         'if
                         (g$chi-expr$8040$XcRv&
                           g$test$8467$XcRv&
                           g$r$8463$XcRv&
                           g$mr$8464$XcRv&)
                         (g$build-void$7679$XcRv&)
                         (g$build-sequence$7678$XcRv&
                           '#f
                           (g$chi-expr*$8038$XcRv&
                             (cons g$e$8468$XcRv& g$e*$8469$XcRv&)
                             g$r$8463$XcRv&
                             g$mr$8464$XcRv&)))))
                    g$ls/false$8466$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8465$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8465$XcRv&
               '(_ any any . each-any)))))
         g$e$8462$XcRv&))))
   (g$if-transformer$7980$XcRv&
     g$if-transformer$11430$XcRv&
     (case-lambda
       ((g$e$8470$XcRv& g$r$8471$XcRv& g$mr$8472$XcRv&)
        ((case-lambda
           ((g$t$8473$XcRv&)
            ((case-lambda
               ((g$ls/false$8474$XcRv&)
                (if g$ls/false$8474$XcRv&
                  (apply
                    (case-lambda
                      ((g$e0$8475$XcRv& g$e1$8476$XcRv& g$e2$8477$XcRv&)
                       (list
                         'if
                         (g$chi-expr$8040$XcRv&
                           g$e0$8475$XcRv&
                           g$r$8471$XcRv&
                           g$mr$8472$XcRv&)
                         (g$chi-expr$8040$XcRv&
                           g$e1$8476$XcRv&
                           g$r$8471$XcRv&
                           g$mr$8472$XcRv&)
                         (g$chi-expr$8040$XcRv&
                           g$e2$8477$XcRv&
                           g$r$8471$XcRv&
                           g$mr$8472$XcRv&))))
                    g$ls/false$8474$XcRv&)
                  ((case-lambda
                     ((g$t$8478$XcRv&)
                      ((case-lambda
                         ((g$ls/false$8479$XcRv&)
                          (if g$ls/false$8479$XcRv&
                            (apply
                              (case-lambda
                                ((g$e0$8480$XcRv& g$e1$8481$XcRv&)
                                 (list
                                   'if
                                   (g$chi-expr$8040$XcRv&
                                     g$e0$8480$XcRv&
                                     g$r$8471$XcRv&
                                     g$mr$8472$XcRv&)
                                   (g$chi-expr$8040$XcRv&
                                     g$e1$8481$XcRv&
                                     g$r$8471$XcRv&
                                     g$mr$8472$XcRv&)
                                   (g$build-void$7679$XcRv&))))
                              g$ls/false$8479$XcRv&)
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"invalid syntax"
                              g$t$8478$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$8478$XcRv&
                         '(_ any any)))))
                   g$t$8473$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8473$XcRv& '(_ any any any)))))
         g$e$8470$XcRv&))))
   (g$case-transformer$7981$XcRv&
     g$case-transformer$11431$XcRv&
     (case-lambda
       ((g$e$8482$XcRv& g$r$8483$XcRv& g$mr$8484$XcRv&)
        (letrec* ((g$build-one$8485$XcRv&
                    (case-lambda
                      ((g$t$8514$XcRv& g$cls$8515$XcRv& g$rest$8516$XcRv&)
                       ((case-lambda
                          ((g$t$8517$XcRv&)
                           ((case-lambda
                              ((g$ls/false$8518$XcRv&)
                               (if g$ls/false$8518$XcRv&
                                 (apply
                                   (case-lambda
                                     ((g$d*$8519$XcRv&
                                        g$e$8520$XcRv&
                                        g$e*$8521$XcRv&)
                                      (list
                                        'if
                                        ((case-lambda
                                           ((g$data$8522$XcRv&)
                                            (if (= '1
                                                   (length g$data$8522$XcRv&))
                                              (list
                                                '(primitive eqv?)
                                                g$t$8514$XcRv&
                                                (list
                                                  'quote
                                                  (car g$data$8522$XcRv&)))
                                              (list
                                                '(primitive memv)
                                                g$t$8514$XcRv&
                                                (list
                                                  'quote
                                                  g$data$8522$XcRv&)))))
                                         (g$stx->datum$7755$XcRv&
                                           g$d*$8519$XcRv&))
                                        (g$build-sequence$7678$XcRv&
                                          '#f
                                          (g$chi-expr*$8038$XcRv&
                                            (cons
                                              g$e$8520$XcRv&
                                              g$e*$8521$XcRv&)
                                            g$r$8483$XcRv&
                                            g$mr$8484$XcRv&))
                                        g$rest$8516$XcRv&)))
                                   g$ls/false$8518$XcRv&)
                                 ((case-lambda
                                    ((g$t$8523$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$8524$XcRv&)
                                         (if g$ls/false$8524$XcRv&
                                           (apply
                                             (case-lambda
                                               ((g$else$8525$XcRv&)
                                                (g$syntax-violation$8128$XcRv&
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$8482$XcRv&)))
                                             g$ls/false$8524$XcRv&)
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"invalid syntax"
                                             g$t$8523$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$8523$XcRv&
                                        'any))))
                                  g$t$8517$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv&
                              g$t$8517$XcRv&
                              '(each-any any . each-any)))))
                        g$cls$8515$XcRv&))))
                  (g$build-last$8486$XcRv&
                    (case-lambda
                      ((g$t$8499$XcRv& g$cls$8500$XcRv&)
                       ((case-lambda
                          ((g$t$8501$XcRv&)
                           ((case-lambda
                              ((g$ls/false$8502$XcRv&)
                               (if g$ls/false$8502$XcRv&
                                 (apply
                                   (case-lambda
                                     ((g$d*$8503$XcRv&
                                        g$e$8504$XcRv&
                                        g$e*$8505$XcRv&)
                                      (g$build-one$8485$XcRv&
                                        g$t$8499$XcRv&
                                        g$cls$8500$XcRv&
                                        (g$build-void$7679$XcRv&))))
                                   g$ls/false$8502$XcRv&)
                                 ((case-lambda
                                    ((g$t$8506$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$8507$XcRv&)
                                         (if g$ls/false$8507$XcRv&
                                           (apply
                                             (case-lambda
                                               ((g$else-kwd$8508$XcRv&
                                                  g$x$8509$XcRv&
                                                  g$x*$8510$XcRv&)
                                                (if (if (g$id?$7744$XcRv&
                                                          g$else-kwd$8508$XcRv&)
                                                      (begin
                                                        '#f
                                                        (g$free-id=?$7748$XcRv&
                                                          g$else-kwd$8508$XcRv&
                                                          (g$scheme-stx$7965$XcRv&
                                                            'else)))
                                                      '#f)
                                                  (g$build-sequence$7678$XcRv&
                                                    '#f
                                                    (g$chi-expr*$8038$XcRv&
                                                      (cons
                                                        g$x$8509$XcRv&
                                                        g$x*$8510$XcRv&)
                                                      g$r$8483$XcRv&
                                                      g$mr$8484$XcRv&))
                                                  (g$syntax-violation$8128$XcRv&
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$8482$XcRv&))))
                                             g$ls/false$8507$XcRv&)
                                           ((case-lambda
                                              ((g$t$8511$XcRv&)
                                               ((case-lambda
                                                  ((g$ls/false$8512$XcRv&)
                                                   (if g$ls/false$8512$XcRv&
                                                     (apply
                                                       (case-lambda
                                                         ((g$else$8513$XcRv&)
                                                          (g$syntax-violation$8128$XcRv&
                                                            '#f
                                                            '"invalid syntax"
                                                            g$e$8482$XcRv&)))
                                                       g$ls/false$8512$XcRv&)
                                                     (g$syntax-violation$8128$XcRv&
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8511$XcRv&))))
                                                (g$syntax-dispatch$8022$XcRv&
                                                  g$t$8511$XcRv&
                                                  'any))))
                                            g$t$8506$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$8506$XcRv&
                                        '(any any . each-any)))))
                                  g$t$8501$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv&
                              g$t$8501$XcRv&
                              '(each-any any . each-any)))))
                        g$cls$8500$XcRv&)))))
          ((case-lambda
             ((g$t$8487$XcRv&)
              ((case-lambda
                 ((g$ls/false$8488$XcRv&)
                  (if g$ls/false$8488$XcRv&
                    (apply
                      (case-lambda
                        ((g$expr$8489$XcRv&)
                         (g$build-sequence$7678$XcRv&
                           '#f
                           (list
                             (g$chi-expr$8040$XcRv&
                               g$expr$8489$XcRv&
                               g$r$8483$XcRv&
                               g$mr$8484$XcRv&)
                             (g$build-void$7679$XcRv&)))))
                      g$ls/false$8488$XcRv&)
                    ((case-lambda
                       ((g$t$8490$XcRv&)
                        ((case-lambda
                           ((g$ls/false$8491$XcRv&)
                            (if g$ls/false$8491$XcRv&
                              (apply
                                (case-lambda
                                  ((g$expr$8492$XcRv&
                                     g$cls$8493$XcRv&
                                     g$cls*$8494$XcRv&)
                                   ((case-lambda
                                      ((g$t$8495$XcRv&)
                                       (g$build-let$7677$XcRv&
                                         '#f
                                         (list g$t$8495$XcRv&)
                                         (list
                                           (g$chi-expr$8040$XcRv&
                                             g$expr$8492$XcRv&
                                             g$r$8483$XcRv&
                                             g$mr$8484$XcRv&))
                                         ((letrec ((g$f$8496$XcRv&
                                                     (case-lambda
                                                       ((g$cls$8497$XcRv&
                                                          g$cls*$8498$XcRv&)
                                                        (if (null?
                                                              g$cls*$8498$XcRv&)
                                                          (g$build-last$8486$XcRv&
                                                            g$t$8495$XcRv&
                                                            g$cls$8497$XcRv&)
                                                          (g$build-one$8485$XcRv&
                                                            g$t$8495$XcRv&
                                                            g$cls$8497$XcRv&
                                                            (g$f$8496$XcRv&
                                                              (car g$cls*$8498$XcRv&)
                                                              (cdr g$cls*$8498$XcRv&))))))))
                                            g$f$8496$XcRv&)
                                          g$cls$8493$XcRv&
                                          g$cls*$8494$XcRv&))))
                                    (g$gen-lexical$7688$XcRv& 't))))
                                g$ls/false$8491$XcRv&)
                              (g$syntax-violation$8128$XcRv&
                                '#f
                                '"invalid syntax"
                                g$t$8490$XcRv&))))
                         (g$syntax-dispatch$8022$XcRv&
                           g$t$8490$XcRv&
                           '(_ any any . each-any)))))
                     g$t$8487$XcRv&))))
               (g$syntax-dispatch$8022$XcRv& g$t$8487$XcRv& '(_ any)))))
           g$e$8482$XcRv&)))))
   (g$quote-transformer$7982$XcRv&
     g$quote-transformer$11432$XcRv&
     (case-lambda
       ((g$e$8526$XcRv& g$r$8527$XcRv& g$mr$8528$XcRv&)
        ((case-lambda
           ((g$t$8529$XcRv&)
            ((case-lambda
               ((g$ls/false$8530$XcRv&)
                (if g$ls/false$8530$XcRv&
                  (apply
                    (case-lambda
                      ((g$datum$8531$XcRv&)
                       (list
                         'quote
                         (g$stx->datum$7755$XcRv& g$datum$8531$XcRv&))))
                    g$ls/false$8530$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8529$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8529$XcRv& '(_ any)))))
         g$e$8526$XcRv&))))
   (g$case-lambda-transformer$7983$XcRv&
     g$case-lambda-transformer$11433$XcRv&
     (case-lambda
       ((g$e$8532$XcRv& g$r$8533$XcRv& g$mr$8534$XcRv&)
        ((case-lambda
           ((g$t$8535$XcRv&)
            ((case-lambda
               ((g$ls/false$8536$XcRv&)
                (if g$ls/false$8536$XcRv&
                  (apply
                    (case-lambda
                      ((g$fmls*$8537$XcRv& g$b*$8538$XcRv& g$b**$8539$XcRv&)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$8044$XcRv&
                              g$e$8532$XcRv&
                              g$fmls*$8537$XcRv&
                              (map cons g$b*$8538$XcRv& g$b**$8539$XcRv&)
                              g$r$8533$XcRv&
                              g$mr$8534$XcRv&)))
                         (case-lambda
                           ((g$fmls*$8542$XcRv& g$body*$8543$XcRv&)
                            ((case-lambda
                               ((g$body*$8544$XcRv& g$fmls*$8545$XcRv&)
                                (g$build-case-lambda$7676$XcRv&
                                  '#f
                                  g$fmls*$8545$XcRv&
                                  g$body*$8544$XcRv&)))
                             g$body*$8543$XcRv&
                             g$fmls*$8542$XcRv&))))))
                    g$ls/false$8536$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8535$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8535$XcRv&
               '(_ . #(each (any any . each-any)))))))
         g$e$8532$XcRv&))))
   (g$lambda-transformer$7984$XcRv&
     g$lambda-transformer$11434$XcRv&
     (case-lambda
       ((g$e$8546$XcRv& g$r$8547$XcRv& g$mr$8548$XcRv&)
        ((case-lambda
           ((g$t$8549$XcRv&)
            ((case-lambda
               ((g$ls/false$8550$XcRv&)
                (if g$ls/false$8550$XcRv&
                  (apply
                    (case-lambda
                      ((g$fmls$8551$XcRv& g$b$8552$XcRv& g$b*$8553$XcRv&)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$8043$XcRv&
                              g$e$8546$XcRv&
                              g$fmls$8551$XcRv&
                              (cons g$b$8552$XcRv& g$b*$8553$XcRv&)
                              g$r$8547$XcRv&
                              g$mr$8548$XcRv&)))
                         (case-lambda
                           ((g$fmls$8556$XcRv& g$body$8557$XcRv&)
                            ((case-lambda
                               ((g$body$8558$XcRv& g$fmls$8559$XcRv&)
                                (g$build-lambda$7675$XcRv&
                                  '#f
                                  g$fmls$8559$XcRv&
                                  g$body$8558$XcRv&)))
                             g$body$8557$XcRv&
                             g$fmls$8556$XcRv&))))))
                    g$ls/false$8550$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8549$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8549$XcRv&
               '(_ any any . each-any)))))
         g$e$8546$XcRv&))))
   (g$bless$7985$XcRv&
     g$bless$11435$XcRv&
     (case-lambda
       ((g$x$8560$XcRv&)
        (g$mkstx$7732$XcRv&
          ((letrec ((g$f$8561$XcRv&
                      (case-lambda
                        ((g$x$8562$XcRv&)
                         (if (g$stx?$7716$XcRv& g$x$8562$XcRv&)
                           g$x$8562$XcRv&
                           (if (pair? g$x$8562$XcRv&)
                             (cons
                               (g$f$8561$XcRv& (car g$x$8562$XcRv&))
                               (g$f$8561$XcRv& (cdr g$x$8562$XcRv&)))
                             (if (symbol? g$x$8562$XcRv&)
                               (g$scheme-stx$7965$XcRv& g$x$8562$XcRv&)
                               (if (vector? g$x$8562$XcRv&)
                                 (vector-map g$f$8561$XcRv& g$x$8562$XcRv&)
                                 g$x$8562$XcRv&))))))))
             g$f$8561$XcRv&)
           g$x$8560$XcRv&)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7986$XcRv&
     g$with-syntax-macro$11436$XcRv&
     (case-lambda
       ((g$e$8563$XcRv&)
        ((case-lambda
           ((g$t$8564$XcRv&)
            ((case-lambda
               ((g$ls/false$8565$XcRv&)
                (if g$ls/false$8565$XcRv&
                  (apply
                    (case-lambda
                      ((g$pat*$8566$XcRv&
                         g$expr*$8567$XcRv&
                         g$b$8568$XcRv&
                         g$b*$8569$XcRv&)
                       ((case-lambda
                          ((g$idn*$8570$XcRv&)
                           (begin
                             (g$verify-formals$8042$XcRv&
                               (map car g$idn*$8570$XcRv&)
                               g$e$8563$XcRv&)
                             ((case-lambda
                                ((g$t*$8571$XcRv&)
                                 (g$bless$7985$XcRv&
                                   (list
                                     'let
                                     (map list
                                          g$t*$8571$XcRv&
                                          g$expr*$8567$XcRv&)
                                     ((letrec ((g$f$8572$XcRv&
                                                 (case-lambda
                                                   ((g$pat*$8573$XcRv&
                                                      g$t*$8574$XcRv&)
                                                    (if (null?
                                                          g$pat*$8573$XcRv&)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8568$XcRv&
                                                            g$b*$8569$XcRv&)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8574$XcRv&)
                                                        '()
                                                        (list
                                                          (car g$pat*$8573$XcRv&)
                                                          (g$f$8572$XcRv&
                                                            (cdr g$pat*$8573$XcRv&)
                                                            (cdr g$t*$8574$XcRv&)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8573$XcRv&))
                                                            (car g$t*$8574$XcRv&)))))))))
                                        g$f$8572$XcRv&)
                                      g$pat*$8566$XcRv&
                                      g$t*$8571$XcRv&)))))
                              (g$generate-temporaries$8121$XcRv&
                                g$expr*$8567$XcRv&)))))
                        ((letrec ((g$f$8575$XcRv&
                                    (case-lambda
                                      ((g$pat*$8576$XcRv&)
                                       (if (null? g$pat*$8576$XcRv&)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$8021$XcRv&
                                                (car g$pat*$8576$XcRv&)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8579$XcRv&
                                                g$idn*$8580$XcRv&)
                                              ((case-lambda
                                                 ((g$idn*$8581$XcRv&
                                                    g$pat$8582$XcRv&)
                                                  (append
                                                    g$idn*$8581$XcRv&
                                                    (g$f$8575$XcRv&
                                                      (cdr g$pat*$8576$XcRv&)))))
                                               g$idn*$8580$XcRv&
                                               g$pat$8579$XcRv&)))))))))
                           g$f$8575$XcRv&)
                         g$pat*$8566$XcRv&))))
                    g$ls/false$8565$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8564$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8564$XcRv&
               '(_ #(each (any any)) any . each-any)))))
         g$e$8563$XcRv&))))
   (g$invalid-fmls-error$7987$XcRv&
     g$invalid-fmls-error$11437$XcRv&
     (case-lambda
       ((g$stx$8583$XcRv& g$fmls$8584$XcRv&)
        ((case-lambda
           ((g$t$8585$XcRv&)
            ((case-lambda
               ((g$ls/false$8586$XcRv&)
                (if g$ls/false$8586$XcRv&
                  (apply
                    (case-lambda
                      ((g$id*$8587$XcRv& g$last$8588$XcRv&)
                       ((letrec ((g$f$8589$XcRv&
                                   (case-lambda
                                     ((g$id*$8590$XcRv&)
                                      (if (null? g$id*$8590$XcRv&)
                                        (values)
                                        (if (not (g$id?$7744$XcRv&
                                                   (car g$id*$8590$XcRv&)))
                                          (g$syntax-violation$8128$XcRv&
                                            '#f
                                            '"not an identifier"
                                            g$stx$8583$XcRv&
                                            (car g$id*$8590$XcRv&))
                                          (begin
                                            (g$f$8589$XcRv&
                                              (cdr g$id*$8590$XcRv&))
                                            (if (g$bound-id-member?$7751$XcRv&
                                                  (car g$id*$8590$XcRv&)
                                                  (cdr g$id*$8590$XcRv&))
                                              (g$syntax-violation$8128$XcRv&
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8583$XcRv&
                                                (car g$id*$8590$XcRv&))
                                              (void)))))))))
                          g$f$8589$XcRv&)
                        (if (g$id?$7744$XcRv& g$last$8588$XcRv&)
                          (cons g$last$8588$XcRv& g$id*$8587$XcRv&)
                          (if (g$syntax-null?$7739$XcRv& g$last$8588$XcRv&)
                            g$id*$8587$XcRv&
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"not an identifier"
                              g$stx$8583$XcRv&
                              g$last$8588$XcRv&))))))
                    g$ls/false$8586$XcRv&)
                  ((case-lambda
                     ((g$t$8591$XcRv&)
                      ((case-lambda
                         ((g$ls/false$8592$XcRv&)
                          (if g$ls/false$8592$XcRv&
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8128$XcRv&
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8583$XcRv&
                                   g$fmls$8584$XcRv&)))
                              g$ls/false$8592$XcRv&)
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"invalid syntax"
                              g$t$8591$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv& g$t$8591$XcRv& '_))))
                   g$t$8585$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8585$XcRv&
               '#(each+ any () any)))))
         g$fmls$8584$XcRv&))))
   (g$let-macro$7988$XcRv&
     g$let-macro$11438$XcRv&
     (case-lambda
       ((g$stx$8593$XcRv&)
        ((case-lambda
           ((g$t$8594$XcRv&)
            ((case-lambda
               ((g$ls/false$8595$XcRv&)
                (if g$ls/false$8595$XcRv&
                  (apply
                    (case-lambda
                      ((g$lhs*$8596$XcRv&
                         g$rhs*$8597$XcRv&
                         g$b$8598$XcRv&
                         g$b*$8599$XcRv&)
                       (if (g$valid-bound-ids?$7749$XcRv& g$lhs*$8596$XcRv&)
                         (g$bless$7985$XcRv&
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8596$XcRv&
                                 (cons g$b$8598$XcRv& g$b*$8599$XcRv&)))
                             g$rhs*$8597$XcRv&))
                         (g$invalid-fmls-error$7987$XcRv&
                           g$stx$8593$XcRv&
                           g$lhs*$8596$XcRv&))))
                    g$ls/false$8595$XcRv&)
                  ((case-lambda
                     ((g$t$8600$XcRv&)
                      ((case-lambda
                         ((g$ls/false$8601$XcRv&)
                          (if (if g$ls/false$8601$XcRv&
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8602$XcRv&
                                         g$lhs*$8603$XcRv&
                                         g$rhs*$8604$XcRv&
                                         g$b$8605$XcRv&
                                         g$b*$8606$XcRv&)
                                       (g$id?$7744$XcRv& g$f$8602$XcRv&)))
                                    g$ls/false$8601$XcRv&))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8607$XcRv&
                                   g$lhs*$8608$XcRv&
                                   g$rhs*$8609$XcRv&
                                   g$b$8610$XcRv&
                                   g$b*$8611$XcRv&)
                                 (if (g$valid-bound-ids?$7749$XcRv&
                                       g$lhs*$8608$XcRv&)
                                   (g$bless$7985$XcRv&
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8607$XcRv&
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8608$XcRv&
                                                 (cons
                                                   g$b$8610$XcRv&
                                                   g$b*$8611$XcRv&)))))
                                         g$f$8607$XcRv&)
                                       g$rhs*$8609$XcRv&))
                                   (g$invalid-fmls-error$7987$XcRv&
                                     g$stx$8593$XcRv&
                                     g$lhs*$8608$XcRv&))))
                              g$ls/false$8601$XcRv&)
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"invalid syntax"
                              g$t$8600$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$8600$XcRv&
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8594$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8594$XcRv&
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8593$XcRv&))))
   (g$let-values-macro$7989$XcRv&
     g$let-values-macro$11439$XcRv&
     (case-lambda
       ((g$stx$8612$XcRv&)
        (letrec* ((g$rename$8613$XcRv&
                    (case-lambda
                      ((g$x$8664$XcRv& g$old*$8665$XcRv& g$new*$8666$XcRv&)
                       (begin
                         (if (g$id?$7744$XcRv& g$x$8664$XcRv&)
                           (void)
                           (g$syntax-violation$8128$XcRv&
                             '#f
                             '"not an indentifier"
                             g$stx$8612$XcRv&
                             g$x$8664$XcRv&))
                         (if (g$bound-id-member?$7751$XcRv&
                               g$x$8664$XcRv&
                               g$old*$8665$XcRv&)
                           (g$syntax-violation$8128$XcRv&
                             '#f
                             '"duplicate binding"
                             g$stx$8612$XcRv&
                             g$x$8664$XcRv&)
                           (void))
                         ((case-lambda
                            ((g$y$8667$XcRv&)
                             (values
                               g$y$8667$XcRv&
                               (cons g$x$8664$XcRv& g$old*$8665$XcRv&)
                               (cons g$y$8667$XcRv& g$new*$8666$XcRv&))))
                          (gensym
                            (g$syntax->datum$8131$XcRv& g$x$8664$XcRv&)))))))
                  (g$rename*$8614$XcRv&
                    (case-lambda
                      ((g$x*$8655$XcRv& g$old*$8656$XcRv& g$new*$8657$XcRv&)
                       (if (null? g$x*$8655$XcRv&)
                         (values '() g$old*$8656$XcRv& g$new*$8657$XcRv&)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8613$XcRv&
                                (car g$x*$8655$XcRv&)
                                g$old*$8656$XcRv&
                                g$new*$8657$XcRv&)))
                           (case-lambda
                             ((g$x$8658$XcRv&
                                g$old*$8659$XcRv&
                                g$new*$8660$XcRv&)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8614$XcRv&
                                     (cdr g$x*$8655$XcRv&)
                                     g$old*$8659$XcRv&
                                     g$new*$8660$XcRv&)))
                                (case-lambda
                                  ((g$x*$8661$XcRv&
                                     g$old*$8662$XcRv&
                                     g$new*$8663$XcRv&)
                                   (values
                                     (cons g$x$8658$XcRv& g$x*$8661$XcRv&)
                                     g$old*$8662$XcRv&
                                     g$new*$8663$XcRv&))))))))))))
          ((case-lambda
             ((g$t$8615$XcRv&)
              ((case-lambda
                 ((g$ls/false$8616$XcRv&)
                  (if g$ls/false$8616$XcRv&
                    (apply
                      (case-lambda
                        ((g$b$8617$XcRv& g$b*$8618$XcRv&)
                         (g$cons*$6021$XcRv&
                           (g$bless$7985$XcRv& 'let)
                           '()
                           g$b$8617$XcRv&
                           g$b*$8618$XcRv&)))
                      g$ls/false$8616$XcRv&)
                    ((case-lambda
                       ((g$t$8619$XcRv&)
                        ((case-lambda
                           ((g$ls/false$8620$XcRv&)
                            (if g$ls/false$8620$XcRv&
                              (apply
                                (case-lambda
                                  ((g$lhs*$8621$XcRv&
                                     g$rhs*$8622$XcRv&
                                     g$b$8623$XcRv&
                                     g$b*$8624$XcRv&)
                                   (g$bless$7985$XcRv&
                                     ((letrec ((g$f$8625$XcRv&
                                                 (case-lambda
                                                   ((g$lhs*$8626$XcRv&
                                                      g$rhs*$8627$XcRv&
                                                      g$old*$8628$XcRv&
                                                      g$new*$8629$XcRv&)
                                                    (if (null?
                                                          g$lhs*$8626$XcRv&)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8628$XcRv&
                                                               g$new*$8629$XcRv&)
                                                          (cons
                                                            g$b$8623$XcRv&
                                                            g$b*$8624$XcRv&)))
                                                      ((case-lambda
                                                         ((g$t$8630$XcRv&)
                                                          ((case-lambda
                                                             ((g$ls/false$8631$XcRv&)
                                                              (if g$ls/false$8631$XcRv&
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8632$XcRv&)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8614$XcRv&
                                                                            g$x*$8632$XcRv&
                                                                            g$old*$8628$XcRv&
                                                                            g$new*$8629$XcRv&)))
                                                                       (case-lambda
                                                                         ((g$y*$8636$XcRv&
                                                                            g$old*$8637$XcRv&
                                                                            g$new*$8638$XcRv&)
                                                                          ((case-lambda
                                                                             ((g$new*$8639$XcRv&
                                                                                g$old*$8640$XcRv&
                                                                                g$y*$8641$XcRv&)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8627$XcRv&))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8641$XcRv&
                                                                                  (g$f$8625$XcRv&
                                                                                    (cdr g$lhs*$8626$XcRv&)
                                                                                    (cdr g$rhs*$8627$XcRv&)
                                                                                    g$old*$8640$XcRv&
                                                                                    g$new*$8639$XcRv&)))))
                                                                           g$new*$8638$XcRv&
                                                                           g$old*$8637$XcRv&
                                                                           g$y*$8636$XcRv&))))))
                                                                  g$ls/false$8631$XcRv&)
                                                                ((case-lambda
                                                                   ((g$t$8642$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8643$XcRv&)
                                                                        (if g$ls/false$8643$XcRv&
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8644$XcRv&
                                                                                 g$x$8645$XcRv&)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8613$XcRv&
                                                                                      g$x$8645$XcRv&
                                                                                      g$old*$8628$XcRv&
                                                                                      g$new*$8629$XcRv&)))
                                                                                 (case-lambda
                                                                                   ((g$y$8646$XcRv&
                                                                                      g$old*$8647$XcRv&
                                                                                      g$new*$8648$XcRv&)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8614$XcRv&
                                                                                           g$x*$8644$XcRv&
                                                                                           g$old*$8647$XcRv&
                                                                                           g$new*$8648$XcRv&)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8649$XcRv&
                                                                                           g$old*$8650$XcRv&
                                                                                           g$new*$8651$XcRv&)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8627$XcRv&))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8649$XcRv&
                                                                                               g$y$8646$XcRv&)
                                                                                             (g$f$8625$XcRv&
                                                                                               (cdr g$lhs*$8626$XcRv&)
                                                                                               (cdr g$rhs*$8627$XcRv&)
                                                                                               g$old*$8650$XcRv&
                                                                                               g$new*$8651$XcRv&)))))))))))
                                                                            g$ls/false$8643$XcRv&)
                                                                          ((case-lambda
                                                                             ((g$t$8652$XcRv&)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8653$XcRv&)
                                                                                  (if g$ls/false$8653$XcRv&
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8654$XcRv&)
                                                                                         (g$syntax-violation$8128$XcRv&
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8612$XcRv&
                                                                                           g$others$8654$XcRv&)))
                                                                                      g$ls/false$8653$XcRv&)
                                                                                    (g$syntax-violation$8128$XcRv&
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8652$XcRv&))))
                                                                               (g$syntax-dispatch$8022$XcRv&
                                                                                 g$t$8652$XcRv&
                                                                                 'any))))
                                                                           g$t$8642$XcRv&))))
                                                                     (g$syntax-dispatch$8022$XcRv&
                                                                       g$t$8642$XcRv&
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8630$XcRv&))))
                                                           (g$syntax-dispatch$8022$XcRv&
                                                             g$t$8630$XcRv&
                                                             'each-any))))
                                                       (car g$lhs*$8626$XcRv&)))))))
                                        g$f$8625$XcRv&)
                                      g$lhs*$8621$XcRv&
                                      g$rhs*$8622$XcRv&
                                      '()
                                      '()))))
                                g$ls/false$8620$XcRv&)
                              (g$syntax-violation$8128$XcRv&
                                '#f
                                '"invalid syntax"
                                g$t$8619$XcRv&))))
                         (g$syntax-dispatch$8022$XcRv&
                           g$t$8619$XcRv&
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8615$XcRv&))))
               (g$syntax-dispatch$8022$XcRv&
                 g$t$8615$XcRv&
                 '(_ () any . each-any)))))
           g$stx$8612$XcRv&)))))
   (g$let*-values-macro$7990$XcRv&
     g$let*-values-macro$11440$XcRv&
     (case-lambda
       ((g$stx$8668$XcRv&)
        (letrec* ((g$check$8669$XcRv&
                    (case-lambda
                      ((g$x*$8693$XcRv&)
                       (if (null? g$x*$8693$XcRv&)
                         (void)
                         ((case-lambda
                            ((g$x$8694$XcRv&)
                             (begin
                               (if (g$id?$7744$XcRv& g$x$8694$XcRv&)
                                 (void)
                                 (g$syntax-violation$8128$XcRv&
                                   '#f
                                   '"not an identifier"
                                   g$stx$8668$XcRv&
                                   g$x$8694$XcRv&))
                               (g$check$8669$XcRv& (cdr g$x*$8693$XcRv&))
                               (if (g$bound-id-member?$7751$XcRv&
                                     g$x$8694$XcRv&
                                     (cdr g$x*$8693$XcRv&))
                                 (g$syntax-violation$8128$XcRv&
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8668$XcRv&
                                   g$x$8694$XcRv&)
                                 (void)))))
                          (car g$x*$8693$XcRv&)))))))
          ((case-lambda
             ((g$t$8670$XcRv&)
              ((case-lambda
                 ((g$ls/false$8671$XcRv&)
                  (if g$ls/false$8671$XcRv&
                    (apply
                      (case-lambda
                        ((g$b$8672$XcRv& g$b*$8673$XcRv&)
                         (g$cons*$6021$XcRv&
                           (g$bless$7985$XcRv& 'let)
                           '()
                           g$b$8672$XcRv&
                           g$b*$8673$XcRv&)))
                      g$ls/false$8671$XcRv&)
                    ((case-lambda
                       ((g$t$8674$XcRv&)
                        ((case-lambda
                           ((g$ls/false$8675$XcRv&)
                            (if g$ls/false$8675$XcRv&
                              (apply
                                (case-lambda
                                  ((g$lhs*$8676$XcRv&
                                     g$rhs*$8677$XcRv&
                                     g$b$8678$XcRv&
                                     g$b*$8679$XcRv&)
                                   (g$bless$7985$XcRv&
                                     ((letrec ((g$f$8680$XcRv&
                                                 (case-lambda
                                                   ((g$lhs*$8681$XcRv&
                                                      g$rhs*$8682$XcRv&)
                                                    (if (null?
                                                          g$lhs*$8681$XcRv&)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8678$XcRv&
                                                          g$b*$8679$XcRv&))
                                                      ((case-lambda
                                                         ((g$t$8683$XcRv&)
                                                          ((case-lambda
                                                             ((g$ls/false$8684$XcRv&)
                                                              (if g$ls/false$8684$XcRv&
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8685$XcRv&)
                                                                     (begin
                                                                       (g$check$8669$XcRv&
                                                                         g$x*$8685$XcRv&)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8682$XcRv&))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8685$XcRv&
                                                                           (g$f$8680$XcRv&
                                                                             (cdr g$lhs*$8681$XcRv&)
                                                                             (cdr g$rhs*$8682$XcRv&)))))))
                                                                  g$ls/false$8684$XcRv&)
                                                                ((case-lambda
                                                                   ((g$t$8686$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8687$XcRv&)
                                                                        (if g$ls/false$8687$XcRv&
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8688$XcRv&
                                                                                 g$x$8689$XcRv&)
                                                                               (begin
                                                                                 (g$check$8669$XcRv&
                                                                                   (cons
                                                                                     g$x$8689$XcRv&
                                                                                     g$x*$8688$XcRv&))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8682$XcRv&))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8688$XcRv&
                                                                                       g$x$8689$XcRv&)
                                                                                     (g$f$8680$XcRv&
                                                                                       (cdr g$lhs*$8681$XcRv&)
                                                                                       (cdr g$rhs*$8682$XcRv&)))))))
                                                                            g$ls/false$8687$XcRv&)
                                                                          ((case-lambda
                                                                             ((g$t$8690$XcRv&)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8691$XcRv&)
                                                                                  (if g$ls/false$8691$XcRv&
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8692$XcRv&)
                                                                                         (g$syntax-violation$8128$XcRv&
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8668$XcRv&
                                                                                           g$others$8692$XcRv&)))
                                                                                      g$ls/false$8691$XcRv&)
                                                                                    (g$syntax-violation$8128$XcRv&
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8690$XcRv&))))
                                                                               (g$syntax-dispatch$8022$XcRv&
                                                                                 g$t$8690$XcRv&
                                                                                 'any))))
                                                                           g$t$8686$XcRv&))))
                                                                     (g$syntax-dispatch$8022$XcRv&
                                                                       g$t$8686$XcRv&
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8683$XcRv&))))
                                                           (g$syntax-dispatch$8022$XcRv&
                                                             g$t$8683$XcRv&
                                                             'each-any))))
                                                       (car g$lhs*$8681$XcRv&)))))))
                                        g$f$8680$XcRv&)
                                      g$lhs*$8676$XcRv&
                                      g$rhs*$8677$XcRv&))))
                                g$ls/false$8675$XcRv&)
                              (g$syntax-violation$8128$XcRv&
                                '#f
                                '"invalid syntax"
                                g$t$8674$XcRv&))))
                         (g$syntax-dispatch$8022$XcRv&
                           g$t$8674$XcRv&
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8670$XcRv&))))
               (g$syntax-dispatch$8022$XcRv&
                 g$t$8670$XcRv&
                 '(_ () any . each-any)))))
           g$stx$8668$XcRv&)))))
   (g$trace-lambda-macro$7991$XcRv&
     g$trace-lambda-macro$11441$XcRv&
     (case-lambda
       ((g$stx$8695$XcRv&)
        ((case-lambda
           ((g$t$8696$XcRv&)
            ((case-lambda
               ((g$ls/false$8697$XcRv&)
                (if g$ls/false$8697$XcRv&
                  (apply
                    (case-lambda
                      ((g$who$8698$XcRv&
                         g$fmls$8699$XcRv&
                         g$b$8700$XcRv&
                         g$b*$8701$XcRv&)
                       (if (g$valid-bound-ids?$7749$XcRv& g$fmls$8699$XcRv&)
                         (g$bless$7985$XcRv&
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8698$XcRv&)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8699$XcRv&
                                 (cons g$b$8700$XcRv& g$b*$8701$XcRv&)))))
                         (g$invalid-fmls-error$7987$XcRv&
                           g$stx$8695$XcRv&
                           g$fmls$8699$XcRv&))))
                    g$ls/false$8697$XcRv&)
                  ((case-lambda
                     ((g$t$8702$XcRv&)
                      ((case-lambda
                         ((g$ls/false$8703$XcRv&)
                          (if g$ls/false$8703$XcRv&
                            (apply
                              (case-lambda
                                ((g$who$8704$XcRv&
                                   g$fmls$8705$XcRv&
                                   g$last$8706$XcRv&
                                   g$b$8707$XcRv&
                                   g$b*$8708$XcRv&)
                                 (if (g$valid-bound-ids?$7749$XcRv&
                                       (cons
                                         g$last$8706$XcRv&
                                         g$fmls$8705$XcRv&))
                                   (g$bless$7985$XcRv&
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8704$XcRv&)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8705$XcRv&
                                             g$last$8706$XcRv&)
                                           (cons
                                             g$b$8707$XcRv&
                                             g$b*$8708$XcRv&)))))
                                   (g$invalid-fmls-error$7987$XcRv&
                                     g$stx$8695$XcRv&
                                     (append
                                       g$fmls$8705$XcRv&
                                       g$last$8706$XcRv&)))))
                              g$ls/false$8703$XcRv&)
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"invalid syntax"
                              g$t$8702$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$8702$XcRv&
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8696$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8696$XcRv&
               '(_ any each-any any . each-any)))))
         g$stx$8695$XcRv&))))
   (g$trace-define-macro$7992$XcRv&
     g$trace-define-macro$11442$XcRv&
     (case-lambda
       ((g$stx$8709$XcRv&)
        ((case-lambda
           ((g$t$8710$XcRv&)
            ((case-lambda
               ((g$ls/false$8711$XcRv&)
                (if g$ls/false$8711$XcRv&
                  (apply
                    (case-lambda
                      ((g$who$8712$XcRv&
                         g$fmls$8713$XcRv&
                         g$b$8714$XcRv&
                         g$b*$8715$XcRv&)
                       (if (g$valid-bound-ids?$7749$XcRv& g$fmls$8713$XcRv&)
                         (g$bless$7985$XcRv&
                           (list
                             'define
                             g$who$8712$XcRv&
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8712$XcRv&)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8713$XcRv&
                                   (cons g$b$8714$XcRv& g$b*$8715$XcRv&))))))
                         (g$invalid-fmls-error$7987$XcRv&
                           g$stx$8709$XcRv&
                           g$fmls$8713$XcRv&))))
                    g$ls/false$8711$XcRv&)
                  ((case-lambda
                     ((g$t$8716$XcRv&)
                      ((case-lambda
                         ((g$ls/false$8717$XcRv&)
                          (if g$ls/false$8717$XcRv&
                            (apply
                              (case-lambda
                                ((g$who$8718$XcRv&
                                   g$fmls$8719$XcRv&
                                   g$last$8720$XcRv&
                                   g$b$8721$XcRv&
                                   g$b*$8722$XcRv&)
                                 (if (g$valid-bound-ids?$7749$XcRv&
                                       (cons
                                         g$last$8720$XcRv&
                                         g$fmls$8719$XcRv&))
                                   (g$bless$7985$XcRv&
                                     (list
                                       'define
                                       g$who$8718$XcRv&
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8718$XcRv&)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8719$XcRv&
                                               g$last$8720$XcRv&)
                                             (cons
                                               g$b$8721$XcRv&
                                               g$b*$8722$XcRv&))))))
                                   (g$invalid-fmls-error$7987$XcRv&
                                     g$stx$8709$XcRv&
                                     (append
                                       g$fmls$8719$XcRv&
                                       g$last$8720$XcRv&)))))
                              g$ls/false$8717$XcRv&)
                            ((case-lambda
                               ((g$t$8723$XcRv&)
                                ((case-lambda
                                   ((g$ls/false$8724$XcRv&)
                                    (if g$ls/false$8724$XcRv&
                                      (apply
                                        (case-lambda
                                          ((g$who$8725$XcRv& g$expr$8726$XcRv&)
                                           (if (g$id?$7744$XcRv&
                                                 g$who$8725$XcRv&)
                                             (g$bless$7985$XcRv&
                                               (list
                                                 'define
                                                 g$who$8725$XcRv&
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8726$XcRv&))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8725$XcRv&)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$8128$XcRv&
                                               '#f
                                               '"invalid name"
                                               g$stx$8709$XcRv&))))
                                        g$ls/false$8724$XcRv&)
                                      (g$syntax-violation$8128$XcRv&
                                        '#f
                                        '"invalid syntax"
                                        g$t$8723$XcRv&))))
                                 (g$syntax-dispatch$8022$XcRv&
                                   g$t$8723$XcRv&
                                   '(_ any any)))))
                             g$t$8716$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$8716$XcRv&
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8710$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8710$XcRv&
               '(_ (any . each-any) any . each-any)))))
         g$stx$8709$XcRv&))))
   (g$trace-define-syntax-macro$7993$XcRv&
     g$trace-define-syntax-macro$11443$XcRv&
     (case-lambda
       ((g$stx$8727$XcRv&)
        ((case-lambda
           ((g$t$8728$XcRv&)
            ((case-lambda
               ((g$ls/false$8729$XcRv&)
                (if g$ls/false$8729$XcRv&
                  (apply
                    (case-lambda
                      ((g$who$8730$XcRv& g$expr$8731$XcRv&)
                       (if (g$id?$7744$XcRv& g$who$8730$XcRv&)
                         (g$bless$7985$XcRv&
                           (list
                             'define-syntax
                             g$who$8730$XcRv&
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8730$XcRv&)
                               g$expr$8731$XcRv&)))
                         (g$syntax-violation$8128$XcRv&
                           '#f
                           '"invalid name"
                           g$stx$8727$XcRv&))))
                    g$ls/false$8729$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8728$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8728$XcRv& '(_ any any)))))
         g$stx$8727$XcRv&))))
   (g$trace-let/rec-syntax$7994$XcRv&
     g$trace-let/rec-syntax$11444$XcRv&
     (case-lambda
       ((g$who$8732$XcRv&)
        (case-lambda
          ((g$stx$8733$XcRv&)
           ((case-lambda
              ((g$t$8734$XcRv&)
               ((case-lambda
                  ((g$ls/false$8735$XcRv&)
                   (if g$ls/false$8735$XcRv&
                     (apply
                       (case-lambda
                         ((g$lhs*$8736$XcRv&
                            g$rhs*$8737$XcRv&
                            g$b$8738$XcRv&
                            g$b*$8739$XcRv&)
                          (if (g$valid-bound-ids?$7749$XcRv& g$lhs*$8736$XcRv&)
                            ((case-lambda
                               ((g$rhs*$8740$XcRv&)
                                (g$bless$7985$XcRv&
                                  (cons
                                    g$who$8732$XcRv&
                                    (cons
                                      (map list
                                           g$lhs*$8736$XcRv&
                                           g$rhs*$8740$XcRv&)
                                      (cons g$b$8738$XcRv& g$b*$8739$XcRv&))))))
                             (map (case-lambda
                                    ((g$lhs$8741$XcRv& g$rhs$8742$XcRv&)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8741$XcRv&)
                                       g$rhs$8742$XcRv&)))
                                  g$lhs*$8736$XcRv&
                                  g$rhs*$8737$XcRv&))
                            (g$invalid-fmls-error$7987$XcRv&
                              g$stx$8733$XcRv&
                              g$lhs*$8736$XcRv&))))
                       g$ls/false$8735$XcRv&)
                     (g$syntax-violation$8128$XcRv&
                       '#f
                       '"invalid syntax"
                       g$t$8734$XcRv&))))
                (g$syntax-dispatch$8022$XcRv&
                  g$t$8734$XcRv&
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8733$XcRv&))))))
   (g$trace-let-syntax-macro$7995$XcRv&
     g$trace-let-syntax-macro$11445$XcRv&
     (g$trace-let/rec-syntax$7994$XcRv& 'let-syntax))
   (g$trace-letrec-syntax-macro$7996$XcRv&
     g$trace-letrec-syntax-macro$11446$XcRv&
     (g$trace-let/rec-syntax$7994$XcRv& 'letrec-syntax))
   (g$guard-macro$7997$XcRv&
     g$guard-macro$11447$XcRv&
     (case-lambda
       ((g$x$8743$XcRv&)
        (letrec* ((g$gen-clauses$8744$XcRv&
                    (case-lambda
                      ((g$con$8756$XcRv&
                         g$outerk$8757$XcRv&
                         g$clause*$8758$XcRv&)
                       (letrec* ((g$f$8759$XcRv&
                                   (case-lambda
                                     ((g$x$8787$XcRv& g$k$8788$XcRv&)
                                      ((case-lambda
                                         ((g$t$8789$XcRv&)
                                          ((case-lambda
                                             ((g$ls/false$8790$XcRv&)
                                              (if g$ls/false$8790$XcRv&
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8791$XcRv&
                                                       g$p$8792$XcRv&)
                                                     ((case-lambda
                                                        ((g$t$8793$XcRv&)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8793$XcRv&
                                                               g$e$8791$XcRv&))
                                                           (list
                                                             'if
                                                             g$t$8793$XcRv&
                                                             (list
                                                               g$p$8792$XcRv&
                                                               g$t$8793$XcRv&)
                                                             g$k$8788$XcRv&))))
                                                      (gensym))))
                                                  g$ls/false$8790$XcRv&)
                                                ((case-lambda
                                                   ((g$t$8794$XcRv&)
                                                    ((case-lambda
                                                       ((g$ls/false$8795$XcRv&)
                                                        (if g$ls/false$8795$XcRv&
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8796$XcRv&)
                                                               ((case-lambda
                                                                  ((g$t$8797$XcRv&)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8797$XcRv&
                                                                         g$e$8796$XcRv&))
                                                                     (list
                                                                       'if
                                                                       g$t$8797$XcRv&
                                                                       g$t$8797$XcRv&
                                                                       g$k$8788$XcRv&))))
                                                                (gensym))))
                                                            g$ls/false$8795$XcRv&)
                                                          ((case-lambda
                                                             ((g$t$8798$XcRv&)
                                                              ((case-lambda
                                                                 ((g$ls/false$8799$XcRv&)
                                                                  (if g$ls/false$8799$XcRv&
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8800$XcRv&
                                                                           g$v$8801$XcRv&
                                                                           g$v*$8802$XcRv&)
                                                                         (list
                                                                           'if
                                                                           g$e$8800$XcRv&
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8801$XcRv&
                                                                               g$v*$8802$XcRv&))
                                                                           g$k$8788$XcRv&)))
                                                                      g$ls/false$8799$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$t$8803$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8804$XcRv&)
                                                                            (if g$ls/false$8804$XcRv&
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$8128$XcRv&
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8787$XcRv&)))
                                                                                g$ls/false$8804$XcRv&)
                                                                              (g$syntax-violation$8128$XcRv&
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8803$XcRv&))))
                                                                         (g$syntax-dispatch$8022$XcRv&
                                                                           g$t$8803$XcRv&
                                                                           '_))))
                                                                     g$t$8798$XcRv&))))
                                                               (g$syntax-dispatch$8022$XcRv&
                                                                 g$t$8798$XcRv&
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8794$XcRv&))))
                                                     (g$syntax-dispatch$8022$XcRv&
                                                       g$t$8794$XcRv&
                                                       '(any)))))
                                                 g$t$8789$XcRv&))))
                                           (g$syntax-dispatch$8022$XcRv&
                                             g$t$8789$XcRv&
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8787$XcRv&))))
                                 (g$f*$8760$XcRv&
                                   (case-lambda
                                     ((g$x*$8767$XcRv&)
                                      ((case-lambda
                                         ((g$t$8768$XcRv&)
                                          ((case-lambda
                                             ((g$ls/false$8769$XcRv&)
                                              (if g$ls/false$8769$XcRv&
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8756$XcRv&)
                                                       '#t)))
                                                  g$ls/false$8769$XcRv&)
                                                ((case-lambda
                                                   ((g$t$8770$XcRv&)
                                                    ((case-lambda
                                                       ((g$ls/false$8771$XcRv&)
                                                        (if g$ls/false$8771$XcRv&
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8772$XcRv&
                                                                 g$e*$8773$XcRv&)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8772$XcRv&
                                                                     g$e*$8773$XcRv&))
                                                                 '#f)))
                                                            g$ls/false$8771$XcRv&)
                                                          ((case-lambda
                                                             ((g$t$8774$XcRv&)
                                                              ((case-lambda
                                                                 ((g$ls/false$8775$XcRv&)
                                                                  (if g$ls/false$8775$XcRv&
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8776$XcRv&
                                                                           g$cls*$8777$XcRv&)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8760$XcRv&
                                                                                g$cls*$8777$XcRv&)))
                                                                           (case-lambda
                                                                             ((g$e$8780$XcRv&
                                                                                g$g$8781$XcRv&)
                                                                              ((case-lambda
                                                                                 ((g$g$8782$XcRv&
                                                                                    g$e$8783$XcRv&)
                                                                                  (values
                                                                                    (g$f$8759$XcRv&
                                                                                      g$cls$8776$XcRv&
                                                                                      g$e$8783$XcRv&)
                                                                                    g$g$8782$XcRv&)))
                                                                               g$g$8781$XcRv&
                                                                               g$e$8780$XcRv&))))))
                                                                      g$ls/false$8775$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$t$8784$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8785$XcRv&)
                                                                            (if g$ls/false$8785$XcRv&
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8786$XcRv&)
                                                                                   (g$syntax-violation$8128$XcRv&
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8786$XcRv&)))
                                                                                g$ls/false$8785$XcRv&)
                                                                              (g$syntax-violation$8128$XcRv&
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8784$XcRv&))))
                                                                         (g$syntax-dispatch$8022$XcRv&
                                                                           g$t$8784$XcRv&
                                                                           'any))))
                                                                     g$t$8774$XcRv&))))
                                                               (g$syntax-dispatch$8022$XcRv&
                                                                 g$t$8774$XcRv&
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8770$XcRv&))))
                                                     (g$syntax-dispatch$8022$XcRv&
                                                       g$t$8770$XcRv&
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8768$XcRv&))))
                                           (g$syntax-dispatch$8022$XcRv&
                                             g$t$8768$XcRv&
                                             '()))))
                                       g$x*$8767$XcRv&)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8760$XcRv& g$clause*$8758$XcRv&)))
                           (case-lambda
                             ((g$code$8763$XcRv& g$raisek$8764$XcRv&)
                              ((case-lambda
                                 ((g$raisek$8765$XcRv& g$code$8766$XcRv&)
                                  (if g$raisek$8765$XcRv&
                                    (list g$outerk$8757$XcRv& g$code$8766$XcRv&)
                                    g$code$8766$XcRv&)))
                               g$raisek$8764$XcRv&
                               g$code$8763$XcRv&)))))))))
          ((case-lambda
             ((g$t$8745$XcRv&)
              ((case-lambda
                 ((g$ls/false$8746$XcRv&)
                  (if (if g$ls/false$8746$XcRv&
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8747$XcRv&
                                 g$clause*$8748$XcRv&
                                 g$b$8749$XcRv&
                                 g$b*$8750$XcRv&)
                               (g$id?$7744$XcRv& g$con$8747$XcRv&)))
                            g$ls/false$8746$XcRv&))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8751$XcRv&
                           g$clause*$8752$XcRv&
                           g$b$8753$XcRv&
                           g$b*$8754$XcRv&)
                         ((case-lambda
                            ((g$outerk$8755$XcRv&)
                             (g$bless$7985$XcRv&
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8755$XcRv&)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8751$XcRv&)
                                           (g$gen-clauses$8744$XcRv&
                                             g$con$8751$XcRv&
                                             g$outerk$8755$XcRv&
                                             g$clause*$8752$XcRv&))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8753$XcRv&
                                                 g$b*$8754$XcRv&))))))))))))
                          (gensym))))
                      g$ls/false$8746$XcRv&)
                    (g$syntax-violation$8128$XcRv&
                      '#f
                      '"invalid syntax"
                      g$t$8745$XcRv&))))
               (g$syntax-dispatch$8022$XcRv&
                 g$t$8745$XcRv&
                 '(_ (any . each-any) any . each-any)))))
           g$x$8743$XcRv&)))))
   (g$define-enumeration-macro$7998$XcRv&
     g$define-enumeration-macro$11448$XcRv&
     (case-lambda
       ((g$stx$8805$XcRv&)
        (letrec* ((g$set?$8806$XcRv&
                    (case-lambda
                      ((g$x$8819$XcRv&)
                       ((case-lambda
                          ((g$t$8820$XcRv&)
                           (if g$t$8820$XcRv&
                             g$t$8820$XcRv&
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8819$XcRv&)
                                          (cdr g$x$8819$XcRv&)))
                                 (begin
                                   '#f
                                   (g$set?$8806$XcRv& (cdr g$x$8819$XcRv&)))
                                 '#f)))))
                        (null? g$x$8819$XcRv&)))))
                  (g$remove-dups$8807$XcRv&
                    (case-lambda
                      ((g$ls$8818$XcRv&)
                       (if (null? g$ls$8818$XcRv&)
                         '()
                         (cons
                           (car g$ls$8818$XcRv&)
                           (g$remove-dups$8807$XcRv&
                             (g$remq$6026$XcRv&
                               (car g$ls$8818$XcRv&)
                               (cdr g$ls$8818$XcRv&)))))))))
          ((case-lambda
             ((g$t$8808$XcRv&)
              ((case-lambda
                 ((g$ls/false$8809$XcRv&)
                  (if (if g$ls/false$8809$XcRv&
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8810$XcRv&
                                 g$id*$8811$XcRv&
                                 g$maker$8812$XcRv&)
                               (if (g$id?$7744$XcRv& g$name$8810$XcRv&)
                                 (if (g$id?$7744$XcRv& g$maker$8812$XcRv&)
                                   (begin
                                     '#f
                                     (g$for-all$6019$XcRv&
                                       g$id?$7744$XcRv&
                                       g$id*$8811$XcRv&))
                                   '#f)
                                 '#f)))
                            g$ls/false$8809$XcRv&))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8813$XcRv& g$id*$8814$XcRv& g$maker$8815$XcRv&)
                         ((case-lambda
                            ((g$name*$8816$XcRv& g$mk$8817$XcRv&)
                             (g$bless$7985$XcRv&
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8817$XcRv&
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8816$XcRv&))))
                                 (list
                                   'define-syntax
                                   g$name$8813$XcRv&
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8816$XcRv&))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8813$XcRv&)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8815$XcRv&
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8815$XcRv&)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8816$XcRv&))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8815$XcRv&)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8817$XcRv&
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8807$XcRv&
                            (g$syntax->datum$8131$XcRv& g$id*$8814$XcRv&))
                          (gensym))))
                      g$ls/false$8809$XcRv&)
                    (g$syntax-violation$8128$XcRv&
                      '#f
                      '"invalid syntax"
                      g$t$8808$XcRv&))))
               (g$syntax-dispatch$8022$XcRv&
                 g$t$8808$XcRv&
                 '(_ any each-any any)))))
           g$stx$8805$XcRv&)))))
   (g$time-macro$7999$XcRv&
     g$time-macro$11449$XcRv&
     (case-lambda
       ((g$stx$8821$XcRv&)
        ((case-lambda
           ((g$t$8822$XcRv&)
            ((case-lambda
               ((g$ls/false$8823$XcRv&)
                (if g$ls/false$8823$XcRv&
                  (apply
                    (case-lambda
                      ((g$expr$8824$XcRv&)
                       ((case-lambda
                          ((g$str$8825$XcRv&)
                           (g$bless$7985$XcRv&
                             (list
                               'time-it
                               g$str$8825$XcRv&
                               (list 'lambda '() g$expr$8824$XcRv&)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6749$XcRv&)))
                          (case-lambda
                            ((g$p$8828$XcRv& g$e$8829$XcRv&)
                             ((case-lambda
                                ((g$e$8830$XcRv& g$p$8831$XcRv&)
                                 (begin
                                   (write
                                     (g$syntax->datum$8131$XcRv&
                                       g$expr$8824$XcRv&)
                                     g$p$8831$XcRv&)
                                   (g$e$8830$XcRv&))))
                              g$e$8829$XcRv&
                              g$p$8828$XcRv&)))))))
                    g$ls/false$8823$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8822$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8822$XcRv& '(_ any)))))
         g$stx$8821$XcRv&))))
   (g$delay-macro$8000$XcRv&
     g$delay-macro$11450$XcRv&
     (case-lambda
       ((g$stx$8832$XcRv&)
        ((case-lambda
           ((g$t$8833$XcRv&)
            ((case-lambda
               ((g$ls/false$8834$XcRv&)
                (if g$ls/false$8834$XcRv&
                  (apply
                    (case-lambda
                      ((g$expr$8835$XcRv&)
                       (g$bless$7985$XcRv&
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8835$XcRv&)))))
                    g$ls/false$8834$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8833$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8833$XcRv& '(_ any)))))
         g$stx$8832$XcRv&))))
   (g$assert-macro$8001$XcRv&
     g$assert-macro$11451$XcRv&
     (case-lambda
       ((g$stx$8836$XcRv&)
        ((case-lambda
           ((g$t$8837$XcRv&)
            ((case-lambda
               ((g$ls/false$8838$XcRv&)
                (if g$ls/false$8838$XcRv&
                  (apply
                    (case-lambda
                      ((g$expr$8839$XcRv&)
                       (g$bless$7985$XcRv&
                         (list
                           'unless
                           g$expr$8839$XcRv&
                           (list
                             'assertion-violation
                             '#f
                             '"assertion failed"
                             (list 'quote g$expr$8839$XcRv&))))))
                    g$ls/false$8838$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8837$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8837$XcRv& '(_ any)))))
         g$stx$8836$XcRv&))))
   (g$endianness-macro$8002$XcRv&
     g$endianness-macro$11452$XcRv&
     (case-lambda
       ((g$stx$8840$XcRv&)
        ((case-lambda
           ((g$t$8841$XcRv&)
            ((case-lambda
               ((g$ls/false$8842$XcRv&)
                (if g$ls/false$8842$XcRv&
                  (apply
                    (case-lambda
                      ((g$e$8843$XcRv&)
                       ((case-lambda
                          ((g$t$8844$XcRv&)
                           (if (eqv? g$t$8844$XcRv& 'little)
                             (g$bless$7985$XcRv& ''little)
                             (if (eqv? g$t$8844$XcRv& 'big)
                               (g$bless$7985$XcRv& ''big)
                               (g$syntax-violation$8128$XcRv&
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8840$XcRv&)))))
                        (g$syntax->datum$8131$XcRv& g$e$8843$XcRv&))))
                    g$ls/false$8842$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8841$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8841$XcRv& '(_ any)))))
         g$stx$8840$XcRv&))))
   (g$identifier-syntax-macro$8003$XcRv&
     g$identifier-syntax-macro$11453$XcRv&
     (case-lambda
       ((g$stx$8845$XcRv&)
        ((case-lambda
           ((g$t$8846$XcRv&)
            ((case-lambda
               ((g$ls/false$8847$XcRv&)
                (if g$ls/false$8847$XcRv&
                  (apply
                    (case-lambda
                      ((g$expr$8848$XcRv&)
                       (g$bless$7985$XcRv&
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8848$XcRv&))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8848$XcRv&)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8847$XcRv&)
                  ((case-lambda
                     ((g$t$8849$XcRv&)
                      ((case-lambda
                         ((g$ls/false$8850$XcRv&)
                          (if (if g$ls/false$8850$XcRv&
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8851$XcRv&
                                         g$expr1$8852$XcRv&
                                         g$id2$8853$XcRv&
                                         g$expr2$8854$XcRv&
                                         g$expr3$8855$XcRv&)
                                       (if (g$id?$7744$XcRv& g$id1$8851$XcRv&)
                                         (if (g$id?$7744$XcRv& g$id2$8853$XcRv&)
                                           (begin
                                             '#f
                                             (g$id?$7744$XcRv&
                                               g$expr2$8854$XcRv&))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8850$XcRv&))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8856$XcRv&
                                   g$expr1$8857$XcRv&
                                   g$id2$8858$XcRv&
                                   g$expr2$8859$XcRv&
                                   g$expr3$8860$XcRv&)
                                 (g$bless$7985$XcRv&
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8857$XcRv&))
                                         (list
                                           (list 'set! 'id g$expr2$8859$XcRv&)
                                           (list 'syntax g$expr3$8860$XcRv&))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8857$XcRv&
                                               '(e* ...))))))))))
                              g$ls/false$8850$XcRv&)
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"invalid syntax"
                              g$t$8849$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$8849$XcRv&
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8846$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8846$XcRv& '(_ any)))))
         g$stx$8845$XcRv&))))
   (g$do-macro$8004$XcRv&
     g$do-macro$11454$XcRv&
     (case-lambda
       ((g$stx$8861$XcRv&)
        (letrec* ((g$bind$8862$XcRv&
                    (case-lambda
                      ((g$x$8874$XcRv&)
                       ((case-lambda
                          ((g$t$8875$XcRv&)
                           ((case-lambda
                              ((g$ls/false$8876$XcRv&)
                               (if g$ls/false$8876$XcRv&
                                 (apply
                                   (case-lambda
                                     ((g$x$8877$XcRv& g$init$8878$XcRv&)
                                      (list
                                        g$x$8877$XcRv&
                                        g$init$8878$XcRv&
                                        g$x$8877$XcRv&)))
                                   g$ls/false$8876$XcRv&)
                                 ((case-lambda
                                    ((g$t$8879$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$8880$XcRv&)
                                         (if g$ls/false$8880$XcRv&
                                           (apply
                                             (case-lambda
                                               ((g$x$8881$XcRv&
                                                  g$init$8882$XcRv&
                                                  g$step$8883$XcRv&)
                                                (list
                                                  g$x$8881$XcRv&
                                                  g$init$8882$XcRv&
                                                  g$step$8883$XcRv&)))
                                             g$ls/false$8880$XcRv&)
                                           ((case-lambda
                                              ((g$t$8884$XcRv&)
                                               ((case-lambda
                                                  ((g$ls/false$8885$XcRv&)
                                                   (if g$ls/false$8885$XcRv&
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$8128$XcRv&
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8861$XcRv&)))
                                                       g$ls/false$8885$XcRv&)
                                                     (g$syntax-violation$8128$XcRv&
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8884$XcRv&))))
                                                (g$syntax-dispatch$8022$XcRv&
                                                  g$t$8884$XcRv&
                                                  '_))))
                                            g$t$8879$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$8879$XcRv&
                                        '(any any any)))))
                                  g$t$8875$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv&
                              g$t$8875$XcRv&
                              '(any any)))))
                        g$x$8874$XcRv&)))))
          ((case-lambda
             ((g$t$8863$XcRv&)
              ((case-lambda
                 ((g$ls/false$8864$XcRv&)
                  (if g$ls/false$8864$XcRv&
                    (apply
                      (case-lambda
                        ((g$binding*$8865$XcRv&
                           g$test$8866$XcRv&
                           g$expr*$8867$XcRv&
                           g$command*$8868$XcRv&)
                         ((case-lambda
                            ((g$t$8869$XcRv&)
                             ((case-lambda
                                ((g$ls/false$8870$XcRv&)
                                 (if g$ls/false$8870$XcRv&
                                   (apply
                                     (case-lambda
                                       ((g$x*$8871$XcRv&
                                          g$init*$8872$XcRv&
                                          g$step*$8873$XcRv&)
                                        (if (g$valid-bound-ids?$7749$XcRv&
                                              g$x*$8871$XcRv&)
                                          (g$bless$7985$XcRv&
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8871$XcRv&
                                                    (list
                                                      'if
                                                      g$test$8866$XcRv&
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8867$XcRv&))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8868$XcRv&
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8873$XcRv&))))))))
                                              (cons 'loop g$init*$8872$XcRv&)))
                                          (g$syntax-violation$8128$XcRv&
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8861$XcRv&))))
                                     g$ls/false$8870$XcRv&)
                                   (g$syntax-violation$8128$XcRv&
                                     '#f
                                     '"invalid syntax"
                                     g$t$8869$XcRv&))))
                              (g$syntax-dispatch$8022$XcRv&
                                g$t$8869$XcRv&
                                '#(each (any any any))))))
                          (map g$bind$8862$XcRv& g$binding*$8865$XcRv&))))
                      g$ls/false$8864$XcRv&)
                    (g$syntax-violation$8128$XcRv&
                      '#f
                      '"invalid syntax"
                      g$t$8863$XcRv&))))
               (g$syntax-dispatch$8022$XcRv&
                 g$t$8863$XcRv&
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8861$XcRv&)))))
   (g$let*-macro$8005$XcRv&
     g$let*-macro$11455$XcRv&
     (case-lambda
       ((g$stx$8886$XcRv&)
        ((case-lambda
           ((g$t$8887$XcRv&)
            ((case-lambda
               ((g$ls/false$8888$XcRv&)
                (if (if g$ls/false$8888$XcRv&
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8889$XcRv&
                               g$rhs*$8890$XcRv&
                               g$b$8891$XcRv&
                               g$b*$8892$XcRv&)
                             (g$for-all$6019$XcRv&
                               g$id?$7744$XcRv&
                               g$lhs*$8889$XcRv&)))
                          g$ls/false$8888$XcRv&))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8893$XcRv&
                         g$rhs*$8894$XcRv&
                         g$b$8895$XcRv&
                         g$b*$8896$XcRv&)
                       (g$bless$7985$XcRv&
                         ((letrec ((g$f$8897$XcRv&
                                     (case-lambda
                                       ((g$x*$8898$XcRv&)
                                        (if (null? g$x*$8898$XcRv&)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8895$XcRv&
                                                g$b*$8896$XcRv&)))
                                          (list
                                            'let
                                            (list (car g$x*$8898$XcRv&))
                                            (g$f$8897$XcRv&
                                              (cdr g$x*$8898$XcRv&))))))))
                            g$f$8897$XcRv&)
                          (map list g$lhs*$8893$XcRv& g$rhs*$8894$XcRv&)))))
                    g$ls/false$8888$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8887$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8887$XcRv&
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8886$XcRv&))))
   (g$or-macro$8006$XcRv&
     g$or-macro$11456$XcRv&
     (case-lambda
       ((g$stx$8899$XcRv&)
        ((case-lambda
           ((g$t$8900$XcRv&)
            ((case-lambda
               ((g$ls/false$8901$XcRv&)
                (if g$ls/false$8901$XcRv&
                  (apply (case-lambda (() '#f)) g$ls/false$8901$XcRv&)
                  ((case-lambda
                     ((g$t$8902$XcRv&)
                      ((case-lambda
                         ((g$ls/false$8903$XcRv&)
                          (if g$ls/false$8903$XcRv&
                            (apply
                              (case-lambda
                                ((g$e$8904$XcRv& g$e*$8905$XcRv&)
                                 (g$bless$7985$XcRv&
                                   ((letrec ((g$f$8906$XcRv&
                                               (case-lambda
                                                 ((g$e$8907$XcRv&
                                                    g$e*$8908$XcRv&)
                                                  (if (null? g$e*$8908$XcRv&)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8907$XcRv&)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8907$XcRv&))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8906$XcRv&
                                                          (car g$e*$8908$XcRv&)
                                                          (cdr g$e*$8908$XcRv&)))))))))
                                      g$f$8906$XcRv&)
                                    g$e$8904$XcRv&
                                    g$e*$8905$XcRv&))))
                              g$ls/false$8903$XcRv&)
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"invalid syntax"
                              g$t$8902$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$8902$XcRv&
                         '(_ any . each-any)))))
                   g$t$8900$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8900$XcRv& '(_)))))
         g$stx$8899$XcRv&))))
   (g$and-macro$8007$XcRv&
     g$and-macro$11457$XcRv&
     (case-lambda
       ((g$stx$8909$XcRv&)
        ((case-lambda
           ((g$t$8910$XcRv&)
            ((case-lambda
               ((g$ls/false$8911$XcRv&)
                (if g$ls/false$8911$XcRv&
                  (apply (case-lambda (() '#t)) g$ls/false$8911$XcRv&)
                  ((case-lambda
                     ((g$t$8912$XcRv&)
                      ((case-lambda
                         ((g$ls/false$8913$XcRv&)
                          (if g$ls/false$8913$XcRv&
                            (apply
                              (case-lambda
                                ((g$e$8914$XcRv& g$e*$8915$XcRv&)
                                 (g$bless$7985$XcRv&
                                   ((letrec ((g$f$8916$XcRv&
                                               (case-lambda
                                                 ((g$e$8917$XcRv&
                                                    g$e*$8918$XcRv&)
                                                  (if (null? g$e*$8918$XcRv&)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8917$XcRv&)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8917$XcRv&
                                                        (cons
                                                          (g$f$8916$XcRv&
                                                            (car g$e*$8918$XcRv&)
                                                            (cdr g$e*$8918$XcRv&))
                                                          '(#f)))))))))
                                      g$f$8916$XcRv&)
                                    g$e$8914$XcRv&
                                    g$e*$8915$XcRv&))))
                              g$ls/false$8913$XcRv&)
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"invalid syntax"
                              g$t$8912$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$8912$XcRv&
                         '(_ any . each-any)))))
                   g$t$8910$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8910$XcRv& '(_)))))
         g$stx$8909$XcRv&))))
   (g$cond-macro$8008$XcRv&
     g$cond-macro$11458$XcRv&
     (case-lambda
       ((g$stx$8919$XcRv&)
        ((case-lambda
           ((g$t$8920$XcRv&)
            ((case-lambda
               ((g$ls/false$8921$XcRv&)
                (if g$ls/false$8921$XcRv&
                  (apply
                    (case-lambda
                      ((g$cls$8922$XcRv& g$cls*$8923$XcRv&)
                       (g$bless$7985$XcRv&
                         ((letrec ((g$f$8924$XcRv&
                                     (case-lambda
                                       ((g$cls$8925$XcRv& g$cls*$8926$XcRv&)
                                        (if (null? g$cls*$8926$XcRv&)
                                          ((case-lambda
                                             ((g$t$8927$XcRv&)
                                              ((case-lambda
                                                 ((g$ls/false$8928$XcRv&)
                                                  (if g$ls/false$8928$XcRv&
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8929$XcRv&
                                                           g$e*$8930$XcRv&)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8929$XcRv&
                                                             g$e*$8930$XcRv&))))
                                                      g$ls/false$8928$XcRv&)
                                                    ((case-lambda
                                                       ((g$t$8931$XcRv&)
                                                        ((case-lambda
                                                           ((g$ls/false$8932$XcRv&)
                                                            (if g$ls/false$8932$XcRv&
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8933$XcRv&
                                                                     g$p$8934$XcRv&)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8933$XcRv&))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8934$XcRv&
                                                                         '(t))))))
                                                                g$ls/false$8932$XcRv&)
                                                              ((case-lambda
                                                                 ((g$t$8935$XcRv&)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8936$XcRv&)
                                                                      (if g$ls/false$8936$XcRv&
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8937$XcRv&)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8937$XcRv&
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8936$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$t$8938$XcRv&)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8939$XcRv&)
                                                                                (if g$ls/false$8939$XcRv&
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8940$XcRv&
                                                                                         g$e*$8941$XcRv&)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8940$XcRv&
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8941$XcRv&))))
                                                                                    g$ls/false$8939$XcRv&)
                                                                                  ((case-lambda
                                                                                     ((g$t$8942$XcRv&)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8943$XcRv&)
                                                                                          (if g$ls/false$8943$XcRv&
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8128$XcRv&
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8919$XcRv&)))
                                                                                              g$ls/false$8943$XcRv&)
                                                                                            (g$syntax-violation$8128$XcRv&
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8942$XcRv&))))
                                                                                       (g$syntax-dispatch$8022$XcRv&
                                                                                         g$t$8942$XcRv&
                                                                                         '_))))
                                                                                   g$t$8938$XcRv&))))
                                                                             (g$syntax-dispatch$8022$XcRv&
                                                                               g$t$8938$XcRv&
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8935$XcRv&))))
                                                                   (g$syntax-dispatch$8022$XcRv&
                                                                     g$t$8935$XcRv&
                                                                     '(any)))))
                                                               g$t$8931$XcRv&))))
                                                         (g$syntax-dispatch$8022$XcRv&
                                                           g$t$8931$XcRv&
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8927$XcRv&))))
                                               (g$syntax-dispatch$8022$XcRv&
                                                 g$t$8927$XcRv&
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8925$XcRv&)
                                          ((case-lambda
                                             ((g$t$8944$XcRv&)
                                              ((case-lambda
                                                 ((g$ls/false$8945$XcRv&)
                                                  (if g$ls/false$8945$XcRv&
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8946$XcRv&
                                                           g$e*$8947$XcRv&)
                                                         (g$syntax-violation$8128$XcRv&
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8919$XcRv&)))
                                                      g$ls/false$8945$XcRv&)
                                                    ((case-lambda
                                                       ((g$t$8948$XcRv&)
                                                        ((case-lambda
                                                           ((g$ls/false$8949$XcRv&)
                                                            (if g$ls/false$8949$XcRv&
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8950$XcRv&
                                                                     g$p$8951$XcRv&)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8950$XcRv&))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8951$XcRv&
                                                                         '(t))
                                                                       (g$f$8924$XcRv&
                                                                         (car g$cls*$8926$XcRv&)
                                                                         (cdr g$cls*$8926$XcRv&))))))
                                                                g$ls/false$8949$XcRv&)
                                                              ((case-lambda
                                                                 ((g$t$8952$XcRv&)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8953$XcRv&)
                                                                      (if g$ls/false$8953$XcRv&
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8954$XcRv&)
                                                                             (list
                                                                               'or
                                                                               g$e$8954$XcRv&
                                                                               (g$f$8924$XcRv&
                                                                                 (car g$cls*$8926$XcRv&)
                                                                                 (cdr g$cls*$8926$XcRv&)))))
                                                                          g$ls/false$8953$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$t$8955$XcRv&)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8956$XcRv&)
                                                                                (if g$ls/false$8956$XcRv&
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8957$XcRv&
                                                                                         g$e*$8958$XcRv&)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8957$XcRv&
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8958$XcRv&)
                                                                                         (g$f$8924$XcRv&
                                                                                           (car g$cls*$8926$XcRv&)
                                                                                           (cdr g$cls*$8926$XcRv&)))))
                                                                                    g$ls/false$8956$XcRv&)
                                                                                  ((case-lambda
                                                                                     ((g$t$8959$XcRv&)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8960$XcRv&)
                                                                                          (if g$ls/false$8960$XcRv&
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8128$XcRv&
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8919$XcRv&)))
                                                                                              g$ls/false$8960$XcRv&)
                                                                                            (g$syntax-violation$8128$XcRv&
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8959$XcRv&))))
                                                                                       (g$syntax-dispatch$8022$XcRv&
                                                                                         g$t$8959$XcRv&
                                                                                         '_))))
                                                                                   g$t$8955$XcRv&))))
                                                                             (g$syntax-dispatch$8022$XcRv&
                                                                               g$t$8955$XcRv&
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8952$XcRv&))))
                                                                   (g$syntax-dispatch$8022$XcRv&
                                                                     g$t$8952$XcRv&
                                                                     '(any)))))
                                                               g$t$8948$XcRv&))))
                                                         (g$syntax-dispatch$8022$XcRv&
                                                           g$t$8948$XcRv&
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8944$XcRv&))))
                                               (g$syntax-dispatch$8022$XcRv&
                                                 g$t$8944$XcRv&
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8925$XcRv&))))))
                            g$f$8924$XcRv&)
                          g$cls$8922$XcRv&
                          g$cls*$8923$XcRv&))))
                    g$ls/false$8921$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8920$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8920$XcRv&
               '(_ any . each-any)))))
         g$stx$8919$XcRv&))))
   (g$do-include$8009$XcRv&
     g$do-include$11459$XcRv&
     (case-lambda
       ((g$stx$8961$XcRv& g$id$8962$XcRv& g$filename$8963$XcRv&)
        ((case-lambda
           ((g$filename$8964$XcRv&)
            (begin
              (if (if (string? g$filename$8964$XcRv&)
                    (begin '#f (g$id?$7744$XcRv& g$id$8962$XcRv&))
                    '#f)
                (void)
                (g$syntax-violation$8128$XcRv&
                  '#f
                  '"invalid syntax"
                  g$stx$8961$XcRv&))
              (cons
                (g$bless$7985$XcRv& 'begin)
                (with-input-from-file
                  g$filename$8964$XcRv&
                  (case-lambda
                    (()
                     ((letrec ((g$f$8965$XcRv&
                                 (case-lambda
                                   ((g$ls$8966$XcRv&)
                                    ((case-lambda
                                       ((g$x$8967$XcRv&)
                                        (if (eof-object? g$x$8967$XcRv&)
                                          (reverse g$ls$8966$XcRv&)
                                          (g$f$8965$XcRv&
                                            (cons
                                              (g$datum->stx$7727$XcRv&
                                                g$id$8962$XcRv&
                                                g$x$8967$XcRv&)
                                              g$ls$8966$XcRv&)))))
                                     (read-annotated))))))
                        g$f$8965$XcRv&)
                      '()))))))))
         (g$stx->datum$7755$XcRv& g$filename$8963$XcRv&)))))
   (g$include-macro$8010$XcRv&
     g$include-macro$11460$XcRv&
     (case-lambda
       ((g$e$8968$XcRv&)
        ((case-lambda
           ((g$t$8969$XcRv&)
            ((case-lambda
               ((g$ls/false$8970$XcRv&)
                (if g$ls/false$8970$XcRv&
                  (apply
                    (case-lambda
                      ((g$id$8971$XcRv& g$filename$8972$XcRv&)
                       (g$do-include$8009$XcRv&
                         g$e$8968$XcRv&
                         g$id$8971$XcRv&
                         g$filename$8972$XcRv&)))
                    g$ls/false$8970$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8969$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8969$XcRv& '(any any)))))
         g$e$8968$XcRv&))))
   (g$include-into-macro$8011$XcRv&
     g$include-into-macro$11461$XcRv&
     (case-lambda
       ((g$e$8973$XcRv&)
        ((case-lambda
           ((g$t$8974$XcRv&)
            ((case-lambda
               ((g$ls/false$8975$XcRv&)
                (if g$ls/false$8975$XcRv&
                  (apply
                    (case-lambda
                      ((g$id$8976$XcRv& g$filename$8977$XcRv&)
                       (g$do-include$8009$XcRv&
                         g$e$8973$XcRv&
                         g$id$8976$XcRv&
                         g$filename$8977$XcRv&)))
                    g$ls/false$8975$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8974$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$8974$XcRv& '(_ any any)))))
         g$e$8973$XcRv&))))
   (g$syntax-rules-macro$8012$XcRv&
     g$syntax-rules-macro$11462$XcRv&
     (case-lambda
       ((g$e$8978$XcRv&)
        ((case-lambda
           ((g$t$8979$XcRv&)
            ((case-lambda
               ((g$ls/false$8980$XcRv&)
                (if g$ls/false$8980$XcRv&
                  (apply
                    (case-lambda
                      ((g$lits$8981$XcRv& g$pat*$8982$XcRv& g$tmp*$8983$XcRv&)
                       (begin
                         (g$verify-literals$8025$XcRv&
                           g$lits$8981$XcRv&
                           g$e$8978$XcRv&)
                         (g$bless$7985$XcRv&
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8981$XcRv&
                                   (map (case-lambda
                                          ((g$pat$8984$XcRv& g$tmp$8985$XcRv&)
                                           ((case-lambda
                                              ((g$t$8986$XcRv&)
                                               ((case-lambda
                                                  ((g$ls/false$8987$XcRv&)
                                                   (if g$ls/false$8987$XcRv&
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8988$XcRv&)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8988$XcRv&)
                                                            (list
                                                              'syntax
                                                              g$tmp$8985$XcRv&))))
                                                       g$ls/false$8987$XcRv&)
                                                     ((case-lambda
                                                        ((g$t$8989$XcRv&)
                                                         ((case-lambda
                                                            ((g$ls/false$8990$XcRv&)
                                                             (if g$ls/false$8990$XcRv&
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$8128$XcRv&
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8978$XcRv&
                                                                      g$pat$8984$XcRv&)))
                                                                 g$ls/false$8990$XcRv&)
                                                               (g$syntax-violation$8128$XcRv&
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8989$XcRv&))))
                                                          (g$syntax-dispatch$8022$XcRv&
                                                            g$t$8989$XcRv&
                                                            '_))))
                                                      g$t$8986$XcRv&))))
                                                (g$syntax-dispatch$8022$XcRv&
                                                  g$t$8986$XcRv&
                                                  '(_ . any)))))
                                            g$pat$8984$XcRv&)))
                                        g$pat*$8982$XcRv&
                                        g$tmp*$8983$XcRv&)))))))))
                    g$ls/false$8980$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$8979$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$8979$XcRv&
               '(_ each-any . #(each (any any)))))))
         g$e$8978$XcRv&))))
   (g$quasiquote-macro$8013$XcRv&
     g$quasiquote-macro$11463$XcRv&
     ((case-lambda
        (()
         (letrec* ((g$datum$8991$XcRv&
                     (case-lambda
                       ((g$x$9122$XcRv&)
                        (list
                          (g$scheme-stx$7965$XcRv& 'quote)
                          (g$mkstx$7732$XcRv& g$x$9122$XcRv& '() '() '())))))
                   (g$quasicons*$9007$XcRv&
                     (case-lambda
                       ((g$x$9118$XcRv& g$y$9119$XcRv&)
                        ((letrec ((g$f$9120$XcRv&
                                    (case-lambda
                                      ((g$x$9121$XcRv&)
                                       (if (null? g$x$9121$XcRv&)
                                         g$y$9119$XcRv&
                                         (g$quasicons$9008$XcRv&
                                           (car g$x$9121$XcRv&)
                                           (g$f$9120$XcRv&
                                             (cdr g$x$9121$XcRv&))))))))
                           g$f$9120$XcRv&)
                         g$x$9118$XcRv&))))
                   (g$quasicons$9008$XcRv&
                     (case-lambda
                       ((g$x$9099$XcRv& g$y$9100$XcRv&)
                        ((case-lambda
                           ((g$t$9101$XcRv&)
                            ((case-lambda
                               ((g$ls/false$9102$XcRv&)
                                (if g$ls/false$9102$XcRv&
                                  (apply
                                    (case-lambda
                                      ((g$dy$9103$XcRv&)
                                       ((case-lambda
                                          ((g$t$9104$XcRv&)
                                           ((case-lambda
                                              ((g$ls/false$9105$XcRv&)
                                               (if g$ls/false$9105$XcRv&
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$9106$XcRv&)
                                                      (list
                                                        (g$scheme-stx$7965$XcRv&
                                                          'quote)
                                                        (cons
                                                          g$dx$9106$XcRv&
                                                          g$dy$9103$XcRv&))))
                                                   g$ls/false$9105$XcRv&)
                                                 ((case-lambda
                                                    ((g$t$9107$XcRv&)
                                                     ((case-lambda
                                                        ((g$ls/false$9108$XcRv&)
                                                         (if g$ls/false$9108$XcRv&
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$9109$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9110$XcRv&)
                                                                        (if g$ls/false$9110$XcRv&
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7965$XcRv&
                                                                                   'list)
                                                                                 g$x$9099$XcRv&)))
                                                                            g$ls/false$9110$XcRv&)
                                                                          ((case-lambda
                                                                             ((g$t$9111$XcRv&)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9112$XcRv&)
                                                                                  (if g$ls/false$9112$XcRv&
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7965$XcRv&
                                                                                             'cons)
                                                                                           g$x$9099$XcRv&
                                                                                           g$y$9100$XcRv&)))
                                                                                      g$ls/false$9112$XcRv&)
                                                                                    (g$syntax-violation$8128$XcRv&
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9111$XcRv&))))
                                                                               (g$syntax-dispatch$8022$XcRv&
                                                                                 g$t$9111$XcRv&
                                                                                 '_))))
                                                                           g$t$9109$XcRv&))))
                                                                     (g$syntax-dispatch$8022$XcRv&
                                                                       g$t$9109$XcRv&
                                                                       '()))))
                                                                 g$dy$9103$XcRv&)))
                                                             g$ls/false$9108$XcRv&)
                                                           (g$syntax-violation$8128$XcRv&
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$9107$XcRv&))))
                                                      (g$syntax-dispatch$8022$XcRv&
                                                        g$t$9107$XcRv&
                                                        '_))))
                                                  g$t$9104$XcRv&))))
                                            (g$syntax-dispatch$8022$XcRv&
                                              g$t$9104$XcRv&
                                              '(#(scheme-id quote) any)))))
                                        g$x$9099$XcRv&)))
                                    g$ls/false$9102$XcRv&)
                                  ((case-lambda
                                     ((g$t$9113$XcRv&)
                                      ((case-lambda
                                         ((g$ls/false$9114$XcRv&)
                                          (if g$ls/false$9114$XcRv&
                                            (apply
                                              (case-lambda
                                                ((g$stuff$9115$XcRv&)
                                                 (g$cons*$6021$XcRv&
                                                   (g$scheme-stx$7965$XcRv&
                                                     'list)
                                                   g$x$9099$XcRv&
                                                   g$stuff$9115$XcRv&)))
                                              g$ls/false$9114$XcRv&)
                                            ((case-lambda
                                               ((g$t$9116$XcRv&)
                                                ((case-lambda
                                                   ((g$ls/false$9117$XcRv&)
                                                    (if g$ls/false$9117$XcRv&
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7965$XcRv&
                                                               'cons)
                                                             g$x$9099$XcRv&
                                                             g$y$9100$XcRv&)))
                                                        g$ls/false$9117$XcRv&)
                                                      (g$syntax-violation$8128$XcRv&
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$9116$XcRv&))))
                                                 (g$syntax-dispatch$8022$XcRv&
                                                   g$t$9116$XcRv&
                                                   '_))))
                                             g$t$9113$XcRv&))))
                                       (g$syntax-dispatch$8022$XcRv&
                                         g$t$9113$XcRv&
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$9101$XcRv&))))
                             (g$syntax-dispatch$8022$XcRv&
                               g$t$9101$XcRv&
                               '(#(scheme-id quote) any)))))
                         g$y$9100$XcRv&))))
                   (g$quasiappend$9009$XcRv&
                     (case-lambda
                       ((g$x$9086$XcRv& g$y$9087$XcRv&)
                        ((case-lambda
                           ((g$ls$9088$XcRv&)
                            (if (null? g$ls$9088$XcRv&)
                              (list (g$scheme-stx$7965$XcRv& 'quote) '())
                              (if (null? (cdr g$ls$9088$XcRv&))
                                (car g$ls$9088$XcRv&)
                                (g$cons*$6021$XcRv&
                                  (g$scheme-stx$7965$XcRv& 'append)
                                  g$ls$9088$XcRv&)))))
                         ((letrec ((g$f$9089$XcRv&
                                     (case-lambda
                                       ((g$x$9090$XcRv&)
                                        (if (null? g$x$9090$XcRv&)
                                          ((case-lambda
                                             ((g$t$9091$XcRv&)
                                              ((case-lambda
                                                 ((g$ls/false$9092$XcRv&)
                                                  (if g$ls/false$9092$XcRv&
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$9092$XcRv&)
                                                    ((case-lambda
                                                       ((g$t$9093$XcRv&)
                                                        ((case-lambda
                                                           ((g$ls/false$9094$XcRv&)
                                                            (if g$ls/false$9094$XcRv&
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$9087$XcRv&)))
                                                                g$ls/false$9094$XcRv&)
                                                              (g$syntax-violation$8128$XcRv&
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9093$XcRv&))))
                                                         (g$syntax-dispatch$8022$XcRv&
                                                           g$t$9093$XcRv&
                                                           '_))))
                                                     g$t$9091$XcRv&))))
                                               (g$syntax-dispatch$8022$XcRv&
                                                 g$t$9091$XcRv&
                                                 '(#(scheme-id quote) ())))))
                                           g$y$9087$XcRv&)
                                          ((case-lambda
                                             ((g$t$9095$XcRv&)
                                              ((case-lambda
                                                 ((g$ls/false$9096$XcRv&)
                                                  (if g$ls/false$9096$XcRv&
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$9089$XcRv&
                                                           (cdr g$x$9090$XcRv&))))
                                                      g$ls/false$9096$XcRv&)
                                                    ((case-lambda
                                                       ((g$t$9097$XcRv&)
                                                        ((case-lambda
                                                           ((g$ls/false$9098$XcRv&)
                                                            (if g$ls/false$9098$XcRv&
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$9090$XcRv&)
                                                                     (g$f$9089$XcRv&
                                                                       (cdr g$x$9090$XcRv&)))))
                                                                g$ls/false$9098$XcRv&)
                                                              (g$syntax-violation$8128$XcRv&
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9097$XcRv&))))
                                                         (g$syntax-dispatch$8022$XcRv&
                                                           g$t$9097$XcRv&
                                                           '_))))
                                                     g$t$9095$XcRv&))))
                                               (g$syntax-dispatch$8022$XcRv&
                                                 g$t$9095$XcRv&
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$9090$XcRv&)))))))
                            g$f$9089$XcRv&)
                          g$x$9086$XcRv&)))))
                   (g$quasivector$9010$XcRv&
                     (case-lambda
                       ((g$x$9061$XcRv&)
                        ((case-lambda
                           ((g$pat-x$9062$XcRv&)
                            ((case-lambda
                               ((g$t$9063$XcRv&)
                                ((case-lambda
                                   ((g$ls/false$9064$XcRv&)
                                    (if g$ls/false$9064$XcRv&
                                      (apply
                                        (case-lambda
                                          ((g$x*$9065$XcRv&)
                                           (list
                                             (g$scheme-stx$7965$XcRv& 'quote)
                                             (list->vector g$x*$9065$XcRv&))))
                                        g$ls/false$9064$XcRv&)
                                      ((case-lambda
                                         ((g$t$9066$XcRv&)
                                          ((case-lambda
                                             ((g$ls/false$9067$XcRv&)
                                              (if g$ls/false$9067$XcRv&
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$9068$XcRv&
                                                                 (case-lambda
                                                                   ((g$x$9069$XcRv&
                                                                      g$k$9070$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$t$9071$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9072$XcRv&)
                                                                            (if g$ls/false$9072$XcRv&
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$9073$XcRv&)
                                                                                   (g$k$9070$XcRv&
                                                                                     (map (case-lambda
                                                                                            ((g$x$9074$XcRv&)
                                                                                             (list
                                                                                               (g$scheme-stx$7965$XcRv&
                                                                                                 'quote)
                                                                                               g$x$9074$XcRv&)))
                                                                                          g$x*$9073$XcRv&))))
                                                                                g$ls/false$9072$XcRv&)
                                                                              ((case-lambda
                                                                                 ((g$t$9075$XcRv&)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9076$XcRv&)
                                                                                      (if g$ls/false$9076$XcRv&
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$9077$XcRv&)
                                                                                             (g$k$9070$XcRv&
                                                                                               g$x*$9077$XcRv&)))
                                                                                          g$ls/false$9076$XcRv&)
                                                                                        ((case-lambda
                                                                                           ((g$t$9078$XcRv&)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9079$XcRv&)
                                                                                                (if g$ls/false$9079$XcRv&
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$9080$XcRv&
                                                                                                         g$y$9081$XcRv&)
                                                                                                       (g$f$9068$XcRv&
                                                                                                         g$y$9081$XcRv&
                                                                                                         (case-lambda
                                                                                                           ((g$ls$9082$XcRv&)
                                                                                                            (g$k$9070$XcRv&
                                                                                                              (cons
                                                                                                                g$x$9080$XcRv&
                                                                                                                g$ls$9082$XcRv&)))))))
                                                                                                    g$ls/false$9079$XcRv&)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9083$XcRv&)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$9084$XcRv&)
                                                                                                          (if g$ls/false$9084$XcRv&
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7965$XcRv&
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$9062$XcRv&)))
                                                                                                              g$ls/false$9084$XcRv&)
                                                                                                            (g$syntax-violation$8128$XcRv&
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$9083$XcRv&))))
                                                                                                       (g$syntax-dispatch$8022$XcRv&
                                                                                                         g$t$9083$XcRv&
                                                                                                         '_))))
                                                                                                   g$t$9078$XcRv&))))
                                                                                             (g$syntax-dispatch$8022$XcRv&
                                                                                               g$t$9078$XcRv&
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$9075$XcRv&))))
                                                                                   (g$syntax-dispatch$8022$XcRv&
                                                                                     g$t$9075$XcRv&
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$9071$XcRv&))))
                                                                         (g$syntax-dispatch$8022$XcRv&
                                                                           g$t$9071$XcRv&
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$9069$XcRv&)))))
                                                        g$f$9068$XcRv&)
                                                      g$x$9061$XcRv&
                                                      (case-lambda
                                                        ((g$ls$9085$XcRv&)
                                                         (g$cons*$6021$XcRv&
                                                           (g$scheme-stx$7965$XcRv&
                                                             'vector)
                                                           g$ls$9085$XcRv&))))))
                                                  g$ls/false$9067$XcRv&)
                                                (g$syntax-violation$8128$XcRv&
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$9066$XcRv&))))
                                           (g$syntax-dispatch$8022$XcRv&
                                             g$t$9066$XcRv&
                                             '_))))
                                       g$t$9063$XcRv&))))
                                 (g$syntax-dispatch$8022$XcRv&
                                   g$t$9063$XcRv&
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$9062$XcRv&)))
                         g$x$9061$XcRv&))))
                   (g$vquasi$9011$XcRv&
                     (case-lambda
                       ((g$p$9044$XcRv& g$lev$9045$XcRv&)
                        ((case-lambda
                           ((g$t$9046$XcRv&)
                            ((case-lambda
                               ((g$ls/false$9047$XcRv&)
                                (if g$ls/false$9047$XcRv&
                                  (apply
                                    (case-lambda
                                      ((g$p$9048$XcRv& g$q$9049$XcRv&)
                                       ((case-lambda
                                          ((g$t$9050$XcRv&)
                                           ((case-lambda
                                              ((g$ls/false$9051$XcRv&)
                                               (if g$ls/false$9051$XcRv&
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9052$XcRv&)
                                                      (if (= g$lev$9045$XcRv&
                                                             '0)
                                                        (g$quasicons*$9007$XcRv&
                                                          g$p$9052$XcRv&
                                                          (g$vquasi$9011$XcRv&
                                                            g$q$9049$XcRv&
                                                            g$lev$9045$XcRv&))
                                                        (g$quasicons$9008$XcRv&
                                                          (g$quasicons$9008$XcRv&
                                                            (g$datum$8991$XcRv&
                                                              'unquote)
                                                            (g$quasi$9012$XcRv&
                                                              g$p$9052$XcRv&
                                                              (- g$lev$9045$XcRv&
                                                                 '1)))
                                                          (g$vquasi$9011$XcRv&
                                                            g$q$9049$XcRv&
                                                            g$lev$9045$XcRv&)))))
                                                   g$ls/false$9051$XcRv&)
                                                 ((case-lambda
                                                    ((g$t$9053$XcRv&)
                                                     ((case-lambda
                                                        ((g$ls/false$9054$XcRv&)
                                                         (if g$ls/false$9054$XcRv&
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$9055$XcRv&)
                                                                (if (= g$lev$9045$XcRv&
                                                                       '0)
                                                                  (g$quasiappend$9009$XcRv&
                                                                    g$p$9055$XcRv&
                                                                    (g$vquasi$9011$XcRv&
                                                                      g$q$9049$XcRv&
                                                                      g$lev$9045$XcRv&))
                                                                  (g$quasicons$9008$XcRv&
                                                                    (g$quasicons$9008$XcRv&
                                                                      (g$datum$8991$XcRv&
                                                                        'unquote-splicing)
                                                                      (g$quasi$9012$XcRv&
                                                                        g$p$9055$XcRv&
                                                                        (- g$lev$9045$XcRv&
                                                                           '1)))
                                                                    (g$vquasi$9011$XcRv&
                                                                      g$q$9049$XcRv&
                                                                      g$lev$9045$XcRv&)))))
                                                             g$ls/false$9054$XcRv&)
                                                           ((case-lambda
                                                              ((g$t$9056$XcRv&)
                                                               ((case-lambda
                                                                  ((g$ls/false$9057$XcRv&)
                                                                   (if g$ls/false$9057$XcRv&
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$9058$XcRv&)
                                                                          (g$quasicons$9008$XcRv&
                                                                            (g$quasi$9012$XcRv&
                                                                              g$p$9058$XcRv&
                                                                              g$lev$9045$XcRv&)
                                                                            (g$vquasi$9011$XcRv&
                                                                              g$q$9049$XcRv&
                                                                              g$lev$9045$XcRv&))))
                                                                       g$ls/false$9057$XcRv&)
                                                                     (g$syntax-violation$8128$XcRv&
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$9056$XcRv&))))
                                                                (g$syntax-dispatch$8022$XcRv&
                                                                  g$t$9056$XcRv&
                                                                  'any))))
                                                            g$t$9053$XcRv&))))
                                                      (g$syntax-dispatch$8022$XcRv&
                                                        g$t$9053$XcRv&
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$9050$XcRv&))))
                                            (g$syntax-dispatch$8022$XcRv&
                                              g$t$9050$XcRv&
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$9048$XcRv&)))
                                    g$ls/false$9047$XcRv&)
                                  ((case-lambda
                                     ((g$t$9059$XcRv&)
                                      ((case-lambda
                                         ((g$ls/false$9060$XcRv&)
                                          (if g$ls/false$9060$XcRv&
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7965$XcRv&
                                                     'quote)
                                                   '())))
                                              g$ls/false$9060$XcRv&)
                                            (g$syntax-violation$8128$XcRv&
                                              '#f
                                              '"invalid syntax"
                                              g$t$9059$XcRv&))))
                                       (g$syntax-dispatch$8022$XcRv&
                                         g$t$9059$XcRv&
                                         '()))))
                                   g$t$9046$XcRv&))))
                             (g$syntax-dispatch$8022$XcRv&
                               g$t$9046$XcRv&
                               '(any . any)))))
                         g$p$9044$XcRv&))))
                   (g$quasi$9012$XcRv&
                     (case-lambda
                       ((g$p$9017$XcRv& g$lev$9018$XcRv&)
                        ((case-lambda
                           ((g$t$9019$XcRv&)
                            ((case-lambda
                               ((g$ls/false$9020$XcRv&)
                                (if g$ls/false$9020$XcRv&
                                  (apply
                                    (case-lambda
                                      ((g$p$9021$XcRv&)
                                       (if (= g$lev$9018$XcRv& '0)
                                         g$p$9021$XcRv&
                                         (g$quasicons$9008$XcRv&
                                           (g$datum$8991$XcRv& 'unquote)
                                           (g$quasi$9012$XcRv&
                                             (list g$p$9021$XcRv&)
                                             (- g$lev$9018$XcRv& '1))))))
                                    g$ls/false$9020$XcRv&)
                                  ((case-lambda
                                     ((g$t$9022$XcRv&)
                                      ((case-lambda
                                         ((g$ls/false$9023$XcRv&)
                                          (if g$ls/false$9023$XcRv&
                                            (apply
                                              (case-lambda
                                                ((g$p$9024$XcRv& g$q$9025$XcRv&)
                                                 (if (= g$lev$9018$XcRv& '0)
                                                   (g$quasicons*$9007$XcRv&
                                                     g$p$9024$XcRv&
                                                     (g$quasi$9012$XcRv&
                                                       g$q$9025$XcRv&
                                                       g$lev$9018$XcRv&))
                                                   (g$quasicons$9008$XcRv&
                                                     (g$quasicons$9008$XcRv&
                                                       (g$datum$8991$XcRv&
                                                         'unquote)
                                                       (g$quasi$9012$XcRv&
                                                         g$p$9024$XcRv&
                                                         (- g$lev$9018$XcRv&
                                                            '1)))
                                                     (g$quasi$9012$XcRv&
                                                       g$q$9025$XcRv&
                                                       g$lev$9018$XcRv&)))))
                                              g$ls/false$9023$XcRv&)
                                            ((case-lambda
                                               ((g$t$9026$XcRv&)
                                                ((case-lambda
                                                   ((g$ls/false$9027$XcRv&)
                                                    (if g$ls/false$9027$XcRv&
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$9028$XcRv&
                                                             g$q$9029$XcRv&)
                                                           (if (= g$lev$9018$XcRv&
                                                                  '0)
                                                             (g$quasiappend$9009$XcRv&
                                                               g$p$9028$XcRv&
                                                               (g$quasi$9012$XcRv&
                                                                 g$q$9029$XcRv&
                                                                 g$lev$9018$XcRv&))
                                                             (g$quasicons$9008$XcRv&
                                                               (g$quasicons$9008$XcRv&
                                                                 (g$datum$8991$XcRv&
                                                                   'unquote-splicing)
                                                                 (g$quasi$9012$XcRv&
                                                                   g$p$9028$XcRv&
                                                                   (- g$lev$9018$XcRv&
                                                                      '1)))
                                                               (g$quasi$9012$XcRv&
                                                                 g$q$9029$XcRv&
                                                                 g$lev$9018$XcRv&)))))
                                                        g$ls/false$9027$XcRv&)
                                                      ((case-lambda
                                                         ((g$t$9030$XcRv&)
                                                          ((case-lambda
                                                             ((g$ls/false$9031$XcRv&)
                                                              (if g$ls/false$9031$XcRv&
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$9032$XcRv&)
                                                                     (g$quasicons$9008$XcRv&
                                                                       (g$datum$8991$XcRv&
                                                                         'quasiquote)
                                                                       (g$quasi$9012$XcRv&
                                                                         (list
                                                                           g$p$9032$XcRv&)
                                                                         (+ g$lev$9018$XcRv&
                                                                            '1)))))
                                                                  g$ls/false$9031$XcRv&)
                                                                ((case-lambda
                                                                   ((g$t$9033$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9034$XcRv&)
                                                                        (if g$ls/false$9034$XcRv&
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9035$XcRv&
                                                                                 g$q$9036$XcRv&)
                                                                               (g$quasicons$9008$XcRv&
                                                                                 (g$quasi$9012$XcRv&
                                                                                   g$p$9035$XcRv&
                                                                                   g$lev$9018$XcRv&)
                                                                                 (g$quasi$9012$XcRv&
                                                                                   g$q$9036$XcRv&
                                                                                   g$lev$9018$XcRv&))))
                                                                            g$ls/false$9034$XcRv&)
                                                                          ((case-lambda
                                                                             ((g$t$9037$XcRv&)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9038$XcRv&)
                                                                                  (if (if g$ls/false$9038$XcRv&
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$9039$XcRv&)
                                                                                               (not (g$stx?$7716$XcRv&
                                                                                                      g$x$9039$XcRv&))))
                                                                                            g$ls/false$9038$XcRv&))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$9040$XcRv&)
                                                                                         (g$quasivector$9010$XcRv&
                                                                                           (g$vquasi$9011$XcRv&
                                                                                             g$x$9040$XcRv&
                                                                                             g$lev$9018$XcRv&))))
                                                                                      g$ls/false$9038$XcRv&)
                                                                                    ((case-lambda
                                                                                       ((g$t$9041$XcRv&)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9042$XcRv&)
                                                                                            (if g$ls/false$9042$XcRv&
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9043$XcRv&)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7965$XcRv&
                                                                                                       'quote)
                                                                                                     g$p$9043$XcRv&)))
                                                                                                g$ls/false$9042$XcRv&)
                                                                                              (g$syntax-violation$8128$XcRv&
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9041$XcRv&))))
                                                                                         (g$syntax-dispatch$8022$XcRv&
                                                                                           g$t$9041$XcRv&
                                                                                           'any))))
                                                                                     g$t$9037$XcRv&))))
                                                                               (g$syntax-dispatch$8022$XcRv&
                                                                                 g$t$9037$XcRv&
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9033$XcRv&))))
                                                                     (g$syntax-dispatch$8022$XcRv&
                                                                       g$t$9033$XcRv&
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9030$XcRv&))))
                                                           (g$syntax-dispatch$8022$XcRv&
                                                             g$t$9030$XcRv&
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$9026$XcRv&))))
                                                 (g$syntax-dispatch$8022$XcRv&
                                                   g$t$9026$XcRv&
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9022$XcRv&))))
                                       (g$syntax-dispatch$8022$XcRv&
                                         g$t$9022$XcRv&
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$9019$XcRv&))))
                             (g$syntax-dispatch$8022$XcRv&
                               g$t$9019$XcRv&
                               '(#(scheme-id unquote) any)))))
                         g$p$9017$XcRv&)))))
           (case-lambda
             ((g$x$9013$XcRv&)
              ((case-lambda
                 ((g$t$9014$XcRv&)
                  ((case-lambda
                     ((g$ls/false$9015$XcRv&)
                      (if g$ls/false$9015$XcRv&
                        (apply
                          (case-lambda
                            ((g$e$9016$XcRv&)
                             (g$quasi$9012$XcRv& g$e$9016$XcRv& '0)))
                          g$ls/false$9015$XcRv&)
                        (g$syntax-violation$8128$XcRv&
                          '#f
                          '"invalid syntax"
                          g$t$9014$XcRv&))))
                   (g$syntax-dispatch$8022$XcRv& g$t$9014$XcRv& '(_ any)))))
               g$x$9013$XcRv&))))))))
   (g$quasisyntax-macro$8014$XcRv&
     g$quasisyntax-macro$11464$XcRv&
     ((case-lambda
        (()
         (letrec* ((g$quasi$9123$XcRv&
                     (case-lambda
                       ((g$p$9137$XcRv& g$lev$9138$XcRv&)
                        ((case-lambda
                           ((g$t$9139$XcRv&)
                            ((case-lambda
                               ((g$ls/false$9140$XcRv&)
                                (if g$ls/false$9140$XcRv&
                                  (apply
                                    (case-lambda
                                      ((g$p$9141$XcRv&)
                                       (if (= g$lev$9138$XcRv& '0)
                                         ((case-lambda
                                            ((g$g$9142$XcRv&)
                                             (values
                                               (list g$g$9142$XcRv&)
                                               (list g$p$9141$XcRv&)
                                               g$g$9142$XcRv&)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$9123$XcRv&
                                                g$p$9141$XcRv&
                                                (- g$lev$9138$XcRv& '1))))
                                           (case-lambda
                                             ((g$lhs*$9146$XcRv&
                                                g$rhs*$9147$XcRv&
                                                g$p$9148$XcRv&)
                                              ((case-lambda
                                                 ((g$p$9149$XcRv&
                                                    g$rhs*$9150$XcRv&
                                                    g$lhs*$9151$XcRv&)
                                                  (values
                                                    g$lhs*$9151$XcRv&
                                                    g$rhs*$9150$XcRv&
                                                    (list
                                                      'unsyntax
                                                      g$p$9149$XcRv&))))
                                               g$p$9148$XcRv&
                                               g$rhs*$9147$XcRv&
                                               g$lhs*$9146$XcRv&)))))))
                                    g$ls/false$9140$XcRv&)
                                  ((case-lambda
                                     ((g$t$9152$XcRv&)
                                      ((case-lambda
                                         ((g$ls/false$9153$XcRv&)
                                          (if (if g$ls/false$9153$XcRv&
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$9138$XcRv& '0)))
                                                    g$ls/false$9153$XcRv&))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$8128$XcRv&
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$9137$XcRv&)))
                                              g$ls/false$9153$XcRv&)
                                            ((case-lambda
                                               ((g$t$9154$XcRv&)
                                                ((case-lambda
                                                   ((g$ls/false$9155$XcRv&)
                                                    (if g$ls/false$9155$XcRv&
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$9156$XcRv&
                                                             g$q$9157$XcRv&)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$9123$XcRv&
                                                                  g$q$9157$XcRv&
                                                                  g$lev$9138$XcRv&)))
                                                             (case-lambda
                                                               ((g$lhs*$9161$XcRv&
                                                                  g$rhs*$9162$XcRv&
                                                                  g$q$9163$XcRv&)
                                                                ((case-lambda
                                                                   ((g$q$9164$XcRv&
                                                                      g$rhs*$9165$XcRv&
                                                                      g$lhs*$9166$XcRv&)
                                                                    (if (= g$lev$9138$XcRv&
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g$9167$XcRv&)
                                                                          (values
                                                                            (cons
                                                                              (cons
                                                                                g$g$9167$XcRv&
                                                                                '(...))
                                                                              g$lhs*$9166$XcRv&)
                                                                            (cons
                                                                              g$p$9156$XcRv&
                                                                              g$rhs*$9165$XcRv&)
                                                                            (cons
                                                                              g$g$9167$XcRv&
                                                                              (cons
                                                                                '...
                                                                                g$q$9164$XcRv&)))))
                                                                       (gensym))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$9123$XcRv&
                                                                             g$p$9156$XcRv&
                                                                             (- g$lev$9138$XcRv&
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$9171$XcRv&
                                                                             g$rhs2*$9172$XcRv&
                                                                             g$p$9173$XcRv&)
                                                                           ((case-lambda
                                                                              ((g$p$9174$XcRv&
                                                                                 g$rhs2*$9175$XcRv&
                                                                                 g$lhs2*$9176$XcRv&)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$9176$XcRv&
                                                                                   g$lhs*$9166$XcRv&)
                                                                                 (append
                                                                                   g$rhs2*$9175$XcRv&
                                                                                   g$rhs*$9165$XcRv&)
                                                                                 (cons
                                                                                   (list
                                                                                     'unsyntax-splicing
                                                                                     g$p$9174$XcRv&)
                                                                                   g$q$9164$XcRv&))))
                                                                            g$p$9173$XcRv&
                                                                            g$rhs2*$9172$XcRv&
                                                                            g$lhs2*$9171$XcRv&)))))))
                                                                 g$q$9163$XcRv&
                                                                 g$rhs*$9162$XcRv&
                                                                 g$lhs*$9161$XcRv&))))))
                                                        g$ls/false$9155$XcRv&)
                                                      ((case-lambda
                                                         ((g$t$9177$XcRv&)
                                                          ((case-lambda
                                                             ((g$ls/false$9178$XcRv&)
                                                              (if (if g$ls/false$9178$XcRv&
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (= g$lev$9138$XcRv&
                                                                              '0)))
                                                                        g$ls/false$9178$XcRv&))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    (()
                                                                     (g$syntax-violation$8128$XcRv&
                                                                       '#f
                                                                       '"incorrect use of unsyntax-splicing"
                                                                       g$p$9137$XcRv&)))
                                                                  g$ls/false$9178$XcRv&)
                                                                ((case-lambda
                                                                   ((g$t$9179$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9180$XcRv&)
                                                                        (if g$ls/false$9180$XcRv&
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9181$XcRv&)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$quasi$9123$XcRv&
                                                                                      g$p$9181$XcRv&
                                                                                      (+ g$lev$9138$XcRv&
                                                                                         '1))))
                                                                                 (case-lambda
                                                                                   ((g$lhs*$9185$XcRv&
                                                                                      g$rhs*$9186$XcRv&
                                                                                      g$p$9187$XcRv&)
                                                                                    ((case-lambda
                                                                                       ((g$p$9188$XcRv&
                                                                                          g$rhs*$9189$XcRv&
                                                                                          g$lhs*$9190$XcRv&)
                                                                                        (values
                                                                                          g$lhs*$9190$XcRv&
                                                                                          g$rhs*$9189$XcRv&
                                                                                          (list
                                                                                            'quasisyntax
                                                                                            g$p$9188$XcRv&))))
                                                                                     g$p$9187$XcRv&
                                                                                     g$rhs*$9186$XcRv&
                                                                                     g$lhs*$9185$XcRv&))))))
                                                                            g$ls/false$9180$XcRv&)
                                                                          ((case-lambda
                                                                             ((g$t$9191$XcRv&)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9192$XcRv&)
                                                                                  (if g$ls/false$9192$XcRv&
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9193$XcRv&
                                                                                           g$q$9194$XcRv&)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$9123$XcRv&
                                                                                                g$p$9193$XcRv&
                                                                                                g$lev$9138$XcRv&)))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9201$XcRv&
                                                                                                g$rhs*$9202$XcRv&
                                                                                                g$p$9203$XcRv&)
                                                                                              (call-with-values
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$quasi$9123$XcRv&
                                                                                                     g$q$9194$XcRv&
                                                                                                     g$lev$9138$XcRv&)))
                                                                                                (case-lambda
                                                                                                  ((g$lhs2*$9204$XcRv&
                                                                                                     g$rhs2*$9205$XcRv&
                                                                                                     g$q$9206$XcRv&)
                                                                                                   ((case-lambda
                                                                                                      ((g$q$9207$XcRv&
                                                                                                         g$rhs2*$9208$XcRv&
                                                                                                         g$lhs2*$9209$XcRv&
                                                                                                         g$p$9210$XcRv&
                                                                                                         g$rhs*$9211$XcRv&
                                                                                                         g$lhs*$9212$XcRv&)
                                                                                                       (values
                                                                                                         (append
                                                                                                           g$lhs2*$9209$XcRv&
                                                                                                           g$lhs*$9212$XcRv&)
                                                                                                         (append
                                                                                                           g$rhs2*$9208$XcRv&
                                                                                                           g$rhs*$9211$XcRv&)
                                                                                                         (cons
                                                                                                           g$p$9210$XcRv&
                                                                                                           g$q$9207$XcRv&))))
                                                                                                    g$q$9206$XcRv&
                                                                                                    g$rhs2*$9205$XcRv&
                                                                                                    g$lhs2*$9204$XcRv&
                                                                                                    g$p$9203$XcRv&
                                                                                                    g$rhs*$9202$XcRv&
                                                                                                    g$lhs*$9201$XcRv&)))))))))
                                                                                      g$ls/false$9192$XcRv&)
                                                                                    ((case-lambda
                                                                                       ((g$t$9213$XcRv&)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9214$XcRv&)
                                                                                            (if (if g$ls/false$9214$XcRv&
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$x$9215$XcRv&)
                                                                                                         (not (g$stx?$7716$XcRv&
                                                                                                                g$p$9137$XcRv&))))
                                                                                                      g$ls/false$9214$XcRv&))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$x$9216$XcRv&)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        ((letrec ((g$f$9220$XcRv&
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9221$XcRv&)
                                                                                                                       (if (null?
                                                                                                                             g$x$9221$XcRv&)
                                                                                                                         (values
                                                                                                                           '()
                                                                                                                           '()
                                                                                                                           '())
                                                                                                                         (call-with-values
                                                                                                                           (case-lambda
                                                                                                                             (()
                                                                                                                              (g$quasi$9123$XcRv&
                                                                                                                                (car g$x$9221$XcRv&)
                                                                                                                                g$lev$9138$XcRv&)))
                                                                                                                           (case-lambda
                                                                                                                             ((g$lhs*$9225$XcRv&
                                                                                                                                g$rhs*$9226$XcRv&
                                                                                                                                g$a$9227$XcRv&)
                                                                                                                              ((case-lambda
                                                                                                                                 ((g$a$9228$XcRv&
                                                                                                                                    g$rhs*$9229$XcRv&
                                                                                                                                    g$lhs*$9230$XcRv&)
                                                                                                                                  (call-with-values
                                                                                                                                    (case-lambda
                                                                                                                                      (()
                                                                                                                                       (g$f$9220$XcRv&
                                                                                                                                         (cdr g$x$9221$XcRv&))))
                                                                                                                                    (case-lambda
                                                                                                                                      ((g$lhs2*$9234$XcRv&
                                                                                                                                         g$rhs2*$9235$XcRv&
                                                                                                                                         g$d$9236$XcRv&)
                                                                                                                                       ((case-lambda
                                                                                                                                          ((g$d$9237$XcRv&
                                                                                                                                             g$rhs2*$9238$XcRv&
                                                                                                                                             g$lhs2*$9239$XcRv&)
                                                                                                                                           (values
                                                                                                                                             (append
                                                                                                                                               g$lhs*$9230$XcRv&
                                                                                                                                               g$lhs2*$9239$XcRv&)
                                                                                                                                             (append
                                                                                                                                               g$rhs*$9229$XcRv&
                                                                                                                                               g$rhs2*$9238$XcRv&)
                                                                                                                                             (cons
                                                                                                                                               g$a$9228$XcRv&
                                                                                                                                               g$d$9237$XcRv&))))
                                                                                                                                        g$d$9236$XcRv&
                                                                                                                                        g$rhs2*$9235$XcRv&
                                                                                                                                        g$lhs2*$9234$XcRv&))))))
                                                                                                                               g$a$9227$XcRv&
                                                                                                                               g$rhs*$9226$XcRv&
                                                                                                                               g$lhs*$9225$XcRv&)))))))))
                                                                                                           g$f$9220$XcRv&)
                                                                                                         g$x$9216$XcRv&)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$9240$XcRv&
                                                                                                          g$rhs*$9241$XcRv&
                                                                                                          g$x*$9242$XcRv&)
                                                                                                        ((case-lambda
                                                                                                           ((g$x*$9243$XcRv&
                                                                                                              g$rhs*$9244$XcRv&
                                                                                                              g$lhs*$9245$XcRv&)
                                                                                                            (values
                                                                                                              g$lhs*$9245$XcRv&
                                                                                                              g$rhs*$9244$XcRv&
                                                                                                              (list->vector
                                                                                                                g$x*$9243$XcRv&))))
                                                                                                         g$x*$9242$XcRv&
                                                                                                         g$rhs*$9241$XcRv&
                                                                                                         g$lhs*$9240$XcRv&))))))
                                                                                                g$ls/false$9214$XcRv&)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9246$XcRv&)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9247$XcRv&)
                                                                                                      (if g$ls/false$9247$XcRv&
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (values
                                                                                                               '()
                                                                                                               '()
                                                                                                               g$p$9137$XcRv&)))
                                                                                                          g$ls/false$9247$XcRv&)
                                                                                                        (g$syntax-violation$8128$XcRv&
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$9246$XcRv&))))
                                                                                                   (g$syntax-dispatch$8022$XcRv&
                                                                                                     g$t$9246$XcRv&
                                                                                                     '_))))
                                                                                               g$t$9213$XcRv&))))
                                                                                         (g$syntax-dispatch$8022$XcRv&
                                                                                           g$t$9213$XcRv&
                                                                                           '#(vector
                                                                                              each-any)))))
                                                                                     g$t$9191$XcRv&))))
                                                                               (g$syntax-dispatch$8022$XcRv&
                                                                                 g$t$9191$XcRv&
                                                                                 '(any .
                                                                                       any)))))
                                                                           g$t$9179$XcRv&))))
                                                                     (g$syntax-dispatch$8022$XcRv&
                                                                       g$t$9179$XcRv&
                                                                       '(#(scheme-id
                                                                           quasisyntax)
                                                                         any)))))
                                                                 g$t$9177$XcRv&))))
                                                           (g$syntax-dispatch$8022$XcRv&
                                                             g$t$9177$XcRv&
                                                             '#(scheme-id
                                                                unsyntax-splicing)))))
                                                       g$t$9154$XcRv&))))
                                                 (g$syntax-dispatch$8022$XcRv&
                                                   g$t$9154$XcRv&
                                                   '((#(scheme-id
                                                        unsyntax-splicing)
                                                      any)
                                                     .
                                                     any)))))
                                             g$t$9152$XcRv&))))
                                       (g$syntax-dispatch$8022$XcRv&
                                         g$t$9152$XcRv&
                                         '#(scheme-id unsyntax)))))
                                   g$t$9139$XcRv&))))
                             (g$syntax-dispatch$8022$XcRv&
                               g$t$9139$XcRv&
                               '(#(scheme-id unsyntax) any)))))
                         g$p$9137$XcRv&)))))
           (case-lambda
             ((g$x$9124$XcRv&)
              ((case-lambda
                 ((g$t$9125$XcRv&)
                  ((case-lambda
                     ((g$ls/false$9126$XcRv&)
                      (if g$ls/false$9126$XcRv&
                        (apply
                          (case-lambda
                            ((g$e$9127$XcRv&)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$9123$XcRv& g$e$9127$XcRv& '0)))
                               (case-lambda
                                 ((g$lhs*$9131$XcRv&
                                    g$rhs*$9132$XcRv&
                                    g$v$9133$XcRv&)
                                  ((case-lambda
                                     ((g$v$9134$XcRv&
                                        g$rhs*$9135$XcRv&
                                        g$lhs*$9136$XcRv&)
                                      (g$bless$7985$XcRv&
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$9135$XcRv&)
                                          '()
                                          (list
                                            g$lhs*$9136$XcRv&
                                            (list 'syntax g$v$9134$XcRv&))))))
                                   g$v$9133$XcRv&
                                   g$rhs*$9132$XcRv&
                                   g$lhs*$9131$XcRv&))))))
                          g$ls/false$9126$XcRv&)
                        (g$syntax-violation$8128$XcRv&
                          '#f
                          '"invalid syntax"
                          g$t$9125$XcRv&))))
                   (g$syntax-dispatch$8022$XcRv& g$t$9125$XcRv& '(_ any)))))
               g$x$9124$XcRv&))))))))
   (g$define-struct-macro$8015$XcRv&
     g$define-struct-macro$11465$XcRv&
     (case-lambda
       ((g$stx$9248$XcRv&)
        (g$syntax-violation$8128$XcRv&
          '#f
          '"define-struct not supported"
          g$stx$9248$XcRv&))))
   (g$define-record-type-macro$8016$XcRv&
     g$define-record-type-macro$11466$XcRv&
     (case-lambda
       ((g$x$9249$XcRv&)
        (letrec* ((g$id$9250$XcRv&
                    (case-lambda
                      ((g$ctxt$9502$XcRv& . g$str*$9503$XcRv&)
                       (g$datum->syntax$8130$XcRv&
                         g$ctxt$9502$XcRv&
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9504$XcRv&)
                                     (if (symbol? g$x$9504$XcRv&)
                                       (symbol->string g$x$9504$XcRv&)
                                       (if (string? g$x$9504$XcRv&)
                                         g$x$9504$XcRv&
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9503$XcRv&)))))))
                  (g$get-record-name$9251$XcRv&
                    (case-lambda
                      ((g$spec$9493$XcRv&)
                       ((case-lambda
                          ((g$t$9494$XcRv&)
                           ((case-lambda
                              ((g$ls/false$9495$XcRv&)
                               (if g$ls/false$9495$XcRv&
                                 (apply
                                   (case-lambda
                                     ((g$foo$9496$XcRv&
                                        g$make-foo$9497$XcRv&
                                        g$foo?$9498$XcRv&)
                                      g$foo$9496$XcRv&))
                                   g$ls/false$9495$XcRv&)
                                 ((case-lambda
                                    ((g$t$9499$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$9500$XcRv&)
                                         (if g$ls/false$9500$XcRv&
                                           (apply
                                             (case-lambda
                                               ((g$foo$9501$XcRv&)
                                                g$foo$9501$XcRv&))
                                             g$ls/false$9500$XcRv&)
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"invalid syntax"
                                             g$t$9499$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$9499$XcRv&
                                        'any))))
                                  g$t$9494$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv&
                              g$t$9494$XcRv&
                              '(any any any)))))
                        g$spec$9493$XcRv&))))
                  (g$get-record-constructor-name$9252$XcRv&
                    (case-lambda
                      ((g$spec$9483$XcRv&)
                       ((case-lambda
                          ((g$t$9484$XcRv&)
                           ((case-lambda
                              ((g$ls/false$9485$XcRv&)
                               (if g$ls/false$9485$XcRv&
                                 (apply
                                   (case-lambda
                                     ((g$foo$9486$XcRv&
                                        g$make-foo$9487$XcRv&
                                        g$foo?$9488$XcRv&)
                                      g$make-foo$9487$XcRv&))
                                   g$ls/false$9485$XcRv&)
                                 ((case-lambda
                                    ((g$t$9489$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$9490$XcRv&)
                                         (if (if g$ls/false$9490$XcRv&
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9491$XcRv&)
                                                      (g$id?$7744$XcRv&
                                                        g$foo$9491$XcRv&)))
                                                   g$ls/false$9490$XcRv&))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9492$XcRv&)
                                                (g$id$9250$XcRv&
                                                  g$foo$9492$XcRv&
                                                  '"make-"
                                                  (g$stx->datum$7755$XcRv&
                                                    g$foo$9492$XcRv&))))
                                             g$ls/false$9490$XcRv&)
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"invalid syntax"
                                             g$t$9489$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$9489$XcRv&
                                        'any))))
                                  g$t$9484$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv&
                              g$t$9484$XcRv&
                              '(any any any)))))
                        g$spec$9483$XcRv&))))
                  (g$get-record-predicate-name$9253$XcRv&
                    (case-lambda
                      ((g$spec$9473$XcRv&)
                       ((case-lambda
                          ((g$t$9474$XcRv&)
                           ((case-lambda
                              ((g$ls/false$9475$XcRv&)
                               (if g$ls/false$9475$XcRv&
                                 (apply
                                   (case-lambda
                                     ((g$foo$9476$XcRv&
                                        g$make-foo$9477$XcRv&
                                        g$foo?$9478$XcRv&)
                                      g$foo?$9478$XcRv&))
                                   g$ls/false$9475$XcRv&)
                                 ((case-lambda
                                    ((g$t$9479$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$9480$XcRv&)
                                         (if (if g$ls/false$9480$XcRv&
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9481$XcRv&)
                                                      (g$id?$7744$XcRv&
                                                        g$foo$9481$XcRv&)))
                                                   g$ls/false$9480$XcRv&))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9482$XcRv&)
                                                (g$id$9250$XcRv&
                                                  g$foo$9482$XcRv&
                                                  (g$stx->datum$7755$XcRv&
                                                    g$foo$9482$XcRv&)
                                                  '"?")))
                                             g$ls/false$9480$XcRv&)
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"invalid syntax"
                                             g$t$9479$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$9479$XcRv&
                                        'any))))
                                  g$t$9474$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv&
                              g$t$9474$XcRv&
                              '(any any any)))))
                        g$spec$9473$XcRv&))))
                  (g$get-clause$9254$XcRv&
                    (case-lambda
                      ((g$id$9464$XcRv& g$ls$9465$XcRv&)
                       ((case-lambda
                          ((g$t$9466$XcRv&)
                           ((case-lambda
                              ((g$ls/false$9467$XcRv&)
                               (if g$ls/false$9467$XcRv&
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9467$XcRv&)
                                 ((case-lambda
                                    ((g$t$9468$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$9469$XcRv&)
                                         (if g$ls/false$9469$XcRv&
                                           (apply
                                             (case-lambda
                                               ((g$x$9470$XcRv&
                                                  g$rest$9471$XcRv&
                                                  g$ls$9472$XcRv&)
                                                (if (g$free-id=?$7748$XcRv&
                                                      (g$bless$7985$XcRv&
                                                        g$id$9464$XcRv&)
                                                      g$x$9470$XcRv&)
                                                  (cons
                                                    g$x$9470$XcRv&
                                                    g$rest$9471$XcRv&)
                                                  (g$get-clause$9254$XcRv&
                                                    g$id$9464$XcRv&
                                                    g$ls$9472$XcRv&))))
                                             g$ls/false$9469$XcRv&)
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"invalid syntax"
                                             g$t$9468$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$9468$XcRv&
                                        '((any . any) . any)))))
                                  g$t$9466$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv& g$t$9466$XcRv& '()))))
                        g$ls$9465$XcRv&))))
                  (g$foo-rtd-code$9255$XcRv&
                    (case-lambda
                      ((g$name$9423$XcRv&
                         g$clause*$9424$XcRv&
                         g$parent-rtd-code$9425$XcRv&)
                       (letrec* ((g$convert-field-spec*$9426$XcRv&
                                   (case-lambda
                                     ((g$ls$9451$XcRv&)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$9452$XcRv&)
                                                ((case-lambda
                                                   ((g$t$9453$XcRv&)
                                                    ((case-lambda
                                                       ((g$ls/false$9454$XcRv&)
                                                        (if g$ls/false$9454$XcRv&
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$9455$XcRv&
                                                                 g$rest$9456$XcRv&)
                                                               (list
                                                                 'mutable
                                                                 g$name$9455$XcRv&)))
                                                            g$ls/false$9454$XcRv&)
                                                          ((case-lambda
                                                             ((g$t$9457$XcRv&)
                                                              ((case-lambda
                                                                 ((g$ls/false$9458$XcRv&)
                                                                  (if g$ls/false$9458$XcRv&
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$9459$XcRv&
                                                                           g$rest$9460$XcRv&)
                                                                         (list
                                                                           'immutable
                                                                           g$name$9459$XcRv&)))
                                                                      g$ls/false$9458$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$t$9461$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9462$XcRv&)
                                                                            (if g$ls/false$9462$XcRv&
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$9463$XcRv&)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$9463$XcRv&)))
                                                                                g$ls/false$9462$XcRv&)
                                                                              (g$syntax-violation$8128$XcRv&
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9461$XcRv&))))
                                                                         (g$syntax-dispatch$8022$XcRv&
                                                                           g$t$9461$XcRv&
                                                                           'any))))
                                                                     g$t$9457$XcRv&))))
                                                               (g$syntax-dispatch$8022$XcRv&
                                                                 g$t$9457$XcRv&
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$9453$XcRv&))))
                                                     (g$syntax-dispatch$8022$XcRv&
                                                       g$t$9453$XcRv&
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$9452$XcRv&)))
                                             g$ls$9451$XcRv&))))))
                         ((case-lambda
                            ((g$uid-code$9427$XcRv&
                               g$sealed?$9428$XcRv&
                               g$opaque?$9429$XcRv&
                               g$fields$9430$XcRv&)
                             (g$bless$7985$XcRv&
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9423$XcRv&)
                                 g$parent-rtd-code$9425$XcRv&
                                 g$uid-code$9427$XcRv&
                                 g$sealed?$9428$XcRv&
                                 g$opaque?$9429$XcRv&
                                 g$fields$9430$XcRv&))))
                          ((case-lambda
                             ((g$t$9431$XcRv&)
                              ((case-lambda
                                 ((g$ls/false$9432$XcRv&)
                                  (if g$ls/false$9432$XcRv&
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9432$XcRv&)
                                    ((case-lambda
                                       ((g$t$9433$XcRv&)
                                        ((case-lambda
                                           ((g$ls/false$9434$XcRv&)
                                            (if g$ls/false$9434$XcRv&
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9435$XcRv&)
                                                   (list
                                                     'quote
                                                     g$uid$9435$XcRv&)))
                                                g$ls/false$9434$XcRv&)
                                              ((case-lambda
                                                 ((g$t$9436$XcRv&)
                                                  ((case-lambda
                                                     ((g$ls/false$9437$XcRv&)
                                                      (if g$ls/false$9437$XcRv&
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9437$XcRv&)
                                                        (g$syntax-violation$8128$XcRv&
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9436$XcRv&))))
                                                   (g$syntax-dispatch$8022$XcRv&
                                                     g$t$9436$XcRv&
                                                     '_))))
                                               g$t$9433$XcRv&))))
                                         (g$syntax-dispatch$8022$XcRv&
                                           g$t$9433$XcRv&
                                           '(_ any)))))
                                     g$t$9431$XcRv&))))
                               (g$syntax-dispatch$8022$XcRv&
                                 g$t$9431$XcRv&
                                 '(_)))))
                           (g$get-clause$9254$XcRv&
                             'nongenerative
                             g$clause*$9424$XcRv&))
                          ((case-lambda
                             ((g$t$9438$XcRv&)
                              ((case-lambda
                                 ((g$ls/false$9439$XcRv&)
                                  (if g$ls/false$9439$XcRv&
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9439$XcRv&)
                                    ((case-lambda
                                       ((g$t$9440$XcRv&)
                                        ((case-lambda
                                           ((g$ls/false$9441$XcRv&)
                                            (if g$ls/false$9441$XcRv&
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9441$XcRv&)
                                              (g$syntax-violation$8128$XcRv&
                                                '#f
                                                '"invalid syntax"
                                                g$t$9440$XcRv&))))
                                         (g$syntax-dispatch$8022$XcRv&
                                           g$t$9440$XcRv&
                                           '_))))
                                     g$t$9438$XcRv&))))
                               (g$syntax-dispatch$8022$XcRv&
                                 g$t$9438$XcRv&
                                 '(_ #(atom #t))))))
                           (g$get-clause$9254$XcRv&
                             'sealed
                             g$clause*$9424$XcRv&))
                          ((case-lambda
                             ((g$t$9442$XcRv&)
                              ((case-lambda
                                 ((g$ls/false$9443$XcRv&)
                                  (if g$ls/false$9443$XcRv&
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9443$XcRv&)
                                    ((case-lambda
                                       ((g$t$9444$XcRv&)
                                        ((case-lambda
                                           ((g$ls/false$9445$XcRv&)
                                            (if g$ls/false$9445$XcRv&
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9445$XcRv&)
                                              (g$syntax-violation$8128$XcRv&
                                                '#f
                                                '"invalid syntax"
                                                g$t$9444$XcRv&))))
                                         (g$syntax-dispatch$8022$XcRv&
                                           g$t$9444$XcRv&
                                           '_))))
                                     g$t$9442$XcRv&))))
                               (g$syntax-dispatch$8022$XcRv&
                                 g$t$9442$XcRv&
                                 '(_ #(atom #t))))))
                           (g$get-clause$9254$XcRv&
                             'opaque
                             g$clause*$9424$XcRv&))
                          ((case-lambda
                             ((g$t$9446$XcRv&)
                              ((case-lambda
                                 ((g$ls/false$9447$XcRv&)
                                  (if g$ls/false$9447$XcRv&
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9448$XcRv&)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9426$XcRv&
                                             g$field-spec*$9448$XcRv&))))
                                      g$ls/false$9447$XcRv&)
                                    ((case-lambda
                                       ((g$t$9449$XcRv&)
                                        ((case-lambda
                                           ((g$ls/false$9450$XcRv&)
                                            (if g$ls/false$9450$XcRv&
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9450$XcRv&)
                                              (g$syntax-violation$8128$XcRv&
                                                '#f
                                                '"invalid syntax"
                                                g$t$9449$XcRv&))))
                                         (g$syntax-dispatch$8022$XcRv&
                                           g$t$9449$XcRv&
                                           '_))))
                                     g$t$9446$XcRv&))))
                               (g$syntax-dispatch$8022$XcRv&
                                 g$t$9446$XcRv&
                                 '(_ . each-any)))))
                           (g$get-clause$9254$XcRv&
                             'fields
                             g$clause*$9424$XcRv&)))))))
                  (g$parent-rtd-code$9256$XcRv&
                    (case-lambda
                      ((g$clause*$9411$XcRv&)
                       ((case-lambda
                          ((g$t$9412$XcRv&)
                           ((case-lambda
                              ((g$ls/false$9413$XcRv&)
                               (if g$ls/false$9413$XcRv&
                                 (apply
                                   (case-lambda
                                     ((g$name$9414$XcRv&)
                                      (list
                                        'record-type-descriptor
                                        g$name$9414$XcRv&)))
                                   g$ls/false$9413$XcRv&)
                                 ((case-lambda
                                    ((g$t$9415$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$9416$XcRv&)
                                         (if g$ls/false$9416$XcRv&
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9417$XcRv&)
                                                    ((case-lambda
                                                       ((g$ls/false$9418$XcRv&)
                                                        (if g$ls/false$9418$XcRv&
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9419$XcRv&
                                                                 g$rcd$9420$XcRv&)
                                                               g$rtd$9419$XcRv&))
                                                            g$ls/false$9418$XcRv&)
                                                          ((case-lambda
                                                             ((g$t$9421$XcRv&)
                                                              ((case-lambda
                                                                 ((g$ls/false$9422$XcRv&)
                                                                  (if g$ls/false$9422$XcRv&
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9422$XcRv&)
                                                                    (g$syntax-violation$8128$XcRv&
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9421$XcRv&))))
                                                               (g$syntax-dispatch$8022$XcRv&
                                                                 g$t$9421$XcRv&
                                                                 '#(atom #f)))))
                                                           g$t$9417$XcRv&))))
                                                     (g$syntax-dispatch$8022$XcRv&
                                                       g$t$9417$XcRv&
                                                       '(_ any any)))))
                                                 (g$get-clause$9254$XcRv&
                                                   'parent-rtd
                                                   g$clause*$9411$XcRv&))))
                                             g$ls/false$9416$XcRv&)
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"invalid syntax"
                                             g$t$9415$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$9415$XcRv&
                                        '#(atom #f)))))
                                  g$t$9412$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv&
                              g$t$9412$XcRv&
                              '(_ any)))))
                        (g$get-clause$9254$XcRv&
                          'parent
                          g$clause*$9411$XcRv&)))))
                  (g$parent-rcd-code$9257$XcRv&
                    (case-lambda
                      ((g$clause*$9399$XcRv&)
                       ((case-lambda
                          ((g$t$9400$XcRv&)
                           ((case-lambda
                              ((g$ls/false$9401$XcRv&)
                               (if g$ls/false$9401$XcRv&
                                 (apply
                                   (case-lambda
                                     ((g$name$9402$XcRv&)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9402$XcRv&)))
                                   g$ls/false$9401$XcRv&)
                                 ((case-lambda
                                    ((g$t$9403$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$9404$XcRv&)
                                         (if g$ls/false$9404$XcRv&
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9405$XcRv&)
                                                    ((case-lambda
                                                       ((g$ls/false$9406$XcRv&)
                                                        (if g$ls/false$9406$XcRv&
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9407$XcRv&
                                                                 g$rcd$9408$XcRv&)
                                                               g$rcd$9408$XcRv&))
                                                            g$ls/false$9406$XcRv&)
                                                          ((case-lambda
                                                             ((g$t$9409$XcRv&)
                                                              ((case-lambda
                                                                 ((g$ls/false$9410$XcRv&)
                                                                  (if g$ls/false$9410$XcRv&
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9410$XcRv&)
                                                                    (g$syntax-violation$8128$XcRv&
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9409$XcRv&))))
                                                               (g$syntax-dispatch$8022$XcRv&
                                                                 g$t$9409$XcRv&
                                                                 '#(atom #f)))))
                                                           g$t$9405$XcRv&))))
                                                     (g$syntax-dispatch$8022$XcRv&
                                                       g$t$9405$XcRv&
                                                       '(_ any any)))))
                                                 (g$get-clause$9254$XcRv&
                                                   'parent-rtd
                                                   g$clause*$9399$XcRv&))))
                                             g$ls/false$9404$XcRv&)
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"invalid syntax"
                                             g$t$9403$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$9403$XcRv&
                                        '#(atom #f)))))
                                  g$t$9400$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv&
                              g$t$9400$XcRv&
                              '(_ any)))))
                        (g$get-clause$9254$XcRv&
                          'parent
                          g$clause*$9399$XcRv&)))))
                  (g$foo-rcd-code$9258$XcRv&
                    (case-lambda
                      ((g$clause*$9395$XcRv&
                         g$foo-rtd$9396$XcRv&
                         g$protocol$9397$XcRv&
                         g$parent-rcd-code$9398$XcRv&)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9396$XcRv&
                         g$parent-rcd-code$9398$XcRv&
                         g$protocol$9397$XcRv&))))
                  (g$get-protocol-code$9259$XcRv&
                    (case-lambda
                      ((g$clause*$9389$XcRv&)
                       ((case-lambda
                          ((g$t$9390$XcRv&)
                           ((case-lambda
                              ((g$ls/false$9391$XcRv&)
                               (if g$ls/false$9391$XcRv&
                                 (apply
                                   (case-lambda
                                     ((g$expr$9392$XcRv&) g$expr$9392$XcRv&))
                                   g$ls/false$9391$XcRv&)
                                 ((case-lambda
                                    ((g$t$9393$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$9394$XcRv&)
                                         (if g$ls/false$9394$XcRv&
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9394$XcRv&)
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"invalid syntax"
                                             g$t$9393$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$9393$XcRv&
                                        '_))))
                                  g$t$9390$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv&
                              g$t$9390$XcRv&
                              '(_ any)))))
                        (g$get-clause$9254$XcRv&
                          'protocol
                          g$clause*$9389$XcRv&)))))
                  (g$get-fields$9260$XcRv&
                    (case-lambda
                      ((g$clause*$9380$XcRv&)
                       ((case-lambda
                          ((g$t$9381$XcRv&)
                           ((case-lambda
                              ((g$ls/false$9382$XcRv&)
                               (if g$ls/false$9382$XcRv&
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9382$XcRv&)
                                 ((case-lambda
                                    ((g$t$9383$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$9384$XcRv&)
                                         (if g$ls/false$9384$XcRv&
                                           (apply
                                             (case-lambda
                                               ((g$f*$9385$XcRv&)
                                                g$f*$9385$XcRv&))
                                             g$ls/false$9384$XcRv&)
                                           ((case-lambda
                                              ((g$t$9386$XcRv&)
                                               ((case-lambda
                                                  ((g$ls/false$9387$XcRv&)
                                                   (if g$ls/false$9387$XcRv&
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9388$XcRv&)
                                                          (g$get-fields$9260$XcRv&
                                                            g$rest$9388$XcRv&)))
                                                       g$ls/false$9387$XcRv&)
                                                     (g$syntax-violation$8128$XcRv&
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9386$XcRv&))))
                                                (g$syntax-dispatch$8022$XcRv&
                                                  g$t$9386$XcRv&
                                                  '(_ . any)))))
                                            g$t$9383$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$9383$XcRv&
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9381$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv& g$t$9381$XcRv& '()))))
                        g$clause*$9380$XcRv&))))
                  (g$get-mutator-indices$9261$XcRv&
                    (case-lambda
                      ((g$fields$9368$XcRv&)
                       ((letrec ((g$f$9369$XcRv&
                                   (case-lambda
                                     ((g$fields$9370$XcRv& g$i$9371$XcRv&)
                                      ((case-lambda
                                         ((g$t$9372$XcRv&)
                                          ((case-lambda
                                             ((g$ls/false$9373$XcRv&)
                                              (if g$ls/false$9373$XcRv&
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$9373$XcRv&)
                                                ((case-lambda
                                                   ((g$t$9374$XcRv&)
                                                    ((case-lambda
                                                       ((g$ls/false$9375$XcRv&)
                                                        (if g$ls/false$9375$XcRv&
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9376$XcRv&)
                                                               (cons
                                                                 g$i$9371$XcRv&
                                                                 (g$f$9369$XcRv&
                                                                   g$rest$9376$XcRv&
                                                                   (+ g$i$9371$XcRv&
                                                                      '1)))))
                                                            g$ls/false$9375$XcRv&)
                                                          ((case-lambda
                                                             ((g$t$9377$XcRv&)
                                                              ((case-lambda
                                                                 ((g$ls/false$9378$XcRv&)
                                                                  (if g$ls/false$9378$XcRv&
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9379$XcRv&)
                                                                         (g$f$9369$XcRv&
                                                                           g$rest$9379$XcRv&
                                                                           (+ g$i$9371$XcRv&
                                                                              '1))))
                                                                      g$ls/false$9378$XcRv&)
                                                                    (g$syntax-violation$8128$XcRv&
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9377$XcRv&))))
                                                               (g$syntax-dispatch$8022$XcRv&
                                                                 g$t$9377$XcRv&
                                                                 '(_ . any)))))
                                                           g$t$9374$XcRv&))))
                                                     (g$syntax-dispatch$8022$XcRv&
                                                       g$t$9374$XcRv&
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$9372$XcRv&))))
                                           (g$syntax-dispatch$8022$XcRv&
                                             g$t$9372$XcRv&
                                             '()))))
                                       g$fields$9370$XcRv&)))))
                          g$f$9369$XcRv&)
                        g$fields$9368$XcRv&
                        '0))))
                  (g$get-mutators$9262$XcRv&
                    (case-lambda
                      ((g$foo$9347$XcRv& g$fields$9348$XcRv&)
                       (letrec* ((g$gen-name$9349$XcRv&
                                   (case-lambda
                                     ((g$x$9367$XcRv&)
                                      (g$datum->syntax$8130$XcRv&
                                        g$foo$9347$XcRv&
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8131$XcRv&
                                                g$foo$9347$XcRv&))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8131$XcRv&
                                                g$x$9367$XcRv&))
                                            '"-set!")))))))
                         ((letrec ((g$f$9350$XcRv&
                                     (case-lambda
                                       ((g$fields$9351$XcRv&)
                                        ((case-lambda
                                           ((g$t$9352$XcRv&)
                                            ((case-lambda
                                               ((g$ls/false$9353$XcRv&)
                                                (if g$ls/false$9353$XcRv&
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$9353$XcRv&)
                                                  ((case-lambda
                                                     ((g$t$9354$XcRv&)
                                                      ((case-lambda
                                                         ((g$ls/false$9355$XcRv&)
                                                          (if g$ls/false$9355$XcRv&
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9356$XcRv&
                                                                   g$accessor$9357$XcRv&
                                                                   g$mutator$9358$XcRv&
                                                                   g$rest$9359$XcRv&)
                                                                 (cons
                                                                   g$mutator$9358$XcRv&
                                                                   (g$f$9350$XcRv&
                                                                     g$rest$9359$XcRv&))))
                                                              g$ls/false$9355$XcRv&)
                                                            ((case-lambda
                                                               ((g$t$9360$XcRv&)
                                                                ((case-lambda
                                                                   ((g$ls/false$9361$XcRv&)
                                                                    (if g$ls/false$9361$XcRv&
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9362$XcRv&
                                                                             g$rest$9363$XcRv&)
                                                                           (cons
                                                                             (g$gen-name$9349$XcRv&
                                                                               g$name$9362$XcRv&)
                                                                             (g$f$9350$XcRv&
                                                                               g$rest$9363$XcRv&))))
                                                                        g$ls/false$9361$XcRv&)
                                                                      ((case-lambda
                                                                         ((g$t$9364$XcRv&)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9365$XcRv&)
                                                                              (if g$ls/false$9365$XcRv&
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$9366$XcRv&)
                                                                                     (g$f$9350$XcRv&
                                                                                       g$rest$9366$XcRv&)))
                                                                                  g$ls/false$9365$XcRv&)
                                                                                (g$syntax-violation$8128$XcRv&
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9364$XcRv&))))
                                                                           (g$syntax-dispatch$8022$XcRv&
                                                                             g$t$9364$XcRv&
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$9360$XcRv&))))
                                                                 (g$syntax-dispatch$8022$XcRv&
                                                                   g$t$9360$XcRv&
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$9354$XcRv&))))
                                                       (g$syntax-dispatch$8022$XcRv&
                                                         g$t$9354$XcRv&
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$9352$XcRv&))))
                                             (g$syntax-dispatch$8022$XcRv&
                                               g$t$9352$XcRv&
                                               '()))))
                                         g$fields$9351$XcRv&)))))
                            g$f$9350$XcRv&)
                          g$fields$9348$XcRv&)))))
                  (g$get-accessors$9263$XcRv&
                    (case-lambda
                      ((g$foo$9313$XcRv& g$fields$9314$XcRv&)
                       (letrec* ((g$gen-name$9315$XcRv&
                                   (case-lambda
                                     ((g$x$9346$XcRv&)
                                      (g$datum->syntax$8130$XcRv&
                                        g$foo$9313$XcRv&
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8131$XcRv&
                                                g$foo$9313$XcRv&))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8131$XcRv&
                                                g$x$9346$XcRv&)))))))))
                         (map (case-lambda
                                ((g$field$9316$XcRv&)
                                 ((case-lambda
                                    ((g$t$9317$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$9318$XcRv&)
                                         (if (if g$ls/false$9318$XcRv&
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$9319$XcRv&
                                                        g$accessor$9320$XcRv&
                                                        g$mutator$9321$XcRv&)
                                                      (g$id?$7744$XcRv&
                                                        g$accessor$9320$XcRv&)))
                                                   g$ls/false$9318$XcRv&))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$9322$XcRv&
                                                  g$accessor$9323$XcRv&
                                                  g$mutator$9324$XcRv&)
                                                g$accessor$9323$XcRv&))
                                             g$ls/false$9318$XcRv&)
                                           ((case-lambda
                                              ((g$t$9325$XcRv&)
                                               ((case-lambda
                                                  ((g$ls/false$9326$XcRv&)
                                                   (if (if g$ls/false$9326$XcRv&
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$9327$XcRv&
                                                                  g$accessor$9328$XcRv&)
                                                                (g$id?$7744$XcRv&
                                                                  g$accessor$9328$XcRv&)))
                                                             g$ls/false$9326$XcRv&))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$9329$XcRv&
                                                            g$accessor$9330$XcRv&)
                                                          g$accessor$9330$XcRv&))
                                                       g$ls/false$9326$XcRv&)
                                                     ((case-lambda
                                                        ((g$t$9331$XcRv&)
                                                         ((case-lambda
                                                            ((g$ls/false$9332$XcRv&)
                                                             (if (if g$ls/false$9332$XcRv&
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$9333$XcRv&)
                                                                          (g$id?$7744$XcRv&
                                                                            g$name$9333$XcRv&)))
                                                                       g$ls/false$9332$XcRv&))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$9334$XcRv&)
                                                                    (g$gen-name$9315$XcRv&
                                                                      g$name$9334$XcRv&)))
                                                                 g$ls/false$9332$XcRv&)
                                                               ((case-lambda
                                                                  ((g$t$9335$XcRv&)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9336$XcRv&)
                                                                       (if (if g$ls/false$9336$XcRv&
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$9337$XcRv&)
                                                                                    (g$id?$7744$XcRv&
                                                                                      g$name$9337$XcRv&)))
                                                                                 g$ls/false$9336$XcRv&))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$9338$XcRv&)
                                                                              (g$gen-name$9315$XcRv&
                                                                                g$name$9338$XcRv&)))
                                                                           g$ls/false$9336$XcRv&)
                                                                         ((case-lambda
                                                                            ((g$t$9339$XcRv&)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9340$XcRv&)
                                                                                 (if (if g$ls/false$9340$XcRv&
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$9341$XcRv&)
                                                                                              (g$id?$7744$XcRv&
                                                                                                g$name$9341$XcRv&)))
                                                                                           g$ls/false$9340$XcRv&))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$9342$XcRv&)
                                                                                        (g$gen-name$9315$XcRv&
                                                                                          g$name$9342$XcRv&)))
                                                                                     g$ls/false$9340$XcRv&)
                                                                                   ((case-lambda
                                                                                      ((g$t$9343$XcRv&)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9344$XcRv&)
                                                                                           (if g$ls/false$9344$XcRv&
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$9345$XcRv&)
                                                                                                  (g$syntax-violation$8128$XcRv&
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$9316$XcRv&)))
                                                                                               g$ls/false$9344$XcRv&)
                                                                                             (g$syntax-violation$8128$XcRv&
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9343$XcRv&))))
                                                                                        (g$syntax-dispatch$8022$XcRv&
                                                                                          g$t$9343$XcRv&
                                                                                          'any))))
                                                                                    g$t$9339$XcRv&))))
                                                                              (g$syntax-dispatch$8022$XcRv&
                                                                                g$t$9339$XcRv&
                                                                                'any))))
                                                                          g$t$9335$XcRv&))))
                                                                    (g$syntax-dispatch$8022$XcRv&
                                                                      g$t$9335$XcRv&
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$9331$XcRv&))))
                                                          (g$syntax-dispatch$8022$XcRv&
                                                            g$t$9331$XcRv&
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$9325$XcRv&))))
                                                (g$syntax-dispatch$8022$XcRv&
                                                  g$t$9325$XcRv&
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$9317$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$9317$XcRv&
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$9316$XcRv&)))
                              g$fields$9314$XcRv&)))))
                  (g$enumerate$9264$XcRv&
                    (case-lambda
                      ((g$ls$9309$XcRv&)
                       ((letrec ((g$f$9310$XcRv&
                                   (case-lambda
                                     ((g$ls$9311$XcRv& g$i$9312$XcRv&)
                                      (if (null? g$ls$9311$XcRv&)
                                        '()
                                        (cons
                                          g$i$9312$XcRv&
                                          (g$f$9310$XcRv&
                                            (cdr g$ls$9311$XcRv&)
                                            (+ g$i$9312$XcRv& '1))))))))
                          g$f$9310$XcRv&)
                        g$ls$9309$XcRv&
                        '0))))
                  (g$do-define-record$9265$XcRv&
                    (case-lambda
                      ((g$namespec$9289$XcRv& g$clause*$9290$XcRv&)
                       ((case-lambda
                          ((g$foo$9291$XcRv&)
                           ((case-lambda
                              ((g$foo-rtd$9292$XcRv&)
                               ((case-lambda
                                  ((g$foo-rcd$9293$XcRv&)
                                   ((case-lambda
                                      ((g$protocol$9294$XcRv&)
                                       ((case-lambda
                                          ((g$make-foo$9295$XcRv&)
                                           ((case-lambda
                                              ((g$fields$9296$XcRv&)
                                               ((case-lambda
                                                  ((g$idx*$9297$XcRv&)
                                                   ((case-lambda
                                                      ((g$foo-x*$9298$XcRv&)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$9299$XcRv&)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$9300$XcRv&)
                                                               ((case-lambda
                                                                  ((g$foo?$9301$XcRv&)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$9302$XcRv&)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$9303$XcRv&)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$9304$XcRv&)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7985$XcRv&
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$9292$XcRv&
                                                                                           g$foo-rtd-code$9302$XcRv&)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$9294$XcRv&
                                                                                             g$protocol-code$9304$XcRv&)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$9293$XcRv&
                                                                                               g$foo-rcd-code$9303$XcRv&)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$9291$XcRv&
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$9292$XcRv&)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$9293$XcRv&)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$9301$XcRv&
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$9292$XcRv&))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$9295$XcRv&
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$9293$XcRv&))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$9305$XcRv&
                                                                                                               g$idx$9306$XcRv&)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$9305$XcRv&
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$9292$XcRv&
                                                                                                                 g$idx$9306$XcRv&))))
                                                                                                          g$foo-x*$9298$XcRv&
                                                                                                          g$idx*$9297$XcRv&)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$9307$XcRv&
                                                                                                               g$idx$9308$XcRv&)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$9307$XcRv&
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$9292$XcRv&
                                                                                                                 g$idx$9308$XcRv&))))
                                                                                                          g$set-foo-x!*$9299$XcRv&
                                                                                                          g$set-foo-idx*$9300$XcRv&)))))))))))))))
                                                                            (g$get-protocol-code$9259$XcRv&
                                                                              g$clause*$9290$XcRv&))))
                                                                        (g$foo-rcd-code$9258$XcRv&
                                                                          g$clause*$9290$XcRv&
                                                                          g$foo-rtd$9292$XcRv&
                                                                          g$protocol$9294$XcRv&
                                                                          (g$parent-rcd-code$9257$XcRv&
                                                                            g$clause*$9290$XcRv&)))))
                                                                    (g$foo-rtd-code$9255$XcRv&
                                                                      g$foo$9291$XcRv&
                                                                      g$clause*$9290$XcRv&
                                                                      (g$parent-rtd-code$9256$XcRv&
                                                                        g$clause*$9290$XcRv&)))))
                                                                (g$get-record-predicate-name$9253$XcRv&
                                                                  g$namespec$9289$XcRv&))))
                                                            (g$get-mutator-indices$9261$XcRv&
                                                              g$fields$9296$XcRv&))))
                                                        (g$get-mutators$9262$XcRv&
                                                          g$foo$9291$XcRv&
                                                          g$fields$9296$XcRv&))))
                                                    (g$get-accessors$9263$XcRv&
                                                      g$foo$9291$XcRv&
                                                      g$fields$9296$XcRv&))))
                                                (g$enumerate$9264$XcRv&
                                                  g$fields$9296$XcRv&))))
                                            (g$get-fields$9260$XcRv&
                                              g$clause*$9290$XcRv&))))
                                        (g$get-record-constructor-name$9252$XcRv&
                                          g$namespec$9289$XcRv&))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$9251$XcRv& g$namespec$9289$XcRv&)))))
                  (g$verify-clauses$9266$XcRv&
                    (case-lambda
                      ((g$x$9271$XcRv& g$cls*$9272$XcRv&)
                       (letrec* ((g$valid-kwds$9273$XcRv&
                                   (map g$bless$7985$XcRv&
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$9274$XcRv&
                                   (case-lambda
                                     ((g$x$9286$XcRv& g$ls$9287$XcRv&)
                                      (if (pair? g$ls$9287$XcRv&)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$9288$XcRv&)
                                              (if g$t$9288$XcRv&
                                                g$t$9288$XcRv&
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$9274$XcRv&
                                                    g$x$9286$XcRv&
                                                    (cdr g$ls$9287$XcRv&))))))
                                           (g$free-id=?$7748$XcRv&
                                             g$x$9286$XcRv&
                                             (car g$ls$9287$XcRv&))))
                                        '#f)))))
                         ((letrec ((g$f$9275$XcRv&
                                     (case-lambda
                                       ((g$cls*$9276$XcRv& g$seen*$9277$XcRv&)
                                        (if (null? g$cls*$9276$XcRv&)
                                          (void)
                                          ((case-lambda
                                             ((g$t$9278$XcRv&)
                                              ((case-lambda
                                                 ((g$ls/false$9279$XcRv&)
                                                  (if g$ls/false$9279$XcRv&
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$9280$XcRv&
                                                           g$rest$9281$XcRv&)
                                                         (if ((case-lambda
                                                                ((g$t$9282$XcRv&)
                                                                 (if g$t$9282$XcRv&
                                                                   g$t$9282$XcRv&
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$9274$XcRv&
                                                                            g$kwd$9280$XcRv&
                                                                            g$valid-kwds$9273$XcRv&))))))
                                                              (not (g$id?$7744$XcRv&
                                                                     g$kwd$9280$XcRv&)))
                                                           (g$syntax-violation$8128$XcRv&
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$9280$XcRv&)
                                                           (if (g$bound-id-member?$7751$XcRv&
                                                                 g$kwd$9280$XcRv&
                                                                 g$seen*$9277$XcRv&)
                                                             (g$syntax-violation$8128$XcRv&
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$9271$XcRv&
                                                               g$kwd$9280$XcRv&)
                                                             (g$f$9275$XcRv&
                                                               (cdr g$cls*$9276$XcRv&)
                                                               (cons
                                                                 g$kwd$9280$XcRv&
                                                                 g$seen*$9277$XcRv&))))))
                                                      g$ls/false$9279$XcRv&)
                                                    ((case-lambda
                                                       ((g$t$9283$XcRv&)
                                                        ((case-lambda
                                                           ((g$ls/false$9284$XcRv&)
                                                            (if g$ls/false$9284$XcRv&
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$9285$XcRv&)
                                                                   (g$syntax-violation$8128$XcRv&
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$9285$XcRv&)))
                                                                g$ls/false$9284$XcRv&)
                                                              (g$syntax-violation$8128$XcRv&
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9283$XcRv&))))
                                                         (g$syntax-dispatch$8022$XcRv&
                                                           g$t$9283$XcRv&
                                                           'any))))
                                                     g$t$9278$XcRv&))))
                                               (g$syntax-dispatch$8022$XcRv&
                                                 g$t$9278$XcRv&
                                                 '(any . any)))))
                                           (car g$cls*$9276$XcRv&)))))))
                            g$f$9275$XcRv&)
                          g$cls*$9272$XcRv&
                          '()))))))
          ((case-lambda
             ((g$t$9267$XcRv&)
              ((case-lambda
                 ((g$ls/false$9268$XcRv&)
                  (if g$ls/false$9268$XcRv&
                    (apply
                      (case-lambda
                        ((g$namespec$9269$XcRv& g$clause*$9270$XcRv&)
                         (begin
                           (g$verify-clauses$9266$XcRv&
                             g$x$9249$XcRv&
                             g$clause*$9270$XcRv&)
                           (g$do-define-record$9265$XcRv&
                             g$namespec$9269$XcRv&
                             g$clause*$9270$XcRv&))))
                      g$ls/false$9268$XcRv&)
                    (g$syntax-violation$8128$XcRv&
                      '#f
                      '"invalid syntax"
                      g$t$9267$XcRv&))))
               (g$syntax-dispatch$8022$XcRv&
                 g$t$9267$XcRv&
                 '(_ any . each-any)))))
           g$x$9249$XcRv&)))))
   (g$define-condition-type-macro$8017$XcRv&
     g$define-condition-type-macro$11467$XcRv&
     (case-lambda
       ((g$x$9505$XcRv&)
        (letrec* ((g$mkname$9506$XcRv&
                    (case-lambda
                      ((g$name$9529$XcRv& g$suffix$9530$XcRv&)
                       (g$datum->syntax$8130$XcRv&
                         g$name$9529$XcRv&
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$8131$XcRv& g$name$9529$XcRv&))
                             g$suffix$9530$XcRv&)))))))
          ((case-lambda
             ((g$t$9507$XcRv&)
              ((case-lambda
                 ((g$ls/false$9508$XcRv&)
                  (if (if g$ls/false$9508$XcRv&
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9509$XcRv&
                                 g$name$9510$XcRv&
                                 g$super$9511$XcRv&
                                 g$constructor$9512$XcRv&
                                 g$predicate$9513$XcRv&
                                 g$field*$9514$XcRv&
                                 g$accessor*$9515$XcRv&)
                               (if (g$id?$7744$XcRv& g$name$9510$XcRv&)
                                 (if (g$id?$7744$XcRv& g$super$9511$XcRv&)
                                   (if (g$id?$7744$XcRv&
                                         g$constructor$9512$XcRv&)
                                     (if (g$id?$7744$XcRv&
                                           g$predicate$9513$XcRv&)
                                       (if (g$for-all$6019$XcRv&
                                             g$id?$7744$XcRv&
                                             g$field*$9514$XcRv&)
                                         (begin
                                           '#f
                                           (g$for-all$6019$XcRv&
                                             g$id?$7744$XcRv&
                                             g$accessor*$9515$XcRv&))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9508$XcRv&))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9516$XcRv&
                           g$name$9517$XcRv&
                           g$super$9518$XcRv&
                           g$constructor$9519$XcRv&
                           g$predicate$9520$XcRv&
                           g$field*$9521$XcRv&
                           g$accessor*$9522$XcRv&)
                         ((case-lambda
                            ((g$aux-accessor*$9523$XcRv&)
                             (g$bless$7985$XcRv&
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9517$XcRv&
                                         g$constructor$9519$XcRv&
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9518$XcRv&)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9524$XcRv&
                                                       g$aux$9525$XcRv&)
                                                     (list
                                                       'immutable
                                                       g$field$9524$XcRv&
                                                       g$aux$9525$XcRv&)))
                                                  g$field*$9521$XcRv&
                                                  g$aux-accessor*$9523$XcRv&))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9520$XcRv&
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9517$XcRv&)))
                                     (map (case-lambda
                                            ((g$accessor$9526$XcRv&
                                               g$aux$9527$XcRv&)
                                             (list
                                               'define
                                               g$accessor$9526$XcRv&
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9517$XcRv&)
                                                 g$aux$9527$XcRv&))))
                                          g$accessor*$9522$XcRv&
                                          g$aux-accessor*$9523$XcRv&)))))))
                          (map (case-lambda ((g$x$9528$XcRv&) (gensym)))
                               g$accessor*$9522$XcRv&))))
                      g$ls/false$9508$XcRv&)
                    (g$syntax-violation$8128$XcRv&
                      '#f
                      '"invalid syntax"
                      g$t$9507$XcRv&))))
               (g$syntax-dispatch$8022$XcRv&
                 g$t$9507$XcRv&
                 '(any any any any any . #(each (any any)))))))
           g$x$9505$XcRv&)))))
   (g$incorrect-usage-macro$8018$XcRv&
     g$incorrect-usage-macro$11468$XcRv&
     (case-lambda
       ((g$e$9531$XcRv&)
        (g$syntax-violation$8128$XcRv&
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9531$XcRv&))))
   (g$parameterize-transformer$8019$XcRv&
     g$parameterize-transformer$11469$XcRv&
     (case-lambda
       ((g$e$9532$XcRv& g$r$9533$XcRv& g$mr$9534$XcRv&)
        ((case-lambda
           ((g$t$9535$XcRv&)
            ((case-lambda
               ((g$ls/false$9536$XcRv&)
                (if g$ls/false$9536$XcRv&
                  (apply
                    (case-lambda
                      ((g$b$9537$XcRv& g$b*$9538$XcRv&)
                       (g$chi-internal$8051$XcRv&
                         (cons g$b$9537$XcRv& g$b*$9538$XcRv&)
                         g$r$9533$XcRv&
                         g$mr$9534$XcRv&)))
                    g$ls/false$9536$XcRv&)
                  ((case-lambda
                     ((g$t$9539$XcRv&)
                      ((case-lambda
                         ((g$ls/false$9540$XcRv&)
                          (if g$ls/false$9540$XcRv&
                            (apply
                              (case-lambda
                                ((g$olhs*$9541$XcRv&
                                   g$orhs*$9542$XcRv&
                                   g$b$9543$XcRv&
                                   g$b*$9544$XcRv&)
                                 ((case-lambda
                                    ((g$lhs*$9545$XcRv&
                                       g$rhs*$9546$XcRv&
                                       g$t*$9547$XcRv&
                                       g$swap$9548$XcRv&)
                                     (g$build-let$7677$XcRv&
                                       '#f
                                       (append
                                         g$lhs*$9545$XcRv&
                                         g$rhs*$9546$XcRv&)
                                       (append
                                         (g$chi-expr*$8038$XcRv&
                                           g$olhs*$9541$XcRv&
                                           g$r$9533$XcRv&
                                           g$mr$9534$XcRv&)
                                         (g$chi-expr*$8038$XcRv&
                                           g$orhs*$9542$XcRv&
                                           g$r$9533$XcRv&
                                           g$mr$9534$XcRv&))
                                       (g$build-let$7677$XcRv&
                                         '#f
                                         (list g$swap$9548$XcRv&)
                                         (list
                                           (g$build-lambda$7675$XcRv&
                                             '#f
                                             '()
                                             (g$build-sequence$7678$XcRv&
                                               '#f
                                               (map (case-lambda
                                                      ((g$t$9549$XcRv&
                                                         g$lhs$9550$XcRv&
                                                         g$rhs$9551$XcRv&)
                                                       (g$build-let$7677$XcRv&
                                                         '#f
                                                         (list g$t$9549$XcRv&)
                                                         (list
                                                           (list
                                                             g$lhs$9550$XcRv&))
                                                         (g$build-sequence$7678$XcRv&
                                                           '#f
                                                           (list
                                                             (list
                                                               g$lhs$9550$XcRv&
                                                               g$rhs$9551$XcRv&)
                                                             (list
                                                               'set!
                                                               g$rhs$9551$XcRv&
                                                               g$t$9549$XcRv&))))))
                                                    g$t*$9547$XcRv&
                                                    g$lhs*$9545$XcRv&
                                                    g$rhs*$9546$XcRv&))))
                                         (list
                                           '(primitive dynamic-wind)
                                           g$swap$9548$XcRv&
                                           (g$build-lambda$7675$XcRv&
                                             '#f
                                             '()
                                             (g$chi-internal$8051$XcRv&
                                               (cons
                                                 g$b$9543$XcRv&
                                                 g$b*$9544$XcRv&)
                                               g$r$9533$XcRv&
                                               g$mr$9534$XcRv&))
                                           g$swap$9548$XcRv&)))))
                                  (map (case-lambda
                                         ((g$x$9552$XcRv&)
                                          (g$gen-lexical$7688$XcRv& 'lhs)))
                                       g$olhs*$9541$XcRv&)
                                  (map (case-lambda
                                         ((g$x$9553$XcRv&)
                                          (g$gen-lexical$7688$XcRv& 'rhs)))
                                       g$olhs*$9541$XcRv&)
                                  (map (case-lambda
                                         ((g$x$9554$XcRv&)
                                          (g$gen-lexical$7688$XcRv& 't)))
                                       g$olhs*$9541$XcRv&)
                                  (g$gen-lexical$7688$XcRv& 'swap))))
                              g$ls/false$9540$XcRv&)
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"invalid syntax"
                              g$t$9539$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$9539$XcRv&
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9535$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$9535$XcRv&
               '(_ () any . each-any)))))
         g$e$9532$XcRv&))))
   (g$foreign-call-transformer$8020$XcRv&
     g$foreign-call-transformer$11470$XcRv&
     (case-lambda
       ((g$e$9555$XcRv& g$r$9556$XcRv& g$mr$9557$XcRv&)
        ((case-lambda
           ((g$t$9558$XcRv&)
            ((case-lambda
               ((g$ls/false$9559$XcRv&)
                (if g$ls/false$9559$XcRv&
                  (apply
                    (case-lambda
                      ((g$name$9560$XcRv& g$arg*$9561$XcRv&)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$8040$XcRv&
                             g$name$9560$XcRv&
                             g$r$9556$XcRv&
                             g$mr$9557$XcRv&)
                           (g$chi-expr*$8038$XcRv&
                             g$arg*$9561$XcRv&
                             g$r$9556$XcRv&
                             g$mr$9557$XcRv&)))))
                    g$ls/false$9559$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$9558$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$9558$XcRv&
               '(_ any . each-any)))))
         g$e$9555$XcRv&))))
   (g$convert-pattern$8021$XcRv&
     g$convert-pattern$11471$XcRv&
     (case-lambda
       ((g$pattern$9562$XcRv& g$keys$9563$XcRv&)
        (letrec* ((g$cvt*$9564$XcRv&
                    (case-lambda
                      ((g$p*$9644$XcRv& g$n$9645$XcRv& g$ids$9646$XcRv&)
                       (if (null? g$p*$9644$XcRv&)
                         (values '() g$ids$9646$XcRv&)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9564$XcRv&
                                (cdr g$p*$9644$XcRv&)
                                g$n$9645$XcRv&
                                g$ids$9646$XcRv&)))
                           (case-lambda
                             ((g$y$9649$XcRv& g$ids$9650$XcRv&)
                              ((case-lambda
                                 ((g$ids$9651$XcRv& g$y$9652$XcRv&)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9565$XcRv&
                                         (car g$p*$9644$XcRv&)
                                         g$n$9645$XcRv&
                                         g$ids$9651$XcRv&)))
                                    (case-lambda
                                      ((g$x$9655$XcRv& g$ids$9656$XcRv&)
                                       ((case-lambda
                                          ((g$ids$9657$XcRv& g$x$9658$XcRv&)
                                           (values
                                             (cons
                                               g$x$9658$XcRv&
                                               g$y$9652$XcRv&)
                                             g$ids$9657$XcRv&)))
                                        g$ids$9656$XcRv&
                                        g$x$9655$XcRv&))))))
                               g$ids$9650$XcRv&
                               g$y$9649$XcRv&))))))))
                  (g$cvt$9565$XcRv&
                    (case-lambda
                      ((g$p$9566$XcRv& g$n$9567$XcRv& g$ids$9568$XcRv&)
                       ((case-lambda
                          ((g$t$9569$XcRv&)
                           ((case-lambda
                              ((g$ls/false$9570$XcRv&)
                               (if (if g$ls/false$9570$XcRv&
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9571$XcRv&)
                                            (g$id?$7744$XcRv& g$id$9571$XcRv&)))
                                         g$ls/false$9570$XcRv&))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9572$XcRv&)
                                      (if (g$bound-id-member?$7751$XcRv&
                                            g$p$9566$XcRv&
                                            g$keys$9563$XcRv&)
                                        (values
                                          (vector 'free-id g$p$9566$XcRv&)
                                          g$ids$9568$XcRv&)
                                        (if (g$free-id=?$7748$XcRv&
                                              g$p$9566$XcRv&
                                              (g$scheme-stx$7965$XcRv& '_))
                                          (values '_ g$ids$9568$XcRv&)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9566$XcRv&
                                                g$n$9567$XcRv&)
                                              g$ids$9568$XcRv&))))))
                                   g$ls/false$9570$XcRv&)
                                 ((case-lambda
                                    ((g$t$9573$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$9574$XcRv&)
                                         (if (if g$ls/false$9574$XcRv&
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9575$XcRv&
                                                        g$dots$9576$XcRv&)
                                                      (g$ellipsis?$8023$XcRv&
                                                        g$dots$9576$XcRv&)))
                                                   g$ls/false$9574$XcRv&))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9577$XcRv&
                                                  g$dots$9578$XcRv&)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9565$XcRv&
                                                       g$p$9577$XcRv&
                                                       (+ g$n$9567$XcRv& '1)
                                                       g$ids$9568$XcRv&)))
                                                  (case-lambda
                                                    ((g$p$9581$XcRv&
                                                       g$ids$9582$XcRv&)
                                                     ((case-lambda
                                                        ((g$ids$9583$XcRv&
                                                           g$p$9584$XcRv&)
                                                         (values
                                                           (if (eq? g$p$9584$XcRv&
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9584$XcRv&))
                                                           g$ids$9583$XcRv&)))
                                                      g$ids$9582$XcRv&
                                                      g$p$9581$XcRv&))))))
                                             g$ls/false$9574$XcRv&)
                                           ((case-lambda
                                              ((g$t$9585$XcRv&)
                                               ((case-lambda
                                                  ((g$ls/false$9586$XcRv&)
                                                   (if (if g$ls/false$9586$XcRv&
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9587$XcRv&
                                                                  g$dots$9588$XcRv&
                                                                  g$ys$9589$XcRv&
                                                                  g$z$9590$XcRv&)
                                                                (g$ellipsis?$8023$XcRv&
                                                                  g$dots$9588$XcRv&)))
                                                             g$ls/false$9586$XcRv&))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9591$XcRv&
                                                            g$dots$9592$XcRv&
                                                            g$ys$9593$XcRv&
                                                            g$z$9594$XcRv&)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9565$XcRv&
                                                                 g$z$9594$XcRv&
                                                                 g$n$9567$XcRv&
                                                                 g$ids$9568$XcRv&)))
                                                            (case-lambda
                                                              ((g$z$9597$XcRv&
                                                                 g$ids$9598$XcRv&)
                                                               ((case-lambda
                                                                  ((g$ids$9599$XcRv&
                                                                     g$z$9600$XcRv&)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9564$XcRv&
                                                                          g$ys$9593$XcRv&
                                                                          g$n$9567$XcRv&
                                                                          g$ids$9599$XcRv&)))
                                                                     (case-lambda
                                                                       ((g$ys$9603$XcRv&
                                                                          g$ids$9604$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$ids$9605$XcRv&
                                                                              g$ys$9606$XcRv&)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9565$XcRv&
                                                                                   g$x$9591$XcRv&
                                                                                   (+ g$n$9567$XcRv&
                                                                                      '1)
                                                                                   g$ids$9605$XcRv&)))
                                                                              (case-lambda
                                                                                ((g$x$9609$XcRv&
                                                                                   g$ids$9610$XcRv&)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9611$XcRv&
                                                                                       g$x$9612$XcRv&)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9612$XcRv&
                                                                                         (reverse
                                                                                           g$ys$9606$XcRv&)
                                                                                         g$z$9600$XcRv&)
                                                                                       g$ids$9611$XcRv&)))
                                                                                  g$ids$9610$XcRv&
                                                                                  g$x$9609$XcRv&))))))
                                                                         g$ids$9604$XcRv&
                                                                         g$ys$9603$XcRv&))))))
                                                                g$ids$9598$XcRv&
                                                                g$z$9597$XcRv&))))))
                                                       g$ls/false$9586$XcRv&)
                                                     ((case-lambda
                                                        ((g$t$9613$XcRv&)
                                                         ((case-lambda
                                                            ((g$ls/false$9614$XcRv&)
                                                             (if g$ls/false$9614$XcRv&
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9615$XcRv&
                                                                      g$y$9616$XcRv&)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9565$XcRv&
                                                                           g$y$9616$XcRv&
                                                                           g$n$9567$XcRv&
                                                                           g$ids$9568$XcRv&)))
                                                                      (case-lambda
                                                                        ((g$y$9619$XcRv&
                                                                           g$ids$9620$XcRv&)
                                                                         ((case-lambda
                                                                            ((g$ids$9621$XcRv&
                                                                               g$y$9622$XcRv&)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9565$XcRv&
                                                                                    g$x$9615$XcRv&
                                                                                    g$n$9567$XcRv&
                                                                                    g$ids$9621$XcRv&)))
                                                                               (case-lambda
                                                                                 ((g$x$9625$XcRv&
                                                                                    g$ids$9626$XcRv&)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9627$XcRv&
                                                                                        g$x$9628$XcRv&)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9628$XcRv&
                                                                                          g$y$9622$XcRv&)
                                                                                        g$ids$9627$XcRv&)))
                                                                                   g$ids$9626$XcRv&
                                                                                   g$x$9625$XcRv&))))))
                                                                          g$ids$9620$XcRv&
                                                                          g$y$9619$XcRv&))))))
                                                                 g$ls/false$9614$XcRv&)
                                                               ((case-lambda
                                                                  ((g$t$9629$XcRv&)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9630$XcRv&)
                                                                       (if g$ls/false$9630$XcRv&
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9568$XcRv&)))
                                                                           g$ls/false$9630$XcRv&)
                                                                         ((case-lambda
                                                                            ((g$t$9631$XcRv&)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9632$XcRv&)
                                                                                 (if (if g$ls/false$9632$XcRv&
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9633$XcRv&)
                                                                                              (not (g$stx?$7716$XcRv&
                                                                                                     g$p$9633$XcRv&))))
                                                                                           g$ls/false$9632$XcRv&))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9634$XcRv&)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9565$XcRv&
                                                                                               g$p$9634$XcRv&
                                                                                               g$n$9567$XcRv&
                                                                                               g$ids$9568$XcRv&)))
                                                                                          (case-lambda
                                                                                            ((g$p$9637$XcRv&
                                                                                               g$ids$9638$XcRv&)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9639$XcRv&
                                                                                                   g$p$9640$XcRv&)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9640$XcRv&)
                                                                                                   g$ids$9639$XcRv&)))
                                                                                              g$ids$9638$XcRv&
                                                                                              g$p$9637$XcRv&))))))
                                                                                     g$ls/false$9632$XcRv&)
                                                                                   ((case-lambda
                                                                                      ((g$t$9641$XcRv&)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9642$XcRv&)
                                                                                           (if g$ls/false$9642$XcRv&
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9643$XcRv&)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7755$XcRv&
                                                                                                        g$datum$9643$XcRv&))
                                                                                                    g$ids$9568$XcRv&)))
                                                                                               g$ls/false$9642$XcRv&)
                                                                                             (g$syntax-violation$8128$XcRv&
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9641$XcRv&))))
                                                                                        (g$syntax-dispatch$8022$XcRv&
                                                                                          g$t$9641$XcRv&
                                                                                          'any))))
                                                                                    g$t$9631$XcRv&))))
                                                                              (g$syntax-dispatch$8022$XcRv&
                                                                                g$t$9631$XcRv&
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9629$XcRv&))))
                                                                    (g$syntax-dispatch$8022$XcRv&
                                                                      g$t$9629$XcRv&
                                                                      '()))))
                                                                g$t$9613$XcRv&))))
                                                          (g$syntax-dispatch$8022$XcRv&
                                                            g$t$9613$XcRv&
                                                            '(any . any)))))
                                                      g$t$9585$XcRv&))))
                                                (g$syntax-dispatch$8022$XcRv&
                                                  g$t$9585$XcRv&
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9573$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$9573$XcRv&
                                        '(any any)))))
                                  g$t$9569$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv&
                              g$t$9569$XcRv&
                              'any))))
                        g$p$9566$XcRv&)))))
          (g$cvt$9565$XcRv& g$pattern$9562$XcRv& '0 '())))))
   (g$syntax-dispatch$8022$XcRv&
     g$syntax-dispatch$11472$XcRv&
     (case-lambda
       ((g$e$9659$XcRv& g$p$9660$XcRv&)
        (letrec* ((g$stx^$9661$XcRv&
                    (case-lambda
                      ((g$e$9769$XcRv&
                         g$m*$9770$XcRv&
                         g$s*$9771$XcRv&
                         g$ae*$9772$XcRv&)
                       (if (if (null? g$m*$9770$XcRv&)
                             (if (null? g$s*$9771$XcRv&)
                               (begin '#f (null? g$ae*$9772$XcRv&))
                               '#f)
                             '#f)
                         g$e$9769$XcRv&
                         (g$mkstx$7732$XcRv&
                           g$e$9769$XcRv&
                           g$m*$9770$XcRv&
                           g$s*$9771$XcRv&
                           g$ae*$9772$XcRv&)))))
                  (g$match-each$9662$XcRv&
                    (case-lambda
                      ((g$e$9753$XcRv&
                         g$p$9754$XcRv&
                         g$m*$9755$XcRv&
                         g$s*$9756$XcRv&
                         g$ae*$9757$XcRv&)
                       (if (pair? g$e$9753$XcRv&)
                         ((case-lambda
                            ((g$first$9758$XcRv&)
                             (if g$first$9758$XcRv&
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9759$XcRv&)
                                     (if g$rest$9759$XcRv&
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9758$XcRv&
                                           g$rest$9759$XcRv&))
                                       '#f)))
                                  (g$match-each$9662$XcRv&
                                    (cdr g$e$9753$XcRv&)
                                    g$p$9754$XcRv&
                                    g$m*$9755$XcRv&
                                    g$s*$9756$XcRv&
                                    g$ae*$9757$XcRv&)))
                               '#f)))
                          (g$match$9668$XcRv&
                            (car g$e$9753$XcRv&)
                            g$p$9754$XcRv&
                            g$m*$9755$XcRv&
                            g$s*$9756$XcRv&
                            g$ae*$9757$XcRv&
                            '()))
                         (if (null? g$e$9753$XcRv&)
                           '()
                           (if (g$stx?$7716$XcRv& g$e$9753$XcRv&)
                             (if (not (g$top-marked?$7687$XcRv&
                                        g$m*$9755$XcRv&))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7731$XcRv&
                                        g$m*$9755$XcRv&
                                        g$s*$9756$XcRv&
                                        g$ae*$9757$XcRv&
                                        g$e$9753$XcRv&)))
                                   (case-lambda
                                     ((g$m*$9763$XcRv&
                                        g$s*$9764$XcRv&
                                        g$ae*$9765$XcRv&)
                                      ((case-lambda
                                         ((g$ae*$9766$XcRv&
                                            g$s*$9767$XcRv&
                                            g$m*$9768$XcRv&)
                                          (g$match-each$9662$XcRv&
                                            (g$stx-expr$7718$XcRv&
                                              g$e$9753$XcRv&)
                                            g$p$9754$XcRv&
                                            g$m*$9768$XcRv&
                                            g$s*$9767$XcRv&
                                            g$ae*$9766$XcRv&)))
                                       g$ae*$9765$XcRv&
                                       g$s*$9764$XcRv&
                                       g$m*$9763$XcRv&)))))
                               '#f)
                             (if (annotation? g$e$9753$XcRv&)
                               (g$match-each$9662$XcRv&
                                 (annotation-expression g$e$9753$XcRv&)
                                 g$p$9754$XcRv&
                                 g$m*$9755$XcRv&
                                 g$s*$9756$XcRv&
                                 g$ae*$9757$XcRv&)
                               '#f)))))))
                  (g$match-each+$9663$XcRv&
                    (case-lambda
                      ((g$e$9721$XcRv&
                         g$x-pat$9722$XcRv&
                         g$y-pat$9723$XcRv&
                         g$z-pat$9724$XcRv&
                         g$m*$9725$XcRv&
                         g$s*$9726$XcRv&
                         g$ae*$9727$XcRv&
                         g$r$9728$XcRv&)
                       ((letrec ((g$f$9729$XcRv&
                                   (case-lambda
                                     ((g$e$9730$XcRv&
                                        g$m*$9731$XcRv&
                                        g$s*$9732$XcRv&
                                        g$ae*$9733$XcRv&)
                                      (if (pair? g$e$9730$XcRv&)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9729$XcRv&
                                               (cdr g$e$9730$XcRv&)
                                               g$m*$9731$XcRv&
                                               g$s*$9732$XcRv&
                                               g$ae*$9733$XcRv&)))
                                          (case-lambda
                                            ((g$xr*$9737$XcRv&
                                               g$y-pat$9738$XcRv&
                                               g$r$9739$XcRv&)
                                             ((case-lambda
                                                ((g$r$9740$XcRv&
                                                   g$y-pat$9741$XcRv&
                                                   g$xr*$9742$XcRv&)
                                                 (if g$r$9740$XcRv&
                                                   (if (null?
                                                         g$y-pat$9741$XcRv&)
                                                     ((case-lambda
                                                        ((g$xr$9743$XcRv&)
                                                         (if g$xr$9743$XcRv&
                                                           (values
                                                             (cons
                                                               g$xr$9743$XcRv&
                                                               g$xr*$9742$XcRv&)
                                                             g$y-pat$9741$XcRv&
                                                             g$r$9740$XcRv&)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9668$XcRv&
                                                        (car g$e$9730$XcRv&)
                                                        g$x-pat$9722$XcRv&
                                                        g$m*$9731$XcRv&
                                                        g$s*$9732$XcRv&
                                                        g$ae*$9733$XcRv&
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9741$XcRv&)
                                                       (g$match$9668$XcRv&
                                                         (car g$e$9730$XcRv&)
                                                         (car g$y-pat$9741$XcRv&)
                                                         g$m*$9731$XcRv&
                                                         g$s*$9732$XcRv&
                                                         g$ae*$9733$XcRv&
                                                         g$r$9740$XcRv&)))
                                                   (values '#f '#f '#f))))
                                              g$r$9739$XcRv&
                                              g$y-pat$9738$XcRv&
                                              g$xr*$9737$XcRv&))))
                                        (if (g$stx?$7716$XcRv& g$e$9730$XcRv&)
                                          (if (g$top-marked?$7687$XcRv&
                                                g$m*$9731$XcRv&)
                                            (values
                                              '()
                                              g$y-pat$9723$XcRv&
                                              (g$match$9668$XcRv&
                                                g$e$9730$XcRv&
                                                g$z-pat$9724$XcRv&
                                                g$m*$9731$XcRv&
                                                g$s*$9732$XcRv&
                                                g$ae*$9733$XcRv&
                                                g$r$9728$XcRv&))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7731$XcRv&
                                                   g$m*$9731$XcRv&
                                                   g$s*$9732$XcRv&
                                                   g$ae*$9733$XcRv&
                                                   g$e$9730$XcRv&)))
                                              (case-lambda
                                                ((g$m*$9747$XcRv&
                                                   g$s*$9748$XcRv&
                                                   g$ae*$9749$XcRv&)
                                                 ((case-lambda
                                                    ((g$ae*$9750$XcRv&
                                                       g$s*$9751$XcRv&
                                                       g$m*$9752$XcRv&)
                                                     (g$f$9729$XcRv&
                                                       (g$stx-expr$7718$XcRv&
                                                         g$e$9730$XcRv&)
                                                       g$m*$9752$XcRv&
                                                       g$s*$9751$XcRv&
                                                       g$ae*$9750$XcRv&)))
                                                  g$ae*$9749$XcRv&
                                                  g$s*$9748$XcRv&
                                                  g$m*$9747$XcRv&)))))
                                          (if (annotation? g$e$9730$XcRv&)
                                            (g$f$9729$XcRv&
                                              (annotation-expression
                                                g$e$9730$XcRv&)
                                              g$m*$9731$XcRv&
                                              g$s*$9732$XcRv&
                                              g$ae*$9733$XcRv&)
                                            (values
                                              '()
                                              g$y-pat$9723$XcRv&
                                              (g$match$9668$XcRv&
                                                g$e$9730$XcRv&
                                                g$z-pat$9724$XcRv&
                                                g$m*$9731$XcRv&
                                                g$s*$9732$XcRv&
                                                g$ae*$9733$XcRv&
                                                g$r$9728$XcRv&)))))))))
                          g$f$9729$XcRv&)
                        g$e$9721$XcRv&
                        g$m*$9725$XcRv&
                        g$s*$9726$XcRv&
                        g$ae*$9727$XcRv&))))
                  (g$match-each-any$9664$XcRv&
                    (case-lambda
                      ((g$e$9707$XcRv&
                         g$m*$9708$XcRv&
                         g$s*$9709$XcRv&
                         g$ae*$9710$XcRv&)
                       (if (pair? g$e$9707$XcRv&)
                         ((case-lambda
                            ((g$l$9711$XcRv&)
                             (if g$l$9711$XcRv&
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9661$XcRv&
                                     (car g$e$9707$XcRv&)
                                     g$m*$9708$XcRv&
                                     g$s*$9709$XcRv&
                                     g$ae*$9710$XcRv&)
                                   g$l$9711$XcRv&))
                               '#f)))
                          (g$match-each-any$9664$XcRv&
                            (cdr g$e$9707$XcRv&)
                            g$m*$9708$XcRv&
                            g$s*$9709$XcRv&
                            g$ae*$9710$XcRv&))
                         (if (null? g$e$9707$XcRv&)
                           '()
                           (if (g$stx?$7716$XcRv& g$e$9707$XcRv&)
                             (if (not (g$top-marked?$7687$XcRv&
                                        g$m*$9708$XcRv&))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7731$XcRv&
                                        g$m*$9708$XcRv&
                                        g$s*$9709$XcRv&
                                        g$ae*$9710$XcRv&
                                        g$e$9707$XcRv&)))
                                   (case-lambda
                                     ((g$m*$9715$XcRv&
                                        g$s*$9716$XcRv&
                                        g$ae*$9717$XcRv&)
                                      ((case-lambda
                                         ((g$ae*$9718$XcRv&
                                            g$s*$9719$XcRv&
                                            g$m*$9720$XcRv&)
                                          (g$match-each-any$9664$XcRv&
                                            (g$stx-expr$7718$XcRv&
                                              g$e$9707$XcRv&)
                                            g$m*$9720$XcRv&
                                            g$s*$9719$XcRv&
                                            g$ae*$9718$XcRv&)))
                                       g$ae*$9717$XcRv&
                                       g$s*$9716$XcRv&
                                       g$m*$9715$XcRv&)))))
                               '#f)
                             (if (annotation? g$e$9707$XcRv&)
                               (g$match-each-any$9664$XcRv&
                                 (annotation-expression g$e$9707$XcRv&)
                                 g$m*$9708$XcRv&
                                 g$s*$9709$XcRv&
                                 g$ae*$9710$XcRv&)
                               '#f)))))))
                  (g$match-empty$9665$XcRv&
                    (case-lambda
                      ((g$p$9704$XcRv& g$r$9705$XcRv&)
                       (if (null? g$p$9704$XcRv&)
                         g$r$9705$XcRv&
                         (if (eq? g$p$9704$XcRv& '_)
                           g$r$9705$XcRv&
                           (if (eq? g$p$9704$XcRv& 'any)
                             (cons '() g$r$9705$XcRv&)
                             (if (pair? g$p$9704$XcRv&)
                               (g$match-empty$9665$XcRv&
                                 (car g$p$9704$XcRv&)
                                 (g$match-empty$9665$XcRv&
                                   (cdr g$p$9704$XcRv&)
                                   g$r$9705$XcRv&))
                               (if (eq? g$p$9704$XcRv& 'each-any)
                                 (cons '() g$r$9705$XcRv&)
                                 ((case-lambda
                                    ((g$t$9706$XcRv&)
                                     (if (eqv? g$t$9706$XcRv& 'each)
                                       (g$match-empty$9665$XcRv&
                                         (vector-ref g$p$9704$XcRv& '1)
                                         g$r$9705$XcRv&)
                                       (if (eqv? g$t$9706$XcRv& 'each+)
                                         (g$match-empty$9665$XcRv&
                                           (vector-ref g$p$9704$XcRv& '1)
                                           (g$match-empty$9665$XcRv&
                                             (reverse
                                               (vector-ref g$p$9704$XcRv& '2))
                                             (g$match-empty$9665$XcRv&
                                               (vector-ref g$p$9704$XcRv& '3)
                                               g$r$9705$XcRv&)))
                                         (if (memv
                                               g$t$9706$XcRv&
                                               '(free-id atom))
                                           g$r$9705$XcRv&
                                           (if (memv
                                                 g$t$9706$XcRv&
                                                 '(scheme-id atom))
                                             g$r$9705$XcRv&
                                             (if (eqv? g$t$9706$XcRv& 'vector)
                                               (g$match-empty$9665$XcRv&
                                                 (vector-ref g$p$9704$XcRv& '1)
                                                 g$r$9705$XcRv&)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9704$XcRv&))))))))
                                  (vector-ref g$p$9704$XcRv& '0))))))))))
                  (g$combine$9666$XcRv&
                    (case-lambda
                      ((g$r*$9702$XcRv& g$r$9703$XcRv&)
                       (if (null? (car g$r*$9702$XcRv&))
                         g$r$9703$XcRv&
                         (cons
                           (map car g$r*$9702$XcRv&)
                           (g$combine$9666$XcRv&
                             (map cdr g$r*$9702$XcRv&)
                             g$r$9703$XcRv&))))))
                  (g$match*$9667$XcRv&
                    (case-lambda
                      ((g$e$9684$XcRv&
                         g$p$9685$XcRv&
                         g$m*$9686$XcRv&
                         g$s*$9687$XcRv&
                         g$ae*$9688$XcRv&
                         g$r$9689$XcRv&)
                       (if (null? g$p$9685$XcRv&)
                         (if (null? g$e$9684$XcRv&)
                           (begin '#f g$r$9689$XcRv&)
                           '#f)
                         (if (pair? g$p$9685$XcRv&)
                           (if (pair? g$e$9684$XcRv&)
                             (begin
                               '#f
                               (g$match$9668$XcRv&
                                 (car g$e$9684$XcRv&)
                                 (car g$p$9685$XcRv&)
                                 g$m*$9686$XcRv&
                                 g$s*$9687$XcRv&
                                 g$ae*$9688$XcRv&
                                 (g$match$9668$XcRv&
                                   (cdr g$e$9684$XcRv&)
                                   (cdr g$p$9685$XcRv&)
                                   g$m*$9686$XcRv&
                                   g$s*$9687$XcRv&
                                   g$ae*$9688$XcRv&
                                   g$r$9689$XcRv&)))
                             '#f)
                           (if (eq? g$p$9685$XcRv& 'each-any)
                             ((case-lambda
                                ((g$l$9690$XcRv&)
                                 (if g$l$9690$XcRv&
                                   (begin
                                     '#f
                                     (cons g$l$9690$XcRv& g$r$9689$XcRv&))
                                   '#f)))
                              (g$match-each-any$9664$XcRv&
                                g$e$9684$XcRv&
                                g$m*$9686$XcRv&
                                g$s*$9687$XcRv&
                                g$ae*$9688$XcRv&))
                             ((case-lambda
                                ((g$t$9691$XcRv&)
                                 (if (eqv? g$t$9691$XcRv& 'each)
                                   (if (null? g$e$9684$XcRv&)
                                     (g$match-empty$9665$XcRv&
                                       (vector-ref g$p$9685$XcRv& '1)
                                       g$r$9689$XcRv&)
                                     ((case-lambda
                                        ((g$r*$9701$XcRv&)
                                         (if g$r*$9701$XcRv&
                                           (begin
                                             '#f
                                             (g$combine$9666$XcRv&
                                               g$r*$9701$XcRv&
                                               g$r$9689$XcRv&))
                                           '#f)))
                                      (g$match-each$9662$XcRv&
                                        g$e$9684$XcRv&
                                        (vector-ref g$p$9685$XcRv& '1)
                                        g$m*$9686$XcRv&
                                        g$s*$9687$XcRv&
                                        g$ae*$9688$XcRv&)))
                                   (if (eqv? g$t$9691$XcRv& 'free-id)
                                     (if (symbol? g$e$9684$XcRv&)
                                       (if (g$top-marked?$7687$XcRv&
                                             g$m*$9686$XcRv&)
                                         (if (g$free-id=?$7748$XcRv&
                                               (g$stx^$9661$XcRv&
                                                 g$e$9684$XcRv&
                                                 g$m*$9686$XcRv&
                                                 g$s*$9687$XcRv&
                                                 g$ae*$9688$XcRv&)
                                               (vector-ref g$p$9685$XcRv& '1))
                                           (begin '#f g$r$9689$XcRv&)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (eqv? g$t$9691$XcRv& 'scheme-id)
                                       (if (symbol? g$e$9684$XcRv&)
                                         (if (g$top-marked?$7687$XcRv&
                                               g$m*$9686$XcRv&)
                                           (if (g$free-id=?$7748$XcRv&
                                                 (g$stx^$9661$XcRv&
                                                   g$e$9684$XcRv&
                                                   g$m*$9686$XcRv&
                                                   g$s*$9687$XcRv&
                                                   g$ae*$9688$XcRv&)
                                                 (g$scheme-stx$7965$XcRv&
                                                   (vector-ref
                                                     g$p$9685$XcRv&
                                                     '1)))
                                             (begin '#f g$r$9689$XcRv&)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv? g$t$9691$XcRv& 'each+)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9663$XcRv&
                                                g$e$9684$XcRv&
                                                (vector-ref g$p$9685$XcRv& '1)
                                                (vector-ref g$p$9685$XcRv& '2)
                                                (vector-ref g$p$9685$XcRv& '3)
                                                g$m*$9686$XcRv&
                                                g$s*$9687$XcRv&
                                                g$ae*$9688$XcRv&
                                                g$r$9689$XcRv&)))
                                           (case-lambda
                                             ((g$xr*$9695$XcRv&
                                                g$y-pat$9696$XcRv&
                                                g$r$9697$XcRv&)
                                              ((case-lambda
                                                 ((g$r$9698$XcRv&
                                                    g$y-pat$9699$XcRv&
                                                    g$xr*$9700$XcRv&)
                                                  (if g$r$9698$XcRv&
                                                    (if (null?
                                                          g$y-pat$9699$XcRv&)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9700$XcRv&)
                                                          (g$match-empty$9665$XcRv&
                                                            (vector-ref
                                                              g$p$9685$XcRv&
                                                              '1)
                                                            g$r$9698$XcRv&)
                                                          (g$combine$9666$XcRv&
                                                            g$xr*$9700$XcRv&
                                                            g$r$9698$XcRv&)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9697$XcRv&
                                               g$y-pat$9696$XcRv&
                                               g$xr*$9695$XcRv&))))
                                         (if (eqv? g$t$9691$XcRv& 'atom)
                                           (if (equal?
                                                 (vector-ref g$p$9685$XcRv& '1)
                                                 (g$strip$7754$XcRv&
                                                   g$e$9684$XcRv&
                                                   g$m*$9686$XcRv&))
                                             (begin '#f g$r$9689$XcRv&)
                                             '#f)
                                           (if (eqv? g$t$9691$XcRv& 'vector)
                                             (if (vector? g$e$9684$XcRv&)
                                               (begin
                                                 '#f
                                                 (g$match$9668$XcRv&
                                                   (vector->list g$e$9684$XcRv&)
                                                   (vector-ref
                                                     g$p$9685$XcRv&
                                                     '1)
                                                   g$m*$9686$XcRv&
                                                   g$s*$9687$XcRv&
                                                   g$ae*$9688$XcRv&
                                                   g$r$9689$XcRv&))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9685$XcRv&)))))))))
                              (vector-ref g$p$9685$XcRv& '0))))))))
                  (g$match$9668$XcRv&
                    (case-lambda
                      ((g$e$9669$XcRv&
                         g$p$9670$XcRv&
                         g$m*$9671$XcRv&
                         g$s*$9672$XcRv&
                         g$ae*$9673$XcRv&
                         g$r$9674$XcRv&)
                       (if (not g$r$9674$XcRv&)
                         '#f
                         (if (eq? g$p$9670$XcRv& '_)
                           g$r$9674$XcRv&
                           (if (eq? g$p$9670$XcRv& 'any)
                             (cons
                               (g$stx^$9661$XcRv&
                                 g$e$9669$XcRv&
                                 g$m*$9671$XcRv&
                                 g$s*$9672$XcRv&
                                 g$ae*$9673$XcRv&)
                               g$r$9674$XcRv&)
                             (if (g$stx?$7716$XcRv& g$e$9669$XcRv&)
                               (if (not (g$top-marked?$7687$XcRv&
                                          g$m*$9671$XcRv&))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7731$XcRv&
                                          g$m*$9671$XcRv&
                                          g$s*$9672$XcRv&
                                          g$ae*$9673$XcRv&
                                          g$e$9669$XcRv&)))
                                     (case-lambda
                                       ((g$m*$9678$XcRv&
                                          g$s*$9679$XcRv&
                                          g$ae*$9680$XcRv&)
                                        ((case-lambda
                                           ((g$ae*$9681$XcRv&
                                              g$s*$9682$XcRv&
                                              g$m*$9683$XcRv&)
                                            (g$match$9668$XcRv&
                                              (g$stx-expr$7718$XcRv&
                                                g$e$9669$XcRv&)
                                              g$p$9670$XcRv&
                                              g$m*$9683$XcRv&
                                              g$s*$9682$XcRv&
                                              g$ae*$9681$XcRv&
                                              g$r$9674$XcRv&)))
                                         g$ae*$9680$XcRv&
                                         g$s*$9679$XcRv&
                                         g$m*$9678$XcRv&)))))
                                 '#f)
                               (if (annotation? g$e$9669$XcRv&)
                                 (g$match$9668$XcRv&
                                   (annotation-expression g$e$9669$XcRv&)
                                   g$p$9670$XcRv&
                                   g$m*$9671$XcRv&
                                   g$s*$9672$XcRv&
                                   g$ae*$9673$XcRv&
                                   g$r$9674$XcRv&)
                                 (g$match*$9667$XcRv&
                                   g$e$9669$XcRv&
                                   g$p$9670$XcRv&
                                   g$m*$9671$XcRv&
                                   g$s*$9672$XcRv&
                                   g$ae*$9673$XcRv&
                                   g$r$9674$XcRv&))))))))))
          (g$match$9668$XcRv& g$e$9659$XcRv& g$p$9660$XcRv& '() '() '() '())))))
   (g$ellipsis?$8023$XcRv&
     g$ellipsis?$11473$XcRv&
     (case-lambda
       ((g$x$9773$XcRv&)
        (if (g$id?$7744$XcRv& g$x$9773$XcRv&)
          (begin
            '#f
            (g$free-id=?$7748$XcRv&
              g$x$9773$XcRv&
              (g$scheme-stx$7965$XcRv& '...)))
          '#f))))
   (g$underscore?$8024$XcRv&
     g$underscore?$11474$XcRv&
     (case-lambda
       ((g$x$9774$XcRv&)
        (if (g$id?$7744$XcRv& g$x$9774$XcRv&)
          (begin
            '#f
            (g$free-id=?$7748$XcRv&
              g$x$9774$XcRv&
              (g$scheme-stx$7965$XcRv& '_)))
          '#f))))
   (g$verify-literals$8025$XcRv&
     g$verify-literals$11475$XcRv&
     (case-lambda
       ((g$lits$9775$XcRv& g$expr$9776$XcRv&)
        (for-each
          (case-lambda
            ((g$x$9777$XcRv&)
             (if ((case-lambda
                    ((g$t$9778$XcRv&)
                     (if g$t$9778$XcRv&
                       g$t$9778$XcRv&
                       ((case-lambda
                          ((g$t$9779$XcRv&)
                           (if g$t$9779$XcRv&
                             g$t$9779$XcRv&
                             (begin
                               '#f
                               (g$underscore?$8024$XcRv& g$x$9777$XcRv&)))))
                        (g$ellipsis?$8023$XcRv& g$x$9777$XcRv&)))))
                  (not (g$id?$7744$XcRv& g$x$9777$XcRv&)))
               (g$syntax-violation$8128$XcRv&
                 '#f
                 '"invalid literal"
                 g$expr$9776$XcRv&
                 g$x$9777$XcRv&)
               (void))))
          g$lits$9775$XcRv&))))
   (g$syntax-case-transformer$8026$XcRv&
     g$syntax-case-transformer$11476$XcRv&
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9780$XcRv&
                     (case-lambda
                       ((g$pvars$9837$XcRv&
                          g$expr$9838$XcRv&
                          g$y$9839$XcRv&
                          g$r$9840$XcRv&
                          g$mr$9841$XcRv&)
                        ((case-lambda
                           ((g$ids$9842$XcRv& g$levels$9843$XcRv&)
                            ((case-lambda
                               ((g$labels$9844$XcRv& g$new-vars$9845$XcRv&)
                                ((case-lambda
                                   ((g$body$9846$XcRv&)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7675$XcRv&
                                        '#f
                                        g$new-vars$9845$XcRv&
                                        g$body$9846$XcRv&)
                                      g$y$9839$XcRv&)))
                                 (g$chi-expr$8040$XcRv&
                                   (g$add-subst$7734$XcRv&
                                     (g$make-full-rib$7712$XcRv&
                                       g$ids$9842$XcRv&
                                       g$labels$9844$XcRv&)
                                     g$expr$9838$XcRv&)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9847$XcRv&
                                               g$var$9848$XcRv&
                                               g$level$9849$XcRv&)
                                             (cons
                                               g$label$9847$XcRv&
                                               (g$make-binding$7760$XcRv&
                                                 'syntax
                                                 (cons
                                                   g$var$9848$XcRv&
                                                   g$level$9849$XcRv&)))))
                                          g$labels$9844$XcRv&
                                          g$new-vars$9845$XcRv&
                                          (map cdr g$pvars$9837$XcRv&))
                                     g$r$9840$XcRv&)
                                   g$mr$9841$XcRv&))))
                             (map g$gen-label$7690$XcRv& g$ids$9842$XcRv&)
                             (map g$gen-lexical$7688$XcRv& g$ids$9842$XcRv&))))
                         (map car g$pvars$9837$XcRv&)
                         (map cdr g$pvars$9837$XcRv&)))))
                   (g$invalid-ids-error$9781$XcRv&
                     (case-lambda
                       ((g$id*$9831$XcRv& g$e$9832$XcRv& g$class$9833$XcRv&)
                        ((letrec ((g$find$9834$XcRv&
                                    (case-lambda
                                      ((g$id*$9835$XcRv& g$ok*$9836$XcRv&)
                                       (if (null? g$id*$9835$XcRv&)
                                         (g$syntax-violation$8128$XcRv&
                                           '#f
                                           '"invalid syntax"
                                           g$e$9832$XcRv&)
                                         (if (g$id?$7744$XcRv&
                                               (car g$id*$9835$XcRv&))
                                           (if (g$bound-id-member?$7751$XcRv&
                                                 (car g$id*$9835$XcRv&)
                                                 g$ok*$9836$XcRv&)
                                             (g$syntax-error$8125$XcRv&
                                               (car g$id*$9835$XcRv&)
                                               '"duplicate "
                                               g$class$9833$XcRv&)
                                             (g$find$9834$XcRv&
                                               (cdr g$id*$9835$XcRv&)
                                               (cons
                                                 (car g$id*$9835$XcRv&)
                                                 g$ok*$9836$XcRv&)))
                                           (g$syntax-error$8125$XcRv&
                                             (car g$id*$9835$XcRv&)
                                             '"invalid "
                                             g$class$9833$XcRv&)))))))
                           g$find$9834$XcRv&)
                         g$id*$9831$XcRv&
                         '()))))
                   (g$gen-clause$9782$XcRv&
                     (case-lambda
                       ((g$x$9811$XcRv&
                          g$keys$9812$XcRv&
                          g$clauses$9813$XcRv&
                          g$r$9814$XcRv&
                          g$mr$9815$XcRv&
                          g$pat$9816$XcRv&
                          g$fender$9817$XcRv&
                          g$expr$9818$XcRv&)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$8021$XcRv&
                               g$pat$9816$XcRv&
                               g$keys$9812$XcRv&)))
                          (case-lambda
                            ((g$p$9821$XcRv& g$pvars$9822$XcRv&)
                             ((case-lambda
                                ((g$pvars$9823$XcRv& g$p$9824$XcRv&)
                                 (if (not (g$distinct-bound-ids?$7750$XcRv&
                                            (map car g$pvars$9823$XcRv&)))
                                   (g$invalid-ids-error$9781$XcRv&
                                     (map car g$pvars$9823$XcRv&)
                                     g$pat$9816$XcRv&
                                     '"pattern variable")
                                   (if (not (g$for-all$6019$XcRv&
                                              (case-lambda
                                                ((g$x$9825$XcRv&)
                                                 (not (g$ellipsis?$8023$XcRv&
                                                        (car g$x$9825$XcRv&)))))
                                              g$pvars$9823$XcRv&))
                                     (g$syntax-violation$8128$XcRv&
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9816$XcRv&)
                                     ((case-lambda
                                        ((g$y$9826$XcRv&)
                                         ((case-lambda
                                            ((g$test$9827$XcRv&)
                                             ((case-lambda
                                                ((g$conseq$9828$XcRv&)
                                                 ((case-lambda
                                                    ((g$altern$9829$XcRv&)
                                                     (list
                                                       (g$build-lambda$7675$XcRv&
                                                         '#f
                                                         (list g$y$9826$XcRv&)
                                                         (list
                                                           'if
                                                           g$test$9827$XcRv&
                                                           g$conseq$9828$XcRv&
                                                           g$altern$9829$XcRv&))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9811$XcRv&
                                                         (list
                                                           'quote
                                                           g$p$9824$XcRv&)))))
                                                  (g$gen-syntax-case$9783$XcRv&
                                                    g$x$9811$XcRv&
                                                    g$keys$9812$XcRv&
                                                    g$clauses$9813$XcRv&
                                                    g$r$9814$XcRv&
                                                    g$mr$9815$XcRv&))))
                                              (g$build-dispatch-call$9780$XcRv&
                                                g$pvars$9823$XcRv&
                                                g$expr$9818$XcRv&
                                                g$y$9826$XcRv&
                                                g$r$9814$XcRv&
                                                g$mr$9815$XcRv&))))
                                          (if (eq? g$fender$9817$XcRv& '#t)
                                            g$y$9826$XcRv&
                                            ((case-lambda
                                               ((g$call$9830$XcRv&)
                                                (list
                                                  'if
                                                  g$y$9826$XcRv&
                                                  g$call$9830$XcRv&
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9780$XcRv&
                                               g$pvars$9823$XcRv&
                                               g$fender$9817$XcRv&
                                               g$y$9826$XcRv&
                                               g$r$9814$XcRv&
                                               g$mr$9815$XcRv&))))))
                                      (g$gen-lexical$7688$XcRv& 'tmp))))))
                              g$pvars$9822$XcRv&
                              g$p$9821$XcRv&)))))))
                   (g$gen-syntax-case$9783$XcRv&
                     (case-lambda
                       ((g$x$9794$XcRv&
                          g$keys$9795$XcRv&
                          g$clauses$9796$XcRv&
                          g$r$9797$XcRv&
                          g$mr$9798$XcRv&)
                        (if (null? g$clauses$9796$XcRv&)
                          (list '(primitive syntax-error) g$x$9794$XcRv&)
                          ((case-lambda
                             ((g$t$9799$XcRv&)
                              ((case-lambda
                                 ((g$ls/false$9800$XcRv&)
                                  (if g$ls/false$9800$XcRv&
                                    (apply
                                      (case-lambda
                                        ((g$pat$9801$XcRv& g$expr$9802$XcRv&)
                                         (if (if (g$id?$7744$XcRv&
                                                   g$pat$9801$XcRv&)
                                               (if (not (g$bound-id-member?$7751$XcRv&
                                                          g$pat$9801$XcRv&
                                                          g$keys$9795$XcRv&))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$8023$XcRv&
                                                          g$pat$9801$XcRv&)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7748$XcRv&
                                                 g$pat$9801$XcRv&
                                                 (g$scheme-stx$7965$XcRv& '_))
                                             (g$chi-expr$8040$XcRv&
                                               g$expr$9802$XcRv&
                                               g$r$9797$XcRv&
                                               g$mr$9798$XcRv&)
                                             ((case-lambda
                                                ((g$lab$9803$XcRv&
                                                   g$lex$9804$XcRv&)
                                                 ((case-lambda
                                                    ((g$body$9805$XcRv&)
                                                     (list
                                                       (g$build-lambda$7675$XcRv&
                                                         '#f
                                                         (list g$lex$9804$XcRv&)
                                                         g$body$9805$XcRv&)
                                                       g$x$9794$XcRv&)))
                                                  (g$chi-expr$8040$XcRv&
                                                    (g$add-subst$7734$XcRv&
                                                      (g$make-full-rib$7712$XcRv&
                                                        (list g$pat$9801$XcRv&)
                                                        (list g$lab$9803$XcRv&))
                                                      g$expr$9802$XcRv&)
                                                    (cons
                                                      (cons
                                                        g$lab$9803$XcRv&
                                                        (g$make-binding$7760$XcRv&
                                                          'syntax
                                                          (cons
                                                            g$lex$9804$XcRv&
                                                            '0)))
                                                      g$r$9797$XcRv&)
                                                    g$mr$9798$XcRv&))))
                                              (g$gen-label$7690$XcRv&
                                                g$pat$9801$XcRv&)
                                              (g$gen-lexical$7688$XcRv&
                                                g$pat$9801$XcRv&)))
                                           (g$gen-clause$9782$XcRv&
                                             g$x$9794$XcRv&
                                             g$keys$9795$XcRv&
                                             (cdr g$clauses$9796$XcRv&)
                                             g$r$9797$XcRv&
                                             g$mr$9798$XcRv&
                                             g$pat$9801$XcRv&
                                             '#t
                                             g$expr$9802$XcRv&))))
                                      g$ls/false$9800$XcRv&)
                                    ((case-lambda
                                       ((g$t$9806$XcRv&)
                                        ((case-lambda
                                           ((g$ls/false$9807$XcRv&)
                                            (if g$ls/false$9807$XcRv&
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9808$XcRv&
                                                     g$fender$9809$XcRv&
                                                     g$expr$9810$XcRv&)
                                                   (g$gen-clause$9782$XcRv&
                                                     g$x$9794$XcRv&
                                                     g$keys$9795$XcRv&
                                                     (cdr g$clauses$9796$XcRv&)
                                                     g$r$9797$XcRv&
                                                     g$mr$9798$XcRv&
                                                     g$pat$9808$XcRv&
                                                     g$fender$9809$XcRv&
                                                     g$expr$9810$XcRv&)))
                                                g$ls/false$9807$XcRv&)
                                              (g$syntax-violation$8128$XcRv&
                                                '#f
                                                '"invalid syntax"
                                                g$t$9806$XcRv&))))
                                         (g$syntax-dispatch$8022$XcRv&
                                           g$t$9806$XcRv&
                                           '(any any any)))))
                                     g$t$9799$XcRv&))))
                               (g$syntax-dispatch$8022$XcRv&
                                 g$t$9799$XcRv&
                                 '(any any)))))
                           (car g$clauses$9796$XcRv&)))))))
           (case-lambda
             ((g$e$9784$XcRv& g$r$9785$XcRv& g$mr$9786$XcRv&)
              ((case-lambda
                 ((g$t$9787$XcRv&)
                  ((case-lambda
                     ((g$ls/false$9788$XcRv&)
                      (if g$ls/false$9788$XcRv&
                        (apply
                          (case-lambda
                            ((g$expr$9789$XcRv&
                               g$keys$9790$XcRv&
                               g$clauses$9791$XcRv&)
                             (begin
                               (g$verify-literals$8025$XcRv&
                                 g$keys$9790$XcRv&
                                 g$e$9784$XcRv&)
                               ((case-lambda
                                  ((g$x$9792$XcRv&)
                                   ((case-lambda
                                      ((g$body$9793$XcRv&)
                                       (list
                                         (g$build-lambda$7675$XcRv&
                                           '#f
                                           (list g$x$9792$XcRv&)
                                           g$body$9793$XcRv&)
                                         (g$chi-expr$8040$XcRv&
                                           g$expr$9789$XcRv&
                                           g$r$9785$XcRv&
                                           g$mr$9786$XcRv&))))
                                    (g$gen-syntax-case$9783$XcRv&
                                      g$x$9792$XcRv&
                                      g$keys$9790$XcRv&
                                      g$clauses$9791$XcRv&
                                      g$r$9785$XcRv&
                                      g$mr$9786$XcRv&))))
                                (g$gen-lexical$7688$XcRv& 'tmp)))))
                          g$ls/false$9788$XcRv&)
                        (g$syntax-violation$8128$XcRv&
                          '#f
                          '"invalid syntax"
                          g$t$9787$XcRv&))))
                   (g$syntax-dispatch$8022$XcRv&
                     g$t$9787$XcRv&
                     '(_ any each-any . each-any)))))
               g$e$9784$XcRv&))))))))
   (g$ellipsis-map$8027$XcRv&
     g$ellipsis-map$11477$XcRv&
     (case-lambda
       ((g$proc$9850$XcRv& g$ls$9851$XcRv& . g$ls*$9852$XcRv&)
        (letrec* ((g$who$9853$XcRv& '...))
          (begin
            (if (list? g$ls$9851$XcRv&)
              (void)
              (assertion-violation
                g$who$9853$XcRv&
                '"not a list"
                g$ls$9851$XcRv&))
            (if (null? g$ls*$9852$XcRv&)
              (void)
              ((case-lambda
                 ((g$n$9854$XcRv&)
                  (for-each
                    (case-lambda
                      ((g$x$9855$XcRv&)
                       (begin
                         (if (list? g$x$9855$XcRv&)
                           (void)
                           (assertion-violation
                             g$who$9853$XcRv&
                             '"not a list"
                             g$x$9855$XcRv&))
                         (if (= (length g$x$9855$XcRv&) g$n$9854$XcRv&)
                           (void)
                           (assertion-violation
                             g$who$9853$XcRv&
                             '"length mismatch"
                             g$ls$9851$XcRv&
                             g$x$9855$XcRv&)))))
                    g$ls*$9852$XcRv&)))
               (length g$ls$9851$XcRv&)))
            (apply map g$proc$9850$XcRv& g$ls$9851$XcRv& g$ls*$9852$XcRv&))))))
   (g$syntax-transformer$8028$XcRv&
     g$syntax-transformer$11478$XcRv&
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9856$XcRv&
                     (case-lambda
                       ((g$src$9916$XcRv&
                          g$e$9917$XcRv&
                          g$r$9918$XcRv&
                          g$maps$9919$XcRv&
                          g$ellipsis?$9920$XcRv&
                          g$vec?$9921$XcRv&)
                        ((case-lambda
                           ((g$t$9922$XcRv&)
                            ((case-lambda
                               ((g$ls/false$9923$XcRv&)
                                (if (if g$ls/false$9923$XcRv&
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9924$XcRv&)
                                             (g$ellipsis?$9920$XcRv&
                                               g$dots$9924$XcRv&)))
                                          g$ls/false$9923$XcRv&))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9925$XcRv&)
                                       (g$syntax-violation$8128$XcRv&
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9916$XcRv&)))
                                    g$ls/false$9923$XcRv&)
                                  ((case-lambda
                                     ((g$t$9926$XcRv&)
                                      ((case-lambda
                                         ((g$ls/false$9927$XcRv&)
                                          (if (if g$ls/false$9927$XcRv&
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9928$XcRv&)
                                                       (g$id?$7744$XcRv&
                                                         g$id$9928$XcRv&)))
                                                    g$ls/false$9927$XcRv&))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9929$XcRv&)
                                                 ((case-lambda
                                                    ((g$label$9930$XcRv&)
                                                     ((case-lambda
                                                        ((g$b$9931$XcRv&)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7761$XcRv&
                                                                        g$b$9931$XcRv&)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9934$XcRv&)
                                                                        (g$gen-ref$9857$XcRv&
                                                                          g$src$9916$XcRv&
                                                                          (car g$var.lev$9934$XcRv&)
                                                                          (cdr g$var.lev$9934$XcRv&)
                                                                          g$maps$9919$XcRv&)))
                                                                     (g$binding-value$7762$XcRv&
                                                                       g$b$9931$XcRv&))))
                                                                 (case-lambda
                                                                   ((g$var$9935$XcRv&
                                                                      g$maps$9936$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$maps$9937$XcRv&
                                                                          g$var$9938$XcRv&)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9938$XcRv&)
                                                                          g$maps$9937$XcRv&)))
                                                                     g$maps$9936$XcRv&
                                                                     g$var$9935$XcRv&))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9917$XcRv&)
                                                                 g$maps$9919$XcRv&)))))))
                                                      (g$label->binding$7759$XcRv&
                                                        g$label$9930$XcRv&
                                                        g$r$9918$XcRv&))))
                                                  (g$id->label$7757$XcRv&
                                                    g$e$9917$XcRv&))))
                                              g$ls/false$9927$XcRv&)
                                            ((case-lambda
                                               ((g$t$9939$XcRv&)
                                                ((case-lambda
                                                   ((g$ls/false$9940$XcRv&)
                                                    (if (if g$ls/false$9940$XcRv&
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9941$XcRv&
                                                                   g$e$9942$XcRv&)
                                                                 (g$ellipsis?$9920$XcRv&
                                                                   g$dots$9941$XcRv&)))
                                                              g$ls/false$9940$XcRv&))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9943$XcRv&
                                                             g$e$9944$XcRv&)
                                                           (if g$vec?$9921$XcRv&
                                                             (g$syntax-violation$8128$XcRv&
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9916$XcRv&)
                                                             (g$gen-syntax$9856$XcRv&
                                                               g$src$9916$XcRv&
                                                               g$e$9944$XcRv&
                                                               g$r$9918$XcRv&
                                                               g$maps$9919$XcRv&
                                                               (case-lambda
                                                                 ((g$x$9945$XcRv&)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9940$XcRv&)
                                                      ((case-lambda
                                                         ((g$t$9946$XcRv&)
                                                          ((case-lambda
                                                             ((g$ls/false$9947$XcRv&)
                                                              (if (if g$ls/false$9947$XcRv&
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9948$XcRv&
                                                                             g$dots$9949$XcRv&
                                                                             g$y$9950$XcRv&)
                                                                           (g$ellipsis?$9920$XcRv&
                                                                             g$dots$9949$XcRv&)))
                                                                        g$ls/false$9947$XcRv&))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9951$XcRv&
                                                                       g$dots$9952$XcRv&
                                                                       g$y$9953$XcRv&)
                                                                     ((letrec ((g$f$9954$XcRv&
                                                                                 (case-lambda
                                                                                   ((g$y$9955$XcRv&
                                                                                      g$k$9956$XcRv&)
                                                                                    ((case-lambda
                                                                                       ((g$t$9957$XcRv&)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9958$XcRv&)
                                                                                            (if g$ls/false$9958$XcRv&
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9956$XcRv&
                                                                                                     g$maps$9919$XcRv&)))
                                                                                                g$ls/false$9958$XcRv&)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9959$XcRv&)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9960$XcRv&)
                                                                                                      (if (if g$ls/false$9960$XcRv&
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9961$XcRv&
                                                                                                                     g$y$9962$XcRv&)
                                                                                                                   (g$ellipsis?$9920$XcRv&
                                                                                                                     g$dots$9961$XcRv&)))
                                                                                                                g$ls/false$9960$XcRv&))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9963$XcRv&
                                                                                                               g$y$9964$XcRv&)
                                                                                                             (g$f$9954$XcRv&
                                                                                                               g$y$9964$XcRv&
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9965$XcRv&)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9956$XcRv&
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9965$XcRv&))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9968$XcRv&
                                                                                                                         g$maps$9969$XcRv&)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9970$XcRv&
                                                                                                                             g$x$9971$XcRv&)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9970$XcRv&))
                                                                                                                             (g$syntax-violation$8128$XcRv&
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9916$XcRv&)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9859$XcRv&
                                                                                                                                 g$x$9971$XcRv&
                                                                                                                                 (car g$maps$9970$XcRv&))
                                                                                                                               (cdr g$maps$9970$XcRv&)))))
                                                                                                                        g$maps$9969$XcRv&
                                                                                                                        g$x$9968$XcRv&)))))))))
                                                                                                          g$ls/false$9960$XcRv&)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9972$XcRv&)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9973$XcRv&)
                                                                                                                (if g$ls/false$9973$XcRv&
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9856$XcRv&
                                                                                                                              g$src$9916$XcRv&
                                                                                                                              g$y$9955$XcRv&
                                                                                                                              g$r$9918$XcRv&
                                                                                                                              g$maps$9919$XcRv&
                                                                                                                              g$ellipsis?$9920$XcRv&
                                                                                                                              g$vec?$9921$XcRv&)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9976$XcRv&
                                                                                                                              g$maps$9977$XcRv&)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9978$XcRv&
                                                                                                                                  g$y$9979$XcRv&)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9956$XcRv&
                                                                                                                                       g$maps$9978$XcRv&)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9982$XcRv&
                                                                                                                                       g$maps$9983$XcRv&)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9984$XcRv&
                                                                                                                                           g$x$9985$XcRv&)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9858$XcRv&
                                                                                                                                             g$x$9985$XcRv&
                                                                                                                                             g$y$9979$XcRv&)
                                                                                                                                           g$maps$9984$XcRv&)))
                                                                                                                                      g$maps$9983$XcRv&
                                                                                                                                      g$x$9982$XcRv&))))))
                                                                                                                             g$maps$9977$XcRv&
                                                                                                                             g$y$9976$XcRv&))))))
                                                                                                                    g$ls/false$9973$XcRv&)
                                                                                                                  (g$syntax-violation$8128$XcRv&
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9972$XcRv&))))
                                                                                                             (g$syntax-dispatch$8022$XcRv&
                                                                                                               g$t$9972$XcRv&
                                                                                                               '_))))
                                                                                                         g$t$9959$XcRv&))))
                                                                                                   (g$syntax-dispatch$8022$XcRv&
                                                                                                     g$t$9959$XcRv&
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9957$XcRv&))))
                                                                                         (g$syntax-dispatch$8022$XcRv&
                                                                                           g$t$9957$XcRv&
                                                                                           '()))))
                                                                                     g$y$9955$XcRv&)))))
                                                                        g$f$9954$XcRv&)
                                                                      g$y$9953$XcRv&
                                                                      (case-lambda
                                                                        ((g$maps$9986$XcRv&)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9856$XcRv&
                                                                                g$src$9916$XcRv&
                                                                                g$x$9951$XcRv&
                                                                                g$r$9918$XcRv&
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9986$XcRv&)
                                                                                g$ellipsis?$9920$XcRv&
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9989$XcRv&
                                                                                g$maps$9990$XcRv&)
                                                                              ((case-lambda
                                                                                 ((g$maps$9991$XcRv&
                                                                                    g$x$9992$XcRv&)
                                                                                  (if (null?
                                                                                        (car g$maps$9991$XcRv&))
                                                                                    (g$syntax-violation$8128$XcRv&
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9916$XcRv&)
                                                                                    (values
                                                                                      (g$gen-map$9860$XcRv&
                                                                                        g$x$9992$XcRv&
                                                                                        (car g$maps$9991$XcRv&))
                                                                                      (cdr g$maps$9991$XcRv&)))))
                                                                               g$maps$9990$XcRv&
                                                                               g$x$9989$XcRv&)))))))))
                                                                  g$ls/false$9947$XcRv&)
                                                                ((case-lambda
                                                                   ((g$t$9993$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9994$XcRv&)
                                                                        (if g$ls/false$9994$XcRv&
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9995$XcRv&
                                                                                 g$y$9996$XcRv&)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9856$XcRv&
                                                                                      g$src$9916$XcRv&
                                                                                      g$x$9995$XcRv&
                                                                                      g$r$9918$XcRv&
                                                                                      g$maps$9919$XcRv&
                                                                                      g$ellipsis?$9920$XcRv&
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9999$XcRv&
                                                                                      g$maps$10000$XcRv&)
                                                                                    ((case-lambda
                                                                                       ((g$maps$10001$XcRv&
                                                                                          g$xnew$10002$XcRv&)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9856$XcRv&
                                                                                               g$src$9916$XcRv&
                                                                                               g$y$9996$XcRv&
                                                                                               g$r$9918$XcRv&
                                                                                               g$maps$10001$XcRv&
                                                                                               g$ellipsis?$9920$XcRv&
                                                                                               g$vec?$9921$XcRv&)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$10005$XcRv&
                                                                                               g$maps$10006$XcRv&)
                                                                                             ((case-lambda
                                                                                                ((g$maps$10007$XcRv&
                                                                                                   g$ynew$10008$XcRv&)
                                                                                                 (values
                                                                                                   (g$gen-cons$9861$XcRv&
                                                                                                     g$e$9917$XcRv&
                                                                                                     g$x$9995$XcRv&
                                                                                                     g$y$9996$XcRv&
                                                                                                     g$xnew$10002$XcRv&
                                                                                                     g$ynew$10008$XcRv&)
                                                                                                   g$maps$10007$XcRv&)))
                                                                                              g$maps$10006$XcRv&
                                                                                              g$ynew$10005$XcRv&))))))
                                                                                     g$maps$10000$XcRv&
                                                                                     g$xnew$9999$XcRv&))))))
                                                                            g$ls/false$9994$XcRv&)
                                                                          ((case-lambda
                                                                             ((g$t$10009$XcRv&)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10010$XcRv&)
                                                                                  (if g$ls/false$10010$XcRv&
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$10011$XcRv&)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9856$XcRv&
                                                                                                g$src$9916$XcRv&
                                                                                                g$ls$10011$XcRv&
                                                                                                g$r$9918$XcRv&
                                                                                                g$maps$9919$XcRv&
                                                                                                g$ellipsis?$9920$XcRv&
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$10014$XcRv&
                                                                                                g$maps$10015$XcRv&)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$10016$XcRv&
                                                                                                    g$lsnew$10017$XcRv&)
                                                                                                  (values
                                                                                                    (g$gen-vector$9862$XcRv&
                                                                                                      g$e$9917$XcRv&
                                                                                                      g$ls$10011$XcRv&
                                                                                                      g$lsnew$10017$XcRv&)
                                                                                                    g$maps$10016$XcRv&)))
                                                                                               g$maps$10015$XcRv&
                                                                                               g$lsnew$10014$XcRv&))))))
                                                                                      g$ls/false$10010$XcRv&)
                                                                                    ((case-lambda
                                                                                       ((g$t$10018$XcRv&)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10019$XcRv&)
                                                                                            (if g$ls/false$10019$XcRv&
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9917$XcRv&)
                                                                                                     g$maps$9919$XcRv&)))
                                                                                                g$ls/false$10019$XcRv&)
                                                                                              (g$syntax-violation$8128$XcRv&
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$10018$XcRv&))))
                                                                                         (g$syntax-dispatch$8022$XcRv&
                                                                                           g$t$10018$XcRv&
                                                                                           '_))))
                                                                                     g$t$10009$XcRv&))))
                                                                               (g$syntax-dispatch$8022$XcRv&
                                                                                 g$t$10009$XcRv&
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9993$XcRv&))))
                                                                     (g$syntax-dispatch$8022$XcRv&
                                                                       g$t$9993$XcRv&
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9946$XcRv&))))
                                                           (g$syntax-dispatch$8022$XcRv&
                                                             g$t$9946$XcRv&
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9939$XcRv&))))
                                                 (g$syntax-dispatch$8022$XcRv&
                                                   g$t$9939$XcRv&
                                                   '(any any)))))
                                             g$t$9926$XcRv&))))
                                       (g$syntax-dispatch$8022$XcRv&
                                         g$t$9926$XcRv&
                                         'any))))
                                   g$t$9922$XcRv&))))
                             (g$syntax-dispatch$8022$XcRv&
                               g$t$9922$XcRv&
                               'any))))
                         g$e$9917$XcRv&))))
                   (g$gen-ref$9857$XcRv&
                     (case-lambda
                       ((g$src$9903$XcRv&
                          g$var$9904$XcRv&
                          g$level$9905$XcRv&
                          g$maps$9906$XcRv&)
                        (if (= g$level$9905$XcRv& '0)
                          (values g$var$9904$XcRv& g$maps$9906$XcRv&)
                          (if (null? g$maps$9906$XcRv&)
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9903$XcRv&)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9857$XcRv&
                                   g$src$9903$XcRv&
                                   g$var$9904$XcRv&
                                   (- g$level$9905$XcRv& '1)
                                   (cdr g$maps$9906$XcRv&))))
                              (case-lambda
                                ((g$outer-var$9909$XcRv&
                                   g$outer-maps$9910$XcRv&)
                                 ((case-lambda
                                    ((g$outer-maps$9911$XcRv&
                                       g$outer-var$9912$XcRv&)
                                     ((case-lambda
                                        ((g$t$9913$XcRv&)
                                         (if g$t$9913$XcRv&
                                           ((case-lambda
                                              ((g$b$9914$XcRv&)
                                               (values
                                                 (cdr g$b$9914$XcRv&)
                                                 g$maps$9906$XcRv&)))
                                            g$t$9913$XcRv&)
                                           ((case-lambda
                                              ((g$inner-var$9915$XcRv&)
                                               (values
                                                 g$inner-var$9915$XcRv&
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9912$XcRv&
                                                       g$inner-var$9915$XcRv&)
                                                     (car g$maps$9906$XcRv&))
                                                   g$outer-maps$9911$XcRv&))))
                                            (g$gen-lexical$7688$XcRv& 'tmp)))))
                                      (assq
                                        g$outer-var$9912$XcRv&
                                        (car g$maps$9906$XcRv&)))))
                                  g$outer-maps$9910$XcRv&
                                  g$outer-var$9909$XcRv&)))))))))
                   (g$gen-append$9858$XcRv&
                     (case-lambda
                       ((g$x$9901$XcRv& g$y$9902$XcRv&)
                        (if (equal? g$y$9902$XcRv& ''())
                          g$x$9901$XcRv&
                          (list 'append g$x$9901$XcRv& g$y$9902$XcRv&)))))
                   (g$gen-mappend$9859$XcRv&
                     (case-lambda
                       ((g$e$9899$XcRv& g$map-env$9900$XcRv&)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9860$XcRv&
                            g$e$9899$XcRv&
                            g$map-env$9900$XcRv&)))))
                   (g$gen-map$9860$XcRv&
                     (case-lambda
                       ((g$e$9890$XcRv& g$map-env$9891$XcRv&)
                        ((case-lambda
                           ((g$formals$9892$XcRv& g$actuals$9893$XcRv&)
                            (if (eq? (car g$e$9890$XcRv&) 'ref)
                              (car g$actuals$9893$XcRv&)
                              (if (g$for-all$6019$XcRv&
                                    (case-lambda
                                      ((g$x$9894$XcRv&)
                                       (if (eq? (car g$x$9894$XcRv&) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$5550$XcRv& g$x$9894$XcRv&)
                                             g$formals$9892$XcRv&))
                                         '#f)))
                                    (cdr g$e$9890$XcRv&))
                                ((case-lambda
                                   ((g$args$9895$XcRv&)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9890$XcRv&))
                                        g$args$9895$XcRv&))))
                                 (map ((case-lambda
                                         ((g$r$9896$XcRv&)
                                          (case-lambda
                                            ((g$x$9897$XcRv&)
                                             (cdr (assq
                                                    (g$cadr$5550$XcRv&
                                                      g$x$9897$XcRv&)
                                                    g$r$9896$XcRv&))))))
                                       (map cons
                                            g$formals$9892$XcRv&
                                            g$actuals$9893$XcRv&))
                                      (cdr g$e$9890$XcRv&)))
                                (g$cons*$6021$XcRv&
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9892$XcRv&
                                    g$e$9890$XcRv&)
                                  g$actuals$9893$XcRv&)))))
                         (map cdr g$map-env$9891$XcRv&)
                         (map (case-lambda
                                ((g$x$9898$XcRv&)
                                 (list 'ref (car g$x$9898$XcRv&))))
                              g$map-env$9891$XcRv&)))))
                   (g$gen-cons$9861$XcRv&
                     (case-lambda
                       ((g$e$9882$XcRv&
                          g$x$9883$XcRv&
                          g$y$9884$XcRv&
                          g$xnew$9885$XcRv&
                          g$ynew$9886$XcRv&)
                        ((case-lambda
                           ((g$t$9887$XcRv&)
                            (if (eqv? g$t$9887$XcRv& 'quote)
                              (if (eq? (car g$xnew$9885$XcRv&) 'quote)
                                ((case-lambda
                                   ((g$xnew$9888$XcRv& g$ynew$9889$XcRv&)
                                    (if (if (eq? g$xnew$9888$XcRv&
                                                 g$x$9883$XcRv&)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9889$XcRv&
                                                 g$y$9884$XcRv&))
                                          '#f)
                                      (list 'quote g$e$9882$XcRv&)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9888$XcRv&
                                          g$ynew$9889$XcRv&)))))
                                 (g$cadr$5550$XcRv& g$xnew$9885$XcRv&)
                                 (g$cadr$5550$XcRv& g$ynew$9886$XcRv&))
                                (if (null?
                                      (g$cadr$5550$XcRv& g$ynew$9886$XcRv&))
                                  (list 'list g$xnew$9885$XcRv&)
                                  (list
                                    'cons
                                    g$xnew$9885$XcRv&
                                    g$ynew$9886$XcRv&)))
                              (if (eqv? g$t$9887$XcRv& 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9885$XcRv&
                                    (cdr g$ynew$9886$XcRv&)))
                                (list
                                  'cons
                                  g$xnew$9885$XcRv&
                                  g$ynew$9886$XcRv&)))))
                         (car g$ynew$9886$XcRv&)))))
                   (g$gen-vector$9862$XcRv&
                     (case-lambda
                       ((g$e$9879$XcRv& g$ls$9880$XcRv& g$lsnew$9881$XcRv&)
                        (if (eq? (car g$lsnew$9881$XcRv&) 'quote)
                          (if (eq? (g$cadr$5550$XcRv& g$lsnew$9881$XcRv&)
                                   g$ls$9880$XcRv&)
                            (list 'quote g$e$9879$XcRv&)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5550$XcRv& g$lsnew$9881$XcRv&))))
                          (if (eq? (car g$lsnew$9881$XcRv&) 'list)
                            (cons 'vector (cdr g$lsnew$9881$XcRv&))
                            (list 'list->vector g$lsnew$9881$XcRv&))))))
                   (g$regen$9863$XcRv&
                     (case-lambda
                       ((g$x$9876$XcRv&)
                        ((case-lambda
                           ((g$t$9877$XcRv&)
                            (if (eqv? g$t$9877$XcRv& 'ref)
                              (g$cadr$5550$XcRv& g$x$9876$XcRv&)
                              (if (eqv? g$t$9877$XcRv& 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$5550$XcRv& g$x$9876$XcRv&))
                                (if (eqv? g$t$9877$XcRv& 'quote)
                                  (list
                                    'quote
                                    (g$cadr$5550$XcRv& g$x$9876$XcRv&))
                                  (if (eqv? g$t$9877$XcRv& 'lambda)
                                    (g$build-lambda$7675$XcRv&
                                      '#f
                                      (g$cadr$5550$XcRv& g$x$9876$XcRv&)
                                      (g$regen$9863$XcRv&
                                        (g$caddr$5556$XcRv& g$x$9876$XcRv&)))
                                    (if (eqv? g$t$9877$XcRv& 'map)
                                      ((case-lambda
                                         ((g$ls$9878$XcRv&)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9878$XcRv&)))
                                       (map g$regen$9863$XcRv&
                                            (cdr g$x$9876$XcRv&)))
                                      (cons
                                        (list 'primitive (car g$x$9876$XcRv&))
                                        (map g$regen$9863$XcRv&
                                             (cdr g$x$9876$XcRv&))))))))))
                         (car g$x$9876$XcRv&))))))
           (case-lambda
             ((g$e$9864$XcRv& g$r$9865$XcRv& g$mr$9866$XcRv&)
              ((case-lambda
                 ((g$t$9867$XcRv&)
                  ((case-lambda
                     ((g$ls/false$9868$XcRv&)
                      (if g$ls/false$9868$XcRv&
                        (apply
                          (case-lambda
                            ((g$x$9869$XcRv&)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9856$XcRv&
                                    g$e$9864$XcRv&
                                    g$x$9869$XcRv&
                                    g$r$9865$XcRv&
                                    '()
                                    g$ellipsis?$8023$XcRv&
                                    '#f)))
                               (case-lambda
                                 ((g$e$9872$XcRv& g$maps$9873$XcRv&)
                                  ((case-lambda
                                     ((g$maps$9874$XcRv& g$e$9875$XcRv&)
                                      (g$regen$9863$XcRv& g$e$9875$XcRv&)))
                                   g$maps$9873$XcRv&
                                   g$e$9872$XcRv&))))))
                          g$ls/false$9868$XcRv&)
                        (g$syntax-violation$8128$XcRv&
                          '#f
                          '"invalid syntax"
                          g$t$9867$XcRv&))))
                   (g$syntax-dispatch$8022$XcRv& g$t$9867$XcRv& '(_ any)))))
               g$e$9864$XcRv&))))))))
   (g$core-macro-transformer$8029$XcRv&
     g$core-macro-transformer$11479$XcRv&
     (case-lambda
       ((g$name$10020$XcRv&)
        ((case-lambda
           ((g$t$10021$XcRv&)
            (if (eqv? g$t$10021$XcRv& 'quote)
              g$quote-transformer$7982$XcRv&
              (if (eqv? g$t$10021$XcRv& 'lambda)
                g$lambda-transformer$7984$XcRv&
                (if (eqv? g$t$10021$XcRv& 'case-lambda)
                  g$case-lambda-transformer$7983$XcRv&
                  (if (eqv? g$t$10021$XcRv& 'letrec)
                    g$letrec-transformer$7972$XcRv&
                    (if (eqv? g$t$10021$XcRv& 'letrec*)
                      g$letrec*-transformer$7973$XcRv&
                      (if (eqv? g$t$10021$XcRv& 'case)
                        g$case-transformer$7981$XcRv&
                        (if (eqv? g$t$10021$XcRv& 'if)
                          g$if-transformer$7980$XcRv&
                          (if (eqv? g$t$10021$XcRv& 'when)
                            g$when-transformer$7978$XcRv&
                            (if (eqv? g$t$10021$XcRv& 'unless)
                              g$unless-transformer$7979$XcRv&
                              (if (eqv? g$t$10021$XcRv& 'parameterize)
                                g$parameterize-transformer$8019$XcRv&
                                (if (eqv? g$t$10021$XcRv& 'foreign-call)
                                  g$foreign-call-transformer$8020$XcRv&
                                  (if (eqv? g$t$10021$XcRv& 'syntax-case)
                                    g$syntax-case-transformer$8026$XcRv&
                                    (if (eqv? g$t$10021$XcRv& 'syntax)
                                      g$syntax-transformer$8028$XcRv&
                                      (if (eqv?
                                            g$t$10021$XcRv&
                                            'type-descriptor)
                                        g$type-descriptor-transformer$7975$XcRv&
                                        (if (eqv?
                                              g$t$10021$XcRv&
                                              'record-type-descriptor)
                                          g$record-type-descriptor-transformer$7976$XcRv&
                                          (if (eqv?
                                                g$t$10021$XcRv&
                                                'record-constructor-descriptor)
                                            g$record-constructor-descriptor-transformer$7977$XcRv&
                                            (if (eqv?
                                                  g$t$10021$XcRv&
                                                  'fluid-let-syntax)
                                              g$fluid-let-syntax-transformer$7974$XcRv&
                                              (assertion-violation
                                                'macro-transformer
                                                '"BUG: cannot find transformer"
                                                g$name$10020$XcRv&))))))))))))))))))))
         g$name$10020$XcRv&))))
   (g$file-options-macro$8030$XcRv&
     g$file-options-macro$11480$XcRv&
     (case-lambda
       ((g$x$10022$XcRv&)
        ((case-lambda
           ((g$t$10023$XcRv&)
            ((case-lambda
               ((g$ls/false$10024$XcRv&)
                (if (if g$ls/false$10024$XcRv&
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$opt*$10025$XcRv&)
                             (if (g$for-all$6019$XcRv&
                                   g$id?$7744$XcRv&
                                   g$opt*$10025$XcRv&)
                               (begin
                                 '#f
                                 (g$file-options-spec$7013$XcRv&
                                   (map g$id->sym$7745$XcRv&
                                        g$opt*$10025$XcRv&)))
                               '#f)))
                          g$ls/false$10024$XcRv&))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$opt*$10026$XcRv&)
                       (g$bless$7985$XcRv&
                         (list
                           'quote
                           (g$file-options-spec$7013$XcRv&
                             (map g$id->sym$7745$XcRv& g$opt*$10026$XcRv&))))))
                    g$ls/false$10024$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$10023$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$10023$XcRv& '(_ . each-any)))))
         g$x$10022$XcRv&))))
   (g$symbol-macro$8031$XcRv&
     g$symbol-macro$11481$XcRv&
     (case-lambda
       ((g$x$10027$XcRv& g$set$10028$XcRv&)
        ((case-lambda
           ((g$t$10029$XcRv&)
            ((case-lambda
               ((g$ls/false$10030$XcRv&)
                (if (if g$ls/false$10030$XcRv&
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$10031$XcRv&)
                             (if (g$id?$7744$XcRv& g$name$10031$XcRv&)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7745$XcRv& g$name$10031$XcRv&)
                                   g$set$10028$XcRv&))
                               '#f)))
                          g$ls/false$10030$XcRv&))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$10032$XcRv&)
                       (g$bless$7985$XcRv& (list 'quote g$name$10032$XcRv&))))
                    g$ls/false$10030$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$10029$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$10029$XcRv& '(_ any)))))
         g$x$10027$XcRv&))))
   (g$macro-transformer$8032$XcRv&
     g$macro-transformer$11482$XcRv&
     (case-lambda
       ((g$x$10033$XcRv&)
        (if (procedure? g$x$10033$XcRv&)
          g$x$10033$XcRv&
          (if (symbol? g$x$10033$XcRv&)
            ((case-lambda
               ((g$t$10034$XcRv&)
                (if (eqv? g$t$10034$XcRv& 'define-record-type)
                  g$define-record-type-macro$8016$XcRv&
                  (if (eqv? g$t$10034$XcRv& 'define-struct)
                    g$define-struct-macro$8015$XcRv&
                    (if (eqv? g$t$10034$XcRv& 'include)
                      g$include-macro$8010$XcRv&
                      (if (eqv? g$t$10034$XcRv& 'cond)
                        g$cond-macro$8008$XcRv&
                        (if (eqv? g$t$10034$XcRv& 'let)
                          g$let-macro$7988$XcRv&
                          (if (eqv? g$t$10034$XcRv& 'do)
                            g$do-macro$8004$XcRv&
                            (if (eqv? g$t$10034$XcRv& 'or)
                              g$or-macro$8006$XcRv&
                              (if (eqv? g$t$10034$XcRv& 'and)
                                g$and-macro$8007$XcRv&
                                (if (eqv? g$t$10034$XcRv& 'let*)
                                  g$let*-macro$8005$XcRv&
                                  (if (eqv? g$t$10034$XcRv& 'let-values)
                                    g$let-values-macro$7989$XcRv&
                                    (if (eqv? g$t$10034$XcRv& 'let*-values)
                                      g$let*-values-macro$7990$XcRv&
                                      (if (eqv? g$t$10034$XcRv& 'syntax-rules)
                                        g$syntax-rules-macro$8012$XcRv&
                                        (if (eqv? g$t$10034$XcRv& 'quasiquote)
                                          g$quasiquote-macro$8013$XcRv&
                                          (if (eqv?
                                                g$t$10034$XcRv&
                                                'quasisyntax)
                                            g$quasisyntax-macro$8014$XcRv&
                                            (if (eqv?
                                                  g$t$10034$XcRv&
                                                  'with-syntax)
                                              g$with-syntax-macro$7986$XcRv&
                                              (if (eqv?
                                                    g$t$10034$XcRv&
                                                    'identifier-syntax)
                                                g$identifier-syntax-macro$8003$XcRv&
                                                (if (eqv? g$t$10034$XcRv& 'time)
                                                  g$time-macro$7999$XcRv&
                                                  (if (eqv?
                                                        g$t$10034$XcRv&
                                                        'delay)
                                                    g$delay-macro$8000$XcRv&
                                                    (if (eqv?
                                                          g$t$10034$XcRv&
                                                          'assert)
                                                      g$assert-macro$8001$XcRv&
                                                      (if (eqv?
                                                            g$t$10034$XcRv&
                                                            'endianness)
                                                        g$endianness-macro$8002$XcRv&
                                                        (if (eqv?
                                                              g$t$10034$XcRv&
                                                              'guard)
                                                          g$guard-macro$7997$XcRv&
                                                          (if (eqv?
                                                                g$t$10034$XcRv&
                                                                'define-enumeration)
                                                            g$define-enumeration-macro$7998$XcRv&
                                                            (if (eqv?
                                                                  g$t$10034$XcRv&
                                                                  'trace-lambda)
                                                              g$trace-lambda-macro$7991$XcRv&
                                                              (if (eqv?
                                                                    g$t$10034$XcRv&
                                                                    'trace-define)
                                                                g$trace-define-macro$7992$XcRv&
                                                                (if (eqv?
                                                                      g$t$10034$XcRv&
                                                                      'trace-define-syntax)
                                                                  g$trace-define-syntax-macro$7993$XcRv&
                                                                  (if (eqv?
                                                                        g$t$10034$XcRv&
                                                                        'trace-let-syntax)
                                                                    g$trace-let-syntax-macro$7995$XcRv&
                                                                    (if (eqv?
                                                                          g$t$10034$XcRv&
                                                                          'trace-letrec-syntax)
                                                                      g$trace-letrec-syntax-macro$7996$XcRv&
                                                                      (if (eqv?
                                                                            g$t$10034$XcRv&
                                                                            'define-condition-type)
                                                                        g$define-condition-type-macro$8017$XcRv&
                                                                        (if (eqv?
                                                                              g$t$10034$XcRv&
                                                                              'include-into)
                                                                          g$include-into-macro$8011$XcRv&
                                                                          (if (eqv?
                                                                                g$t$10034$XcRv&
                                                                                'eol-style)
                                                                            (case-lambda
                                                                              ((g$x$10037$XcRv&)
                                                                               (g$symbol-macro$8031$XcRv&
                                                                                 g$x$10037$XcRv&
                                                                                 '(none
                                                                                    lf
                                                                                    cr
                                                                                    crlf
                                                                                    nel
                                                                                    crnel
                                                                                    ls))))
                                                                            (if (eqv?
                                                                                  g$t$10034$XcRv&
                                                                                  'error-handling-mode)
                                                                              (case-lambda
                                                                                ((g$x$10036$XcRv&)
                                                                                 (g$symbol-macro$8031$XcRv&
                                                                                   g$x$10036$XcRv&
                                                                                   '(ignore
                                                                                      raise
                                                                                      replace))))
                                                                              (if (eqv?
                                                                                    g$t$10034$XcRv&
                                                                                    'buffer-mode)
                                                                                (case-lambda
                                                                                  ((g$x$10035$XcRv&)
                                                                                   (g$symbol-macro$8031$XcRv&
                                                                                     g$x$10035$XcRv&
                                                                                     '(none
                                                                                        line
                                                                                        block))))
                                                                                (if (eqv?
                                                                                      g$t$10034$XcRv&
                                                                                      'file-options)
                                                                                  g$file-options-macro$8030$XcRv&
                                                                                  (if (memv
                                                                                        g$t$10034$XcRv&
                                                                                        '(... =>
                                                                                              _
                                                                                              else
                                                                                              unquote
                                                                                              unquote-splicing
                                                                                              unsyntax
                                                                                              unsyntax-splicing
                                                                                              fields
                                                                                              mutable
                                                                                              immutable
                                                                                              parent
                                                                                              protocol
                                                                                              sealed
                                                                                              opaque
                                                                                              nongenerative
                                                                                              parent-rtd))
                                                                                    g$incorrect-usage-macro$8018$XcRv&
                                                                                    (error
                                                                                      'macro-transformer
                                                                                      '"BUG: invalid macro"
                                                                                      g$x$10033$XcRv&)))))))))))))))))))))))))))))))))))))
             g$x$10033$XcRv&)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$10033$XcRv&))))))
   (g$local-macro-transformer$8033$XcRv&
     g$local-macro-transformer$11483$XcRv&
     (case-lambda ((g$x$10038$XcRv&) (car g$x$10038$XcRv&))))
   (g$do-macro-call$8034$XcRv&
     g$do-macro-call$11484$XcRv&
     (case-lambda
       ((g$transformer$10039$XcRv& g$expr$10040$XcRv&)
        ((case-lambda
           ((g$out$10041$XcRv&)
            (begin
              ((letrec ((g$f$10042$XcRv&
                          (case-lambda
                            ((g$x$10043$XcRv&)
                             (if (g$stx?$7716$XcRv& g$x$10043$XcRv&)
                               (void)
                               (if (pair? g$x$10043$XcRv&)
                                 (begin
                                   (g$f$10042$XcRv& (car g$x$10043$XcRv&))
                                   (g$f$10042$XcRv& (cdr g$x$10043$XcRv&)))
                                 (if (vector? g$x$10043$XcRv&)
                                   (vector-for-each
                                     g$f$10042$XcRv&
                                     g$x$10043$XcRv&)
                                   (if (symbol? g$x$10043$XcRv&)
                                     (g$syntax-violation$8128$XcRv&
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$10040$XcRv&
                                       g$x$10043$XcRv&)
                                     (void)))))))))
                 g$f$10042$XcRv&)
               g$out$10041$XcRv&)
              (g$add-mark$7733$XcRv&
                (g$gen-mark$7728$XcRv&)
                g$out$10041$XcRv&
                g$expr$10040$XcRv&))))
         (g$transformer$10039$XcRv&
           (g$add-mark$7733$XcRv&
             g$anti-mark$7729$XcRv&
             g$expr$10040$XcRv&
             '#f))))))
   (g$chi-macro$8035$XcRv&
     g$chi-macro$11485$XcRv&
     (case-lambda
       ((g$p$10044$XcRv& g$e$10045$XcRv&)
        (g$do-macro-call$8034$XcRv&
          (g$macro-transformer$8032$XcRv& g$p$10044$XcRv&)
          g$e$10045$XcRv&))))
   (g$chi-local-macro$8036$XcRv&
     g$chi-local-macro$11486$XcRv&
     (case-lambda
       ((g$p$10046$XcRv& g$e$10047$XcRv&)
        (g$do-macro-call$8034$XcRv&
          (g$local-macro-transformer$8033$XcRv& g$p$10046$XcRv&)
          g$e$10047$XcRv&))))
   (g$chi-global-macro$8037$XcRv&
     g$chi-global-macro$11487$XcRv&
     (case-lambda
       ((g$p$10048$XcRv& g$e$10049$XcRv&)
        ((case-lambda
           ((g$lib$10050$XcRv& g$loc$10051$XcRv&)
            (begin
              (g$visit-library$7560$XcRv& g$lib$10050$XcRv&)
              ((case-lambda
                 ((g$x$10052$XcRv&)
                  ((case-lambda
                     ((g$transformer$10053$XcRv&)
                      (g$do-macro-call$8034$XcRv&
                        g$transformer$10053$XcRv&
                        g$e$10049$XcRv&)))
                   (if (procedure? g$x$10052$XcRv&)
                     g$x$10052$XcRv&
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$10052$XcRv&)))))
               (symbol-value g$loc$10051$XcRv&)))))
         (car g$p$10048$XcRv&)
         (cdr g$p$10048$XcRv&)))))
   (g$chi-expr*$8038$XcRv&
     g$chi-expr*$11488$XcRv&
     (case-lambda
       ((g$e*$10054$XcRv& g$r$10055$XcRv& g$mr$10056$XcRv&)
        (if (null? g$e*$10054$XcRv&)
          '()
          ((case-lambda
             ((g$e$10057$XcRv&)
              (cons
                g$e$10057$XcRv&
                (g$chi-expr*$8038$XcRv&
                  (cdr g$e*$10054$XcRv&)
                  g$r$10055$XcRv&
                  g$mr$10056$XcRv&))))
           (g$chi-expr$8040$XcRv&
             (car g$e*$10054$XcRv&)
             g$r$10055$XcRv&
             g$mr$10056$XcRv&))))))
   (g$chi-application$8039$XcRv&
     g$chi-application$11489$XcRv&
     (case-lambda
       ((g$e$10058$XcRv& g$r$10059$XcRv& g$mr$10060$XcRv&)
        ((case-lambda
           ((g$t$10061$XcRv&)
            ((case-lambda
               ((g$ls/false$10062$XcRv&)
                (if g$ls/false$10062$XcRv&
                  (apply
                    (case-lambda
                      ((g$rator$10063$XcRv& g$rands$10064$XcRv&)
                       ((case-lambda
                          ((g$rator$10065$XcRv&)
                           (cons
                             g$rator$10065$XcRv&
                             (g$chi-expr*$8038$XcRv&
                               g$rands$10064$XcRv&
                               g$r$10059$XcRv&
                               g$mr$10060$XcRv&))))
                        (g$chi-expr$8040$XcRv&
                          g$rator$10063$XcRv&
                          g$r$10059$XcRv&
                          g$mr$10060$XcRv&))))
                    g$ls/false$10062$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$10061$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$10061$XcRv& '(any . each-any)))))
         g$e$10058$XcRv&))))
   (g$chi-expr$8040$XcRv&
     g$chi-expr$11490$XcRv&
     (case-lambda
       ((g$e$10066$XcRv& g$r$10067$XcRv& g$mr$10068$XcRv&)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7764$XcRv& g$e$10066$XcRv& g$r$10067$XcRv&)))
          (case-lambda
            ((g$type$10072$XcRv& g$value$10073$XcRv& g$kwd$10074$XcRv&)
             ((case-lambda
                ((g$kwd$10075$XcRv& g$value$10076$XcRv& g$type$10077$XcRv&)
                 ((case-lambda
                    ((g$t$10078$XcRv&)
                     (if (eqv? g$t$10078$XcRv& 'core-macro)
                       ((case-lambda
                          ((g$transformer$10104$XcRv&)
                           (g$transformer$10104$XcRv&
                             g$e$10066$XcRv&
                             g$r$10067$XcRv&
                             g$mr$10068$XcRv&)))
                        (g$core-macro-transformer$8029$XcRv&
                          g$value$10076$XcRv&))
                       (if (eqv? g$t$10078$XcRv& 'global)
                         ((case-lambda
                            ((g$lib$10102$XcRv&)
                             ((case-lambda
                                ((g$loc$10103$XcRv&)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$8074$XcRv&)
                                        g$lib$10102$XcRv&)
                                       g$loc$10103$XcRv&))))))
                              (cdr g$value$10076$XcRv&))))
                          (car g$value$10076$XcRv&))
                         (if (eqv? g$t$10078$XcRv& 'core-prim)
                           ((case-lambda
                              ((g$name$10101$XcRv&)
                               (list 'primitive g$name$10101$XcRv&)))
                            g$value$10076$XcRv&)
                           (if (eqv? g$t$10078$XcRv& 'call)
                             (g$chi-application$8039$XcRv&
                               g$e$10066$XcRv&
                               g$r$10067$XcRv&
                               g$mr$10068$XcRv&)
                             (if (eqv? g$t$10078$XcRv& 'lexical)
                               ((case-lambda
                                  ((g$lex$10100$XcRv&) g$lex$10100$XcRv&))
                                (g$lexical-var$7966$XcRv& g$value$10076$XcRv&))
                               (if (memv
                                     g$t$10078$XcRv&
                                     '(global-macro global-macro!))
                                 (g$chi-expr$8040$XcRv&
                                   (g$chi-global-macro$8037$XcRv&
                                     g$value$10076$XcRv&
                                     g$e$10066$XcRv&)
                                   g$r$10067$XcRv&
                                   g$mr$10068$XcRv&)
                                 (if (memv
                                       g$t$10078$XcRv&
                                       '(local-macro local-macro!))
                                   (g$chi-expr$8040$XcRv&
                                     (g$chi-local-macro$8036$XcRv&
                                       g$value$10076$XcRv&
                                       g$e$10066$XcRv&)
                                     g$r$10067$XcRv&
                                     g$mr$10068$XcRv&)
                                   (if (memv g$t$10078$XcRv& '(macro macro!))
                                     (g$chi-expr$8040$XcRv&
                                       (g$chi-macro$8035$XcRv&
                                         g$value$10076$XcRv&
                                         g$e$10066$XcRv&)
                                       g$r$10067$XcRv&
                                       g$mr$10068$XcRv&)
                                     (if (eqv? g$t$10078$XcRv& 'constant)
                                       ((case-lambda
                                          ((g$datum$10099$XcRv&)
                                           (list 'quote g$datum$10099$XcRv&)))
                                        g$value$10076$XcRv&)
                                       (if (eqv? g$t$10078$XcRv& 'set!)
                                         (g$chi-set!$8041$XcRv&
                                           g$e$10066$XcRv&
                                           g$r$10067$XcRv&
                                           g$mr$10068$XcRv&)
                                         (if (eqv? g$t$10078$XcRv& 'begin)
                                           ((case-lambda
                                              ((g$t$10095$XcRv&)
                                               ((case-lambda
                                                  ((g$ls/false$10096$XcRv&)
                                                   (if g$ls/false$10096$XcRv&
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$10097$XcRv&
                                                            g$x*$10098$XcRv&)
                                                          (g$build-sequence$7678$XcRv&
                                                            '#f
                                                            (g$chi-expr*$8038$XcRv&
                                                              (cons
                                                                g$x$10097$XcRv&
                                                                g$x*$10098$XcRv&)
                                                              g$r$10067$XcRv&
                                                              g$mr$10068$XcRv&))))
                                                       g$ls/false$10096$XcRv&)
                                                     (g$syntax-violation$8128$XcRv&
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$10095$XcRv&))))
                                                (g$syntax-dispatch$8022$XcRv&
                                                  g$t$10095$XcRv&
                                                  '(_ any . each-any)))))
                                            g$e$10066$XcRv&)
                                           (if (memv
                                                 g$t$10078$XcRv&
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$10080$XcRv&)
                                                 ((case-lambda
                                                    ((g$ls/false$10081$XcRv&)
                                                     (if (if g$ls/false$10081$XcRv&
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$10082$XcRv&
                                                                    g$xrhs*$10083$XcRv&
                                                                    g$xbody$10084$XcRv&
                                                                    g$xbody*$10085$XcRv&)
                                                                  (if (g$valid-bound-ids?$7749$XcRv&
                                                                        g$xlhs*$10082$XcRv&)
                                                                    (void)
                                                                    (g$syntax-violation$8128$XcRv&
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$10066$XcRv&))))
                                                               g$ls/false$10081$XcRv&))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$10086$XcRv&
                                                              g$xrhs*$10087$XcRv&
                                                              g$xbody$10088$XcRv&
                                                              g$xbody*$10089$XcRv&)
                                                            ((case-lambda
                                                               ((g$xlab*$10090$XcRv&)
                                                                ((case-lambda
                                                                   ((g$xrib$10091$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$xb*$10092$XcRv&)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7678$XcRv&
                                                                              '#f
                                                                              (g$chi-expr*$8038$XcRv&
                                                                                (map (case-lambda
                                                                                       ((g$x$10093$XcRv&)
                                                                                        (g$add-subst$7734$XcRv&
                                                                                          g$xrib$10091$XcRv&
                                                                                          g$x$10093$XcRv&)))
                                                                                     (cons
                                                                                       g$xbody$10088$XcRv&
                                                                                       g$xbody*$10089$XcRv&))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$10090$XcRv&
                                                                                       g$xb*$10092$XcRv&)
                                                                                  g$r$10067$XcRv&)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$10090$XcRv&
                                                                                       g$xb*$10092$XcRv&)
                                                                                  g$mr$10068$XcRv&))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$10094$XcRv&)
                                                                             (g$make-eval-transformer$7776$XcRv&
                                                                               (g$expand-transformer$8067$XcRv&
                                                                                 (if (eq? g$type$10077$XcRv&
                                                                                          'let-syntax)
                                                                                   g$x$10094$XcRv&
                                                                                   (g$add-subst$7734$XcRv&
                                                                                     g$xrib$10091$XcRv&
                                                                                     g$x$10094$XcRv&))
                                                                                 g$mr$10068$XcRv&))))
                                                                          g$xrhs*$10087$XcRv&))))
                                                                 (g$make-full-rib$7712$XcRv&
                                                                   g$xlhs*$10086$XcRv&
                                                                   g$xlab*$10090$XcRv&))))
                                                             (map g$gen-label$7690$XcRv&
                                                                  g$xlhs*$10086$XcRv&))))
                                                         g$ls/false$10081$XcRv&)
                                                       (g$syntax-violation$8128$XcRv&
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$10080$XcRv&))))
                                                  (g$syntax-dispatch$8022$XcRv&
                                                    g$t$10080$XcRv&
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$10066$XcRv&)
                                             (if (eqv?
                                                   g$t$10078$XcRv&
                                                   'displaced-lexical)
                                               (g$syntax-violation$8128$XcRv&
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$10066$XcRv&)
                                               (if (eqv?
                                                     g$t$10078$XcRv&
                                                     'syntax)
                                                 (g$syntax-violation$8128$XcRv&
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$10066$XcRv&)
                                                 (if (memv
                                                       g$t$10078$XcRv&
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$8128$XcRv&
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$10079$XcRv&)
                                                           (if (eqv?
                                                                 g$t$10079$XcRv&
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$10079$XcRv&
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$10079$XcRv&
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$10079$XcRv&
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$10079$XcRv&
                                                                         'import)
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$10077$XcRv&)
                                                       '" was found where an expression was expected")
                                                     g$e$10066$XcRv&)
                                                   (if (eqv?
                                                         g$t$10078$XcRv&
                                                         'mutable)
                                                     (g$syntax-violation$8128$XcRv&
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$10066$XcRv&)
                                                     (g$syntax-violation$8128$XcRv&
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$10066$XcRv&)))))))))))))))))))
                  g$type$10077$XcRv&)))
              g$kwd$10074$XcRv&
              g$value$10073$XcRv&
              g$type$10072$XcRv&)))))))
   (g$chi-set!$8041$XcRv&
     g$chi-set!$11491$XcRv&
     (case-lambda
       ((g$e$10105$XcRv& g$r$10106$XcRv& g$mr$10107$XcRv&)
        ((case-lambda
           ((g$t$10108$XcRv&)
            ((case-lambda
               ((g$ls/false$10109$XcRv&)
                (if (if g$ls/false$10109$XcRv&
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$10110$XcRv& g$v$10111$XcRv&)
                             (g$id?$7744$XcRv& g$x$10110$XcRv&)))
                          g$ls/false$10109$XcRv&))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$10112$XcRv& g$v$10113$XcRv&)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7764$XcRv&
                              g$x$10112$XcRv&
                              g$r$10106$XcRv&)))
                         (case-lambda
                           ((g$type$10117$XcRv&
                              g$value$10118$XcRv&
                              g$kwd$10119$XcRv&)
                            ((case-lambda
                               ((g$kwd$10120$XcRv&
                                  g$value$10121$XcRv&
                                  g$type$10122$XcRv&)
                                ((case-lambda
                                   ((g$t$10123$XcRv&)
                                    (if (eqv? g$t$10123$XcRv& 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$7968$XcRv&
                                          g$value$10121$XcRv&
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7966$XcRv&
                                            g$value$10121$XcRv&)
                                          (g$chi-expr$8040$XcRv&
                                            g$v$10113$XcRv&
                                            g$r$10106$XcRv&
                                            g$mr$10107$XcRv&)))
                                      (if (eqv? g$t$10123$XcRv& 'core-prim)
                                        (g$syntax-violation$8128$XcRv&
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$10105$XcRv&)
                                        (if (eqv? g$t$10123$XcRv& 'global)
                                          (g$syntax-violation$8128$XcRv&
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$10105$XcRv&)
                                          (if (eqv?
                                                g$t$10123$XcRv&
                                                'global-macro!)
                                            (g$chi-expr$8040$XcRv&
                                              (g$chi-global-macro$8037$XcRv&
                                                g$value$10121$XcRv&
                                                g$e$10105$XcRv&)
                                              g$r$10106$XcRv&
                                              g$mr$10107$XcRv&)
                                            (if (eqv?
                                                  g$t$10123$XcRv&
                                                  'local-macro!)
                                              (g$chi-expr$8040$XcRv&
                                                (g$chi-local-macro$8036$XcRv&
                                                  g$value$10121$XcRv&
                                                  g$e$10105$XcRv&)
                                                g$r$10106$XcRv&
                                                g$mr$10107$XcRv&)
                                              (if (eqv?
                                                    g$t$10123$XcRv&
                                                    'mutable)
                                                (g$syntax-violation$8128$XcRv&
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$10105$XcRv&)
                                                (g$syntax-violation$8128$XcRv&
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$10105$XcRv&)))))))))
                                 g$type$10122$XcRv&)))
                             g$kwd$10119$XcRv&
                             g$value$10118$XcRv&
                             g$type$10117$XcRv&))))))
                    g$ls/false$10109$XcRv&)
                  (g$syntax-violation$8128$XcRv&
                    '#f
                    '"invalid syntax"
                    g$t$10108$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$10108$XcRv& '(_ any any)))))
         g$e$10105$XcRv&))))
   (g$verify-formals$8042$XcRv&
     g$verify-formals$11492$XcRv&
     (case-lambda
       ((g$fmls$10124$XcRv& g$stx$10125$XcRv&)
        ((case-lambda
           ((g$t$10126$XcRv&)
            ((case-lambda
               ((g$ls/false$10127$XcRv&)
                (if g$ls/false$10127$XcRv&
                  (apply
                    (case-lambda
                      ((g$x*$10128$XcRv&)
                       (if (g$valid-bound-ids?$7749$XcRv& g$x*$10128$XcRv&)
                         (void)
                         (g$invalid-fmls-error$7987$XcRv&
                           g$stx$10125$XcRv&
                           g$fmls$10124$XcRv&))))
                    g$ls/false$10127$XcRv&)
                  ((case-lambda
                     ((g$t$10129$XcRv&)
                      ((case-lambda
                         ((g$ls/false$10130$XcRv&)
                          (if g$ls/false$10130$XcRv&
                            (apply
                              (case-lambda
                                ((g$x*$10131$XcRv& g$x$10132$XcRv&)
                                 (if (g$valid-bound-ids?$7749$XcRv&
                                       (cons g$x$10132$XcRv& g$x*$10131$XcRv&))
                                   (void)
                                   (g$invalid-fmls-error$7987$XcRv&
                                     g$stx$10125$XcRv&
                                     g$fmls$10124$XcRv&))))
                              g$ls/false$10130$XcRv&)
                            ((case-lambda
                               ((g$t$10133$XcRv&)
                                ((case-lambda
                                   ((g$ls/false$10134$XcRv&)
                                    (if g$ls/false$10134$XcRv&
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"invalid syntax"
                                             g$stx$10125$XcRv&)))
                                        g$ls/false$10134$XcRv&)
                                      (g$syntax-violation$8128$XcRv&
                                        '#f
                                        '"invalid syntax"
                                        g$t$10133$XcRv&))))
                                 (g$syntax-dispatch$8022$XcRv&
                                   g$t$10133$XcRv&
                                   '_))))
                             g$t$10129$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$10129$XcRv&
                         '#(each+ any () any)))))
                   g$t$10126$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$10126$XcRv& 'each-any))))
         g$fmls$10124$XcRv&))))
   (g$chi-lambda-clause$8043$XcRv&
     g$chi-lambda-clause$11493$XcRv&
     (case-lambda
       ((g$stx$10135$XcRv&
          g$fmls$10136$XcRv&
          g$body*$10137$XcRv&
          g$r$10138$XcRv&
          g$mr$10139$XcRv&)
        ((case-lambda
           ((g$t$10140$XcRv&)
            ((case-lambda
               ((g$ls/false$10141$XcRv&)
                (if g$ls/false$10141$XcRv&
                  (apply
                    (case-lambda
                      ((g$x*$10142$XcRv&)
                       (begin
                         (g$verify-formals$8042$XcRv&
                           g$fmls$10136$XcRv&
                           g$stx$10135$XcRv&)
                         ((case-lambda
                            ((g$lex*$10143$XcRv& g$lab*$10144$XcRv&)
                             (values
                               g$lex*$10143$XcRv&
                               (g$chi-internal$8051$XcRv&
                                 (g$add-subst$7734$XcRv&
                                   (g$make-full-rib$7712$XcRv&
                                     g$x*$10142$XcRv&
                                     g$lab*$10144$XcRv&)
                                   g$body*$10137$XcRv&)
                                 (g$add-lexicals$7970$XcRv&
                                   g$lab*$10144$XcRv&
                                   g$lex*$10143$XcRv&
                                   g$r$10138$XcRv&)
                                 g$mr$10139$XcRv&))))
                          (map g$gen-lexical$7688$XcRv& g$x*$10142$XcRv&)
                          (map g$gen-label$7690$XcRv& g$x*$10142$XcRv&)))))
                    g$ls/false$10141$XcRv&)
                  ((case-lambda
                     ((g$t$10145$XcRv&)
                      ((case-lambda
                         ((g$ls/false$10146$XcRv&)
                          (if g$ls/false$10146$XcRv&
                            (apply
                              (case-lambda
                                ((g$x*$10147$XcRv& g$x$10148$XcRv&)
                                 (begin
                                   (g$verify-formals$8042$XcRv&
                                     g$fmls$10136$XcRv&
                                     g$stx$10135$XcRv&)
                                   ((case-lambda
                                      ((g$lex*$10149$XcRv&
                                         g$lab*$10150$XcRv&
                                         g$lex$10151$XcRv&
                                         g$lab$10152$XcRv&)
                                       (values
                                         (append
                                           g$lex*$10149$XcRv&
                                           g$lex$10151$XcRv&)
                                         (g$chi-internal$8051$XcRv&
                                           (g$add-subst$7734$XcRv&
                                             (g$make-full-rib$7712$XcRv&
                                               (cons
                                                 g$x$10148$XcRv&
                                                 g$x*$10147$XcRv&)
                                               (cons
                                                 g$lab$10152$XcRv&
                                                 g$lab*$10150$XcRv&))
                                             g$body*$10137$XcRv&)
                                           (g$add-lexicals$7970$XcRv&
                                             (cons
                                               g$lab$10152$XcRv&
                                               g$lab*$10150$XcRv&)
                                             (cons
                                               g$lex$10151$XcRv&
                                               g$lex*$10149$XcRv&)
                                             g$r$10138$XcRv&)
                                           g$mr$10139$XcRv&))))
                                    (map g$gen-lexical$7688$XcRv&
                                         g$x*$10147$XcRv&)
                                    (map g$gen-label$7690$XcRv&
                                         g$x*$10147$XcRv&)
                                    (g$gen-lexical$7688$XcRv& g$x$10148$XcRv&)
                                    (g$gen-label$7690$XcRv& g$x$10148$XcRv&)))))
                              g$ls/false$10146$XcRv&)
                            ((case-lambda
                               ((g$t$10153$XcRv&)
                                ((case-lambda
                                   ((g$ls/false$10154$XcRv&)
                                    (if g$ls/false$10154$XcRv&
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8128$XcRv&
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$10136$XcRv&)))
                                        g$ls/false$10154$XcRv&)
                                      (g$syntax-violation$8128$XcRv&
                                        '#f
                                        '"invalid syntax"
                                        g$t$10153$XcRv&))))
                                 (g$syntax-dispatch$8022$XcRv&
                                   g$t$10153$XcRv&
                                   '_))))
                             g$t$10145$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$10145$XcRv&
                         '#(each+ any () any)))))
                   g$t$10140$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$10140$XcRv& 'each-any))))
         g$fmls$10136$XcRv&))))
   (g$chi-lambda-clause*$8044$XcRv&
     g$chi-lambda-clause*$11494$XcRv&
     (case-lambda
       ((g$stx$10155$XcRv&
          g$fmls*$10156$XcRv&
          g$body**$10157$XcRv&
          g$r$10158$XcRv&
          g$mr$10159$XcRv&)
        (if (null? g$fmls*$10156$XcRv&)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$8043$XcRv&
                 g$stx$10155$XcRv&
                 (car g$fmls*$10156$XcRv&)
                 (car g$body**$10157$XcRv&)
                 g$r$10158$XcRv&
                 g$mr$10159$XcRv&)))
            (case-lambda
              ((g$a$10162$XcRv& g$b$10163$XcRv&)
               ((case-lambda
                  ((g$b$10164$XcRv& g$a$10165$XcRv&)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$8044$XcRv&
                          g$stx$10155$XcRv&
                          (cdr g$fmls*$10156$XcRv&)
                          (cdr g$body**$10157$XcRv&)
                          g$r$10158$XcRv&
                          g$mr$10159$XcRv&)))
                     (case-lambda
                       ((g$a*$10168$XcRv& g$b*$10169$XcRv&)
                        ((case-lambda
                           ((g$b*$10170$XcRv& g$a*$10171$XcRv&)
                            (values
                              (cons g$a$10165$XcRv& g$a*$10171$XcRv&)
                              (cons g$b$10164$XcRv& g$b*$10170$XcRv&))))
                         g$b*$10169$XcRv&
                         g$a*$10168$XcRv&))))))
                g$b$10163$XcRv&
                g$a$10162$XcRv&))))))))
   (g$chi-defun$8045$XcRv&
     g$chi-defun$11495$XcRv&
     (case-lambda
       ((g$x$10172$XcRv& g$r$10173$XcRv& g$mr$10174$XcRv&)
        ((case-lambda
           ((g$fmls$10175$XcRv& g$body*$10176$XcRv&)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$8043$XcRv&
                   g$fmls$10175$XcRv&
                   g$fmls$10175$XcRv&
                   g$body*$10176$XcRv&
                   g$r$10173$XcRv&
                   g$mr$10174$XcRv&)))
              (case-lambda
                ((g$fmls$10179$XcRv& g$body$10180$XcRv&)
                 ((case-lambda
                    ((g$body$10181$XcRv& g$fmls$10182$XcRv&)
                     (g$build-lambda$7675$XcRv&
                       '#f
                       g$fmls$10182$XcRv&
                       g$body$10181$XcRv&)))
                  g$body$10180$XcRv&
                  g$fmls$10179$XcRv&))))))
         (car g$x$10172$XcRv&)
         (cdr g$x$10172$XcRv&)))))
   (g$chi-rhs$8046$XcRv&
     g$chi-rhs$11496$XcRv&
     (case-lambda
       ((g$rhs$10183$XcRv& g$r$10184$XcRv& g$mr$10185$XcRv&)
        ((case-lambda
           ((g$t$10186$XcRv&)
            (if (eqv? g$t$10186$XcRv& 'defun)
              (g$chi-defun$8045$XcRv&
                (cdr g$rhs$10183$XcRv&)
                g$r$10184$XcRv&
                g$mr$10185$XcRv&)
              (if (eqv? g$t$10186$XcRv& 'expr)
                ((case-lambda
                   ((g$expr$10188$XcRv&)
                    (g$chi-expr$8040$XcRv&
                      g$expr$10188$XcRv&
                      g$r$10184$XcRv&
                      g$mr$10185$XcRv&)))
                 (cdr g$rhs$10183$XcRv&))
                (if (eqv? g$t$10186$XcRv& 'top-expr)
                  ((case-lambda
                     ((g$expr$10187$XcRv&)
                      (g$build-sequence$7678$XcRv&
                        '#f
                        (list
                          (g$chi-expr$8040$XcRv&
                            g$expr$10187$XcRv&
                            g$r$10184$XcRv&
                            g$mr$10185$XcRv&)
                          (g$build-void$7679$XcRv&)))))
                   (cdr g$rhs$10183$XcRv&))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$10183$XcRv&))))))
         (car g$rhs$10183$XcRv&)))))
   (g$expand-interaction-rhs*/init*$8047$XcRv&
     g$expand-interaction-rhs*/init*$11497$XcRv&
     (case-lambda
       ((g$lhs*$10189$XcRv&
          g$rhs*$10190$XcRv&
          g$init*$10191$XcRv&
          g$r$10192$XcRv&
          g$mr$10193$XcRv&)
        ((letrec ((g$f$10194$XcRv&
                    (case-lambda
                      ((g$lhs*$10195$XcRv& g$rhs*$10196$XcRv&)
                       (if (null? g$lhs*$10195$XcRv&)
                         (map (case-lambda
                                ((g$x$10197$XcRv&)
                                 (g$chi-expr$8040$XcRv&
                                   g$x$10197$XcRv&
                                   g$r$10192$XcRv&
                                   g$mr$10193$XcRv&)))
                              g$init*$10191$XcRv&)
                         ((case-lambda
                            ((g$lhs$10198$XcRv& g$rhs$10199$XcRv&)
                             ((case-lambda
                                ((g$t$10200$XcRv&)
                                 (if (eqv? g$t$10200$XcRv& 'defun)
                                   ((case-lambda
                                      ((g$rhs$10203$XcRv&)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10198$XcRv&
                                           g$rhs$10203$XcRv&)
                                         (g$f$10194$XcRv&
                                           (cdr g$lhs*$10195$XcRv&)
                                           (cdr g$rhs*$10196$XcRv&)))))
                                    (g$chi-defun$8045$XcRv&
                                      (cdr g$rhs$10199$XcRv&)
                                      g$r$10192$XcRv&
                                      g$mr$10193$XcRv&))
                                   (if (eqv? g$t$10200$XcRv& 'expr)
                                     ((case-lambda
                                        ((g$rhs$10202$XcRv&)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10198$XcRv&
                                             g$rhs$10202$XcRv&)
                                           (g$f$10194$XcRv&
                                             (cdr g$lhs*$10195$XcRv&)
                                             (cdr g$rhs*$10196$XcRv&)))))
                                      (g$chi-expr$8040$XcRv&
                                        (cdr g$rhs$10199$XcRv&)
                                        g$r$10192$XcRv&
                                        g$mr$10193$XcRv&))
                                     (if (eqv? g$t$10200$XcRv& 'top-expr)
                                       ((case-lambda
                                          ((g$e$10201$XcRv&)
                                           (cons
                                             g$e$10201$XcRv&
                                             (g$f$10194$XcRv&
                                               (cdr g$lhs*$10195$XcRv&)
                                               (cdr g$rhs*$10196$XcRv&)))))
                                        (g$chi-expr$8040$XcRv&
                                          (cdr g$rhs$10199$XcRv&)
                                          g$r$10192$XcRv&
                                          g$mr$10193$XcRv&))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10199$XcRv&))))))
                              (car g$rhs$10199$XcRv&))))
                          (car g$lhs*$10195$XcRv&)
                          (car g$rhs*$10196$XcRv&)))))))
           g$f$10194$XcRv&)
         g$lhs*$10189$XcRv&
         g$rhs*$10190$XcRv&))))
   (g$chi-rhs*$8048$XcRv&
     g$chi-rhs*$11498$XcRv&
     (case-lambda
       ((g$rhs*$10204$XcRv& g$r$10205$XcRv& g$mr$10206$XcRv&)
        ((letrec ((g$f$10207$XcRv&
                    (case-lambda
                      ((g$ls$10208$XcRv&)
                       (if (null? g$ls$10208$XcRv&)
                         '()
                         ((case-lambda
                            ((g$a$10209$XcRv&)
                             (cons
                               g$a$10209$XcRv&
                               (g$f$10207$XcRv& (cdr g$ls$10208$XcRv&)))))
                          (g$chi-rhs$8046$XcRv&
                            (car g$ls$10208$XcRv&)
                            g$r$10205$XcRv&
                            g$mr$10206$XcRv&)))))))
           g$f$10207$XcRv&)
         g$rhs*$10204$XcRv&))))
   (g$find-bound=?$8049$XcRv&
     g$find-bound=?$11499$XcRv&
     (case-lambda
       ((g$x$10210$XcRv& g$lhs*$10211$XcRv& g$rhs*$10212$XcRv&)
        (if (null? g$lhs*$10211$XcRv&)
          '#f
          (if (g$bound-id=?$7747$XcRv& g$x$10210$XcRv& (car g$lhs*$10211$XcRv&))
            (car g$rhs*$10212$XcRv&)
            (g$find-bound=?$8049$XcRv&
              g$x$10210$XcRv&
              (cdr g$lhs*$10211$XcRv&)
              (cdr g$rhs*$10212$XcRv&)))))))
   (g$find-dups$8050$XcRv&
     g$find-dups$11500$XcRv&
     (case-lambda
       ((g$ls$10213$XcRv&)
        ((letrec ((g$f$10214$XcRv&
                    (case-lambda
                      ((g$ls$10215$XcRv& g$dups$10216$XcRv&)
                       (if (null? g$ls$10215$XcRv&)
                         g$dups$10216$XcRv&
                         ((case-lambda
                            ((g$t$10217$XcRv&)
                             (if g$t$10217$XcRv&
                               ((case-lambda
                                  ((g$x$10218$XcRv&)
                                   (g$f$10214$XcRv&
                                     (cdr g$ls$10215$XcRv&)
                                     (cons
                                       (list
                                         (car g$ls$10215$XcRv&)
                                         g$x$10218$XcRv&)
                                       g$dups$10216$XcRv&))))
                                g$t$10217$XcRv&)
                               (g$f$10214$XcRv&
                                 (cdr g$ls$10215$XcRv&)
                                 g$dups$10216$XcRv&))))
                          (g$find-bound=?$8049$XcRv&
                            (car g$ls$10215$XcRv&)
                            (cdr g$ls$10215$XcRv&)
                            (cdr g$ls$10215$XcRv&))))))))
           g$f$10214$XcRv&)
         g$ls$10213$XcRv&
         '()))))
   (g$chi-internal$8051$XcRv&
     g$chi-internal$11501$XcRv&
     (case-lambda
       ((g$e*$10219$XcRv& g$r$10220$XcRv& g$mr$10221$XcRv&)
        ((case-lambda
           ((g$rib$10222$XcRv&)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$8066$XcRv&
                   (map (case-lambda
                          ((g$x$10230$XcRv&)
                           (g$add-subst$7734$XcRv&
                             g$rib$10222$XcRv&
                             g$x$10230$XcRv&)))
                        (g$syntax->list$7743$XcRv& g$e*$10219$XcRv&))
                   g$r$10220$XcRv&
                   g$mr$10221$XcRv&
                   '()
                   '()
                   '()
                   '()
                   g$rib$10222$XcRv&
                   '#f)))
              (case-lambda
                ((g$e*$10231$XcRv&
                   g$r$10232$XcRv&
                   g$mr$10233$XcRv&
                   g$lex*$10234$XcRv&
                   g$rhs*$10235$XcRv&
                   g$mod**$10236$XcRv&
                   g$kwd*$10237$XcRv&)
                 ((case-lambda
                    ((g$kwd*$10238$XcRv&
                       g$mod**$10239$XcRv&
                       g$rhs*$10240$XcRv&
                       g$lex*$10241$XcRv&
                       g$mr$10242$XcRv&
                       g$r$10243$XcRv&
                       g$e*$10244$XcRv&)
                     (begin
                       (if (null? g$e*$10244$XcRv&)
                         (g$syntax-violation$8128$XcRv&
                           '#f
                           '"no expression in body"
                           g$e*$10244$XcRv&)
                         (void))
                       ((case-lambda
                          ((g$init*$10245$XcRv&)
                           ((case-lambda
                              ((g$rhs*$10246$XcRv&)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7681$XcRv&
                                     '#f
                                     (reverse g$lex*$10241$XcRv&)
                                     (reverse g$rhs*$10246$XcRv&)
                                     (g$build-sequence$7678$XcRv&
                                       '#f
                                       g$init*$10245$XcRv&)))))))
                            (g$chi-rhs*$8048$XcRv&
                              g$rhs*$10240$XcRv&
                              g$r$10243$XcRv&
                              g$mr$10242$XcRv&))))
                        (g$chi-expr*$8038$XcRv&
                          (append
                            (apply append (reverse g$mod**$10239$XcRv&))
                            g$e*$10244$XcRv&)
                          g$r$10243$XcRv&
                          g$mr$10242$XcRv&)))))
                  g$kwd*$10237$XcRv&
                  g$mod**$10236$XcRv&
                  g$rhs*$10235$XcRv&
                  g$lex*$10234$XcRv&
                  g$mr$10233$XcRv&
                  g$r$10232$XcRv&
                  g$e*$10231$XcRv&))))))
         (g$make-empty-rib$7707$XcRv&)))))
   (g$parse-module$8052$XcRv&
     g$parse-module$11502$XcRv&
     (case-lambda
       ((g$e$10247$XcRv&)
        ((case-lambda
           ((g$t$10248$XcRv&)
            ((case-lambda
               ((g$ls/false$10249$XcRv&)
                (if g$ls/false$10249$XcRv&
                  (apply
                    (case-lambda
                      ((g$export*$10250$XcRv& g$b*$10251$XcRv&)
                       (begin
                         (if (g$for-all$6019$XcRv&
                               g$id?$7744$XcRv&
                               g$export*$10250$XcRv&)
                           (void)
                           (g$syntax-violation$8128$XcRv&
                             '#f
                             '"module exports must be identifiers"
                             g$e$10247$XcRv&))
                         (values
                           '#f
                           (list->vector g$export*$10250$XcRv&)
                           g$b*$10251$XcRv&))))
                    g$ls/false$10249$XcRv&)
                  ((case-lambda
                     ((g$t$10252$XcRv&)
                      ((case-lambda
                         ((g$ls/false$10253$XcRv&)
                          (if g$ls/false$10253$XcRv&
                            (apply
                              (case-lambda
                                ((g$name$10254$XcRv&
                                   g$export*$10255$XcRv&
                                   g$b*$10256$XcRv&)
                                 (begin
                                   (if (g$id?$7744$XcRv& g$name$10254$XcRv&)
                                     (void)
                                     (g$syntax-violation$8128$XcRv&
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$10247$XcRv&))
                                   (if (g$for-all$6019$XcRv&
                                         g$id?$7744$XcRv&
                                         g$export*$10255$XcRv&)
                                     (void)
                                     (g$syntax-violation$8128$XcRv&
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$10247$XcRv&))
                                   (values
                                     g$name$10254$XcRv&
                                     (list->vector g$export*$10255$XcRv&)
                                     g$b*$10256$XcRv&))))
                              g$ls/false$10253$XcRv&)
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"invalid syntax"
                              g$t$10252$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$10252$XcRv&
                         '(_ any each-any . each-any)))))
                   g$t$10248$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$10248$XcRv&
               '(_ each-any . each-any)))))
         g$e$10247$XcRv&))))
   (g$8884$8053$XcRv&
     g$8884$11503$XcRv&
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8887$XcRv&
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8886$8054$XcRv& g$8886$11504$XcRv& '#f)
   (g$8885$8055$XcRv&
     g$8885$11505$XcRv&
     (make-record-constructor-descriptor
       g$8884$8053$XcRv&
       '#f
       g$8886$8054$XcRv&))
   (g$module-interface?$8056$XcRv&
     g$module-interface?$11506$XcRv&
     (record-predicate g$8884$8053$XcRv&))
   (g$make-module-interface$8057$XcRv&
     g$make-module-interface$11507$XcRv&
     (record-constructor g$8885$8055$XcRv&))
   (g$module-interface-first-mark$8058$XcRv&
     g$module-interface-first-mark$11508$XcRv&
     (record-accessor g$8884$8053$XcRv& '0))
   (g$module-interface-exp-id-vec$8059$XcRv&
     g$module-interface-exp-id-vec$11509$XcRv&
     (record-accessor g$8884$8053$XcRv& '1))
   (g$module-interface-exp-lab-vec$8060$XcRv&
     g$module-interface-exp-lab-vec$11510$XcRv&
     (record-accessor g$8884$8053$XcRv& '2))
   (g$set-module-interface-first-mark!$8061$XcRv&
     g$set-module-interface-first-mark!$11511$XcRv&
     (record-mutator g$8884$8053$XcRv& '0))
   (g$set-module-interface-exp-id-vec!$8062$XcRv&
     g$set-module-interface-exp-id-vec!$11512$XcRv&
     (record-mutator g$8884$8053$XcRv& '1))
   (g$set-module-interface-exp-lab-vec!$8063$XcRv&
     g$set-module-interface-exp-lab-vec!$11513$XcRv&
     (record-mutator g$8884$8053$XcRv& '2))
   (g$module-interface-exp-id*$8064$XcRv&
     g$module-interface-exp-id*$11514$XcRv&
     (case-lambda
       ((g$iface$10257$XcRv& g$id$10258$XcRv&)
        (letrec* ((g$diff-marks$10259$XcRv&
                    (case-lambda
                      ((g$ls$10263$XcRv& g$x$10264$XcRv&)
                       (begin
                         (if (null? g$ls$10263$XcRv&)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$10265$XcRv&)
                             (if (eq? g$a$10265$XcRv& g$x$10264$XcRv&)
                               '()
                               (cons
                                 g$a$10265$XcRv&
                                 (g$diff-marks$10259$XcRv&
                                   (cdr g$ls$10263$XcRv&)
                                   g$x$10264$XcRv&)))))
                          (car g$ls$10263$XcRv&)))))))
          ((case-lambda
             ((g$diff$10260$XcRv& g$id-vec$10261$XcRv&)
              (if (null? g$diff$10260$XcRv&)
                g$id-vec$10261$XcRv&
                (vector-map
                  (case-lambda
                    ((g$x$10262$XcRv&)
                     (g$make-stx$7717$XcRv&
                       (g$stx-expr$7718$XcRv& g$x$10262$XcRv&)
                       (append
                         g$diff$10260$XcRv&
                         (g$stx-mark*$7719$XcRv& g$x$10262$XcRv&))
                       '()
                       '())))
                  g$id-vec$10261$XcRv&))))
           (g$diff-marks$10259$XcRv&
             (g$stx-mark*$7719$XcRv& g$id$10258$XcRv&)
             (g$module-interface-first-mark$8058$XcRv& g$iface$10257$XcRv&))
           (g$module-interface-exp-id-vec$8059$XcRv& g$iface$10257$XcRv&))))))
   (g$chi-internal-module$8065$XcRv&
     g$chi-internal-module$11515$XcRv&
     (case-lambda
       ((g$e$10266$XcRv&
          g$r$10267$XcRv&
          g$mr$10268$XcRv&
          g$lex*$10269$XcRv&
          g$rhs*$10270$XcRv&
          g$mod**$10271$XcRv&
          g$kwd*$10272$XcRv&)
        (call-with-values
          (case-lambda (() (g$parse-module$8052$XcRv& g$e$10266$XcRv&)))
          (case-lambda
            ((g$name$10276$XcRv& g$exp-id*$10277$XcRv& g$e*$10278$XcRv&)
             ((case-lambda
                ((g$e*$10279$XcRv& g$exp-id*$10280$XcRv& g$name$10281$XcRv&)
                 ((case-lambda
                    ((g$rib$10282$XcRv&)
                     ((case-lambda
                        ((g$e*$10283$XcRv&)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$8066$XcRv&
                                    g$e*$10283$XcRv&
                                    g$r$10267$XcRv&
                                    g$mr$10268$XcRv&
                                    g$lex*$10269$XcRv&
                                    g$rhs*$10270$XcRv&
                                    g$mod**$10271$XcRv&
                                    g$kwd*$10272$XcRv&
                                    g$rib$10282$XcRv&
                                    '#f)))
                               (case-lambda
                                 ((g$e*$10291$XcRv&
                                    g$r$10292$XcRv&
                                    g$mr$10293$XcRv&
                                    g$lex*$10294$XcRv&
                                    g$rhs*$10295$XcRv&
                                    g$mod**$10296$XcRv&
                                    g$kwd*$10297$XcRv&)
                                  ((case-lambda
                                     ((g$kwd*$10298$XcRv&
                                        g$mod**$10299$XcRv&
                                        g$rhs*$10300$XcRv&
                                        g$lex*$10301$XcRv&
                                        g$mr$10302$XcRv&
                                        g$r$10303$XcRv&
                                        g$e*$10304$XcRv&)
                                      ((case-lambda
                                         ((g$exp-lab*$10305$XcRv&
                                            g$mod**$10306$XcRv&)
                                          (if (not g$name$10281$XcRv&)
                                            (values
                                              g$lex*$10301$XcRv&
                                              g$rhs*$10300$XcRv&
                                              g$exp-id*$10280$XcRv&
                                              g$exp-lab*$10305$XcRv&
                                              g$r$10303$XcRv&
                                              g$mr$10302$XcRv&
                                              g$mod**$10306$XcRv&
                                              g$kwd*$10298$XcRv&)
                                            ((case-lambda
                                               ((g$lab$10307$XcRv&
                                                  g$iface$10308$XcRv&)
                                                (values
                                                  g$lex*$10301$XcRv&
                                                  g$rhs*$10300$XcRv&
                                                  (vector g$name$10281$XcRv&)
                                                  (vector g$lab$10307$XcRv&)
                                                  (cons
                                                    (cons
                                                      g$lab$10307$XcRv&
                                                      (cons
                                                        '$module
                                                        g$iface$10308$XcRv&))
                                                    g$r$10303$XcRv&)
                                                  (cons
                                                    (cons
                                                      g$lab$10307$XcRv&
                                                      (cons
                                                        '$module
                                                        g$iface$10308$XcRv&))
                                                    g$mr$10302$XcRv&)
                                                  g$mod**$10306$XcRv&
                                                  g$kwd*$10298$XcRv&)))
                                             (g$gen-label$7690$XcRv& 'module)
                                             (g$make-module-interface$8057$XcRv&
                                               (car (g$stx-mark*$7719$XcRv&
                                                      g$name$10281$XcRv&))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$10309$XcRv&)
                                                    (g$make-stx$7717$XcRv&
                                                      (g$stx-expr$7718$XcRv&
                                                        g$x$10309$XcRv&)
                                                      (g$stx-mark*$7719$XcRv&
                                                        g$x$10309$XcRv&)
                                                      '()
                                                      '())))
                                                 g$exp-id*$10280$XcRv&)
                                               g$exp-lab*$10305$XcRv&)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$10310$XcRv&)
                                            ((case-lambda
                                               ((g$t$10311$XcRv&)
                                                (if g$t$10311$XcRv&
                                                  g$t$10311$XcRv&
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$8128$XcRv&
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$10310$XcRv&)))))
                                             (g$id->label$7757$XcRv&
                                               (g$make-stx$7717$XcRv&
                                                 (g$id->sym$7745$XcRv&
                                                   g$x$10310$XcRv&)
                                                 (g$stx-mark*$7719$XcRv&
                                                   g$x$10310$XcRv&)
                                                 (list g$rib$10282$XcRv&)
                                                 '())))))
                                         g$exp-id*$10280$XcRv&)
                                       (cons
                                         g$e*$10304$XcRv&
                                         g$mod**$10299$XcRv&))))
                                   g$kwd*$10297$XcRv&
                                   g$mod**$10296$XcRv&
                                   g$rhs*$10295$XcRv&
                                   g$lex*$10294$XcRv&
                                   g$mr$10293$XcRv&
                                   g$r$10292$XcRv&
                                   g$e*$10291$XcRv&)))))))))
                      (map (case-lambda
                             ((g$x$10312$XcRv&)
                              (g$add-subst$7734$XcRv&
                                g$rib$10282$XcRv&
                                g$x$10312$XcRv&)))
                           (g$syntax->list$7743$XcRv& g$e*$10279$XcRv&)))))
                  (g$make-empty-rib$7707$XcRv&))))
              g$e*$10278$XcRv&
              g$exp-id*$10277$XcRv&
              g$name$10276$XcRv&)))))))
   (g$chi-body*$8066$XcRv&
     g$chi-body*$11516$XcRv&
     (case-lambda
       ((g$e*$10313$XcRv&
          g$r$10314$XcRv&
          g$mr$10315$XcRv&
          g$lex*$10316$XcRv&
          g$rhs*$10317$XcRv&
          g$mod**$10318$XcRv&
          g$kwd*$10319$XcRv&
          g$rib$10320$XcRv&
          g$top?$10321$XcRv&)
        (if (null? g$e*$10313$XcRv&)
          (values
            g$e*$10313$XcRv&
            g$r$10314$XcRv&
            g$mr$10315$XcRv&
            g$lex*$10316$XcRv&
            g$rhs*$10317$XcRv&
            g$mod**$10318$XcRv&
            g$kwd*$10319$XcRv&)
          ((case-lambda
             ((g$e$10322$XcRv&)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7764$XcRv& g$e$10322$XcRv& g$r$10314$XcRv&)))
                (case-lambda
                  ((g$type$10326$XcRv& g$value$10327$XcRv& g$kwd$10328$XcRv&)
                   ((case-lambda
                      ((g$kwd$10329$XcRv&
                         g$value$10330$XcRv&
                         g$type$10331$XcRv&)
                       ((case-lambda
                          ((g$kwd*$10332$XcRv&)
                           ((case-lambda
                              ((g$t$10333$XcRv&)
                               (if (eqv? g$t$10333$XcRv& 'define)
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7962$XcRv&
                                        g$e$10322$XcRv&)))
                                   (case-lambda
                                     ((g$id$10439$XcRv& g$rhs$10440$XcRv&)
                                      ((case-lambda
                                         ((g$rhs$10441$XcRv& g$id$10442$XcRv&)
                                          (begin
                                            (if (g$bound-id-member?$7751$XcRv&
                                                  g$id$10442$XcRv&
                                                  g$kwd*$10332$XcRv&)
                                              (g$syntax-violation$8128$XcRv&
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$10322$XcRv&)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7692$XcRv&
                                                   g$id$10442$XcRv&
                                                   g$rib$10320$XcRv&)))
                                              (case-lambda
                                                ((g$lab$10445$XcRv&
                                                   g$lex$10446$XcRv&)
                                                 ((case-lambda
                                                    ((g$lex$10447$XcRv&
                                                       g$lab$10448$XcRv&)
                                                     (begin
                                                       (g$extend-rib!$7708$XcRv&
                                                         g$rib$10320$XcRv&
                                                         g$id$10442$XcRv&
                                                         g$lab$10448$XcRv&)
                                                       (g$chi-body*$8066$XcRv&
                                                         (cdr g$e*$10313$XcRv&)
                                                         (g$add-lexical$7969$XcRv&
                                                           g$lab$10448$XcRv&
                                                           g$lex$10447$XcRv&
                                                           g$r$10314$XcRv&)
                                                         g$mr$10315$XcRv&
                                                         (cons
                                                           g$lex$10447$XcRv&
                                                           g$lex*$10316$XcRv&)
                                                         (cons
                                                           g$rhs$10441$XcRv&
                                                           g$rhs*$10317$XcRv&)
                                                         g$mod**$10318$XcRv&
                                                         g$kwd*$10332$XcRv&
                                                         g$rib$10320$XcRv&
                                                         g$top?$10321$XcRv&))))
                                                  g$lex$10446$XcRv&
                                                  g$lab$10445$XcRv&)))))))
                                       g$rhs$10440$XcRv&
                                       g$id$10439$XcRv&))))
                                 (if (eqv? g$t$10333$XcRv& 'define-syntax)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7963$XcRv&
                                          g$e$10322$XcRv&)))
                                     (case-lambda
                                       ((g$id$10430$XcRv& g$rhs$10431$XcRv&)
                                        ((case-lambda
                                           ((g$rhs$10432$XcRv& g$id$10433$XcRv&)
                                            (begin
                                              (if (g$bound-id-member?$7751$XcRv&
                                                    g$id$10433$XcRv&
                                                    g$kwd*$10332$XcRv&)
                                                (g$syntax-violation$8128$XcRv&
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$10322$XcRv&)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$10434$XcRv&
                                                    g$expanded-rhs$10435$XcRv&)
                                                  (begin
                                                    (g$extend-rib!$7708$XcRv&
                                                      g$rib$10320$XcRv&
                                                      g$id$10433$XcRv&
                                                      g$lab$10434$XcRv&)
                                                    ((case-lambda
                                                       ((g$b$10436$XcRv&)
                                                        (g$chi-body*$8066$XcRv&
                                                          (cdr g$e*$10313$XcRv&)
                                                          (cons
                                                            (cons
                                                              g$lab$10434$XcRv&
                                                              g$b$10436$XcRv&)
                                                            g$r$10314$XcRv&)
                                                          (cons
                                                            (cons
                                                              g$lab$10434$XcRv&
                                                              g$b$10436$XcRv&)
                                                            g$mr$10315$XcRv&)
                                                          g$lex*$10316$XcRv&
                                                          g$rhs*$10317$XcRv&
                                                          g$mod**$10318$XcRv&
                                                          g$kwd*$10332$XcRv&
                                                          g$rib$10320$XcRv&
                                                          g$top?$10321$XcRv&)))
                                                     (g$make-eval-transformer$7776$XcRv&
                                                       g$expanded-rhs$10435$XcRv&)))))
                                               (g$gen-define-label$7693$XcRv&
                                                 g$id$10433$XcRv&
                                                 g$rib$10320$XcRv&)
                                               (g$expand-transformer$8067$XcRv&
                                                 g$rhs$10432$XcRv&
                                                 g$mr$10315$XcRv&)))))
                                         g$rhs$10431$XcRv&
                                         g$id$10430$XcRv&))))
                                   (if (memv
                                         g$t$10333$XcRv&
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$10415$XcRv&)
                                         ((case-lambda
                                            ((g$ls/false$10416$XcRv&)
                                             (if (if g$ls/false$10416$XcRv&
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$10417$XcRv&
                                                            g$xrhs*$10418$XcRv&
                                                            g$xbody*$10419$XcRv&)
                                                          (if (g$valid-bound-ids?$7749$XcRv&
                                                                g$xlhs*$10417$XcRv&)
                                                            (void)
                                                            (g$syntax-violation$8128$XcRv&
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$10322$XcRv&))))
                                                       g$ls/false$10416$XcRv&))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$10420$XcRv&
                                                      g$xrhs*$10421$XcRv&
                                                      g$xbody*$10422$XcRv&)
                                                    ((case-lambda
                                                       ((g$xlab*$10423$XcRv&)
                                                        ((case-lambda
                                                           ((g$xrib$10424$XcRv&)
                                                            ((case-lambda
                                                               ((g$xb*$10425$XcRv&)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$8066$XcRv&
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$10426$XcRv&)
                                                                                (g$add-subst$7734$XcRv&
                                                                                  g$xrib$10424$XcRv&
                                                                                  g$x$10426$XcRv&)))
                                                                             g$xbody*$10422$XcRv&)
                                                                        (cdr g$e*$10313$XcRv&))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$10423$XcRv&
                                                                             g$xb*$10425$XcRv&)
                                                                        g$r$10314$XcRv&)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$10423$XcRv&
                                                                             g$xb*$10425$XcRv&)
                                                                        g$mr$10315$XcRv&)
                                                                      g$lex*$10316$XcRv&
                                                                      g$rhs*$10317$XcRv&
                                                                      g$mod**$10318$XcRv&
                                                                      g$kwd*$10332$XcRv&
                                                                      g$rib$10320$XcRv&
                                                                      g$top?$10321$XcRv&))))))
                                                             (map (case-lambda
                                                                    ((g$x$10427$XcRv&)
                                                                     (g$make-eval-transformer$7776$XcRv&
                                                                       (g$expand-transformer$8067$XcRv&
                                                                         (if (eq? g$type$10331$XcRv&
                                                                                  'let-syntax)
                                                                           g$x$10427$XcRv&
                                                                           (g$add-subst$7734$XcRv&
                                                                             g$xrib$10424$XcRv&
                                                                             g$x$10427$XcRv&))
                                                                         g$mr$10315$XcRv&))))
                                                                  g$xrhs*$10421$XcRv&))))
                                                         (g$make-full-rib$7712$XcRv&
                                                           g$xlhs*$10420$XcRv&
                                                           g$xlab*$10423$XcRv&))))
                                                     (map g$gen-label$7690$XcRv&
                                                          g$xlhs*$10420$XcRv&))))
                                                 g$ls/false$10416$XcRv&)
                                               (g$syntax-violation$8128$XcRv&
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10415$XcRv&))))
                                          (g$syntax-dispatch$8022$XcRv&
                                            g$t$10415$XcRv&
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$10322$XcRv&)
                                     (if (eqv? g$t$10333$XcRv& 'begin)
                                       ((case-lambda
                                          ((g$t$10412$XcRv&)
                                           ((case-lambda
                                              ((g$ls/false$10413$XcRv&)
                                               (if g$ls/false$10413$XcRv&
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$10414$XcRv&)
                                                      (g$chi-body*$8066$XcRv&
                                                        (append
                                                          g$x*$10414$XcRv&
                                                          (cdr g$e*$10313$XcRv&))
                                                        g$r$10314$XcRv&
                                                        g$mr$10315$XcRv&
                                                        g$lex*$10316$XcRv&
                                                        g$rhs*$10317$XcRv&
                                                        g$mod**$10318$XcRv&
                                                        g$kwd*$10332$XcRv&
                                                        g$rib$10320$XcRv&
                                                        g$top?$10321$XcRv&)))
                                                   g$ls/false$10413$XcRv&)
                                                 (g$syntax-violation$8128$XcRv&
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$10412$XcRv&))))
                                            (g$syntax-dispatch$8022$XcRv&
                                              g$t$10412$XcRv&
                                              '(_ . each-any)))))
                                        g$e$10322$XcRv&)
                                       (if (memv
                                             g$t$10333$XcRv&
                                             '(global-macro global-macro!))
                                         (g$chi-body*$8066$XcRv&
                                           (cons
                                             (g$add-subst$7734$XcRv&
                                               g$rib$10320$XcRv&
                                               (g$chi-global-macro$8037$XcRv&
                                                 g$value$10330$XcRv&
                                                 g$e$10322$XcRv&))
                                             (cdr g$e*$10313$XcRv&))
                                           g$r$10314$XcRv&
                                           g$mr$10315$XcRv&
                                           g$lex*$10316$XcRv&
                                           g$rhs*$10317$XcRv&
                                           g$mod**$10318$XcRv&
                                           g$kwd*$10332$XcRv&
                                           g$rib$10320$XcRv&
                                           g$top?$10321$XcRv&)
                                         (if (memv
                                               g$t$10333$XcRv&
                                               '(local-macro local-macro!))
                                           (g$chi-body*$8066$XcRv&
                                             (cons
                                               (g$add-subst$7734$XcRv&
                                                 g$rib$10320$XcRv&
                                                 (g$chi-local-macro$8036$XcRv&
                                                   g$value$10330$XcRv&
                                                   g$e$10322$XcRv&))
                                               (cdr g$e*$10313$XcRv&))
                                             g$r$10314$XcRv&
                                             g$mr$10315$XcRv&
                                             g$lex*$10316$XcRv&
                                             g$rhs*$10317$XcRv&
                                             g$mod**$10318$XcRv&
                                             g$kwd*$10332$XcRv&
                                             g$rib$10320$XcRv&
                                             g$top?$10321$XcRv&)
                                           (if (memv
                                                 g$t$10333$XcRv&
                                                 '(macro macro!))
                                             (g$chi-body*$8066$XcRv&
                                               (cons
                                                 (g$add-subst$7734$XcRv&
                                                   g$rib$10320$XcRv&
                                                   (g$chi-macro$8035$XcRv&
                                                     g$value$10330$XcRv&
                                                     g$e$10322$XcRv&))
                                                 (cdr g$e*$10313$XcRv&))
                                               g$r$10314$XcRv&
                                               g$mr$10315$XcRv&
                                               g$lex*$10316$XcRv&
                                               g$rhs*$10317$XcRv&
                                               g$mod**$10318$XcRv&
                                               g$kwd*$10332$XcRv&
                                               g$rib$10320$XcRv&
                                               g$top?$10321$XcRv&)
                                             (if (eqv? g$t$10333$XcRv& 'module)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$8065$XcRv&
                                                      g$e$10322$XcRv&
                                                      g$r$10314$XcRv&
                                                      g$mr$10315$XcRv&
                                                      g$lex*$10316$XcRv&
                                                      g$rhs*$10317$XcRv&
                                                      g$mod**$10318$XcRv&
                                                      g$kwd*$10332$XcRv&)))
                                                 (case-lambda
                                                   ((g$lex*$10394$XcRv&
                                                      g$rhs*$10395$XcRv&
                                                      g$m-exp-id*$10396$XcRv&
                                                      g$m-exp-lab*$10397$XcRv&
                                                      g$r$10398$XcRv&
                                                      g$mr$10399$XcRv&
                                                      g$mod**$10400$XcRv&
                                                      g$kwd*$10401$XcRv&)
                                                    ((case-lambda
                                                       ((g$kwd*$10402$XcRv&
                                                          g$mod**$10403$XcRv&
                                                          g$mr$10404$XcRv&
                                                          g$r$10405$XcRv&
                                                          g$m-exp-lab*$10406$XcRv&
                                                          g$m-exp-id*$10407$XcRv&
                                                          g$rhs*$10408$XcRv&
                                                          g$lex*$10409$XcRv&)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10410$XcRv&
                                                                 g$lab$10411$XcRv&)
                                                               (g$extend-rib!$7708$XcRv&
                                                                 g$rib$10320$XcRv&
                                                                 g$id$10410$XcRv&
                                                                 g$lab$10411$XcRv&)))
                                                            g$m-exp-id*$10407$XcRv&
                                                            g$m-exp-lab*$10406$XcRv&)
                                                          (g$chi-body*$8066$XcRv&
                                                            (cdr g$e*$10313$XcRv&)
                                                            g$r$10405$XcRv&
                                                            g$mr$10404$XcRv&
                                                            g$lex*$10409$XcRv&
                                                            g$rhs*$10408$XcRv&
                                                            g$mod**$10403$XcRv&
                                                            g$kwd*$10402$XcRv&
                                                            g$rib$10320$XcRv&
                                                            g$top?$10321$XcRv&))))
                                                     g$kwd*$10401$XcRv&
                                                     g$mod**$10400$XcRv&
                                                     g$mr$10399$XcRv&
                                                     g$r$10398$XcRv&
                                                     g$m-exp-lab*$10397$XcRv&
                                                     g$m-exp-id*$10396$XcRv&
                                                     g$rhs*$10395$XcRv&
                                                     g$lex*$10394$XcRv&))))
                                               (if (eqv?
                                                     g$t$10333$XcRv&
                                                     'library)
                                                 (begin
                                                   (g$library-expander$8115$XcRv&
                                                     (g$stx->datum$7755$XcRv&
                                                       g$e$10322$XcRv&))
                                                   (g$chi-body*$8066$XcRv&
                                                     (cdr g$e*$10313$XcRv&)
                                                     g$r$10314$XcRv&
                                                     g$mr$10315$XcRv&
                                                     g$lex*$10316$XcRv&
                                                     g$rhs*$10317$XcRv&
                                                     g$mod**$10318$XcRv&
                                                     g$kwd*$10332$XcRv&
                                                     g$rib$10320$XcRv&
                                                     g$top?$10321$XcRv&))
                                                 (if (eqv?
                                                       g$t$10333$XcRv&
                                                       'import)
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10334$XcRv&
                                                                     (case-lambda
                                                                       ((g$e$10376$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$t$10377$XcRv&)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10378$XcRv&)
                                                                                (if (if g$ls/false$10378$XcRv&
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10379$XcRv&)
                                                                                             (g$id?$7744$XcRv&
                                                                                               g$id$10379$XcRv&)))
                                                                                          g$ls/false$10378$XcRv&))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10380$XcRv&)
                                                                                       '#t))
                                                                                    g$ls/false$10378$XcRv&)
                                                                                  ((case-lambda
                                                                                     ((g$t$10381$XcRv&)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10382$XcRv&)
                                                                                          (if g$ls/false$10382$XcRv&
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10383$XcRv&)
                                                                                                 '#f))
                                                                                              g$ls/false$10382$XcRv&)
                                                                                            ((case-lambda
                                                                                               ((g$t$10384$XcRv&)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10385$XcRv&)
                                                                                                    (if g$ls/false$10385$XcRv&
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$8128$XcRv&
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10376$XcRv&)))
                                                                                                        g$ls/false$10385$XcRv&)
                                                                                                      (g$syntax-violation$8128$XcRv&
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10384$XcRv&))))
                                                                                                 (g$syntax-dispatch$8022$XcRv&
                                                                                                   g$t$10384$XcRv&
                                                                                                   '_))))
                                                                                             g$t$10381$XcRv&))))
                                                                                       (g$syntax-dispatch$8022$XcRv&
                                                                                         g$t$10381$XcRv&
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10377$XcRv&))))
                                                                             (g$syntax-dispatch$8022$XcRv&
                                                                               g$t$10377$XcRv&
                                                                               '(_ any)))))
                                                                         g$e$10376$XcRv&))))
                                                                   (g$module-import$10335$XcRv&
                                                                     (case-lambda
                                                                       ((g$e$10359$XcRv&
                                                                          g$r$10360$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$t$10361$XcRv&)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10362$XcRv&)
                                                                                (if (if g$ls/false$10362$XcRv&
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10363$XcRv&)
                                                                                             (g$id?$7744$XcRv&
                                                                                               g$id$10363$XcRv&)))
                                                                                          g$ls/false$10362$XcRv&))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10364$XcRv&)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7764$XcRv&
                                                                                              g$id$10364$XcRv&
                                                                                              g$r$10360$XcRv&)))
                                                                                         (case-lambda
                                                                                           ((g$type$10368$XcRv&
                                                                                              g$value$10369$XcRv&
                                                                                              g$kwd$10370$XcRv&)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10371$XcRv&
                                                                                                  g$value$10372$XcRv&
                                                                                                  g$type$10373$XcRv&)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10374$XcRv&)
                                                                                                    (if (eqv?
                                                                                                          g$t$10374$XcRv&
                                                                                                          '$module)
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10375$XcRv&)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$8064$XcRv&
                                                                                                              g$iface$10375$XcRv&
                                                                                                              g$id$10364$XcRv&)
                                                                                                            (g$module-interface-exp-lab-vec$8060$XcRv&
                                                                                                              g$iface$10375$XcRv&))))
                                                                                                       g$value$10372$XcRv&)
                                                                                                      (g$syntax-violation$8128$XcRv&
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10359$XcRv&))))
                                                                                                 g$type$10373$XcRv&)))
                                                                                             g$kwd$10370$XcRv&
                                                                                             g$value$10369$XcRv&
                                                                                             g$type$10368$XcRv&))))))
                                                                                    g$ls/false$10362$XcRv&)
                                                                                  (g$syntax-violation$8128$XcRv&
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10361$XcRv&))))
                                                                             (g$syntax-dispatch$8022$XcRv&
                                                                               g$t$10361$XcRv&
                                                                               '(_ any)))))
                                                                         g$e$10359$XcRv&))))
                                                                   (g$library-import$10336$XcRv&
                                                                     (case-lambda
                                                                       ((g$e$10345$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$t$10346$XcRv&)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10347$XcRv&)
                                                                                (if g$ls/false$10347$XcRv&
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10348$XcRv&
                                                                                         g$imp*$10349$XcRv&)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$8071$XcRv&
                                                                                              (g$syntax->datum$8131$XcRv&
                                                                                                g$imp*$10349$XcRv&))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10352$XcRv&
                                                                                              g$subst-labels$10353$XcRv&)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10354$XcRv&
                                                                                                  g$subst-names$10355$XcRv&)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10356$XcRv&)
                                                                                                       (g$datum->stx$7727$XcRv&
                                                                                                         g$ctxt$10348$XcRv&
                                                                                                         g$name$10356$XcRv&)))
                                                                                                    g$subst-names$10355$XcRv&)
                                                                                                  g$subst-labels$10354$XcRv&)))
                                                                                             g$subst-labels$10353$XcRv&
                                                                                             g$subst-names$10352$XcRv&))))))
                                                                                    g$ls/false$10347$XcRv&)
                                                                                  ((case-lambda
                                                                                     ((g$t$10357$XcRv&)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10358$XcRv&)
                                                                                          (if g$ls/false$10358$XcRv&
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8128$XcRv&
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10345$XcRv&)))
                                                                                              g$ls/false$10358$XcRv&)
                                                                                            (g$syntax-violation$8128$XcRv&
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10357$XcRv&))))
                                                                                       (g$syntax-dispatch$8022$XcRv&
                                                                                         g$t$10357$XcRv&
                                                                                         '_))))
                                                                                   g$t$10346$XcRv&))))
                                                                             (g$syntax-dispatch$8022$XcRv&
                                                                               g$t$10346$XcRv&
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10345$XcRv&)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$10334$XcRv&
                                                                      g$e$10322$XcRv&)
                                                                  (g$module-import$10335$XcRv&
                                                                    g$e$10322$XcRv&
                                                                    g$r$10314$XcRv&)
                                                                  (g$library-import$10336$XcRv&
                                                                    g$e$10322$XcRv&))))
                                                             (case-lambda
                                                               ((g$id*$10339$XcRv&
                                                                  g$lab*$10340$XcRv&)
                                                                ((case-lambda
                                                                   ((g$lab*$10341$XcRv&
                                                                      g$id*$10342$XcRv&)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$10343$XcRv&
                                                                           g$lab$10344$XcRv&)
                                                                         (g$extend-rib!$7708$XcRv&
                                                                           g$rib$10320$XcRv&
                                                                           g$id$10343$XcRv&
                                                                           g$lab$10344$XcRv&)))
                                                                      g$id*$10342$XcRv&
                                                                      g$lab*$10341$XcRv&)))
                                                                 g$lab*$10340$XcRv&
                                                                 g$id*$10339$XcRv&))))))))
                                                     (g$chi-body*$8066$XcRv&
                                                       (cdr g$e*$10313$XcRv&)
                                                       g$r$10314$XcRv&
                                                       g$mr$10315$XcRv&
                                                       g$lex*$10316$XcRv&
                                                       g$rhs*$10317$XcRv&
                                                       g$mod**$10318$XcRv&
                                                       g$kwd*$10332$XcRv&
                                                       g$rib$10320$XcRv&
                                                       g$top?$10321$XcRv&))
                                                   (if g$top?$10321$XcRv&
                                                     (g$chi-body*$8066$XcRv&
                                                       (cdr g$e*$10313$XcRv&)
                                                       g$r$10314$XcRv&
                                                       g$mr$10315$XcRv&
                                                       (cons
                                                         (g$gen-lexical$7688$XcRv&
                                                           'dummy)
                                                         g$lex*$10316$XcRv&)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$10322$XcRv&)
                                                         g$rhs*$10317$XcRv&)
                                                       g$mod**$10318$XcRv&
                                                       g$kwd*$10332$XcRv&
                                                       g$rib$10320$XcRv&
                                                       g$top?$10321$XcRv&)
                                                     (values
                                                       g$e*$10313$XcRv&
                                                       g$r$10314$XcRv&
                                                       g$mr$10315$XcRv&
                                                       g$lex*$10316$XcRv&
                                                       g$rhs*$10317$XcRv&
                                                       g$mod**$10318$XcRv&
                                                       g$kwd*$10332$XcRv&))))))))))))))
                            g$type$10331$XcRv&)))
                        (if (g$id?$7744$XcRv& g$kwd$10329$XcRv&)
                          (cons g$kwd$10329$XcRv& g$kwd*$10319$XcRv&)
                          g$kwd*$10319$XcRv&))))
                    g$kwd$10328$XcRv&
                    g$value$10327$XcRv&
                    g$type$10326$XcRv&))))))
           (car g$e*$10313$XcRv&))))))
   (g$expand-transformer$8067$XcRv&
     g$expand-transformer$11517$XcRv&
     (case-lambda
       ((g$expr$10449$XcRv& g$r$10450$XcRv&)
        ((case-lambda
           ((g$rtc$10451$XcRv&)
            ((case-lambda
               ((g$expanded-rhs$10452$XcRv&)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$10453$XcRv&)
                        (case-lambda
                          ((g$x$10454$XcRv&)
                           (begin
                             (g$invoke-library$7559$XcRv& g$x$10454$XcRv&)
                             (g$mark-visit$10453$XcRv& g$x$10454$XcRv&))))))
                     (g$vis-collector$8075$XcRv&))
                    (g$rtc$10451$XcRv&))
                  g$expanded-rhs$10452$XcRv&)))
             ((case-lambda
                ((g$inv-collector$10459$XcRv&
                   g$vis-collector$10460$XcRv&
                   g$inv-collector$10461$XcRv&
                   g$vis-collector$10462$XcRv&)
                 ((case-lambda
                    ((g$swap$10463$XcRv&)
                     (dynamic-wind
                       g$swap$10463$XcRv&
                       (case-lambda
                         (()
                          (g$chi-expr$8040$XcRv&
                            g$expr$10449$XcRv&
                            g$r$10450$XcRv&
                            g$r$10450$XcRv&)))
                       g$swap$10463$XcRv&)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10464$XcRv&)
                           (begin
                             (g$inv-collector$10459$XcRv&
                               g$inv-collector$10461$XcRv&)
                             (set! g$inv-collector$10461$XcRv&
                               g$t$10464$XcRv&))))
                        (g$inv-collector$10459$XcRv&))
                       ((case-lambda
                          ((g$t$10465$XcRv&)
                           (begin
                             (g$vis-collector$10460$XcRv&
                               g$vis-collector$10462$XcRv&)
                             (set! g$vis-collector$10462$XcRv&
                               g$t$10465$XcRv&))))
                        (g$vis-collector$10460$XcRv&))))))))
              g$inv-collector$8074$XcRv&
              g$vis-collector$8075$XcRv&
              g$rtc$10451$XcRv&
              (case-lambda ((g$x$10466$XcRv&) (values)))))))
         (g$make-collector$8073$XcRv&)))))
   (g$parse-exports$8068$XcRv&
     g$parse-exports$11518$XcRv&
     (case-lambda
       ((g$exp*$10467$XcRv&)
        (letrec* ((g$idsyn?$10468$XcRv&
                    (case-lambda
                      ((g$x$10483$XcRv&)
                       (symbol?
                         (g$syntax->datum$8131$XcRv& g$x$10483$XcRv&))))))
          ((letrec ((g$f$10469$XcRv&
                      (case-lambda
                        ((g$exp*$10470$XcRv&
                           g$int*$10471$XcRv&
                           g$ext*$10472$XcRv&)
                         (if (null? g$exp*$10470$XcRv&)
                           (begin
                             ((case-lambda
                                ((g$id*$10473$XcRv&)
                                 (if (g$valid-bound-ids?$7749$XcRv&
                                       g$id*$10473$XcRv&)
                                   (void)
                                   (g$syntax-violation$8128$XcRv&
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$8050$XcRv&
                                       g$id*$10473$XcRv&)))))
                              (map (case-lambda
                                     ((g$x$10474$XcRv&)
                                      (g$make-stx$7717$XcRv&
                                        g$x$10474$XcRv&
                                        g$top-mark*$7686$XcRv&
                                        '()
                                        '())))
                                   g$ext*$10472$XcRv&))
                             (values
                               (map g$syntax->datum$8131$XcRv&
                                    g$int*$10471$XcRv&)
                               (map g$syntax->datum$8131$XcRv&
                                    g$ext*$10472$XcRv&)))
                           ((case-lambda
                              ((g$t$10475$XcRv&)
                               ((case-lambda
                                  ((g$ls/false$10476$XcRv&)
                                   (if g$ls/false$10476$XcRv&
                                     (apply
                                       (case-lambda
                                         ((g$rename$10477$XcRv&
                                            g$i*$10478$XcRv&
                                            g$e*$10479$XcRv&)
                                          (begin
                                            (if (if (eq? (g$syntax->datum$8131$XcRv&
                                                           g$rename$10477$XcRv&)
                                                         'rename)
                                                  (if (g$for-all$6019$XcRv&
                                                        g$idsyn?$10468$XcRv&
                                                        g$i*$10478$XcRv&)
                                                    (begin
                                                      '#f
                                                      (g$for-all$6019$XcRv&
                                                        g$idsyn?$10468$XcRv&
                                                        g$e*$10479$XcRv&))
                                                    '#f)
                                                  '#f)
                                              (void)
                                              (g$syntax-violation$8128$XcRv&
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$10470$XcRv&)))
                                            (g$f$10469$XcRv&
                                              (cdr g$exp*$10470$XcRv&)
                                              (append
                                                g$i*$10478$XcRv&
                                                g$int*$10471$XcRv&)
                                              (append
                                                g$e*$10479$XcRv&
                                                g$ext*$10472$XcRv&)))))
                                       g$ls/false$10476$XcRv&)
                                     ((case-lambda
                                        ((g$t$10480$XcRv&)
                                         ((case-lambda
                                            ((g$ls/false$10481$XcRv&)
                                             (if g$ls/false$10481$XcRv&
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$10482$XcRv&)
                                                    (begin
                                                      (if (g$idsyn?$10468$XcRv&
                                                            g$ie$10482$XcRv&)
                                                        (void)
                                                        (g$syntax-violation$8128$XcRv&
                                                          'export
                                                          '"invalid export"
                                                          g$ie$10482$XcRv&))
                                                      (g$f$10469$XcRv&
                                                        (cdr g$exp*$10470$XcRv&)
                                                        (cons
                                                          g$ie$10482$XcRv&
                                                          g$int*$10471$XcRv&)
                                                        (cons
                                                          g$ie$10482$XcRv&
                                                          g$ext*$10472$XcRv&)))))
                                                 g$ls/false$10481$XcRv&)
                                               (g$syntax-violation$8128$XcRv&
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10480$XcRv&))))
                                          (g$syntax-dispatch$8022$XcRv&
                                            g$t$10480$XcRv&
                                            'any))))
                                      g$t$10475$XcRv&))))
                                (g$syntax-dispatch$8022$XcRv&
                                  g$t$10475$XcRv&
                                  '(any . #(each (any any)))))))
                            (car g$exp*$10470$XcRv&)))))))
             g$f$10469$XcRv&)
           g$exp*$10467$XcRv&
           '()
           '())))))
   (g$parse-library-name$8069$XcRv&
     g$parse-library-name$11519$XcRv&
     (case-lambda
       ((g$spec$10484$XcRv&)
        (letrec* ((g$parse$10485$XcRv&
                    (case-lambda
                      ((g$x$10492$XcRv&)
                       ((case-lambda
                          ((g$t$10493$XcRv&)
                           ((case-lambda
                              ((g$ls/false$10494$XcRv&)
                               (if (if g$ls/false$10494$XcRv&
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10495$XcRv&)
                                            (g$for-all$6019$XcRv&
                                              (case-lambda
                                                ((g$x$10496$XcRv&)
                                                 ((case-lambda
                                                    ((g$x$10497$XcRv&)
                                                     (if (integer?
                                                           g$x$10497$XcRv&)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10497$XcRv&))
                                                       '#f)))
                                                  (g$syntax->datum$8131$XcRv&
                                                    g$x$10496$XcRv&))))
                                              g$v*$10495$XcRv&)))
                                         g$ls/false$10494$XcRv&))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10498$XcRv&)
                                      (values
                                        '()
                                        (map g$syntax->datum$8131$XcRv&
                                             g$v*$10498$XcRv&))))
                                   g$ls/false$10494$XcRv&)
                                 ((case-lambda
                                    ((g$t$10499$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$10500$XcRv&)
                                         (if (if g$ls/false$10500$XcRv&
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10501$XcRv&
                                                        g$rest$10502$XcRv&)
                                                      (symbol?
                                                        (g$syntax->datum$8131$XcRv&
                                                          g$x$10501$XcRv&))))
                                                   g$ls/false$10500$XcRv&))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10503$XcRv&
                                                  g$rest$10504$XcRv&)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10485$XcRv&
                                                       g$rest$10504$XcRv&)))
                                                  (case-lambda
                                                    ((g$x*$10507$XcRv&
                                                       g$v*$10508$XcRv&)
                                                     ((case-lambda
                                                        ((g$v*$10509$XcRv&
                                                           g$x*$10510$XcRv&)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$8131$XcRv&
                                                               g$x$10503$XcRv&)
                                                             g$x*$10510$XcRv&)
                                                           g$v*$10509$XcRv&)))
                                                      g$v*$10508$XcRv&
                                                      g$x*$10507$XcRv&))))))
                                             g$ls/false$10500$XcRv&)
                                           ((case-lambda
                                              ((g$t$10511$XcRv&)
                                               ((case-lambda
                                                  ((g$ls/false$10512$XcRv&)
                                                   (if g$ls/false$10512$XcRv&
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10512$XcRv&)
                                                     ((case-lambda
                                                        ((g$t$10513$XcRv&)
                                                         ((case-lambda
                                                            ((g$ls/false$10514$XcRv&)
                                                             (if g$ls/false$10514$XcRv&
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$8128$XcRv&
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10484$XcRv&)))
                                                                 g$ls/false$10514$XcRv&)
                                                               (g$syntax-violation$8128$XcRv&
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10513$XcRv&))))
                                                          (g$syntax-dispatch$8022$XcRv&
                                                            g$t$10513$XcRv&
                                                            '_))))
                                                      g$t$10511$XcRv&))))
                                                (g$syntax-dispatch$8022$XcRv&
                                                  g$t$10511$XcRv&
                                                  '()))))
                                            g$t$10499$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$10499$XcRv&
                                        '(any . any)))))
                                  g$t$10493$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv&
                              g$t$10493$XcRv&
                              '(each-any)))))
                        g$x$10492$XcRv&)))))
          (call-with-values
            (case-lambda (() (g$parse$10485$XcRv& g$spec$10484$XcRv&)))
            (case-lambda
              ((g$name*$10488$XcRv& g$ver*$10489$XcRv&)
               ((case-lambda
                  ((g$ver*$10490$XcRv& g$name*$10491$XcRv&)
                   (begin
                     (if (null? g$name*$10491$XcRv&)
                       (g$syntax-violation$8128$XcRv&
                         '#f
                         '"empty library name"
                         g$spec$10484$XcRv&)
                       (void))
                     (values g$name*$10491$XcRv& g$ver*$10490$XcRv&))))
                g$ver*$10489$XcRv&
                g$name*$10488$XcRv&))))))))
   (g$parse-library$8070$XcRv&
     g$parse-library$11520$XcRv&
     (case-lambda
       ((g$e$10515$XcRv&)
        ((case-lambda
           ((g$t$10516$XcRv&)
            ((case-lambda
               ((g$ls/false$10517$XcRv&)
                (if (if g$ls/false$10517$XcRv&
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10518$XcRv&
                               g$name*$10519$XcRv&
                               g$export$10520$XcRv&
                               g$exp*$10521$XcRv&
                               g$import$10522$XcRv&
                               g$imp*$10523$XcRv&
                               g$b*$10524$XcRv&)
                             (if (eq? (g$syntax->datum$8131$XcRv&
                                        g$export$10520$XcRv&)
                                      'export)
                               (if (eq? (g$syntax->datum$8131$XcRv&
                                          g$import$10522$XcRv&)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$8131$XcRv&
                                          g$library$10518$XcRv&)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10517$XcRv&))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10525$XcRv&
                         g$name*$10526$XcRv&
                         g$export$10527$XcRv&
                         g$exp*$10528$XcRv&
                         g$import$10529$XcRv&
                         g$imp*$10530$XcRv&
                         g$b*$10531$XcRv&)
                       (values
                         g$name*$10526$XcRv&
                         g$exp*$10528$XcRv&
                         g$imp*$10530$XcRv&
                         g$b*$10531$XcRv&)))
                    g$ls/false$10517$XcRv&)
                  ((case-lambda
                     ((g$t$10532$XcRv&)
                      ((case-lambda
                         ((g$ls/false$10533$XcRv&)
                          (if g$ls/false$10533$XcRv&
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8128$XcRv&
                                   '#f
                                   '"malformed library"
                                   g$e$10515$XcRv&)))
                              g$ls/false$10533$XcRv&)
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"invalid syntax"
                              g$t$10532$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv& g$t$10532$XcRv& '_))))
                   g$t$10516$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$10516$XcRv&
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10515$XcRv&))))
   (g$parse-import-spec*$8071$XcRv&
     g$parse-import-spec*$11521$XcRv&
     (case-lambda
       ((g$imp*$10534$XcRv&)
        (letrec* ((g$idsyn?$10535$XcRv&
                    (case-lambda
                      ((g$x$10794$XcRv&)
                       (symbol? (g$syntax->datum$8131$XcRv& g$x$10794$XcRv&)))))
                  (g$dup-error$10536$XcRv&
                    (case-lambda
                      ((g$name$10793$XcRv&)
                       (g$syntax-violation$8128$XcRv&
                         'import
                         '"two imports with different bindings"
                         g$name$10793$XcRv&))))
                  (g$merge-substs$10537$XcRv&
                    (case-lambda
                      ((g$s$10784$XcRv& g$subst$10785$XcRv&)
                       (letrec* ((g$insert-to-subst$10786$XcRv&
                                   (case-lambda
                                     ((g$a$10787$XcRv& g$subst$10788$XcRv&)
                                      ((case-lambda
                                         ((g$name$10789$XcRv&
                                            g$label$10790$XcRv&)
                                          ((case-lambda
                                             ((g$t$10791$XcRv&)
                                              (if g$t$10791$XcRv&
                                                ((case-lambda
                                                   ((g$x$10792$XcRv&)
                                                    (if (eq? (cdr g$x$10792$XcRv&)
                                                             g$label$10790$XcRv&)
                                                      g$subst$10788$XcRv&
                                                      (g$dup-error$10536$XcRv&
                                                        g$name$10789$XcRv&))))
                                                 g$t$10791$XcRv&)
                                                (cons
                                                  g$a$10787$XcRv&
                                                  g$subst$10788$XcRv&))))
                                           (assq
                                             g$name$10789$XcRv&
                                             g$subst$10788$XcRv&))))
                                       (car g$a$10787$XcRv&)
                                       (cdr g$a$10787$XcRv&))))))
                         (if (null? g$s$10784$XcRv&)
                           g$subst$10785$XcRv&
                           (g$insert-to-subst$10786$XcRv&
                             (car g$s$10784$XcRv&)
                             (g$merge-substs$10537$XcRv&
                               (cdr g$s$10784$XcRv&)
                               g$subst$10785$XcRv&)))))))
                  (g$exclude*$10538$XcRv&
                    (case-lambda
                      ((g$sym*$10760$XcRv& g$subst$10761$XcRv&)
                       (letrec* ((g$exclude$10762$XcRv&
                                   (case-lambda
                                     ((g$sym$10775$XcRv& g$subst$10776$XcRv&)
                                      (if (null? g$subst$10776$XcRv&)
                                        (g$syntax-violation$8128$XcRv&
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10775$XcRv&)
                                        (if (eq? g$sym$10775$XcRv&
                                                 (g$caar$5549$XcRv&
                                                   g$subst$10776$XcRv&))
                                          (values
                                            (g$cdar$5551$XcRv&
                                              g$subst$10776$XcRv&)
                                            (cdr g$subst$10776$XcRv&))
                                          ((case-lambda
                                             ((g$a$10777$XcRv&)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10762$XcRv&
                                                     g$sym$10775$XcRv&
                                                     (cdr g$subst$10776$XcRv&))))
                                                (case-lambda
                                                  ((g$old$10780$XcRv&
                                                     g$subst$10781$XcRv&)
                                                   ((case-lambda
                                                      ((g$subst$10782$XcRv&
                                                         g$old$10783$XcRv&)
                                                       (values
                                                         g$old$10783$XcRv&
                                                         (cons
                                                           g$a$10777$XcRv&
                                                           g$subst$10782$XcRv&))))
                                                    g$subst$10781$XcRv&
                                                    g$old$10780$XcRv&))))))
                                           (car g$subst$10776$XcRv&))))))))
                         (if (null? g$sym*$10760$XcRv&)
                           (values '() g$subst$10761$XcRv&)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10762$XcRv&
                                  (car g$sym*$10760$XcRv&)
                                  g$subst$10761$XcRv&)))
                             (case-lambda
                               ((g$old$10765$XcRv& g$subst$10766$XcRv&)
                                ((case-lambda
                                   ((g$subst$10767$XcRv& g$old$10768$XcRv&)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10538$XcRv&
                                           (cdr g$sym*$10760$XcRv&)
                                           g$subst$10767$XcRv&)))
                                      (case-lambda
                                        ((g$old*$10771$XcRv&
                                           g$subst$10772$XcRv&)
                                         ((case-lambda
                                            ((g$subst$10773$XcRv&
                                               g$old*$10774$XcRv&)
                                             (values
                                               (cons
                                                 g$old$10768$XcRv&
                                                 g$old*$10774$XcRv&)
                                               g$subst$10773$XcRv&)))
                                          g$subst$10772$XcRv&
                                          g$old*$10771$XcRv&))))))
                                 g$subst$10766$XcRv&
                                 g$old$10765$XcRv&)))))))))
                  (g$find*$10539$XcRv&
                    (case-lambda
                      ((g$sym*$10756$XcRv& g$subst$10757$XcRv&)
                       (map (case-lambda
                              ((g$x$10758$XcRv&)
                               ((case-lambda
                                  ((g$t$10759$XcRv&)
                                   (if g$t$10759$XcRv&
                                     (cdr g$t$10759$XcRv&)
                                     (g$syntax-violation$8128$XcRv&
                                       'import
                                       '"cannot find identifier"
                                       g$x$10758$XcRv&))))
                                (assq g$x$10758$XcRv& g$subst$10757$XcRv&))))
                            g$sym*$10756$XcRv&))))
                  (g$rem*$10540$XcRv&
                    (case-lambda
                      ((g$sym*$10752$XcRv& g$subst$10753$XcRv&)
                       ((letrec ((g$f$10754$XcRv&
                                   (case-lambda
                                     ((g$subst$10755$XcRv&)
                                      (if (null? g$subst$10755$XcRv&)
                                        '()
                                        (if (memq
                                              (g$caar$5549$XcRv&
                                                g$subst$10755$XcRv&)
                                              g$sym*$10752$XcRv&)
                                          (g$f$10754$XcRv&
                                            (cdr g$subst$10755$XcRv&))
                                          (cons
                                            (car g$subst$10755$XcRv&)
                                            (g$f$10754$XcRv&
                                              (cdr g$subst$10755$XcRv&)))))))))
                          g$f$10754$XcRv&)
                        g$subst$10753$XcRv&))))
                  (g$remove-dups$10541$XcRv&
                    (case-lambda
                      ((g$ls$10751$XcRv&)
                       (if (null? g$ls$10751$XcRv&)
                         '()
                         (if (memq
                               (car g$ls$10751$XcRv&)
                               (cdr g$ls$10751$XcRv&))
                           (g$remove-dups$10541$XcRv& (cdr g$ls$10751$XcRv&))
                           (cons
                             (car g$ls$10751$XcRv&)
                             (g$remove-dups$10541$XcRv&
                               (cdr g$ls$10751$XcRv&))))))))
                  (g$parse-library-name$10542$XcRv&
                    (case-lambda
                      ((g$spec$10636$XcRv&)
                       (letrec* ((g$subversion?$10637$XcRv&
                                   (case-lambda
                                     ((g$x$10750$XcRv&)
                                      (if (integer? g$x$10750$XcRv&)
                                        (if (exact? g$x$10750$XcRv&)
                                          (begin '#f (>= g$x$10750$XcRv& '0))
                                          '#f)
                                        '#f))))
                                 (g$subversion-pred$10638$XcRv&
                                   (case-lambda
                                     ((g$x*$10702$XcRv&)
                                      ((case-lambda
                                         ((g$t$10703$XcRv&)
                                          ((case-lambda
                                             ((g$ls/false$10704$XcRv&)
                                              (if (if g$ls/false$10704$XcRv&
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10705$XcRv&)
                                                           (g$subversion?$10637$XcRv&
                                                             (g$syntax->datum$8131$XcRv&
                                                               g$n$10705$XcRv&))))
                                                        g$ls/false$10704$XcRv&))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10706$XcRv&)
                                                     (case-lambda
                                                       ((g$x$10707$XcRv&)
                                                        (= g$x$10707$XcRv&
                                                           (g$syntax->datum$8131$XcRv&
                                                             g$n$10706$XcRv&))))))
                                                  g$ls/false$10704$XcRv&)
                                                ((case-lambda
                                                   ((g$t$10708$XcRv&)
                                                    ((case-lambda
                                                       ((g$ls/false$10709$XcRv&)
                                                        (if (if g$ls/false$10709$XcRv&
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10710$XcRv&
                                                                       g$sub*$10711$XcRv&)
                                                                     (eq? (g$syntax->datum$8131$XcRv&
                                                                            g$p?$10710$XcRv&)
                                                                          'and)))
                                                                  g$ls/false$10709$XcRv&))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10712$XcRv&
                                                                 g$sub*$10713$XcRv&)
                                                               ((case-lambda
                                                                  ((g$p*$10714$XcRv&)
                                                                   (case-lambda
                                                                     ((g$x$10715$XcRv&)
                                                                      (g$for-all$6019$XcRv&
                                                                        (case-lambda
                                                                          ((g$p$10716$XcRv&)
                                                                           (g$p$10716$XcRv&
                                                                             g$x$10715$XcRv&)))
                                                                        g$p*$10714$XcRv&)))))
                                                                (map g$subversion-pred$10638$XcRv&
                                                                     g$sub*$10713$XcRv&))))
                                                            g$ls/false$10709$XcRv&)
                                                          ((case-lambda
                                                             ((g$t$10717$XcRv&)
                                                              ((case-lambda
                                                                 ((g$ls/false$10718$XcRv&)
                                                                  (if (if g$ls/false$10718$XcRv&
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10719$XcRv&
                                                                                 g$sub*$10720$XcRv&)
                                                                               (eq? (g$syntax->datum$8131$XcRv&
                                                                                      g$p?$10719$XcRv&)
                                                                                    'or)))
                                                                            g$ls/false$10718$XcRv&))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10721$XcRv&
                                                                           g$sub*$10722$XcRv&)
                                                                         ((case-lambda
                                                                            ((g$p*$10723$XcRv&)
                                                                             (case-lambda
                                                                               ((g$x$10724$XcRv&)
                                                                                (g$exists$6020$XcRv&
                                                                                  (case-lambda
                                                                                    ((g$p$10725$XcRv&)
                                                                                     (g$p$10725$XcRv&
                                                                                       g$x$10724$XcRv&)))
                                                                                  g$p*$10723$XcRv&)))))
                                                                          (map g$subversion-pred$10638$XcRv&
                                                                               g$sub*$10722$XcRv&))))
                                                                      g$ls/false$10718$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$t$10726$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10727$XcRv&)
                                                                            (if (if g$ls/false$10727$XcRv&
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10728$XcRv&
                                                                                           g$sub$10729$XcRv&)
                                                                                         (eq? (g$syntax->datum$8131$XcRv&
                                                                                                g$p?$10728$XcRv&)
                                                                                              'not)))
                                                                                      g$ls/false$10727$XcRv&))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10730$XcRv&
                                                                                     g$sub$10731$XcRv&)
                                                                                   ((case-lambda
                                                                                      ((g$p$10732$XcRv&)
                                                                                       (case-lambda
                                                                                         ((g$x$10733$XcRv&)
                                                                                          (not (g$p$10732$XcRv&
                                                                                                 g$x$10733$XcRv&))))))
                                                                                    (g$subversion-pred$10638$XcRv&
                                                                                      g$sub$10731$XcRv&))))
                                                                                g$ls/false$10727$XcRv&)
                                                                              ((case-lambda
                                                                                 ((g$t$10734$XcRv&)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10735$XcRv&)
                                                                                      (if (if g$ls/false$10735$XcRv&
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10736$XcRv&
                                                                                                     g$n$10737$XcRv&)
                                                                                                   (if (eq? (g$syntax->datum$8131$XcRv&
                                                                                                              g$p?$10736$XcRv&)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10637$XcRv&
                                                                                                         (g$syntax->datum$8131$XcRv&
                                                                                                           g$n$10737$XcRv&)))
                                                                                                     '#f)))
                                                                                                g$ls/false$10735$XcRv&))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10738$XcRv&
                                                                                               g$n$10739$XcRv&)
                                                                                             (case-lambda
                                                                                               ((g$x$10740$XcRv&)
                                                                                                (<= g$x$10740$XcRv&
                                                                                                    (g$syntax->datum$8131$XcRv&
                                                                                                      g$n$10739$XcRv&))))))
                                                                                          g$ls/false$10735$XcRv&)
                                                                                        ((case-lambda
                                                                                           ((g$t$10741$XcRv&)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10742$XcRv&)
                                                                                                (if (if g$ls/false$10742$XcRv&
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10743$XcRv&
                                                                                                               g$n$10744$XcRv&)
                                                                                                             (if (eq? (g$syntax->datum$8131$XcRv&
                                                                                                                        g$p?$10743$XcRv&)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10637$XcRv&
                                                                                                                   g$n$10744$XcRv&))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10742$XcRv&))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10745$XcRv&
                                                                                                         g$n$10746$XcRv&)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10747$XcRv&)
                                                                                                          (>= g$x$10747$XcRv&
                                                                                                              (g$syntax->datum$8131$XcRv&
                                                                                                                g$n$10746$XcRv&))))))
                                                                                                    g$ls/false$10742$XcRv&)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10748$XcRv&)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10749$XcRv&)
                                                                                                          (if g$ls/false$10749$XcRv&
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$8128$XcRv&
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10636$XcRv&
                                                                                                                   g$x*$10702$XcRv&)))
                                                                                                              g$ls/false$10749$XcRv&)
                                                                                                            (g$syntax-violation$8128$XcRv&
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10748$XcRv&))))
                                                                                                       (g$syntax-dispatch$8022$XcRv&
                                                                                                         g$t$10748$XcRv&
                                                                                                         '_))))
                                                                                                   g$t$10741$XcRv&))))
                                                                                             (g$syntax-dispatch$8022$XcRv&
                                                                                               g$t$10741$XcRv&
                                                                                               '(any any)))))
                                                                                         g$t$10734$XcRv&))))
                                                                                   (g$syntax-dispatch$8022$XcRv&
                                                                                     g$t$10734$XcRv&
                                                                                     '(any any)))))
                                                                               g$t$10726$XcRv&))))
                                                                         (g$syntax-dispatch$8022$XcRv&
                                                                           g$t$10726$XcRv&
                                                                           '(any any)))))
                                                                     g$t$10717$XcRv&))))
                                                               (g$syntax-dispatch$8022$XcRv&
                                                                 g$t$10717$XcRv&
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10708$XcRv&))))
                                                     (g$syntax-dispatch$8022$XcRv&
                                                       g$t$10708$XcRv&
                                                       '(any . each-any)))))
                                                 g$t$10703$XcRv&))))
                                           (g$syntax-dispatch$8022$XcRv&
                                             g$t$10703$XcRv&
                                             'any))))
                                       g$x*$10702$XcRv&))))
                                 (g$version-pred$10639$XcRv&
                                   (case-lambda
                                     ((g$x*$10662$XcRv&)
                                      ((case-lambda
                                         ((g$t$10663$XcRv&)
                                          ((case-lambda
                                             ((g$ls/false$10664$XcRv&)
                                              (if g$ls/false$10664$XcRv&
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10665$XcRv&)
                                                        '#t))))
                                                  g$ls/false$10664$XcRv&)
                                                ((case-lambda
                                                   ((g$t$10666$XcRv&)
                                                    ((case-lambda
                                                       ((g$ls/false$10667$XcRv&)
                                                        (if (if g$ls/false$10667$XcRv&
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10668$XcRv&
                                                                       g$ver*$10669$XcRv&)
                                                                     (eq? (g$syntax->datum$8131$XcRv&
                                                                            g$c$10668$XcRv&)
                                                                          'and)))
                                                                  g$ls/false$10667$XcRv&))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10670$XcRv&
                                                                 g$ver*$10671$XcRv&)
                                                               ((case-lambda
                                                                  ((g$p*$10672$XcRv&)
                                                                   (case-lambda
                                                                     ((g$x$10673$XcRv&)
                                                                      (g$for-all$6019$XcRv&
                                                                        (case-lambda
                                                                          ((g$p$10674$XcRv&)
                                                                           (g$p$10674$XcRv&
                                                                             g$x$10673$XcRv&)))
                                                                        g$p*$10672$XcRv&)))))
                                                                (map g$version-pred$10639$XcRv&
                                                                     g$ver*$10671$XcRv&))))
                                                            g$ls/false$10667$XcRv&)
                                                          ((case-lambda
                                                             ((g$t$10675$XcRv&)
                                                              ((case-lambda
                                                                 ((g$ls/false$10676$XcRv&)
                                                                  (if (if g$ls/false$10676$XcRv&
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10677$XcRv&
                                                                                 g$ver*$10678$XcRv&)
                                                                               (eq? (g$syntax->datum$8131$XcRv&
                                                                                      g$c$10677$XcRv&)
                                                                                    'or)))
                                                                            g$ls/false$10676$XcRv&))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10679$XcRv&
                                                                           g$ver*$10680$XcRv&)
                                                                         ((case-lambda
                                                                            ((g$p*$10681$XcRv&)
                                                                             (case-lambda
                                                                               ((g$x$10682$XcRv&)
                                                                                (g$exists$6020$XcRv&
                                                                                  (case-lambda
                                                                                    ((g$p$10683$XcRv&)
                                                                                     (g$p$10683$XcRv&
                                                                                       g$x$10682$XcRv&)))
                                                                                  g$p*$10681$XcRv&)))))
                                                                          (map g$version-pred$10639$XcRv&
                                                                               g$ver*$10680$XcRv&))))
                                                                      g$ls/false$10676$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$t$10684$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10685$XcRv&)
                                                                            (if (if g$ls/false$10685$XcRv&
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10686$XcRv&
                                                                                           g$ver$10687$XcRv&)
                                                                                         (eq? (g$syntax->datum$8131$XcRv&
                                                                                                g$c$10686$XcRv&)
                                                                                              'not)))
                                                                                      g$ls/false$10685$XcRv&))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10688$XcRv&
                                                                                     g$ver$10689$XcRv&)
                                                                                   ((case-lambda
                                                                                      ((g$p$10690$XcRv&)
                                                                                       (case-lambda
                                                                                         ((g$x$10691$XcRv&)
                                                                                          (not (g$p$10690$XcRv&
                                                                                                 g$x$10691$XcRv&))))))
                                                                                    (g$version-pred$10639$XcRv&
                                                                                      g$ver$10689$XcRv&))))
                                                                                g$ls/false$10685$XcRv&)
                                                                              ((case-lambda
                                                                                 ((g$t$10692$XcRv&)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10693$XcRv&)
                                                                                      (if g$ls/false$10693$XcRv&
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10694$XcRv&)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10695$XcRv&)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10696$XcRv&)
                                                                                                    ((letrec ((g$f$10697$XcRv&
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10698$XcRv&
                                                                                                                     g$x$10699$XcRv&)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10698$XcRv&)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10699$XcRv&)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10698$XcRv&)
                                                                                                                            (car g$x$10699$XcRv&))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10697$XcRv&
                                                                                                                             (cdr g$p*$10698$XcRv&)
                                                                                                                             (cdr g$x$10699$XcRv&)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10697$XcRv&)
                                                                                                     g$p*$10695$XcRv&
                                                                                                     g$x$10696$XcRv&)))))
                                                                                              (map g$subversion-pred$10638$XcRv&
                                                                                                   g$sub*$10694$XcRv&))))
                                                                                          g$ls/false$10693$XcRv&)
                                                                                        ((case-lambda
                                                                                           ((g$t$10700$XcRv&)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10701$XcRv&)
                                                                                                (if g$ls/false$10701$XcRv&
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$8128$XcRv&
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10636$XcRv&
                                                                                                         g$x*$10662$XcRv&)))
                                                                                                    g$ls/false$10701$XcRv&)
                                                                                                  (g$syntax-violation$8128$XcRv&
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10700$XcRv&))))
                                                                                             (g$syntax-dispatch$8022$XcRv&
                                                                                               g$t$10700$XcRv&
                                                                                               '_))))
                                                                                         g$t$10692$XcRv&))))
                                                                                   (g$syntax-dispatch$8022$XcRv&
                                                                                     g$t$10692$XcRv&
                                                                                     'each-any))))
                                                                               g$t$10684$XcRv&))))
                                                                         (g$syntax-dispatch$8022$XcRv&
                                                                           g$t$10684$XcRv&
                                                                           '(any any)))))
                                                                     g$t$10675$XcRv&))))
                                                               (g$syntax-dispatch$8022$XcRv&
                                                                 g$t$10675$XcRv&
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10666$XcRv&))))
                                                     (g$syntax-dispatch$8022$XcRv&
                                                       g$t$10666$XcRv&
                                                       '(any . each-any)))))
                                                 g$t$10663$XcRv&))))
                                           (g$syntax-dispatch$8022$XcRv&
                                             g$t$10663$XcRv&
                                             '()))))
                                       g$x*$10662$XcRv&)))))
                         ((letrec ((g$f$10640$XcRv&
                                     (case-lambda
                                       ((g$x$10641$XcRv&)
                                        ((case-lambda
                                           ((g$t$10642$XcRv&)
                                            ((case-lambda
                                               ((g$ls/false$10643$XcRv&)
                                                (if g$ls/false$10643$XcRv&
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10644$XcRv&)
                                                       (values
                                                         '()
                                                         (g$version-pred$10639$XcRv&
                                                           g$version-spec*$10644$XcRv&))))
                                                    g$ls/false$10643$XcRv&)
                                                  ((case-lambda
                                                     ((g$t$10645$XcRv&)
                                                      ((case-lambda
                                                         ((g$ls/false$10646$XcRv&)
                                                          (if (if g$ls/false$10646$XcRv&
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10647$XcRv&
                                                                         g$x*$10648$XcRv&)
                                                                       (g$idsyn?$10535$XcRv&
                                                                         g$x$10647$XcRv&)))
                                                                    g$ls/false$10646$XcRv&))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10649$XcRv&
                                                                   g$x*$10650$XcRv&)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10640$XcRv&
                                                                        g$x*$10650$XcRv&)))
                                                                   (case-lambda
                                                                     ((g$name$10653$XcRv&
                                                                        g$pred$10654$XcRv&)
                                                                      ((case-lambda
                                                                         ((g$pred$10655$XcRv&
                                                                            g$name$10656$XcRv&)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$8131$XcRv&
                                                                                g$x$10649$XcRv&)
                                                                              g$name$10656$XcRv&)
                                                                            g$pred$10655$XcRv&)))
                                                                       g$pred$10654$XcRv&
                                                                       g$name$10653$XcRv&))))))
                                                              g$ls/false$10646$XcRv&)
                                                            ((case-lambda
                                                               ((g$t$10657$XcRv&)
                                                                ((case-lambda
                                                                   ((g$ls/false$10658$XcRv&)
                                                                    (if g$ls/false$10658$XcRv&
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10659$XcRv&)
                                                                                '#t)))))
                                                                        g$ls/false$10658$XcRv&)
                                                                      ((case-lambda
                                                                         ((g$t$10660$XcRv&)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10661$XcRv&)
                                                                              (if g$ls/false$10661$XcRv&
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$8128$XcRv&
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10636$XcRv&)))
                                                                                  g$ls/false$10661$XcRv&)
                                                                                (g$syntax-violation$8128$XcRv&
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10660$XcRv&))))
                                                                           (g$syntax-dispatch$8022$XcRv&
                                                                             g$t$10660$XcRv&
                                                                             '_))))
                                                                       g$t$10657$XcRv&))))
                                                                 (g$syntax-dispatch$8022$XcRv&
                                                                   g$t$10657$XcRv&
                                                                   '()))))
                                                             g$t$10645$XcRv&))))
                                                       (g$syntax-dispatch$8022$XcRv&
                                                         g$t$10645$XcRv&
                                                         '(any . any)))))
                                                   g$t$10642$XcRv&))))
                                             (g$syntax-dispatch$8022$XcRv&
                                               g$t$10642$XcRv&
                                               '(each-any)))))
                                         g$x$10641$XcRv&)))))
                            g$f$10640$XcRv&)
                          g$spec$10636$XcRv&)))))
                  (g$import-library$10543$XcRv&
                    (case-lambda
                      ((g$spec*$10628$XcRv&)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10542$XcRv&
                              g$spec*$10628$XcRv&)))
                         (case-lambda
                           ((g$name$10631$XcRv& g$pred$10632$XcRv&)
                            ((case-lambda
                               ((g$pred$10633$XcRv& g$name$10634$XcRv&)
                                (begin
                                  (if (null? g$name$10634$XcRv&)
                                    (g$syntax-violation$8128$XcRv&
                                      'import
                                      '"empty library name"
                                      g$spec*$10628$XcRv&)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10635$XcRv&)
                                      (begin
                                        (if g$lib$10635$XcRv&
                                          (void)
                                          (g$syntax-violation$8128$XcRv&
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10634$XcRv&))
                                        (if (g$pred$10633$XcRv&
                                              (g$library-version$7512$XcRv&
                                                g$lib$10635$XcRv&))
                                          (void)
                                          (g$syntax-violation$8128$XcRv&
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10628$XcRv&
                                            g$lib$10635$XcRv&))
                                        ((g$imp-collector$8076$XcRv&)
                                         g$lib$10635$XcRv&)
                                        (g$library-subst$7516$XcRv&
                                          g$lib$10635$XcRv&))))
                                   (g$find-library-by-name$7552$XcRv&
                                     g$name$10634$XcRv&)))))
                             g$pred$10632$XcRv&
                             g$name$10631$XcRv&)))))))
                  (g$get-import$10544$XcRv&
                    (case-lambda
                      ((g$spec$10557$XcRv&)
                       ((case-lambda
                          ((g$t$10558$XcRv&)
                           ((case-lambda
                              ((g$ls/false$10559$XcRv&)
                               (if (if g$ls/false$10559$XcRv&
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10560$XcRv& g$x*$10561$XcRv&)
                                            (not (memq
                                                   (g$syntax->datum$8131$XcRv&
                                                     g$x$10560$XcRv&)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10559$XcRv&))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10562$XcRv& g$x*$10563$XcRv&)
                                      (g$import-library$10543$XcRv&
                                        (cons
                                          g$x$10562$XcRv&
                                          g$x*$10563$XcRv&))))
                                   g$ls/false$10559$XcRv&)
                                 ((case-lambda
                                    ((g$t$10564$XcRv&)
                                     ((case-lambda
                                        ((g$ls/false$10565$XcRv&)
                                         (if (if g$ls/false$10565$XcRv&
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10566$XcRv&
                                                        g$isp$10567$XcRv&
                                                        g$old*$10568$XcRv&
                                                        g$new*$10569$XcRv&)
                                                      (if (eq? (g$syntax->datum$8131$XcRv&
                                                                 g$rename$10566$XcRv&)
                                                               'rename)
                                                        (if (g$for-all$6019$XcRv&
                                                              g$idsyn?$10535$XcRv&
                                                              g$old*$10568$XcRv&)
                                                          (begin
                                                            '#f
                                                            (g$for-all$6019$XcRv&
                                                              g$idsyn?$10535$XcRv&
                                                              g$new*$10569$XcRv&))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10565$XcRv&))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10570$XcRv&
                                                  g$isp$10571$XcRv&
                                                  g$old*$10572$XcRv&
                                                  g$new*$10573$XcRv&)
                                                ((case-lambda
                                                   ((g$subst$10574$XcRv&
                                                      g$old*$10575$XcRv&
                                                      g$new*$10576$XcRv&)
                                                    ((case-lambda
                                                       ((g$old-label*$10577$XcRv&)
                                                        ((case-lambda
                                                           ((g$subst$10578$XcRv&)
                                                            (g$merge-substs$10537$XcRv&
                                                              (map cons
                                                                   g$new*$10576$XcRv&
                                                                   g$old-label*$10577$XcRv&)
                                                              g$subst$10578$XcRv&)))
                                                         (g$rem*$10540$XcRv&
                                                           g$old*$10575$XcRv&
                                                           g$subst$10574$XcRv&))))
                                                     (g$find*$10539$XcRv&
                                                       g$old*$10575$XcRv&
                                                       g$subst$10574$XcRv&))))
                                                 (g$get-import$10544$XcRv&
                                                   g$isp$10571$XcRv&)
                                                 (map g$syntax->datum$8131$XcRv&
                                                      g$old*$10572$XcRv&)
                                                 (map g$syntax->datum$8131$XcRv&
                                                      g$new*$10573$XcRv&))))
                                             g$ls/false$10565$XcRv&)
                                           ((case-lambda
                                              ((g$t$10579$XcRv&)
                                               ((case-lambda
                                                  ((g$ls/false$10580$XcRv&)
                                                   (if (if g$ls/false$10580$XcRv&
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10581$XcRv&
                                                                  g$isp$10582$XcRv&
                                                                  g$sym*$10583$XcRv&)
                                                                (if (eq? (g$syntax->datum$8131$XcRv&
                                                                           g$except$10581$XcRv&)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$6019$XcRv&
                                                                      g$idsyn?$10535$XcRv&
                                                                      g$sym*$10583$XcRv&))
                                                                  '#f)))
                                                             g$ls/false$10580$XcRv&))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10584$XcRv&
                                                            g$isp$10585$XcRv&
                                                            g$sym*$10586$XcRv&)
                                                          ((case-lambda
                                                             ((g$subst$10587$XcRv&)
                                                              (g$rem*$10540$XcRv&
                                                                (map g$syntax->datum$8131$XcRv&
                                                                     g$sym*$10586$XcRv&)
                                                                g$subst$10587$XcRv&)))
                                                           (g$get-import$10544$XcRv&
                                                             g$isp$10585$XcRv&))))
                                                       g$ls/false$10580$XcRv&)
                                                     ((case-lambda
                                                        ((g$t$10588$XcRv&)
                                                         ((case-lambda
                                                            ((g$ls/false$10589$XcRv&)
                                                             (if (if g$ls/false$10589$XcRv&
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10590$XcRv&
                                                                            g$isp$10591$XcRv&
                                                                            g$sym*$10592$XcRv&)
                                                                          (if (eq? (g$syntax->datum$8131$XcRv&
                                                                                     g$only$10590$XcRv&)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$6019$XcRv&
                                                                                g$idsyn?$10535$XcRv&
                                                                                g$sym*$10592$XcRv&))
                                                                            '#f)))
                                                                       g$ls/false$10589$XcRv&))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10593$XcRv&
                                                                      g$isp$10594$XcRv&
                                                                      g$sym*$10595$XcRv&)
                                                                    ((case-lambda
                                                                       ((g$subst$10596$XcRv&
                                                                          g$sym*$10597$XcRv&)
                                                                        ((case-lambda
                                                                           ((g$sym*$10598$XcRv&)
                                                                            ((case-lambda
                                                                               ((g$lab*$10599$XcRv&)
                                                                                (map cons
                                                                                     g$sym*$10598$XcRv&
                                                                                     g$lab*$10599$XcRv&)))
                                                                             (g$find*$10539$XcRv&
                                                                               g$sym*$10598$XcRv&
                                                                               g$subst$10596$XcRv&))))
                                                                         (g$remove-dups$10541$XcRv&
                                                                           g$sym*$10597$XcRv&))))
                                                                     (g$get-import$10544$XcRv&
                                                                       g$isp$10594$XcRv&)
                                                                     (map g$syntax->datum$8131$XcRv&
                                                                          g$sym*$10595$XcRv&))))
                                                                 g$ls/false$10589$XcRv&)
                                                               ((case-lambda
                                                                  ((g$t$10600$XcRv&)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10601$XcRv&)
                                                                       (if (if g$ls/false$10601$XcRv&
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10602$XcRv&
                                                                                      g$isp$10603$XcRv&
                                                                                      g$p$10604$XcRv&)
                                                                                    (if (eq? (g$syntax->datum$8131$XcRv&
                                                                                               g$prefix$10602$XcRv&)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10535$XcRv&
                                                                                          g$p$10604$XcRv&))
                                                                                      '#f)))
                                                                                 g$ls/false$10601$XcRv&))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10605$XcRv&
                                                                                g$isp$10606$XcRv&
                                                                                g$p$10607$XcRv&)
                                                                              ((case-lambda
                                                                                 ((g$subst$10608$XcRv&
                                                                                    g$prefix$10609$XcRv&)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10610$XcRv&)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10609$XcRv&
                                                                                                (symbol->string
                                                                                                  (car g$x$10610$XcRv&))))
                                                                                            (cdr g$x$10610$XcRv&))))
                                                                                       g$subst$10608$XcRv&)))
                                                                               (g$get-import$10544$XcRv&
                                                                                 g$isp$10606$XcRv&)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$8131$XcRv&
                                                                                   g$p$10607$XcRv&)))))
                                                                           g$ls/false$10601$XcRv&)
                                                                         ((case-lambda
                                                                            ((g$t$10611$XcRv&)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10612$XcRv&)
                                                                                 (if (if g$ls/false$10612$XcRv&
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10613$XcRv&
                                                                                                g$spec*$10614$XcRv&)
                                                                                              (eq? (g$syntax->datum$8131$XcRv&
                                                                                                     g$library$10613$XcRv&)
                                                                                                   'library)))
                                                                                           g$ls/false$10612$XcRv&))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10615$XcRv&
                                                                                          g$spec*$10616$XcRv&)
                                                                                        (g$import-library$10543$XcRv&
                                                                                          g$spec*$10616$XcRv&)))
                                                                                     g$ls/false$10612$XcRv&)
                                                                                   ((case-lambda
                                                                                      ((g$t$10617$XcRv&)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10618$XcRv&)
                                                                                           (if (if g$ls/false$10618$XcRv&
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10619$XcRv&
                                                                                                          g$isp$10620$XcRv&
                                                                                                          g$rest$10621$XcRv&)
                                                                                                        (eq? (g$syntax->datum$8131$XcRv&
                                                                                                               g$for$10619$XcRv&)
                                                                                                             'for)))
                                                                                                     g$ls/false$10618$XcRv&))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10622$XcRv&
                                                                                                    g$isp$10623$XcRv&
                                                                                                    g$rest$10624$XcRv&)
                                                                                                  (g$get-import$10544$XcRv&
                                                                                                    g$isp$10623$XcRv&)))
                                                                                               g$ls/false$10618$XcRv&)
                                                                                             ((case-lambda
                                                                                                ((g$t$10625$XcRv&)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10626$XcRv&)
                                                                                                     (if g$ls/false$10626$XcRv&
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10627$XcRv&)
                                                                                                            (g$syntax-violation$8128$XcRv&
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10627$XcRv&)))
                                                                                                         g$ls/false$10626$XcRv&)
                                                                                                       (g$syntax-violation$8128$XcRv&
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10625$XcRv&))))
                                                                                                  (g$syntax-dispatch$8022$XcRv&
                                                                                                    g$t$10625$XcRv&
                                                                                                    'any))))
                                                                                              g$t$10617$XcRv&))))
                                                                                        (g$syntax-dispatch$8022$XcRv&
                                                                                          g$t$10617$XcRv&
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10611$XcRv&))))
                                                                              (g$syntax-dispatch$8022$XcRv&
                                                                                g$t$10611$XcRv&
                                                                                '(any each-any)))))
                                                                          g$t$10600$XcRv&))))
                                                                    (g$syntax-dispatch$8022$XcRv&
                                                                      g$t$10600$XcRv&
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10588$XcRv&))))
                                                          (g$syntax-dispatch$8022$XcRv&
                                                            g$t$10588$XcRv&
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10579$XcRv&))))
                                                (g$syntax-dispatch$8022$XcRv&
                                                  g$t$10579$XcRv&
                                                  '(any any . each-any)))))
                                            g$t$10564$XcRv&))))
                                      (g$syntax-dispatch$8022$XcRv&
                                        g$t$10564$XcRv&
                                        '(any any . #(each (any any)))))))
                                  g$t$10558$XcRv&))))
                            (g$syntax-dispatch$8022$XcRv&
                              g$t$10558$XcRv&
                              '(any . each-any)))))
                        g$spec$10557$XcRv&))))
                  (g$add-imports!$10545$XcRv&
                    (case-lambda
                      ((g$imp$10549$XcRv& g$h$10550$XcRv&)
                       ((case-lambda
                          ((g$subst$10551$XcRv&)
                           (for-each
                             (case-lambda
                               ((g$x$10552$XcRv&)
                                ((case-lambda
                                   ((g$name$10553$XcRv& g$label$10554$XcRv&)
                                    ((case-lambda
                                       ((g$t$10555$XcRv&)
                                        (if g$t$10555$XcRv&
                                          ((case-lambda
                                             ((g$l$10556$XcRv&)
                                              (if (eq? g$l$10556$XcRv&
                                                       g$label$10554$XcRv&)
                                                (void)
                                                (g$dup-error$10536$XcRv&
                                                  g$name$10553$XcRv&))))
                                           g$t$10555$XcRv&)
                                          (g$hashtable-set!$5816$XcRv&
                                            g$h$10550$XcRv&
                                            g$name$10553$XcRv&
                                            g$label$10554$XcRv&))))
                                     (g$hashtable-ref$5815$XcRv&
                                       g$h$10550$XcRv&
                                       g$name$10553$XcRv&
                                       '#f))))
                                 (car g$x$10552$XcRv&)
                                 (cdr g$x$10552$XcRv&))))
                             g$subst$10551$XcRv&)))
                        (g$get-import$10544$XcRv& g$imp$10549$XcRv&))))))
          ((letrec ((g$f$10546$XcRv&
                      (case-lambda
                        ((g$imp*$10547$XcRv& g$h$10548$XcRv&)
                         (if (null? g$imp*$10547$XcRv&)
                           (hashtable-entries g$h$10548$XcRv&)
                           (begin
                             (g$add-imports!$10545$XcRv&
                               (car g$imp*$10547$XcRv&)
                               g$h$10548$XcRv&)
                             (g$f$10546$XcRv&
                               (cdr g$imp*$10547$XcRv&)
                               g$h$10548$XcRv&)))))))
             g$f$10546$XcRv&)
           g$imp*$10534$XcRv&
           (g$make-eq-hashtable$5812$XcRv&))))))
   (g$make-top-rib$8072$XcRv&
     g$make-top-rib$11522$XcRv&
     (case-lambda
       ((g$names$10795$XcRv& g$labels$10796$XcRv&)
        ((case-lambda
           ((g$rib$10797$XcRv&)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10798$XcRv& g$label$10799$XcRv&)
                   (begin
                     (if (symbol? g$name$10798$XcRv&)
                       (void)
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10798$XcRv&))
                     (g$extend-rib!$7708$XcRv&
                       g$rib$10797$XcRv&
                       (g$make-stx$7717$XcRv&
                         g$name$10798$XcRv&
                         g$top-mark*$7686$XcRv&
                         '()
                         '())
                       g$label$10799$XcRv&))))
                g$names$10795$XcRv&
                g$labels$10796$XcRv&)
              g$rib$10797$XcRv&)))
         (g$make-empty-rib$7707$XcRv&)))))
   (g$make-collector$8073$XcRv&
     g$make-collector$11523$XcRv&
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10800$XcRv&)
            (case-lambda
              (() g$ls$10800$XcRv&)
              ((g$x$10801$XcRv&)
               (set! g$ls$10800$XcRv&
                 (g$set-cons$7683$XcRv& g$x$10801$XcRv& g$ls$10800$XcRv&))))))
         '()))))
   (g$inv-collector$8074$XcRv&
     g$inv-collector$11524$XcRv&
     (g$make-parameter$7012$XcRv&
       (case-lambda
         (g$args$10802$XcRv&
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10803$XcRv&)
          (begin
            (if (procedure? g$x$10803$XcRv&)
              (void)
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10803$XcRv&))
            g$x$10803$XcRv&)))))
   (g$vis-collector$8075$XcRv&
     g$vis-collector$11525$XcRv&
     (g$make-parameter$7012$XcRv&
       (case-lambda
         (g$args$10804$XcRv&
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10805$XcRv&)
          (begin
            (if (procedure? g$x$10805$XcRv&)
              (void)
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10805$XcRv&))
            g$x$10805$XcRv&)))))
   (g$imp-collector$8076$XcRv&
     g$imp-collector$11526$XcRv&
     (g$make-parameter$7012$XcRv&
       (case-lambda
         (g$args$10806$XcRv&
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10807$XcRv&)
          (begin
            (if (procedure? g$x$10807$XcRv&)
              (void)
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10807$XcRv&))
            g$x$10807$XcRv&)))))
   (g$chi-library-internal$8077$XcRv&
     g$chi-library-internal$11527$XcRv&
     (case-lambda
       ((g$e*$10808$XcRv& g$rib$10809$XcRv& g$top?$10810$XcRv&)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8066$XcRv&
               g$e*$10808$XcRv&
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10809$XcRv&
               g$top?$10810$XcRv&)))
          (case-lambda
            ((g$e*$10818$XcRv&
               g$r$10819$XcRv&
               g$mr$10820$XcRv&
               g$lex*$10821$XcRv&
               g$rhs*$10822$XcRv&
               g$mod**$10823$XcRv&
               g$_kwd*$10824$XcRv&)
             ((case-lambda
                ((g$_kwd*$10825$XcRv&
                   g$mod**$10826$XcRv&
                   g$rhs*$10827$XcRv&
                   g$lex*$10828$XcRv&
                   g$mr$10829$XcRv&
                   g$r$10830$XcRv&
                   g$e*$10831$XcRv&)
                 (values
                   (append
                     (apply append (reverse g$mod**$10826$XcRv&))
                     g$e*$10831$XcRv&)
                   g$r$10830$XcRv&
                   g$mr$10829$XcRv&
                   (reverse g$lex*$10828$XcRv&)
                   (reverse g$rhs*$10827$XcRv&))))
              g$_kwd*$10824$XcRv&
              g$mod**$10823$XcRv&
              g$rhs*$10822$XcRv&
              g$lex*$10821$XcRv&
              g$mr$10820$XcRv&
              g$r$10819$XcRv&
              g$e*$10818$XcRv&)))))))
   (g$chi-interaction-expr$8078$XcRv&
     g$chi-interaction-expr$11528$XcRv&
     (case-lambda
       ((g$e$10832$XcRv& g$rib$10833$XcRv& g$r$10834$XcRv&)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8066$XcRv&
               (list g$e$10832$XcRv&)
               g$r$10834$XcRv&
               g$r$10834$XcRv&
               '()
               '()
               '()
               '()
               g$rib$10833$XcRv&
               '#t)))
          (case-lambda
            ((g$e*$10842$XcRv&
               g$r$10843$XcRv&
               g$mr$10844$XcRv&
               g$lex*$10845$XcRv&
               g$rhs*$10846$XcRv&
               g$mod**$10847$XcRv&
               g$_kwd*$10848$XcRv&)
             ((case-lambda
                ((g$_kwd*$10849$XcRv&
                   g$mod**$10850$XcRv&
                   g$rhs*$10851$XcRv&
                   g$lex*$10852$XcRv&
                   g$mr$10853$XcRv&
                   g$r$10854$XcRv&
                   g$e*$10855$XcRv&)
                 ((case-lambda
                    ((g$e*$10856$XcRv&)
                     ((case-lambda
                        ((g$e$10857$XcRv&)
                         (values g$e$10857$XcRv& g$r$10854$XcRv&)))
                      (if (null? g$e*$10856$XcRv&)
                        (g$build-void$7679$XcRv&)
                        (if (null? (cdr g$e*$10856$XcRv&))
                          (car g$e*$10856$XcRv&)
                          (g$build-sequence$7678$XcRv&
                            '#f
                            g$e*$10856$XcRv&))))))
                  (g$expand-interaction-rhs*/init*$8047$XcRv&
                    (reverse g$lex*$10852$XcRv&)
                    (reverse g$rhs*$10851$XcRv&)
                    (append
                      (apply append (reverse g$mod**$10850$XcRv&))
                      g$e*$10855$XcRv&)
                    g$r$10854$XcRv&
                    g$mr$10853$XcRv&))))
              g$_kwd*$10848$XcRv&
              g$mod**$10847$XcRv&
              g$rhs*$10846$XcRv&
              g$lex*$10845$XcRv&
              g$mr$10844$XcRv&
              g$r$10843$XcRv&
              g$e*$10842$XcRv&)))))))
   (g$library-body-expander$8079$XcRv&
     g$library-body-expander$11529$XcRv&
     (case-lambda
       ((g$name$10858$XcRv&
          g$exp*$10859$XcRv&
          g$imp*$10860$XcRv&
          g$b*$10861$XcRv&
          g$top?$10862$XcRv&)
        (letrec* ((g$itc$10863$XcRv& (g$make-collector$8073$XcRv&)))
          ((case-lambda
             ((g$imp-collector$10868$XcRv&
                g$top-level-context$10869$XcRv&
                g$imp-collector$10870$XcRv&
                g$top-level-context$10871$XcRv&)
              ((case-lambda
                 ((g$swap$10872$XcRv&)
                  (dynamic-wind
                    g$swap$10872$XcRv&
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (() (g$parse-exports$8068$XcRv& g$exp*$10859$XcRv&)))
                         (case-lambda
                           ((g$exp-int*$10875$XcRv& g$exp-ext*$10876$XcRv&)
                            ((case-lambda
                               ((g$exp-ext*$10877$XcRv& g$exp-int*$10878$XcRv&)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$8071$XcRv&
                                       g$imp*$10860$XcRv&)))
                                  (case-lambda
                                    ((g$subst-names$10881$XcRv&
                                       g$subst-labels$10882$XcRv&)
                                     ((case-lambda
                                        ((g$subst-labels$10883$XcRv&
                                           g$subst-names$10884$XcRv&)
                                         ((case-lambda
                                            ((g$rib$10885$XcRv&)
                                             ((case-lambda
                                                ((g$b*$10886$XcRv&
                                                   g$rtc$10887$XcRv&
                                                   g$vtc$10888$XcRv&)
                                                 ((case-lambda
                                                    ((g$inv-collector$10893$XcRv&
                                                       g$vis-collector$10894$XcRv&
                                                       g$inv-collector$10895$XcRv&
                                                       g$vis-collector$10896$XcRv&)
                                                     ((case-lambda
                                                        ((g$swap$10897$XcRv&)
                                                         (dynamic-wind
                                                           g$swap$10897$XcRv&
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$8077$XcRv&
                                                                     g$b*$10886$XcRv&
                                                                     g$rib$10885$XcRv&
                                                                     g$top?$10862$XcRv&)))
                                                                (case-lambda
                                                                  ((g$init*$10903$XcRv&
                                                                     g$r$10904$XcRv&
                                                                     g$mr$10905$XcRv&
                                                                     g$lex*$10906$XcRv&
                                                                     g$rhs*$10907$XcRv&)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10908$XcRv&
                                                                         g$lex*$10909$XcRv&
                                                                         g$mr$10910$XcRv&
                                                                         g$r$10911$XcRv&
                                                                         g$init*$10912$XcRv&)
                                                                       (begin
                                                                         (g$seal-rib!$7710$XcRv&
                                                                           g$rib$10885$XcRv&)
                                                                         ((case-lambda
                                                                            ((g$init*$10913$XcRv&)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10914$XcRv&)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7711$XcRv&
                                                                                         g$rib$10885$XcRv&)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10915$XcRv&
                                                                                             g$export-subst$10916$XcRv&)
                                                                                           (letrec* ((g$errstr$10917$XcRv&
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$8120$XcRv&
                                                                                                    g$lex*$10909$XcRv&
                                                                                                    g$loc*$10915$XcRv&
                                                                                                    g$r$10911$XcRv&)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10921$XcRv&
                                                                                                    g$global*$10922$XcRv&
                                                                                                    g$macro*$10923$XcRv&)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10924$XcRv&
                                                                                                        g$global*$10925$XcRv&
                                                                                                        g$export-env$10926$XcRv&)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10927$XcRv&)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10928$XcRv&
                                                                                                                   g$label$10929$XcRv&)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10930$XcRv&)
                                                                                                                     (if g$p$10930$XcRv&
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10931$XcRv&)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10932$XcRv&)
                                                                                                                               (if (eq? g$type$10932$XcRv&
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$8128$XcRv&
                                                                                                                                   'export
                                                                                                                                   g$errstr$10917$XcRv&
                                                                                                                                   g$name$10928$XcRv&)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10931$XcRv&))))
                                                                                                                        (cdr g$p$10930$XcRv&))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10929$XcRv&
                                                                                                                    g$export-env$10926$XcRv&))))
                                                                                                              (car g$s$10927$XcRv&)
                                                                                                              (cdr g$s$10927$XcRv&))))
                                                                                                          g$export-subst$10916$XcRv&)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10933$XcRv&
                                                                                                              g$invoke-definitions$10934$XcRv&)
                                                                                                            (values
                                                                                                              (g$itc$10863$XcRv&)
                                                                                                              (g$rtc$10887$XcRv&)
                                                                                                              (g$vtc$10888$XcRv&)
                                                                                                              (g$build-sequence$7678$XcRv&
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10934$XcRv&
                                                                                                                  (list
                                                                                                                    g$invoke-body$10933$XcRv&)))
                                                                                                              g$macro*$10924$XcRv&
                                                                                                              g$export-subst$10916$XcRv&
                                                                                                              g$export-env$10926$XcRv&)))
                                                                                                         (g$build-library-letrec*$7682$XcRv&
                                                                                                           '#f
                                                                                                           g$name$10858$XcRv&
                                                                                                           g$lex*$10909$XcRv&
                                                                                                           g$loc*$10915$XcRv&
                                                                                                           g$rhs*$10914$XcRv&
                                                                                                           (if (null?
                                                                                                                 g$init*$10913$XcRv&)
                                                                                                             (g$build-void$7679$XcRv&)
                                                                                                             (g$build-sequence$7678$XcRv&
                                                                                                               '#f
                                                                                                               g$init*$10913$XcRv&)))
                                                                                                         (map g$build-global-define$7674$XcRv&
                                                                                                              (map cdr
                                                                                                                   g$global*$10925$XcRv&))))))
                                                                                                   g$macro*$10923$XcRv&
                                                                                                   g$global*$10922$XcRv&
                                                                                                   g$export-env$10921$XcRv&)))))))
                                                                                        (map g$gen-global$7689$XcRv&
                                                                                             g$lex*$10909$XcRv&)
                                                                                        (g$make-export-subst$8119$XcRv&
                                                                                          g$exp-int*$10878$XcRv&
                                                                                          g$exp-ext*$10877$XcRv&
                                                                                          g$rib$10885$XcRv&))))))))
                                                                              (g$chi-rhs*$8048$XcRv&
                                                                                g$rhs*$10908$XcRv&
                                                                                g$r$10911$XcRv&
                                                                                g$mr$10910$XcRv&))))
                                                                          (g$chi-expr*$8038$XcRv&
                                                                            g$init*$10912$XcRv&
                                                                            g$r$10911$XcRv&
                                                                            g$mr$10910$XcRv&)))))
                                                                    g$rhs*$10907$XcRv&
                                                                    g$lex*$10906$XcRv&
                                                                    g$mr$10905$XcRv&
                                                                    g$r$10904$XcRv&
                                                                    g$init*$10903$XcRv&))))))
                                                           g$swap$10897$XcRv&)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10935$XcRv&)
                                                               (begin
                                                                 (g$inv-collector$10893$XcRv&
                                                                   g$inv-collector$10895$XcRv&)
                                                                 (set! g$inv-collector$10895$XcRv&
                                                                   g$t$10935$XcRv&))))
                                                            (g$inv-collector$10893$XcRv&))
                                                           ((case-lambda
                                                              ((g$t$10936$XcRv&)
                                                               (begin
                                                                 (g$vis-collector$10894$XcRv&
                                                                   g$vis-collector$10896$XcRv&)
                                                                 (set! g$vis-collector$10896$XcRv&
                                                                   g$t$10936$XcRv&))))
                                                            (g$vis-collector$10894$XcRv&))))))))
                                                  g$inv-collector$8074$XcRv&
                                                  g$vis-collector$8075$XcRv&
                                                  g$rtc$10887$XcRv&
                                                  g$vtc$10888$XcRv&)))
                                              (map (case-lambda
                                                     ((g$x$10937$XcRv&)
                                                      (g$make-stx$7717$XcRv&
                                                        g$x$10937$XcRv&
                                                        g$top-mark*$7686$XcRv&
                                                        (list g$rib$10885$XcRv&)
                                                        '())))
                                                   g$b*$10861$XcRv&)
                                              (g$make-collector$8073$XcRv&)
                                              (g$make-collector$8073$XcRv&))))
                                          (g$make-top-rib$8072$XcRv&
                                            g$subst-names$10884$XcRv&
                                            g$subst-labels$10883$XcRv&))))
                                      g$subst-labels$10882$XcRv&
                                      g$subst-names$10881$XcRv&))))))
                             g$exp-ext*$10876$XcRv&
                             g$exp-int*$10875$XcRv&))))))
                    g$swap$10872$XcRv&)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10938$XcRv&)
                        (begin
                          (g$imp-collector$10868$XcRv&
                            g$imp-collector$10870$XcRv&)
                          (set! g$imp-collector$10870$XcRv& g$t$10938$XcRv&))))
                     (g$imp-collector$10868$XcRv&))
                    ((case-lambda
                       ((g$t$10939$XcRv&)
                        (begin
                          (g$top-level-context$10869$XcRv&
                            g$top-level-context$10871$XcRv&)
                          (set! g$top-level-context$10871$XcRv&
                            g$t$10939$XcRv&))))
                     (g$top-level-context$10869$XcRv&))))))))
           g$imp-collector$8076$XcRv&
           g$top-level-context$8135$XcRv&
           g$itc$10863$XcRv&
           '#f)))))
   (g$core-library-expander$8080$XcRv&
     g$core-library-expander$11530$XcRv&
     (case-lambda
       ((g$e$10940$XcRv& g$verify-name$10941$XcRv&)
        (call-with-values
          (case-lambda (() (g$parse-library$8070$XcRv& g$e$10940$XcRv&)))
          (case-lambda
            ((g$name*$10946$XcRv&
               g$exp*$10947$XcRv&
               g$imp*$10948$XcRv&
               g$b*$10949$XcRv&)
             ((case-lambda
                ((g$b*$10950$XcRv&
                   g$imp*$10951$XcRv&
                   g$exp*$10952$XcRv&
                   g$name*$10953$XcRv&)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$8069$XcRv& g$name*$10953$XcRv&)))
                   (case-lambda
                     ((g$name$10956$XcRv& g$ver$10957$XcRv&)
                      ((case-lambda
                         ((g$ver$10958$XcRv& g$name$10959$XcRv&)
                          (begin
                            (g$verify-name$10941$XcRv& g$name$10959$XcRv&)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$8079$XcRv&
                                   g$name$10959$XcRv&
                                   g$exp*$10952$XcRv&
                                   g$imp*$10951$XcRv&
                                   g$b*$10950$XcRv&
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10967$XcRv&
                                   g$invoke-req*$10968$XcRv&
                                   g$visit-req*$10969$XcRv&
                                   g$invoke-code$10970$XcRv&
                                   g$visit-code$10971$XcRv&
                                   g$export-subst$10972$XcRv&
                                   g$export-env$10973$XcRv&)
                                 ((case-lambda
                                    ((g$export-env$10974$XcRv&
                                       g$export-subst$10975$XcRv&
                                       g$visit-code$10976$XcRv&
                                       g$invoke-code$10977$XcRv&
                                       g$visit-req*$10978$XcRv&
                                       g$invoke-req*$10979$XcRv&
                                       g$imp*$10980$XcRv&)
                                     (values
                                       g$name$10959$XcRv&
                                       g$ver$10958$XcRv&
                                       g$imp*$10980$XcRv&
                                       g$invoke-req*$10979$XcRv&
                                       g$visit-req*$10978$XcRv&
                                       g$invoke-code$10977$XcRv&
                                       g$visit-code$10976$XcRv&
                                       g$export-subst$10975$XcRv&
                                       g$export-env$10974$XcRv&)))
                                  g$export-env$10973$XcRv&
                                  g$export-subst$10972$XcRv&
                                  g$visit-code$10971$XcRv&
                                  g$invoke-code$10970$XcRv&
                                  g$visit-req*$10969$XcRv&
                                  g$invoke-req*$10968$XcRv&
                                  g$imp*$10967$XcRv&)))))))
                       g$ver$10957$XcRv&
                       g$name$10956$XcRv&))))))
              g$b*$10949$XcRv&
              g$imp*$10948$XcRv&
              g$exp*$10947$XcRv&
              g$name*$10946$XcRv&)))))))
   (g$parse-top-level-program$8081$XcRv&
     g$parse-top-level-program$11531$XcRv&
     (case-lambda
       ((g$e*$10981$XcRv&)
        ((case-lambda
           ((g$t$10982$XcRv&)
            ((case-lambda
               ((g$ls/false$10983$XcRv&)
                (if (if g$ls/false$10983$XcRv&
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10984$XcRv&
                               g$imp*$10985$XcRv&
                               g$b*$10986$XcRv&)
                             (eq? (g$syntax->datum$8131$XcRv&
                                    g$import$10984$XcRv&)
                                  'import)))
                          g$ls/false$10983$XcRv&))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10987$XcRv&
                         g$imp*$10988$XcRv&
                         g$b*$10989$XcRv&)
                       (values g$imp*$10988$XcRv& g$b*$10989$XcRv&)))
                    g$ls/false$10983$XcRv&)
                  ((case-lambda
                     ((g$t$10990$XcRv&)
                      ((case-lambda
                         ((g$ls/false$10991$XcRv&)
                          (if (if g$ls/false$10991$XcRv&
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10992$XcRv&
                                         g$x$10993$XcRv&
                                         g$y$10994$XcRv&)
                                       (eq? (g$syntax->datum$8131$XcRv&
                                              g$import$10992$XcRv&)
                                            'import)))
                                    g$ls/false$10991$XcRv&))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10995$XcRv&
                                   g$x$10996$XcRv&
                                   g$y$10997$XcRv&)
                                 (g$syntax-violation$8128$XcRv&
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7741$XcRv& g$e*$10981$XcRv&))))
                              g$ls/false$10991$XcRv&)
                            ((case-lambda
                               ((g$t$10998$XcRv&)
                                ((case-lambda
                                   ((g$ls/false$10999$XcRv&)
                                    (if g$ls/false$10999$XcRv&
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10999$XcRv&)
                                      (g$syntax-violation$8128$XcRv&
                                        '#f
                                        '"invalid syntax"
                                        g$t$10998$XcRv&))))
                                 (g$syntax-dispatch$8022$XcRv&
                                   g$t$10998$XcRv&
                                   '_))))
                             g$t$10990$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv&
                         g$t$10990$XcRv&
                         '((any . any) . any)))))
                   g$t$10982$XcRv&))))
             (g$syntax-dispatch$8022$XcRv&
               g$t$10982$XcRv&
               '((any . each-any) . each-any)))))
         g$e*$10981$XcRv&))))
   (g$top-level-expander$8082$XcRv&
     g$top-level-expander$11532$XcRv&
     (case-lambda
       ((g$e*$11000$XcRv&)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$8081$XcRv& g$e*$11000$XcRv&)))
          (case-lambda
            ((g$imp*$11003$XcRv& g$b*$11004$XcRv&)
             ((case-lambda
                ((g$b*$11005$XcRv& g$imp*$11006$XcRv&)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$8079$XcRv&
                        '()
                        '()
                        g$imp*$11006$XcRv&
                        g$b*$11005$XcRv&
                        '#t)))
                   (case-lambda
                     ((g$imp*$11014$XcRv&
                        g$invoke-req*$11015$XcRv&
                        g$visit-req*$11016$XcRv&
                        g$invoke-code$11017$XcRv&
                        g$visit-code$11018$XcRv&
                        g$export-subst$11019$XcRv&
                        g$export-env$11020$XcRv&)
                      ((case-lambda
                         ((g$export-env$11021$XcRv&
                            g$export-subst$11022$XcRv&
                            g$visit-code$11023$XcRv&
                            g$invoke-code$11024$XcRv&
                            g$visit-req*$11025$XcRv&
                            g$invoke-req*$11026$XcRv&
                            g$imp*$11027$XcRv&)
                          (values
                            g$invoke-req*$11026$XcRv&
                            g$invoke-code$11024$XcRv&)))
                       g$export-env$11020$XcRv&
                       g$export-subst$11019$XcRv&
                       g$visit-code$11018$XcRv&
                       g$invoke-code$11017$XcRv&
                       g$visit-req*$11016$XcRv&
                       g$invoke-req*$11015$XcRv&
                       g$imp*$11014$XcRv&))))))
              g$b*$11004$XcRv&
              g$imp*$11003$XcRv&)))))))
   (g$8921$8083$XcRv&
     g$8921$11533$XcRv&
     (make-record-type-descriptor
       'env
       '#f
       'g$8924$XcRv&
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8923$8084$XcRv& g$8923$11534$XcRv& '#f)
   (g$8922$8085$XcRv&
     g$8922$11535$XcRv&
     (make-record-constructor-descriptor
       g$8921$8083$XcRv&
       '#f
       g$8923$8084$XcRv&))
   (g$env?$8086$XcRv&
     g$env?$11536$XcRv&
     (record-predicate g$8921$8083$XcRv&))
   (g$make-env$8087$XcRv&
     g$make-env$11537$XcRv&
     (record-constructor g$8922$8085$XcRv&))
   (g$env-names$8088$XcRv&
     g$env-names$11538$XcRv&
     (record-accessor g$8921$8083$XcRv& '0))
   (g$env-labels$8089$XcRv&
     g$env-labels$11539$XcRv&
     (record-accessor g$8921$8083$XcRv& '1))
   (g$env-itc$8090$XcRv&
     g$env-itc$11540$XcRv&
     (record-accessor g$8921$8083$XcRv& '2))
   (g$set-env-names!$8091$XcRv&
     g$set-env-names!$11541$XcRv&
     (record-mutator g$8921$8083$XcRv& '0))
   (g$set-env-labels!$8092$XcRv&
     g$set-env-labels!$11542$XcRv&
     (record-mutator g$8921$8083$XcRv& '1))
   (g$set-env-itc!$8093$XcRv&
     g$set-env-itc!$11543$XcRv&
     (record-mutator g$8921$8083$XcRv& '2))
   (g$rp$8094$XcRv&
     g$rp$11544$XcRv&
     (make-record-printer
       'env
       (case-lambda
         ((g$x$11028$XcRv& g$p$11029$XcRv&)
          (display '"#<environment>" g$p$11029$XcRv&)))))
   (g$8940$8095$XcRv&
     g$8940$11545$XcRv&
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8943$XcRv&
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8942$8096$XcRv& g$8942$11546$XcRv& '#f)
   (g$8941$8097$XcRv&
     g$8941$11547$XcRv&
     (make-record-constructor-descriptor
       g$8940$8095$XcRv&
       '#f
       g$8942$8096$XcRv&))
   (g$interaction-env?$8098$XcRv&
     g$interaction-env?$11548$XcRv&
     (record-predicate g$8940$8095$XcRv&))
   (g$make-interaction-env$8099$XcRv&
     g$make-interaction-env$11549$XcRv&
     (record-constructor g$8941$8097$XcRv&))
   (g$interaction-env-rib$8100$XcRv&
     g$interaction-env-rib$11550$XcRv&
     (record-accessor g$8940$8095$XcRv& '0))
   (g$interaction-env-r$8101$XcRv&
     g$interaction-env-r$11551$XcRv&
     (record-accessor g$8940$8095$XcRv& '1))
   (g$interaction-env-locs$8102$XcRv&
     g$interaction-env-locs$11552$XcRv&
     (record-accessor g$8940$8095$XcRv& '2))
   (g$set-interaction-env-rib!$8103$XcRv&
     g$set-interaction-env-rib!$11553$XcRv&
     (record-mutator g$8940$8095$XcRv& '0))
   (g$set-interaction-env-r!$8104$XcRv&
     g$set-interaction-env-r!$11554$XcRv&
     (record-mutator g$8940$8095$XcRv& '1))
   (g$set-interaction-env-locs!$8105$XcRv&
     g$set-interaction-env-locs!$11555$XcRv&
     (record-mutator g$8940$8095$XcRv& '2))
   (g$rp$8106$XcRv&
     g$rp$11556$XcRv&
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$11030$XcRv& g$p$11031$XcRv&)
          (display '"#<environment>" g$p$11031$XcRv&)))))
   (g$interaction-environment-symbols$8107$XcRv&
     g$interaction-environment-symbols$11557$XcRv&
     (case-lambda
       (()
        (map (case-lambda ((g$x$11032$XcRv&) g$x$11032$XcRv&))
             (g$rib-sym*$7699$XcRv&
               (g$interaction-env-rib$8100$XcRv&
                 (g$interaction-environment$8134$XcRv&)))))))
   (g$environment-symbols$8108$XcRv&
     g$environment-symbols$11558$XcRv&
     (case-lambda
       ((g$e$11033$XcRv&)
        (vector->list (g$env-names$8088$XcRv& g$e$11033$XcRv&)))))
   (g$environment?$8109$XcRv&
     g$environment?$11559$XcRv&
     (case-lambda
       ((g$x$11034$XcRv&)
        ((case-lambda
           ((g$t$11035$XcRv&)
            (if g$t$11035$XcRv&
              g$t$11035$XcRv&
              (begin '#f (g$interaction-env?$8098$XcRv& g$x$11034$XcRv&)))))
         (g$env?$8086$XcRv& g$x$11034$XcRv&)))))
   (g$environment$8110$XcRv&
     g$environment$11560$XcRv&
     (case-lambda
       (g$imp*$11036$XcRv&
        ((case-lambda
           ((g$itc$11037$XcRv&)
            ((case-lambda
               ((g$imp-collector$11040$XcRv& g$imp-collector$11041$XcRv&)
                ((case-lambda
                   ((g$swap$11042$XcRv&)
                    (dynamic-wind
                      g$swap$11042$XcRv&
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$8071$XcRv&
                                g$imp*$11036$XcRv&)))
                           (case-lambda
                             ((g$subst-names$11045$XcRv&
                                g$subst-labels$11046$XcRv&)
                              ((case-lambda
                                 ((g$subst-labels$11047$XcRv&
                                    g$subst-names$11048$XcRv&)
                                  (g$make-env$8087$XcRv&
                                    g$subst-names$11048$XcRv&
                                    g$subst-labels$11047$XcRv&
                                    g$itc$11037$XcRv&)))
                               g$subst-labels$11046$XcRv&
                               g$subst-names$11045$XcRv&))))))
                      g$swap$11042$XcRv&)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$11049$XcRv&)
                        (begin
                          (g$imp-collector$11040$XcRv&
                            g$imp-collector$11041$XcRv&)
                          (set! g$imp-collector$11041$XcRv& g$t$11049$XcRv&))))
                     (g$imp-collector$11040$XcRv&)))))))
             g$imp-collector$8076$XcRv&
             g$itc$11037$XcRv&)))
         (g$make-collector$8073$XcRv&)))))
   (g$null-environment$8111$XcRv&
     g$null-environment$11561$XcRv&
     (case-lambda
       ((g$n$11050$XcRv&)
        (begin
          (if (eqv? g$n$11050$XcRv& '5)
            (void)
            (assertion-violation 'null-environment '"not 5" g$n$11050$XcRv&))
          (g$environment$8110$XcRv& '(psyntax null-environment-5))))))
   (g$scheme-report-environment$8112$XcRv&
     g$scheme-report-environment$11562$XcRv&
     (case-lambda
       ((g$n$11051$XcRv&)
        (begin
          (if (eqv? g$n$11051$XcRv& '5)
            (void)
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$11051$XcRv&))
          (g$environment$8110$XcRv& '(psyntax scheme-report-environment-5))))))
   (g$expand$8113$XcRv&
     g$expand$11563$XcRv&
     (case-lambda
       ((g$x$11052$XcRv& g$env$11053$XcRv&)
        (if (g$env?$8086$XcRv& g$env$11053$XcRv&)
          ((case-lambda
             ((g$rib$11054$XcRv&)
              ((case-lambda
                 ((g$x$11055$XcRv&
                    g$itc$11056$XcRv&
                    g$rtc$11057$XcRv&
                    g$vtc$11058$XcRv&)
                  ((case-lambda
                     ((g$x$11059$XcRv&)
                      (begin
                        (g$seal-rib!$7710$XcRv& g$rib$11054$XcRv&)
                        (values g$x$11059$XcRv& (g$rtc$11057$XcRv&)))))
                   ((case-lambda
                      ((g$inv-collector$11066$XcRv&
                         g$vis-collector$11067$XcRv&
                         g$imp-collector$11068$XcRv&
                         g$inv-collector$11069$XcRv&
                         g$vis-collector$11070$XcRv&
                         g$imp-collector$11071$XcRv&)
                       ((case-lambda
                          ((g$swap$11072$XcRv&)
                           (dynamic-wind
                             g$swap$11072$XcRv&
                             (case-lambda
                               (()
                                (g$chi-expr$8040$XcRv&
                                  g$x$11055$XcRv&
                                  '()
                                  '())))
                             g$swap$11072$XcRv&)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$11073$XcRv&)
                                 (begin
                                   (g$inv-collector$11066$XcRv&
                                     g$inv-collector$11069$XcRv&)
                                   (set! g$inv-collector$11069$XcRv&
                                     g$t$11073$XcRv&))))
                              (g$inv-collector$11066$XcRv&))
                             ((case-lambda
                                ((g$t$11074$XcRv&)
                                 (begin
                                   (g$vis-collector$11067$XcRv&
                                     g$vis-collector$11070$XcRv&)
                                   (set! g$vis-collector$11070$XcRv&
                                     g$t$11074$XcRv&))))
                              (g$vis-collector$11067$XcRv&))
                             ((case-lambda
                                ((g$t$11075$XcRv&)
                                 (begin
                                   (g$imp-collector$11068$XcRv&
                                     g$imp-collector$11071$XcRv&)
                                   (set! g$imp-collector$11071$XcRv&
                                     g$t$11075$XcRv&))))
                              (g$imp-collector$11068$XcRv&))))))))
                    g$inv-collector$8074$XcRv&
                    g$vis-collector$8075$XcRv&
                    g$imp-collector$8076$XcRv&
                    g$rtc$11057$XcRv&
                    g$vtc$11058$XcRv&
                    g$itc$11056$XcRv&))))
               (g$make-stx$7717$XcRv&
                 g$x$11052$XcRv&
                 g$top-mark*$7686$XcRv&
                 (list g$rib$11054$XcRv&)
                 '())
               (g$env-itc$8090$XcRv& g$env$11053$XcRv&)
               (g$make-collector$8073$XcRv&)
               (g$make-collector$8073$XcRv&))))
           (g$make-top-rib$8072$XcRv&
             (g$env-names$8088$XcRv& g$env$11053$XcRv&)
             (g$env-labels$8089$XcRv& g$env$11053$XcRv&)))
          (if (g$interaction-env?$8098$XcRv& g$env$11053$XcRv&)
            ((case-lambda
               ((g$rib$11076$XcRv& g$r$11077$XcRv& g$rtc$11078$XcRv&)
                ((case-lambda
                   ((g$x$11079$XcRv&)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$11090$XcRv&
                               g$inv-collector$11091$XcRv&
                               g$vis-collector$11092$XcRv&
                               g$imp-collector$11093$XcRv&
                               g$top-level-context$11094$XcRv&
                               g$inv-collector$11095$XcRv&
                               g$vis-collector$11096$XcRv&
                               g$imp-collector$11097$XcRv&)
                             ((case-lambda
                                ((g$swap$11098$XcRv&)
                                 (dynamic-wind
                                   g$swap$11098$XcRv&
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$8078$XcRv&
                                        g$x$11079$XcRv&
                                        g$rib$11076$XcRv&
                                        g$r$11077$XcRv&)))
                                   g$swap$11098$XcRv&)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$11099$XcRv&)
                                       (begin
                                         (g$top-level-context$11090$XcRv&
                                           g$top-level-context$11094$XcRv&)
                                         (set! g$top-level-context$11094$XcRv&
                                           g$t$11099$XcRv&))))
                                    (g$top-level-context$11090$XcRv&))
                                   ((case-lambda
                                      ((g$t$11100$XcRv&)
                                       (begin
                                         (g$inv-collector$11091$XcRv&
                                           g$inv-collector$11095$XcRv&)
                                         (set! g$inv-collector$11095$XcRv&
                                           g$t$11100$XcRv&))))
                                    (g$inv-collector$11091$XcRv&))
                                   ((case-lambda
                                      ((g$t$11101$XcRv&)
                                       (begin
                                         (g$vis-collector$11092$XcRv&
                                           g$vis-collector$11096$XcRv&)
                                         (set! g$vis-collector$11096$XcRv&
                                           g$t$11101$XcRv&))))
                                    (g$vis-collector$11092$XcRv&))
                                   ((case-lambda
                                      ((g$t$11102$XcRv&)
                                       (begin
                                         (g$imp-collector$11093$XcRv&
                                           g$imp-collector$11097$XcRv&)
                                         (set! g$imp-collector$11097$XcRv&
                                           g$t$11102$XcRv&))))
                                    (g$imp-collector$11093$XcRv&))))))))
                          g$top-level-context$8135$XcRv&
                          g$inv-collector$8074$XcRv&
                          g$vis-collector$8075$XcRv&
                          g$imp-collector$8076$XcRv&
                          g$env$11053$XcRv&
                          g$rtc$11078$XcRv&
                          (g$make-collector$8073$XcRv&)
                          (g$make-collector$8073$XcRv&))))
                      (case-lambda
                        ((g$e$11103$XcRv& g$r^$11104$XcRv&)
                         ((case-lambda
                            ((g$r^$11105$XcRv& g$e$11106$XcRv&)
                             (begin
                               (g$set-interaction-env-r!$8104$XcRv&
                                 g$env$11053$XcRv&
                                 g$r^$11105$XcRv&)
                               (values g$e$11106$XcRv& (g$rtc$11078$XcRv&)))))
                          g$r^$11104$XcRv&
                          g$e$11103$XcRv&))))))
                 (g$make-stx$7717$XcRv&
                   g$x$11052$XcRv&
                   g$top-mark*$7686$XcRv&
                   (list g$rib$11076$XcRv&)
                   '()))))
             (g$interaction-env-rib$8100$XcRv& g$env$11053$XcRv&)
             (g$interaction-env-r$8101$XcRv& g$env$11053$XcRv&)
             (g$make-collector$8073$XcRv&))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$11053$XcRv&))))))
   (g$eval$8114$XcRv&
     g$eval$11564$XcRv&
     (case-lambda
       ((g$x$11107$XcRv& g$env$11108$XcRv&)
        (begin
          (if (g$environment?$8109$XcRv& g$env$11108$XcRv&)
            (void)
            (error 'eval '"not an environment" g$env$11108$XcRv&))
          (call-with-values
            (case-lambda
              (() (g$expand$8113$XcRv& g$x$11107$XcRv& g$env$11108$XcRv&)))
            (case-lambda
              ((g$x$11111$XcRv& g$invoke-req*$11112$XcRv&)
               ((case-lambda
                  ((g$invoke-req*$11113$XcRv& g$x$11114$XcRv&)
                   (begin
                     (for-each
                       g$invoke-library$7559$XcRv&
                       g$invoke-req*$11113$XcRv&)
                     (eval-core
                       (g$expanded->core$7258$XcRv& g$x$11114$XcRv&)))))
                g$invoke-req*$11112$XcRv&
                g$x$11111$XcRv&))))))))
   (g$library-expander$8115$XcRv&
     g$library-expander$11565$XcRv&
     (case-lambda
       ((g$x$11115$XcRv& g$filename$11116$XcRv& g$verify-name$11117$XcRv&)
        (letrec* ((g$build-visit-code$11118$XcRv&
                    (case-lambda
                      ((g$macro*$11161$XcRv&)
                       (if (null? g$macro*$11161$XcRv&)
                         (g$build-void$7679$XcRv&)
                         (g$build-sequence$7678$XcRv&
                           '#f
                           (map (case-lambda
                                  ((g$x$11162$XcRv&)
                                   ((case-lambda
                                      ((g$loc$11163$XcRv& g$src$11164$XcRv&)
                                       (list
                                         'set!
                                         g$loc$11163$XcRv&
                                         g$src$11164$XcRv&)))
                                    (car g$x$11162$XcRv&)
                                    (g$cddr$5552$XcRv& g$x$11162$XcRv&))))
                                g$macro*$11161$XcRv&))))))
                  (g$visit!$11119$XcRv&
                    (case-lambda
                      ((g$macro*$11157$XcRv&)
                       (for-each
                         (case-lambda
                           ((g$x$11158$XcRv&)
                            ((case-lambda
                               ((g$loc$11159$XcRv& g$proc$11160$XcRv&)
                                (set-symbol-value!
                                  g$loc$11159$XcRv&
                                  g$proc$11160$XcRv&)))
                             (car g$x$11158$XcRv&)
                             (g$cadr$5550$XcRv& g$x$11158$XcRv&))))
                         g$macro*$11157$XcRv&)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$8080$XcRv&
                 g$x$11115$XcRv&
                 g$verify-name$11117$XcRv&)))
            (case-lambda
              ((g$name$11129$XcRv&
                 g$ver$11130$XcRv&
                 g$imp*$11131$XcRv&
                 g$inv*$11132$XcRv&
                 g$vis*$11133$XcRv&
                 g$invoke-code$11134$XcRv&
                 g$macro*$11135$XcRv&
                 g$export-subst$11136$XcRv&
                 g$export-env$11137$XcRv&)
               ((case-lambda
                  ((g$export-env$11138$XcRv&
                     g$export-subst$11139$XcRv&
                     g$macro*$11140$XcRv&
                     g$invoke-code$11141$XcRv&
                     g$vis*$11142$XcRv&
                     g$inv*$11143$XcRv&
                     g$imp*$11144$XcRv&
                     g$ver$11145$XcRv&
                     g$name$11146$XcRv&)
                   ((case-lambda
                      ((g$id$11147$XcRv&
                         g$name$11148$XcRv&
                         g$ver$11149$XcRv&
                         g$imp*$11150$XcRv&
                         g$vis*$11151$XcRv&
                         g$inv*$11152$XcRv&
                         g$visit-proc$11153$XcRv&
                         g$invoke-proc$11154$XcRv&
                         g$visit-code$11155$XcRv&
                         g$invoke-code$11156$XcRv&)
                       (begin
                         (g$install-library$7557$XcRv&
                           g$id$11147$XcRv&
                           g$name$11148$XcRv&
                           g$ver$11149$XcRv&
                           g$imp*$11150$XcRv&
                           g$vis*$11151$XcRv&
                           g$inv*$11152$XcRv&
                           g$export-subst$11139$XcRv&
                           g$export-env$11138$XcRv&
                           g$visit-proc$11153$XcRv&
                           g$invoke-proc$11154$XcRv&
                           g$visit-code$11155$XcRv&
                           g$invoke-code$11156$XcRv&
                           '#t
                           g$filename$11116$XcRv&)
                         (values
                           g$id$11147$XcRv&
                           g$name$11148$XcRv&
                           g$ver$11149$XcRv&
                           g$imp*$11150$XcRv&
                           g$vis*$11151$XcRv&
                           g$inv*$11152$XcRv&
                           g$invoke-code$11156$XcRv&
                           g$visit-code$11155$XcRv&
                           g$export-subst$11139$XcRv&
                           g$export-env$11138$XcRv&))))
                    (gensym)
                    g$name$11146$XcRv&
                    g$ver$11145$XcRv&
                    (map g$library-spec$7563$XcRv& g$imp*$11144$XcRv&)
                    (map g$library-spec$7563$XcRv& g$vis*$11142$XcRv&)
                    (map g$library-spec$7563$XcRv& g$inv*$11143$XcRv&)
                    (case-lambda
                      (() (g$visit!$11119$XcRv& g$macro*$11140$XcRv&)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$7258$XcRv&
                           g$invoke-code$11141$XcRv&))))
                    (g$build-visit-code$11118$XcRv& g$macro*$11140$XcRv&)
                    g$invoke-code$11141$XcRv&)))
                g$export-env$11137$XcRv&
                g$export-subst$11136$XcRv&
                g$macro*$11135$XcRv&
                g$invoke-code$11134$XcRv&
                g$vis*$11133$XcRv&
                g$inv*$11132$XcRv&
                g$imp*$11131$XcRv&
                g$ver$11130$XcRv&
                g$name$11129$XcRv&))))))
       ((g$x$11165$XcRv& g$filename$11166$XcRv&)
        (g$library-expander$8115$XcRv&
          g$x$11165$XcRv&
          g$filename$11166$XcRv&
          (case-lambda ((g$x$11167$XcRv&) (values)))))
       ((g$x$11168$XcRv&)
        (g$library-expander$8115$XcRv&
          g$x$11168$XcRv&
          '#f
          (case-lambda ((g$x$11169$XcRv&) (values)))))))
   (g$boot-library-expand$8116$XcRv&
     g$boot-library-expand$11566$XcRv&
     (case-lambda
       ((g$x$11170$XcRv&)
        (call-with-values
          (case-lambda (() (g$library-expander$8115$XcRv& g$x$11170$XcRv&)))
          (case-lambda
            ((g$id$11181$XcRv&
               g$name$11182$XcRv&
               g$ver$11183$XcRv&
               g$imp*$11184$XcRv&
               g$vis*$11185$XcRv&
               g$inv*$11186$XcRv&
               g$invoke-code$11187$XcRv&
               g$visit-code$11188$XcRv&
               g$export-subst$11189$XcRv&
               g$export-env$11190$XcRv&)
             ((case-lambda
                ((g$export-env$11191$XcRv&
                   g$export-subst$11192$XcRv&
                   g$visit-code$11193$XcRv&
                   g$invoke-code$11194$XcRv&
                   g$inv*$11195$XcRv&
                   g$vis*$11196$XcRv&
                   g$imp*$11197$XcRv&
                   g$ver$11198$XcRv&
                   g$name$11199$XcRv&
                   g$id$11200$XcRv&)
                 (values
                   g$name$11199$XcRv&
                   g$invoke-code$11194$XcRv&
                   g$export-subst$11192$XcRv&
                   g$export-env$11191$XcRv&)))
              g$export-env$11190$XcRv&
              g$export-subst$11189$XcRv&
              g$visit-code$11188$XcRv&
              g$invoke-code$11187$XcRv&
              g$inv*$11186$XcRv&
              g$vis*$11185$XcRv&
              g$imp*$11184$XcRv&
              g$ver$11183$XcRv&
              g$name$11182$XcRv&
              g$id$11181$XcRv&)))))))
   (g$rev-map-append$8117$XcRv&
     g$rev-map-append$11567$XcRv&
     (case-lambda
       ((g$f$11201$XcRv& g$ls$11202$XcRv& g$ac$11203$XcRv&)
        (if (null? g$ls$11202$XcRv&)
          g$ac$11203$XcRv&
          (g$rev-map-append$8117$XcRv&
            g$f$11201$XcRv&
            (cdr g$ls$11202$XcRv&)
            (cons
              (g$f$11201$XcRv& (car g$ls$11202$XcRv&))
              g$ac$11203$XcRv&))))))
   (g$build-exports$8118$XcRv&
     g$build-exports$11568$XcRv&
     (case-lambda
       ((g$lex*+loc*$11204$XcRv& g$init*$11205$XcRv&)
        (g$build-sequence$7678$XcRv&
          '#f
          (cons
            (g$build-void$7679$XcRv&)
            (g$rev-map-append$8117$XcRv&
              (case-lambda
                ((g$x$11206$XcRv&)
                 (list 'set! (cdr g$x$11206$XcRv&) (car g$x$11206$XcRv&))))
              g$lex*+loc*$11204$XcRv&
              g$init*$11205$XcRv&))))))
   (g$make-export-subst$8119$XcRv&
     g$make-export-subst$11569$XcRv&
     (case-lambda
       ((g$int*$11207$XcRv& g$ext*$11208$XcRv& g$rib$11209$XcRv&)
        (map (case-lambda
               ((g$int$11210$XcRv& g$ext$11211$XcRv&)
                ((case-lambda
                   ((g$id$11212$XcRv&)
                    ((case-lambda
                       ((g$label$11213$XcRv&)
                        ((case-lambda
                           (()
                            (begin
                              (if g$label$11213$XcRv&
                                (void)
                                (g$syntax-violation$8128$XcRv&
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$11212$XcRv&))
                              (cons g$ext$11211$XcRv& g$label$11213$XcRv&)))))))
                     (g$id->label$7757$XcRv& g$id$11212$XcRv&))))
                 (g$make-stx$7717$XcRv&
                   g$int$11210$XcRv&
                   g$top-mark*$7686$XcRv&
                   (list g$rib$11209$XcRv&)
                   '()))))
             g$int*$11207$XcRv&
             g$ext*$11208$XcRv&))))
   (g$make-export-env/macros$8120$XcRv&
     g$make-export-env/macros$11570$XcRv&
     (case-lambda
       ((g$lex*$11214$XcRv& g$loc*$11215$XcRv& g$r$11216$XcRv&)
        (letrec* ((g$lookup$11217$XcRv&
                    (case-lambda
                      ((g$x$11232$XcRv&)
                       ((letrec ((g$f$11233$XcRv&
                                   (case-lambda
                                     ((g$x$11234$XcRv&
                                        g$lex*$11235$XcRv&
                                        g$loc*$11236$XcRv&)
                                      (if (pair? g$lex*$11235$XcRv&)
                                        (if (eq? g$x$11234$XcRv&
                                                 (car g$lex*$11235$XcRv&))
                                          (car g$loc*$11236$XcRv&)
                                          (g$f$11233$XcRv&
                                            g$x$11234$XcRv&
                                            (cdr g$lex*$11235$XcRv&)
                                            (cdr g$loc*$11236$XcRv&)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$11233$XcRv&)
                        g$x$11232$XcRv&
                        g$lex*$11214$XcRv&
                        g$loc*$11215$XcRv&)))))
          ((letrec ((g$f$11218$XcRv&
                      (case-lambda
                        ((g$r$11219$XcRv&
                           g$env$11220$XcRv&
                           g$global*$11221$XcRv&
                           g$macro*$11222$XcRv&)
                         (if (null? g$r$11219$XcRv&)
                           (values
                             g$env$11220$XcRv&
                             g$global*$11221$XcRv&
                             g$macro*$11222$XcRv&)
                           ((case-lambda
                              ((g$x$11223$XcRv&)
                               ((case-lambda
                                  ((g$label$11224$XcRv& g$b$11225$XcRv&)
                                   ((case-lambda
                                      ((g$t$11226$XcRv&)
                                       (if (eqv? g$t$11226$XcRv& 'lexical)
                                         ((case-lambda
                                            ((g$v$11229$XcRv&)
                                             ((case-lambda
                                                ((g$loc$11230$XcRv&
                                                   g$type$11231$XcRv&)
                                                 (g$f$11218$XcRv&
                                                   (cdr g$r$11219$XcRv&)
                                                   (cons
                                                     (g$cons*$6021$XcRv&
                                                       g$label$11224$XcRv&
                                                       g$type$11231$XcRv&
                                                       g$loc$11230$XcRv&)
                                                     g$env$11220$XcRv&)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7966$XcRv&
                                                         g$v$11229$XcRv&)
                                                       g$loc$11230$XcRv&)
                                                     g$global*$11221$XcRv&)
                                                   g$macro*$11222$XcRv&)))
                                              (g$lookup$11217$XcRv&
                                                (g$lexical-var$7966$XcRv&
                                                  g$v$11229$XcRv&))
                                              (if (g$lexical-mutable?$7967$XcRv&
                                                    g$v$11229$XcRv&)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7762$XcRv&
                                            g$b$11225$XcRv&))
                                         (if (eqv? g$t$11226$XcRv& 'local-macro)
                                           ((case-lambda
                                              ((g$loc$11228$XcRv&)
                                               (g$f$11218$XcRv&
                                                 (cdr g$r$11219$XcRv&)
                                                 (cons
                                                   (g$cons*$6021$XcRv&
                                                     g$label$11224$XcRv&
                                                     'global-macro
                                                     g$loc$11228$XcRv&)
                                                   g$env$11220$XcRv&)
                                                 g$global*$11221$XcRv&
                                                 (cons
                                                   (cons
                                                     g$loc$11228$XcRv&
                                                     (g$binding-value$7762$XcRv&
                                                       g$b$11225$XcRv&))
                                                   g$macro*$11222$XcRv&))))
                                            (gensym))
                                           (if (eqv?
                                                 g$t$11226$XcRv&
                                                 'local-macro!)
                                             ((case-lambda
                                                ((g$loc$11227$XcRv&)
                                                 (g$f$11218$XcRv&
                                                   (cdr g$r$11219$XcRv&)
                                                   (cons
                                                     (g$cons*$6021$XcRv&
                                                       g$label$11224$XcRv&
                                                       'global-macro!
                                                       g$loc$11227$XcRv&)
                                                     g$env$11220$XcRv&)
                                                   g$global*$11221$XcRv&
                                                   (cons
                                                     (cons
                                                       g$loc$11227$XcRv&
                                                       (g$binding-value$7762$XcRv&
                                                         g$b$11225$XcRv&))
                                                     g$macro*$11222$XcRv&))))
                                              (gensym))
                                             (if (memv
                                                   g$t$11226$XcRv&
                                                   '($rtd $module))
                                               (g$f$11218$XcRv&
                                                 (cdr g$r$11219$XcRv&)
                                                 (cons
                                                   g$x$11223$XcRv&
                                                   g$env$11220$XcRv&)
                                                 g$global*$11221$XcRv&
                                                 g$macro*$11222$XcRv&)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7761$XcRv&
                                                   g$b$11225$XcRv&)
                                                 (g$binding-value$7762$XcRv&
                                                   g$b$11225$XcRv&))))))))
                                    (g$binding-type$7761$XcRv&
                                      g$b$11225$XcRv&))))
                                (car g$x$11223$XcRv&)
                                (cdr g$x$11223$XcRv&))))
                            (car g$r$11219$XcRv&)))))))
             g$f$11218$XcRv&)
           g$r$11216$XcRv&
           '()
           '()
           '())))))
   (g$generate-temporaries$8121$XcRv&
     g$generate-temporaries$11571$XcRv&
     (case-lambda
       ((g$ls$11237$XcRv&)
        ((case-lambda
           ((g$t$11238$XcRv&)
            ((case-lambda
               ((g$ls/false$11239$XcRv&)
                (if g$ls/false$11239$XcRv&
                  (apply
                    (case-lambda
                      ((g$ls$11240$XcRv&)
                       (map (case-lambda
                              ((g$x$11241$XcRv&)
                               (g$make-stx$7717$XcRv&
                                 ((case-lambda
                                    ((g$x$11242$XcRv&)
                                     (if ((case-lambda
                                            ((g$t$11243$XcRv&)
                                             (if g$t$11243$XcRv&
                                               g$t$11243$XcRv&
                                               (begin
                                                 '#f
                                                 (string? g$x$11242$XcRv&)))))
                                          (symbol? g$x$11242$XcRv&))
                                       (gensym g$x$11242$XcRv&)
                                       (gensym 't))))
                                  (g$syntax->datum$8131$XcRv& g$x$11241$XcRv&))
                                 g$top-mark*$7686$XcRv&
                                 '()
                                 '())))
                            g$ls$11240$XcRv&)))
                    g$ls/false$11239$XcRv&)
                  ((case-lambda
                     ((g$t$11244$XcRv&)
                      ((case-lambda
                         ((g$ls/false$11245$XcRv&)
                          (if g$ls/false$11245$XcRv&
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$11245$XcRv&)
                            (g$syntax-violation$8128$XcRv&
                              '#f
                              '"invalid syntax"
                              g$t$11244$XcRv&))))
                       (g$syntax-dispatch$8022$XcRv& g$t$11244$XcRv& '_))))
                   g$t$11238$XcRv&))))
             (g$syntax-dispatch$8022$XcRv& g$t$11238$XcRv& 'each-any))))
         g$ls$11237$XcRv&))))
   (g$free-identifier=?$8122$XcRv&
     g$free-identifier=?$11572$XcRv&
     (case-lambda
       ((g$x$11246$XcRv& g$y$11247$XcRv&)
        (if (g$id?$7744$XcRv& g$x$11246$XcRv&)
          (if (g$id?$7744$XcRv& g$y$11247$XcRv&)
            (g$free-id=?$7748$XcRv& g$x$11246$XcRv& g$y$11247$XcRv&)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$11247$XcRv&))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$11246$XcRv&)))))
   (g$bound-identifier=?$8123$XcRv&
     g$bound-identifier=?$11573$XcRv&
     (case-lambda
       ((g$x$11248$XcRv& g$y$11249$XcRv&)
        (if (g$id?$7744$XcRv& g$x$11248$XcRv&)
          (if (g$id?$7744$XcRv& g$y$11249$XcRv&)
            (g$bound-id=?$7747$XcRv& g$x$11248$XcRv& g$y$11249$XcRv&)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$11249$XcRv&))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$11248$XcRv&)))))
   (g$extract-position-condition$8124$XcRv&
     g$extract-position-condition$11574$XcRv&
     (case-lambda
       ((g$x$11250$XcRv&)
        (letrec* ((g$11822$11251$XcRv&
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11825$XcRv&
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11824$11252$XcRv& '#f)
                  (g$11823$11253$XcRv&
                    (make-record-constructor-descriptor
                      g$11822$11251$XcRv&
                      &condition-rcd
                      g$11824$11252$XcRv&))
                  (g$11821$11254$XcRv& (record-predicate g$11822$11251$XcRv&))
                  (g$make-source-condition$11255$XcRv&
                    (record-constructor g$11823$11253$XcRv&))
                  (g$11819$11256$XcRv& (record-accessor g$11822$11251$XcRv& '0))
                  (g$11820$11257$XcRv& (record-accessor g$11822$11251$XcRv& '1))
                  (g$source-condition?$11258$XcRv&
                    (condition-predicate g$11822$11251$XcRv&))
                  (g$source-filename$11259$XcRv&
                    (condition-accessor
                      g$11822$11251$XcRv&
                      g$11819$11256$XcRv&))
                  (g$source-character$11260$XcRv&
                    (condition-accessor
                      g$11822$11251$XcRv&
                      g$11820$11257$XcRv&)))
          (if (g$stx?$7716$XcRv& g$x$11250$XcRv&)
            ((case-lambda
               ((g$x$11261$XcRv&)
                (if (annotation? g$x$11261$XcRv&)
                  ((case-lambda
                     ((g$src$11262$XcRv&)
                      (if (pair? g$src$11262$XcRv&)
                        (g$make-source-condition$11255$XcRv&
                          (car g$src$11262$XcRv&)
                          (cdr g$src$11262$XcRv&))
                        (condition))))
                   (annotation-source g$x$11261$XcRv&))
                  (condition))))
             (g$stx-expr$7718$XcRv& g$x$11250$XcRv&))
            (condition))))))
   (g$syntax-error$8125$XcRv&
     g$syntax-error$11575$XcRv&
     (case-lambda
       ((g$x$11263$XcRv& . g$args$11264$XcRv&)
        (begin
          (if (g$for-all$6019$XcRv& string? g$args$11264$XcRv&)
            (void)
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$11264$XcRv&))
          (raise
            (condition
              (g$make-message-condition$6273$XcRv&
                (if (null? g$args$11264$XcRv&)
                  '"invalid syntax"
                  (apply string-append g$args$11264$XcRv&)))
              (g$make-syntax-violation$6345$XcRv&
                (g$syntax->datum$8131$XcRv& g$x$11263$XcRv&)
                '#f)
              (g$extract-position-condition$8124$XcRv& g$x$11263$XcRv&)
              (g$extract-trace$8126$XcRv& g$x$11263$XcRv&)))))))
   (g$extract-trace$8126$XcRv&
     g$extract-trace$11576$XcRv&
     (case-lambda
       ((g$x$11265$XcRv&)
        (letrec* ((g$11846$11266$XcRv&
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11849$XcRv&
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11848$11267$XcRv& '#f)
                  (g$11847$11268$XcRv&
                    (make-record-constructor-descriptor
                      g$11846$11266$XcRv&
                      &condition-rcd
                      g$11848$11267$XcRv&))
                  (g$11845$11269$XcRv& (record-predicate g$11846$11266$XcRv&))
                  (g$make-trace$11270$XcRv&
                    (record-constructor g$11847$11268$XcRv&))
                  (g$11844$11271$XcRv& (record-accessor g$11846$11266$XcRv& '0))
                  (g$trace?$11272$XcRv&
                    (condition-predicate g$11846$11266$XcRv&))
                  (g$trace-form$11273$XcRv&
                    (condition-accessor
                      g$11846$11266$XcRv&
                      g$11844$11271$XcRv&)))
          ((letrec ((g$f$11274$XcRv&
                      (case-lambda
                        ((g$x$11275$XcRv&)
                         (if (g$stx?$7716$XcRv& g$x$11275$XcRv&)
                           (apply
                             condition
                             (g$make-trace$11270$XcRv& g$x$11275$XcRv&)
                             (map g$f$11274$XcRv&
                                  (g$stx-ae*$7721$XcRv& g$x$11275$XcRv&)))
                           (if (annotation? g$x$11275$XcRv&)
                             (g$make-trace$11270$XcRv&
                               (g$make-stx$7717$XcRv&
                                 g$x$11275$XcRv&
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$11274$XcRv&)
           g$x$11265$XcRv&)))))
   (g$syntax-violation*$8127$XcRv&
     g$syntax-violation*$11577$XcRv&
     (case-lambda
       ((g$who$11276$XcRv&
          g$msg$11277$XcRv&
          g$form$11278$XcRv&
          g$condition-object$11279$XcRv&)
        (begin
          (if (string? g$msg$11277$XcRv&)
            (void)
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$11277$XcRv&))
          ((case-lambda
             ((g$who$11280$XcRv&)
              (raise
                (condition
                  (if g$who$11280$XcRv&
                    (g$make-who-condition$6319$XcRv& g$who$11280$XcRv&)
                    (condition))
                  (g$make-message-condition$6273$XcRv& g$msg$11277$XcRv&)
                  g$condition-object$11279$XcRv&
                  (g$extract-position-condition$8124$XcRv& g$form$11278$XcRv&)
                  (g$extract-trace$8126$XcRv& g$form$11278$XcRv&)))))
           (if ((case-lambda
                  ((g$t$11281$XcRv&)
                   (if g$t$11281$XcRv&
                     g$t$11281$XcRv&
                     (begin '#f (symbol? g$who$11276$XcRv&)))))
                (string? g$who$11276$XcRv&))
             g$who$11276$XcRv&
             (if (not g$who$11276$XcRv&)
               ((case-lambda
                  ((g$t$11282$XcRv&)
                   ((case-lambda
                      ((g$ls/false$11283$XcRv&)
                       (if (if g$ls/false$11283$XcRv&
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$11284$XcRv&)
                                    (g$id?$7744$XcRv& g$id$11284$XcRv&)))
                                 g$ls/false$11283$XcRv&))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$11285$XcRv&)
                              (g$syntax->datum$8131$XcRv& g$id$11285$XcRv&)))
                           g$ls/false$11283$XcRv&)
                         ((case-lambda
                            ((g$t$11286$XcRv&)
                             ((case-lambda
                                ((g$ls/false$11287$XcRv&)
                                 (if (if g$ls/false$11287$XcRv&
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$11288$XcRv&
                                                g$rest$11289$XcRv&)
                                              (g$id?$7744$XcRv&
                                                g$id$11288$XcRv&)))
                                           g$ls/false$11287$XcRv&))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$11290$XcRv& g$rest$11291$XcRv&)
                                        (g$syntax->datum$8131$XcRv&
                                          g$id$11290$XcRv&)))
                                     g$ls/false$11287$XcRv&)
                                   ((case-lambda
                                      ((g$t$11292$XcRv&)
                                       ((case-lambda
                                          ((g$ls/false$11293$XcRv&)
                                           (if g$ls/false$11293$XcRv&
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$11293$XcRv&)
                                             (g$syntax-violation$8128$XcRv&
                                               '#f
                                               '"invalid syntax"
                                               g$t$11292$XcRv&))))
                                        (g$syntax-dispatch$8022$XcRv&
                                          g$t$11292$XcRv&
                                          '_))))
                                    g$t$11286$XcRv&))))
                              (g$syntax-dispatch$8022$XcRv&
                                g$t$11286$XcRv&
                                '(any . any)))))
                          g$t$11282$XcRv&))))
                    (g$syntax-dispatch$8022$XcRv& g$t$11282$XcRv& 'any))))
                g$form$11278$XcRv&)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$11276$XcRv&))))))))
   (g$syntax-violation$8128$XcRv&
     g$syntax-violation$11578$XcRv&
     (case-lambda
       ((g$who$11294$XcRv& g$msg$11295$XcRv& g$form$11296$XcRv&)
        (g$syntax-violation$8128$XcRv&
          g$who$11294$XcRv&
          g$msg$11295$XcRv&
          g$form$11296$XcRv&
          '#f))
       ((g$who$11297$XcRv&
          g$msg$11298$XcRv&
          g$form$11299$XcRv&
          g$subform$11300$XcRv&)
        (g$syntax-violation*$8127$XcRv&
          g$who$11297$XcRv&
          g$msg$11298$XcRv&
          g$form$11299$XcRv&
          (g$make-syntax-violation$6345$XcRv&
            (g$syntax->datum$8131$XcRv& g$form$11299$XcRv&)
            (g$syntax->datum$8131$XcRv& g$subform$11300$XcRv&))))))
   (g$identifier?$8129$XcRv&
     g$identifier?$11579$XcRv&
     (case-lambda ((g$x$11301$XcRv&) (g$id?$7744$XcRv& g$x$11301$XcRv&))))
   (g$datum->syntax$8130$XcRv&
     g$datum->syntax$11580$XcRv&
     (case-lambda
       ((g$id$11302$XcRv& g$datum$11303$XcRv&)
        (if (g$id?$7744$XcRv& g$id$11302$XcRv&)
          (g$datum->stx$7727$XcRv& g$id$11302$XcRv& g$datum$11303$XcRv&)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$11302$XcRv&)))))
   (g$syntax->datum$8131$XcRv&
     g$syntax->datum$11581$XcRv&
     (case-lambda
       ((g$x$11304$XcRv&) (g$stx->datum$7755$XcRv& g$x$11304$XcRv&))))
   (g$compile-r6rs-top-level$8132$XcRv&
     g$compile-r6rs-top-level$11582$XcRv&
     (case-lambda
       ((g$x*$11305$XcRv&)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8082$XcRv& g$x*$11305$XcRv&)))
          (case-lambda
            ((g$lib*$11308$XcRv& g$invoke-code$11309$XcRv&)
             ((case-lambda
                ((g$invoke-code$11310$XcRv& g$lib*$11311$XcRv&)
                 (case-lambda
                   (()
                    (begin
                      (for-each g$invoke-library$7559$XcRv& g$lib*$11311$XcRv&)
                      (eval-core
                        (g$expanded->core$7258$XcRv&
                          g$invoke-code$11310$XcRv&)))))))
              g$invoke-code$11309$XcRv&
              g$lib*$11308$XcRv&)))))))
   (g$pre-compile-r6rs-top-level$8133$XcRv&
     g$pre-compile-r6rs-top-level$11583$XcRv&
     (case-lambda
       ((g$x*$11312$XcRv&)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8082$XcRv& g$x*$11312$XcRv&)))
          (case-lambda
            ((g$lib*$11315$XcRv& g$invoke-code$11316$XcRv&)
             ((case-lambda
                ((g$invoke-code$11317$XcRv& g$lib*$11318$XcRv&)
                 (begin
                   (for-each g$invoke-library$7559$XcRv& g$lib*$11318$XcRv&)
                   (compile-core
                     (g$expanded->core$7258$XcRv& g$invoke-code$11317$XcRv&)))))
              g$invoke-code$11316$XcRv&
              g$lib*$11315$XcRv&)))))))
   (g$interaction-environment$8134$XcRv&
     g$interaction-environment$11584$XcRv&
     ((case-lambda
        ((g$the-env$11319$XcRv&)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$11320$XcRv&)
                (if g$t$11320$XcRv&
                  g$t$11320$XcRv&
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$11321$XcRv& g$rib$11322$XcRv&)
                        (begin
                          ((case-lambda
                             ((g$subst$11323$XcRv&)
                              (begin
                                (g$set-rib-sym*!$7703$XcRv&
                                  g$rib$11322$XcRv&
                                  (map car g$subst$11323$XcRv&))
                                (g$set-rib-mark**!$7704$XcRv&
                                  g$rib$11322$XcRv&
                                  (map (case-lambda
                                         ((g$x$11324$XcRv&)
                                          g$top-mark*$7686$XcRv&))
                                       g$subst$11323$XcRv&))
                                (g$set-rib-label*!$7705$XcRv&
                                  g$rib$11322$XcRv&
                                  (map cdr g$subst$11323$XcRv&)))))
                           (g$library-subst$7516$XcRv& g$lib$11321$XcRv&))
                          ((case-lambda
                             ((g$env$11325$XcRv&)
                              (begin
                                (set! g$the-env$11319$XcRv& g$env$11325$XcRv&)
                                g$env$11325$XcRv&)))
                           (g$make-interaction-env$8099$XcRv&
                             g$rib$11322$XcRv&
                             '()
                             '())))))
                     (g$find-library-by-name$7552$XcRv& '(ironscheme))
                     (g$make-empty-rib$7707$XcRv&))))))
             g$the-env$11319$XcRv&)))))
      '#f))
   (g$top-level-context$8135$XcRv&
     g$top-level-context$11585$XcRv&
     (g$make-parameter$7012$XcRv& '#f)))
  (g$current-library-expander$7549$XcRv& g$library-expander$8115$XcRv&))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$7255$XcRv&
      (case-lambda
        ((g$x$11636$XcRv&)
         ((case-lambda
            ((g$t$11637$XcRv&) (if g$t$11637$XcRv& (cdr g$t$11637$XcRv&) '#f)))
          (assq
            g$x$11636$XcRv&
            '((ellipsis-map . g$ellipsis-map$11477$XcRv&)
              (ironscheme-build . g$ironscheme-build$11630$XcRv&)
              (syntax-error . g$syntax-error$11575$XcRv&)
              (syntax-dispatch . g$syntax-dispatch$11472$XcRv&)
              (compile-system-libraries
                .
                g$compile-system-libraries$11632$XcRv&)
              (compile->closure . g$compile->closure$11634$XcRv&)
              (compile . g$compile$11633$XcRv&)
              (load . g$load$11629$XcRv&)
              (interaction-environment . g$interaction-environment$11584$XcRv&)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11410$XcRv&)
              (variable-transformer? . g$variable-transformer?$11409$XcRv&)
              (make-variable-transformer
                .
                g$make-variable-transformer$11408$XcRv&)
              (identifier? . g$identifier?$11579$XcRv&)
              (generate-temporaries . g$generate-temporaries$11571$XcRv&)
              (free-identifier=? . g$free-identifier=?$11572$XcRv&)
              (syntax->datum . g$syntax->datum$11581$XcRv&)
              (datum->syntax . g$datum->syntax$11580$XcRv&)
              (bound-identifier=? . g$bound-identifier=?$11573$XcRv&)
              (delete-file . g$delete-file$5891$XcRv&)
              (file-exists? . g$file-exists?$5890$XcRv&)
              (list-sort . g$list-sort$6407$XcRv&)
              (make-eqv-hashtable . g$make-eqv-hashtable$5813$XcRv&)
              (make-eq-hashtable . g$make-eq-hashtable$5812$XcRv&)
              (hashtable-update! . g$hashtable-update!$5819$XcRv&)
              (hashtable-size . g$hashtable-size$5814$XcRv&)
              (hashtable-set! . g$hashtable-set!$5816$XcRv&)
              (hashtable-ref . g$hashtable-ref$5815$XcRv&)
              (hashtable-delete! . g$hashtable-delete!$5817$XcRv&)
              (hashtable-contains? . g$hashtable-contains?$5818$XcRv&)
              (hashtable-clear! . g$hashtable-clear!$5820$XcRv&)
              (open-string-output-port . g$open-string-output-port$6749$XcRv&)
              (make-i/o-write-error . g$make-i/o-write-error$6678$XcRv&)
              (make-i/o-read-error . g$make-i/o-read-error$6672$XcRv&)
              (make-i/o-port-error . g$make-i/o-port-error$6724$XcRv&)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6684$XcRv&)
              (make-i/o-filename-error . g$make-i/o-filename-error$6692$XcRv&)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6700$XcRv&)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6706$XcRv&)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6718$XcRv&)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6712$XcRv&)
              (make-i/o-error . g$make-i/o-error$6666$XcRv&)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6738$XcRv&)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6732$XcRv&)
              (i/o-write-error? . g$i/o-write-error?$6679$XcRv&)
              (i/o-read-error? . g$i/o-read-error?$6673$XcRv&)
              (i/o-port-error? . g$i/o-port-error?$6726$XcRv&)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6686$XcRv&)
              (i/o-error-position . g$i/o-error-position$6687$XcRv&)
              (i/o-filename-error? . g$i/o-filename-error?$6694$XcRv&)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6701$XcRv&)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6707$XcRv&)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6719$XcRv&)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6713$XcRv&)
              (i/o-error? . g$i/o-error?$6667$XcRv&)
              (i/o-error-port . g$i/o-error-port$6727$XcRv&)
              (i/o-error-filename . g$i/o-error-filename$6695$XcRv&)
              (i/o-encoding-error? . g$i/o-encoding-error?$6740$XcRv&)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6741$XcRv&)
              (i/o-decoding-error? . g$i/o-decoding-error?$6733$XcRv&)
              (scheme-report-environment
                .
                g$scheme-report-environment$11562$XcRv&)
              (quotient . g$quotient$6376$XcRv&)
              (null-environment . g$null-environment$11561$XcRv&)
              (remainder . g$remainder$6377$XcRv&)
              (modulo . g$modulo$6378$XcRv&)
              (command-line . g$command-line$11626$XcRv&)
              (remove . g$remove$6024$XcRv&)
              (remv . g$remv$6025$XcRv&)
              (remp . g$remp$6010$XcRv&)
              (remq . g$remq$6026$XcRv&)
              (partition . g$partition$6009$XcRv&)
              (memp . g$memp$6016$XcRv&)
              (member . g$member$6015$XcRv&)
              (exists . g$exists$6020$XcRv&)
              (for-all . g$for-all$6019$XcRv&)
              (fold-right . g$fold-right$6023$XcRv&)
              (fold-left . g$fold-left$6022$XcRv&)
              (find . g$find$6008$XcRv&)
              (filter . g$filter$6011$XcRv&)
              (cons* . g$cons*$6021$XcRv&)
              (assv . g$assv$6012$XcRv&)
              (assp . g$assp$6014$XcRv&)
              (assoc . g$assoc$6013$XcRv&)
              (eval . g$eval$11564$XcRv&)
              (environment . g$environment$11560$XcRv&)
              (make-enumeration . g$make-enumeration$6890$XcRv&)
              (enum-set=? . g$enum-set=?$6897$XcRv&)
              (enum-set-universe . g$enum-set-universe$6891$XcRv&)
              (enum-set-union . g$enum-set-union$6898$XcRv&)
              (enum-set-subset? . g$enum-set-subset?$6896$XcRv&)
              (enum-set-projection . g$enum-set-projection$6902$XcRv&)
              (enum-set-member? . g$enum-set-member?$6895$XcRv&)
              (enum-set-intersection . g$enum-set-intersection$6899$XcRv&)
              (enum-set-indexer . g$enum-set-indexer$6892$XcRv&)
              (enum-set-difference . g$enum-set-difference$6900$XcRv&)
              (enum-set-constructor . g$enum-set-constructor$6893$XcRv&)
              (enum-set-complement . g$enum-set-complement$6901$XcRv&)
              (enum-set->list . g$enum-set->list$6894$XcRv&)
              (who-condition? . g$who-condition?$6321$XcRv&)
              (warning? . g$warning?$6282$XcRv&)
              (violation? . g$violation?$6300$XcRv&)
              (undefined-violation? . g$undefined-violation?$6356$XcRv&)
              (syntax-violation? . g$syntax-violation?$6348$XcRv&)
              (syntax-violation-subform . g$syntax-violation-subform$6350$XcRv&)
              (syntax-violation-form . g$syntax-violation-form$6349$XcRv&)
              (syntax-violation . g$syntax-violation$11578$XcRv&)
              (serious-condition? . g$serious-condition?$6288$XcRv&)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$6328$XcRv&)
              (message-condition? . g$message-condition?$6275$XcRv&)
              (make-who-condition . g$make-who-condition$6319$XcRv&)
              (make-warning . g$make-warning$6281$XcRv&)
              (make-violation . g$make-violation$6299$XcRv&)
              (make-undefined-violation . g$make-undefined-violation$6355$XcRv&)
              (make-syntax-violation . g$make-syntax-violation$6345$XcRv&)
              (make-serious-condition . g$make-serious-condition$6287$XcRv&)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$6327$XcRv&)
              (make-message-condition . g$make-message-condition$6273$XcRv&)
              (make-lexical-violation . g$make-lexical-violation$6339$XcRv&)
              (make-irritants-condition . g$make-irritants-condition$6311$XcRv&)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$6333$XcRv&)
              (make-error . g$make-error$6293$XcRv&)
              (make-assertion-violation . g$make-assertion-violation$6305$XcRv&)
              (lexical-violation? . g$lexical-violation?$6340$XcRv&)
              (irritants-condition? . g$irritants-condition?$6313$XcRv&)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$6334$XcRv&)
              (error? . g$error?$6294$XcRv&)
              (condition-who . g$condition-who$6322$XcRv&)
              (condition-message . g$condition-message$6276$XcRv&)
              (condition-irritants . g$condition-irritants$6314$XcRv&)
              (assertion-violation? . g$assertion-violation?$6306$XcRv&)
              (native-endianness . g$native-endianness$6138$XcRv&)
              (bytevector-u64-set! . g$bytevector-u64-set!$6159$XcRv&)
              (bytevector-u64-ref . g$bytevector-u64-ref$6155$XcRv&)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$6161$XcRv&)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$6157$XcRv&)
              (bytevector-u32-set! . g$bytevector-u32-set!$6151$XcRv&)
              (bytevector-u32-ref . g$bytevector-u32-ref$6147$XcRv&)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$6153$XcRv&)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$6149$XcRv&)
              (bytevector-u16-set! . g$bytevector-u16-set!$6143$XcRv&)
              (bytevector-u16-ref . g$bytevector-u16-ref$6139$XcRv&)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$6145$XcRv&)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$6141$XcRv&)
              (bytevector-s64-set! . g$bytevector-s64-set!$6160$XcRv&)
              (bytevector-s64-ref . g$bytevector-s64-ref$6156$XcRv&)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$6162$XcRv&)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$6158$XcRv&)
              (bytevector-s32-set! . g$bytevector-s32-set!$6152$XcRv&)
              (bytevector-s32-ref . g$bytevector-s32-ref$6148$XcRv&)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$6154$XcRv&)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$6150$XcRv&)
              (bytevector-s16-set! . g$bytevector-s16-set!$6144$XcRv&)
              (bytevector-s16-ref . g$bytevector-s16-ref$6140$XcRv&)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$6146$XcRv&)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$6142$XcRv&)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$6165$XcRv&)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$6163$XcRv&)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$6166$XcRv&)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$6164$XcRv&)
              (no-nans-violation? . g$no-nans-violation?$6581$XcRv&)
              (no-infinities-violation? . g$no-infinities-violation?$6575$XcRv&)
              (make-no-nans-violation . g$make-no-nans-violation$6580$XcRv&)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6574$XcRv&)
              (fxrotate-bit-field . g$fxrotate-bit-field$6557$XcRv&)
              (fxif . g$fxif$6551$XcRv&)
              (fxcopy-bit-field . g$fxcopy-bit-field$6554$XcRv&)
              (fxcopy-bit . g$fxcopy-bit$6552$XcRv&)
              (fxbit-field . g$fxbit-field$6553$XcRv&)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6556$XcRv&)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6555$XcRv&)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6502$XcRv&)
              (bitwise-reverse-bit-field
                .
                g$bitwise-reverse-bit-field$6503$XcRv&)
              (bitwise-if . g$bitwise-if$6496$XcRv&)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6499$XcRv&)
              (bitwise-copy-bit . g$bitwise-copy-bit$6497$XcRv&)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6501$XcRv&)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6500$XcRv&)
              (rationalize . g$rationalize$5577$XcRv&)
              (cddddr . g$cddddr$5576$XcRv&)
              (cdddar . g$cdddar$5575$XcRv&)
              (cddadr . g$cddadr$5574$XcRv&)
              (cddaar . g$cddaar$5573$XcRv&)
              (cdaddr . g$cdaddr$5572$XcRv&)
              (cdadar . g$cdadar$5571$XcRv&)
              (cdaadr . g$cdaadr$5570$XcRv&)
              (cdaaar . g$cdaaar$5569$XcRv&)
              (cadddr . g$cadddr$5568$XcRv&)
              (caddar . g$caddar$5567$XcRv&)
              (cadadr . g$cadadr$5566$XcRv&)
              (cadaar . g$cadaar$5565$XcRv&)
              (caaddr . g$caaddr$5564$XcRv&)
              (caadar . g$caadar$5563$XcRv&)
              (caaadr . g$caaadr$5562$XcRv&)
              (caaaar . g$caaaar$5561$XcRv&)
              (cdddr . g$cdddr$5560$XcRv&)
              (cddar . g$cddar$5559$XcRv&)
              (cdadr . g$cdadr$5558$XcRv&)
              (cdaar . g$cdaar$5557$XcRv&)
              (caddr . g$caddr$5556$XcRv&)
              (cadar . g$cadar$5555$XcRv&)
              (caadr . g$caadr$5554$XcRv&)
              (caaar . g$caaar$5553$XcRv&)
              (cddr . g$cddr$5552$XcRv&)
              (cdar . g$cdar$5551$XcRv&)
              (cadr . g$cadr$5550$XcRv&)
              (caar . g$caar$5549$XcRv&)
              (load/args . g$load/args$11628$XcRv&)
              (printf . g$printf$6926$XcRv&)
              (fprintf . g$fprintf$6927$XcRv&)
              (format . g$format$6928$XcRv&)
              (trace-printer . g$trace-printer$11625$XcRv&)
              (make-traced-macro . g$make-traced-macro$6932$XcRv&)
              (make-parameter . g$make-parameter$7012$XcRv&)
              (environment-symbols . g$environment-symbols$11558$XcRv&)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11557$XcRv&)
              (library-path . g$library-path$7541$XcRv&)
              (library-extensions . g$library-extensions$7542$XcRv&)
              (installed-libraries . g$installed-libraries$7562$XcRv&)
              (expand . g$expand$11563$XcRv&)))))))
    (g$install-library$7557$XcRv&
      'g$12593$XcRv&
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12530$XcRv&)
        (cosh . g$12529$XcRv&)
        (sinh . g$12528$XcRv&)
        (make-guid . g$12527$XcRv&)
        (unspecified? . g$12526$XcRv&)
        (make-trace . g$12525$XcRv&)
        (make-list . g$12524$XcRv&)
        (last-pair . g$12523$XcRv&)
        (load-r5rs . g$12522$XcRv&)
        (license . g$12521$XcRv&)
        (stacktrace . g$12520$XcRv&)
        (ironscheme-build . g$11918$XcRv&)
        (set-symbol-value! . g$12506$XcRv&)
        (symbol-value . g$12505$XcRv&)
        (ungensym . g$12504$XcRv&)
        (gensym . g$12503$XcRv&)
        (void . g$12502$XcRv&)
        (compile-system-libraries . g$11920$XcRv&)
        (compile->closure . g$11922$XcRv&)
        (compile . g$11921$XcRv&)
        (load . g$11917$XcRv&)
        (interaction-environment . g$8986$XcRv&)
        (string-upcase . g$12498$XcRv&)
        (string-titlecase . g$12497$XcRv&)
        (string-normalize-nfkd . g$12496$XcRv&)
        (string-normalize-nfkc . g$12495$XcRv&)
        (string-normalize-nfd . g$12494$XcRv&)
        (string-normalize-nfc . g$12493$XcRv&)
        (string-foldcase . g$12492$XcRv&)
        (string-downcase . g$12491$XcRv&)
        (string-ci>? . g$12490$XcRv&)
        (string-ci>=? . g$12489$XcRv&)
        (string-ci=? . g$12488$XcRv&)
        (string-ci<? . g$12487$XcRv&)
        (string-ci<=? . g$12486$XcRv&)
        (char-whitespace? . g$12485$XcRv&)
        (char-upper-case? . g$12484$XcRv&)
        (char-title-case? . g$12483$XcRv&)
        (char-numeric? . g$12482$XcRv&)
        (char-lower-case? . g$12481$XcRv&)
        (char-general-category . g$12480$XcRv&)
        (char-upcase . g$12479$XcRv&)
        (char-titlecase . g$12478$XcRv&)
        (char-foldcase . g$12477$XcRv&)
        (char-downcase . g$12476$XcRv&)
        (char-ci>? . g$12475$XcRv&)
        (char-ci>=? . g$12474$XcRv&)
        (char-ci=? . g$12473$XcRv&)
        (char-ci<? . g$12472$XcRv&)
        (char-ci<=? . g$12471$XcRv&)
        (char-alphabetic? . g$12470$XcRv&)
        (variable-transformer-procedure . g$8590$XcRv&)
        (variable-transformer? . g$8589$XcRv&)
        (make-variable-transformer . g$8588$XcRv&)
        (identifier? . g$8981$XcRv&)
        (generate-temporaries . g$8973$XcRv&)
        (free-identifier=? . g$8974$XcRv&)
        (syntax->datum . g$8983$XcRv&)
        (datum->syntax . g$8982$XcRv&)
        (bound-identifier=? . g$8975$XcRv&)
        (record-type-descriptor? . g$12469$XcRv&)
        (record-predicate . g$12468$XcRv&)
        (record-mutator . g$12467$XcRv&)
        (record-constructor . g$12466$XcRv&)
        (record-accessor . g$12465$XcRv&)
        (make-record-type-descriptor . g$12464$XcRv&)
        (make-record-constructor-descriptor . g$12463$XcRv&)
        (record? . g$12462$XcRv&)
        (record-type-uid . g$12461$XcRv&)
        (record-type-sealed? . g$12460$XcRv&)
        (record-type-parent . g$12459$XcRv&)
        (record-type-opaque? . g$12458$XcRv&)
        (record-type-name . g$12457$XcRv&)
        (record-type-generative? . g$12456$XcRv&)
        (record-type-field-names . g$12455$XcRv&)
        (record-rtd . g$12454$XcRv&)
        (record-field-mutable? . g$12453$XcRv&)
        (delete-file . g$6618$XcRv&)
        (file-exists? . g$6617$XcRv&)
        (vector-sort! . g$12452$XcRv&)
        (vector-sort . g$12451$XcRv&)
        (list-sort . g$7124$XcRv&)
        (symbol-hash . g$12450$XcRv&)
        (string-ci-hash . g$12449$XcRv&)
        (string-hash . g$12448$XcRv&)
        (equal-hash . g$12447$XcRv&)
        (hashtable-equivalence-function . g$12446$XcRv&)
        (make-hashtable . g$12445$XcRv&)
        (hashtable-hash-function . g$12444$XcRv&)
        (make-eqv-hashtable . g$6585$XcRv&)
        (make-eq-hashtable . g$6584$XcRv&)
        (hashtable? . g$12443$XcRv&)
        (hashtable-update! . g$6591$XcRv&)
        (hashtable-size . g$6586$XcRv&)
        (hashtable-set! . g$6588$XcRv&)
        (hashtable-ref . g$6587$XcRv&)
        (hashtable-mutable? . g$12442$XcRv&)
        (hashtable-keys . g$12441$XcRv&)
        (hashtable-entries . g$12440$XcRv&)
        (hashtable-delete! . g$6589$XcRv&)
        (hashtable-copy . g$12439$XcRv&)
        (hashtable-contains? . g$6590$XcRv&)
        (hashtable-clear! . g$6592$XcRv&)
        (call-with-output-file . g$12438$XcRv&)
        (call-with-input-file . g$12437$XcRv&)
        (write-char . g$12436$XcRv&)
        (write . g$12435$XcRv&)
        (with-output-to-file . g$12434$XcRv&)
        (with-input-from-file . g$12433$XcRv&)
        (read-char . g$12432$XcRv&)
        (read . g$12431$XcRv&)
        (peek-char . g$12430$XcRv&)
        (open-output-file . g$12429$XcRv&)
        (open-input-file . g$12428$XcRv&)
        (newline . g$12427$XcRv&)
        (display . g$12426$XcRv&)
        (close-output-port . g$12425$XcRv&)
        (close-input-port . g$12424$XcRv&)
        (eof-object? . g$12423$XcRv&)
        (eof-object . g$12422$XcRv&)
        (current-error-port . g$12421$XcRv&)
        (current-output-port . g$12420$XcRv&)
        (current-input-port . g$12419$XcRv&)
        (output-port? . g$12418$XcRv&)
        (input-port? . g$12417$XcRv&)
        (utf-8-codec . g$12416$XcRv&)
        (utf-16-codec . g$12415$XcRv&)
        (transcoder-error-handling-mode . g$12414$XcRv&)
        (transcoder-eol-style . g$12413$XcRv&)
        (transcoder-codec . g$12412$XcRv&)
        (transcoded-port . g$12411$XcRv&)
        (textual-port? . g$12410$XcRv&)
        (string->bytevector . g$12409$XcRv&)
        (standard-output-port . g$12408$XcRv&)
        (standard-input-port . g$12407$XcRv&)
        (standard-error-port . g$12406$XcRv&)
        (set-port-position! . g$12405$XcRv&)
        (put-u8 . g$12404$XcRv&)
        (put-string . g$12403$XcRv&)
        (put-datum . g$12402$XcRv&)
        (put-char . g$12401$XcRv&)
        (put-bytevector . g$12400$XcRv&)
        (port? . g$12399$XcRv&)
        (port-transcoder . g$12398$XcRv&)
        (port-position . g$12397$XcRv&)
        (port-has-set-port-position!? . g$12396$XcRv&)
        (port-has-port-position? . g$12395$XcRv&)
        (port-eof? . g$12394$XcRv&)
        (output-port-buffer-mode . g$12393$XcRv&)
        (open-string-output-port . g$7515$XcRv&)
        (open-string-input-port . g$12392$XcRv&)
        (open-file-output-port . g$12391$XcRv&)
        (open-file-input/output-port . g$12390$XcRv&)
        (open-file-input-port . g$12389$XcRv&)
        (open-bytevector-output-port . g$12388$XcRv&)
        (open-bytevector-input-port . g$12387$XcRv&)
        (native-transcoder . g$12386$XcRv&)
        (native-eol-style . g$12385$XcRv&)
        (make-transcoder . g$12384$XcRv&)
        (latin-1-codec . g$12383$XcRv&)
        (make-i/o-write-error . g$7372$XcRv&)
        (make-i/o-read-error . g$7358$XcRv&)
        (make-i/o-port-error . g$7477$XcRv&)
        (make-i/o-invalid-position-error . g$7387$XcRv&)
        (make-i/o-filename-error . g$7404$XcRv&)
        (make-i/o-file-protection-error . g$7420$XcRv&)
        (make-i/o-file-is-read-only-error . g$7434$XcRv&)
        (make-i/o-file-does-not-exist-error . g$7462$XcRv&)
        (make-i/o-file-already-exists-error . g$7448$XcRv&)
        (make-i/o-error . g$7344$XcRv&)
        (make-i/o-encoding-error . g$7508$XcRv&)
        (make-i/o-decoding-error . g$7493$XcRv&)
        (make-custom-textual-output-port . g$12382$XcRv&)
        (make-custom-textual-input/output-port . g$12381$XcRv&)
        (make-custom-textual-input-port . g$12380$XcRv&)
        (make-custom-binary-output-port . g$12379$XcRv&)
        (make-custom-binary-input/output-port . g$12378$XcRv&)
        (make-custom-binary-input-port . g$12377$XcRv&)
        (make-bytevector . g$12376$XcRv&)
        (lookahead-u8 . g$12375$XcRv&)
        (lookahead-char . g$12374$XcRv&)
        (i/o-write-error? . g$7373$XcRv&)
        (i/o-read-error? . g$7359$XcRv&)
        (i/o-port-error? . g$7479$XcRv&)
        (i/o-invalid-position-error? . g$7389$XcRv&)
        (i/o-error-position . g$7390$XcRv&)
        (i/o-filename-error? . g$7406$XcRv&)
        (i/o-file-protection-error? . g$7421$XcRv&)
        (i/o-file-is-read-only-error? . g$7435$XcRv&)
        (i/o-file-does-not-exist-error? . g$7463$XcRv&)
        (i/o-file-already-exists-error? . g$7449$XcRv&)
        (i/o-error? . g$7345$XcRv&)
        (i/o-error-port . g$7480$XcRv&)
        (i/o-error-filename . g$7407$XcRv&)
        (i/o-encoding-error? . g$7510$XcRv&)
        (i/o-encoding-error-char . g$7511$XcRv&)
        (i/o-decoding-error? . g$7494$XcRv&)
        (get-u8 . g$12373$XcRv&)
        (get-string-n! . g$12372$XcRv&)
        (get-string-n . g$12371$XcRv&)
        (get-string-all . g$12370$XcRv&)
        (get-line . g$12369$XcRv&)
        (get-datum . g$12368$XcRv&)
        (get-char . g$12367$XcRv&)
        (get-bytevector-some . g$12366$XcRv&)
        (get-bytevector-n! . g$12365$XcRv&)
        (get-bytevector-n . g$12364$XcRv&)
        (get-bytevector-all . g$12363$XcRv&)
        (flush-output-port . g$12362$XcRv&)
        (close-port . g$12361$XcRv&)
        (call-with-string-output-port . g$12360$XcRv&)
        (call-with-port . g$12359$XcRv&)
        (call-with-bytevector-output-port . g$12358$XcRv&)
        (bytevector->string . g$12357$XcRv&)
        (buffer-mode? . g$12356$XcRv&)
        (binary-port? . g$12355$XcRv&)
        (scheme-report-environment . g$8964$XcRv&)
        (quotient . g$7111$XcRv&)
        (null-environment . g$8963$XcRv&)
        (remainder . g$7112$XcRv&)
        (modulo . g$7113$XcRv&)
        (inexact->exact . g$12354$XcRv&)
        (force . g$12353$XcRv&)
        (exact->inexact . g$12352$XcRv&)
        (exit . g$12351$XcRv&)
        (command-line . g$11914$XcRv&)
        (string-fill! . g$12350$XcRv&)
        (string-set! . g$12349$XcRv&)
        (set-cdr! . g$12348$XcRv&)
        (set-car! . g$12347$XcRv&)
        (remove . g$6698$XcRv&)
        (remv . g$6699$XcRv&)
        (remp . g$6684$XcRv&)
        (remq . g$6700$XcRv&)
        (partition . g$6683$XcRv&)
        (memv . g$12346$XcRv&)
        (memq . g$12345$XcRv&)
        (memp . g$6690$XcRv&)
        (member . g$6689$XcRv&)
        (exists . g$6694$XcRv&)
        (for-all . g$6693$XcRv&)
        (fold-right . g$6697$XcRv&)
        (fold-left . g$6696$XcRv&)
        (find . g$6682$XcRv&)
        (filter . g$6685$XcRv&)
        (cons* . g$6695$XcRv&)
        (assv . g$6686$XcRv&)
        (assq . g$12344$XcRv&)
        (assp . g$6688$XcRv&)
        (assoc . g$6687$XcRv&)
        (with-exception-handler . g$12343$XcRv&)
        (raise-continuable . g$12342$XcRv&)
        (raise . g$12341$XcRv&)
        (eval . g$8966$XcRv&)
        (environment . g$8962$XcRv&)
        (make-enumeration . g$7564$XcRv&)
        (enum-set=? . g$7571$XcRv&)
        (enum-set-universe . g$7565$XcRv&)
        (enum-set-union . g$7572$XcRv&)
        (enum-set-subset? . g$7570$XcRv&)
        (enum-set-projection . g$7576$XcRv&)
        (enum-set-member? . g$7569$XcRv&)
        (enum-set-intersection . g$7573$XcRv&)
        (enum-set-indexer . g$7566$XcRv&)
        (enum-set-difference . g$7574$XcRv&)
        (enum-set-constructor . g$7567$XcRv&)
        (enum-set-complement . g$7575$XcRv&)
        (enum-set->list . g$7568$XcRv&)
        (who-condition? . g$7022$XcRv&)
        (warning? . g$6933$XcRv&)
        (violation? . g$6975$XcRv&)
        (undefined-violation? . g$7099$XcRv&)
        (syntax-violation? . g$7083$XcRv&)
        (syntax-violation-subform . g$7085$XcRv&)
        (syntax-violation-form . g$7084$XcRv&)
        (syntax-violation . g$8980$XcRv&)
        (simple-conditions . g$12340$XcRv&)
        (serious-condition? . g$6947$XcRv&)
        (non-continuable-violation? . g$7037$XcRv&)
        (message-condition? . g$6918$XcRv&)
        (make-who-condition . g$7020$XcRv&)
        (make-warning . g$6932$XcRv&)
        (make-violation . g$6974$XcRv&)
        (make-undefined-violation . g$7098$XcRv&)
        (make-syntax-violation . g$7080$XcRv&)
        (make-serious-condition . g$6946$XcRv&)
        (make-non-continuable-violation . g$7036$XcRv&)
        (make-message-condition . g$6916$XcRv&)
        (make-lexical-violation . g$7064$XcRv&)
        (make-irritants-condition . g$7003$XcRv&)
        (make-implementation-restriction-violation . g$7050$XcRv&)
        (make-error . g$6960$XcRv&)
        (make-assertion-violation . g$6988$XcRv&)
        (lexical-violation? . g$7065$XcRv&)
        (irritants-condition? . g$7005$XcRv&)
        (implementation-restriction-violation? . g$7051$XcRv&)
        (error? . g$6961$XcRv&)
        (condition-who . g$7023$XcRv&)
        (condition-predicate . g$12339$XcRv&)
        (condition-message . g$6919$XcRv&)
        (condition-irritants . g$7006$XcRv&)
        (condition-accessor . g$12338$XcRv&)
        (condition . g$12337$XcRv&)
        (assertion-violation? . g$6989$XcRv&)
        (condition? . g$12336$XcRv&)
        (utf32->string . g$12335$XcRv&)
        (utf16->string . g$12334$XcRv&)
        (utf8->string . g$12333$XcRv&)
        (uint-list->bytevector . g$12332$XcRv&)
        (u8-list->bytevector . g$12331$XcRv&)
        (string->utf8 . g$12330$XcRv&)
        (string->utf32 . g$12329$XcRv&)
        (string->utf16 . g$12328$XcRv&)
        (sint-list->bytevector . g$12327$XcRv&)
        (native-endianness . g$6774$XcRv&)
        (bytevector? . g$12326$XcRv&)
        (bytevector=? . g$12325$XcRv&)
        (bytevector-uint-set! . g$12324$XcRv&)
        (bytevector-uint-ref . g$12323$XcRv&)
        (bytevector-u8-set! . g$12322$XcRv&)
        (bytevector-u8-ref . g$12321$XcRv&)
        (bytevector-u64-set! . g$6795$XcRv&)
        (bytevector-u64-ref . g$6791$XcRv&)
        (bytevector-u64-native-set! . g$6797$XcRv&)
        (bytevector-u64-native-ref . g$6793$XcRv&)
        (bytevector-u32-set! . g$6787$XcRv&)
        (bytevector-u32-ref . g$6783$XcRv&)
        (bytevector-u32-native-set! . g$6789$XcRv&)
        (bytevector-u32-native-ref . g$6785$XcRv&)
        (bytevector-u16-set! . g$6779$XcRv&)
        (bytevector-u16-ref . g$6775$XcRv&)
        (bytevector-u16-native-set! . g$6781$XcRv&)
        (bytevector-u16-native-ref . g$6777$XcRv&)
        (bytevector-sint-set! . g$12320$XcRv&)
        (bytevector-sint-ref . g$12319$XcRv&)
        (bytevector-s8-set! . g$12318$XcRv&)
        (bytevector-s8-ref . g$12317$XcRv&)
        (bytevector-s64-set! . g$6796$XcRv&)
        (bytevector-s64-ref . g$6792$XcRv&)
        (bytevector-s64-native-set! . g$6798$XcRv&)
        (bytevector-s64-native-ref . g$6794$XcRv&)
        (bytevector-s32-set! . g$6788$XcRv&)
        (bytevector-s32-ref . g$6784$XcRv&)
        (bytevector-s32-native-set! . g$6790$XcRv&)
        (bytevector-s32-native-ref . g$6786$XcRv&)
        (bytevector-s16-set! . g$6780$XcRv&)
        (bytevector-s16-ref . g$6776$XcRv&)
        (bytevector-s16-native-set! . g$6782$XcRv&)
        (bytevector-s16-native-ref . g$6778$XcRv&)
        (bytevector-length . g$12316$XcRv&)
        (bytevector-ieee-single-set! . g$12315$XcRv&)
        (bytevector-ieee-single-ref . g$12314$XcRv&)
        (bytevector-ieee-single-native-set! . g$6801$XcRv&)
        (bytevector-ieee-single-native-ref . g$6799$XcRv&)
        (bytevector-ieee-double-set! . g$12313$XcRv&)
        (bytevector-ieee-double-ref . g$12312$XcRv&)
        (bytevector-ieee-double-native-set! . g$6802$XcRv&)
        (bytevector-ieee-double-native-ref . g$6800$XcRv&)
        (bytevector-fill! . g$12311$XcRv&)
        (bytevector-copy! . g$12310$XcRv&)
        (bytevector-copy . g$12309$XcRv&)
        (bytevector->uint-list . g$12308$XcRv&)
        (bytevector->u8-list . g$12307$XcRv&)
        (bytevector->sint-list . g$12306$XcRv&)
        (no-nans-violation? . g$7330$XcRv&)
        (no-infinities-violation? . g$7316$XcRv&)
        (make-no-nans-violation . g$7329$XcRv&)
        (make-no-infinities-violation . g$7315$XcRv&)
        (real->flonum . g$12305$XcRv&)
        (flzero? . g$12304$XcRv&)
        (fltruncate . g$12303$XcRv&)
        (fltan . g$12302$XcRv&)
        (flsqrt . g$12301$XcRv&)
        (flsin . g$12300$XcRv&)
        (flround . g$12299$XcRv&)
        (flpositive? . g$12298$XcRv&)
        (flonum? . g$12297$XcRv&)
        (flodd? . g$12296$XcRv&)
        (flnumerator . g$12295$XcRv&)
        (flnegative? . g$12294$XcRv&)
        (flnan? . g$12293$XcRv&)
        (flmod0 . g$12292$XcRv&)
        (flmod . g$12291$XcRv&)
        (flmin . g$12290$XcRv&)
        (flmax . g$12289$XcRv&)
        (fllog . g$12288$XcRv&)
        (flinteger? . g$12287$XcRv&)
        (flinfinite? . g$12286$XcRv&)
        (flfloor . g$12285$XcRv&)
        (flfinite? . g$12284$XcRv&)
        (flexpt . g$12283$XcRv&)
        (flexp . g$12282$XcRv&)
        (fleven? . g$12281$XcRv&)
        (fldiv0-and-mod0 . g$12280$XcRv&)
        (fldiv0 . g$12279$XcRv&)
        (fldiv-and-mod . g$12278$XcRv&)
        (fldiv . g$12277$XcRv&)
        (fldenominator . g$12276$XcRv&)
        (flcos . g$12275$XcRv&)
        (flceiling . g$12274$XcRv&)
        (flatan . g$12273$XcRv&)
        (flasin . g$12272$XcRv&)
        (flacos . g$12271$XcRv&)
        (flabs . g$12270$XcRv&)
        (fl>? . g$12269$XcRv&)
        (fl>=? . g$12268$XcRv&)
        (fl=? . g$12267$XcRv&)
        (fl<? . g$12266$XcRv&)
        (fl<=? . g$12265$XcRv&)
        (fl/ . g$12264$XcRv&)
        (fl- . g$12263$XcRv&)
        (fl+ . g$12262$XcRv&)
        (fl* . g$12261$XcRv&)
        (fixnum->flonum . g$12260$XcRv&)
        (fxzero? . g$12259$XcRv&)
        (fxxor . g$12258$XcRv&)
        (fxrotate-bit-field . g$7261$XcRv&)
        (fxreverse-bit-field . g$12257$XcRv&)
        (fxpositive? . g$12256$XcRv&)
        (fxodd? . g$12255$XcRv&)
        (fxnot . g$12254$XcRv&)
        (fxnegative? . g$12253$XcRv&)
        (fxmod0 . g$12252$XcRv&)
        (fxmod . g$12251$XcRv&)
        (fxmin . g$12250$XcRv&)
        (fxmax . g$12249$XcRv&)
        (fxlength . g$12248$XcRv&)
        (fxior . g$12247$XcRv&)
        (fxif . g$7255$XcRv&)
        (fxfirst-bit-set . g$12246$XcRv&)
        (fxeven? . g$12245$XcRv&)
        (fxdiv0-and-mod0 . g$12244$XcRv&)
        (fxdiv0 . g$12243$XcRv&)
        (fxdiv-and-mod . g$12242$XcRv&)
        (fxdiv . g$12241$XcRv&)
        (fxcopy-bit-field . g$7258$XcRv&)
        (fxcopy-bit . g$7256$XcRv&)
        (fxbit-set? . g$12240$XcRv&)
        (fxbit-field . g$7257$XcRv&)
        (fxbit-count . g$12239$XcRv&)
        (fxarithmetic-shift-right . g$7260$XcRv&)
        (fxarithmetic-shift-left . g$7259$XcRv&)
        (fxarithmetic-shift . g$12238$XcRv&)
        (fxand . g$12237$XcRv&)
        (fx>? . g$12236$XcRv&)
        (fx>=? . g$12235$XcRv&)
        (fx=? . g$12234$XcRv&)
        (fx<? . g$12233$XcRv&)
        (fx<=? . g$12232$XcRv&)
        (fx-/carry . g$12231$XcRv&)
        (fx- . g$12230$XcRv&)
        (fx+/carry . g$12229$XcRv&)
        (fx+ . g$12228$XcRv&)
        (fx*/carry . g$12227$XcRv&)
        (fx* . g$12226$XcRv&)
        (greatest-fixnum . g$12225$XcRv&)
        (least-fixnum . g$12224$XcRv&)
        (fixnum-width . g$12223$XcRv&)
        (fixnum? . g$12222$XcRv&)
        (bitwise-rotate-bit-field . g$7209$XcRv&)
        (bitwise-reverse-bit-field . g$7210$XcRv&)
        (bitwise-length . g$12221$XcRv&)
        (bitwise-if . g$7203$XcRv&)
        (bitwise-first-bit-set . g$12220$XcRv&)
        (bitwise-copy-bit-field . g$7206$XcRv&)
        (bitwise-copy-bit . g$7204$XcRv&)
        (bitwise-bit-set? . g$12219$XcRv&)
        (bitwise-bit-field . g$12218$XcRv&)
        (bitwise-bit-count . g$12217$XcRv&)
        (bitwise-xor . g$12216$XcRv&)
        (bitwise-ior . g$12215$XcRv&)
        (bitwise-and . g$12214$XcRv&)
        (bitwise-not . g$12213$XcRv&)
        (bitwise-arithmetic-shift-right . g$7208$XcRv&)
        (bitwise-arithmetic-shift-left . g$7207$XcRv&)
        (bitwise-arithmetic-shift . g$12212$XcRv&)
        (zero? . g$12211$XcRv&)
        (vector? . g$12210$XcRv&)
        (vector-set! . g$12209$XcRv&)
        (vector-ref . g$12208$XcRv&)
        (vector-map . g$12207$XcRv&)
        (vector-length . g$12206$XcRv&)
        (vector-for-each . g$12205$XcRv&)
        (vector-fill! . g$12204$XcRv&)
        (vector->list . g$12203$XcRv&)
        (vector . g$12202$XcRv&)
        (values . g$12201$XcRv&)
        (truncate . g$12200$XcRv&)
        (tan . g$12199$XcRv&)
        (symbol? . g$12198$XcRv&)
        (symbol=? . g$12197$XcRv&)
        (symbol->string . g$12196$XcRv&)
        (substring . g$12195$XcRv&)
        (string? . g$12194$XcRv&)
        (string>? . g$12193$XcRv&)
        (string>=? . g$12192$XcRv&)
        (string=? . g$12191$XcRv&)
        (string<? . g$12190$XcRv&)
        (string<=? . g$12189$XcRv&)
        (string-ref . g$12188$XcRv&)
        (string-length . g$12187$XcRv&)
        (string-for-each . g$12186$XcRv&)
        (string-copy . g$12185$XcRv&)
        (string-append . g$12184$XcRv&)
        (string->symbol . g$12183$XcRv&)
        (string->number . g$12182$XcRv&)
        (string->list . g$12181$XcRv&)
        (string . g$12180$XcRv&)
        (sqrt . g$12179$XcRv&)
        (sin . g$12178$XcRv&)
        (round . g$12177$XcRv&)
        (reverse . g$12176$XcRv&)
        (real? . g$12175$XcRv&)
        (real-valued? . g$12174$XcRv&)
        (real-part . g$12173$XcRv&)
        (rationalize . g$6235$XcRv&)
        (rational? . g$12172$XcRv&)
        (rational-valued? . g$12171$XcRv&)
        (procedure? . g$12170$XcRv&)
        (positive? . g$12169$XcRv&)
        (pair? . g$12168$XcRv&)
        (odd? . g$12167$XcRv&)
        (numerator . g$12166$XcRv&)
        (number? . g$12165$XcRv&)
        (number->string . g$12164$XcRv&)
        (null? . g$12163$XcRv&)
        (not . g$12162$XcRv&)
        (negative? . g$12161$XcRv&)
        (nan? . g$12160$XcRv&)
        (min . g$12159$XcRv&)
        (max . g$12158$XcRv&)
        (map . g$12157$XcRv&)
        (make-vector . g$12156$XcRv&)
        (make-string . g$12155$XcRv&)
        (make-rectangular . g$12154$XcRv&)
        (make-polar . g$12153$XcRv&)
        (magnitude . g$12152$XcRv&)
        (log . g$12151$XcRv&)
        (list? . g$12150$XcRv&)
        (list-tail . g$12149$XcRv&)
        (list-ref . g$12148$XcRv&)
        (list->vector . g$12147$XcRv&)
        (list->string . g$12146$XcRv&)
        (list . g$12145$XcRv&)
        (length . g$12144$XcRv&)
        (lcm . g$12143$XcRv&)
        (integer? . g$12142$XcRv&)
        (integer-valued? . g$12141$XcRv&)
        (integer->char . g$12140$XcRv&)
        (infinite? . g$12139$XcRv&)
        (inexact? . g$12138$XcRv&)
        (inexact . g$12137$XcRv&)
        (imag-part . g$12136$XcRv&)
        (gcd . g$12135$XcRv&)
        (for-each . g$12134$XcRv&)
        (floor . g$12133$XcRv&)
        (finite? . g$12132$XcRv&)
        (expt . g$12131$XcRv&)
        (exp . g$12130$XcRv&)
        (exact? . g$12129$XcRv&)
        (exact-integer-sqrt . g$12128$XcRv&)
        (exact . g$12127$XcRv&)
        (even? . g$12126$XcRv&)
        (error . g$12125$XcRv&)
        (eqv? . g$12124$XcRv&)
        (equal? . g$12123$XcRv&)
        (eq? . g$12122$XcRv&)
        (dynamic-wind . g$12121$XcRv&)
        (div0-and-mod0 . g$12120$XcRv&)
        (mod0 . g$12119$XcRv&)
        (div0 . g$12118$XcRv&)
        (div-and-mod . g$12117$XcRv&)
        (mod . g$12116$XcRv&)
        (div . g$12115$XcRv&)
        (denominator . g$12114$XcRv&)
        (cos . g$12113$XcRv&)
        (cons . g$12112$XcRv&)
        (complex? . g$12111$XcRv&)
        (char? . g$12110$XcRv&)
        (char>? . g$12109$XcRv&)
        (char>=? . g$12108$XcRv&)
        (char=? . g$12107$XcRv&)
        (char<? . g$12106$XcRv&)
        (char<=? . g$12105$XcRv&)
        (char->integer . g$12104$XcRv&)
        (ceiling . g$12103$XcRv&)
        (call-with-values . g$12102$XcRv&)
        (call/cc . g$12101$XcRv&)
        (call-with-current-continuation . g$12100$XcRv&)
        (cddddr . g$6234$XcRv&)
        (cdddar . g$6233$XcRv&)
        (cddadr . g$6232$XcRv&)
        (cddaar . g$6231$XcRv&)
        (cdaddr . g$6230$XcRv&)
        (cdadar . g$6229$XcRv&)
        (cdaadr . g$6228$XcRv&)
        (cdaaar . g$6227$XcRv&)
        (cadddr . g$6226$XcRv&)
        (caddar . g$6225$XcRv&)
        (cadadr . g$6224$XcRv&)
        (cadaar . g$6223$XcRv&)
        (caaddr . g$6222$XcRv&)
        (caadar . g$6221$XcRv&)
        (caaadr . g$6220$XcRv&)
        (caaaar . g$6219$XcRv&)
        (cdddr . g$6218$XcRv&)
        (cddar . g$6217$XcRv&)
        (cdadr . g$6216$XcRv&)
        (cdaar . g$6215$XcRv&)
        (caddr . g$6214$XcRv&)
        (cadar . g$6213$XcRv&)
        (caadr . g$6212$XcRv&)
        (caaar . g$6211$XcRv&)
        (cddr . g$6210$XcRv&)
        (cdar . g$6209$XcRv&)
        (cadr . g$6208$XcRv&)
        (caar . g$6207$XcRv&)
        (cdr . g$12099$XcRv&)
        (car . g$12098$XcRv&)
        (boolean? . g$12097$XcRv&)
        (boolean=? . g$12096$XcRv&)
        (atan . g$12095$XcRv&)
        (assertion-violation . g$12094$XcRv&)
        (asin . g$12093$XcRv&)
        (apply . g$12092$XcRv&)
        (append . g$12091$XcRv&)
        (angle . g$12090$XcRv&)
        (acos . g$12089$XcRv&)
        (abs . g$12088$XcRv&)
        (/ . g$12087$XcRv&)
        (* . g$12086$XcRv&)
        (- . g$12085$XcRv&)
        (+ . g$12084$XcRv&)
        (>= . g$12083$XcRv&)
        (> . g$12082$XcRv&)
        (= . g$12081$XcRv&)
        (<= . g$12080$XcRv&)
        (< . g$12079$XcRv&)
        (make-promise . g$12074$XcRv&)
        (load/args . g$11916$XcRv&)
        (printf . g$7678$XcRv&)
        (fprintf . g$7679$XcRv&)
        (format . g$7680$XcRv&)
        (get-arity . g$12073$XcRv&)
        (gc-collect . g$12072$XcRv&)
        (clr-type? . g$12071$XcRv&)
        (get-clr-type . g$12070$XcRv&)
        (vector-append . g$12068$XcRv&)
        (vector-filter . g$12067$XcRv&)
        (vector-reverse! . g$12066$XcRv&)
        (vector-contains? . g$12065$XcRv&)
        (vector-index-of . g$12064$XcRv&)
        (vector-copy . g$12063$XcRv&)
        (vector-binary-search . g$12062$XcRv&)
        (get-output-string . g$12061$XcRv&)
        (open-output-string . g$12060$XcRv&)
        (open-input-string . g$12059$XcRv&)
        (string-format . g$12058$XcRv&)
        (trace-printer . g$11913$XcRv&)
        (make-traced-procedure . g$12057$XcRv&)
        (make-traced-macro . g$7699$XcRv&)
        (pmap . g$12056$XcRv&)
        (time-it . g$12055$XcRv&)
        (make-parameter . g$7704$XcRv&)
        (library-locator . g$12054$XcRv&)
        (get-library-paths . g$12053$XcRv&)
        (environment-symbols . g$8960$XcRv&)
        (interaction-environment-symbols . g$8959$XcRv&)
        (library-path . g$8129$XcRv&)
        (library-extensions . g$8130$XcRv&)
        (installed-libraries . g$8150$XcRv&)
        (expand . g$8965$XcRv&)
        (&no-nans . g$12052$XcRv&)
        (&no-infinities . g$12051$XcRv&)
        (&i/o-encoding . g$12050$XcRv&)
        (&i/o-decoding . g$12049$XcRv&)
        (&i/o-port . g$12048$XcRv&)
        (&i/o-file-does-not-exist . g$12047$XcRv&)
        (&i/o-file-already-exists . g$12046$XcRv&)
        (&i/o-file-is-read-only . g$12045$XcRv&)
        (&i/o-file-protection . g$12044$XcRv&)
        (&i/o-filename . g$12043$XcRv&)
        (&i/o-invalid-position . g$12042$XcRv&)
        (&i/o-write . g$12041$XcRv&)
        (&i/o-read . g$12040$XcRv&)
        (&i/o . g$12039$XcRv&)
        (&non-continuable . g$12038$XcRv&)
        (&undefined . g$12037$XcRv&)
        (&syntax . g$12036$XcRv&)
        (&lexical . g$12035$XcRv&)
        (&implementation-restriction . g$12034$XcRv&)
        (&who . g$12032$XcRv&)
        (&irritants . g$12031$XcRv&)
        (&assertion . g$12030$XcRv&)
        (&violation . g$12029$XcRv&)
        (&error . g$12028$XcRv&)
        (&serious . g$12027$XcRv&)
        (&warning . g$12026$XcRv&)
        (&message . g$12025$XcRv&)
        (&condition . g$12024$XcRv&)
        (define-condition-type . g$12023$XcRv&)
        (define-enumeration . g$12022$XcRv&)
        (define-record-type . g$12021$XcRv&)
        (parent-rtd . g$12020$XcRv&)
        (nongenerative . g$12019$XcRv&)
        (opaque . g$12018$XcRv&)
        (sealed . g$12017$XcRv&)
        (protocol . g$12016$XcRv&)
        (parent . g$12015$XcRv&)
        (immutable . g$12014$XcRv&)
        (mutable . g$12013$XcRv&)
        (fields . g$12012$XcRv&)
        (error-handling-mode . g$12011$XcRv&)
        (file-options . g$12010$XcRv&)
        (buffer-mode . g$12009$XcRv&)
        (eol-style . g$12008$XcRv&)
        (guard . g$12007$XcRv&)
        (trace-letrec-syntax . g$12006$XcRv&)
        (trace-let-syntax . g$12005$XcRv&)
        (trace-define-syntax . g$12004$XcRv&)
        (trace-define . g$12003$XcRv&)
        (trace-lambda . g$12002$XcRv&)
        (unsyntax-splicing . g$12001$XcRv&)
        (unsyntax . g$12000$XcRv&)
        (unquote-splicing . g$11999$XcRv&)
        (unquote . g$11998$XcRv&)
        (_ . g$11997$XcRv&)
        (else . g$11996$XcRv&)
        (=> . g$11995$XcRv&)
        (... . g$11994$XcRv&)
        (assert . g$11993$XcRv&)
        (endianness . g$11992$XcRv&)
        (delay . g$11991$XcRv&)
        (time . g$11990$XcRv&)
        (or . g$11989$XcRv&)
        (and . g$11988$XcRv&)
        (do . g$11987$XcRv&)
        (cond . g$11986$XcRv&)
        (let* . g$11985$XcRv&)
        (let . g$11984$XcRv&)
        (identifier-syntax . g$11983$XcRv&)
        (with-syntax . g$11982$XcRv&)
        (quasisyntax . g$11981$XcRv&)
        (quasiquote . g$11980$XcRv&)
        (syntax-rules . g$11979$XcRv&)
        (include-into . g$11978$XcRv&)
        (include . g$11977$XcRv&)
        (let-values . g$11975$XcRv&)
        (let*-values . g$11974$XcRv&)
        (record-constructor-descriptor . g$11973$XcRv&)
        (record-type-descriptor . g$11972$XcRv&)
        (fluid-let-syntax . g$11971$XcRv&)
        (case . g$11970$XcRv&)
        (parameterize . g$11969$XcRv&)
        (unless . g$11968$XcRv&)
        (when . g$11967$XcRv&)
        (if . g$11966$XcRv&)
        (letrec* . g$11965$XcRv&)
        (letrec . g$11964$XcRv&)
        (case-lambda . g$11962$XcRv&)
        (lambda . g$11961$XcRv&)
        (syntax . g$11960$XcRv&)
        (syntax-case . g$11959$XcRv&)
        (quote . g$11958$XcRv&)
        (letrec-syntax . g$11956$XcRv&)
        (let-syntax . g$11955$XcRv&)
        (set! . g$11954$XcRv&)
        (import . g$11953$XcRv&)
        (library . g$11952$XcRv&)
        (begin . g$11951$XcRv&)
        (module . g$11950$XcRv&)
        (define-syntax . g$11949$XcRv&)
        (define . g$11948$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12594$XcRv&
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12053$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7557$XcRv&
      'g$12595$XcRv&
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12535$XcRv&)
        (annotation-source . g$12534$XcRv&)
        (annotation-expression . g$12533$XcRv&)
        (annotation? . g$12532$XcRv&)
        (read-annotated . g$12531$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7557$XcRv&
      'g$12596$XcRv&
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12501$XcRv&)
        (serialize-library . g$12500$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7557$XcRv&
      'g$12597$XcRv&
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8590$XcRv&)
        (variable-transformer? . g$8589$XcRv&)
        (eqv-hash . g$12077$XcRv&)
        (eq-hash . g$12076$XcRv&)
        (reverse! . g$12075$XcRv&)
        (format . g$7680$XcRv&)
        (get-command-line . g$12069$XcRv&)
        (make-traced-procedure . g$12057$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7557$XcRv&
      'g$12598$XcRv&
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12078$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12599$XcRv&
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12519$XcRv&)
        (clr-field-set!-internal . g$12518$XcRv&)
        (clr-field-get-internal . g$12517$XcRv&)
        (clr-cast-internal . g$12516$XcRv&)
        (clr-call-internal . g$12515$XcRv&)
        (clr-new-internal . g$12514$XcRv&)
        (clr-new-array-internal . g$12513$XcRv&)
        (clr-is-internal . g$12512$XcRv&)
        (clr-reference-internal . g$12511$XcRv&)
        (clr-using-internal . g$12510$XcRv&)
        (clr-clear-usings-internal . g$12509$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12600$XcRv&
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11999$XcRv&)
        (unquote . g$11998$XcRv&)
        (delay . g$11991$XcRv&)
        (or . g$11989$XcRv&)
        (and . g$11988$XcRv&)
        (do . g$11987$XcRv&)
        (cond . g$11986$XcRv&)
        (let* . g$11985$XcRv&)
        (let . g$11984$XcRv&)
        (quasiquote . g$11980$XcRv&)
        (syntax-rules . g$11979$XcRv&)
        (case . g$11970$XcRv&)
        (if . g$11966$XcRv&)
        (letrec . g$11964$XcRv&)
        (lambda . g$11961$XcRv&)
        (quote . g$11958$XcRv&)
        (letrec-syntax . g$11956$XcRv&)
        (let-syntax . g$11955$XcRv&)
        (set! . g$11954$XcRv&)
        (begin . g$11951$XcRv&)
        (define-syntax . g$11949$XcRv&)
        (define . g$11948$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7557$XcRv&
      'g$12601$XcRv&
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8986$XcRv&)
        (char-ready? . g$12499$XcRv&)
        (string-ci>? . g$12490$XcRv&)
        (string-ci>=? . g$12489$XcRv&)
        (string-ci=? . g$12488$XcRv&)
        (string-ci<? . g$12487$XcRv&)
        (string-ci<=? . g$12486$XcRv&)
        (char-whitespace? . g$12485$XcRv&)
        (char-upper-case? . g$12484$XcRv&)
        (char-numeric? . g$12482$XcRv&)
        (char-lower-case? . g$12481$XcRv&)
        (char-upcase . g$12479$XcRv&)
        (char-downcase . g$12476$XcRv&)
        (char-ci>? . g$12475$XcRv&)
        (char-ci>=? . g$12474$XcRv&)
        (char-ci=? . g$12473$XcRv&)
        (char-ci<? . g$12472$XcRv&)
        (char-ci<=? . g$12471$XcRv&)
        (char-alphabetic? . g$12470$XcRv&)
        (call-with-output-file . g$12438$XcRv&)
        (call-with-input-file . g$12437$XcRv&)
        (write-char . g$12436$XcRv&)
        (write . g$12435$XcRv&)
        (with-output-to-file . g$12434$XcRv&)
        (with-input-from-file . g$12433$XcRv&)
        (read-char . g$12432$XcRv&)
        (read . g$12431$XcRv&)
        (peek-char . g$12430$XcRv&)
        (open-output-file . g$12429$XcRv&)
        (open-input-file . g$12428$XcRv&)
        (newline . g$12427$XcRv&)
        (display . g$12426$XcRv&)
        (close-output-port . g$12425$XcRv&)
        (close-input-port . g$12424$XcRv&)
        (eof-object? . g$12423$XcRv&)
        (eof-object . g$12422$XcRv&)
        (current-error-port . g$12421$XcRv&)
        (current-output-port . g$12420$XcRv&)
        (current-input-port . g$12419$XcRv&)
        (output-port? . g$12418$XcRv&)
        (input-port? . g$12417$XcRv&)
        (scheme-report-environment . g$8964$XcRv&)
        (quotient . g$7111$XcRv&)
        (null-environment . g$8963$XcRv&)
        (remainder . g$7112$XcRv&)
        (modulo . g$7113$XcRv&)
        (inexact->exact . g$12354$XcRv&)
        (force . g$12353$XcRv&)
        (exact->inexact . g$12352$XcRv&)
        (string-fill! . g$12350$XcRv&)
        (string-set! . g$12349$XcRv&)
        (set-cdr! . g$12348$XcRv&)
        (set-car! . g$12347$XcRv&)
        (memv . g$12346$XcRv&)
        (memq . g$12345$XcRv&)
        (member . g$6689$XcRv&)
        (assv . g$6686$XcRv&)
        (assq . g$12344$XcRv&)
        (assoc . g$6687$XcRv&)
        (eval . g$8966$XcRv&)
        (zero? . g$12211$XcRv&)
        (vector? . g$12210$XcRv&)
        (vector-set! . g$12209$XcRv&)
        (vector-ref . g$12208$XcRv&)
        (vector-length . g$12206$XcRv&)
        (vector-fill! . g$12204$XcRv&)
        (vector->list . g$12203$XcRv&)
        (vector . g$12202$XcRv&)
        (values . g$12201$XcRv&)
        (truncate . g$12200$XcRv&)
        (tan . g$12199$XcRv&)
        (symbol? . g$12198$XcRv&)
        (symbol->string . g$12196$XcRv&)
        (substring . g$12195$XcRv&)
        (string? . g$12194$XcRv&)
        (string>? . g$12193$XcRv&)
        (string>=? . g$12192$XcRv&)
        (string=? . g$12191$XcRv&)
        (string<? . g$12190$XcRv&)
        (string<=? . g$12189$XcRv&)
        (string-ref . g$12188$XcRv&)
        (string-length . g$12187$XcRv&)
        (string-copy . g$12185$XcRv&)
        (string-append . g$12184$XcRv&)
        (string->symbol . g$12183$XcRv&)
        (string->number . g$12182$XcRv&)
        (string->list . g$12181$XcRv&)
        (string . g$12180$XcRv&)
        (sqrt . g$12179$XcRv&)
        (sin . g$12178$XcRv&)
        (round . g$12177$XcRv&)
        (reverse . g$12176$XcRv&)
        (real? . g$12175$XcRv&)
        (real-part . g$12173$XcRv&)
        (rationalize . g$6235$XcRv&)
        (rational? . g$12172$XcRv&)
        (procedure? . g$12170$XcRv&)
        (positive? . g$12169$XcRv&)
        (pair? . g$12168$XcRv&)
        (odd? . g$12167$XcRv&)
        (numerator . g$12166$XcRv&)
        (number? . g$12165$XcRv&)
        (number->string . g$12164$XcRv&)
        (null? . g$12163$XcRv&)
        (not . g$12162$XcRv&)
        (negative? . g$12161$XcRv&)
        (min . g$12159$XcRv&)
        (max . g$12158$XcRv&)
        (map . g$12157$XcRv&)
        (make-vector . g$12156$XcRv&)
        (make-string . g$12155$XcRv&)
        (make-rectangular . g$12154$XcRv&)
        (make-polar . g$12153$XcRv&)
        (magnitude . g$12152$XcRv&)
        (log . g$12151$XcRv&)
        (list? . g$12150$XcRv&)
        (list-tail . g$12149$XcRv&)
        (list-ref . g$12148$XcRv&)
        (list->vector . g$12147$XcRv&)
        (list->string . g$12146$XcRv&)
        (list . g$12145$XcRv&)
        (length . g$12144$XcRv&)
        (lcm . g$12143$XcRv&)
        (integer? . g$12142$XcRv&)
        (integer->char . g$12140$XcRv&)
        (inexact? . g$12138$XcRv&)
        (imag-part . g$12136$XcRv&)
        (gcd . g$12135$XcRv&)
        (for-each . g$12134$XcRv&)
        (floor . g$12133$XcRv&)
        (expt . g$12131$XcRv&)
        (exp . g$12130$XcRv&)
        (exact? . g$12129$XcRv&)
        (even? . g$12126$XcRv&)
        (eqv? . g$12124$XcRv&)
        (equal? . g$12123$XcRv&)
        (eq? . g$12122$XcRv&)
        (dynamic-wind . g$12121$XcRv&)
        (denominator . g$12114$XcRv&)
        (cos . g$12113$XcRv&)
        (cons . g$12112$XcRv&)
        (complex? . g$12111$XcRv&)
        (char? . g$12110$XcRv&)
        (char>? . g$12109$XcRv&)
        (char>=? . g$12108$XcRv&)
        (char=? . g$12107$XcRv&)
        (char<? . g$12106$XcRv&)
        (char<=? . g$12105$XcRv&)
        (char->integer . g$12104$XcRv&)
        (ceiling . g$12103$XcRv&)
        (call-with-values . g$12102$XcRv&)
        (call-with-current-continuation . g$12100$XcRv&)
        (cddddr . g$6234$XcRv&)
        (cdddar . g$6233$XcRv&)
        (cddadr . g$6232$XcRv&)
        (cddaar . g$6231$XcRv&)
        (cdaddr . g$6230$XcRv&)
        (cdadar . g$6229$XcRv&)
        (cdaadr . g$6228$XcRv&)
        (cdaaar . g$6227$XcRv&)
        (cadddr . g$6226$XcRv&)
        (caddar . g$6225$XcRv&)
        (cadadr . g$6224$XcRv&)
        (cadaar . g$6223$XcRv&)
        (caaddr . g$6222$XcRv&)
        (caadar . g$6221$XcRv&)
        (caaadr . g$6220$XcRv&)
        (caaaar . g$6219$XcRv&)
        (cdddr . g$6218$XcRv&)
        (cddar . g$6217$XcRv&)
        (cdadr . g$6216$XcRv&)
        (cdaar . g$6215$XcRv&)
        (caddr . g$6214$XcRv&)
        (cadar . g$6213$XcRv&)
        (caadr . g$6212$XcRv&)
        (caaar . g$6211$XcRv&)
        (cddr . g$6210$XcRv&)
        (cdar . g$6209$XcRv&)
        (cadr . g$6208$XcRv&)
        (caar . g$6207$XcRv&)
        (cdr . g$12099$XcRv&)
        (car . g$12098$XcRv&)
        (boolean? . g$12097$XcRv&)
        (atan . g$12095$XcRv&)
        (asin . g$12093$XcRv&)
        (apply . g$12092$XcRv&)
        (append . g$12091$XcRv&)
        (angle . g$12090$XcRv&)
        (acos . g$12089$XcRv&)
        (abs . g$12088$XcRv&)
        (/ . g$12087$XcRv&)
        (* . g$12086$XcRv&)
        (- . g$12085$XcRv&)
        (+ . g$12084$XcRv&)
        (>= . g$12083$XcRv&)
        (> . g$12082$XcRv&)
        (= . g$12081$XcRv&)
        (<= . g$12080$XcRv&)
        (< . g$12079$XcRv&)
        (unquote-splicing . g$11999$XcRv&)
        (unquote . g$11998$XcRv&)
        (else . g$11996$XcRv&)
        (=> . g$11995$XcRv&)
        (... . g$11994$XcRv&)
        (delay . g$11991$XcRv&)
        (or . g$11989$XcRv&)
        (and . g$11988$XcRv&)
        (do . g$11987$XcRv&)
        (cond . g$11986$XcRv&)
        (let* . g$11985$XcRv&)
        (let . g$11984$XcRv&)
        (quasiquote . g$11980$XcRv&)
        (syntax-rules . g$11979$XcRv&)
        (case . g$11970$XcRv&)
        (if . g$11966$XcRv&)
        (letrec . g$11964$XcRv&)
        (lambda . g$11961$XcRv&)
        (quote . g$11958$XcRv&)
        (letrec-syntax . g$11956$XcRv&)
        (let-syntax . g$11955$XcRv&)
        (set! . g$11954$XcRv&)
        (begin . g$11951$XcRv&)
        (define-syntax . g$11949$XcRv&)
        (define . g$11948$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7557$XcRv&
      'g$12602$XcRv&
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12498$XcRv&)
        (string-titlecase . g$12497$XcRv&)
        (string-normalize-nfkd . g$12496$XcRv&)
        (string-normalize-nfkc . g$12495$XcRv&)
        (string-normalize-nfd . g$12494$XcRv&)
        (string-normalize-nfc . g$12493$XcRv&)
        (string-foldcase . g$12492$XcRv&)
        (string-downcase . g$12491$XcRv&)
        (string-ci>? . g$12490$XcRv&)
        (string-ci>=? . g$12489$XcRv&)
        (string-ci=? . g$12488$XcRv&)
        (string-ci<? . g$12487$XcRv&)
        (string-ci<=? . g$12486$XcRv&)
        (char-whitespace? . g$12485$XcRv&)
        (char-upper-case? . g$12484$XcRv&)
        (char-title-case? . g$12483$XcRv&)
        (char-numeric? . g$12482$XcRv&)
        (char-lower-case? . g$12481$XcRv&)
        (char-general-category . g$12480$XcRv&)
        (char-upcase . g$12479$XcRv&)
        (char-titlecase . g$12478$XcRv&)
        (char-foldcase . g$12477$XcRv&)
        (char-downcase . g$12476$XcRv&)
        (char-ci>? . g$12475$XcRv&)
        (char-ci>=? . g$12474$XcRv&)
        (char-ci=? . g$12473$XcRv&)
        (char-ci<? . g$12472$XcRv&)
        (char-ci<=? . g$12471$XcRv&)
        (char-alphabetic? . g$12470$XcRv&)
        (make-variable-transformer . g$8588$XcRv&)
        (identifier? . g$8981$XcRv&)
        (generate-temporaries . g$8973$XcRv&)
        (free-identifier=? . g$8974$XcRv&)
        (syntax->datum . g$8983$XcRv&)
        (datum->syntax . g$8982$XcRv&)
        (bound-identifier=? . g$8975$XcRv&)
        (record-type-descriptor? . g$12469$XcRv&)
        (record-predicate . g$12468$XcRv&)
        (record-mutator . g$12467$XcRv&)
        (record-constructor . g$12466$XcRv&)
        (record-accessor . g$12465$XcRv&)
        (make-record-type-descriptor . g$12464$XcRv&)
        (make-record-constructor-descriptor . g$12463$XcRv&)
        (record? . g$12462$XcRv&)
        (record-type-uid . g$12461$XcRv&)
        (record-type-sealed? . g$12460$XcRv&)
        (record-type-parent . g$12459$XcRv&)
        (record-type-opaque? . g$12458$XcRv&)
        (record-type-name . g$12457$XcRv&)
        (record-type-generative? . g$12456$XcRv&)
        (record-type-field-names . g$12455$XcRv&)
        (record-rtd . g$12454$XcRv&)
        (record-field-mutable? . g$12453$XcRv&)
        (delete-file . g$6618$XcRv&)
        (file-exists? . g$6617$XcRv&)
        (vector-sort! . g$12452$XcRv&)
        (vector-sort . g$12451$XcRv&)
        (list-sort . g$7124$XcRv&)
        (symbol-hash . g$12450$XcRv&)
        (string-ci-hash . g$12449$XcRv&)
        (string-hash . g$12448$XcRv&)
        (equal-hash . g$12447$XcRv&)
        (hashtable-equivalence-function . g$12446$XcRv&)
        (make-hashtable . g$12445$XcRv&)
        (hashtable-hash-function . g$12444$XcRv&)
        (make-eqv-hashtable . g$6585$XcRv&)
        (make-eq-hashtable . g$6584$XcRv&)
        (hashtable? . g$12443$XcRv&)
        (hashtable-update! . g$6591$XcRv&)
        (hashtable-size . g$6586$XcRv&)
        (hashtable-set! . g$6588$XcRv&)
        (hashtable-ref . g$6587$XcRv&)
        (hashtable-mutable? . g$12442$XcRv&)
        (hashtable-keys . g$12441$XcRv&)
        (hashtable-entries . g$12440$XcRv&)
        (hashtable-delete! . g$6589$XcRv&)
        (hashtable-copy . g$12439$XcRv&)
        (hashtable-contains? . g$6590$XcRv&)
        (hashtable-clear! . g$6592$XcRv&)
        (call-with-output-file . g$12438$XcRv&)
        (call-with-input-file . g$12437$XcRv&)
        (write-char . g$12436$XcRv&)
        (write . g$12435$XcRv&)
        (with-output-to-file . g$12434$XcRv&)
        (with-input-from-file . g$12433$XcRv&)
        (read-char . g$12432$XcRv&)
        (read . g$12431$XcRv&)
        (peek-char . g$12430$XcRv&)
        (open-output-file . g$12429$XcRv&)
        (open-input-file . g$12428$XcRv&)
        (newline . g$12427$XcRv&)
        (display . g$12426$XcRv&)
        (close-output-port . g$12425$XcRv&)
        (close-input-port . g$12424$XcRv&)
        (eof-object? . g$12423$XcRv&)
        (eof-object . g$12422$XcRv&)
        (current-error-port . g$12421$XcRv&)
        (current-output-port . g$12420$XcRv&)
        (current-input-port . g$12419$XcRv&)
        (output-port? . g$12418$XcRv&)
        (input-port? . g$12417$XcRv&)
        (utf-8-codec . g$12416$XcRv&)
        (utf-16-codec . g$12415$XcRv&)
        (transcoder-error-handling-mode . g$12414$XcRv&)
        (transcoder-eol-style . g$12413$XcRv&)
        (transcoder-codec . g$12412$XcRv&)
        (transcoded-port . g$12411$XcRv&)
        (textual-port? . g$12410$XcRv&)
        (string->bytevector . g$12409$XcRv&)
        (standard-output-port . g$12408$XcRv&)
        (standard-input-port . g$12407$XcRv&)
        (standard-error-port . g$12406$XcRv&)
        (set-port-position! . g$12405$XcRv&)
        (put-u8 . g$12404$XcRv&)
        (put-string . g$12403$XcRv&)
        (put-datum . g$12402$XcRv&)
        (put-char . g$12401$XcRv&)
        (put-bytevector . g$12400$XcRv&)
        (port? . g$12399$XcRv&)
        (port-transcoder . g$12398$XcRv&)
        (port-position . g$12397$XcRv&)
        (port-has-set-port-position!? . g$12396$XcRv&)
        (port-has-port-position? . g$12395$XcRv&)
        (port-eof? . g$12394$XcRv&)
        (output-port-buffer-mode . g$12393$XcRv&)
        (open-string-output-port . g$7515$XcRv&)
        (open-string-input-port . g$12392$XcRv&)
        (open-file-output-port . g$12391$XcRv&)
        (open-file-input/output-port . g$12390$XcRv&)
        (open-file-input-port . g$12389$XcRv&)
        (open-bytevector-output-port . g$12388$XcRv&)
        (open-bytevector-input-port . g$12387$XcRv&)
        (native-transcoder . g$12386$XcRv&)
        (native-eol-style . g$12385$XcRv&)
        (make-transcoder . g$12384$XcRv&)
        (latin-1-codec . g$12383$XcRv&)
        (make-i/o-write-error . g$7372$XcRv&)
        (make-i/o-read-error . g$7358$XcRv&)
        (make-i/o-port-error . g$7477$XcRv&)
        (make-i/o-invalid-position-error . g$7387$XcRv&)
        (make-i/o-filename-error . g$7404$XcRv&)
        (make-i/o-file-protection-error . g$7420$XcRv&)
        (make-i/o-file-is-read-only-error . g$7434$XcRv&)
        (make-i/o-file-does-not-exist-error . g$7462$XcRv&)
        (make-i/o-file-already-exists-error . g$7448$XcRv&)
        (make-i/o-error . g$7344$XcRv&)
        (make-i/o-encoding-error . g$7508$XcRv&)
        (make-i/o-decoding-error . g$7493$XcRv&)
        (make-custom-textual-output-port . g$12382$XcRv&)
        (make-custom-textual-input/output-port . g$12381$XcRv&)
        (make-custom-textual-input-port . g$12380$XcRv&)
        (make-custom-binary-output-port . g$12379$XcRv&)
        (make-custom-binary-input/output-port . g$12378$XcRv&)
        (make-custom-binary-input-port . g$12377$XcRv&)
        (make-bytevector . g$12376$XcRv&)
        (lookahead-u8 . g$12375$XcRv&)
        (lookahead-char . g$12374$XcRv&)
        (i/o-write-error? . g$7373$XcRv&)
        (i/o-read-error? . g$7359$XcRv&)
        (i/o-port-error? . g$7479$XcRv&)
        (i/o-invalid-position-error? . g$7389$XcRv&)
        (i/o-error-position . g$7390$XcRv&)
        (i/o-filename-error? . g$7406$XcRv&)
        (i/o-file-protection-error? . g$7421$XcRv&)
        (i/o-file-is-read-only-error? . g$7435$XcRv&)
        (i/o-file-does-not-exist-error? . g$7463$XcRv&)
        (i/o-file-already-exists-error? . g$7449$XcRv&)
        (i/o-error? . g$7345$XcRv&)
        (i/o-error-port . g$7480$XcRv&)
        (i/o-error-filename . g$7407$XcRv&)
        (i/o-encoding-error? . g$7510$XcRv&)
        (i/o-encoding-error-char . g$7511$XcRv&)
        (i/o-decoding-error? . g$7494$XcRv&)
        (get-u8 . g$12373$XcRv&)
        (get-string-n! . g$12372$XcRv&)
        (get-string-n . g$12371$XcRv&)
        (get-string-all . g$12370$XcRv&)
        (get-line . g$12369$XcRv&)
        (get-datum . g$12368$XcRv&)
        (get-char . g$12367$XcRv&)
        (get-bytevector-some . g$12366$XcRv&)
        (get-bytevector-n! . g$12365$XcRv&)
        (get-bytevector-n . g$12364$XcRv&)
        (get-bytevector-all . g$12363$XcRv&)
        (flush-output-port . g$12362$XcRv&)
        (close-port . g$12361$XcRv&)
        (call-with-string-output-port . g$12360$XcRv&)
        (call-with-port . g$12359$XcRv&)
        (call-with-bytevector-output-port . g$12358$XcRv&)
        (bytevector->string . g$12357$XcRv&)
        (buffer-mode? . g$12356$XcRv&)
        (binary-port? . g$12355$XcRv&)
        (exit . g$12351$XcRv&)
        (command-line . g$11914$XcRv&)
        (remove . g$6698$XcRv&)
        (remv . g$6699$XcRv&)
        (remp . g$6684$XcRv&)
        (remq . g$6700$XcRv&)
        (partition . g$6683$XcRv&)
        (memv . g$12346$XcRv&)
        (memq . g$12345$XcRv&)
        (memp . g$6690$XcRv&)
        (member . g$6689$XcRv&)
        (exists . g$6694$XcRv&)
        (for-all . g$6693$XcRv&)
        (fold-right . g$6697$XcRv&)
        (fold-left . g$6696$XcRv&)
        (find . g$6682$XcRv&)
        (filter . g$6685$XcRv&)
        (cons* . g$6695$XcRv&)
        (assv . g$6686$XcRv&)
        (assq . g$12344$XcRv&)
        (assp . g$6688$XcRv&)
        (assoc . g$6687$XcRv&)
        (with-exception-handler . g$12343$XcRv&)
        (raise-continuable . g$12342$XcRv&)
        (raise . g$12341$XcRv&)
        (make-enumeration . g$7564$XcRv&)
        (enum-set=? . g$7571$XcRv&)
        (enum-set-universe . g$7565$XcRv&)
        (enum-set-union . g$7572$XcRv&)
        (enum-set-subset? . g$7570$XcRv&)
        (enum-set-projection . g$7576$XcRv&)
        (enum-set-member? . g$7569$XcRv&)
        (enum-set-intersection . g$7573$XcRv&)
        (enum-set-indexer . g$7566$XcRv&)
        (enum-set-difference . g$7574$XcRv&)
        (enum-set-constructor . g$7567$XcRv&)
        (enum-set-complement . g$7575$XcRv&)
        (enum-set->list . g$7568$XcRv&)
        (who-condition? . g$7022$XcRv&)
        (warning? . g$6933$XcRv&)
        (violation? . g$6975$XcRv&)
        (undefined-violation? . g$7099$XcRv&)
        (syntax-violation? . g$7083$XcRv&)
        (syntax-violation-subform . g$7085$XcRv&)
        (syntax-violation-form . g$7084$XcRv&)
        (syntax-violation . g$8980$XcRv&)
        (simple-conditions . g$12340$XcRv&)
        (serious-condition? . g$6947$XcRv&)
        (non-continuable-violation? . g$7037$XcRv&)
        (message-condition? . g$6918$XcRv&)
        (make-who-condition . g$7020$XcRv&)
        (make-warning . g$6932$XcRv&)
        (make-violation . g$6974$XcRv&)
        (make-undefined-violation . g$7098$XcRv&)
        (make-syntax-violation . g$7080$XcRv&)
        (make-serious-condition . g$6946$XcRv&)
        (make-non-continuable-violation . g$7036$XcRv&)
        (make-message-condition . g$6916$XcRv&)
        (make-lexical-violation . g$7064$XcRv&)
        (make-irritants-condition . g$7003$XcRv&)
        (make-implementation-restriction-violation . g$7050$XcRv&)
        (make-error . g$6960$XcRv&)
        (make-assertion-violation . g$6988$XcRv&)
        (lexical-violation? . g$7065$XcRv&)
        (irritants-condition? . g$7005$XcRv&)
        (implementation-restriction-violation? . g$7051$XcRv&)
        (error? . g$6961$XcRv&)
        (condition-who . g$7023$XcRv&)
        (condition-predicate . g$12339$XcRv&)
        (condition-message . g$6919$XcRv&)
        (condition-irritants . g$7006$XcRv&)
        (condition-accessor . g$12338$XcRv&)
        (condition . g$12337$XcRv&)
        (assertion-violation? . g$6989$XcRv&)
        (condition? . g$12336$XcRv&)
        (utf32->string . g$12335$XcRv&)
        (utf16->string . g$12334$XcRv&)
        (utf8->string . g$12333$XcRv&)
        (uint-list->bytevector . g$12332$XcRv&)
        (u8-list->bytevector . g$12331$XcRv&)
        (string->utf8 . g$12330$XcRv&)
        (string->utf32 . g$12329$XcRv&)
        (string->utf16 . g$12328$XcRv&)
        (sint-list->bytevector . g$12327$XcRv&)
        (native-endianness . g$6774$XcRv&)
        (bytevector? . g$12326$XcRv&)
        (bytevector=? . g$12325$XcRv&)
        (bytevector-uint-set! . g$12324$XcRv&)
        (bytevector-uint-ref . g$12323$XcRv&)
        (bytevector-u8-set! . g$12322$XcRv&)
        (bytevector-u8-ref . g$12321$XcRv&)
        (bytevector-u64-set! . g$6795$XcRv&)
        (bytevector-u64-ref . g$6791$XcRv&)
        (bytevector-u64-native-set! . g$6797$XcRv&)
        (bytevector-u64-native-ref . g$6793$XcRv&)
        (bytevector-u32-set! . g$6787$XcRv&)
        (bytevector-u32-ref . g$6783$XcRv&)
        (bytevector-u32-native-set! . g$6789$XcRv&)
        (bytevector-u32-native-ref . g$6785$XcRv&)
        (bytevector-u16-set! . g$6779$XcRv&)
        (bytevector-u16-ref . g$6775$XcRv&)
        (bytevector-u16-native-set! . g$6781$XcRv&)
        (bytevector-u16-native-ref . g$6777$XcRv&)
        (bytevector-sint-set! . g$12320$XcRv&)
        (bytevector-sint-ref . g$12319$XcRv&)
        (bytevector-s8-set! . g$12318$XcRv&)
        (bytevector-s8-ref . g$12317$XcRv&)
        (bytevector-s64-set! . g$6796$XcRv&)
        (bytevector-s64-ref . g$6792$XcRv&)
        (bytevector-s64-native-set! . g$6798$XcRv&)
        (bytevector-s64-native-ref . g$6794$XcRv&)
        (bytevector-s32-set! . g$6788$XcRv&)
        (bytevector-s32-ref . g$6784$XcRv&)
        (bytevector-s32-native-set! . g$6790$XcRv&)
        (bytevector-s32-native-ref . g$6786$XcRv&)
        (bytevector-s16-set! . g$6780$XcRv&)
        (bytevector-s16-ref . g$6776$XcRv&)
        (bytevector-s16-native-set! . g$6782$XcRv&)
        (bytevector-s16-native-ref . g$6778$XcRv&)
        (bytevector-length . g$12316$XcRv&)
        (bytevector-ieee-single-set! . g$12315$XcRv&)
        (bytevector-ieee-single-ref . g$12314$XcRv&)
        (bytevector-ieee-single-native-set! . g$6801$XcRv&)
        (bytevector-ieee-single-native-ref . g$6799$XcRv&)
        (bytevector-ieee-double-set! . g$12313$XcRv&)
        (bytevector-ieee-double-ref . g$12312$XcRv&)
        (bytevector-ieee-double-native-set! . g$6802$XcRv&)
        (bytevector-ieee-double-native-ref . g$6800$XcRv&)
        (bytevector-fill! . g$12311$XcRv&)
        (bytevector-copy! . g$12310$XcRv&)
        (bytevector-copy . g$12309$XcRv&)
        (bytevector->uint-list . g$12308$XcRv&)
        (bytevector->u8-list . g$12307$XcRv&)
        (bytevector->sint-list . g$12306$XcRv&)
        (no-nans-violation? . g$7330$XcRv&)
        (no-infinities-violation? . g$7316$XcRv&)
        (make-no-nans-violation . g$7329$XcRv&)
        (make-no-infinities-violation . g$7315$XcRv&)
        (real->flonum . g$12305$XcRv&)
        (flzero? . g$12304$XcRv&)
        (fltruncate . g$12303$XcRv&)
        (fltan . g$12302$XcRv&)
        (flsqrt . g$12301$XcRv&)
        (flsin . g$12300$XcRv&)
        (flround . g$12299$XcRv&)
        (flpositive? . g$12298$XcRv&)
        (flonum? . g$12297$XcRv&)
        (flodd? . g$12296$XcRv&)
        (flnumerator . g$12295$XcRv&)
        (flnegative? . g$12294$XcRv&)
        (flnan? . g$12293$XcRv&)
        (flmod0 . g$12292$XcRv&)
        (flmod . g$12291$XcRv&)
        (flmin . g$12290$XcRv&)
        (flmax . g$12289$XcRv&)
        (fllog . g$12288$XcRv&)
        (flinteger? . g$12287$XcRv&)
        (flinfinite? . g$12286$XcRv&)
        (flfloor . g$12285$XcRv&)
        (flfinite? . g$12284$XcRv&)
        (flexpt . g$12283$XcRv&)
        (flexp . g$12282$XcRv&)
        (fleven? . g$12281$XcRv&)
        (fldiv0-and-mod0 . g$12280$XcRv&)
        (fldiv0 . g$12279$XcRv&)
        (fldiv-and-mod . g$12278$XcRv&)
        (fldiv . g$12277$XcRv&)
        (fldenominator . g$12276$XcRv&)
        (flcos . g$12275$XcRv&)
        (flceiling . g$12274$XcRv&)
        (flatan . g$12273$XcRv&)
        (flasin . g$12272$XcRv&)
        (flacos . g$12271$XcRv&)
        (flabs . g$12270$XcRv&)
        (fl>? . g$12269$XcRv&)
        (fl>=? . g$12268$XcRv&)
        (fl=? . g$12267$XcRv&)
        (fl<? . g$12266$XcRv&)
        (fl<=? . g$12265$XcRv&)
        (fl/ . g$12264$XcRv&)
        (fl- . g$12263$XcRv&)
        (fl+ . g$12262$XcRv&)
        (fl* . g$12261$XcRv&)
        (fixnum->flonum . g$12260$XcRv&)
        (fxzero? . g$12259$XcRv&)
        (fxxor . g$12258$XcRv&)
        (fxrotate-bit-field . g$7261$XcRv&)
        (fxreverse-bit-field . g$12257$XcRv&)
        (fxpositive? . g$12256$XcRv&)
        (fxodd? . g$12255$XcRv&)
        (fxnot . g$12254$XcRv&)
        (fxnegative? . g$12253$XcRv&)
        (fxmod0 . g$12252$XcRv&)
        (fxmod . g$12251$XcRv&)
        (fxmin . g$12250$XcRv&)
        (fxmax . g$12249$XcRv&)
        (fxlength . g$12248$XcRv&)
        (fxior . g$12247$XcRv&)
        (fxif . g$7255$XcRv&)
        (fxfirst-bit-set . g$12246$XcRv&)
        (fxeven? . g$12245$XcRv&)
        (fxdiv0-and-mod0 . g$12244$XcRv&)
        (fxdiv0 . g$12243$XcRv&)
        (fxdiv-and-mod . g$12242$XcRv&)
        (fxdiv . g$12241$XcRv&)
        (fxcopy-bit-field . g$7258$XcRv&)
        (fxcopy-bit . g$7256$XcRv&)
        (fxbit-set? . g$12240$XcRv&)
        (fxbit-field . g$7257$XcRv&)
        (fxbit-count . g$12239$XcRv&)
        (fxarithmetic-shift-right . g$7260$XcRv&)
        (fxarithmetic-shift-left . g$7259$XcRv&)
        (fxarithmetic-shift . g$12238$XcRv&)
        (fxand . g$12237$XcRv&)
        (fx>? . g$12236$XcRv&)
        (fx>=? . g$12235$XcRv&)
        (fx=? . g$12234$XcRv&)
        (fx<? . g$12233$XcRv&)
        (fx<=? . g$12232$XcRv&)
        (fx-/carry . g$12231$XcRv&)
        (fx- . g$12230$XcRv&)
        (fx+/carry . g$12229$XcRv&)
        (fx+ . g$12228$XcRv&)
        (fx*/carry . g$12227$XcRv&)
        (fx* . g$12226$XcRv&)
        (greatest-fixnum . g$12225$XcRv&)
        (least-fixnum . g$12224$XcRv&)
        (fixnum-width . g$12223$XcRv&)
        (fixnum? . g$12222$XcRv&)
        (bitwise-rotate-bit-field . g$7209$XcRv&)
        (bitwise-reverse-bit-field . g$7210$XcRv&)
        (bitwise-length . g$12221$XcRv&)
        (bitwise-if . g$7203$XcRv&)
        (bitwise-first-bit-set . g$12220$XcRv&)
        (bitwise-copy-bit-field . g$7206$XcRv&)
        (bitwise-copy-bit . g$7204$XcRv&)
        (bitwise-bit-set? . g$12219$XcRv&)
        (bitwise-bit-field . g$12218$XcRv&)
        (bitwise-bit-count . g$12217$XcRv&)
        (bitwise-xor . g$12216$XcRv&)
        (bitwise-ior . g$12215$XcRv&)
        (bitwise-and . g$12214$XcRv&)
        (bitwise-not . g$12213$XcRv&)
        (bitwise-arithmetic-shift-right . g$7208$XcRv&)
        (bitwise-arithmetic-shift-left . g$7207$XcRv&)
        (bitwise-arithmetic-shift . g$12212$XcRv&)
        (zero? . g$12211$XcRv&)
        (vector? . g$12210$XcRv&)
        (vector-set! . g$12209$XcRv&)
        (vector-ref . g$12208$XcRv&)
        (vector-map . g$12207$XcRv&)
        (vector-length . g$12206$XcRv&)
        (vector-for-each . g$12205$XcRv&)
        (vector-fill! . g$12204$XcRv&)
        (vector->list . g$12203$XcRv&)
        (vector . g$12202$XcRv&)
        (values . g$12201$XcRv&)
        (truncate . g$12200$XcRv&)
        (tan . g$12199$XcRv&)
        (symbol? . g$12198$XcRv&)
        (symbol=? . g$12197$XcRv&)
        (symbol->string . g$12196$XcRv&)
        (substring . g$12195$XcRv&)
        (string? . g$12194$XcRv&)
        (string>? . g$12193$XcRv&)
        (string>=? . g$12192$XcRv&)
        (string=? . g$12191$XcRv&)
        (string<? . g$12190$XcRv&)
        (string<=? . g$12189$XcRv&)
        (string-ref . g$12188$XcRv&)
        (string-length . g$12187$XcRv&)
        (string-for-each . g$12186$XcRv&)
        (string-copy . g$12185$XcRv&)
        (string-append . g$12184$XcRv&)
        (string->symbol . g$12183$XcRv&)
        (string->number . g$12182$XcRv&)
        (string->list . g$12181$XcRv&)
        (string . g$12180$XcRv&)
        (sqrt . g$12179$XcRv&)
        (sin . g$12178$XcRv&)
        (round . g$12177$XcRv&)
        (reverse . g$12176$XcRv&)
        (real? . g$12175$XcRv&)
        (real-valued? . g$12174$XcRv&)
        (real-part . g$12173$XcRv&)
        (rationalize . g$6235$XcRv&)
        (rational? . g$12172$XcRv&)
        (rational-valued? . g$12171$XcRv&)
        (procedure? . g$12170$XcRv&)
        (positive? . g$12169$XcRv&)
        (pair? . g$12168$XcRv&)
        (odd? . g$12167$XcRv&)
        (numerator . g$12166$XcRv&)
        (number? . g$12165$XcRv&)
        (number->string . g$12164$XcRv&)
        (null? . g$12163$XcRv&)
        (not . g$12162$XcRv&)
        (negative? . g$12161$XcRv&)
        (nan? . g$12160$XcRv&)
        (min . g$12159$XcRv&)
        (max . g$12158$XcRv&)
        (map . g$12157$XcRv&)
        (make-vector . g$12156$XcRv&)
        (make-string . g$12155$XcRv&)
        (make-rectangular . g$12154$XcRv&)
        (make-polar . g$12153$XcRv&)
        (magnitude . g$12152$XcRv&)
        (log . g$12151$XcRv&)
        (list? . g$12150$XcRv&)
        (list-tail . g$12149$XcRv&)
        (list-ref . g$12148$XcRv&)
        (list->vector . g$12147$XcRv&)
        (list->string . g$12146$XcRv&)
        (list . g$12145$XcRv&)
        (length . g$12144$XcRv&)
        (lcm . g$12143$XcRv&)
        (integer? . g$12142$XcRv&)
        (integer-valued? . g$12141$XcRv&)
        (integer->char . g$12140$XcRv&)
        (infinite? . g$12139$XcRv&)
        (inexact? . g$12138$XcRv&)
        (inexact . g$12137$XcRv&)
        (imag-part . g$12136$XcRv&)
        (gcd . g$12135$XcRv&)
        (for-each . g$12134$XcRv&)
        (floor . g$12133$XcRv&)
        (finite? . g$12132$XcRv&)
        (expt . g$12131$XcRv&)
        (exp . g$12130$XcRv&)
        (exact? . g$12129$XcRv&)
        (exact-integer-sqrt . g$12128$XcRv&)
        (exact . g$12127$XcRv&)
        (even? . g$12126$XcRv&)
        (error . g$12125$XcRv&)
        (eqv? . g$12124$XcRv&)
        (equal? . g$12123$XcRv&)
        (eq? . g$12122$XcRv&)
        (dynamic-wind . g$12121$XcRv&)
        (div0-and-mod0 . g$12120$XcRv&)
        (mod0 . g$12119$XcRv&)
        (div0 . g$12118$XcRv&)
        (div-and-mod . g$12117$XcRv&)
        (mod . g$12116$XcRv&)
        (div . g$12115$XcRv&)
        (denominator . g$12114$XcRv&)
        (cos . g$12113$XcRv&)
        (cons . g$12112$XcRv&)
        (complex? . g$12111$XcRv&)
        (char? . g$12110$XcRv&)
        (char>? . g$12109$XcRv&)
        (char>=? . g$12108$XcRv&)
        (char=? . g$12107$XcRv&)
        (char<? . g$12106$XcRv&)
        (char<=? . g$12105$XcRv&)
        (char->integer . g$12104$XcRv&)
        (ceiling . g$12103$XcRv&)
        (call-with-values . g$12102$XcRv&)
        (call/cc . g$12101$XcRv&)
        (call-with-current-continuation . g$12100$XcRv&)
        (cddddr . g$6234$XcRv&)
        (cdddar . g$6233$XcRv&)
        (cddadr . g$6232$XcRv&)
        (cddaar . g$6231$XcRv&)
        (cdaddr . g$6230$XcRv&)
        (cdadar . g$6229$XcRv&)
        (cdaadr . g$6228$XcRv&)
        (cdaaar . g$6227$XcRv&)
        (cadddr . g$6226$XcRv&)
        (caddar . g$6225$XcRv&)
        (cadadr . g$6224$XcRv&)
        (cadaar . g$6223$XcRv&)
        (caaddr . g$6222$XcRv&)
        (caadar . g$6221$XcRv&)
        (caaadr . g$6220$XcRv&)
        (caaaar . g$6219$XcRv&)
        (cdddr . g$6218$XcRv&)
        (cddar . g$6217$XcRv&)
        (cdadr . g$6216$XcRv&)
        (cdaar . g$6215$XcRv&)
        (caddr . g$6214$XcRv&)
        (cadar . g$6213$XcRv&)
        (caadr . g$6212$XcRv&)
        (caaar . g$6211$XcRv&)
        (cddr . g$6210$XcRv&)
        (cdar . g$6209$XcRv&)
        (cadr . g$6208$XcRv&)
        (caar . g$6207$XcRv&)
        (cdr . g$12099$XcRv&)
        (car . g$12098$XcRv&)
        (boolean? . g$12097$XcRv&)
        (boolean=? . g$12096$XcRv&)
        (atan . g$12095$XcRv&)
        (assertion-violation . g$12094$XcRv&)
        (asin . g$12093$XcRv&)
        (apply . g$12092$XcRv&)
        (append . g$12091$XcRv&)
        (angle . g$12090$XcRv&)
        (acos . g$12089$XcRv&)
        (abs . g$12088$XcRv&)
        (/ . g$12087$XcRv&)
        (* . g$12086$XcRv&)
        (- . g$12085$XcRv&)
        (+ . g$12084$XcRv&)
        (>= . g$12083$XcRv&)
        (> . g$12082$XcRv&)
        (= . g$12081$XcRv&)
        (<= . g$12080$XcRv&)
        (< . g$12079$XcRv&)
        (&no-nans . g$12052$XcRv&)
        (&no-infinities . g$12051$XcRv&)
        (&i/o-encoding . g$12050$XcRv&)
        (&i/o-decoding . g$12049$XcRv&)
        (&i/o-port . g$12048$XcRv&)
        (&i/o-file-does-not-exist . g$12047$XcRv&)
        (&i/o-file-already-exists . g$12046$XcRv&)
        (&i/o-file-is-read-only . g$12045$XcRv&)
        (&i/o-file-protection . g$12044$XcRv&)
        (&i/o-filename . g$12043$XcRv&)
        (&i/o-invalid-position . g$12042$XcRv&)
        (&i/o-write . g$12041$XcRv&)
        (&i/o-read . g$12040$XcRv&)
        (&i/o . g$12039$XcRv&)
        (&non-continuable . g$12038$XcRv&)
        (&undefined . g$12037$XcRv&)
        (&syntax . g$12036$XcRv&)
        (&lexical . g$12035$XcRv&)
        (&implementation-restriction . g$12034$XcRv&)
        (&who . g$12032$XcRv&)
        (&irritants . g$12031$XcRv&)
        (&assertion . g$12030$XcRv&)
        (&violation . g$12029$XcRv&)
        (&error . g$12028$XcRv&)
        (&serious . g$12027$XcRv&)
        (&warning . g$12026$XcRv&)
        (&message . g$12025$XcRv&)
        (&condition . g$12024$XcRv&)
        (define-condition-type . g$12023$XcRv&)
        (define-enumeration . g$12022$XcRv&)
        (define-record-type . g$12021$XcRv&)
        (parent-rtd . g$12020$XcRv&)
        (nongenerative . g$12019$XcRv&)
        (opaque . g$12018$XcRv&)
        (sealed . g$12017$XcRv&)
        (protocol . g$12016$XcRv&)
        (parent . g$12015$XcRv&)
        (immutable . g$12014$XcRv&)
        (mutable . g$12013$XcRv&)
        (fields . g$12012$XcRv&)
        (error-handling-mode . g$12011$XcRv&)
        (file-options . g$12010$XcRv&)
        (buffer-mode . g$12009$XcRv&)
        (eol-style . g$12008$XcRv&)
        (guard . g$12007$XcRv&)
        (unsyntax-splicing . g$12001$XcRv&)
        (unsyntax . g$12000$XcRv&)
        (unquote-splicing . g$11999$XcRv&)
        (unquote . g$11998$XcRv&)
        (_ . g$11997$XcRv&)
        (else . g$11996$XcRv&)
        (=> . g$11995$XcRv&)
        (... . g$11994$XcRv&)
        (assert . g$11993$XcRv&)
        (endianness . g$11992$XcRv&)
        (or . g$11989$XcRv&)
        (and . g$11988$XcRv&)
        (do . g$11987$XcRv&)
        (cond . g$11986$XcRv&)
        (let* . g$11985$XcRv&)
        (let . g$11984$XcRv&)
        (identifier-syntax . g$11983$XcRv&)
        (with-syntax . g$11982$XcRv&)
        (quasisyntax . g$11981$XcRv&)
        (quasiquote . g$11980$XcRv&)
        (syntax-rules . g$11979$XcRv&)
        (let-values . g$11975$XcRv&)
        (let*-values . g$11974$XcRv&)
        (record-constructor-descriptor . g$11973$XcRv&)
        (record-type-descriptor . g$11972$XcRv&)
        (case . g$11970$XcRv&)
        (unless . g$11968$XcRv&)
        (when . g$11967$XcRv&)
        (if . g$11966$XcRv&)
        (letrec* . g$11965$XcRv&)
        (letrec . g$11964$XcRv&)
        (case-lambda . g$11962$XcRv&)
        (lambda . g$11961$XcRv&)
        (syntax . g$11960$XcRv&)
        (syntax-case . g$11959$XcRv&)
        (quote . g$11958$XcRv&)
        (letrec-syntax . g$11956$XcRv&)
        (let-syntax . g$11955$XcRv&)
        (set! . g$11954$XcRv&)
        (import . g$11953$XcRv&)
        (library . g$11952$XcRv&)
        (begin . g$11951$XcRv&)
        (define-syntax . g$11949$XcRv&)
        (define . g$11948$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12603$XcRv&
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8986$XcRv&)
        (scheme-report-environment . g$8964$XcRv&)
        (quotient . g$7111$XcRv&)
        (null-environment . g$8963$XcRv&)
        (remainder . g$7112$XcRv&)
        (modulo . g$7113$XcRv&)
        (inexact->exact . g$12354$XcRv&)
        (force . g$12353$XcRv&)
        (exact->inexact . g$12352$XcRv&)
        (delay . g$11991$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12604$XcRv&
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11987$XcRv&)
        (unless . g$11968$XcRv&)
        (when . g$11967$XcRv&)
        (case-lambda . g$11962$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12605$XcRv&
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8966$XcRv&) (environment . g$8962$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12606$XcRv&
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12348$XcRv&) (set-car! . g$12347$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12607$XcRv&
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12350$XcRv&) (string-set! . g$12349$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12608$XcRv&
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12351$XcRv&) (command-line . g$11914$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12609$XcRv&
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8588$XcRv&)
        (identifier? . g$8981$XcRv&)
        (generate-temporaries . g$8973$XcRv&)
        (free-identifier=? . g$8974$XcRv&)
        (syntax->datum . g$8983$XcRv&)
        (datum->syntax . g$8982$XcRv&)
        (bound-identifier=? . g$8975$XcRv&)
        (syntax-violation . g$8980$XcRv&)
        (unsyntax-splicing . g$12001$XcRv&)
        (unsyntax . g$12000$XcRv&)
        (_ . g$11997$XcRv&)
        (... . g$11994$XcRv&)
        (with-syntax . g$11982$XcRv&)
        (quasisyntax . g$11981$XcRv&)
        (syntax . g$11960$XcRv&)
        (syntax-case . g$11959$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12610$XcRv&
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6618$XcRv&)
        (file-exists? . g$6617$XcRv&)
        (make-i/o-write-error . g$7372$XcRv&)
        (make-i/o-read-error . g$7358$XcRv&)
        (make-i/o-port-error . g$7477$XcRv&)
        (make-i/o-invalid-position-error . g$7387$XcRv&)
        (make-i/o-filename-error . g$7404$XcRv&)
        (make-i/o-file-protection-error . g$7420$XcRv&)
        (make-i/o-file-is-read-only-error . g$7434$XcRv&)
        (make-i/o-file-does-not-exist-error . g$7462$XcRv&)
        (make-i/o-file-already-exists-error . g$7448$XcRv&)
        (make-i/o-error . g$7344$XcRv&)
        (i/o-write-error? . g$7373$XcRv&)
        (i/o-read-error? . g$7359$XcRv&)
        (i/o-port-error? . g$7479$XcRv&)
        (i/o-invalid-position-error? . g$7389$XcRv&)
        (i/o-error-position . g$7390$XcRv&)
        (i/o-filename-error? . g$7406$XcRv&)
        (i/o-file-protection-error? . g$7421$XcRv&)
        (i/o-file-is-read-only-error? . g$7435$XcRv&)
        (i/o-file-does-not-exist-error? . g$7463$XcRv&)
        (i/o-file-already-exists-error? . g$7449$XcRv&)
        (i/o-error? . g$7345$XcRv&)
        (i/o-error-port . g$7480$XcRv&)
        (i/o-error-filename . g$7407$XcRv&)
        (&i/o-port . g$12048$XcRv&)
        (&i/o-file-does-not-exist . g$12047$XcRv&)
        (&i/o-file-already-exists . g$12046$XcRv&)
        (&i/o-file-is-read-only . g$12045$XcRv&)
        (&i/o-file-protection . g$12044$XcRv&)
        (&i/o-filename . g$12043$XcRv&)
        (&i/o-invalid-position . g$12042$XcRv&)
        (&i/o-write . g$12041$XcRv&)
        (&i/o-read . g$12040$XcRv&)
        (&i/o . g$12039$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12611$XcRv&
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12452$XcRv&)
        (vector-sort . g$12451$XcRv&)
        (list-sort . g$7124$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12612$XcRv&
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12211$XcRv&)
        (vector? . g$12210$XcRv&)
        (vector-set! . g$12209$XcRv&)
        (vector-ref . g$12208$XcRv&)
        (vector-map . g$12207$XcRv&)
        (vector-length . g$12206$XcRv&)
        (vector-for-each . g$12205$XcRv&)
        (vector-fill! . g$12204$XcRv&)
        (vector->list . g$12203$XcRv&)
        (vector . g$12202$XcRv&)
        (values . g$12201$XcRv&)
        (truncate . g$12200$XcRv&)
        (tan . g$12199$XcRv&)
        (symbol? . g$12198$XcRv&)
        (symbol=? . g$12197$XcRv&)
        (symbol->string . g$12196$XcRv&)
        (substring . g$12195$XcRv&)
        (string? . g$12194$XcRv&)
        (string>? . g$12193$XcRv&)
        (string>=? . g$12192$XcRv&)
        (string=? . g$12191$XcRv&)
        (string<? . g$12190$XcRv&)
        (string<=? . g$12189$XcRv&)
        (string-ref . g$12188$XcRv&)
        (string-length . g$12187$XcRv&)
        (string-for-each . g$12186$XcRv&)
        (string-copy . g$12185$XcRv&)
        (string-append . g$12184$XcRv&)
        (string->symbol . g$12183$XcRv&)
        (string->number . g$12182$XcRv&)
        (string->list . g$12181$XcRv&)
        (string . g$12180$XcRv&)
        (sqrt . g$12179$XcRv&)
        (sin . g$12178$XcRv&)
        (round . g$12177$XcRv&)
        (reverse . g$12176$XcRv&)
        (real? . g$12175$XcRv&)
        (real-valued? . g$12174$XcRv&)
        (real-part . g$12173$XcRv&)
        (rationalize . g$6235$XcRv&)
        (rational? . g$12172$XcRv&)
        (rational-valued? . g$12171$XcRv&)
        (procedure? . g$12170$XcRv&)
        (positive? . g$12169$XcRv&)
        (pair? . g$12168$XcRv&)
        (odd? . g$12167$XcRv&)
        (numerator . g$12166$XcRv&)
        (number? . g$12165$XcRv&)
        (number->string . g$12164$XcRv&)
        (null? . g$12163$XcRv&)
        (not . g$12162$XcRv&)
        (negative? . g$12161$XcRv&)
        (nan? . g$12160$XcRv&)
        (min . g$12159$XcRv&)
        (max . g$12158$XcRv&)
        (map . g$12157$XcRv&)
        (make-vector . g$12156$XcRv&)
        (make-string . g$12155$XcRv&)
        (make-rectangular . g$12154$XcRv&)
        (make-polar . g$12153$XcRv&)
        (magnitude . g$12152$XcRv&)
        (log . g$12151$XcRv&)
        (list? . g$12150$XcRv&)
        (list-tail . g$12149$XcRv&)
        (list-ref . g$12148$XcRv&)
        (list->vector . g$12147$XcRv&)
        (list->string . g$12146$XcRv&)
        (list . g$12145$XcRv&)
        (length . g$12144$XcRv&)
        (lcm . g$12143$XcRv&)
        (integer? . g$12142$XcRv&)
        (integer-valued? . g$12141$XcRv&)
        (integer->char . g$12140$XcRv&)
        (infinite? . g$12139$XcRv&)
        (inexact? . g$12138$XcRv&)
        (inexact . g$12137$XcRv&)
        (imag-part . g$12136$XcRv&)
        (gcd . g$12135$XcRv&)
        (for-each . g$12134$XcRv&)
        (floor . g$12133$XcRv&)
        (finite? . g$12132$XcRv&)
        (expt . g$12131$XcRv&)
        (exp . g$12130$XcRv&)
        (exact? . g$12129$XcRv&)
        (exact-integer-sqrt . g$12128$XcRv&)
        (exact . g$12127$XcRv&)
        (even? . g$12126$XcRv&)
        (error . g$12125$XcRv&)
        (eqv? . g$12124$XcRv&)
        (equal? . g$12123$XcRv&)
        (eq? . g$12122$XcRv&)
        (dynamic-wind . g$12121$XcRv&)
        (div0-and-mod0 . g$12120$XcRv&)
        (mod0 . g$12119$XcRv&)
        (div0 . g$12118$XcRv&)
        (div-and-mod . g$12117$XcRv&)
        (mod . g$12116$XcRv&)
        (div . g$12115$XcRv&)
        (denominator . g$12114$XcRv&)
        (cos . g$12113$XcRv&)
        (cons . g$12112$XcRv&)
        (complex? . g$12111$XcRv&)
        (char? . g$12110$XcRv&)
        (char>? . g$12109$XcRv&)
        (char>=? . g$12108$XcRv&)
        (char=? . g$12107$XcRv&)
        (char<? . g$12106$XcRv&)
        (char<=? . g$12105$XcRv&)
        (char->integer . g$12104$XcRv&)
        (ceiling . g$12103$XcRv&)
        (call-with-values . g$12102$XcRv&)
        (call/cc . g$12101$XcRv&)
        (call-with-current-continuation . g$12100$XcRv&)
        (cddddr . g$6234$XcRv&)
        (cdddar . g$6233$XcRv&)
        (cddadr . g$6232$XcRv&)
        (cddaar . g$6231$XcRv&)
        (cdaddr . g$6230$XcRv&)
        (cdadar . g$6229$XcRv&)
        (cdaadr . g$6228$XcRv&)
        (cdaaar . g$6227$XcRv&)
        (cadddr . g$6226$XcRv&)
        (caddar . g$6225$XcRv&)
        (cadadr . g$6224$XcRv&)
        (cadaar . g$6223$XcRv&)
        (caaddr . g$6222$XcRv&)
        (caadar . g$6221$XcRv&)
        (caaadr . g$6220$XcRv&)
        (caaaar . g$6219$XcRv&)
        (cdddr . g$6218$XcRv&)
        (cddar . g$6217$XcRv&)
        (cdadr . g$6216$XcRv&)
        (cdaar . g$6215$XcRv&)
        (caddr . g$6214$XcRv&)
        (cadar . g$6213$XcRv&)
        (caadr . g$6212$XcRv&)
        (caaar . g$6211$XcRv&)
        (cddr . g$6210$XcRv&)
        (cdar . g$6209$XcRv&)
        (cadr . g$6208$XcRv&)
        (caar . g$6207$XcRv&)
        (cdr . g$12099$XcRv&)
        (car . g$12098$XcRv&)
        (boolean? . g$12097$XcRv&)
        (boolean=? . g$12096$XcRv&)
        (atan . g$12095$XcRv&)
        (assertion-violation . g$12094$XcRv&)
        (asin . g$12093$XcRv&)
        (apply . g$12092$XcRv&)
        (append . g$12091$XcRv&)
        (angle . g$12090$XcRv&)
        (acos . g$12089$XcRv&)
        (abs . g$12088$XcRv&)
        (/ . g$12087$XcRv&)
        (* . g$12086$XcRv&)
        (- . g$12085$XcRv&)
        (+ . g$12084$XcRv&)
        (>= . g$12083$XcRv&)
        (> . g$12082$XcRv&)
        (= . g$12081$XcRv&)
        (<= . g$12080$XcRv&)
        (< . g$12079$XcRv&)
        (unquote-splicing . g$11999$XcRv&)
        (unquote . g$11998$XcRv&)
        (_ . g$11997$XcRv&)
        (else . g$11996$XcRv&)
        (=> . g$11995$XcRv&)
        (... . g$11994$XcRv&)
        (assert . g$11993$XcRv&)
        (or . g$11989$XcRv&)
        (and . g$11988$XcRv&)
        (cond . g$11986$XcRv&)
        (let* . g$11985$XcRv&)
        (let . g$11984$XcRv&)
        (identifier-syntax . g$11983$XcRv&)
        (quasiquote . g$11980$XcRv&)
        (syntax-rules . g$11979$XcRv&)
        (let-values . g$11975$XcRv&)
        (let*-values . g$11974$XcRv&)
        (case . g$11970$XcRv&)
        (if . g$11966$XcRv&)
        (letrec* . g$11965$XcRv&)
        (letrec . g$11964$XcRv&)
        (lambda . g$11961$XcRv&)
        (quote . g$11958$XcRv&)
        (letrec-syntax . g$11956$XcRv&)
        (let-syntax . g$11955$XcRv&)
        (set! . g$11954$XcRv&)
        (begin . g$11951$XcRv&)
        (define-syntax . g$11949$XcRv&)
        (define . g$11948$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12613$XcRv&
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6698$XcRv&)
        (remv . g$6699$XcRv&)
        (remp . g$6684$XcRv&)
        (remq . g$6700$XcRv&)
        (partition . g$6683$XcRv&)
        (memv . g$12346$XcRv&)
        (memq . g$12345$XcRv&)
        (memp . g$6690$XcRv&)
        (member . g$6689$XcRv&)
        (exists . g$6694$XcRv&)
        (for-all . g$6693$XcRv&)
        (fold-right . g$6697$XcRv&)
        (fold-left . g$6696$XcRv&)
        (find . g$6682$XcRv&)
        (filter . g$6685$XcRv&)
        (cons* . g$6695$XcRv&)
        (assv . g$6686$XcRv&)
        (assq . g$12344$XcRv&)
        (assp . g$6688$XcRv&)
        (assoc . g$6687$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12614$XcRv&
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$12438$XcRv&)
        (call-with-input-file . g$12437$XcRv&)
        (write-char . g$12436$XcRv&)
        (write . g$12435$XcRv&)
        (with-output-to-file . g$12434$XcRv&)
        (with-input-from-file . g$12433$XcRv&)
        (read-char . g$12432$XcRv&)
        (read . g$12431$XcRv&)
        (peek-char . g$12430$XcRv&)
        (open-output-file . g$12429$XcRv&)
        (open-input-file . g$12428$XcRv&)
        (newline . g$12427$XcRv&)
        (display . g$12426$XcRv&)
        (close-output-port . g$12425$XcRv&)
        (close-input-port . g$12424$XcRv&)
        (eof-object? . g$12423$XcRv&)
        (eof-object . g$12422$XcRv&)
        (current-error-port . g$12421$XcRv&)
        (current-output-port . g$12420$XcRv&)
        (current-input-port . g$12419$XcRv&)
        (output-port? . g$12418$XcRv&)
        (input-port? . g$12417$XcRv&)
        (make-i/o-write-error . g$7372$XcRv&)
        (make-i/o-read-error . g$7358$XcRv&)
        (make-i/o-port-error . g$7477$XcRv&)
        (make-i/o-invalid-position-error . g$7387$XcRv&)
        (make-i/o-filename-error . g$7404$XcRv&)
        (make-i/o-file-protection-error . g$7420$XcRv&)
        (make-i/o-file-is-read-only-error . g$7434$XcRv&)
        (make-i/o-file-does-not-exist-error . g$7462$XcRv&)
        (make-i/o-file-already-exists-error . g$7448$XcRv&)
        (make-i/o-error . g$7344$XcRv&)
        (i/o-write-error? . g$7373$XcRv&)
        (i/o-read-error? . g$7359$XcRv&)
        (i/o-port-error? . g$7479$XcRv&)
        (i/o-invalid-position-error? . g$7389$XcRv&)
        (i/o-error-position . g$7390$XcRv&)
        (i/o-filename-error? . g$7406$XcRv&)
        (i/o-file-protection-error? . g$7421$XcRv&)
        (i/o-file-is-read-only-error? . g$7435$XcRv&)
        (i/o-file-does-not-exist-error? . g$7463$XcRv&)
        (i/o-file-already-exists-error? . g$7449$XcRv&)
        (i/o-error? . g$7345$XcRv&)
        (i/o-error-port . g$7480$XcRv&)
        (i/o-error-filename . g$7407$XcRv&)
        (&i/o-port . g$12048$XcRv&)
        (&i/o-file-does-not-exist . g$12047$XcRv&)
        (&i/o-file-already-exists . g$12046$XcRv&)
        (&i/o-file-is-read-only . g$12045$XcRv&)
        (&i/o-file-protection . g$12044$XcRv&)
        (&i/o-filename . g$12043$XcRv&)
        (&i/o-invalid-position . g$12042$XcRv&)
        (&i/o-write . g$12041$XcRv&)
        (&i/o-read . g$12040$XcRv&)
        (&i/o . g$12039$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12615$XcRv&
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12376$XcRv&)
        (utf32->string . g$12335$XcRv&)
        (utf16->string . g$12334$XcRv&)
        (utf8->string . g$12333$XcRv&)
        (uint-list->bytevector . g$12332$XcRv&)
        (u8-list->bytevector . g$12331$XcRv&)
        (string->utf8 . g$12330$XcRv&)
        (string->utf32 . g$12329$XcRv&)
        (string->utf16 . g$12328$XcRv&)
        (sint-list->bytevector . g$12327$XcRv&)
        (native-endianness . g$6774$XcRv&)
        (bytevector? . g$12326$XcRv&)
        (bytevector=? . g$12325$XcRv&)
        (bytevector-uint-set! . g$12324$XcRv&)
        (bytevector-uint-ref . g$12323$XcRv&)
        (bytevector-u8-set! . g$12322$XcRv&)
        (bytevector-u8-ref . g$12321$XcRv&)
        (bytevector-u64-set! . g$6795$XcRv&)
        (bytevector-u64-ref . g$6791$XcRv&)
        (bytevector-u64-native-set! . g$6797$XcRv&)
        (bytevector-u64-native-ref . g$6793$XcRv&)
        (bytevector-u32-set! . g$6787$XcRv&)
        (bytevector-u32-ref . g$6783$XcRv&)
        (bytevector-u32-native-set! . g$6789$XcRv&)
        (bytevector-u32-native-ref . g$6785$XcRv&)
        (bytevector-u16-set! . g$6779$XcRv&)
        (bytevector-u16-ref . g$6775$XcRv&)
        (bytevector-u16-native-set! . g$6781$XcRv&)
        (bytevector-u16-native-ref . g$6777$XcRv&)
        (bytevector-sint-set! . g$12320$XcRv&)
        (bytevector-sint-ref . g$12319$XcRv&)
        (bytevector-s8-set! . g$12318$XcRv&)
        (bytevector-s8-ref . g$12317$XcRv&)
        (bytevector-s64-set! . g$6796$XcRv&)
        (bytevector-s64-ref . g$6792$XcRv&)
        (bytevector-s64-native-set! . g$6798$XcRv&)
        (bytevector-s64-native-ref . g$6794$XcRv&)
        (bytevector-s32-set! . g$6788$XcRv&)
        (bytevector-s32-ref . g$6784$XcRv&)
        (bytevector-s32-native-set! . g$6790$XcRv&)
        (bytevector-s32-native-ref . g$6786$XcRv&)
        (bytevector-s16-set! . g$6780$XcRv&)
        (bytevector-s16-ref . g$6776$XcRv&)
        (bytevector-s16-native-set! . g$6782$XcRv&)
        (bytevector-s16-native-ref . g$6778$XcRv&)
        (bytevector-length . g$12316$XcRv&)
        (bytevector-ieee-single-set! . g$12315$XcRv&)
        (bytevector-ieee-single-ref . g$12314$XcRv&)
        (bytevector-ieee-single-native-set! . g$6801$XcRv&)
        (bytevector-ieee-single-native-ref . g$6799$XcRv&)
        (bytevector-ieee-double-set! . g$12313$XcRv&)
        (bytevector-ieee-double-ref . g$12312$XcRv&)
        (bytevector-ieee-double-native-set! . g$6802$XcRv&)
        (bytevector-ieee-double-native-ref . g$6800$XcRv&)
        (bytevector-fill! . g$12311$XcRv&)
        (bytevector-copy! . g$12310$XcRv&)
        (bytevector-copy . g$12309$XcRv&)
        (bytevector->uint-list . g$12308$XcRv&)
        (bytevector->u8-list . g$12307$XcRv&)
        (bytevector->sint-list . g$12306$XcRv&)
        (endianness . g$11992$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12616$XcRv&
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12498$XcRv&)
        (string-titlecase . g$12497$XcRv&)
        (string-normalize-nfkd . g$12496$XcRv&)
        (string-normalize-nfkc . g$12495$XcRv&)
        (string-normalize-nfd . g$12494$XcRv&)
        (string-normalize-nfc . g$12493$XcRv&)
        (string-foldcase . g$12492$XcRv&)
        (string-downcase . g$12491$XcRv&)
        (string-ci>? . g$12490$XcRv&)
        (string-ci>=? . g$12489$XcRv&)
        (string-ci=? . g$12488$XcRv&)
        (string-ci<? . g$12487$XcRv&)
        (string-ci<=? . g$12486$XcRv&)
        (char-whitespace? . g$12485$XcRv&)
        (char-upper-case? . g$12484$XcRv&)
        (char-title-case? . g$12483$XcRv&)
        (char-numeric? . g$12482$XcRv&)
        (char-lower-case? . g$12481$XcRv&)
        (char-general-category . g$12480$XcRv&)
        (char-upcase . g$12479$XcRv&)
        (char-titlecase . g$12478$XcRv&)
        (char-foldcase . g$12477$XcRv&)
        (char-downcase . g$12476$XcRv&)
        (char-ci>? . g$12475$XcRv&)
        (char-ci>=? . g$12474$XcRv&)
        (char-ci=? . g$12473$XcRv&)
        (char-ci<? . g$12472$XcRv&)
        (char-ci<=? . g$12471$XcRv&)
        (char-alphabetic? . g$12470$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12617$XcRv&
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12343$XcRv&)
        (raise-continuable . g$12342$XcRv&)
        (raise . g$12341$XcRv&)
        (guard . g$12007$XcRv&)
        (else . g$11996$XcRv&)
        (=> . g$11995$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12618$XcRv&
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7209$XcRv&)
        (bitwise-reverse-bit-field . g$7210$XcRv&)
        (bitwise-length . g$12221$XcRv&)
        (bitwise-if . g$7203$XcRv&)
        (bitwise-first-bit-set . g$12220$XcRv&)
        (bitwise-copy-bit-field . g$7206$XcRv&)
        (bitwise-copy-bit . g$7204$XcRv&)
        (bitwise-bit-set? . g$12219$XcRv&)
        (bitwise-bit-field . g$12218$XcRv&)
        (bitwise-bit-count . g$12217$XcRv&)
        (bitwise-xor . g$12216$XcRv&)
        (bitwise-ior . g$12215$XcRv&)
        (bitwise-and . g$12214$XcRv&)
        (bitwise-not . g$12213$XcRv&)
        (bitwise-arithmetic-shift-right . g$7208$XcRv&)
        (bitwise-arithmetic-shift-left . g$7207$XcRv&)
        (bitwise-arithmetic-shift . g$12212$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12619$XcRv&
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12259$XcRv&)
        (fxxor . g$12258$XcRv&)
        (fxrotate-bit-field . g$7261$XcRv&)
        (fxreverse-bit-field . g$12257$XcRv&)
        (fxpositive? . g$12256$XcRv&)
        (fxodd? . g$12255$XcRv&)
        (fxnot . g$12254$XcRv&)
        (fxnegative? . g$12253$XcRv&)
        (fxmod0 . g$12252$XcRv&)
        (fxmod . g$12251$XcRv&)
        (fxmin . g$12250$XcRv&)
        (fxmax . g$12249$XcRv&)
        (fxlength . g$12248$XcRv&)
        (fxior . g$12247$XcRv&)
        (fxif . g$7255$XcRv&)
        (fxfirst-bit-set . g$12246$XcRv&)
        (fxeven? . g$12245$XcRv&)
        (fxdiv0-and-mod0 . g$12244$XcRv&)
        (fxdiv0 . g$12243$XcRv&)
        (fxdiv-and-mod . g$12242$XcRv&)
        (fxdiv . g$12241$XcRv&)
        (fxcopy-bit-field . g$7258$XcRv&)
        (fxcopy-bit . g$7256$XcRv&)
        (fxbit-set? . g$12240$XcRv&)
        (fxbit-field . g$7257$XcRv&)
        (fxbit-count . g$12239$XcRv&)
        (fxarithmetic-shift-right . g$7260$XcRv&)
        (fxarithmetic-shift-left . g$7259$XcRv&)
        (fxarithmetic-shift . g$12238$XcRv&)
        (fxand . g$12237$XcRv&)
        (fx>? . g$12236$XcRv&)
        (fx>=? . g$12235$XcRv&)
        (fx=? . g$12234$XcRv&)
        (fx<? . g$12233$XcRv&)
        (fx<=? . g$12232$XcRv&)
        (fx-/carry . g$12231$XcRv&)
        (fx- . g$12230$XcRv&)
        (fx+/carry . g$12229$XcRv&)
        (fx+ . g$12228$XcRv&)
        (fx*/carry . g$12227$XcRv&)
        (fx* . g$12226$XcRv&)
        (greatest-fixnum . g$12225$XcRv&)
        (least-fixnum . g$12224$XcRv&)
        (fixnum-width . g$12223$XcRv&)
        (fixnum? . g$12222$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12620$XcRv&
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7330$XcRv&)
        (no-infinities-violation? . g$7316$XcRv&)
        (make-no-nans-violation . g$7329$XcRv&)
        (make-no-infinities-violation . g$7315$XcRv&)
        (real->flonum . g$12305$XcRv&)
        (flzero? . g$12304$XcRv&)
        (fltruncate . g$12303$XcRv&)
        (fltan . g$12302$XcRv&)
        (flsqrt . g$12301$XcRv&)
        (flsin . g$12300$XcRv&)
        (flround . g$12299$XcRv&)
        (flpositive? . g$12298$XcRv&)
        (flonum? . g$12297$XcRv&)
        (flodd? . g$12296$XcRv&)
        (flnumerator . g$12295$XcRv&)
        (flnegative? . g$12294$XcRv&)
        (flnan? . g$12293$XcRv&)
        (flmod0 . g$12292$XcRv&)
        (flmod . g$12291$XcRv&)
        (flmin . g$12290$XcRv&)
        (flmax . g$12289$XcRv&)
        (fllog . g$12288$XcRv&)
        (flinteger? . g$12287$XcRv&)
        (flinfinite? . g$12286$XcRv&)
        (flfloor . g$12285$XcRv&)
        (flfinite? . g$12284$XcRv&)
        (flexpt . g$12283$XcRv&)
        (flexp . g$12282$XcRv&)
        (fleven? . g$12281$XcRv&)
        (fldiv0-and-mod0 . g$12280$XcRv&)
        (fldiv0 . g$12279$XcRv&)
        (fldiv-and-mod . g$12278$XcRv&)
        (fldiv . g$12277$XcRv&)
        (fldenominator . g$12276$XcRv&)
        (flcos . g$12275$XcRv&)
        (flceiling . g$12274$XcRv&)
        (flatan . g$12273$XcRv&)
        (flasin . g$12272$XcRv&)
        (flacos . g$12271$XcRv&)
        (flabs . g$12270$XcRv&)
        (fl>? . g$12269$XcRv&)
        (fl>=? . g$12268$XcRv&)
        (fl=? . g$12267$XcRv&)
        (fl<? . g$12266$XcRv&)
        (fl<=? . g$12265$XcRv&)
        (fl/ . g$12264$XcRv&)
        (fl- . g$12263$XcRv&)
        (fl+ . g$12262$XcRv&)
        (fl* . g$12261$XcRv&)
        (fixnum->flonum . g$12260$XcRv&)
        (&no-nans . g$12052$XcRv&)
        (&no-infinities . g$12051$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12621$XcRv&
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12450$XcRv&)
        (string-ci-hash . g$12449$XcRv&)
        (string-hash . g$12448$XcRv&)
        (equal-hash . g$12447$XcRv&)
        (hashtable-equivalence-function . g$12446$XcRv&)
        (make-hashtable . g$12445$XcRv&)
        (hashtable-hash-function . g$12444$XcRv&)
        (make-eqv-hashtable . g$6585$XcRv&)
        (make-eq-hashtable . g$6584$XcRv&)
        (hashtable? . g$12443$XcRv&)
        (hashtable-update! . g$6591$XcRv&)
        (hashtable-size . g$6586$XcRv&)
        (hashtable-set! . g$6588$XcRv&)
        (hashtable-ref . g$6587$XcRv&)
        (hashtable-mutable? . g$12442$XcRv&)
        (hashtable-keys . g$12441$XcRv&)
        (hashtable-entries . g$12440$XcRv&)
        (hashtable-delete! . g$6589$XcRv&)
        (hashtable-copy . g$12439$XcRv&)
        (hashtable-contains? . g$6590$XcRv&)
        (hashtable-clear! . g$6592$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12622$XcRv&
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12423$XcRv&)
        (eof-object . g$12422$XcRv&)
        (current-error-port . g$12421$XcRv&)
        (current-output-port . g$12420$XcRv&)
        (current-input-port . g$12419$XcRv&)
        (output-port? . g$12418$XcRv&)
        (input-port? . g$12417$XcRv&)
        (utf-8-codec . g$12416$XcRv&)
        (utf-16-codec . g$12415$XcRv&)
        (transcoder-error-handling-mode . g$12414$XcRv&)
        (transcoder-eol-style . g$12413$XcRv&)
        (transcoder-codec . g$12412$XcRv&)
        (transcoded-port . g$12411$XcRv&)
        (textual-port? . g$12410$XcRv&)
        (string->bytevector . g$12409$XcRv&)
        (standard-output-port . g$12408$XcRv&)
        (standard-input-port . g$12407$XcRv&)
        (standard-error-port . g$12406$XcRv&)
        (set-port-position! . g$12405$XcRv&)
        (put-u8 . g$12404$XcRv&)
        (put-string . g$12403$XcRv&)
        (put-datum . g$12402$XcRv&)
        (put-char . g$12401$XcRv&)
        (put-bytevector . g$12400$XcRv&)
        (port? . g$12399$XcRv&)
        (port-transcoder . g$12398$XcRv&)
        (port-position . g$12397$XcRv&)
        (port-has-set-port-position!? . g$12396$XcRv&)
        (port-has-port-position? . g$12395$XcRv&)
        (port-eof? . g$12394$XcRv&)
        (output-port-buffer-mode . g$12393$XcRv&)
        (open-string-output-port . g$7515$XcRv&)
        (open-string-input-port . g$12392$XcRv&)
        (open-file-output-port . g$12391$XcRv&)
        (open-file-input/output-port . g$12390$XcRv&)
        (open-file-input-port . g$12389$XcRv&)
        (open-bytevector-output-port . g$12388$XcRv&)
        (open-bytevector-input-port . g$12387$XcRv&)
        (native-transcoder . g$12386$XcRv&)
        (native-eol-style . g$12385$XcRv&)
        (make-transcoder . g$12384$XcRv&)
        (latin-1-codec . g$12383$XcRv&)
        (make-i/o-write-error . g$7372$XcRv&)
        (make-i/o-read-error . g$7358$XcRv&)
        (make-i/o-port-error . g$7477$XcRv&)
        (make-i/o-invalid-position-error . g$7387$XcRv&)
        (make-i/o-filename-error . g$7404$XcRv&)
        (make-i/o-file-protection-error . g$7420$XcRv&)
        (make-i/o-file-is-read-only-error . g$7434$XcRv&)
        (make-i/o-file-does-not-exist-error . g$7462$XcRv&)
        (make-i/o-file-already-exists-error . g$7448$XcRv&)
        (make-i/o-error . g$7344$XcRv&)
        (make-i/o-encoding-error . g$7508$XcRv&)
        (make-i/o-decoding-error . g$7493$XcRv&)
        (make-custom-textual-output-port . g$12382$XcRv&)
        (make-custom-textual-input/output-port . g$12381$XcRv&)
        (make-custom-textual-input-port . g$12380$XcRv&)
        (make-custom-binary-output-port . g$12379$XcRv&)
        (make-custom-binary-input/output-port . g$12378$XcRv&)
        (make-custom-binary-input-port . g$12377$XcRv&)
        (lookahead-u8 . g$12375$XcRv&)
        (lookahead-char . g$12374$XcRv&)
        (i/o-write-error? . g$7373$XcRv&)
        (i/o-read-error? . g$7359$XcRv&)
        (i/o-port-error? . g$7479$XcRv&)
        (i/o-invalid-position-error? . g$7389$XcRv&)
        (i/o-error-position . g$7390$XcRv&)
        (i/o-filename-error? . g$7406$XcRv&)
        (i/o-file-protection-error? . g$7421$XcRv&)
        (i/o-file-is-read-only-error? . g$7435$XcRv&)
        (i/o-file-does-not-exist-error? . g$7463$XcRv&)
        (i/o-file-already-exists-error? . g$7449$XcRv&)
        (i/o-error? . g$7345$XcRv&)
        (i/o-error-port . g$7480$XcRv&)
        (i/o-error-filename . g$7407$XcRv&)
        (i/o-encoding-error? . g$7510$XcRv&)
        (i/o-encoding-error-char . g$7511$XcRv&)
        (i/o-decoding-error? . g$7494$XcRv&)
        (get-u8 . g$12373$XcRv&)
        (get-string-n! . g$12372$XcRv&)
        (get-string-n . g$12371$XcRv&)
        (get-string-all . g$12370$XcRv&)
        (get-line . g$12369$XcRv&)
        (get-datum . g$12368$XcRv&)
        (get-char . g$12367$XcRv&)
        (get-bytevector-some . g$12366$XcRv&)
        (get-bytevector-n! . g$12365$XcRv&)
        (get-bytevector-n . g$12364$XcRv&)
        (get-bytevector-all . g$12363$XcRv&)
        (flush-output-port . g$12362$XcRv&)
        (close-port . g$12361$XcRv&)
        (call-with-string-output-port . g$12360$XcRv&)
        (call-with-port . g$12359$XcRv&)
        (call-with-bytevector-output-port . g$12358$XcRv&)
        (bytevector->string . g$12357$XcRv&)
        (buffer-mode? . g$12356$XcRv&)
        (binary-port? . g$12355$XcRv&)
        (&i/o-encoding . g$12050$XcRv&)
        (&i/o-decoding . g$12049$XcRv&)
        (&i/o-port . g$12048$XcRv&)
        (&i/o-file-does-not-exist . g$12047$XcRv&)
        (&i/o-file-already-exists . g$12046$XcRv&)
        (&i/o-file-is-read-only . g$12045$XcRv&)
        (&i/o-file-protection . g$12044$XcRv&)
        (&i/o-filename . g$12043$XcRv&)
        (&i/o-invalid-position . g$12042$XcRv&)
        (&i/o-write . g$12041$XcRv&)
        (&i/o-read . g$12040$XcRv&)
        (&i/o . g$12039$XcRv&)
        (error-handling-mode . g$12011$XcRv&)
        (file-options . g$12010$XcRv&)
        (buffer-mode . g$12009$XcRv&)
        (eol-style . g$12008$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12623$XcRv&
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7564$XcRv&)
        (enum-set=? . g$7571$XcRv&)
        (enum-set-universe . g$7565$XcRv&)
        (enum-set-union . g$7572$XcRv&)
        (enum-set-subset? . g$7570$XcRv&)
        (enum-set-projection . g$7576$XcRv&)
        (enum-set-member? . g$7569$XcRv&)
        (enum-set-intersection . g$7573$XcRv&)
        (enum-set-indexer . g$7566$XcRv&)
        (enum-set-difference . g$7574$XcRv&)
        (enum-set-constructor . g$7567$XcRv&)
        (enum-set-complement . g$7575$XcRv&)
        (enum-set->list . g$7568$XcRv&)
        (define-enumeration . g$12022$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12624$XcRv&
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$7022$XcRv&)
        (warning? . g$6933$XcRv&)
        (violation? . g$6975$XcRv&)
        (undefined-violation? . g$7099$XcRv&)
        (syntax-violation? . g$7083$XcRv&)
        (syntax-violation-subform . g$7085$XcRv&)
        (syntax-violation-form . g$7084$XcRv&)
        (syntax-violation . g$8980$XcRv&)
        (simple-conditions . g$12340$XcRv&)
        (serious-condition? . g$6947$XcRv&)
        (non-continuable-violation? . g$7037$XcRv&)
        (message-condition? . g$6918$XcRv&)
        (make-who-condition . g$7020$XcRv&)
        (make-warning . g$6932$XcRv&)
        (make-violation . g$6974$XcRv&)
        (make-undefined-violation . g$7098$XcRv&)
        (make-syntax-violation . g$7080$XcRv&)
        (make-serious-condition . g$6946$XcRv&)
        (make-non-continuable-violation . g$7036$XcRv&)
        (make-message-condition . g$6916$XcRv&)
        (make-lexical-violation . g$7064$XcRv&)
        (make-irritants-condition . g$7003$XcRv&)
        (make-implementation-restriction-violation . g$7050$XcRv&)
        (make-error . g$6960$XcRv&)
        (make-assertion-violation . g$6988$XcRv&)
        (lexical-violation? . g$7065$XcRv&)
        (irritants-condition? . g$7005$XcRv&)
        (implementation-restriction-violation? . g$7051$XcRv&)
        (error? . g$6961$XcRv&)
        (condition-who . g$7023$XcRv&)
        (condition-predicate . g$12339$XcRv&)
        (condition-message . g$6919$XcRv&)
        (condition-irritants . g$7006$XcRv&)
        (condition-accessor . g$12338$XcRv&)
        (condition . g$12337$XcRv&)
        (assertion-violation? . g$6989$XcRv&)
        (condition? . g$12336$XcRv&)
        (&non-continuable . g$12038$XcRv&)
        (&undefined . g$12037$XcRv&)
        (&syntax . g$12036$XcRv&)
        (&lexical . g$12035$XcRv&)
        (&implementation-restriction . g$12034$XcRv&)
        (&who . g$12032$XcRv&)
        (&irritants . g$12031$XcRv&)
        (&assertion . g$12030$XcRv&)
        (&violation . g$12029$XcRv&)
        (&error . g$12028$XcRv&)
        (&serious . g$12027$XcRv&)
        (&warning . g$12026$XcRv&)
        (&message . g$12025$XcRv&)
        (&condition . g$12024$XcRv&)
        (define-condition-type . g$12023$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12625$XcRv&
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12462$XcRv&)
        (record-type-uid . g$12461$XcRv&)
        (record-type-sealed? . g$12460$XcRv&)
        (record-type-parent . g$12459$XcRv&)
        (record-type-opaque? . g$12458$XcRv&)
        (record-type-name . g$12457$XcRv&)
        (record-type-generative? . g$12456$XcRv&)
        (record-type-field-names . g$12455$XcRv&)
        (record-rtd . g$12454$XcRv&)
        (record-field-mutable? . g$12453$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12626$XcRv&
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12469$XcRv&)
        (record-predicate . g$12468$XcRv&)
        (record-mutator . g$12467$XcRv&)
        (record-constructor . g$12466$XcRv&)
        (record-accessor . g$12465$XcRv&)
        (make-record-type-descriptor . g$12464$XcRv&)
        (make-record-constructor-descriptor . g$12463$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12627$XcRv&
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12021$XcRv&)
        (parent-rtd . g$12020$XcRv&)
        (nongenerative . g$12019$XcRv&)
        (opaque . g$12018$XcRv&)
        (sealed . g$12017$XcRv&)
        (protocol . g$12016$XcRv&)
        (parent . g$12015$XcRv&)
        (immutable . g$12014$XcRv&)
        (mutable . g$12013$XcRv&)
        (fields . g$12012$XcRv&)
        (record-constructor-descriptor . g$11973$XcRv&)
        (record-type-descriptor . g$11972$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7557$XcRv&
      'g$12628$XcRv&
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8858$XcRv&)
        (&no-nans-rcd . g$12592$XcRv&)
        (&no-nans-rtd . g$12591$XcRv&)
        (&no-infinities-rcd . g$12590$XcRv&)
        (&no-infinities-rtd . g$12589$XcRv&)
        (&i/o-encoding-rcd . g$12588$XcRv&)
        (&i/o-encoding-rtd . g$12587$XcRv&)
        (&i/o-decoding-rcd . g$12586$XcRv&)
        (&i/o-decoding-rtd . g$12585$XcRv&)
        (&i/o-port-rcd . g$12584$XcRv&)
        (&i/o-port-rtd . g$12583$XcRv&)
        (&i/o-file-does-not-exist-rcd . g$12582$XcRv&)
        (&i/o-file-does-not-exist-rtd . g$12581$XcRv&)
        (&i/o-file-already-exists-rcd . g$12580$XcRv&)
        (&i/o-file-already-exists-rtd . g$12579$XcRv&)
        (&i/o-file-is-read-only-rcd . g$12578$XcRv&)
        (&i/o-file-is-read-only-rtd . g$12577$XcRv&)
        (&i/o-file-protection-rcd . g$12576$XcRv&)
        (&i/o-file-protection-rtd . g$12575$XcRv&)
        (&i/o-filename-rcd . g$12574$XcRv&)
        (&i/o-filename-rtd . g$12573$XcRv&)
        (&i/o-invalid-position-rcd . g$12572$XcRv&)
        (&i/o-invalid-position-rtd . g$12571$XcRv&)
        (&i/o-write-rcd . g$12570$XcRv&)
        (&i/o-write-rtd . g$12569$XcRv&)
        (&i/o-read-rcd . g$12568$XcRv&)
        (&i/o-read-rtd . g$12567$XcRv&)
        (&i/o-rcd . g$12566$XcRv&)
        (&i/o-rtd . g$12565$XcRv&)
        (&undefined-rcd . g$12564$XcRv&)
        (&undefined-rtd . g$12563$XcRv&)
        (&syntax-rcd . g$12562$XcRv&)
        (&syntax-rtd . g$12561$XcRv&)
        (&lexical-rcd . g$12560$XcRv&)
        (&lexical-rtd . g$12559$XcRv&)
        (&implementation-restriction-rcd . g$12558$XcRv&)
        (&implementation-restriction-rtd . g$12557$XcRv&)
        (&non-continuable-rcd . g$12556$XcRv&)
        (&non-continuable-rtd . g$12555$XcRv&)
        (&who-rcd . g$12554$XcRv&)
        (&who-rtd . g$12553$XcRv&)
        (&irritants-rcd . g$12552$XcRv&)
        (&irritants-rtd . g$12551$XcRv&)
        (&assertion-rcd . g$12550$XcRv&)
        (&assertion-rtd . g$12549$XcRv&)
        (&violation-rcd . g$12548$XcRv&)
        (&violation-rtd . g$12547$XcRv&)
        (&error-rcd . g$12546$XcRv&)
        (&error-rtd . g$12545$XcRv&)
        (&serious-rcd . g$12544$XcRv&)
        (&serious-rtd . g$12543$XcRv&)
        (&warning-rcd . g$12542$XcRv&)
        (&warning-rtd . g$12541$XcRv&)
        (&message-rcd . g$12540$XcRv&)
        (&message-rtd . g$12539$XcRv&)
        (&condition-rcd . g$12538$XcRv&)
        (&condition-rtd . g$12537$XcRv&)
        (library-letrec* . g$12536$XcRv&)
        (annotation-stripped . g$12535$XcRv&)
        (annotation-source . g$12534$XcRv&)
        (annotation-expression . g$12533$XcRv&)
        (annotation? . g$12532$XcRv&)
        (read-annotated . g$12531$XcRv&)
        (tanh . g$12530$XcRv&)
        (cosh . g$12529$XcRv&)
        (sinh . g$12528$XcRv&)
        (make-guid . g$12527$XcRv&)
        (unspecified? . g$12526$XcRv&)
        (make-trace . g$12525$XcRv&)
        (make-list . g$12524$XcRv&)
        (last-pair . g$12523$XcRv&)
        (load-r5rs . g$12522$XcRv&)
        (license . g$12521$XcRv&)
        (stacktrace . g$12520$XcRv&)
        (ironscheme-build . g$11918$XcRv&)
        (define-clr-class-internal . g$12519$XcRv&)
        (clr-field-set!-internal . g$12518$XcRv&)
        (clr-field-get-internal . g$12517$XcRv&)
        (clr-cast-internal . g$12516$XcRv&)
        (clr-call-internal . g$12515$XcRv&)
        (clr-new-internal . g$12514$XcRv&)
        (clr-new-array-internal . g$12513$XcRv&)
        (clr-is-internal . g$12512$XcRv&)
        (clr-reference-internal . g$12511$XcRv&)
        (clr-using-internal . g$12510$XcRv&)
        (clr-clear-usings-internal . g$12509$XcRv&)
        (syntax-error . g$8977$XcRv&)
        (syntax-dispatch . g$8853$XcRv&)
        (compile-core . g$12508$XcRv&)
        (eval-core . g$12507$XcRv&)
        (set-symbol-value! . g$12506$XcRv&)
        (symbol-value . g$12505$XcRv&)
        (ungensym . g$12504$XcRv&)
        (gensym . g$12503$XcRv&)
        (void . g$12502$XcRv&)
        (load-serialized-library . g$12501$XcRv&)
        (serialize-library . g$12500$XcRv&)
        (compile-system-libraries . g$11920$XcRv&)
        (compile->closure . g$11922$XcRv&)
        (compile . g$11921$XcRv&)
        (load . g$11917$XcRv&)
        (interaction-environment . g$8986$XcRv&)
        (char-ready? . g$12499$XcRv&)
        (string-upcase . g$12498$XcRv&)
        (string-titlecase . g$12497$XcRv&)
        (string-normalize-nfkd . g$12496$XcRv&)
        (string-normalize-nfkc . g$12495$XcRv&)
        (string-normalize-nfd . g$12494$XcRv&)
        (string-normalize-nfc . g$12493$XcRv&)
        (string-foldcase . g$12492$XcRv&)
        (string-downcase . g$12491$XcRv&)
        (string-ci>? . g$12490$XcRv&)
        (string-ci>=? . g$12489$XcRv&)
        (string-ci=? . g$12488$XcRv&)
        (string-ci<? . g$12487$XcRv&)
        (string-ci<=? . g$12486$XcRv&)
        (char-whitespace? . g$12485$XcRv&)
        (char-upper-case? . g$12484$XcRv&)
        (char-title-case? . g$12483$XcRv&)
        (char-numeric? . g$12482$XcRv&)
        (char-lower-case? . g$12481$XcRv&)
        (char-general-category . g$12480$XcRv&)
        (char-upcase . g$12479$XcRv&)
        (char-titlecase . g$12478$XcRv&)
        (char-foldcase . g$12477$XcRv&)
        (char-downcase . g$12476$XcRv&)
        (char-ci>? . g$12475$XcRv&)
        (char-ci>=? . g$12474$XcRv&)
        (char-ci=? . g$12473$XcRv&)
        (char-ci<? . g$12472$XcRv&)
        (char-ci<=? . g$12471$XcRv&)
        (char-alphabetic? . g$12470$XcRv&)
        (variable-transformer-procedure . g$8590$XcRv&)
        (variable-transformer? . g$8589$XcRv&)
        (make-variable-transformer . g$8588$XcRv&)
        (identifier? . g$8981$XcRv&)
        (generate-temporaries . g$8973$XcRv&)
        (free-identifier=? . g$8974$XcRv&)
        (syntax->datum . g$8983$XcRv&)
        (datum->syntax . g$8982$XcRv&)
        (bound-identifier=? . g$8975$XcRv&)
        (record-type-descriptor? . g$12469$XcRv&)
        (record-predicate . g$12468$XcRv&)
        (record-mutator . g$12467$XcRv&)
        (record-constructor . g$12466$XcRv&)
        (record-accessor . g$12465$XcRv&)
        (make-record-type-descriptor . g$12464$XcRv&)
        (make-record-constructor-descriptor . g$12463$XcRv&)
        (record? . g$12462$XcRv&)
        (record-type-uid . g$12461$XcRv&)
        (record-type-sealed? . g$12460$XcRv&)
        (record-type-parent . g$12459$XcRv&)
        (record-type-opaque? . g$12458$XcRv&)
        (record-type-name . g$12457$XcRv&)
        (record-type-generative? . g$12456$XcRv&)
        (record-type-field-names . g$12455$XcRv&)
        (record-rtd . g$12454$XcRv&)
        (record-field-mutable? . g$12453$XcRv&)
        (delete-file . g$6618$XcRv&)
        (file-exists? . g$6617$XcRv&)
        (vector-sort! . g$12452$XcRv&)
        (vector-sort . g$12451$XcRv&)
        (list-sort . g$7124$XcRv&)
        (symbol-hash . g$12450$XcRv&)
        (string-ci-hash . g$12449$XcRv&)
        (string-hash . g$12448$XcRv&)
        (equal-hash . g$12447$XcRv&)
        (hashtable-equivalence-function . g$12446$XcRv&)
        (make-hashtable . g$12445$XcRv&)
        (hashtable-hash-function . g$12444$XcRv&)
        (make-eqv-hashtable . g$6585$XcRv&)
        (make-eq-hashtable . g$6584$XcRv&)
        (hashtable? . g$12443$XcRv&)
        (hashtable-update! . g$6591$XcRv&)
        (hashtable-size . g$6586$XcRv&)
        (hashtable-set! . g$6588$XcRv&)
        (hashtable-ref . g$6587$XcRv&)
        (hashtable-mutable? . g$12442$XcRv&)
        (hashtable-keys . g$12441$XcRv&)
        (hashtable-entries . g$12440$XcRv&)
        (hashtable-delete! . g$6589$XcRv&)
        (hashtable-copy . g$12439$XcRv&)
        (hashtable-contains? . g$6590$XcRv&)
        (hashtable-clear! . g$6592$XcRv&)
        (call-with-output-file . g$12438$XcRv&)
        (call-with-input-file . g$12437$XcRv&)
        (write-char . g$12436$XcRv&)
        (write . g$12435$XcRv&)
        (with-output-to-file . g$12434$XcRv&)
        (with-input-from-file . g$12433$XcRv&)
        (read-char . g$12432$XcRv&)
        (read . g$12431$XcRv&)
        (peek-char . g$12430$XcRv&)
        (open-output-file . g$12429$XcRv&)
        (open-input-file . g$12428$XcRv&)
        (newline . g$12427$XcRv&)
        (display . g$12426$XcRv&)
        (close-output-port . g$12425$XcRv&)
        (close-input-port . g$12424$XcRv&)
        (eof-object? . g$12423$XcRv&)
        (eof-object . g$12422$XcRv&)
        (current-error-port . g$12421$XcRv&)
        (current-output-port . g$12420$XcRv&)
        (current-input-port . g$12419$XcRv&)
        (output-port? . g$12418$XcRv&)
        (input-port? . g$12417$XcRv&)
        (utf-8-codec . g$12416$XcRv&)
        (utf-16-codec . g$12415$XcRv&)
        (transcoder-error-handling-mode . g$12414$XcRv&)
        (transcoder-eol-style . g$12413$XcRv&)
        (transcoder-codec . g$12412$XcRv&)
        (transcoded-port . g$12411$XcRv&)
        (textual-port? . g$12410$XcRv&)
        (string->bytevector . g$12409$XcRv&)
        (standard-output-port . g$12408$XcRv&)
        (standard-input-port . g$12407$XcRv&)
        (standard-error-port . g$12406$XcRv&)
        (set-port-position! . g$12405$XcRv&)
        (put-u8 . g$12404$XcRv&)
        (put-string . g$12403$XcRv&)
        (put-datum . g$12402$XcRv&)
        (put-char . g$12401$XcRv&)
        (put-bytevector . g$12400$XcRv&)
        (port? . g$12399$XcRv&)
        (port-transcoder . g$12398$XcRv&)
        (port-position . g$12397$XcRv&)
        (port-has-set-port-position!? . g$12396$XcRv&)
        (port-has-port-position? . g$12395$XcRv&)
        (port-eof? . g$12394$XcRv&)
        (output-port-buffer-mode . g$12393$XcRv&)
        (open-string-output-port . g$7515$XcRv&)
        (open-string-input-port . g$12392$XcRv&)
        (open-file-output-port . g$12391$XcRv&)
        (open-file-input/output-port . g$12390$XcRv&)
        (open-file-input-port . g$12389$XcRv&)
        (open-bytevector-output-port . g$12388$XcRv&)
        (open-bytevector-input-port . g$12387$XcRv&)
        (native-transcoder . g$12386$XcRv&)
        (native-eol-style . g$12385$XcRv&)
        (make-transcoder . g$12384$XcRv&)
        (latin-1-codec . g$12383$XcRv&)
        (make-i/o-write-error . g$7372$XcRv&)
        (make-i/o-read-error . g$7358$XcRv&)
        (make-i/o-port-error . g$7477$XcRv&)
        (make-i/o-invalid-position-error . g$7387$XcRv&)
        (make-i/o-filename-error . g$7404$XcRv&)
        (make-i/o-file-protection-error . g$7420$XcRv&)
        (make-i/o-file-is-read-only-error . g$7434$XcRv&)
        (make-i/o-file-does-not-exist-error . g$7462$XcRv&)
        (make-i/o-file-already-exists-error . g$7448$XcRv&)
        (make-i/o-error . g$7344$XcRv&)
        (make-i/o-encoding-error . g$7508$XcRv&)
        (make-i/o-decoding-error . g$7493$XcRv&)
        (make-custom-textual-output-port . g$12382$XcRv&)
        (make-custom-textual-input/output-port . g$12381$XcRv&)
        (make-custom-textual-input-port . g$12380$XcRv&)
        (make-custom-binary-output-port . g$12379$XcRv&)
        (make-custom-binary-input/output-port . g$12378$XcRv&)
        (make-custom-binary-input-port . g$12377$XcRv&)
        (make-bytevector . g$12376$XcRv&)
        (lookahead-u8 . g$12375$XcRv&)
        (lookahead-char . g$12374$XcRv&)
        (i/o-write-error? . g$7373$XcRv&)
        (i/o-read-error? . g$7359$XcRv&)
        (i/o-port-error? . g$7479$XcRv&)
        (i/o-invalid-position-error? . g$7389$XcRv&)
        (i/o-error-position . g$7390$XcRv&)
        (i/o-filename-error? . g$7406$XcRv&)
        (i/o-file-protection-error? . g$7421$XcRv&)
        (i/o-file-is-read-only-error? . g$7435$XcRv&)
        (i/o-file-does-not-exist-error? . g$7463$XcRv&)
        (i/o-file-already-exists-error? . g$7449$XcRv&)
        (i/o-error? . g$7345$XcRv&)
        (i/o-error-port . g$7480$XcRv&)
        (i/o-error-filename . g$7407$XcRv&)
        (i/o-encoding-error? . g$7510$XcRv&)
        (i/o-encoding-error-char . g$7511$XcRv&)
        (i/o-decoding-error? . g$7494$XcRv&)
        (get-u8 . g$12373$XcRv&)
        (get-string-n! . g$12372$XcRv&)
        (get-string-n . g$12371$XcRv&)
        (get-string-all . g$12370$XcRv&)
        (get-line . g$12369$XcRv&)
        (get-datum . g$12368$XcRv&)
        (get-char . g$12367$XcRv&)
        (get-bytevector-some . g$12366$XcRv&)
        (get-bytevector-n! . g$12365$XcRv&)
        (get-bytevector-n . g$12364$XcRv&)
        (get-bytevector-all . g$12363$XcRv&)
        (flush-output-port . g$12362$XcRv&)
        (close-port . g$12361$XcRv&)
        (call-with-string-output-port . g$12360$XcRv&)
        (call-with-port . g$12359$XcRv&)
        (call-with-bytevector-output-port . g$12358$XcRv&)
        (bytevector->string . g$12357$XcRv&)
        (buffer-mode? . g$12356$XcRv&)
        (binary-port? . g$12355$XcRv&)
        (scheme-report-environment . g$8964$XcRv&)
        (quotient . g$7111$XcRv&)
        (null-environment . g$8963$XcRv&)
        (remainder . g$7112$XcRv&)
        (modulo . g$7113$XcRv&)
        (inexact->exact . g$12354$XcRv&)
        (force . g$12353$XcRv&)
        (exact->inexact . g$12352$XcRv&)
        (exit . g$12351$XcRv&)
        (command-line . g$11914$XcRv&)
        (string-fill! . g$12350$XcRv&)
        (string-set! . g$12349$XcRv&)
        (set-cdr! . g$12348$XcRv&)
        (set-car! . g$12347$XcRv&)
        (remove . g$6698$XcRv&)
        (remv . g$6699$XcRv&)
        (remp . g$6684$XcRv&)
        (remq . g$6700$XcRv&)
        (partition . g$6683$XcRv&)
        (memv . g$12346$XcRv&)
        (memq . g$12345$XcRv&)
        (memp . g$6690$XcRv&)
        (member . g$6689$XcRv&)
        (exists . g$6694$XcRv&)
        (for-all . g$6693$XcRv&)
        (fold-right . g$6697$XcRv&)
        (fold-left . g$6696$XcRv&)
        (find . g$6682$XcRv&)
        (filter . g$6685$XcRv&)
        (cons* . g$6695$XcRv&)
        (assv . g$6686$XcRv&)
        (assq . g$12344$XcRv&)
        (assp . g$6688$XcRv&)
        (assoc . g$6687$XcRv&)
        (with-exception-handler . g$12343$XcRv&)
        (raise-continuable . g$12342$XcRv&)
        (raise . g$12341$XcRv&)
        (eval . g$8966$XcRv&)
        (environment . g$8962$XcRv&)
        (make-enumeration . g$7564$XcRv&)
        (enum-set=? . g$7571$XcRv&)
        (enum-set-universe . g$7565$XcRv&)
        (enum-set-union . g$7572$XcRv&)
        (enum-set-subset? . g$7570$XcRv&)
        (enum-set-projection . g$7576$XcRv&)
        (enum-set-member? . g$7569$XcRv&)
        (enum-set-intersection . g$7573$XcRv&)
        (enum-set-indexer . g$7566$XcRv&)
        (enum-set-difference . g$7574$XcRv&)
        (enum-set-constructor . g$7567$XcRv&)
        (enum-set-complement . g$7575$XcRv&)
        (enum-set->list . g$7568$XcRv&)
        (who-condition? . g$7022$XcRv&)
        (warning? . g$6933$XcRv&)
        (violation? . g$6975$XcRv&)
        (undefined-violation? . g$7099$XcRv&)
        (syntax-violation? . g$7083$XcRv&)
        (syntax-violation-subform . g$7085$XcRv&)
        (syntax-violation-form . g$7084$XcRv&)
        (syntax-violation . g$8980$XcRv&)
        (simple-conditions . g$12340$XcRv&)
        (serious-condition? . g$6947$XcRv&)
        (non-continuable-violation? . g$7037$XcRv&)
        (message-condition? . g$6918$XcRv&)
        (make-who-condition . g$7020$XcRv&)
        (make-warning . g$6932$XcRv&)
        (make-violation . g$6974$XcRv&)
        (make-undefined-violation . g$7098$XcRv&)
        (make-syntax-violation . g$7080$XcRv&)
        (make-serious-condition . g$6946$XcRv&)
        (make-non-continuable-violation . g$7036$XcRv&)
        (make-message-condition . g$6916$XcRv&)
        (make-lexical-violation . g$7064$XcRv&)
        (make-irritants-condition . g$7003$XcRv&)
        (make-implementation-restriction-violation . g$7050$XcRv&)
        (make-error . g$6960$XcRv&)
        (make-assertion-violation . g$6988$XcRv&)
        (lexical-violation? . g$7065$XcRv&)
        (irritants-condition? . g$7005$XcRv&)
        (implementation-restriction-violation? . g$7051$XcRv&)
        (error? . g$6961$XcRv&)
        (condition-who . g$7023$XcRv&)
        (condition-predicate . g$12339$XcRv&)
        (condition-message . g$6919$XcRv&)
        (condition-irritants . g$7006$XcRv&)
        (condition-accessor . g$12338$XcRv&)
        (condition . g$12337$XcRv&)
        (assertion-violation? . g$6989$XcRv&)
        (condition? . g$12336$XcRv&)
        (utf32->string . g$12335$XcRv&)
        (utf16->string . g$12334$XcRv&)
        (utf8->string . g$12333$XcRv&)
        (uint-list->bytevector . g$12332$XcRv&)
        (u8-list->bytevector . g$12331$XcRv&)
        (string->utf8 . g$12330$XcRv&)
        (string->utf32 . g$12329$XcRv&)
        (string->utf16 . g$12328$XcRv&)
        (sint-list->bytevector . g$12327$XcRv&)
        (native-endianness . g$6774$XcRv&)
        (bytevector? . g$12326$XcRv&)
        (bytevector=? . g$12325$XcRv&)
        (bytevector-uint-set! . g$12324$XcRv&)
        (bytevector-uint-ref . g$12323$XcRv&)
        (bytevector-u8-set! . g$12322$XcRv&)
        (bytevector-u8-ref . g$12321$XcRv&)
        (bytevector-u64-set! . g$6795$XcRv&)
        (bytevector-u64-ref . g$6791$XcRv&)
        (bytevector-u64-native-set! . g$6797$XcRv&)
        (bytevector-u64-native-ref . g$6793$XcRv&)
        (bytevector-u32-set! . g$6787$XcRv&)
        (bytevector-u32-ref . g$6783$XcRv&)
        (bytevector-u32-native-set! . g$6789$XcRv&)
        (bytevector-u32-native-ref . g$6785$XcRv&)
        (bytevector-u16-set! . g$6779$XcRv&)
        (bytevector-u16-ref . g$6775$XcRv&)
        (bytevector-u16-native-set! . g$6781$XcRv&)
        (bytevector-u16-native-ref . g$6777$XcRv&)
        (bytevector-sint-set! . g$12320$XcRv&)
        (bytevector-sint-ref . g$12319$XcRv&)
        (bytevector-s8-set! . g$12318$XcRv&)
        (bytevector-s8-ref . g$12317$XcRv&)
        (bytevector-s64-set! . g$6796$XcRv&)
        (bytevector-s64-ref . g$6792$XcRv&)
        (bytevector-s64-native-set! . g$6798$XcRv&)
        (bytevector-s64-native-ref . g$6794$XcRv&)
        (bytevector-s32-set! . g$6788$XcRv&)
        (bytevector-s32-ref . g$6784$XcRv&)
        (bytevector-s32-native-set! . g$6790$XcRv&)
        (bytevector-s32-native-ref . g$6786$XcRv&)
        (bytevector-s16-set! . g$6780$XcRv&)
        (bytevector-s16-ref . g$6776$XcRv&)
        (bytevector-s16-native-set! . g$6782$XcRv&)
        (bytevector-s16-native-ref . g$6778$XcRv&)
        (bytevector-length . g$12316$XcRv&)
        (bytevector-ieee-single-set! . g$12315$XcRv&)
        (bytevector-ieee-single-ref . g$12314$XcRv&)
        (bytevector-ieee-single-native-set! . g$6801$XcRv&)
        (bytevector-ieee-single-native-ref . g$6799$XcRv&)
        (bytevector-ieee-double-set! . g$12313$XcRv&)
        (bytevector-ieee-double-ref . g$12312$XcRv&)
        (bytevector-ieee-double-native-set! . g$6802$XcRv&)
        (bytevector-ieee-double-native-ref . g$6800$XcRv&)
        (bytevector-fill! . g$12311$XcRv&)
        (bytevector-copy! . g$12310$XcRv&)
        (bytevector-copy . g$12309$XcRv&)
        (bytevector->uint-list . g$12308$XcRv&)
        (bytevector->u8-list . g$12307$XcRv&)
        (bytevector->sint-list . g$12306$XcRv&)
        (no-nans-violation? . g$7330$XcRv&)
        (no-infinities-violation? . g$7316$XcRv&)
        (make-no-nans-violation . g$7329$XcRv&)
        (make-no-infinities-violation . g$7315$XcRv&)
        (real->flonum . g$12305$XcRv&)
        (flzero? . g$12304$XcRv&)
        (fltruncate . g$12303$XcRv&)
        (fltan . g$12302$XcRv&)
        (flsqrt . g$12301$XcRv&)
        (flsin . g$12300$XcRv&)
        (flround . g$12299$XcRv&)
        (flpositive? . g$12298$XcRv&)
        (flonum? . g$12297$XcRv&)
        (flodd? . g$12296$XcRv&)
        (flnumerator . g$12295$XcRv&)
        (flnegative? . g$12294$XcRv&)
        (flnan? . g$12293$XcRv&)
        (flmod0 . g$12292$XcRv&)
        (flmod . g$12291$XcRv&)
        (flmin . g$12290$XcRv&)
        (flmax . g$12289$XcRv&)
        (fllog . g$12288$XcRv&)
        (flinteger? . g$12287$XcRv&)
        (flinfinite? . g$12286$XcRv&)
        (flfloor . g$12285$XcRv&)
        (flfinite? . g$12284$XcRv&)
        (flexpt . g$12283$XcRv&)
        (flexp . g$12282$XcRv&)
        (fleven? . g$12281$XcRv&)
        (fldiv0-and-mod0 . g$12280$XcRv&)
        (fldiv0 . g$12279$XcRv&)
        (fldiv-and-mod . g$12278$XcRv&)
        (fldiv . g$12277$XcRv&)
        (fldenominator . g$12276$XcRv&)
        (flcos . g$12275$XcRv&)
        (flceiling . g$12274$XcRv&)
        (flatan . g$12273$XcRv&)
        (flasin . g$12272$XcRv&)
        (flacos . g$12271$XcRv&)
        (flabs . g$12270$XcRv&)
        (fl>? . g$12269$XcRv&)
        (fl>=? . g$12268$XcRv&)
        (fl=? . g$12267$XcRv&)
        (fl<? . g$12266$XcRv&)
        (fl<=? . g$12265$XcRv&)
        (fl/ . g$12264$XcRv&)
        (fl- . g$12263$XcRv&)
        (fl+ . g$12262$XcRv&)
        (fl* . g$12261$XcRv&)
        (fixnum->flonum . g$12260$XcRv&)
        (fxzero? . g$12259$XcRv&)
        (fxxor . g$12258$XcRv&)
        (fxrotate-bit-field . g$7261$XcRv&)
        (fxreverse-bit-field . g$12257$XcRv&)
        (fxpositive? . g$12256$XcRv&)
        (fxodd? . g$12255$XcRv&)
        (fxnot . g$12254$XcRv&)
        (fxnegative? . g$12253$XcRv&)
        (fxmod0 . g$12252$XcRv&)
        (fxmod . g$12251$XcRv&)
        (fxmin . g$12250$XcRv&)
        (fxmax . g$12249$XcRv&)
        (fxlength . g$12248$XcRv&)
        (fxior . g$12247$XcRv&)
        (fxif . g$7255$XcRv&)
        (fxfirst-bit-set . g$12246$XcRv&)
        (fxeven? . g$12245$XcRv&)
        (fxdiv0-and-mod0 . g$12244$XcRv&)
        (fxdiv0 . g$12243$XcRv&)
        (fxdiv-and-mod . g$12242$XcRv&)
        (fxdiv . g$12241$XcRv&)
        (fxcopy-bit-field . g$7258$XcRv&)
        (fxcopy-bit . g$7256$XcRv&)
        (fxbit-set? . g$12240$XcRv&)
        (fxbit-field . g$7257$XcRv&)
        (fxbit-count . g$12239$XcRv&)
        (fxarithmetic-shift-right . g$7260$XcRv&)
        (fxarithmetic-shift-left . g$7259$XcRv&)
        (fxarithmetic-shift . g$12238$XcRv&)
        (fxand . g$12237$XcRv&)
        (fx>? . g$12236$XcRv&)
        (fx>=? . g$12235$XcRv&)
        (fx=? . g$12234$XcRv&)
        (fx<? . g$12233$XcRv&)
        (fx<=? . g$12232$XcRv&)
        (fx-/carry . g$12231$XcRv&)
        (fx- . g$12230$XcRv&)
        (fx+/carry . g$12229$XcRv&)
        (fx+ . g$12228$XcRv&)
        (fx*/carry . g$12227$XcRv&)
        (fx* . g$12226$XcRv&)
        (greatest-fixnum . g$12225$XcRv&)
        (least-fixnum . g$12224$XcRv&)
        (fixnum-width . g$12223$XcRv&)
        (fixnum? . g$12222$XcRv&)
        (bitwise-rotate-bit-field . g$7209$XcRv&)
        (bitwise-reverse-bit-field . g$7210$XcRv&)
        (bitwise-length . g$12221$XcRv&)
        (bitwise-if . g$7203$XcRv&)
        (bitwise-first-bit-set . g$12220$XcRv&)
        (bitwise-copy-bit-field . g$7206$XcRv&)
        (bitwise-copy-bit . g$7204$XcRv&)
        (bitwise-bit-set? . g$12219$XcRv&)
        (bitwise-bit-field . g$12218$XcRv&)
        (bitwise-bit-count . g$12217$XcRv&)
        (bitwise-xor . g$12216$XcRv&)
        (bitwise-ior . g$12215$XcRv&)
        (bitwise-and . g$12214$XcRv&)
        (bitwise-not . g$12213$XcRv&)
        (bitwise-arithmetic-shift-right . g$7208$XcRv&)
        (bitwise-arithmetic-shift-left . g$7207$XcRv&)
        (bitwise-arithmetic-shift . g$12212$XcRv&)
        (zero? . g$12211$XcRv&)
        (vector? . g$12210$XcRv&)
        (vector-set! . g$12209$XcRv&)
        (vector-ref . g$12208$XcRv&)
        (vector-map . g$12207$XcRv&)
        (vector-length . g$12206$XcRv&)
        (vector-for-each . g$12205$XcRv&)
        (vector-fill! . g$12204$XcRv&)
        (vector->list . g$12203$XcRv&)
        (vector . g$12202$XcRv&)
        (values . g$12201$XcRv&)
        (truncate . g$12200$XcRv&)
        (tan . g$12199$XcRv&)
        (symbol? . g$12198$XcRv&)
        (symbol=? . g$12197$XcRv&)
        (symbol->string . g$12196$XcRv&)
        (substring . g$12195$XcRv&)
        (string? . g$12194$XcRv&)
        (string>? . g$12193$XcRv&)
        (string>=? . g$12192$XcRv&)
        (string=? . g$12191$XcRv&)
        (string<? . g$12190$XcRv&)
        (string<=? . g$12189$XcRv&)
        (string-ref . g$12188$XcRv&)
        (string-length . g$12187$XcRv&)
        (string-for-each . g$12186$XcRv&)
        (string-copy . g$12185$XcRv&)
        (string-append . g$12184$XcRv&)
        (string->symbol . g$12183$XcRv&)
        (string->number . g$12182$XcRv&)
        (string->list . g$12181$XcRv&)
        (string . g$12180$XcRv&)
        (sqrt . g$12179$XcRv&)
        (sin . g$12178$XcRv&)
        (round . g$12177$XcRv&)
        (reverse . g$12176$XcRv&)
        (real? . g$12175$XcRv&)
        (real-valued? . g$12174$XcRv&)
        (real-part . g$12173$XcRv&)
        (rationalize . g$6235$XcRv&)
        (rational? . g$12172$XcRv&)
        (rational-valued? . g$12171$XcRv&)
        (procedure? . g$12170$XcRv&)
        (positive? . g$12169$XcRv&)
        (pair? . g$12168$XcRv&)
        (odd? . g$12167$XcRv&)
        (numerator . g$12166$XcRv&)
        (number? . g$12165$XcRv&)
        (number->string . g$12164$XcRv&)
        (null? . g$12163$XcRv&)
        (not . g$12162$XcRv&)
        (negative? . g$12161$XcRv&)
        (nan? . g$12160$XcRv&)
        (min . g$12159$XcRv&)
        (max . g$12158$XcRv&)
        (map . g$12157$XcRv&)
        (make-vector . g$12156$XcRv&)
        (make-string . g$12155$XcRv&)
        (make-rectangular . g$12154$XcRv&)
        (make-polar . g$12153$XcRv&)
        (magnitude . g$12152$XcRv&)
        (log . g$12151$XcRv&)
        (list? . g$12150$XcRv&)
        (list-tail . g$12149$XcRv&)
        (list-ref . g$12148$XcRv&)
        (list->vector . g$12147$XcRv&)
        (list->string . g$12146$XcRv&)
        (list . g$12145$XcRv&)
        (length . g$12144$XcRv&)
        (lcm . g$12143$XcRv&)
        (integer? . g$12142$XcRv&)
        (integer-valued? . g$12141$XcRv&)
        (integer->char . g$12140$XcRv&)
        (infinite? . g$12139$XcRv&)
        (inexact? . g$12138$XcRv&)
        (inexact . g$12137$XcRv&)
        (imag-part . g$12136$XcRv&)
        (gcd . g$12135$XcRv&)
        (for-each . g$12134$XcRv&)
        (floor . g$12133$XcRv&)
        (finite? . g$12132$XcRv&)
        (expt . g$12131$XcRv&)
        (exp . g$12130$XcRv&)
        (exact? . g$12129$XcRv&)
        (exact-integer-sqrt . g$12128$XcRv&)
        (exact . g$12127$XcRv&)
        (even? . g$12126$XcRv&)
        (error . g$12125$XcRv&)
        (eqv? . g$12124$XcRv&)
        (equal? . g$12123$XcRv&)
        (eq? . g$12122$XcRv&)
        (dynamic-wind . g$12121$XcRv&)
        (div0-and-mod0 . g$12120$XcRv&)
        (mod0 . g$12119$XcRv&)
        (div0 . g$12118$XcRv&)
        (div-and-mod . g$12117$XcRv&)
        (mod . g$12116$XcRv&)
        (div . g$12115$XcRv&)
        (denominator . g$12114$XcRv&)
        (cos . g$12113$XcRv&)
        (cons . g$12112$XcRv&)
        (complex? . g$12111$XcRv&)
        (char? . g$12110$XcRv&)
        (char>? . g$12109$XcRv&)
        (char>=? . g$12108$XcRv&)
        (char=? . g$12107$XcRv&)
        (char<? . g$12106$XcRv&)
        (char<=? . g$12105$XcRv&)
        (char->integer . g$12104$XcRv&)
        (ceiling . g$12103$XcRv&)
        (call-with-values . g$12102$XcRv&)
        (call/cc . g$12101$XcRv&)
        (call-with-current-continuation . g$12100$XcRv&)
        (cddddr . g$6234$XcRv&)
        (cdddar . g$6233$XcRv&)
        (cddadr . g$6232$XcRv&)
        (cddaar . g$6231$XcRv&)
        (cdaddr . g$6230$XcRv&)
        (cdadar . g$6229$XcRv&)
        (cdaadr . g$6228$XcRv&)
        (cdaaar . g$6227$XcRv&)
        (cadddr . g$6226$XcRv&)
        (caddar . g$6225$XcRv&)
        (cadadr . g$6224$XcRv&)
        (cadaar . g$6223$XcRv&)
        (caaddr . g$6222$XcRv&)
        (caadar . g$6221$XcRv&)
        (caaadr . g$6220$XcRv&)
        (caaaar . g$6219$XcRv&)
        (cdddr . g$6218$XcRv&)
        (cddar . g$6217$XcRv&)
        (cdadr . g$6216$XcRv&)
        (cdaar . g$6215$XcRv&)
        (caddr . g$6214$XcRv&)
        (cadar . g$6213$XcRv&)
        (caadr . g$6212$XcRv&)
        (caaar . g$6211$XcRv&)
        (cddr . g$6210$XcRv&)
        (cdar . g$6209$XcRv&)
        (cadr . g$6208$XcRv&)
        (caar . g$6207$XcRv&)
        (cdr . g$12099$XcRv&)
        (car . g$12098$XcRv&)
        (boolean? . g$12097$XcRv&)
        (boolean=? . g$12096$XcRv&)
        (atan . g$12095$XcRv&)
        (assertion-violation . g$12094$XcRv&)
        (asin . g$12093$XcRv&)
        (apply . g$12092$XcRv&)
        (append . g$12091$XcRv&)
        (angle . g$12090$XcRv&)
        (acos . g$12089$XcRv&)
        (abs . g$12088$XcRv&)
        (/ . g$12087$XcRv&)
        (* . g$12086$XcRv&)
        (- . g$12085$XcRv&)
        (+ . g$12084$XcRv&)
        (>= . g$12083$XcRv&)
        (> . g$12082$XcRv&)
        (= . g$12081$XcRv&)
        (<= . g$12080$XcRv&)
        (< . g$12079$XcRv&)
        (make-record-printer . g$12078$XcRv&)
        (eqv-hash . g$12077$XcRv&)
        (eq-hash . g$12076$XcRv&)
        (reverse! . g$12075$XcRv&)
        (make-promise . g$12074$XcRv&)
        (load/args . g$11916$XcRv&)
        (printf . g$7678$XcRv&)
        (fprintf . g$7679$XcRv&)
        (format . g$7680$XcRv&)
        (get-arity . g$12073$XcRv&)
        (gc-collect . g$12072$XcRv&)
        (clr-type? . g$12071$XcRv&)
        (get-clr-type . g$12070$XcRv&)
        (get-command-line . g$12069$XcRv&)
        (vector-append . g$12068$XcRv&)
        (vector-filter . g$12067$XcRv&)
        (vector-reverse! . g$12066$XcRv&)
        (vector-contains? . g$12065$XcRv&)
        (vector-index-of . g$12064$XcRv&)
        (vector-copy . g$12063$XcRv&)
        (vector-binary-search . g$12062$XcRv&)
        (get-output-string . g$12061$XcRv&)
        (open-output-string . g$12060$XcRv&)
        (open-input-string . g$12059$XcRv&)
        (string-format . g$12058$XcRv&)
        (trace-printer . g$11913$XcRv&)
        (make-traced-procedure . g$12057$XcRv&)
        (make-traced-macro . g$7699$XcRv&)
        (pmap . g$12056$XcRv&)
        (time-it . g$12055$XcRv&)
        (make-parameter . g$7704$XcRv&)
        (library-locator . g$12054$XcRv&)
        (get-library-paths . g$12053$XcRv&)
        (environment-symbols . g$8960$XcRv&)
        (interaction-environment-symbols . g$8959$XcRv&)
        (library-path . g$8129$XcRv&)
        (library-extensions . g$8130$XcRv&)
        (installed-libraries . g$8150$XcRv&)
        (expand . g$8965$XcRv&)
        (&no-nans . g$12052$XcRv&)
        (&no-infinities . g$12051$XcRv&)
        (&i/o-encoding . g$12050$XcRv&)
        (&i/o-decoding . g$12049$XcRv&)
        (&i/o-port . g$12048$XcRv&)
        (&i/o-file-does-not-exist . g$12047$XcRv&)
        (&i/o-file-already-exists . g$12046$XcRv&)
        (&i/o-file-is-read-only . g$12045$XcRv&)
        (&i/o-file-protection . g$12044$XcRv&)
        (&i/o-filename . g$12043$XcRv&)
        (&i/o-invalid-position . g$12042$XcRv&)
        (&i/o-write . g$12041$XcRv&)
        (&i/o-read . g$12040$XcRv&)
        (&i/o . g$12039$XcRv&)
        (&non-continuable . g$12038$XcRv&)
        (&undefined . g$12037$XcRv&)
        (&syntax . g$12036$XcRv&)
        (&lexical . g$12035$XcRv&)
        (&implementation-restriction . g$12034$XcRv&)
        (&non . g$12033$XcRv&)
        (&who . g$12032$XcRv&)
        (&irritants . g$12031$XcRv&)
        (&assertion . g$12030$XcRv&)
        (&violation . g$12029$XcRv&)
        (&error . g$12028$XcRv&)
        (&serious . g$12027$XcRv&)
        (&warning . g$12026$XcRv&)
        (&message . g$12025$XcRv&)
        (&condition . g$12024$XcRv&)
        (define-condition-type . g$12023$XcRv&)
        (define-enumeration . g$12022$XcRv&)
        (define-record-type . g$12021$XcRv&)
        (parent-rtd . g$12020$XcRv&)
        (nongenerative . g$12019$XcRv&)
        (opaque . g$12018$XcRv&)
        (sealed . g$12017$XcRv&)
        (protocol . g$12016$XcRv&)
        (parent . g$12015$XcRv&)
        (immutable . g$12014$XcRv&)
        (mutable . g$12013$XcRv&)
        (fields . g$12012$XcRv&)
        (error-handling-mode . g$12011$XcRv&)
        (file-options . g$12010$XcRv&)
        (buffer-mode . g$12009$XcRv&)
        (eol-style . g$12008$XcRv&)
        (guard . g$12007$XcRv&)
        (trace-letrec-syntax . g$12006$XcRv&)
        (trace-let-syntax . g$12005$XcRv&)
        (trace-define-syntax . g$12004$XcRv&)
        (trace-define . g$12003$XcRv&)
        (trace-lambda . g$12002$XcRv&)
        (unsyntax-splicing . g$12001$XcRv&)
        (unsyntax . g$12000$XcRv&)
        (unquote-splicing . g$11999$XcRv&)
        (unquote . g$11998$XcRv&)
        (_ . g$11997$XcRv&)
        (else . g$11996$XcRv&)
        (=> . g$11995$XcRv&)
        (... . g$11994$XcRv&)
        (assert . g$11993$XcRv&)
        (endianness . g$11992$XcRv&)
        (delay . g$11991$XcRv&)
        (time . g$11990$XcRv&)
        (or . g$11989$XcRv&)
        (and . g$11988$XcRv&)
        (do . g$11987$XcRv&)
        (cond . g$11986$XcRv&)
        (let* . g$11985$XcRv&)
        (let . g$11984$XcRv&)
        (identifier-syntax . g$11983$XcRv&)
        (with-syntax . g$11982$XcRv&)
        (quasisyntax . g$11981$XcRv&)
        (quasiquote . g$11980$XcRv&)
        (syntax-rules . g$11979$XcRv&)
        (include-into . g$11978$XcRv&)
        (include . g$11977$XcRv&)
        (define-struct . g$11976$XcRv&)
        (let-values . g$11975$XcRv&)
        (let*-values . g$11974$XcRv&)
        (record-constructor-descriptor . g$11973$XcRv&)
        (record-type-descriptor . g$11972$XcRv&)
        (fluid-let-syntax . g$11971$XcRv&)
        (case . g$11970$XcRv&)
        (parameterize . g$11969$XcRv&)
        (unless . g$11968$XcRv&)
        (when . g$11967$XcRv&)
        (if . g$11966$XcRv&)
        (letrec* . g$11965$XcRv&)
        (letrec . g$11964$XcRv&)
        (type-descriptor . g$11963$XcRv&)
        (case-lambda . g$11962$XcRv&)
        (lambda . g$11961$XcRv&)
        (syntax . g$11960$XcRv&)
        (syntax-case . g$11959$XcRv&)
        (quote . g$11958$XcRv&)
        (foreign-call . g$11957$XcRv&)
        (letrec-syntax . g$11956$XcRv&)
        (let-syntax . g$11955$XcRv&)
        (set! . g$11954$XcRv&)
        (import . g$11953$XcRv&)
        (library . g$11952$XcRv&)
        (begin . g$11951$XcRv&)
        (module . g$11950$XcRv&)
        (define-syntax . g$11949$XcRv&)
        (define . g$11948$XcRv&))
      '((g$8858$XcRv& core-prim . ellipsis-map)
        (g$12592$XcRv& core-prim . &no-nans-rcd)
        (g$12591$XcRv& core-prim . &no-nans-rtd)
        (g$12590$XcRv& core-prim . &no-infinities-rcd)
        (g$12589$XcRv& core-prim . &no-infinities-rtd)
        (g$12588$XcRv& core-prim . &i/o-encoding-rcd)
        (g$12587$XcRv& core-prim . &i/o-encoding-rtd)
        (g$12586$XcRv& core-prim . &i/o-decoding-rcd)
        (g$12585$XcRv& core-prim . &i/o-decoding-rtd)
        (g$12584$XcRv& core-prim . &i/o-port-rcd)
        (g$12583$XcRv& core-prim . &i/o-port-rtd)
        (g$12582$XcRv& core-prim . &i/o-file-does-not-exist-rcd)
        (g$12581$XcRv& core-prim . &i/o-file-does-not-exist-rtd)
        (g$12580$XcRv& core-prim . &i/o-file-already-exists-rcd)
        (g$12579$XcRv& core-prim . &i/o-file-already-exists-rtd)
        (g$12578$XcRv& core-prim . &i/o-file-is-read-only-rcd)
        (g$12577$XcRv& core-prim . &i/o-file-is-read-only-rtd)
        (g$12576$XcRv& core-prim . &i/o-file-protection-rcd)
        (g$12575$XcRv& core-prim . &i/o-file-protection-rtd)
        (g$12574$XcRv& core-prim . &i/o-filename-rcd)
        (g$12573$XcRv& core-prim . &i/o-filename-rtd)
        (g$12572$XcRv& core-prim . &i/o-invalid-position-rcd)
        (g$12571$XcRv& core-prim . &i/o-invalid-position-rtd)
        (g$12570$XcRv& core-prim . &i/o-write-rcd)
        (g$12569$XcRv& core-prim . &i/o-write-rtd)
        (g$12568$XcRv& core-prim . &i/o-read-rcd)
        (g$12567$XcRv& core-prim . &i/o-read-rtd)
        (g$12566$XcRv& core-prim . &i/o-rcd)
        (g$12565$XcRv& core-prim . &i/o-rtd)
        (g$12564$XcRv& core-prim . &undefined-rcd)
        (g$12563$XcRv& core-prim . &undefined-rtd)
        (g$12562$XcRv& core-prim . &syntax-rcd)
        (g$12561$XcRv& core-prim . &syntax-rtd)
        (g$12560$XcRv& core-prim . &lexical-rcd)
        (g$12559$XcRv& core-prim . &lexical-rtd)
        (g$12558$XcRv& core-prim . &implementation-restriction-rcd)
        (g$12557$XcRv& core-prim . &implementation-restriction-rtd)
        (g$12556$XcRv& core-prim . &non-continuable-rcd)
        (g$12555$XcRv& core-prim . &non-continuable-rtd)
        (g$12554$XcRv& core-prim . &who-rcd)
        (g$12553$XcRv& core-prim . &who-rtd)
        (g$12552$XcRv& core-prim . &irritants-rcd)
        (g$12551$XcRv& core-prim . &irritants-rtd)
        (g$12550$XcRv& core-prim . &assertion-rcd)
        (g$12549$XcRv& core-prim . &assertion-rtd)
        (g$12548$XcRv& core-prim . &violation-rcd)
        (g$12547$XcRv& core-prim . &violation-rtd)
        (g$12546$XcRv& core-prim . &error-rcd)
        (g$12545$XcRv& core-prim . &error-rtd)
        (g$12544$XcRv& core-prim . &serious-rcd)
        (g$12543$XcRv& core-prim . &serious-rtd)
        (g$12542$XcRv& core-prim . &warning-rcd)
        (g$12541$XcRv& core-prim . &warning-rtd)
        (g$12540$XcRv& core-prim . &message-rcd)
        (g$12539$XcRv& core-prim . &message-rtd)
        (g$12538$XcRv& core-prim . &condition-rcd)
        (g$12537$XcRv& core-prim . &condition-rtd)
        (g$12536$XcRv& core-prim . library-letrec*)
        (g$12535$XcRv& core-prim . annotation-stripped)
        (g$12534$XcRv& core-prim . annotation-source)
        (g$12533$XcRv& core-prim . annotation-expression)
        (g$12532$XcRv& core-prim . annotation?)
        (g$12531$XcRv& core-prim . read-annotated)
        (g$12530$XcRv& core-prim . tanh)
        (g$12529$XcRv& core-prim . cosh)
        (g$12528$XcRv& core-prim . sinh)
        (g$12527$XcRv& core-prim . make-guid)
        (g$12526$XcRv& core-prim . unspecified?)
        (g$12525$XcRv& core-prim . make-trace)
        (g$12524$XcRv& core-prim . make-list)
        (g$12523$XcRv& core-prim . last-pair)
        (g$12522$XcRv& core-prim . load-r5rs)
        (g$12521$XcRv& core-prim . license)
        (g$12520$XcRv& core-prim . stacktrace)
        (g$11918$XcRv& core-prim . ironscheme-build)
        (g$12519$XcRv& core-prim . define-clr-class-internal)
        (g$12518$XcRv& core-prim . clr-field-set!-internal)
        (g$12517$XcRv& core-prim . clr-field-get-internal)
        (g$12516$XcRv& core-prim . clr-cast-internal)
        (g$12515$XcRv& core-prim . clr-call-internal)
        (g$12514$XcRv& core-prim . clr-new-internal)
        (g$12513$XcRv& core-prim . clr-new-array-internal)
        (g$12512$XcRv& core-prim . clr-is-internal)
        (g$12511$XcRv& core-prim . clr-reference-internal)
        (g$12510$XcRv& core-prim . clr-using-internal)
        (g$12509$XcRv& core-prim . clr-clear-usings-internal)
        (g$8977$XcRv& core-prim . syntax-error)
        (g$8853$XcRv& core-prim . syntax-dispatch)
        (g$12508$XcRv& core-prim . compile-core)
        (g$12507$XcRv& core-prim . eval-core)
        (g$12506$XcRv& core-prim . set-symbol-value!)
        (g$12505$XcRv& core-prim . symbol-value)
        (g$12504$XcRv& core-prim . ungensym)
        (g$12503$XcRv& core-prim . gensym)
        (g$12502$XcRv& core-prim . void)
        (g$12501$XcRv& core-prim . load-serialized-library)
        (g$12500$XcRv& core-prim . serialize-library)
        (g$11920$XcRv& core-prim . compile-system-libraries)
        (g$11922$XcRv& core-prim . compile->closure)
        (g$11921$XcRv& core-prim . compile)
        (g$11917$XcRv& core-prim . load)
        (g$8986$XcRv& core-prim . interaction-environment)
        (g$12499$XcRv& core-prim . char-ready?)
        (g$12498$XcRv& core-prim . string-upcase)
        (g$12497$XcRv& core-prim . string-titlecase)
        (g$12496$XcRv& core-prim . string-normalize-nfkd)
        (g$12495$XcRv& core-prim . string-normalize-nfkc)
        (g$12494$XcRv& core-prim . string-normalize-nfd)
        (g$12493$XcRv& core-prim . string-normalize-nfc)
        (g$12492$XcRv& core-prim . string-foldcase)
        (g$12491$XcRv& core-prim . string-downcase)
        (g$12490$XcRv& core-prim . string-ci>?)
        (g$12489$XcRv& core-prim . string-ci>=?)
        (g$12488$XcRv& core-prim . string-ci=?)
        (g$12487$XcRv& core-prim . string-ci<?)
        (g$12486$XcRv& core-prim . string-ci<=?)
        (g$12485$XcRv& core-prim . char-whitespace?)
        (g$12484$XcRv& core-prim . char-upper-case?)
        (g$12483$XcRv& core-prim . char-title-case?)
        (g$12482$XcRv& core-prim . char-numeric?)
        (g$12481$XcRv& core-prim . char-lower-case?)
        (g$12480$XcRv& core-prim . char-general-category)
        (g$12479$XcRv& core-prim . char-upcase)
        (g$12478$XcRv& core-prim . char-titlecase)
        (g$12477$XcRv& core-prim . char-foldcase)
        (g$12476$XcRv& core-prim . char-downcase)
        (g$12475$XcRv& core-prim . char-ci>?)
        (g$12474$XcRv& core-prim . char-ci>=?)
        (g$12473$XcRv& core-prim . char-ci=?)
        (g$12472$XcRv& core-prim . char-ci<?)
        (g$12471$XcRv& core-prim . char-ci<=?)
        (g$12470$XcRv& core-prim . char-alphabetic?)
        (g$8590$XcRv& core-prim . variable-transformer-procedure)
        (g$8589$XcRv& core-prim . variable-transformer?)
        (g$8588$XcRv& core-prim . make-variable-transformer)
        (g$8981$XcRv& core-prim . identifier?)
        (g$8973$XcRv& core-prim . generate-temporaries)
        (g$8974$XcRv& core-prim . free-identifier=?)
        (g$8983$XcRv& core-prim . syntax->datum)
        (g$8982$XcRv& core-prim . datum->syntax)
        (g$8975$XcRv& core-prim . bound-identifier=?)
        (g$12469$XcRv& core-prim . record-type-descriptor?)
        (g$12468$XcRv& core-prim . record-predicate)
        (g$12467$XcRv& core-prim . record-mutator)
        (g$12466$XcRv& core-prim . record-constructor)
        (g$12465$XcRv& core-prim . record-accessor)
        (g$12464$XcRv& core-prim . make-record-type-descriptor)
        (g$12463$XcRv& core-prim . make-record-constructor-descriptor)
        (g$12462$XcRv& core-prim . record?)
        (g$12461$XcRv& core-prim . record-type-uid)
        (g$12460$XcRv& core-prim . record-type-sealed?)
        (g$12459$XcRv& core-prim . record-type-parent)
        (g$12458$XcRv& core-prim . record-type-opaque?)
        (g$12457$XcRv& core-prim . record-type-name)
        (g$12456$XcRv& core-prim . record-type-generative?)
        (g$12455$XcRv& core-prim . record-type-field-names)
        (g$12454$XcRv& core-prim . record-rtd)
        (g$12453$XcRv& core-prim . record-field-mutable?)
        (g$6618$XcRv& core-prim . delete-file)
        (g$6617$XcRv& core-prim . file-exists?)
        (g$12452$XcRv& core-prim . vector-sort!)
        (g$12451$XcRv& core-prim . vector-sort)
        (g$7124$XcRv& core-prim . list-sort)
        (g$12450$XcRv& core-prim . symbol-hash)
        (g$12449$XcRv& core-prim . string-ci-hash)
        (g$12448$XcRv& core-prim . string-hash)
        (g$12447$XcRv& core-prim . equal-hash)
        (g$12446$XcRv& core-prim . hashtable-equivalence-function)
        (g$12445$XcRv& core-prim . make-hashtable)
        (g$12444$XcRv& core-prim . hashtable-hash-function)
        (g$6585$XcRv& core-prim . make-eqv-hashtable)
        (g$6584$XcRv& core-prim . make-eq-hashtable)
        (g$12443$XcRv& core-prim . hashtable?)
        (g$6591$XcRv& core-prim . hashtable-update!)
        (g$6586$XcRv& core-prim . hashtable-size)
        (g$6588$XcRv& core-prim . hashtable-set!)
        (g$6587$XcRv& core-prim . hashtable-ref)
        (g$12442$XcRv& core-prim . hashtable-mutable?)
        (g$12441$XcRv& core-prim . hashtable-keys)
        (g$12440$XcRv& core-prim . hashtable-entries)
        (g$6589$XcRv& core-prim . hashtable-delete!)
        (g$12439$XcRv& core-prim . hashtable-copy)
        (g$6590$XcRv& core-prim . hashtable-contains?)
        (g$6592$XcRv& core-prim . hashtable-clear!)
        (g$12438$XcRv& core-prim . call-with-output-file)
        (g$12437$XcRv& core-prim . call-with-input-file)
        (g$12436$XcRv& core-prim . write-char)
        (g$12435$XcRv& core-prim . write)
        (g$12434$XcRv& core-prim . with-output-to-file)
        (g$12433$XcRv& core-prim . with-input-from-file)
        (g$12432$XcRv& core-prim . read-char)
        (g$12431$XcRv& core-prim . read)
        (g$12430$XcRv& core-prim . peek-char)
        (g$12429$XcRv& core-prim . open-output-file)
        (g$12428$XcRv& core-prim . open-input-file)
        (g$12427$XcRv& core-prim . newline)
        (g$12426$XcRv& core-prim . display)
        (g$12425$XcRv& core-prim . close-output-port)
        (g$12424$XcRv& core-prim . close-input-port)
        (g$12423$XcRv& core-prim . eof-object?)
        (g$12422$XcRv& core-prim . eof-object)
        (g$12421$XcRv& core-prim . current-error-port)
        (g$12420$XcRv& core-prim . current-output-port)
        (g$12419$XcRv& core-prim . current-input-port)
        (g$12418$XcRv& core-prim . output-port?)
        (g$12417$XcRv& core-prim . input-port?)
        (g$12416$XcRv& core-prim . utf-8-codec)
        (g$12415$XcRv& core-prim . utf-16-codec)
        (g$12414$XcRv& core-prim . transcoder-error-handling-mode)
        (g$12413$XcRv& core-prim . transcoder-eol-style)
        (g$12412$XcRv& core-prim . transcoder-codec)
        (g$12411$XcRv& core-prim . transcoded-port)
        (g$12410$XcRv& core-prim . textual-port?)
        (g$12409$XcRv& core-prim . string->bytevector)
        (g$12408$XcRv& core-prim . standard-output-port)
        (g$12407$XcRv& core-prim . standard-input-port)
        (g$12406$XcRv& core-prim . standard-error-port)
        (g$12405$XcRv& core-prim . set-port-position!)
        (g$12404$XcRv& core-prim . put-u8)
        (g$12403$XcRv& core-prim . put-string)
        (g$12402$XcRv& core-prim . put-datum)
        (g$12401$XcRv& core-prim . put-char)
        (g$12400$XcRv& core-prim . put-bytevector)
        (g$12399$XcRv& core-prim . port?)
        (g$12398$XcRv& core-prim . port-transcoder)
        (g$12397$XcRv& core-prim . port-position)
        (g$12396$XcRv& core-prim . port-has-set-port-position!?)
        (g$12395$XcRv& core-prim . port-has-port-position?)
        (g$12394$XcRv& core-prim . port-eof?)
        (g$12393$XcRv& core-prim . output-port-buffer-mode)
        (g$7515$XcRv& core-prim . open-string-output-port)
        (g$12392$XcRv& core-prim . open-string-input-port)
        (g$12391$XcRv& core-prim . open-file-output-port)
        (g$12390$XcRv& core-prim . open-file-input/output-port)
        (g$12389$XcRv& core-prim . open-file-input-port)
        (g$12388$XcRv& core-prim . open-bytevector-output-port)
        (g$12387$XcRv& core-prim . open-bytevector-input-port)
        (g$12386$XcRv& core-prim . native-transcoder)
        (g$12385$XcRv& core-prim . native-eol-style)
        (g$12384$XcRv& core-prim . make-transcoder)
        (g$12383$XcRv& core-prim . latin-1-codec)
        (g$7372$XcRv& core-prim . make-i/o-write-error)
        (g$7358$XcRv& core-prim . make-i/o-read-error)
        (g$7477$XcRv& core-prim . make-i/o-port-error)
        (g$7387$XcRv& core-prim . make-i/o-invalid-position-error)
        (g$7404$XcRv& core-prim . make-i/o-filename-error)
        (g$7420$XcRv& core-prim . make-i/o-file-protection-error)
        (g$7434$XcRv& core-prim . make-i/o-file-is-read-only-error)
        (g$7462$XcRv& core-prim . make-i/o-file-does-not-exist-error)
        (g$7448$XcRv& core-prim . make-i/o-file-already-exists-error)
        (g$7344$XcRv& core-prim . make-i/o-error)
        (g$7508$XcRv& core-prim . make-i/o-encoding-error)
        (g$7493$XcRv& core-prim . make-i/o-decoding-error)
        (g$12382$XcRv& core-prim . make-custom-textual-output-port)
        (g$12381$XcRv& core-prim . make-custom-textual-input/output-port)
        (g$12380$XcRv& core-prim . make-custom-textual-input-port)
        (g$12379$XcRv& core-prim . make-custom-binary-output-port)
        (g$12378$XcRv& core-prim . make-custom-binary-input/output-port)
        (g$12377$XcRv& core-prim . make-custom-binary-input-port)
        (g$12376$XcRv& core-prim . make-bytevector)
        (g$12375$XcRv& core-prim . lookahead-u8)
        (g$12374$XcRv& core-prim . lookahead-char)
        (g$7373$XcRv& core-prim . i/o-write-error?)
        (g$7359$XcRv& core-prim . i/o-read-error?)
        (g$7479$XcRv& core-prim . i/o-port-error?)
        (g$7389$XcRv& core-prim . i/o-invalid-position-error?)
        (g$7390$XcRv& core-prim . i/o-error-position)
        (g$7406$XcRv& core-prim . i/o-filename-error?)
        (g$7421$XcRv& core-prim . i/o-file-protection-error?)
        (g$7435$XcRv& core-prim . i/o-file-is-read-only-error?)
        (g$7463$XcRv& core-prim . i/o-file-does-not-exist-error?)
        (g$7449$XcRv& core-prim . i/o-file-already-exists-error?)
        (g$7345$XcRv& core-prim . i/o-error?)
        (g$7480$XcRv& core-prim . i/o-error-port)
        (g$7407$XcRv& core-prim . i/o-error-filename)
        (g$7510$XcRv& core-prim . i/o-encoding-error?)
        (g$7511$XcRv& core-prim . i/o-encoding-error-char)
        (g$7494$XcRv& core-prim . i/o-decoding-error?)
        (g$12373$XcRv& core-prim . get-u8)
        (g$12372$XcRv& core-prim . get-string-n!)
        (g$12371$XcRv& core-prim . get-string-n)
        (g$12370$XcRv& core-prim . get-string-all)
        (g$12369$XcRv& core-prim . get-line)
        (g$12368$XcRv& core-prim . get-datum)
        (g$12367$XcRv& core-prim . get-char)
        (g$12366$XcRv& core-prim . get-bytevector-some)
        (g$12365$XcRv& core-prim . get-bytevector-n!)
        (g$12364$XcRv& core-prim . get-bytevector-n)
        (g$12363$XcRv& core-prim . get-bytevector-all)
        (g$12362$XcRv& core-prim . flush-output-port)
        (g$12361$XcRv& core-prim . close-port)
        (g$12360$XcRv& core-prim . call-with-string-output-port)
        (g$12359$XcRv& core-prim . call-with-port)
        (g$12358$XcRv& core-prim . call-with-bytevector-output-port)
        (g$12357$XcRv& core-prim . bytevector->string)
        (g$12356$XcRv& core-prim . buffer-mode?)
        (g$12355$XcRv& core-prim . binary-port?)
        (g$8964$XcRv& core-prim . scheme-report-environment)
        (g$7111$XcRv& core-prim . quotient)
        (g$8963$XcRv& core-prim . null-environment)
        (g$7112$XcRv& core-prim . remainder)
        (g$7113$XcRv& core-prim . modulo)
        (g$12354$XcRv& core-prim . inexact->exact)
        (g$12353$XcRv& core-prim . force)
        (g$12352$XcRv& core-prim . exact->inexact)
        (g$12351$XcRv& core-prim . exit)
        (g$11914$XcRv& core-prim . command-line)
        (g$12350$XcRv& core-prim . string-fill!)
        (g$12349$XcRv& core-prim . string-set!)
        (g$12348$XcRv& core-prim . set-cdr!)
        (g$12347$XcRv& core-prim . set-car!)
        (g$6698$XcRv& core-prim . remove)
        (g$6699$XcRv& core-prim . remv)
        (g$6684$XcRv& core-prim . remp)
        (g$6700$XcRv& core-prim . remq)
        (g$6683$XcRv& core-prim . partition)
        (g$12346$XcRv& core-prim . memv)
        (g$12345$XcRv& core-prim . memq)
        (g$6690$XcRv& core-prim . memp)
        (g$6689$XcRv& core-prim . member)
        (g$6694$XcRv& core-prim . exists)
        (g$6693$XcRv& core-prim . for-all)
        (g$6697$XcRv& core-prim . fold-right)
        (g$6696$XcRv& core-prim . fold-left)
        (g$6682$XcRv& core-prim . find)
        (g$6685$XcRv& core-prim . filter)
        (g$6695$XcRv& core-prim . cons*)
        (g$6686$XcRv& core-prim . assv)
        (g$12344$XcRv& core-prim . assq)
        (g$6688$XcRv& core-prim . assp)
        (g$6687$XcRv& core-prim . assoc)
        (g$12343$XcRv& core-prim . with-exception-handler)
        (g$12342$XcRv& core-prim . raise-continuable)
        (g$12341$XcRv& core-prim . raise)
        (g$8966$XcRv& core-prim . eval)
        (g$8962$XcRv& core-prim . environment)
        (g$7564$XcRv& core-prim . make-enumeration)
        (g$7571$XcRv& core-prim . enum-set=?)
        (g$7565$XcRv& core-prim . enum-set-universe)
        (g$7572$XcRv& core-prim . enum-set-union)
        (g$7570$XcRv& core-prim . enum-set-subset?)
        (g$7576$XcRv& core-prim . enum-set-projection)
        (g$7569$XcRv& core-prim . enum-set-member?)
        (g$7573$XcRv& core-prim . enum-set-intersection)
        (g$7566$XcRv& core-prim . enum-set-indexer)
        (g$7574$XcRv& core-prim . enum-set-difference)
        (g$7567$XcRv& core-prim . enum-set-constructor)
        (g$7575$XcRv& core-prim . enum-set-complement)
        (g$7568$XcRv& core-prim . enum-set->list)
        (g$7022$XcRv& core-prim . who-condition?)
        (g$6933$XcRv& core-prim . warning?)
        (g$6975$XcRv& core-prim . violation?)
        (g$7099$XcRv& core-prim . undefined-violation?)
        (g$7083$XcRv& core-prim . syntax-violation?)
        (g$7085$XcRv& core-prim . syntax-violation-subform)
        (g$7084$XcRv& core-prim . syntax-violation-form)
        (g$8980$XcRv& core-prim . syntax-violation)
        (g$12340$XcRv& core-prim . simple-conditions)
        (g$6947$XcRv& core-prim . serious-condition?)
        (g$7037$XcRv& core-prim . non-continuable-violation?)
        (g$6918$XcRv& core-prim . message-condition?)
        (g$7020$XcRv& core-prim . make-who-condition)
        (g$6932$XcRv& core-prim . make-warning)
        (g$6974$XcRv& core-prim . make-violation)
        (g$7098$XcRv& core-prim . make-undefined-violation)
        (g$7080$XcRv& core-prim . make-syntax-violation)
        (g$6946$XcRv& core-prim . make-serious-condition)
        (g$7036$XcRv& core-prim . make-non-continuable-violation)
        (g$6916$XcRv& core-prim . make-message-condition)
        (g$7064$XcRv& core-prim . make-lexical-violation)
        (g$7003$XcRv& core-prim . make-irritants-condition)
        (g$7050$XcRv& core-prim . make-implementation-restriction-violation)
        (g$6960$XcRv& core-prim . make-error)
        (g$6988$XcRv& core-prim . make-assertion-violation)
        (g$7065$XcRv& core-prim . lexical-violation?)
        (g$7005$XcRv& core-prim . irritants-condition?)
        (g$7051$XcRv& core-prim . implementation-restriction-violation?)
        (g$6961$XcRv& core-prim . error?)
        (g$7023$XcRv& core-prim . condition-who)
        (g$12339$XcRv& core-prim . condition-predicate)
        (g$6919$XcRv& core-prim . condition-message)
        (g$7006$XcRv& core-prim . condition-irritants)
        (g$12338$XcRv& core-prim . condition-accessor)
        (g$12337$XcRv& core-prim . condition)
        (g$6989$XcRv& core-prim . assertion-violation?)
        (g$12336$XcRv& core-prim . condition?)
        (g$12335$XcRv& core-prim . utf32->string)
        (g$12334$XcRv& core-prim . utf16->string)
        (g$12333$XcRv& core-prim . utf8->string)
        (g$12332$XcRv& core-prim . uint-list->bytevector)
        (g$12331$XcRv& core-prim . u8-list->bytevector)
        (g$12330$XcRv& core-prim . string->utf8)
        (g$12329$XcRv& core-prim . string->utf32)
        (g$12328$XcRv& core-prim . string->utf16)
        (g$12327$XcRv& core-prim . sint-list->bytevector)
        (g$6774$XcRv& core-prim . native-endianness)
        (g$12326$XcRv& core-prim . bytevector?)
        (g$12325$XcRv& core-prim . bytevector=?)
        (g$12324$XcRv& core-prim . bytevector-uint-set!)
        (g$12323$XcRv& core-prim . bytevector-uint-ref)
        (g$12322$XcRv& core-prim . bytevector-u8-set!)
        (g$12321$XcRv& core-prim . bytevector-u8-ref)
        (g$6795$XcRv& core-prim . bytevector-u64-set!)
        (g$6791$XcRv& core-prim . bytevector-u64-ref)
        (g$6797$XcRv& core-prim . bytevector-u64-native-set!)
        (g$6793$XcRv& core-prim . bytevector-u64-native-ref)
        (g$6787$XcRv& core-prim . bytevector-u32-set!)
        (g$6783$XcRv& core-prim . bytevector-u32-ref)
        (g$6789$XcRv& core-prim . bytevector-u32-native-set!)
        (g$6785$XcRv& core-prim . bytevector-u32-native-ref)
        (g$6779$XcRv& core-prim . bytevector-u16-set!)
        (g$6775$XcRv& core-prim . bytevector-u16-ref)
        (g$6781$XcRv& core-prim . bytevector-u16-native-set!)
        (g$6777$XcRv& core-prim . bytevector-u16-native-ref)
        (g$12320$XcRv& core-prim . bytevector-sint-set!)
        (g$12319$XcRv& core-prim . bytevector-sint-ref)
        (g$12318$XcRv& core-prim . bytevector-s8-set!)
        (g$12317$XcRv& core-prim . bytevector-s8-ref)
        (g$6796$XcRv& core-prim . bytevector-s64-set!)
        (g$6792$XcRv& core-prim . bytevector-s64-ref)
        (g$6798$XcRv& core-prim . bytevector-s64-native-set!)
        (g$6794$XcRv& core-prim . bytevector-s64-native-ref)
        (g$6788$XcRv& core-prim . bytevector-s32-set!)
        (g$6784$XcRv& core-prim . bytevector-s32-ref)
        (g$6790$XcRv& core-prim . bytevector-s32-native-set!)
        (g$6786$XcRv& core-prim . bytevector-s32-native-ref)
        (g$6780$XcRv& core-prim . bytevector-s16-set!)
        (g$6776$XcRv& core-prim . bytevector-s16-ref)
        (g$6782$XcRv& core-prim . bytevector-s16-native-set!)
        (g$6778$XcRv& core-prim . bytevector-s16-native-ref)
        (g$12316$XcRv& core-prim . bytevector-length)
        (g$12315$XcRv& core-prim . bytevector-ieee-single-set!)
        (g$12314$XcRv& core-prim . bytevector-ieee-single-ref)
        (g$6801$XcRv& core-prim . bytevector-ieee-single-native-set!)
        (g$6799$XcRv& core-prim . bytevector-ieee-single-native-ref)
        (g$12313$XcRv& core-prim . bytevector-ieee-double-set!)
        (g$12312$XcRv& core-prim . bytevector-ieee-double-ref)
        (g$6802$XcRv& core-prim . bytevector-ieee-double-native-set!)
        (g$6800$XcRv& core-prim . bytevector-ieee-double-native-ref)
        (g$12311$XcRv& core-prim . bytevector-fill!)
        (g$12310$XcRv& core-prim . bytevector-copy!)
        (g$12309$XcRv& core-prim . bytevector-copy)
        (g$12308$XcRv& core-prim . bytevector->uint-list)
        (g$12307$XcRv& core-prim . bytevector->u8-list)
        (g$12306$XcRv& core-prim . bytevector->sint-list)
        (g$7330$XcRv& core-prim . no-nans-violation?)
        (g$7316$XcRv& core-prim . no-infinities-violation?)
        (g$7329$XcRv& core-prim . make-no-nans-violation)
        (g$7315$XcRv& core-prim . make-no-infinities-violation)
        (g$12305$XcRv& core-prim . real->flonum)
        (g$12304$XcRv& core-prim . flzero?)
        (g$12303$XcRv& core-prim . fltruncate)
        (g$12302$XcRv& core-prim . fltan)
        (g$12301$XcRv& core-prim . flsqrt)
        (g$12300$XcRv& core-prim . flsin)
        (g$12299$XcRv& core-prim . flround)
        (g$12298$XcRv& core-prim . flpositive?)
        (g$12297$XcRv& core-prim . flonum?)
        (g$12296$XcRv& core-prim . flodd?)
        (g$12295$XcRv& core-prim . flnumerator)
        (g$12294$XcRv& core-prim . flnegative?)
        (g$12293$XcRv& core-prim . flnan?)
        (g$12292$XcRv& core-prim . flmod0)
        (g$12291$XcRv& core-prim . flmod)
        (g$12290$XcRv& core-prim . flmin)
        (g$12289$XcRv& core-prim . flmax)
        (g$12288$XcRv& core-prim . fllog)
        (g$12287$XcRv& core-prim . flinteger?)
        (g$12286$XcRv& core-prim . flinfinite?)
        (g$12285$XcRv& core-prim . flfloor)
        (g$12284$XcRv& core-prim . flfinite?)
        (g$12283$XcRv& core-prim . flexpt)
        (g$12282$XcRv& core-prim . flexp)
        (g$12281$XcRv& core-prim . fleven?)
        (g$12280$XcRv& core-prim . fldiv0-and-mod0)
        (g$12279$XcRv& core-prim . fldiv0)
        (g$12278$XcRv& core-prim . fldiv-and-mod)
        (g$12277$XcRv& core-prim . fldiv)
        (g$12276$XcRv& core-prim . fldenominator)
        (g$12275$XcRv& core-prim . flcos)
        (g$12274$XcRv& core-prim . flceiling)
        (g$12273$XcRv& core-prim . flatan)
        (g$12272$XcRv& core-prim . flasin)
        (g$12271$XcRv& core-prim . flacos)
        (g$12270$XcRv& core-prim . flabs)
        (g$12269$XcRv& core-prim . fl>?)
        (g$12268$XcRv& core-prim . fl>=?)
        (g$12267$XcRv& core-prim . fl=?)
        (g$12266$XcRv& core-prim . fl<?)
        (g$12265$XcRv& core-prim . fl<=?)
        (g$12264$XcRv& core-prim . fl/)
        (g$12263$XcRv& core-prim . fl-)
        (g$12262$XcRv& core-prim . fl+)
        (g$12261$XcRv& core-prim . fl*)
        (g$12260$XcRv& core-prim . fixnum->flonum)
        (g$12259$XcRv& core-prim . fxzero?)
        (g$12258$XcRv& core-prim . fxxor)
        (g$7261$XcRv& core-prim . fxrotate-bit-field)
        (g$12257$XcRv& core-prim . fxreverse-bit-field)
        (g$12256$XcRv& core-prim . fxpositive?)
        (g$12255$XcRv& core-prim . fxodd?)
        (g$12254$XcRv& core-prim . fxnot)
        (g$12253$XcRv& core-prim . fxnegative?)
        (g$12252$XcRv& core-prim . fxmod0)
        (g$12251$XcRv& core-prim . fxmod)
        (g$12250$XcRv& core-prim . fxmin)
        (g$12249$XcRv& core-prim . fxmax)
        (g$12248$XcRv& core-prim . fxlength)
        (g$12247$XcRv& core-prim . fxior)
        (g$7255$XcRv& core-prim . fxif)
        (g$12246$XcRv& core-prim . fxfirst-bit-set)
        (g$12245$XcRv& core-prim . fxeven?)
        (g$12244$XcRv& core-prim . fxdiv0-and-mod0)
        (g$12243$XcRv& core-prim . fxdiv0)
        (g$12242$XcRv& core-prim . fxdiv-and-mod)
        (g$12241$XcRv& core-prim . fxdiv)
        (g$7258$XcRv& core-prim . fxcopy-bit-field)
        (g$7256$XcRv& core-prim . fxcopy-bit)
        (g$12240$XcRv& core-prim . fxbit-set?)
        (g$7257$XcRv& core-prim . fxbit-field)
        (g$12239$XcRv& core-prim . fxbit-count)
        (g$7260$XcRv& core-prim . fxarithmetic-shift-right)
        (g$7259$XcRv& core-prim . fxarithmetic-shift-left)
        (g$12238$XcRv& core-prim . fxarithmetic-shift)
        (g$12237$XcRv& core-prim . fxand)
        (g$12236$XcRv& core-prim . fx>?)
        (g$12235$XcRv& core-prim . fx>=?)
        (g$12234$XcRv& core-prim . fx=?)
        (g$12233$XcRv& core-prim . fx<?)
        (g$12232$XcRv& core-prim . fx<=?)
        (g$12231$XcRv& core-prim . fx-/carry)
        (g$12230$XcRv& core-prim . fx-)
        (g$12229$XcRv& core-prim . fx+/carry)
        (g$12228$XcRv& core-prim . fx+)
        (g$12227$XcRv& core-prim . fx*/carry)
        (g$12226$XcRv& core-prim . fx*)
        (g$12225$XcRv& core-prim . greatest-fixnum)
        (g$12224$XcRv& core-prim . least-fixnum)
        (g$12223$XcRv& core-prim . fixnum-width)
        (g$12222$XcRv& core-prim . fixnum?)
        (g$7209$XcRv& core-prim . bitwise-rotate-bit-field)
        (g$7210$XcRv& core-prim . bitwise-reverse-bit-field)
        (g$12221$XcRv& core-prim . bitwise-length)
        (g$7203$XcRv& core-prim . bitwise-if)
        (g$12220$XcRv& core-prim . bitwise-first-bit-set)
        (g$7206$XcRv& core-prim . bitwise-copy-bit-field)
        (g$7204$XcRv& core-prim . bitwise-copy-bit)
        (g$12219$XcRv& core-prim . bitwise-bit-set?)
        (g$12218$XcRv& core-prim . bitwise-bit-field)
        (g$12217$XcRv& core-prim . bitwise-bit-count)
        (g$12216$XcRv& core-prim . bitwise-xor)
        (g$12215$XcRv& core-prim . bitwise-ior)
        (g$12214$XcRv& core-prim . bitwise-and)
        (g$12213$XcRv& core-prim . bitwise-not)
        (g$7208$XcRv& core-prim . bitwise-arithmetic-shift-right)
        (g$7207$XcRv& core-prim . bitwise-arithmetic-shift-left)
        (g$12212$XcRv& core-prim . bitwise-arithmetic-shift)
        (g$12211$XcRv& core-prim . zero?)
        (g$12210$XcRv& core-prim . vector?)
        (g$12209$XcRv& core-prim . vector-set!)
        (g$12208$XcRv& core-prim . vector-ref)
        (g$12207$XcRv& core-prim . vector-map)
        (g$12206$XcRv& core-prim . vector-length)
        (g$12205$XcRv& core-prim . vector-for-each)
        (g$12204$XcRv& core-prim . vector-fill!)
        (g$12203$XcRv& core-prim . vector->list)
        (g$12202$XcRv& core-prim . vector)
        (g$12201$XcRv& core-prim . values)
        (g$12200$XcRv& core-prim . truncate)
        (g$12199$XcRv& core-prim . tan)
        (g$12198$XcRv& core-prim . symbol?)
        (g$12197$XcRv& core-prim . symbol=?)
        (g$12196$XcRv& core-prim . symbol->string)
        (g$12195$XcRv& core-prim . substring)
        (g$12194$XcRv& core-prim . string?)
        (g$12193$XcRv& core-prim . string>?)
        (g$12192$XcRv& core-prim . string>=?)
        (g$12191$XcRv& core-prim . string=?)
        (g$12190$XcRv& core-prim . string<?)
        (g$12189$XcRv& core-prim . string<=?)
        (g$12188$XcRv& core-prim . string-ref)
        (g$12187$XcRv& core-prim . string-length)
        (g$12186$XcRv& core-prim . string-for-each)
        (g$12185$XcRv& core-prim . string-copy)
        (g$12184$XcRv& core-prim . string-append)
        (g$12183$XcRv& core-prim . string->symbol)
        (g$12182$XcRv& core-prim . string->number)
        (g$12181$XcRv& core-prim . string->list)
        (g$12180$XcRv& core-prim . string)
        (g$12179$XcRv& core-prim . sqrt)
        (g$12178$XcRv& core-prim . sin)
        (g$12177$XcRv& core-prim . round)
        (g$12176$XcRv& core-prim . reverse)
        (g$12175$XcRv& core-prim . real?)
        (g$12174$XcRv& core-prim . real-valued?)
        (g$12173$XcRv& core-prim . real-part)
        (g$6235$XcRv& core-prim . rationalize)
        (g$12172$XcRv& core-prim . rational?)
        (g$12171$XcRv& core-prim . rational-valued?)
        (g$12170$XcRv& core-prim . procedure?)
        (g$12169$XcRv& core-prim . positive?)
        (g$12168$XcRv& core-prim . pair?)
        (g$12167$XcRv& core-prim . odd?)
        (g$12166$XcRv& core-prim . numerator)
        (g$12165$XcRv& core-prim . number?)
        (g$12164$XcRv& core-prim . number->string)
        (g$12163$XcRv& core-prim . null?)
        (g$12162$XcRv& core-prim . not)
        (g$12161$XcRv& core-prim . negative?)
        (g$12160$XcRv& core-prim . nan?)
        (g$12159$XcRv& core-prim . min)
        (g$12158$XcRv& core-prim . max)
        (g$12157$XcRv& core-prim . map)
        (g$12156$XcRv& core-prim . make-vector)
        (g$12155$XcRv& core-prim . make-string)
        (g$12154$XcRv& core-prim . make-rectangular)
        (g$12153$XcRv& core-prim . make-polar)
        (g$12152$XcRv& core-prim . magnitude)
        (g$12151$XcRv& core-prim . log)
        (g$12150$XcRv& core-prim . list?)
        (g$12149$XcRv& core-prim . list-tail)
        (g$12148$XcRv& core-prim . list-ref)
        (g$12147$XcRv& core-prim . list->vector)
        (g$12146$XcRv& core-prim . list->string)
        (g$12145$XcRv& core-prim . list)
        (g$12144$XcRv& core-prim . length)
        (g$12143$XcRv& core-prim . lcm)
        (g$12142$XcRv& core-prim . integer?)
        (g$12141$XcRv& core-prim . integer-valued?)
        (g$12140$XcRv& core-prim . integer->char)
        (g$12139$XcRv& core-prim . infinite?)
        (g$12138$XcRv& core-prim . inexact?)
        (g$12137$XcRv& core-prim . inexact)
        (g$12136$XcRv& core-prim . imag-part)
        (g$12135$XcRv& core-prim . gcd)
        (g$12134$XcRv& core-prim . for-each)
        (g$12133$XcRv& core-prim . floor)
        (g$12132$XcRv& core-prim . finite?)
        (g$12131$XcRv& core-prim . expt)
        (g$12130$XcRv& core-prim . exp)
        (g$12129$XcRv& core-prim . exact?)
        (g$12128$XcRv& core-prim . exact-integer-sqrt)
        (g$12127$XcRv& core-prim . exact)
        (g$12126$XcRv& core-prim . even?)
        (g$12125$XcRv& core-prim . error)
        (g$12124$XcRv& core-prim . eqv?)
        (g$12123$XcRv& core-prim . equal?)
        (g$12122$XcRv& core-prim . eq?)
        (g$12121$XcRv& core-prim . dynamic-wind)
        (g$12120$XcRv& core-prim . div0-and-mod0)
        (g$12119$XcRv& core-prim . mod0)
        (g$12118$XcRv& core-prim . div0)
        (g$12117$XcRv& core-prim . div-and-mod)
        (g$12116$XcRv& core-prim . mod)
        (g$12115$XcRv& core-prim . div)
        (g$12114$XcRv& core-prim . denominator)
        (g$12113$XcRv& core-prim . cos)
        (g$12112$XcRv& core-prim . cons)
        (g$12111$XcRv& core-prim . complex?)
        (g$12110$XcRv& core-prim . char?)
        (g$12109$XcRv& core-prim . char>?)
        (g$12108$XcRv& core-prim . char>=?)
        (g$12107$XcRv& core-prim . char=?)
        (g$12106$XcRv& core-prim . char<?)
        (g$12105$XcRv& core-prim . char<=?)
        (g$12104$XcRv& core-prim . char->integer)
        (g$12103$XcRv& core-prim . ceiling)
        (g$12102$XcRv& core-prim . call-with-values)
        (g$12101$XcRv& core-prim . call/cc)
        (g$12100$XcRv& core-prim . call-with-current-continuation)
        (g$6234$XcRv& core-prim . cddddr)
        (g$6233$XcRv& core-prim . cdddar)
        (g$6232$XcRv& core-prim . cddadr)
        (g$6231$XcRv& core-prim . cddaar)
        (g$6230$XcRv& core-prim . cdaddr)
        (g$6229$XcRv& core-prim . cdadar)
        (g$6228$XcRv& core-prim . cdaadr)
        (g$6227$XcRv& core-prim . cdaaar)
        (g$6226$XcRv& core-prim . cadddr)
        (g$6225$XcRv& core-prim . caddar)
        (g$6224$XcRv& core-prim . cadadr)
        (g$6223$XcRv& core-prim . cadaar)
        (g$6222$XcRv& core-prim . caaddr)
        (g$6221$XcRv& core-prim . caadar)
        (g$6220$XcRv& core-prim . caaadr)
        (g$6219$XcRv& core-prim . caaaar)
        (g$6218$XcRv& core-prim . cdddr)
        (g$6217$XcRv& core-prim . cddar)
        (g$6216$XcRv& core-prim . cdadr)
        (g$6215$XcRv& core-prim . cdaar)
        (g$6214$XcRv& core-prim . caddr)
        (g$6213$XcRv& core-prim . cadar)
        (g$6212$XcRv& core-prim . caadr)
        (g$6211$XcRv& core-prim . caaar)
        (g$6210$XcRv& core-prim . cddr)
        (g$6209$XcRv& core-prim . cdar)
        (g$6208$XcRv& core-prim . cadr)
        (g$6207$XcRv& core-prim . caar)
        (g$12099$XcRv& core-prim . cdr)
        (g$12098$XcRv& core-prim . car)
        (g$12097$XcRv& core-prim . boolean?)
        (g$12096$XcRv& core-prim . boolean=?)
        (g$12095$XcRv& core-prim . atan)
        (g$12094$XcRv& core-prim . assertion-violation)
        (g$12093$XcRv& core-prim . asin)
        (g$12092$XcRv& core-prim . apply)
        (g$12091$XcRv& core-prim . append)
        (g$12090$XcRv& core-prim . angle)
        (g$12089$XcRv& core-prim . acos)
        (g$12088$XcRv& core-prim . abs)
        (g$12087$XcRv& core-prim . /)
        (g$12086$XcRv& core-prim . *)
        (g$12085$XcRv& core-prim . -)
        (g$12084$XcRv& core-prim . +)
        (g$12083$XcRv& core-prim . >=)
        (g$12082$XcRv& core-prim . >)
        (g$12081$XcRv& core-prim . =)
        (g$12080$XcRv& core-prim . <=)
        (g$12079$XcRv& core-prim . <)
        (g$12078$XcRv& core-prim . make-record-printer)
        (g$12077$XcRv& core-prim . eqv-hash)
        (g$12076$XcRv& core-prim . eq-hash)
        (g$12075$XcRv& core-prim . reverse!)
        (g$12074$XcRv& core-prim . make-promise)
        (g$11916$XcRv& core-prim . load/args)
        (g$7678$XcRv& core-prim . printf)
        (g$7679$XcRv& core-prim . fprintf)
        (g$7680$XcRv& core-prim . format)
        (g$12073$XcRv& core-prim . get-arity)
        (g$12072$XcRv& core-prim . gc-collect)
        (g$12071$XcRv& core-prim . clr-type?)
        (g$12070$XcRv& core-prim . get-clr-type)
        (g$12069$XcRv& core-prim . get-command-line)
        (g$12068$XcRv& core-prim . vector-append)
        (g$12067$XcRv& core-prim . vector-filter)
        (g$12066$XcRv& core-prim . vector-reverse!)
        (g$12065$XcRv& core-prim . vector-contains?)
        (g$12064$XcRv& core-prim . vector-index-of)
        (g$12063$XcRv& core-prim . vector-copy)
        (g$12062$XcRv& core-prim . vector-binary-search)
        (g$12061$XcRv& core-prim . get-output-string)
        (g$12060$XcRv& core-prim . open-output-string)
        (g$12059$XcRv& core-prim . open-input-string)
        (g$12058$XcRv& core-prim . string-format)
        (g$11913$XcRv& core-prim . trace-printer)
        (g$12057$XcRv& core-prim . make-traced-procedure)
        (g$7699$XcRv& core-prim . make-traced-macro)
        (g$12056$XcRv& core-prim . pmap)
        (g$12055$XcRv& core-prim . time-it)
        (g$7704$XcRv& core-prim . make-parameter)
        (g$12054$XcRv& core-prim . library-locator)
        (g$12053$XcRv& core-prim . get-library-paths)
        (g$8960$XcRv& core-prim . environment-symbols)
        (g$8959$XcRv& core-prim . interaction-environment-symbols)
        (g$8129$XcRv& core-prim . library-path)
        (g$8130$XcRv& core-prim . library-extensions)
        (g$8150$XcRv& core-prim . installed-libraries)
        (g$8965$XcRv& core-prim . expand)
        (g$12052$XcRv& $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12051$XcRv& $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12050$XcRv& $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12049$XcRv& $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12048$XcRv& $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12047$XcRv&
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12046$XcRv&
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12045$XcRv&
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12044$XcRv&
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12043$XcRv& $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12042$XcRv&
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12041$XcRv& $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12040$XcRv& $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12039$XcRv& $core-rtd &i/o-rtd &i/o-rcd)
        (g$12038$XcRv& $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12037$XcRv& $core-rtd &undefined-rtd &undefined-rcd)
        (g$12036$XcRv& $core-rtd &syntax-rtd &syntax-rcd)
        (g$12035$XcRv& $core-rtd &lexical-rtd &lexical-rcd)
        (g$12034$XcRv&
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12033$XcRv& $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12032$XcRv& $core-rtd &who-rtd &who-rcd)
        (g$12031$XcRv& $core-rtd &irritants-rtd &irritants-rcd)
        (g$12030$XcRv& $core-rtd &assertion-rtd &assertion-rcd)
        (g$12029$XcRv& $core-rtd &violation-rtd &violation-rcd)
        (g$12028$XcRv& $core-rtd &error-rtd &error-rcd)
        (g$12027$XcRv& $core-rtd &serious-rtd &serious-rcd)
        (g$12026$XcRv& $core-rtd &warning-rtd &warning-rcd)
        (g$12025$XcRv& $core-rtd &message-rtd &message-rcd)
        (g$12024$XcRv& $core-rtd &condition-rtd &condition-rcd)
        (g$12023$XcRv& macro . define-condition-type)
        (g$12022$XcRv& macro . define-enumeration)
        (g$12021$XcRv& macro . define-record-type)
        (g$12020$XcRv& macro . parent-rtd)
        (g$12019$XcRv& macro . nongenerative)
        (g$12018$XcRv& macro . opaque)
        (g$12017$XcRv& macro . sealed)
        (g$12016$XcRv& macro . protocol)
        (g$12015$XcRv& macro . parent)
        (g$12014$XcRv& macro . immutable)
        (g$12013$XcRv& macro . mutable)
        (g$12012$XcRv& macro . fields)
        (g$12011$XcRv& macro . error-handling-mode)
        (g$12010$XcRv& macro . file-options)
        (g$12009$XcRv& macro . buffer-mode)
        (g$12008$XcRv& macro . eol-style)
        (g$12007$XcRv& macro . guard)
        (g$12006$XcRv& macro . trace-letrec-syntax)
        (g$12005$XcRv& macro . trace-let-syntax)
        (g$12004$XcRv& macro . trace-define-syntax)
        (g$12003$XcRv& macro . trace-define)
        (g$12002$XcRv& macro . trace-lambda)
        (g$12001$XcRv& macro . unsyntax-splicing)
        (g$12000$XcRv& macro . unsyntax)
        (g$11999$XcRv& macro . unquote-splicing)
        (g$11998$XcRv& macro . unquote)
        (g$11997$XcRv& macro . _)
        (g$11996$XcRv& macro . else)
        (g$11995$XcRv& macro . =>)
        (g$11994$XcRv& macro . ...)
        (g$11993$XcRv& macro . assert)
        (g$11992$XcRv& macro . endianness)
        (g$11991$XcRv& macro . delay)
        (g$11990$XcRv& macro . time)
        (g$11989$XcRv& macro . or)
        (g$11988$XcRv& macro . and)
        (g$11987$XcRv& macro . do)
        (g$11986$XcRv& macro . cond)
        (g$11985$XcRv& macro . let*)
        (g$11984$XcRv& macro . let)
        (g$11983$XcRv& macro . identifier-syntax)
        (g$11982$XcRv& macro . with-syntax)
        (g$11981$XcRv& macro . quasisyntax)
        (g$11980$XcRv& macro . quasiquote)
        (g$11979$XcRv& macro . syntax-rules)
        (g$11978$XcRv& macro . include-into)
        (g$11977$XcRv& macro . include)
        (g$11976$XcRv& macro . define-struct)
        (g$11975$XcRv& macro . let-values)
        (g$11974$XcRv& macro . let*-values)
        (g$11973$XcRv& core-macro . record-constructor-descriptor)
        (g$11972$XcRv& core-macro . record-type-descriptor)
        (g$11971$XcRv& core-macro . fluid-let-syntax)
        (g$11970$XcRv& core-macro . case)
        (g$11969$XcRv& core-macro . parameterize)
        (g$11968$XcRv& core-macro . unless)
        (g$11967$XcRv& core-macro . when)
        (g$11966$XcRv& core-macro . if)
        (g$11965$XcRv& core-macro . letrec*)
        (g$11964$XcRv& core-macro . letrec)
        (g$11963$XcRv& core-macro . type-descriptor)
        (g$11962$XcRv& core-macro . case-lambda)
        (g$11961$XcRv& core-macro . lambda)
        (g$11960$XcRv& core-macro . syntax)
        (g$11959$XcRv& core-macro . syntax-case)
        (g$11958$XcRv& core-macro . quote)
        (g$11957$XcRv& core-macro . foreign-call)
        (g$11956$XcRv& letrec-syntax)
        (g$11955$XcRv& let-syntax)
        (g$11954$XcRv& set!)
        (g$11953$XcRv& import)
        (g$11952$XcRv& library)
        (g$11951$XcRv& begin)
        (g$11950$XcRv& module)
        (g$11949$XcRv& define-syntax)
        (g$11948$XcRv& define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7557$XcRv&
      'g$12629$XcRv&
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12508$XcRv&)
        (eval-core . g$12507$XcRv&)
        (set-symbol-value! . g$12506$XcRv&)
        (symbol-value . g$12505$XcRv&)
        (gensym . g$12503$XcRv&)
        (void . g$12502$XcRv&))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11586$XcRv&
     g$trace-printer$11625$XcRv&
     (g$make-parameter$7012$XcRv& write))
   (g$command-line$11587$XcRv&
     g$command-line$11626$XcRv&
     (g$make-parameter$7012$XcRv& (get-command-line)))
   (g$local-library-path$11588$XcRv&
     g$local-library-path$11627$XcRv&
     (case-lambda
       ((g$filename$11598$XcRv&)
        (cons
          (g$get-directory-name$5905$XcRv& g$filename$11598$XcRv&)
          (g$library-path$7541$XcRv&)))))
   (g$load/args$11589$XcRv&
     g$load/args$11628$XcRv&
     (case-lambda
       ((g$filename$11599$XcRv& . g$args$11600$XcRv&)
        (begin
          (apply
            g$load-r6rs-top-level$11596$XcRv&
            g$filename$11599$XcRv&
            'load
            g$args$11600$XcRv&)
          (void)))))
   (g$load$11590$XcRv&
     g$load$11629$XcRv&
     (case-lambda
       ((g$filename$11601$XcRv&)
        (begin
          (apply
            g$load-r6rs-top-level$11596$XcRv&
            g$filename$11601$XcRv&
            'load
            (cdr (g$command-line$11587$XcRv&)))
          (void)))))
   (g$ironscheme-build$11591$XcRv&
     g$ironscheme-build$11630$XcRv&
     (case-lambda (() (g$load$11590$XcRv& '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11592$XcRv&
     g$eval-top-level$11631$XcRv&
     (case-lambda
       ((g$x$11602$XcRv&)
        (g$eval$11564$XcRv&
          g$x$11602$XcRv&
          (g$interaction-environment$11584$XcRv&)))))
   (g$compile-system-libraries$11593$XcRv&
     g$compile-system-libraries$11632$XcRv&
     (case-lambda
       (()
        (g$eval-top-level$11592$XcRv&
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11594$XcRv&
     g$compile$11633$XcRv&
     (case-lambda
       ((g$filename$11603$XcRv&)
        (g$load-r6rs-top-level$11596$XcRv& g$filename$11603$XcRv& 'compile))))
   (g$compile->closure$11595$XcRv&
     g$compile->closure$11634$XcRv&
     (case-lambda
       ((g$filename$11604$XcRv&)
        (g$load-r6rs-top-level$11596$XcRv& g$filename$11604$XcRv& 'closure))))
   (g$load-r6rs-top-level$11596$XcRv&
     g$load-r6rs-top-level$11635$XcRv&
     (case-lambda
       ((g$filename$11605$XcRv& g$how$11606$XcRv& . g$args$11607$XcRv&)
        ((case-lambda
           ((g$library-path$11610$XcRv& g$library-path$11611$XcRv&)
            ((case-lambda
               ((g$swap$11612$XcRv&)
                (dynamic-wind
                  g$swap$11612$XcRv&
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11613$XcRv&)
                         ((case-lambda
                            ((g$t$11614$XcRv&)
                             (if (eqv? g$t$11614$XcRv& 'closure)
                               (g$pre-compile-r6rs-top-level$11583$XcRv&
                                 g$x*$11613$XcRv&)
                               (if (eqv? g$t$11614$XcRv& 'load)
                                 ((case-lambda
                                    ((g$command-line$11617$XcRv&
                                       g$command-line$11618$XcRv&)
                                     ((case-lambda
                                        ((g$swap$11619$XcRv&)
                                         (dynamic-wind
                                           g$swap$11619$XcRv&
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11582$XcRv&
                                                 g$x*$11613$XcRv&))))
                                           g$swap$11619$XcRv&)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11620$XcRv&)
                                             (begin
                                               (g$command-line$11617$XcRv&
                                                 g$command-line$11618$XcRv&)
                                               (set! g$command-line$11618$XcRv&
                                                 g$t$11620$XcRv&))))
                                          (g$command-line$11617$XcRv&)))))))
                                  g$command-line$11587$XcRv&
                                  (cons
                                    g$filename$11605$XcRv&
                                    (map (case-lambda
                                           ((g$x$11621$XcRv&)
                                            (g$format$6928$XcRv&
                                              '"~a"
                                              g$x$11621$XcRv&)))
                                         g$args$11607$XcRv&)))
                                 (if (eqv? g$t$11614$XcRv& 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$11582$XcRv&
                                       g$x*$11613$XcRv&)
                                     (g$serialize-all$7545$XcRv&
                                       serialize-library
                                       g$compile-core-expr$7259$XcRv&))
                                   (void))))))
                          g$how$11606$XcRv&)))
                      (with-input-from-file
                        g$filename$11605$XcRv&
                        (case-lambda
                          (()
                           ((letrec ((g$f$11622$XcRv&
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11623$XcRv&)
                                              (if (eof-object? g$x$11623$XcRv&)
                                                '()
                                                (cons
                                                  g$x$11623$XcRv&
                                                  (g$f$11622$XcRv&)))))
                                           (read-annotated))))))
                              g$f$11622$XcRv&))))))))
                  g$swap$11612$XcRv&)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11624$XcRv&)
                    (begin
                      (g$library-path$11610$XcRv& g$library-path$11611$XcRv&)
                      (set! g$library-path$11611$XcRv& g$t$11624$XcRv&))))
                 (g$library-path$11610$XcRv&)))))))
         g$library-path$7541$XcRv&
         (g$local-library-path$11588$XcRv& g$filename$11605$XcRv&))))))
  (begin
    (g$current-precompiled-library-loader$7546$XcRv&
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11597$XcRv&)
         (if (g$serious-condition?$6288$XcRv& g$ex$11597$XcRv&)
           (raise g$ex$11597$XcRv&)
           (begin (display g$ex$11597$XcRv&) (newline))))))
    (set-symbol-value! 'load g$load$11590$XcRv&)
    (set-symbol-value! 'compile g$compile$11594$XcRv&)
    (set-symbol-value! 'compile->closure g$compile->closure$11595$XcRv&)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11592$XcRv&)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11557$XcRv&)
    (set-symbol-value! 'expanded2core g$expanded->core$7258$XcRv&)
    (set-symbol-value! 'trace-printer g$trace-printer$11586$XcRv&)
    (g$library-path$7541$XcRv& (get-library-paths))))

