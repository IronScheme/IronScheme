;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$4823$PT8AO
     g$caar$4895$PT8AO
     (case-lambda ((g$x$4854$PT8AO) (car (car g$x$4854$PT8AO)))))
   (g$cadr$4824$PT8AO
     g$cadr$4896$PT8AO
     (case-lambda ((g$x$4855$PT8AO) (car (cdr g$x$4855$PT8AO)))))
   (g$cdar$4825$PT8AO
     g$cdar$4897$PT8AO
     (case-lambda ((g$x$4856$PT8AO) (cdr (car g$x$4856$PT8AO)))))
   (g$cddr$4826$PT8AO
     g$cddr$4898$PT8AO
     (case-lambda ((g$x$4857$PT8AO) (cdr (cdr g$x$4857$PT8AO)))))
   (g$caaar$4827$PT8AO
     g$caaar$4899$PT8AO
     (case-lambda
       ((g$x$4858$PT8AO) (g$caar$4823$PT8AO (car g$x$4858$PT8AO)))))
   (g$caadr$4828$PT8AO
     g$caadr$4900$PT8AO
     (case-lambda
       ((g$x$4859$PT8AO) (g$caar$4823$PT8AO (cdr g$x$4859$PT8AO)))))
   (g$cadar$4829$PT8AO
     g$cadar$4901$PT8AO
     (case-lambda
       ((g$x$4860$PT8AO) (g$cadr$4824$PT8AO (car g$x$4860$PT8AO)))))
   (g$caddr$4830$PT8AO
     g$caddr$4902$PT8AO
     (case-lambda
       ((g$x$4861$PT8AO) (g$cadr$4824$PT8AO (cdr g$x$4861$PT8AO)))))
   (g$cdaar$4831$PT8AO
     g$cdaar$4903$PT8AO
     (case-lambda
       ((g$x$4862$PT8AO) (g$cdar$4825$PT8AO (car g$x$4862$PT8AO)))))
   (g$cdadr$4832$PT8AO
     g$cdadr$4904$PT8AO
     (case-lambda
       ((g$x$4863$PT8AO) (g$cdar$4825$PT8AO (cdr g$x$4863$PT8AO)))))
   (g$cddar$4833$PT8AO
     g$cddar$4905$PT8AO
     (case-lambda
       ((g$x$4864$PT8AO) (g$cddr$4826$PT8AO (car g$x$4864$PT8AO)))))
   (g$cdddr$4834$PT8AO
     g$cdddr$4906$PT8AO
     (case-lambda
       ((g$x$4865$PT8AO) (g$cddr$4826$PT8AO (cdr g$x$4865$PT8AO)))))
   (g$caaaar$4835$PT8AO
     g$caaaar$4907$PT8AO
     (case-lambda
       ((g$x$4866$PT8AO) (g$caaar$4827$PT8AO (car g$x$4866$PT8AO)))))
   (g$caaadr$4836$PT8AO
     g$caaadr$4908$PT8AO
     (case-lambda
       ((g$x$4867$PT8AO) (g$caaar$4827$PT8AO (cdr g$x$4867$PT8AO)))))
   (g$caadar$4837$PT8AO
     g$caadar$4909$PT8AO
     (case-lambda
       ((g$x$4868$PT8AO) (g$caadr$4828$PT8AO (car g$x$4868$PT8AO)))))
   (g$caaddr$4838$PT8AO
     g$caaddr$4910$PT8AO
     (case-lambda
       ((g$x$4869$PT8AO) (g$caadr$4828$PT8AO (cdr g$x$4869$PT8AO)))))
   (g$cadaar$4839$PT8AO
     g$cadaar$4911$PT8AO
     (case-lambda
       ((g$x$4870$PT8AO) (g$cadar$4829$PT8AO (car g$x$4870$PT8AO)))))
   (g$cadadr$4840$PT8AO
     g$cadadr$4912$PT8AO
     (case-lambda
       ((g$x$4871$PT8AO) (g$cadar$4829$PT8AO (cdr g$x$4871$PT8AO)))))
   (g$caddar$4841$PT8AO
     g$caddar$4913$PT8AO
     (case-lambda
       ((g$x$4872$PT8AO) (g$caddr$4830$PT8AO (car g$x$4872$PT8AO)))))
   (g$cadddr$4842$PT8AO
     g$cadddr$4914$PT8AO
     (case-lambda
       ((g$x$4873$PT8AO) (g$caddr$4830$PT8AO (cdr g$x$4873$PT8AO)))))
   (g$cdaaar$4843$PT8AO
     g$cdaaar$4915$PT8AO
     (case-lambda
       ((g$x$4874$PT8AO) (g$cdaar$4831$PT8AO (car g$x$4874$PT8AO)))))
   (g$cdaadr$4844$PT8AO
     g$cdaadr$4916$PT8AO
     (case-lambda
       ((g$x$4875$PT8AO) (g$cdaar$4831$PT8AO (cdr g$x$4875$PT8AO)))))
   (g$cdadar$4845$PT8AO
     g$cdadar$4917$PT8AO
     (case-lambda
       ((g$x$4876$PT8AO) (g$cdadr$4832$PT8AO (car g$x$4876$PT8AO)))))
   (g$cdaddr$4846$PT8AO
     g$cdaddr$4918$PT8AO
     (case-lambda
       ((g$x$4877$PT8AO) (g$cdadr$4832$PT8AO (cdr g$x$4877$PT8AO)))))
   (g$cddaar$4847$PT8AO
     g$cddaar$4919$PT8AO
     (case-lambda
       ((g$x$4878$PT8AO) (g$cddar$4833$PT8AO (car g$x$4878$PT8AO)))))
   (g$cddadr$4848$PT8AO
     g$cddadr$4920$PT8AO
     (case-lambda
       ((g$x$4879$PT8AO) (g$cddar$4833$PT8AO (cdr g$x$4879$PT8AO)))))
   (g$cdddar$4849$PT8AO
     g$cdddar$4921$PT8AO
     (case-lambda
       ((g$x$4880$PT8AO) (g$cdddr$4834$PT8AO (car g$x$4880$PT8AO)))))
   (g$cddddr$4850$PT8AO
     g$cddddr$4922$PT8AO
     (case-lambda
       ((g$x$4881$PT8AO) (g$cdddr$4834$PT8AO (cdr g$x$4881$PT8AO)))))
   (g$rationalize$4851$PT8AO
     g$rationalize$4923$PT8AO
     (case-lambda
       ((g$x$4882$PT8AO g$e$4883$PT8AO)
        (apply / (g$find-ratio$4852$PT8AO g$x$4882$PT8AO g$e$4883$PT8AO)))))
   (g$find-ratio$4852$PT8AO
     g$find-ratio$4924$PT8AO
     (case-lambda
       ((g$x$4884$PT8AO g$e$4885$PT8AO)
        (g$find-ratio-between$4853$PT8AO
          (- g$x$4884$PT8AO g$e$4885$PT8AO)
          (+ g$x$4884$PT8AO g$e$4885$PT8AO)))))
   (g$find-ratio-between$4853$PT8AO
     g$find-ratio-between$4925$PT8AO
     (case-lambda
       ((g$x$4886$PT8AO g$y$4887$PT8AO)
        (letrec* ((g$sr$4888$PT8AO
                    (case-lambda
                      ((g$x$4890$PT8AO g$y$4891$PT8AO)
                       ((case-lambda
                          ((g$fx$4892$PT8AO g$fy$4893$PT8AO)
                           (if (>= g$fx$4892$PT8AO g$x$4890$PT8AO)
                             (list g$fx$4892$PT8AO '1)
                             (if (= g$fx$4892$PT8AO g$fy$4893$PT8AO)
                               ((case-lambda
                                  ((g$rat$4894$PT8AO)
                                   (list
                                     (+ (g$cadr$4824$PT8AO g$rat$4894$PT8AO)
                                        (* g$fx$4892$PT8AO
                                           (car g$rat$4894$PT8AO)))
                                     (car g$rat$4894$PT8AO))))
                                (g$sr$4888$PT8AO
                                  (/ (- g$y$4891$PT8AO g$fy$4893$PT8AO))
                                  (/ (- g$x$4890$PT8AO g$fx$4892$PT8AO))))
                               (list (+ '1 g$fx$4892$PT8AO) '1)))))
                        (exact (floor g$x$4890$PT8AO))
                        (exact (floor g$y$4891$PT8AO)))))))
          (if (< g$y$4887$PT8AO g$x$4886$PT8AO)
            (g$find-ratio-between$4853$PT8AO g$y$4887$PT8AO g$x$4886$PT8AO)
            (if (>= g$x$4886$PT8AO g$y$4887$PT8AO)
              (list g$x$4886$PT8AO '1)
              (if (positive? g$x$4886$PT8AO)
                (g$sr$4888$PT8AO g$x$4886$PT8AO g$y$4887$PT8AO)
                (if (negative? g$y$4887$PT8AO)
                  ((case-lambda
                     ((g$rat$4889$PT8AO)
                      (list
                        (- (car g$rat$4889$PT8AO))
                        (g$cadr$4824$PT8AO g$rat$4889$PT8AO))))
                   (g$sr$4888$PT8AO (- g$y$4887$PT8AO) (- g$x$4886$PT8AO)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5121$PT8AO g$using$5156$PT8AO (clr-using-internal 'system))
   (g$using$5123$PT8AO
     g$using$5157$PT8AO
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5124$PT8AO
     g$make-eq-hashtable$5158$PT8AO
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5135$PT8AO)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5135$PT8AO)))))
   (g$make-eqv-hashtable$5125$PT8AO
     g$make-eqv-hashtable$5159$PT8AO
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5136$PT8AO) (make-hashtable eqv-hash eqv? g$k$5136$PT8AO))))
   (g$hashtable-size$5126$PT8AO
     g$hashtable-size$5160$PT8AO
     (case-lambda
       ((g$ht$5137$PT8AO)
        (clr-call-internal 'hashtable 'get_count g$ht$5137$PT8AO))))
   (g$hashtable-ref$5127$PT8AO
     g$hashtable-ref$5161$PT8AO
     (case-lambda
       ((g$ht$5138$PT8AO g$key$5139$PT8AO g$default$5140$PT8AO)
        (letrec* ((g$r$5141$PT8AO
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5138$PT8AO
                      g$key$5139$PT8AO)))
          (if (not (null? g$r$5141$PT8AO))
            g$r$5141$PT8AO
            g$default$5140$PT8AO)))))
   (g$hashtable-set!$5128$PT8AO
     g$hashtable-set!$5162$PT8AO
     (case-lambda
       ((g$ht$5142$PT8AO g$key$5143$PT8AO g$obj$5144$PT8AO)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5142$PT8AO
          g$key$5143$PT8AO
          g$obj$5144$PT8AO))))
   (g$hashtable-delete!$5129$PT8AO
     g$hashtable-delete!$5163$PT8AO
     (case-lambda
       ((g$ht$5145$PT8AO g$key$5146$PT8AO)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5145$PT8AO
          g$key$5146$PT8AO))))
   (g$hashtable-contains?$5130$PT8AO
     g$hashtable-contains?$5164$PT8AO
     (case-lambda
       ((g$ht$5147$PT8AO g$key$5148$PT8AO)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5147$PT8AO
          g$key$5148$PT8AO))))
   (g$hashtable-update!$5131$PT8AO
     g$hashtable-update!$5165$PT8AO
     (case-lambda
       ((g$ht$5149$PT8AO
          g$key$5150$PT8AO
          g$proc$5151$PT8AO
          g$default$5152$PT8AO)
        (g$hashtable-set!$5128$PT8AO
          g$ht$5149$PT8AO
          g$key$5150$PT8AO
          (g$proc$5151$PT8AO
            (g$hashtable-ref$5127$PT8AO
              g$ht$5149$PT8AO
              g$key$5150$PT8AO
              g$default$5152$PT8AO))))))
   (g$hashtable-clear!$5132$PT8AO
     g$hashtable-clear!$5166$PT8AO
     (case-lambda
       ((g$ht$5153$PT8AO)
        (clr-call-internal 'hashtable 'clear g$ht$5153$PT8AO))
       ((g$ht$5154$PT8AO g$k$5155$PT8AO)
        (clr-call-internal 'hashtable 'clear g$ht$5154$PT8AO))))
   (g$clear-usings$5134$PT8AO
     g$clear-usings$5167$PT8AO
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5169$PT8AO g$using$5235$PT8AO (clr-using-internal 'system.io))
   (g$file-exists?$5170$PT8AO
     g$file-exists?$5236$PT8AO
     (case-lambda
       ((g$fn$5198$PT8AO)
        (clr-call-internal 'file 'exists '() g$fn$5198$PT8AO))))
   (g$delete-file$5171$PT8AO
     g$delete-file$5237$PT8AO
     (case-lambda
       ((g$fn$5199$PT8AO)
        (clr-call-internal 'file 'delete '() g$fn$5199$PT8AO))))
   (g$file-copy$5172$PT8AO
     g$file-copy$5238$PT8AO
     (case-lambda
       ((g$from$5200$PT8AO g$to$5201$PT8AO)
        (g$file-copy$5172$PT8AO g$from$5200$PT8AO g$to$5201$PT8AO '#f))
       ((g$from$5202$PT8AO g$to$5203$PT8AO g$overwrite?$5204$PT8AO)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5202$PT8AO
          g$to$5203$PT8AO
          g$overwrite?$5204$PT8AO))))
   (g$file-move$5173$PT8AO
     g$file-move$5239$PT8AO
     (case-lambda
       ((g$from$5205$PT8AO g$to$5206$PT8AO)
        (clr-call-internal 'file 'move '() g$from$5205$PT8AO g$to$5206$PT8AO))))
   (g$file-create-time$5174$PT8AO
     g$file-create-time$5240$PT8AO
     (case-lambda
       ((g$fn$5207$PT8AO)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5207$PT8AO))))
   (g$file-access-time$5175$PT8AO
     g$file-access-time$5241$PT8AO
     (case-lambda
       ((g$fn$5208$PT8AO)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5208$PT8AO))))
   (g$file-modified-time$5176$PT8AO
     g$file-modified-time$5242$PT8AO
     (case-lambda
       ((g$fn$5209$PT8AO)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5209$PT8AO))))
   (g$directory-exists?$5177$PT8AO
     g$directory-exists?$5243$PT8AO
     (case-lambda
       ((g$fn$5210$PT8AO)
        (clr-call-internal 'directory 'exists '() g$fn$5210$PT8AO))))
   (g$delete-directory$5178$PT8AO
     g$delete-directory$5244$PT8AO
     (case-lambda
       ((g$dir$5211$PT8AO)
        (g$delete-directory$5178$PT8AO g$dir$5211$PT8AO '#f))
       ((g$dir$5212$PT8AO g$recursive?$5213$PT8AO)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5212$PT8AO
          g$recursive?$5213$PT8AO))))
   (g$directory-move$5179$PT8AO
     g$directory-move$5245$PT8AO
     (case-lambda
       ((g$from$5214$PT8AO g$to$5215$PT8AO)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5214$PT8AO
          g$to$5215$PT8AO))))
   (g$create-directory$5180$PT8AO
     g$create-directory$5246$PT8AO
     (case-lambda
       ((g$name$5216$PT8AO)
        (clr-call-internal 'directory 'createdirectory '() g$name$5216$PT8AO))))
   (g$get-files$5181$PT8AO
     g$get-files$5247$PT8AO
     (case-lambda
       ((g$dir$5217$PT8AO) (g$get-files$5181$PT8AO g$dir$5217$PT8AO '"*"))
       ((g$dir$5218$PT8AO g$pattern$5219$PT8AO)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5218$PT8AO
          g$pattern$5219$PT8AO))))
   (g$get-directories$5182$PT8AO
     g$get-directories$5248$PT8AO
     (case-lambda
       ((g$dir$5220$PT8AO)
        (g$get-directories$5182$PT8AO g$dir$5220$PT8AO '"*"))
       ((g$dir$5221$PT8AO g$pattern$5222$PT8AO)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5221$PT8AO
          g$pattern$5222$PT8AO))))
   (g$change-extension$5183$PT8AO
     g$change-extension$5249$PT8AO
     (case-lambda
       ((g$path$5223$PT8AO g$extension$5224$PT8AO)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5223$PT8AO
          g$extension$5224$PT8AO))))
   (g$path-combine$5184$PT8AO
     g$path-combine$5250$PT8AO
     (case-lambda
       ((g$path1$5225$PT8AO g$path2$5226$PT8AO)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5225$PT8AO
          g$path2$5226$PT8AO))))
   (g$get-directory-name$5185$PT8AO
     g$get-directory-name$5251$PT8AO
     (case-lambda
       ((g$path$5227$PT8AO)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5227$PT8AO))))
   (g$get-extension$5186$PT8AO
     g$get-extension$5252$PT8AO
     (case-lambda
       ((g$path$5228$PT8AO)
        (clr-call-internal 'path 'getextension '() g$path$5228$PT8AO))))
   (g$get-filename$5187$PT8AO
     g$get-filename$5253$PT8AO
     (case-lambda
       ((g$path$5229$PT8AO)
        (clr-call-internal 'path 'getfilename '() g$path$5229$PT8AO))))
   (g$get-filename-without-extension$5188$PT8AO
     g$get-filename-without-extension$5254$PT8AO
     (case-lambda
       ((g$path$5230$PT8AO)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5230$PT8AO))))
   (g$get-full-path$5189$PT8AO
     g$get-full-path$5255$PT8AO
     (case-lambda
       ((g$path$5231$PT8AO)
        (clr-call-internal 'path 'getfullpath '() g$path$5231$PT8AO))))
   (g$get-path-root$5190$PT8AO
     g$get-path-root$5256$PT8AO
     (case-lambda
       ((g$path$5232$PT8AO)
        (clr-call-internal 'path 'getpathroot '() g$path$5232$PT8AO))))
   (g$get-random-filename$5191$PT8AO
     g$get-random-filename$5257$PT8AO
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5192$PT8AO
     g$get-temp-filename$5258$PT8AO
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5193$PT8AO
     g$get-temp-path$5259$PT8AO
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5194$PT8AO
     g$path-rooted?$5260$PT8AO
     (case-lambda
       ((g$path$5233$PT8AO)
        (clr-call-internal 'path 'ispathrooted '() g$path$5233$PT8AO))))
   (g$path-has-extension?$5195$PT8AO
     g$path-has-extension?$5261$PT8AO
     (case-lambda
       ((g$path$5234$PT8AO)
        (clr-call-internal 'path 'hasextension '() g$path$5234$PT8AO))))
   (g$clear-usings$5197$PT8AO
     g$clear-usings$5262$PT8AO
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5263$PT8AO
     g$find$5354$PT8AO
     (case-lambda
       ((g$proc$5282$PT8AO g$l$5283$PT8AO)
        (if (null? g$l$5283$PT8AO)
          '#f
          ((case-lambda
             ((g$e$5284$PT8AO)
              (if (g$proc$5282$PT8AO g$e$5284$PT8AO)
                g$e$5284$PT8AO
                (g$find$5263$PT8AO g$proc$5282$PT8AO (cdr g$l$5283$PT8AO)))))
           (car g$l$5283$PT8AO))))))
   (g$partition$5264$PT8AO
     g$partition$5355$PT8AO
     (case-lambda
       ((g$proc$5285$PT8AO g$l$5286$PT8AO)
        ((letrec ((g$f$5287$PT8AO
                    (case-lambda
                      ((g$l$5288$PT8AO g$a$5289$PT8AO g$b$5290$PT8AO)
                       (if (null? g$l$5288$PT8AO)
                         (values
                           (reverse! g$a$5289$PT8AO)
                           (reverse! g$b$5290$PT8AO))
                         ((case-lambda
                            ((g$e$5291$PT8AO)
                             (if (g$proc$5285$PT8AO g$e$5291$PT8AO)
                               (g$f$5287$PT8AO
                                 (cdr g$l$5288$PT8AO)
                                 (cons g$e$5291$PT8AO g$a$5289$PT8AO)
                                 g$b$5290$PT8AO)
                               (g$f$5287$PT8AO
                                 (cdr g$l$5288$PT8AO)
                                 g$a$5289$PT8AO
                                 (cons g$e$5291$PT8AO g$b$5290$PT8AO)))))
                          (car g$l$5288$PT8AO)))))))
           g$f$5287$PT8AO)
         g$l$5286$PT8AO
         '()
         '()))))
   (g$remp$5265$PT8AO
     g$remp$5356$PT8AO
     (case-lambda
       ((g$proc$5292$PT8AO g$l$5293$PT8AO)
        ((letrec ((g$f$5294$PT8AO
                    (case-lambda
                      ((g$l$5295$PT8AO g$a$5296$PT8AO)
                       (if (null? g$l$5295$PT8AO)
                         (reverse! g$a$5296$PT8AO)
                         ((case-lambda
                            ((g$e$5297$PT8AO)
                             (if (g$proc$5292$PT8AO g$e$5297$PT8AO)
                               (g$f$5294$PT8AO
                                 (cdr g$l$5295$PT8AO)
                                 g$a$5296$PT8AO)
                               (g$f$5294$PT8AO
                                 (cdr g$l$5295$PT8AO)
                                 (cons g$e$5297$PT8AO g$a$5296$PT8AO)))))
                          (car g$l$5295$PT8AO)))))))
           g$f$5294$PT8AO)
         g$l$5293$PT8AO
         '()))))
   (g$filter$5266$PT8AO
     g$filter$5357$PT8AO
     (case-lambda
       ((g$proc$5298$PT8AO g$l$5299$PT8AO)
        ((letrec ((g$f$5300$PT8AO
                    (case-lambda
                      ((g$l$5301$PT8AO g$a$5302$PT8AO)
                       (if (null? g$l$5301$PT8AO)
                         (reverse! g$a$5302$PT8AO)
                         ((case-lambda
                            ((g$e$5303$PT8AO)
                             (if (g$proc$5298$PT8AO g$e$5303$PT8AO)
                               (g$f$5300$PT8AO
                                 (cdr g$l$5301$PT8AO)
                                 (cons g$e$5303$PT8AO g$a$5302$PT8AO))
                               (g$f$5300$PT8AO
                                 (cdr g$l$5301$PT8AO)
                                 g$a$5302$PT8AO))))
                          (car g$l$5301$PT8AO)))))))
           g$f$5300$PT8AO)
         g$l$5299$PT8AO
         '()))))
   (g$assv$5267$PT8AO
     g$assv$5358$PT8AO
     (case-lambda
       ((g$obj$5304$PT8AO g$lst$5305$PT8AO)
        (if (null? g$lst$5305$PT8AO)
          '#f
          ((case-lambda
             ((g$c$5306$PT8AO)
              (if (eqv? g$obj$5304$PT8AO (car g$c$5306$PT8AO))
                g$c$5306$PT8AO
                (g$assv$5267$PT8AO g$obj$5304$PT8AO (cdr g$lst$5305$PT8AO)))))
           (car g$lst$5305$PT8AO))))))
   (g$assoc$5268$PT8AO
     g$assoc$5359$PT8AO
     (case-lambda
       ((g$obj$5307$PT8AO g$lst$5308$PT8AO)
        (if (null? g$lst$5308$PT8AO)
          '#f
          ((case-lambda
             ((g$c$5309$PT8AO)
              (if (equal? g$obj$5307$PT8AO (car g$c$5309$PT8AO))
                g$c$5309$PT8AO
                (g$assoc$5268$PT8AO g$obj$5307$PT8AO (cdr g$lst$5308$PT8AO)))))
           (car g$lst$5308$PT8AO))))))
   (g$assp$5269$PT8AO
     g$assp$5360$PT8AO
     (case-lambda
       ((g$p?$5310$PT8AO g$lst$5311$PT8AO)
        (if (null? g$lst$5311$PT8AO)
          '#f
          ((case-lambda
             ((g$c$5312$PT8AO)
              (if (g$p?$5310$PT8AO (car g$c$5312$PT8AO))
                g$c$5312$PT8AO
                (g$assp$5269$PT8AO g$p?$5310$PT8AO (cdr g$lst$5311$PT8AO)))))
           (car g$lst$5311$PT8AO))))))
   (g$member$5270$PT8AO
     g$member$5361$PT8AO
     (case-lambda
       ((g$obj$5313$PT8AO g$lst$5314$PT8AO)
        (if (null? g$lst$5314$PT8AO)
          '#f
          (if (equal? g$obj$5313$PT8AO (car g$lst$5314$PT8AO))
            g$lst$5314$PT8AO
            (g$member$5270$PT8AO g$obj$5313$PT8AO (cdr g$lst$5314$PT8AO)))))))
   (g$memp$5271$PT8AO
     g$memp$5362$PT8AO
     (case-lambda
       ((g$p?$5315$PT8AO g$lst$5316$PT8AO)
        (if (null? g$lst$5316$PT8AO)
          '#f
          (if (g$p?$5315$PT8AO (car g$lst$5316$PT8AO))
            g$lst$5316$PT8AO
            (g$memp$5271$PT8AO g$p?$5315$PT8AO (cdr g$lst$5316$PT8AO)))))))
   (g$all-empty?$5272$PT8AO
     g$all-empty?$5363$PT8AO
     (case-lambda
       ((g$ls$5317$PT8AO)
        ((case-lambda
           ((g$t$5318$PT8AO)
            (if g$t$5318$PT8AO
              g$t$5318$PT8AO
              (begin
                '#f
                (if (null? (car g$ls$5317$PT8AO))
                  (begin '#f (g$all-empty?$5272$PT8AO (cdr g$ls$5317$PT8AO)))
                  '#f)))))
         (null? g$ls$5317$PT8AO)))))
   (g$split$5273$PT8AO
     g$split$5364$PT8AO
     (case-lambda
       ((g$ls$5319$PT8AO)
        (if (null? g$ls$5319$PT8AO)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5273$PT8AO (cdr g$ls$5319$PT8AO))))
            (case-lambda
              ((g$cars$5320$PT8AO g$cdrs$5321$PT8AO)
               ((case-lambda
                  ((g$a$5322$PT8AO)
                   (values
                     (cons (car g$a$5322$PT8AO) g$cars$5320$PT8AO)
                     (cons (cdr g$a$5322$PT8AO) g$cdrs$5321$PT8AO))))
                (car g$ls$5319$PT8AO)))))))))
   (g$for-all$5274$PT8AO
     g$for-all$5365$PT8AO
     (case-lambda
       ((g$f$5323$PT8AO . g$args$5324$PT8AO)
        (if (g$all-empty?$5272$PT8AO g$args$5324$PT8AO)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5273$PT8AO g$args$5324$PT8AO)))
            (case-lambda
              ((g$cars$5325$PT8AO g$cdrs$5326$PT8AO)
               (if (apply g$f$5323$PT8AO g$cars$5325$PT8AO)
                 (begin
                   '#f
                   (apply
                     g$for-all$5274$PT8AO
                     g$f$5323$PT8AO
                     g$cdrs$5326$PT8AO))
                 '#f))))))))
   (g$exists$5275$PT8AO
     g$exists$5366$PT8AO
     (case-lambda
       ((g$f$5327$PT8AO . g$args$5328$PT8AO)
        (if (g$all-empty?$5272$PT8AO g$args$5328$PT8AO)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5273$PT8AO g$args$5328$PT8AO)))
            (case-lambda
              ((g$cars$5329$PT8AO g$cdrs$5330$PT8AO)
               ((case-lambda
                  ((g$t$5331$PT8AO)
                   (if g$t$5331$PT8AO
                     g$t$5331$PT8AO
                     (begin
                       '#f
                       (apply
                         g$exists$5275$PT8AO
                         g$f$5327$PT8AO
                         g$cdrs$5330$PT8AO)))))
                (apply g$f$5327$PT8AO g$cars$5329$PT8AO)))))))))
   (g$cons*$5276$PT8AO
     g$cons*$5367$PT8AO
     (case-lambda
       ((g$a$5332$PT8AO . g$rest$5333$PT8AO)
        ((letrec ((g$f$5334$PT8AO
                    (case-lambda
                      ((g$a$5335$PT8AO g$rest$5336$PT8AO)
                       (if (null? g$rest$5336$PT8AO)
                         g$a$5335$PT8AO
                         (cons
                           g$a$5335$PT8AO
                           (g$f$5334$PT8AO
                             (car g$rest$5336$PT8AO)
                             (cdr g$rest$5336$PT8AO))))))))
           g$f$5334$PT8AO)
         g$a$5332$PT8AO
         g$rest$5333$PT8AO))))
   (g$fold-left$5277$PT8AO
     g$fold-left$5368$PT8AO
     (case-lambda
       ((g$combine$5337$PT8AO
          g$nil$5338$PT8AO
          g$list1$5339$PT8AO
          .
          g$lists$5340$PT8AO)
        (if (null? g$list1$5339$PT8AO)
          g$nil$5338$PT8AO
          (apply
            g$fold-left$5277$PT8AO
            (g$cons*$5276$PT8AO
              g$combine$5337$PT8AO
              (apply
                g$combine$5337$PT8AO
                (g$cons*$5276$PT8AO
                  g$nil$5338$PT8AO
                  (car g$list1$5339$PT8AO)
                  (map car g$lists$5340$PT8AO)))
              (cdr g$list1$5339$PT8AO)
              (map cdr g$lists$5340$PT8AO)))))))
   (g$fold-right$5278$PT8AO
     g$fold-right$5369$PT8AO
     (case-lambda
       ((g$combine$5341$PT8AO
          g$nil$5342$PT8AO
          g$list1$5343$PT8AO
          .
          g$lists$5344$PT8AO)
        (if (null? g$list1$5343$PT8AO)
          g$nil$5342$PT8AO
          (apply
            g$combine$5341$PT8AO
            (append
              (list (car g$list1$5343$PT8AO))
              (map car g$lists$5344$PT8AO)
              (list
                (apply
                  g$fold-right$5278$PT8AO
                  (g$cons*$5276$PT8AO
                    g$combine$5341$PT8AO
                    g$nil$5342$PT8AO
                    (cdr g$list1$5343$PT8AO)
                    (map cdr g$lists$5344$PT8AO))))))))))
   (g$remove$5279$PT8AO
     g$remove$5370$PT8AO
     (case-lambda
       ((g$obj$5345$PT8AO g$list$5346$PT8AO)
        (g$remp$5265$PT8AO
          (case-lambda
            ((g$x$5347$PT8AO) (equal? g$obj$5345$PT8AO g$x$5347$PT8AO)))
          g$list$5346$PT8AO))))
   (g$remv$5280$PT8AO
     g$remv$5371$PT8AO
     (case-lambda
       ((g$obj$5348$PT8AO g$list$5349$PT8AO)
        (g$remp$5265$PT8AO
          (case-lambda
            ((g$x$5350$PT8AO) (eqv? g$obj$5348$PT8AO g$x$5350$PT8AO)))
          g$list$5349$PT8AO))))
   (g$remq$5281$PT8AO
     g$remq$5372$PT8AO
     (case-lambda
       ((g$obj$5351$PT8AO g$list$5352$PT8AO)
        (g$remp$5265$PT8AO
          (case-lambda ((g$x$5353$PT8AO) (eq? g$obj$5351$PT8AO g$x$5353$PT8AO)))
          g$list$5352$PT8AO)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5373$PT8AO
     g$native-endianness$5484$PT8AO
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5374$PT8AO
     g$bytevector-u16-ref$5485$PT8AO
     (case-lambda
       ((g$bytevector$5402$PT8AO g$k$5403$PT8AO g$endianness$5404$PT8AO)
        (bytevector-uint-ref
          g$bytevector$5402$PT8AO
          g$k$5403$PT8AO
          g$endianness$5404$PT8AO
          '2))))
   (g$bytevector-s16-ref$5375$PT8AO
     g$bytevector-s16-ref$5486$PT8AO
     (case-lambda
       ((g$bytevector$5405$PT8AO g$k$5406$PT8AO g$endianness$5407$PT8AO)
        (bytevector-sint-ref
          g$bytevector$5405$PT8AO
          g$k$5406$PT8AO
          g$endianness$5407$PT8AO
          '2))))
   (g$bytevector-u16-native-ref$5376$PT8AO
     g$bytevector-u16-native-ref$5487$PT8AO
     (case-lambda
       ((g$bytevector$5408$PT8AO g$k$5409$PT8AO)
        (bytevector-uint-ref
          g$bytevector$5408$PT8AO
          g$k$5409$PT8AO
          (g$native-endianness$5373$PT8AO)
          '2))))
   (g$bytevector-s16-native-ref$5377$PT8AO
     g$bytevector-s16-native-ref$5488$PT8AO
     (case-lambda
       ((g$bytevector$5410$PT8AO g$k$5411$PT8AO)
        (bytevector-sint-ref
          g$bytevector$5410$PT8AO
          g$k$5411$PT8AO
          (g$native-endianness$5373$PT8AO)
          '2))))
   (g$bytevector-u16-set!$5378$PT8AO
     g$bytevector-u16-set!$5489$PT8AO
     (case-lambda
       ((g$bytevector$5412$PT8AO
          g$k$5413$PT8AO
          g$n$5414$PT8AO
          g$endianness$5415$PT8AO)
        (bytevector-uint-ref
          g$bytevector$5412$PT8AO
          g$k$5413$PT8AO
          g$endianness$5415$PT8AO
          '2))))
   (g$bytevector-s16-set!$5379$PT8AO
     g$bytevector-s16-set!$5490$PT8AO
     (case-lambda
       ((g$bytevector$5416$PT8AO
          g$k$5417$PT8AO
          g$n$5418$PT8AO
          g$endianness$5419$PT8AO)
        (bytevector-sint-ref
          g$bytevector$5416$PT8AO
          g$k$5417$PT8AO
          g$endianness$5419$PT8AO
          '2))))
   (g$bytevector-u16-native-set!$5380$PT8AO
     g$bytevector-u16-native-set!$5491$PT8AO
     (case-lambda
       ((g$bytevector$5420$PT8AO g$k$5421$PT8AO g$n$5422$PT8AO)
        (bytevector-uint-ref
          g$bytevector$5420$PT8AO
          g$k$5421$PT8AO
          (g$native-endianness$5373$PT8AO)
          '2))))
   (g$bytevector-s16-native-set!$5381$PT8AO
     g$bytevector-s16-native-set!$5492$PT8AO
     (case-lambda
       ((g$bytevector$5423$PT8AO g$k$5424$PT8AO g$n$5425$PT8AO)
        (bytevector-sint-ref
          g$bytevector$5423$PT8AO
          g$k$5424$PT8AO
          (g$native-endianness$5373$PT8AO)
          '2))))
   (g$bytevector-u32-ref$5382$PT8AO
     g$bytevector-u32-ref$5493$PT8AO
     (case-lambda
       ((g$bytevector$5426$PT8AO g$k$5427$PT8AO g$endianness$5428$PT8AO)
        (bytevector-uint-ref
          g$bytevector$5426$PT8AO
          g$k$5427$PT8AO
          g$endianness$5428$PT8AO
          '4))))
   (g$bytevector-s32-ref$5383$PT8AO
     g$bytevector-s32-ref$5494$PT8AO
     (case-lambda
       ((g$bytevector$5429$PT8AO g$k$5430$PT8AO g$endianness$5431$PT8AO)
        (bytevector-sint-ref
          g$bytevector$5429$PT8AO
          g$k$5430$PT8AO
          g$endianness$5431$PT8AO
          '4))))
   (g$bytevector-u32-native-ref$5384$PT8AO
     g$bytevector-u32-native-ref$5495$PT8AO
     (case-lambda
       ((g$bytevector$5432$PT8AO g$k$5433$PT8AO)
        (bytevector-uint-ref
          g$bytevector$5432$PT8AO
          g$k$5433$PT8AO
          (g$native-endianness$5373$PT8AO)
          '4))))
   (g$bytevector-s32-native-ref$5385$PT8AO
     g$bytevector-s32-native-ref$5496$PT8AO
     (case-lambda
       ((g$bytevector$5434$PT8AO g$k$5435$PT8AO)
        (bytevector-sint-ref
          g$bytevector$5434$PT8AO
          g$k$5435$PT8AO
          (g$native-endianness$5373$PT8AO)
          '4))))
   (g$bytevector-u32-set!$5386$PT8AO
     g$bytevector-u32-set!$5497$PT8AO
     (case-lambda
       ((g$bytevector$5436$PT8AO
          g$k$5437$PT8AO
          g$n$5438$PT8AO
          g$endianness$5439$PT8AO)
        (bytevector-uint-ref
          g$bytevector$5436$PT8AO
          g$k$5437$PT8AO
          g$endianness$5439$PT8AO
          '4))))
   (g$bytevector-s32-set!$5387$PT8AO
     g$bytevector-s32-set!$5498$PT8AO
     (case-lambda
       ((g$bytevector$5440$PT8AO
          g$k$5441$PT8AO
          g$n$5442$PT8AO
          g$endianness$5443$PT8AO)
        (bytevector-sint-ref
          g$bytevector$5440$PT8AO
          g$k$5441$PT8AO
          g$endianness$5443$PT8AO
          '4))))
   (g$bytevector-u32-native-set!$5388$PT8AO
     g$bytevector-u32-native-set!$5499$PT8AO
     (case-lambda
       ((g$bytevector$5444$PT8AO g$k$5445$PT8AO g$n$5446$PT8AO)
        (bytevector-uint-ref
          g$bytevector$5444$PT8AO
          g$k$5445$PT8AO
          (g$native-endianness$5373$PT8AO)
          '4))))
   (g$bytevector-s32-native-set!$5389$PT8AO
     g$bytevector-s32-native-set!$5500$PT8AO
     (case-lambda
       ((g$bytevector$5447$PT8AO g$k$5448$PT8AO g$n$5449$PT8AO)
        (bytevector-sint-ref
          g$bytevector$5447$PT8AO
          g$k$5448$PT8AO
          (g$native-endianness$5373$PT8AO)
          '4))))
   (g$bytevector-u64-ref$5390$PT8AO
     g$bytevector-u64-ref$5501$PT8AO
     (case-lambda
       ((g$bytevector$5450$PT8AO g$k$5451$PT8AO g$endianness$5452$PT8AO)
        (bytevector-uint-ref
          g$bytevector$5450$PT8AO
          g$k$5451$PT8AO
          g$endianness$5452$PT8AO
          '8))))
   (g$bytevector-s64-ref$5391$PT8AO
     g$bytevector-s64-ref$5502$PT8AO
     (case-lambda
       ((g$bytevector$5453$PT8AO g$k$5454$PT8AO g$endianness$5455$PT8AO)
        (bytevector-sint-ref
          g$bytevector$5453$PT8AO
          g$k$5454$PT8AO
          g$endianness$5455$PT8AO
          '8))))
   (g$bytevector-u64-native-ref$5392$PT8AO
     g$bytevector-u64-native-ref$5503$PT8AO
     (case-lambda
       ((g$bytevector$5456$PT8AO g$k$5457$PT8AO)
        (bytevector-uint-ref
          g$bytevector$5456$PT8AO
          g$k$5457$PT8AO
          (g$native-endianness$5373$PT8AO)
          '8))))
   (g$bytevector-s64-native-ref$5393$PT8AO
     g$bytevector-s64-native-ref$5504$PT8AO
     (case-lambda
       ((g$bytevector$5458$PT8AO g$k$5459$PT8AO)
        (bytevector-sint-ref
          g$bytevector$5458$PT8AO
          g$k$5459$PT8AO
          (g$native-endianness$5373$PT8AO)
          '8))))
   (g$bytevector-u64-set!$5394$PT8AO
     g$bytevector-u64-set!$5505$PT8AO
     (case-lambda
       ((g$bytevector$5460$PT8AO
          g$k$5461$PT8AO
          g$n$5462$PT8AO
          g$endianness$5463$PT8AO)
        (bytevector-uint-ref
          g$bytevector$5460$PT8AO
          g$k$5461$PT8AO
          g$endianness$5463$PT8AO
          '8))))
   (g$bytevector-s64-set!$5395$PT8AO
     g$bytevector-s64-set!$5506$PT8AO
     (case-lambda
       ((g$bytevector$5464$PT8AO
          g$k$5465$PT8AO
          g$n$5466$PT8AO
          g$endianness$5467$PT8AO)
        (bytevector-sint-ref
          g$bytevector$5464$PT8AO
          g$k$5465$PT8AO
          g$endianness$5467$PT8AO
          '8))))
   (g$bytevector-u64-native-set!$5396$PT8AO
     g$bytevector-u64-native-set!$5507$PT8AO
     (case-lambda
       ((g$bytevector$5468$PT8AO g$k$5469$PT8AO g$n$5470$PT8AO)
        (bytevector-uint-ref
          g$bytevector$5468$PT8AO
          g$k$5469$PT8AO
          (g$native-endianness$5373$PT8AO)
          '8))))
   (g$bytevector-s64-native-set!$5397$PT8AO
     g$bytevector-s64-native-set!$5508$PT8AO
     (case-lambda
       ((g$bytevector$5471$PT8AO g$k$5472$PT8AO g$n$5473$PT8AO)
        (bytevector-sint-ref
          g$bytevector$5471$PT8AO
          g$k$5472$PT8AO
          (g$native-endianness$5373$PT8AO)
          '8))))
   (g$bytevector-ieee-single-native-ref$5398$PT8AO
     g$bytevector-ieee-single-native-ref$5509$PT8AO
     (case-lambda
       ((g$bytevector$5474$PT8AO g$k$5475$PT8AO)
        (bytevector-ieee-single-ref
          g$bytevector$5474$PT8AO
          g$k$5475$PT8AO
          (g$native-endianness$5373$PT8AO)))))
   (g$bytevector-ieee-double-native-ref$5399$PT8AO
     g$bytevector-ieee-double-native-ref$5510$PT8AO
     (case-lambda
       ((g$bytevector$5476$PT8AO g$k$5477$PT8AO)
        (bytevector-ieee-double-ref
          g$bytevector$5476$PT8AO
          g$k$5477$PT8AO
          (g$native-endianness$5373$PT8AO)))))
   (g$bytevector-ieee-single-native-set!$5400$PT8AO
     g$bytevector-ieee-single-native-set!$5511$PT8AO
     (case-lambda
       ((g$bytevector$5478$PT8AO g$k$5479$PT8AO g$x$5480$PT8AO)
        (bytevector-ieee-single-set!
          g$bytevector$5478$PT8AO
          g$k$5479$PT8AO
          g$x$5480$PT8AO
          (g$native-endianness$5373$PT8AO)))))
   (g$bytevector-ieee-double-native-set!$5401$PT8AO
     g$bytevector-ieee-double-native-set!$5512$PT8AO
     (case-lambda
       ((g$bytevector$5481$PT8AO g$k$5482$PT8AO g$x$5483$PT8AO)
        (bytevector-ieee-double-set!
          g$bytevector$5481$PT8AO
          g$k$5482$PT8AO
          g$x$5483$PT8AO
          (g$native-endianness$5373$PT8AO))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme enums) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6288$5513$PT8AO
     g$6288$5608$PT8AO
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6291$PT8AO
       '#f
       '#f
       '#()))
   (g$6290$5514$PT8AO g$6290$5609$PT8AO '#f)
   (g$6289$5515$PT8AO
     g$6289$5610$PT8AO
     (make-record-constructor-descriptor
       g$6288$5513$PT8AO
       '#f
       g$6290$5514$PT8AO))
   (g$&condition?$5516$PT8AO
     g$&condition?$5611$PT8AO
     (record-predicate g$6288$5513$PT8AO))
   (g$make-&condition$5517$PT8AO
     g$make-&condition$5612$PT8AO
     (record-constructor g$6289$5515$PT8AO))
   (g$&condition-rtd$5518$PT8AO
     g$&condition-rtd$5613$PT8AO
     g$6288$5513$PT8AO)
   (g$&condition-rcd$5519$PT8AO
     g$&condition-rcd$5614$PT8AO
     g$6289$5515$PT8AO)
   (g$6304$5520$PT8AO
     g$6304$5615$PT8AO
     (make-record-type-descriptor
       '&message
       g$6288$5513$PT8AO
       'g$6307$PT8AO
       '#f
       '#f
       '#((immutable message))))
   (g$6306$5521$PT8AO g$6306$5616$PT8AO '#f)
   (g$6305$5522$PT8AO
     g$6305$5617$PT8AO
     (make-record-constructor-descriptor
       g$6304$5520$PT8AO
       g$6289$5515$PT8AO
       g$6306$5521$PT8AO))
   (g$6303$5523$PT8AO
     g$6303$5618$PT8AO
     (record-predicate g$6304$5520$PT8AO))
   (g$make-message-condition$5524$PT8AO
     g$make-message-condition$5619$PT8AO
     (record-constructor g$6305$5522$PT8AO))
   (g$6302$5525$PT8AO
     g$6302$5620$PT8AO
     (record-accessor g$6304$5520$PT8AO '0))
   (g$message-condition?$5526$PT8AO
     g$message-condition?$5621$PT8AO
     (condition-predicate g$6304$5520$PT8AO))
   (g$condition-message$5527$PT8AO
     g$condition-message$5622$PT8AO
     (condition-accessor g$6304$5520$PT8AO g$6302$5525$PT8AO))
   (g$6320$5528$PT8AO
     g$6320$5623$PT8AO
     (make-record-type-descriptor
       '&warning
       g$6288$5513$PT8AO
       'g$6323$PT8AO
       '#f
       '#f
       '#()))
   (g$6322$5529$PT8AO g$6322$5624$PT8AO '#f)
   (g$6321$5530$PT8AO
     g$6321$5625$PT8AO
     (make-record-constructor-descriptor
       g$6320$5528$PT8AO
       g$6289$5515$PT8AO
       g$6322$5529$PT8AO))
   (g$6319$5531$PT8AO
     g$6319$5626$PT8AO
     (record-predicate g$6320$5528$PT8AO))
   (g$make-warning$5532$PT8AO
     g$make-warning$5627$PT8AO
     (record-constructor g$6321$5530$PT8AO))
   (g$warning?$5533$PT8AO
     g$warning?$5628$PT8AO
     (condition-predicate g$6320$5528$PT8AO))
   (g$6334$5534$PT8AO
     g$6334$5629$PT8AO
     (make-record-type-descriptor
       '&serious
       g$6288$5513$PT8AO
       'g$6337$PT8AO
       '#f
       '#f
       '#()))
   (g$6336$5535$PT8AO g$6336$5630$PT8AO '#f)
   (g$6335$5536$PT8AO
     g$6335$5631$PT8AO
     (make-record-constructor-descriptor
       g$6334$5534$PT8AO
       g$6289$5515$PT8AO
       g$6336$5535$PT8AO))
   (g$6333$5537$PT8AO
     g$6333$5632$PT8AO
     (record-predicate g$6334$5534$PT8AO))
   (g$make-serious-condition$5538$PT8AO
     g$make-serious-condition$5633$PT8AO
     (record-constructor g$6335$5536$PT8AO))
   (g$serious-condition?$5539$PT8AO
     g$serious-condition?$5634$PT8AO
     (condition-predicate g$6334$5534$PT8AO))
   (g$6348$5540$PT8AO
     g$6348$5635$PT8AO
     (make-record-type-descriptor
       '&error
       g$6334$5534$PT8AO
       'g$6351$PT8AO
       '#f
       '#f
       '#()))
   (g$6350$5541$PT8AO g$6350$5636$PT8AO '#f)
   (g$6349$5542$PT8AO
     g$6349$5637$PT8AO
     (make-record-constructor-descriptor
       g$6348$5540$PT8AO
       g$6335$5536$PT8AO
       g$6350$5541$PT8AO))
   (g$6347$5543$PT8AO
     g$6347$5638$PT8AO
     (record-predicate g$6348$5540$PT8AO))
   (g$make-error$5544$PT8AO
     g$make-error$5639$PT8AO
     (record-constructor g$6349$5542$PT8AO))
   (g$error?$5545$PT8AO
     g$error?$5640$PT8AO
     (condition-predicate g$6348$5540$PT8AO))
   (g$6362$5546$PT8AO
     g$6362$5641$PT8AO
     (make-record-type-descriptor
       '&violation
       g$6334$5534$PT8AO
       'g$6365$PT8AO
       '#f
       '#f
       '#()))
   (g$6364$5547$PT8AO g$6364$5642$PT8AO '#f)
   (g$6363$5548$PT8AO
     g$6363$5643$PT8AO
     (make-record-constructor-descriptor
       g$6362$5546$PT8AO
       g$6335$5536$PT8AO
       g$6364$5547$PT8AO))
   (g$6361$5549$PT8AO
     g$6361$5644$PT8AO
     (record-predicate g$6362$5546$PT8AO))
   (g$make-violation$5550$PT8AO
     g$make-violation$5645$PT8AO
     (record-constructor g$6363$5548$PT8AO))
   (g$violation?$5551$PT8AO
     g$violation?$5646$PT8AO
     (condition-predicate g$6362$5546$PT8AO))
   (g$6376$5552$PT8AO
     g$6376$5647$PT8AO
     (make-record-type-descriptor
       '&assertion
       g$6362$5546$PT8AO
       'g$6379$PT8AO
       '#f
       '#f
       '#()))
   (g$6378$5553$PT8AO g$6378$5648$PT8AO '#f)
   (g$6377$5554$PT8AO
     g$6377$5649$PT8AO
     (make-record-constructor-descriptor
       g$6376$5552$PT8AO
       g$6363$5548$PT8AO
       g$6378$5553$PT8AO))
   (g$6375$5555$PT8AO
     g$6375$5650$PT8AO
     (record-predicate g$6376$5552$PT8AO))
   (g$make-assertion-violation$5556$PT8AO
     g$make-assertion-violation$5651$PT8AO
     (record-constructor g$6377$5554$PT8AO))
   (g$assertion-violation?$5557$PT8AO
     g$assertion-violation?$5652$PT8AO
     (condition-predicate g$6376$5552$PT8AO))
   (g$6391$5558$PT8AO
     g$6391$5653$PT8AO
     (make-record-type-descriptor
       '&irritants
       g$6288$5513$PT8AO
       'g$6394$PT8AO
       '#f
       '#f
       '#((immutable irritants))))
   (g$6393$5559$PT8AO g$6393$5654$PT8AO '#f)
   (g$6392$5560$PT8AO
     g$6392$5655$PT8AO
     (make-record-constructor-descriptor
       g$6391$5558$PT8AO
       g$6289$5515$PT8AO
       g$6393$5559$PT8AO))
   (g$6390$5561$PT8AO
     g$6390$5656$PT8AO
     (record-predicate g$6391$5558$PT8AO))
   (g$make-irritants-condition$5562$PT8AO
     g$make-irritants-condition$5657$PT8AO
     (record-constructor g$6392$5560$PT8AO))
   (g$6389$5563$PT8AO
     g$6389$5658$PT8AO
     (record-accessor g$6391$5558$PT8AO '0))
   (g$irritants-condition?$5564$PT8AO
     g$irritants-condition?$5659$PT8AO
     (condition-predicate g$6391$5558$PT8AO))
   (g$condition-irritants$5565$PT8AO
     g$condition-irritants$5660$PT8AO
     (condition-accessor g$6391$5558$PT8AO g$6389$5563$PT8AO))
   (g$6408$5566$PT8AO
     g$6408$5661$PT8AO
     (make-record-type-descriptor
       '&who
       g$6288$5513$PT8AO
       'g$6411$PT8AO
       '#f
       '#f
       '#((immutable who))))
   (g$6410$5567$PT8AO g$6410$5662$PT8AO '#f)
   (g$6409$5568$PT8AO
     g$6409$5663$PT8AO
     (make-record-constructor-descriptor
       g$6408$5566$PT8AO
       g$6289$5515$PT8AO
       g$6410$5567$PT8AO))
   (g$6407$5569$PT8AO
     g$6407$5664$PT8AO
     (record-predicate g$6408$5566$PT8AO))
   (g$make-who-condition$5570$PT8AO
     g$make-who-condition$5665$PT8AO
     (record-constructor g$6409$5568$PT8AO))
   (g$6406$5571$PT8AO
     g$6406$5666$PT8AO
     (record-accessor g$6408$5566$PT8AO '0))
   (g$who-condition?$5572$PT8AO
     g$who-condition?$5667$PT8AO
     (condition-predicate g$6408$5566$PT8AO))
   (g$condition-who$5573$PT8AO
     g$condition-who$5668$PT8AO
     (condition-accessor g$6408$5566$PT8AO g$6406$5571$PT8AO))
   (g$6424$5574$PT8AO
     g$6424$5669$PT8AO
     (make-record-type-descriptor
       '&non-continuable
       g$6362$5546$PT8AO
       'g$6427$PT8AO
       '#f
       '#f
       '#()))
   (g$6426$5575$PT8AO g$6426$5670$PT8AO '#f)
   (g$6425$5576$PT8AO
     g$6425$5671$PT8AO
     (make-record-constructor-descriptor
       g$6424$5574$PT8AO
       g$6363$5548$PT8AO
       g$6426$5575$PT8AO))
   (g$6423$5577$PT8AO
     g$6423$5672$PT8AO
     (record-predicate g$6424$5574$PT8AO))
   (g$make-non-continuable-violation$5578$PT8AO
     g$make-non-continuable-violation$5673$PT8AO
     (record-constructor g$6425$5576$PT8AO))
   (g$non-continuable-violation?$5579$PT8AO
     g$non-continuable-violation?$5674$PT8AO
     (condition-predicate g$6424$5574$PT8AO))
   (g$6438$5580$PT8AO
     g$6438$5675$PT8AO
     (make-record-type-descriptor
       '&implementation-restriction
       g$6362$5546$PT8AO
       'g$6441$PT8AO
       '#f
       '#f
       '#()))
   (g$6440$5581$PT8AO g$6440$5676$PT8AO '#f)
   (g$6439$5582$PT8AO
     g$6439$5677$PT8AO
     (make-record-constructor-descriptor
       g$6438$5580$PT8AO
       g$6363$5548$PT8AO
       g$6440$5581$PT8AO))
   (g$6437$5583$PT8AO
     g$6437$5678$PT8AO
     (record-predicate g$6438$5580$PT8AO))
   (g$make-implementation-restriction-violation$5584$PT8AO
     g$make-implementation-restriction-violation$5679$PT8AO
     (record-constructor g$6439$5582$PT8AO))
   (g$implementation-restriction-violation?$5585$PT8AO
     g$implementation-restriction-violation?$5680$PT8AO
     (condition-predicate g$6438$5580$PT8AO))
   (g$6452$5586$PT8AO
     g$6452$5681$PT8AO
     (make-record-type-descriptor
       '&lexical
       g$6362$5546$PT8AO
       'g$6455$PT8AO
       '#f
       '#f
       '#()))
   (g$6454$5587$PT8AO g$6454$5682$PT8AO '#f)
   (g$6453$5588$PT8AO
     g$6453$5683$PT8AO
     (make-record-constructor-descriptor
       g$6452$5586$PT8AO
       g$6363$5548$PT8AO
       g$6454$5587$PT8AO))
   (g$6451$5589$PT8AO
     g$6451$5684$PT8AO
     (record-predicate g$6452$5586$PT8AO))
   (g$make-lexical-violation$5590$PT8AO
     g$make-lexical-violation$5685$PT8AO
     (record-constructor g$6453$5588$PT8AO))
   (g$lexical-violation?$5591$PT8AO
     g$lexical-violation?$5686$PT8AO
     (condition-predicate g$6452$5586$PT8AO))
   (g$6468$5592$PT8AO
     g$6468$5687$PT8AO
     (make-record-type-descriptor
       '&syntax
       g$6362$5546$PT8AO
       'g$6471$PT8AO
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6470$5593$PT8AO g$6470$5688$PT8AO '#f)
   (g$6469$5594$PT8AO
     g$6469$5689$PT8AO
     (make-record-constructor-descriptor
       g$6468$5592$PT8AO
       g$6363$5548$PT8AO
       g$6470$5593$PT8AO))
   (g$6467$5595$PT8AO
     g$6467$5690$PT8AO
     (record-predicate g$6468$5592$PT8AO))
   (g$make-syntax-violation$5596$PT8AO
     g$make-syntax-violation$5691$PT8AO
     (record-constructor g$6469$5594$PT8AO))
   (g$6465$5597$PT8AO
     g$6465$5692$PT8AO
     (record-accessor g$6468$5592$PT8AO '0))
   (g$6466$5598$PT8AO
     g$6466$5693$PT8AO
     (record-accessor g$6468$5592$PT8AO '1))
   (g$syntax-violation?$5599$PT8AO
     g$syntax-violation?$5694$PT8AO
     (condition-predicate g$6468$5592$PT8AO))
   (g$syntax-violation-form$5600$PT8AO
     g$syntax-violation-form$5695$PT8AO
     (condition-accessor g$6468$5592$PT8AO g$6465$5597$PT8AO))
   (g$syntax-violation-subform$5601$PT8AO
     g$syntax-violation-subform$5696$PT8AO
     (condition-accessor g$6468$5592$PT8AO g$6466$5598$PT8AO))
   (g$6486$5602$PT8AO
     g$6486$5697$PT8AO
     (make-record-type-descriptor
       '&undefined
       g$6362$5546$PT8AO
       'g$6489$PT8AO
       '#f
       '#f
       '#()))
   (g$6488$5603$PT8AO g$6488$5698$PT8AO '#f)
   (g$6487$5604$PT8AO
     g$6487$5699$PT8AO
     (make-record-constructor-descriptor
       g$6486$5602$PT8AO
       g$6363$5548$PT8AO
       g$6488$5603$PT8AO))
   (g$6485$5605$PT8AO
     g$6485$5700$PT8AO
     (record-predicate g$6486$5602$PT8AO))
   (g$make-undefined-violation$5606$PT8AO
     g$make-undefined-violation$5701$PT8AO
     (record-constructor g$6487$5604$PT8AO))
   (g$undefined-violation?$5607$PT8AO
     g$undefined-violation?$5702$PT8AO
     (condition-predicate g$6486$5602$PT8AO)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5703$PT8AO
     g$append!$5709$PT8AO
     (case-lambda
       ((g$a$5704$PT8AO . g$b$5705$PT8AO)
        (if (null? g$a$5704$PT8AO)
          g$b$5705$PT8AO
          (if (null? g$b$5705$PT8AO)
            g$a$5704$PT8AO
            (begin
              ((letrec ((g$f$5706$PT8AO
                          (case-lambda
                            ((g$a$5707$PT8AO)
                             ((case-lambda
                                ((g$n$5708$PT8AO)
                                 (if (null? g$n$5708$PT8AO)
                                   (set-cdr! g$a$5707$PT8AO g$b$5705$PT8AO)
                                   (g$f$5706$PT8AO g$n$5708$PT8AO))))
                              (cdr g$a$5707$PT8AO))))))
                 g$f$5706$PT8AO)
               g$a$5704$PT8AO)
              g$a$5704$PT8AO)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5710$PT8AO
     g$sign$5721$PT8AO
     (case-lambda
       ((g$n$5714$PT8AO)
        (if (> g$n$5714$PT8AO '0) '1 (if (< g$n$5714$PT8AO '0) '-1 '0)))))
   (g$quotient$5711$PT8AO
     g$quotient$5722$PT8AO
     (case-lambda
       ((g$n1$5715$PT8AO g$n2$5716$PT8AO)
        (* (g$sign$5710$PT8AO g$n1$5715$PT8AO)
           (g$sign$5710$PT8AO g$n2$5716$PT8AO)
           (div (abs g$n1$5715$PT8AO) (abs g$n2$5716$PT8AO))))))
   (g$remainder$5712$PT8AO
     g$remainder$5723$PT8AO
     (case-lambda
       ((g$n1$5717$PT8AO g$n2$5718$PT8AO)
        (* (g$sign$5710$PT8AO g$n1$5717$PT8AO)
           (mod (abs g$n1$5717$PT8AO) (abs g$n2$5718$PT8AO))))))
   (g$modulo$5713$PT8AO
     g$modulo$5724$PT8AO
     (case-lambda
       ((g$n1$5719$PT8AO g$n2$5720$PT8AO)
        (* (g$sign$5710$PT8AO g$n2$5720$PT8AO)
           (mod (* (g$sign$5710$PT8AO g$n2$5720$PT8AO) g$n1$5719$PT8AO)
                (abs g$n2$5720$PT8AO)))))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5725$PT8AO
     g$split$5751$PT8AO
     (case-lambda
       ((g$ls$5728$PT8AO)
        ((letrec ((g$loop$5729$PT8AO
                    (case-lambda
                      ((g$rest$5730$PT8AO g$left$5731$PT8AO g$right$5732$PT8AO)
                       (if (null? g$rest$5730$PT8AO)
                         (cons g$left$5731$PT8AO g$right$5732$PT8AO)
                         (if (null? (cdr g$rest$5730$PT8AO))
                           (cons
                             (cons (car g$rest$5730$PT8AO) g$left$5731$PT8AO)
                             g$right$5732$PT8AO)
                           (g$loop$5729$PT8AO
                             (g$cddr$4898$PT8AO g$rest$5730$PT8AO)
                             (cons (car g$rest$5730$PT8AO) g$left$5731$PT8AO)
                             (cons
                               (g$cadr$4896$PT8AO g$rest$5730$PT8AO)
                               g$right$5732$PT8AO))))))))
           g$loop$5729$PT8AO)
         g$ls$5728$PT8AO
         '()
         '()))))
   (g$reverse-it$5726$PT8AO
     g$reverse-it$5752$PT8AO
     (case-lambda
       ((g$head$5733$PT8AO g$tail$5734$PT8AO)
        (if (null? g$head$5733$PT8AO)
          g$tail$5734$PT8AO
          ((case-lambda
             ((g$hd$5735$PT8AO g$tl$5736$PT8AO)
              (g$reverse-it$5726$PT8AO
                g$tl$5736$PT8AO
                (cons g$hd$5735$PT8AO g$tail$5734$PT8AO))))
           (car g$head$5733$PT8AO)
           (cdr g$head$5733$PT8AO))))))
   (g$list-sort$5727$PT8AO
     g$list-sort$5753$PT8AO
     (case-lambda
       ((g$precedes?$5737$PT8AO g$ls$5738$PT8AO)
        ((case-lambda
           ((g$merge$5739$PT8AO)
            ((case-lambda
               (()
                (if (null? g$ls$5738$PT8AO)
                  '()
                  ((letrec ((g$helper$5740$PT8AO
                              (case-lambda
                                ((g$piece$5741$PT8AO)
                                 (if (null? (cdr g$piece$5741$PT8AO))
                                   g$piece$5741$PT8AO
                                   ((case-lambda
                                      ((g$parts$5742$PT8AO)
                                       (g$merge$5739$PT8AO
                                         (g$helper$5740$PT8AO
                                           (car g$parts$5742$PT8AO))
                                         (g$helper$5740$PT8AO
                                           (cdr g$parts$5742$PT8AO)))))
                                    (g$split$5725$PT8AO
                                      g$piece$5741$PT8AO)))))))
                     g$helper$5740$PT8AO)
                   g$ls$5738$PT8AO)))))))
         (case-lambda
           ((g$list-1$5743$PT8AO g$list-2$5744$PT8AO)
            ((letrec ((g$loop$5745$PT8AO
                        (case-lambda
                          ((g$source-1$5746$PT8AO
                             g$source-2$5747$PT8AO
                             g$so-far$5748$PT8AO)
                           (if (null? g$source-1$5746$PT8AO)
                             (g$reverse-it$5726$PT8AO
                               g$so-far$5748$PT8AO
                               g$source-2$5747$PT8AO)
                             (if (null? g$source-2$5747$PT8AO)
                               (g$reverse-it$5726$PT8AO
                                 g$so-far$5748$PT8AO
                                 g$source-1$5746$PT8AO)
                               ((case-lambda
                                  ((g$car-1$5749$PT8AO g$car-2$5750$PT8AO)
                                   (if (g$precedes?$5737$PT8AO
                                         g$car-2$5750$PT8AO
                                         g$car-1$5749$PT8AO)
                                     (g$loop$5745$PT8AO
                                       g$source-1$5746$PT8AO
                                       (cdr g$source-2$5747$PT8AO)
                                       (cons
                                         g$car-2$5750$PT8AO
                                         g$so-far$5748$PT8AO))
                                     (g$loop$5745$PT8AO
                                       g$source-2$5747$PT8AO
                                       (cdr g$source-1$5746$PT8AO)
                                       (cons
                                         g$car-1$5749$PT8AO
                                         g$so-far$5748$PT8AO)))))
                                (car g$source-1$5746$PT8AO)
                                (car g$source-2$5747$PT8AO))))))))
               g$loop$5745$PT8AO)
             g$list-1$5743$PT8AO
             g$list-2$5744$PT8AO
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode) () (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$5791$PT8AO
     g$bitwise-if$5842$PT8AO
     (case-lambda
       ((g$ei1$5799$PT8AO g$ei2$5800$PT8AO g$ei3$5801$PT8AO)
        (bitwise-ior
          (bitwise-and g$ei1$5799$PT8AO g$ei2$5800$PT8AO)
          (bitwise-and (bitwise-not g$ei1$5799$PT8AO) g$ei3$5801$PT8AO)))))
   (g$bitwise-copy-bit$5792$PT8AO
     g$bitwise-copy-bit$5843$PT8AO
     (case-lambda
       ((g$ei1$5802$PT8AO g$ei2$5803$PT8AO g$ei3$5804$PT8AO)
        ((case-lambda
           ((g$mask$5805$PT8AO)
            ((case-lambda
               (()
                (g$bitwise-if$5791$PT8AO
                  g$mask$5805$PT8AO
                  (g$bitwise-arithmetic-shift-left$5795$PT8AO
                    g$ei3$5804$PT8AO
                    g$ei2$5803$PT8AO)
                  g$ei1$5802$PT8AO))))))
         (g$bitwise-arithmetic-shift-left$5795$PT8AO '1 g$ei2$5803$PT8AO)))))
   (g$bitwise-bit-field$5793$PT8AO
     g$bitwise-bit-field$5844$PT8AO
     (case-lambda
       ((g$ei1$5806$PT8AO g$ei2$5807$PT8AO g$ei3$5808$PT8AO)
        ((case-lambda
           ((g$mask$5809$PT8AO)
            (g$bitwise-arithmetic-shift-right$5796$PT8AO
              (bitwise-and g$ei1$5806$PT8AO g$mask$5809$PT8AO)
              g$ei2$5807$PT8AO)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$5795$PT8AO
             '-1
             g$ei3$5808$PT8AO))))))
   (g$bitwise-copy-bit-field$5794$PT8AO
     g$bitwise-copy-bit-field$5845$PT8AO
     (case-lambda
       ((g$ei1$5810$PT8AO g$ei2$5811$PT8AO g$ei3$5812$PT8AO g$ei4$5813$PT8AO)
        ((case-lambda
           ((g$to$5814$PT8AO)
            ((case-lambda
               ((g$start$5815$PT8AO)
                ((case-lambda
                   ((g$end$5816$PT8AO)
                    ((case-lambda
                       ((g$from$5817$PT8AO)
                        ((case-lambda
                           ((g$mask1$5818$PT8AO)
                            ((case-lambda
                               ((g$mask2$5819$PT8AO)
                                ((case-lambda
                                   ((g$mask$5820$PT8AO)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$5791$PT8AO
                                          g$mask$5820$PT8AO
                                          (g$bitwise-arithmetic-shift-left$5795$PT8AO
                                            g$from$5817$PT8AO
                                            g$start$5815$PT8AO)
                                          g$to$5814$PT8AO))))))
                                 (bitwise-and
                                   g$mask1$5818$PT8AO
                                   g$mask2$5819$PT8AO))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$5795$PT8AO
                                 '-1
                                 g$end$5816$PT8AO)))))
                         (g$bitwise-arithmetic-shift-left$5795$PT8AO
                           '-1
                           g$start$5815$PT8AO))))
                     g$ei4$5813$PT8AO)))
                 g$ei3$5812$PT8AO)))
             g$ei2$5811$PT8AO)))
         g$ei1$5810$PT8AO))))
   (g$bitwise-arithmetic-shift-left$5795$PT8AO
     g$bitwise-arithmetic-shift-left$5846$PT8AO
     (case-lambda
       ((g$ei1$5821$PT8AO g$ei2$5822$PT8AO)
        (bitwise-arithmetic-shift g$ei1$5821$PT8AO g$ei2$5822$PT8AO))))
   (g$bitwise-arithmetic-shift-right$5796$PT8AO
     g$bitwise-arithmetic-shift-right$5847$PT8AO
     (case-lambda
       ((g$ei1$5823$PT8AO g$ei2$5824$PT8AO)
        (bitwise-arithmetic-shift g$ei1$5823$PT8AO (- g$ei2$5824$PT8AO)))))
   (g$bitwise-rotate-bit-field$5797$PT8AO
     g$bitwise-rotate-bit-field$5848$PT8AO
     (case-lambda
       ((g$ei1$5825$PT8AO g$ei2$5826$PT8AO g$ei3$5827$PT8AO g$ei4$5828$PT8AO)
        ((case-lambda
           ((g$n$5829$PT8AO)
            ((case-lambda
               ((g$start$5830$PT8AO)
                ((case-lambda
                   ((g$end$5831$PT8AO)
                    ((case-lambda
                       ((g$count$5832$PT8AO)
                        ((case-lambda
                           ((g$width$5833$PT8AO)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5833$PT8AO)
                                  ((case-lambda
                                     ((g$count$5834$PT8AO)
                                      ((case-lambda
                                         ((g$field0$5835$PT8AO)
                                          ((case-lambda
                                             ((g$field1$5836$PT8AO)
                                              ((case-lambda
                                                 ((g$field2$5837$PT8AO)
                                                  ((case-lambda
                                                     ((g$field$5838$PT8AO)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$5794$PT8AO
                                                            g$n$5829$PT8AO
                                                            g$start$5830$PT8AO
                                                            g$end$5831$PT8AO
                                                            g$field$5838$PT8AO))))))
                                                   (bitwise-ior
                                                     g$field1$5836$PT8AO
                                                     g$field2$5837$PT8AO))))
                                               (g$bitwise-arithmetic-shift-right$5796$PT8AO
                                                 g$field0$5835$PT8AO
                                                 (- g$width$5833$PT8AO
                                                    g$count$5834$PT8AO)))))
                                           (g$bitwise-arithmetic-shift-left$5795$PT8AO
                                             g$field0$5835$PT8AO
                                             g$count$5834$PT8AO))))
                                       (g$bitwise-bit-field$5793$PT8AO
                                         g$n$5829$PT8AO
                                         g$start$5830$PT8AO
                                         g$end$5831$PT8AO))))
                                   (mod g$count$5832$PT8AO g$width$5833$PT8AO))
                                  g$n$5829$PT8AO))))))
                         (- g$end$5831$PT8AO g$start$5830$PT8AO))))
                     g$ei4$5828$PT8AO)))
                 g$ei3$5827$PT8AO)))
             g$ei2$5826$PT8AO)))
         g$ei1$5825$PT8AO))))
   (g$bitwise-reverse-bit-field$5798$PT8AO
     g$bitwise-reverse-bit-field$5849$PT8AO
     (case-lambda
       ((g$ei1$5839$PT8AO g$ei2$5840$PT8AO g$ei3$5841$PT8AO) 'TODO))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$5850$PT8AO
     g$fxif$5897$PT8AO
     (case-lambda
       ((g$fx1$5857$PT8AO g$fx2$5858$PT8AO g$fx3$5859$PT8AO)
        (fxior
          (fxand g$fx1$5857$PT8AO g$fx2$5858$PT8AO)
          (fxand (fxnot g$fx1$5857$PT8AO) g$fx3$5859$PT8AO)))))
   (g$fxcopy-bit$5851$PT8AO
     g$fxcopy-bit$5898$PT8AO
     (case-lambda
       ((g$fx1$5860$PT8AO g$fx2$5861$PT8AO g$fx3$5862$PT8AO)
        ((case-lambda
           ((g$mask$5863$PT8AO)
            ((case-lambda
               (()
                (g$fxif$5850$PT8AO
                  g$mask$5863$PT8AO
                  (g$fxarithmetic-shift-left$5854$PT8AO
                    g$fx3$5862$PT8AO
                    g$fx2$5861$PT8AO)
                  g$fx1$5860$PT8AO))))))
         (g$fxarithmetic-shift-left$5854$PT8AO '1 g$fx2$5861$PT8AO)))))
   (g$fxbit-field$5852$PT8AO
     g$fxbit-field$5899$PT8AO
     (case-lambda
       ((g$fx1$5864$PT8AO g$fx2$5865$PT8AO g$fx3$5866$PT8AO)
        ((case-lambda
           ((g$mask$5867$PT8AO)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$5855$PT8AO
                  (fxand g$fx1$5864$PT8AO g$mask$5867$PT8AO)
                  g$fx2$5865$PT8AO))))))
         (fxnot (g$fxarithmetic-shift-left$5854$PT8AO '-1 g$fx3$5866$PT8AO))))))
   (g$fxcopy-bit-field$5853$PT8AO
     g$fxcopy-bit-field$5900$PT8AO
     (case-lambda
       ((g$fx1$5868$PT8AO g$fx2$5869$PT8AO g$fx3$5870$PT8AO g$fx4$5871$PT8AO)
        ((case-lambda
           ((g$to$5872$PT8AO)
            ((case-lambda
               ((g$start$5873$PT8AO)
                ((case-lambda
                   ((g$end$5874$PT8AO)
                    ((case-lambda
                       ((g$from$5875$PT8AO)
                        ((case-lambda
                           ((g$mask1$5876$PT8AO)
                            ((case-lambda
                               ((g$mask2$5877$PT8AO)
                                ((case-lambda
                                   ((g$mask$5878$PT8AO)
                                    ((case-lambda
                                       (()
                                        (g$fxif$5850$PT8AO
                                          g$mask$5878$PT8AO
                                          (g$fxarithmetic-shift-left$5854$PT8AO
                                            g$from$5875$PT8AO
                                            g$start$5873$PT8AO)
                                          g$to$5872$PT8AO))))))
                                 (fxand
                                   g$mask1$5876$PT8AO
                                   g$mask2$5877$PT8AO))))
                             (fxnot
                               (g$fxarithmetic-shift-left$5854$PT8AO
                                 '-1
                                 g$end$5874$PT8AO)))))
                         (g$fxarithmetic-shift-left$5854$PT8AO
                           '-1
                           g$start$5873$PT8AO))))
                     g$fx4$5871$PT8AO)))
                 g$fx3$5870$PT8AO)))
             g$fx2$5869$PT8AO)))
         g$fx1$5868$PT8AO))))
   (g$fxarithmetic-shift-left$5854$PT8AO
     g$fxarithmetic-shift-left$5901$PT8AO
     (case-lambda
       ((g$fx1$5879$PT8AO g$fx2$5880$PT8AO)
        (fxarithmetic-shift g$fx1$5879$PT8AO g$fx2$5880$PT8AO))))
   (g$fxarithmetic-shift-right$5855$PT8AO
     g$fxarithmetic-shift-right$5902$PT8AO
     (case-lambda
       ((g$fx1$5881$PT8AO g$fx2$5882$PT8AO)
        (fxarithmetic-shift g$fx1$5881$PT8AO (- g$fx2$5882$PT8AO)))))
   (g$fxrotate-bit-field$5856$PT8AO
     g$fxrotate-bit-field$5903$PT8AO
     (case-lambda
       ((g$fx1$5883$PT8AO g$fx2$5884$PT8AO g$fx3$5885$PT8AO g$fx4$5886$PT8AO)
        ((case-lambda
           ((g$n$5887$PT8AO)
            ((case-lambda
               ((g$start$5888$PT8AO)
                ((case-lambda
                   ((g$end$5889$PT8AO)
                    ((case-lambda
                       ((g$count$5890$PT8AO)
                        ((case-lambda
                           ((g$width$5891$PT8AO)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5891$PT8AO)
                                  ((case-lambda
                                     ((g$count$5892$PT8AO)
                                      ((case-lambda
                                         ((g$field0$5893$PT8AO)
                                          ((case-lambda
                                             ((g$field1$5894$PT8AO)
                                              ((case-lambda
                                                 ((g$field2$5895$PT8AO)
                                                  ((case-lambda
                                                     ((g$field$5896$PT8AO)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$5853$PT8AO
                                                            g$n$5887$PT8AO
                                                            g$start$5888$PT8AO
                                                            g$end$5889$PT8AO
                                                            g$field$5896$PT8AO))))))
                                                   (fxior
                                                     g$field1$5894$PT8AO
                                                     g$field2$5895$PT8AO))))
                                               (g$fxarithmetic-shift-right$5855$PT8AO
                                                 g$field0$5893$PT8AO
                                                 (- g$width$5891$PT8AO
                                                    g$count$5892$PT8AO)))))
                                           (g$fxarithmetic-shift-left$5854$PT8AO
                                             g$field0$5893$PT8AO
                                             g$count$5892$PT8AO))))
                                       (g$fxbit-field$5852$PT8AO
                                         g$n$5887$PT8AO
                                         g$start$5888$PT8AO
                                         g$end$5889$PT8AO))))
                                   (mod g$count$5890$PT8AO g$width$5891$PT8AO))
                                  g$n$5887$PT8AO))))))
                         (- g$end$5889$PT8AO g$start$5888$PT8AO))))
                     g$fx4$5886$PT8AO)))
                 g$fx3$5885$PT8AO)))
             g$fx2$5884$PT8AO)))
         g$fx1$5883$PT8AO)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$6703$5904$PT8AO
     g$6703$5916$PT8AO
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$6706$PT8AO
       '#f
       '#f
       '#()))
   (g$6705$5905$PT8AO g$6705$5917$PT8AO '#f)
   (g$6704$5906$PT8AO
     g$6704$5918$PT8AO
     (make-record-constructor-descriptor
       g$6703$5904$PT8AO
       &implementation-restriction-rcd
       g$6705$5905$PT8AO))
   (g$6702$5907$PT8AO
     g$6702$5919$PT8AO
     (record-predicate g$6703$5904$PT8AO))
   (g$make-no-infinities-violation$5908$PT8AO
     g$make-no-infinities-violation$5920$PT8AO
     (record-constructor g$6704$5906$PT8AO))
   (g$no-infinities-violation?$5909$PT8AO
     g$no-infinities-violation?$5921$PT8AO
     (condition-predicate g$6703$5904$PT8AO))
   (g$6717$5910$PT8AO
     g$6717$5922$PT8AO
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$6720$PT8AO
       '#f
       '#f
       '#()))
   (g$6719$5911$PT8AO g$6719$5923$PT8AO '#f)
   (g$6718$5912$PT8AO
     g$6718$5924$PT8AO
     (make-record-constructor-descriptor
       g$6717$5910$PT8AO
       &implementation-restriction-rcd
       g$6719$5911$PT8AO))
   (g$6716$5913$PT8AO
     g$6716$5925$PT8AO
     (record-predicate g$6717$5910$PT8AO))
   (g$make-no-nans-violation$5914$PT8AO
     g$make-no-nans-violation$5926$PT8AO
     (record-constructor g$6718$5912$PT8AO))
   (g$no-nans-violation?$5915$PT8AO
     g$no-nans-violation?$5927$PT8AO
     (condition-predicate g$6717$5910$PT8AO)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$6732$5928$PT8AO
     g$6732$6008$PT8AO
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$6735$PT8AO
       '#f
       '#f
       '#()))
   (g$6734$5929$PT8AO g$6734$6009$PT8AO '#f)
   (g$6733$5930$PT8AO
     g$6733$6010$PT8AO
     (make-record-constructor-descriptor
       g$6732$5928$PT8AO
       &error-rcd
       g$6734$5929$PT8AO))
   (g$6731$5931$PT8AO
     g$6731$6011$PT8AO
     (record-predicate g$6732$5928$PT8AO))
   (g$make-i/o-error$5932$PT8AO
     g$make-i/o-error$6012$PT8AO
     (record-constructor g$6733$5930$PT8AO))
   (g$i/o-error?$5933$PT8AO
     g$i/o-error?$6013$PT8AO
     (condition-predicate g$6732$5928$PT8AO))
   (g$6746$5934$PT8AO
     g$6746$6014$PT8AO
     (make-record-type-descriptor
       '&i/o-read
       g$6732$5928$PT8AO
       'g$6749$PT8AO
       '#f
       '#f
       '#()))
   (g$6748$5935$PT8AO g$6748$6015$PT8AO '#f)
   (g$6747$5936$PT8AO
     g$6747$6016$PT8AO
     (make-record-constructor-descriptor
       g$6746$5934$PT8AO
       g$6733$5930$PT8AO
       g$6748$5935$PT8AO))
   (g$6745$5937$PT8AO
     g$6745$6017$PT8AO
     (record-predicate g$6746$5934$PT8AO))
   (g$make-i/o-read-error$5938$PT8AO
     g$make-i/o-read-error$6018$PT8AO
     (record-constructor g$6747$5936$PT8AO))
   (g$i/o-read-error?$5939$PT8AO
     g$i/o-read-error?$6019$PT8AO
     (condition-predicate g$6746$5934$PT8AO))
   (g$6760$5940$PT8AO
     g$6760$6020$PT8AO
     (make-record-type-descriptor
       '&i/o-write
       g$6732$5928$PT8AO
       'g$6763$PT8AO
       '#f
       '#f
       '#()))
   (g$6762$5941$PT8AO g$6762$6021$PT8AO '#f)
   (g$6761$5942$PT8AO
     g$6761$6022$PT8AO
     (make-record-constructor-descriptor
       g$6760$5940$PT8AO
       g$6733$5930$PT8AO
       g$6762$5941$PT8AO))
   (g$6759$5943$PT8AO
     g$6759$6023$PT8AO
     (record-predicate g$6760$5940$PT8AO))
   (g$make-i/o-write-error$5944$PT8AO
     g$make-i/o-write-error$6024$PT8AO
     (record-constructor g$6761$5942$PT8AO))
   (g$i/o-write-error?$5945$PT8AO
     g$i/o-write-error?$6025$PT8AO
     (condition-predicate g$6760$5940$PT8AO))
   (g$6775$5946$PT8AO
     g$6775$6026$PT8AO
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6732$5928$PT8AO
       'g$6778$PT8AO
       '#f
       '#f
       '#((immutable position))))
   (g$6777$5947$PT8AO g$6777$6027$PT8AO '#f)
   (g$6776$5948$PT8AO
     g$6776$6028$PT8AO
     (make-record-constructor-descriptor
       g$6775$5946$PT8AO
       g$6733$5930$PT8AO
       g$6777$5947$PT8AO))
   (g$6774$5949$PT8AO
     g$6774$6029$PT8AO
     (record-predicate g$6775$5946$PT8AO))
   (g$make-i/o-invalid-position-error$5950$PT8AO
     g$make-i/o-invalid-position-error$6030$PT8AO
     (record-constructor g$6776$5948$PT8AO))
   (g$6773$5951$PT8AO
     g$6773$6031$PT8AO
     (record-accessor g$6775$5946$PT8AO '0))
   (g$i/o-invalid-position-error?$5952$PT8AO
     g$i/o-invalid-position-error?$6032$PT8AO
     (condition-predicate g$6775$5946$PT8AO))
   (g$i/o-error-position$5953$PT8AO
     g$i/o-error-position$6033$PT8AO
     (condition-accessor g$6775$5946$PT8AO g$6773$5951$PT8AO))
   (g$6792$5954$PT8AO
     g$6792$6034$PT8AO
     (make-record-type-descriptor
       '&i/o-filename
       g$6732$5928$PT8AO
       'g$6795$PT8AO
       '#f
       '#f
       '#((immutable filename))))
   (g$6794$5955$PT8AO g$6794$6035$PT8AO '#f)
   (g$6793$5956$PT8AO
     g$6793$6036$PT8AO
     (make-record-constructor-descriptor
       g$6792$5954$PT8AO
       g$6733$5930$PT8AO
       g$6794$5955$PT8AO))
   (g$6791$5957$PT8AO
     g$6791$6037$PT8AO
     (record-predicate g$6792$5954$PT8AO))
   (g$make-i/o-filename-error$5958$PT8AO
     g$make-i/o-filename-error$6038$PT8AO
     (record-constructor g$6793$5956$PT8AO))
   (g$6790$5959$PT8AO
     g$6790$6039$PT8AO
     (record-accessor g$6792$5954$PT8AO '0))
   (g$i/o-filename-error?$5960$PT8AO
     g$i/o-filename-error?$6040$PT8AO
     (condition-predicate g$6792$5954$PT8AO))
   (g$i/o-error-filename$5961$PT8AO
     g$i/o-error-filename$6041$PT8AO
     (condition-accessor g$6792$5954$PT8AO g$6790$5959$PT8AO))
   (g$6808$5962$PT8AO
     g$6808$6042$PT8AO
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6732$5928$PT8AO
       'g$6811$PT8AO
       '#f
       '#f
       '#()))
   (g$6810$5963$PT8AO g$6810$6043$PT8AO '#f)
   (g$6809$5964$PT8AO
     g$6809$6044$PT8AO
     (make-record-constructor-descriptor
       g$6808$5962$PT8AO
       g$6733$5930$PT8AO
       g$6810$5963$PT8AO))
   (g$6807$5965$PT8AO
     g$6807$6045$PT8AO
     (record-predicate g$6808$5962$PT8AO))
   (g$make-i/o-file-protection-error$5966$PT8AO
     g$make-i/o-file-protection-error$6046$PT8AO
     (record-constructor g$6809$5964$PT8AO))
   (g$i/o-file-protection-error?$5967$PT8AO
     g$i/o-file-protection-error?$6047$PT8AO
     (condition-predicate g$6808$5962$PT8AO))
   (g$6822$5968$PT8AO
     g$6822$6048$PT8AO
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6808$5962$PT8AO
       'g$6825$PT8AO
       '#f
       '#f
       '#()))
   (g$6824$5969$PT8AO g$6824$6049$PT8AO '#f)
   (g$6823$5970$PT8AO
     g$6823$6050$PT8AO
     (make-record-constructor-descriptor
       g$6822$5968$PT8AO
       g$6809$5964$PT8AO
       g$6824$5969$PT8AO))
   (g$6821$5971$PT8AO
     g$6821$6051$PT8AO
     (record-predicate g$6822$5968$PT8AO))
   (g$make-i/o-file-is-read-only-error$5972$PT8AO
     g$make-i/o-file-is-read-only-error$6052$PT8AO
     (record-constructor g$6823$5970$PT8AO))
   (g$i/o-file-is-read-only-error?$5973$PT8AO
     g$i/o-file-is-read-only-error?$6053$PT8AO
     (condition-predicate g$6822$5968$PT8AO))
   (g$6836$5974$PT8AO
     g$6836$6054$PT8AO
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6792$5954$PT8AO
       'g$6839$PT8AO
       '#f
       '#f
       '#()))
   (g$6838$5975$PT8AO g$6838$6055$PT8AO '#f)
   (g$6837$5976$PT8AO
     g$6837$6056$PT8AO
     (make-record-constructor-descriptor
       g$6836$5974$PT8AO
       g$6793$5956$PT8AO
       g$6838$5975$PT8AO))
   (g$6835$5977$PT8AO
     g$6835$6057$PT8AO
     (record-predicate g$6836$5974$PT8AO))
   (g$make-i/o-file-already-exists-error$5978$PT8AO
     g$make-i/o-file-already-exists-error$6058$PT8AO
     (record-constructor g$6837$5976$PT8AO))
   (g$i/o-file-already-exists-error?$5979$PT8AO
     g$i/o-file-already-exists-error?$6059$PT8AO
     (condition-predicate g$6836$5974$PT8AO))
   (g$6850$5980$PT8AO
     g$6850$6060$PT8AO
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6792$5954$PT8AO
       'g$6853$PT8AO
       '#f
       '#f
       '#()))
   (g$6852$5981$PT8AO g$6852$6061$PT8AO '#f)
   (g$6851$5982$PT8AO
     g$6851$6062$PT8AO
     (make-record-constructor-descriptor
       g$6850$5980$PT8AO
       g$6793$5956$PT8AO
       g$6852$5981$PT8AO))
   (g$6849$5983$PT8AO
     g$6849$6063$PT8AO
     (record-predicate g$6850$5980$PT8AO))
   (g$make-i/o-file-does-not-exist-error$5984$PT8AO
     g$make-i/o-file-does-not-exist-error$6064$PT8AO
     (record-constructor g$6851$5982$PT8AO))
   (g$i/o-file-does-not-exist-error?$5985$PT8AO
     g$i/o-file-does-not-exist-error?$6065$PT8AO
     (condition-predicate g$6850$5980$PT8AO))
   (g$6865$5986$PT8AO
     g$6865$6066$PT8AO
     (make-record-type-descriptor
       '&i/o-port
       g$6732$5928$PT8AO
       'g$6868$PT8AO
       '#f
       '#f
       '#((immutable port))))
   (g$6867$5987$PT8AO g$6867$6067$PT8AO '#f)
   (g$6866$5988$PT8AO
     g$6866$6068$PT8AO
     (make-record-constructor-descriptor
       g$6865$5986$PT8AO
       g$6733$5930$PT8AO
       g$6867$5987$PT8AO))
   (g$6864$5989$PT8AO
     g$6864$6069$PT8AO
     (record-predicate g$6865$5986$PT8AO))
   (g$make-i/o-port-error$5990$PT8AO
     g$make-i/o-port-error$6070$PT8AO
     (record-constructor g$6866$5988$PT8AO))
   (g$6863$5991$PT8AO
     g$6863$6071$PT8AO
     (record-accessor g$6865$5986$PT8AO '0))
   (g$i/o-port-error?$5992$PT8AO
     g$i/o-port-error?$6072$PT8AO
     (condition-predicate g$6865$5986$PT8AO))
   (g$i/o-error-port$5993$PT8AO
     g$i/o-error-port$6073$PT8AO
     (condition-accessor g$6865$5986$PT8AO g$6863$5991$PT8AO))
   (g$6881$5994$PT8AO
     g$6881$6074$PT8AO
     (make-record-type-descriptor
       '&i/o-decoding
       g$6865$5986$PT8AO
       'g$6884$PT8AO
       '#f
       '#f
       '#()))
   (g$6883$5995$PT8AO g$6883$6075$PT8AO '#f)
   (g$6882$5996$PT8AO
     g$6882$6076$PT8AO
     (make-record-constructor-descriptor
       g$6881$5994$PT8AO
       g$6866$5988$PT8AO
       g$6883$5995$PT8AO))
   (g$6880$5997$PT8AO
     g$6880$6077$PT8AO
     (record-predicate g$6881$5994$PT8AO))
   (g$make-i/o-decoding-error$5998$PT8AO
     g$make-i/o-decoding-error$6078$PT8AO
     (record-constructor g$6882$5996$PT8AO))
   (g$i/o-decoding-error?$5999$PT8AO
     g$i/o-decoding-error?$6079$PT8AO
     (condition-predicate g$6881$5994$PT8AO))
   (g$6896$6000$PT8AO
     g$6896$6080$PT8AO
     (make-record-type-descriptor
       '&i/o-encoding
       g$6865$5986$PT8AO
       'g$6899$PT8AO
       '#f
       '#f
       '#((immutable char))))
   (g$6898$6001$PT8AO g$6898$6081$PT8AO '#f)
   (g$6897$6002$PT8AO
     g$6897$6082$PT8AO
     (make-record-constructor-descriptor
       g$6896$6000$PT8AO
       g$6866$5988$PT8AO
       g$6898$6001$PT8AO))
   (g$6895$6003$PT8AO
     g$6895$6083$PT8AO
     (record-predicate g$6896$6000$PT8AO))
   (g$make-i/o-encoding-error$6004$PT8AO
     g$make-i/o-encoding-error$6084$PT8AO
     (record-constructor g$6897$6002$PT8AO))
   (g$6894$6005$PT8AO
     g$6894$6085$PT8AO
     (record-accessor g$6896$6000$PT8AO '0))
   (g$i/o-encoding-error?$6006$PT8AO
     g$i/o-encoding-error?$6086$PT8AO
     (condition-predicate g$6896$6000$PT8AO))
   (g$i/o-encoding-error-char$6007$PT8AO
     g$i/o-encoding-error-char$6087$PT8AO
     (condition-accessor g$6896$6000$PT8AO g$6894$6005$PT8AO)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6088$PT8AO
     g$get-output-string$6093$PT8AO
     (case-lambda
       ((g$port$6091$PT8AO)
        (clr-call-internal
          'system.io.stringwriter
          'tostring
          g$port$6091$PT8AO))))
   (g$open-output-string$6089$PT8AO
     g$open-output-string$6094$PT8AO
     (case-lambda (() (clr-new-internal 'system.io.stringwriter))))
   (g$open-string-output-port$6090$PT8AO
     g$open-string-output-port$6095$PT8AO
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6092$PT8AO)
            (values
              g$p$6092$PT8AO
              (case-lambda
                (() (g$get-output-string$6088$PT8AO g$p$6092$PT8AO))))))
         (g$open-output-string$6089$PT8AO))))))
  (void))

(library-letrec* (ironscheme io simple) () (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme format)
  ((g$dofmt$6096$PT8AO
     g$dofmt$6118$PT8AO
     (case-lambda
       ((g$p$6100$PT8AO g$cntl$6101$PT8AO g$args$6102$PT8AO)
        ((case-lambda
           ((g$nmax$6103$PT8AO)
            ((letrec ((g$loop$6104$PT8AO
                        (case-lambda
                          ((g$n$6105$PT8AO g$a$6106$PT8AO)
                           (if (fx<=? g$n$6105$PT8AO g$nmax$6103$PT8AO)
                             ((case-lambda
                                ((g$c$6107$PT8AO)
                                 (if (if (char=? g$c$6107$PT8AO '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6105$PT8AO
                                           g$nmax$6103$PT8AO))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6108$PT8AO)
                                       (if (eqv? g$t$6108$PT8AO '#\a)
                                         (begin
                                           (display
                                             (car g$a$6106$PT8AO)
                                             g$p$6100$PT8AO)
                                           (g$loop$6104$PT8AO
                                             (fx+ g$n$6105$PT8AO '2)
                                             (cdr g$a$6106$PT8AO)))
                                         (if (eqv? g$t$6108$PT8AO '#\s)
                                           (begin
                                             (write
                                               (car g$a$6106$PT8AO)
                                               g$p$6100$PT8AO)
                                             (g$loop$6104$PT8AO
                                               (fx+ g$n$6105$PT8AO '2)
                                               (cdr g$a$6106$PT8AO)))
                                           (if (eqv? g$t$6108$PT8AO '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6106$PT8AO)
                                                   '2)
                                                 g$p$6100$PT8AO)
                                               (g$loop$6104$PT8AO
                                                 (fx+ g$n$6105$PT8AO '2)
                                                 (cdr g$a$6106$PT8AO)))
                                             (if (eqv? g$t$6108$PT8AO '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6106$PT8AO)
                                                     '8)
                                                   g$p$6100$PT8AO)
                                                 (g$loop$6104$PT8AO
                                                   (fx+ g$n$6105$PT8AO '2)
                                                   (cdr g$a$6106$PT8AO)))
                                               (if (eqv? g$t$6108$PT8AO '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6106$PT8AO)
                                                       '16)
                                                     g$p$6100$PT8AO)
                                                   (g$loop$6104$PT8AO
                                                     (fx+ g$n$6105$PT8AO '2)
                                                     (cdr g$a$6106$PT8AO)))
                                                 (if (eqv? g$t$6108$PT8AO '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6106$PT8AO)
                                                         '10)
                                                       g$p$6100$PT8AO)
                                                     (g$loop$6104$PT8AO
                                                       (fx+ g$n$6105$PT8AO '2)
                                                       (cdr g$a$6106$PT8AO)))
                                                   (if (eqv?
                                                         g$t$6108$PT8AO
                                                         '#\~)
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6100$PT8AO)
                                                       (g$loop$6104$PT8AO
                                                         (fx+ g$n$6105$PT8AO '2)
                                                         g$a$6106$PT8AO))
                                                     (begin
                                                       (write-char
                                                         g$c$6107$PT8AO
                                                         g$p$6100$PT8AO)
                                                       (g$loop$6104$PT8AO
                                                         (fx+ g$n$6105$PT8AO '1)
                                                         g$a$6106$PT8AO)))))))))))
                                    (string-ref
                                      g$cntl$6101$PT8AO
                                      (fx+ g$n$6105$PT8AO '1)))
                                   (begin
                                     (write-char g$c$6107$PT8AO g$p$6100$PT8AO)
                                     (g$loop$6104$PT8AO
                                       (fx+ g$n$6105$PT8AO '1)
                                       g$a$6106$PT8AO)))))
                              (string-ref g$cntl$6101$PT8AO g$n$6105$PT8AO))
                             (void))))))
               g$loop$6104$PT8AO)
             '0
             g$args$6102$PT8AO)))
         (fx- (string-length g$cntl$6101$PT8AO) '1)))))
   (g$printf$6097$PT8AO
     g$printf$6119$PT8AO
     (case-lambda
       ((g$control$6109$PT8AO . g$args$6110$PT8AO)
        (g$dofmt$6096$PT8AO
          (current-output-port)
          g$control$6109$PT8AO
          g$args$6110$PT8AO))))
   (g$fprintf$6098$PT8AO
     g$fprintf$6120$PT8AO
     (case-lambda
       ((g$p$6111$PT8AO g$control$6112$PT8AO . g$args$6113$PT8AO)
        (g$dofmt$6096$PT8AO
          g$p$6111$PT8AO
          g$control$6112$PT8AO
          g$args$6113$PT8AO))))
   (g$format$6099$PT8AO
     g$format$6121$PT8AO
     (case-lambda
       ((g$control$6114$PT8AO . g$args$6115$PT8AO)
        (call-with-values
          g$open-string-output-port$6095$PT8AO
          (case-lambda
            ((g$p$6116$PT8AO g$c$6117$PT8AO)
             (begin
               (g$dofmt$6096$PT8AO
                 g$p$6116$PT8AO
                 g$control$6114$PT8AO
                 g$args$6115$PT8AO)
               (g$c$6117$PT8AO)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6122$PT8AO
     g$make-traced-macro$6125$PT8AO
     (case-lambda
       ((g$name$6123$PT8AO g$x$6124$PT8AO)
        (if (procedure? g$x$6124$PT8AO)
          (make-traced-procedure
            g$name$6123$PT8AO
            g$x$6124$PT8AO
            g$syntax->datum$10774$PT8AO)
          (if (g$variable-transformer?$10602$PT8AO g$x$6124$PT8AO)
            (g$make-variable-transformer$10601$PT8AO
              (make-traced-procedure
                g$name$6123$PT8AO
                (g$variable-transformer-procedure$10603$PT8AO g$x$6124$PT8AO)
                g$syntax->datum$10774$PT8AO))
            g$x$6124$PT8AO))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6126$PT8AO
     g$read-library-source-file$6204$PT8AO
     (case-lambda
       ((g$file-name$6196$PT8AO)
        (with-input-from-file g$file-name$6196$PT8AO read-annotated))))
   (g$make-parameter$6127$PT8AO
     g$make-parameter$6205$PT8AO
     (case-lambda
       ((g$x$6197$PT8AO)
        (g$make-parameter$6127$PT8AO
          g$x$6197$PT8AO
          (case-lambda ((g$x$6198$PT8AO) g$x$6198$PT8AO))))
       ((g$x$6199$PT8AO g$fender$6200$PT8AO)
        (begin
          (if (procedure? g$fender$6200$PT8AO)
            (void)
            (assertion-violation
              'assert
              '"assertion failed"
              '(procedure? fender)))
          ((case-lambda
             ((g$x$6201$PT8AO)
              (case-lambda
                (() g$x$6201$PT8AO)
                ((g$v$6202$PT8AO)
                 (set! g$x$6201$PT8AO (g$fender$6200$PT8AO g$v$6202$PT8AO))))))
           (g$fender$6200$PT8AO g$x$6199$PT8AO))))))
   (g$file-options-spec$6195$PT8AO
     g$file-options-spec$6206$PT8AO
     (case-lambda ((g$x$6203$PT8AO) g$x$6203$PT8AO))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6403$PT8AO
     g$current-primitive-locations$6448$PT8AO
     (g$make-parameter$6205$PT8AO
       (case-lambda ((g$x$6409$PT8AO) '#f))
       (case-lambda
         ((g$p$6410$PT8AO)
          (begin
            (if (procedure? g$p$6410$PT8AO)
              (void)
              (assertion-violation 'assert '"assertion failed" '(procedure? p)))
            g$p$6410$PT8AO)))))
   (g$mutable?$6404$PT8AO
     g$mutable?$6449$PT8AO
     (case-lambda
       ((g$x$6411$PT8AO)
        (letrec* ((g$simple?$6412$PT8AO
                    (case-lambda
                      ((g$x$6413$PT8AO)
                       ((case-lambda
                          ((g$t$6414$PT8AO)
                           (if g$t$6414$PT8AO
                             g$t$6414$PT8AO
                             ((case-lambda
                                ((g$t$6415$PT8AO)
                                 (if g$t$6415$PT8AO
                                   g$t$6415$PT8AO
                                   ((case-lambda
                                      ((g$t$6416$PT8AO)
                                       (if g$t$6416$PT8AO
                                         g$t$6416$PT8AO
                                         ((case-lambda
                                            ((g$t$6417$PT8AO)
                                             (if g$t$6417$PT8AO
                                               g$t$6417$PT8AO
                                               ((case-lambda
                                                  ((g$t$6418$PT8AO)
                                                   (if g$t$6418$PT8AO
                                                     g$t$6418$PT8AO
                                                     ((case-lambda
                                                        ((g$t$6419$PT8AO)
                                                         (if g$t$6419$PT8AO
                                                           g$t$6419$PT8AO
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6413$PT8AO)))))
                                                      (bytevector?
                                                        g$x$6413$PT8AO)))))
                                                (string? g$x$6413$PT8AO)))))
                                          (boolean? g$x$6413$PT8AO)))))
                                    (symbol? g$x$6413$PT8AO)))))
                              (char? g$x$6413$PT8AO)))))
                        (null? g$x$6413$PT8AO))))))
          (not (g$simple?$6412$PT8AO g$x$6411$PT8AO))))))
   (g$rewriter$6405$PT8AO
     g$rewriter$6450$PT8AO
     (case-lambda
       ((g$quote-hack?$6420$PT8AO)
        (letrec* ((g$f$6421$PT8AO
                    (case-lambda
                      ((g$x$6422$PT8AO)
                       (if (pair? g$x$6422$PT8AO)
                         ((case-lambda
                            ((g$t$6423$PT8AO)
                             (if (eqv? g$t$6423$PT8AO 'quote)
                               (if (if g$quote-hack?$6420$PT8AO
                                     (begin
                                       '#f
                                       (g$mutable?$6404$PT8AO
                                         (g$cadr$4896$PT8AO g$x$6422$PT8AO)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6443$PT8AO)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6443$PT8AO
                                         (g$cadr$4896$PT8AO g$x$6422$PT8AO))
                                       g$g$6443$PT8AO)))
                                  (gensym))
                                 g$x$6422$PT8AO)
                               (if (eqv? g$t$6423$PT8AO 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6442$PT8AO)
                                           (cons
                                             (car g$x$6442$PT8AO)
                                             (map g$f$6421$PT8AO
                                                  (cdr g$x$6442$PT8AO)))))
                                        (cdr g$x$6422$PT8AO)))
                                 (if (eqv? g$t$6423$PT8AO 'lambda)
                                   (g$cons*$5367$PT8AO
                                     'lambda
                                     (g$cadr$4896$PT8AO g$x$6422$PT8AO)
                                     (map g$f$6421$PT8AO
                                          (g$cddr$4898$PT8AO g$x$6422$PT8AO)))
                                   (if (eqv? g$t$6423$PT8AO 'letrec)
                                     ((case-lambda
                                        ((g$bindings$6438$PT8AO
                                           g$body*$6439$PT8AO)
                                         ((case-lambda
                                            ((g$lhs*$6440$PT8AO
                                               g$rhs*$6441$PT8AO)
                                             (g$cons*$5367$PT8AO
                                               'letrec
                                               (map list
                                                    g$lhs*$6440$PT8AO
                                                    (map g$f$6421$PT8AO
                                                         g$rhs*$6441$PT8AO))
                                               (map g$f$6421$PT8AO
                                                    g$body*$6439$PT8AO))))
                                          (map car g$bindings$6438$PT8AO)
                                          (map g$cadr$4896$PT8AO
                                               g$bindings$6438$PT8AO))))
                                      (g$cadr$4896$PT8AO g$x$6422$PT8AO)
                                      (g$cddr$4898$PT8AO g$x$6422$PT8AO))
                                     (if (eqv? g$t$6423$PT8AO 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$6434$PT8AO
                                             g$body*$6435$PT8AO)
                                           ((case-lambda
                                              ((g$lhs*$6436$PT8AO
                                                 g$rhs*$6437$PT8AO)
                                               (g$cons*$5367$PT8AO
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6436$PT8AO
                                                      (map g$f$6421$PT8AO
                                                           g$rhs*$6437$PT8AO))
                                                 (map g$f$6421$PT8AO
                                                      g$body*$6435$PT8AO))))
                                            (map car g$bindings$6434$PT8AO)
                                            (map g$cadr$4896$PT8AO
                                                 g$bindings$6434$PT8AO))))
                                        (g$cadr$4896$PT8AO g$x$6422$PT8AO)
                                        (g$cddr$4898$PT8AO g$x$6422$PT8AO))
                                       (if (eqv?
                                             g$t$6423$PT8AO
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$6427$PT8AO g$x$6428$PT8AO)
                                             ((case-lambda
                                                ((g$bindings$6429$PT8AO
                                                   g$body*$6430$PT8AO)
                                                 ((case-lambda
                                                    ((g$lhs*$6431$PT8AO
                                                       g$lhs**$6432$PT8AO
                                                       g$rhs*$6433$PT8AO)
                                                     (g$cons*$5367$PT8AO
                                                       'library-letrec*
                                                       g$name$6427$PT8AO
                                                       (map list
                                                            g$lhs*$6431$PT8AO
                                                            g$lhs**$6432$PT8AO
                                                            (map g$f$6421$PT8AO
                                                                 g$rhs*$6433$PT8AO))
                                                       (map g$f$6421$PT8AO
                                                            g$body*$6430$PT8AO))))
                                                  (map car
                                                       g$bindings$6429$PT8AO)
                                                  (map g$cadr$4896$PT8AO
                                                       g$bindings$6429$PT8AO)
                                                  (map g$caddr$4902$PT8AO
                                                       g$bindings$6429$PT8AO))))
                                              (g$cadr$4896$PT8AO g$x$6428$PT8AO)
                                              (g$cddr$4898$PT8AO
                                                g$x$6428$PT8AO))))
                                          (g$cadr$4896$PT8AO g$x$6422$PT8AO)
                                          (cdr g$x$6422$PT8AO))
                                         (if (eqv? g$t$6423$PT8AO 'begin)
                                           (cons
                                             'begin
                                             (map g$f$6421$PT8AO
                                                  (cdr g$x$6422$PT8AO)))
                                           (if (eqv? g$t$6423$PT8AO 'set!)
                                             (list
                                               'set!
                                               (g$cadr$4896$PT8AO
                                                 g$x$6422$PT8AO)
                                               (g$f$6421$PT8AO
                                                 (g$caddr$4902$PT8AO
                                                   g$x$6422$PT8AO)))
                                             (if (eqv?
                                                   g$t$6423$PT8AO
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$6424$PT8AO)
                                                   ((case-lambda
                                                      ((g$t$6425$PT8AO)
                                                       (if g$t$6425$PT8AO
                                                         ((case-lambda
                                                            ((g$loc$6426$PT8AO)
                                                             g$loc$6426$PT8AO))
                                                          g$t$6425$PT8AO)
                                                         g$op$6424$PT8AO)))
                                                    ((g$current-primitive-locations$6403$PT8AO)
                                                     g$op$6424$PT8AO))))
                                                (g$cadr$4896$PT8AO
                                                  g$x$6422$PT8AO))
                                               (if (eqv? g$t$6423$PT8AO 'define)
                                                 g$x$6422$PT8AO
                                                 (if (list? g$x$6422$PT8AO)
                                                   (map g$f$6421$PT8AO
                                                        g$x$6422$PT8AO)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6422$PT8AO
                                                     (list?
                                                       g$x$6422$PT8AO)))))))))))))))
                          (car g$x$6422$PT8AO))
                         g$x$6422$PT8AO)))))
          g$f$6421$PT8AO))))
   (g$expanded->core$6406$PT8AO
     g$expanded->core$6451$PT8AO
     (case-lambda
       ((g$x$6444$PT8AO) ((g$rewriter$6405$PT8AO '#t) g$x$6444$PT8AO))))
   (g$compile-core-expr$6407$PT8AO
     g$compile-core-expr$6452$PT8AO
     (case-lambda
       ((g$x$6445$PT8AO) ((g$rewriter$6405$PT8AO '#f) g$x$6445$PT8AO))))
   (g$compile-core-expr-to-port$6408$PT8AO
     g$compile-core-expr-to-port$6453$PT8AO
     (case-lambda
       ((g$x$6446$PT8AO g$p$6447$PT8AO)
        (g$pretty-print$6402$PT8AO
          ((g$rewriter$6405$PT8AO '#f) g$x$6446$PT8AO)
          g$p$6447$PT8AO)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6492$PT8AO
     g$make-collection$6696$PT8AO
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6553$PT8AO)
            (letrec* ((g$set-cons$6554$PT8AO
                        (case-lambda
                          ((g$x$6556$PT8AO g$ls$6557$PT8AO)
                           (if (memq g$x$6556$PT8AO g$ls$6557$PT8AO)
                             g$ls$6557$PT8AO
                             (cons g$x$6556$PT8AO g$ls$6557$PT8AO))))))
              (case-lambda
                (() g$set$6553$PT8AO)
                ((g$x$6555$PT8AO)
                 (set! g$set$6553$PT8AO
                   (g$set-cons$6554$PT8AO g$x$6555$PT8AO g$set$6553$PT8AO)))))))
         '()))))
   (g$current-library-collection$6493$PT8AO
     g$current-library-collection$6697$PT8AO
     (g$make-parameter$6205$PT8AO
       (g$make-collection$6492$PT8AO)
       (case-lambda
         ((g$x$6558$PT8AO)
          (begin
            (if (procedure? g$x$6558$PT8AO)
              (void)
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6558$PT8AO))
            g$x$6558$PT8AO)))))
   (g$7331$6494$PT8AO
     g$7331$6698$PT8AO
     (make-record-type-descriptor
       'library
       '#f
       'g$7334$PT8AO
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7333$6495$PT8AO g$7333$6699$PT8AO '#f)
   (g$7332$6496$PT8AO
     g$7332$6700$PT8AO
     (make-record-constructor-descriptor
       g$7331$6494$PT8AO
       '#f
       g$7333$6495$PT8AO))
   (g$library?$6497$PT8AO
     g$library?$6701$PT8AO
     (record-predicate g$7331$6494$PT8AO))
   (g$make-library$6498$PT8AO
     g$make-library$6702$PT8AO
     (record-constructor g$7332$6496$PT8AO))
   (g$library-id$6499$PT8AO
     g$library-id$6703$PT8AO
     (record-accessor g$7331$6494$PT8AO '0))
   (g$library-name$6500$PT8AO
     g$library-name$6704$PT8AO
     (record-accessor g$7331$6494$PT8AO '1))
   (g$library-version$6501$PT8AO
     g$library-version$6705$PT8AO
     (record-accessor g$7331$6494$PT8AO '2))
   (g$library-imp*$6502$PT8AO
     g$library-imp*$6706$PT8AO
     (record-accessor g$7331$6494$PT8AO '3))
   (g$library-vis*$6503$PT8AO
     g$library-vis*$6707$PT8AO
     (record-accessor g$7331$6494$PT8AO '4))
   (g$library-inv*$6504$PT8AO
     g$library-inv*$6708$PT8AO
     (record-accessor g$7331$6494$PT8AO '5))
   (g$library-subst$6505$PT8AO
     g$library-subst$6709$PT8AO
     (record-accessor g$7331$6494$PT8AO '6))
   (g$library-env$6506$PT8AO
     g$library-env$6710$PT8AO
     (record-accessor g$7331$6494$PT8AO '7))
   (g$library-visit-state$6507$PT8AO
     g$library-visit-state$6711$PT8AO
     (record-accessor g$7331$6494$PT8AO '8))
   (g$library-invoke-state$6508$PT8AO
     g$library-invoke-state$6712$PT8AO
     (record-accessor g$7331$6494$PT8AO '9))
   (g$library-visit-code$6509$PT8AO
     g$library-visit-code$6713$PT8AO
     (record-accessor g$7331$6494$PT8AO '10))
   (g$library-invoke-code$6510$PT8AO
     g$library-invoke-code$6714$PT8AO
     (record-accessor g$7331$6494$PT8AO '11))
   (g$library-visible?$6511$PT8AO
     g$library-visible?$6715$PT8AO
     (record-accessor g$7331$6494$PT8AO '12))
   (g$library-source-file-name$6512$PT8AO
     g$library-source-file-name$6716$PT8AO
     (record-accessor g$7331$6494$PT8AO '13))
   (g$set-library-id!$6513$PT8AO
     g$set-library-id!$6717$PT8AO
     (record-mutator g$7331$6494$PT8AO '0))
   (g$set-library-name!$6514$PT8AO
     g$set-library-name!$6718$PT8AO
     (record-mutator g$7331$6494$PT8AO '1))
   (g$set-library-version!$6515$PT8AO
     g$set-library-version!$6719$PT8AO
     (record-mutator g$7331$6494$PT8AO '2))
   (g$set-library-imp*!$6516$PT8AO
     g$set-library-imp*!$6720$PT8AO
     (record-mutator g$7331$6494$PT8AO '3))
   (g$set-library-vis*!$6517$PT8AO
     g$set-library-vis*!$6721$PT8AO
     (record-mutator g$7331$6494$PT8AO '4))
   (g$set-library-inv*!$6518$PT8AO
     g$set-library-inv*!$6722$PT8AO
     (record-mutator g$7331$6494$PT8AO '5))
   (g$set-library-subst!$6519$PT8AO
     g$set-library-subst!$6723$PT8AO
     (record-mutator g$7331$6494$PT8AO '6))
   (g$set-library-env!$6520$PT8AO
     g$set-library-env!$6724$PT8AO
     (record-mutator g$7331$6494$PT8AO '7))
   (g$set-library-visit-state!$6521$PT8AO
     g$set-library-visit-state!$6725$PT8AO
     (record-mutator g$7331$6494$PT8AO '8))
   (g$set-library-invoke-state!$6522$PT8AO
     g$set-library-invoke-state!$6726$PT8AO
     (record-mutator g$7331$6494$PT8AO '9))
   (g$set-library-visit-code!$6523$PT8AO
     g$set-library-visit-code!$6727$PT8AO
     (record-mutator g$7331$6494$PT8AO '10))
   (g$set-library-invoke-code!$6524$PT8AO
     g$set-library-invoke-code!$6728$PT8AO
     (record-mutator g$7331$6494$PT8AO '11))
   (g$set-library-visible?!$6525$PT8AO
     g$set-library-visible?!$6729$PT8AO
     (record-mutator g$7331$6494$PT8AO '12))
   (g$set-library-source-file-name!$6526$PT8AO
     g$set-library-source-file-name!$6730$PT8AO
     (record-mutator g$7331$6494$PT8AO '13))
   (g$rp$6527$PT8AO
     g$rp$6731$PT8AO
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6559$PT8AO g$p$6560$PT8AO)
          (begin
            (if (g$library?$6497$PT8AO g$x$6559$PT8AO)
              (void)
              (assertion-violation 'record-type-printer '"not a library"))
            (display
              (g$format$6121$PT8AO
                '"#<library ~s>"
                (if (null? (g$library-version$6501$PT8AO g$x$6559$PT8AO))
                  (g$library-name$6500$PT8AO g$x$6559$PT8AO)
                  (append
                    (g$library-name$6500$PT8AO g$x$6559$PT8AO)
                    (list (g$library-version$6501$PT8AO g$x$6559$PT8AO)))))
              g$p$6560$PT8AO))))))
   (g$find-dependencies$6528$PT8AO
     g$find-dependencies$6732$PT8AO
     (case-lambda
       ((g$ls$6561$PT8AO)
        (if (null? g$ls$6561$PT8AO)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6529$PT8AO
     g$find-library-by$6733$PT8AO
     (case-lambda
       ((g$pred$6562$PT8AO)
        ((letrec ((g$f$6563$PT8AO
                    (case-lambda
                      ((g$ls$6564$PT8AO)
                       (if (null? g$ls$6564$PT8AO)
                         '#f
                         (if (g$pred$6562$PT8AO (car g$ls$6564$PT8AO))
                           (car g$ls$6564$PT8AO)
                           (g$f$6563$PT8AO (cdr g$ls$6564$PT8AO))))))))
           g$f$6563$PT8AO)
         ((g$current-library-collection$6493$PT8AO))))))
   (g$library-path$6530$PT8AO
     g$library-path$6734$PT8AO
     (g$make-parameter$6205$PT8AO
       '(".")
       (case-lambda
         ((g$x$6565$PT8AO)
          (if (if (list? g$x$6565$PT8AO)
                (begin '#f (g$for-all$5365$PT8AO string? g$x$6565$PT8AO))
                '#f)
            (map (case-lambda ((g$x$6566$PT8AO) g$x$6566$PT8AO)) g$x$6565$PT8AO)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6565$PT8AO))))))
   (g$library-extensions$6531$PT8AO
     g$library-extensions$6735$PT8AO
     (g$make-parameter$6205$PT8AO
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6567$PT8AO)
          (if (if (list? g$x$6567$PT8AO)
                (begin '#f (g$for-all$5365$PT8AO string? g$x$6567$PT8AO))
                '#f)
            (map (case-lambda ((g$x$6568$PT8AO) g$x$6568$PT8AO)) g$x$6567$PT8AO)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6567$PT8AO))))))
   (g$library-name->file-name$6532$PT8AO
     g$library-name->file-name$6736$PT8AO
     (case-lambda
       ((g$x$6569$PT8AO)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6095$PT8AO)))
          (case-lambda
            ((g$p$6572$PT8AO g$extract$6573$PT8AO)
             ((case-lambda
                ((g$extract$6574$PT8AO g$p$6575$PT8AO)
                 (letrec* ((g$display-hex$6576$PT8AO
                             (case-lambda
                               ((g$n$6584$PT8AO)
                                (if (<= '0 g$n$6584$PT8AO '9)
                                  (display g$n$6584$PT8AO g$p$6575$PT8AO)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$6584$PT8AO '10)))
                                    g$p$6575$PT8AO))))))
                   (begin
                     ((letrec ((g$f$6577$PT8AO
                                 (case-lambda
                                   ((g$ls$6578$PT8AO)
                                    (if (null? g$ls$6578$PT8AO)
                                      (void)
                                      (begin
                                        (display '"/" g$p$6575$PT8AO)
                                        (for-each
                                          (case-lambda
                                            ((g$c$6579$PT8AO)
                                             (if ((case-lambda
                                                    ((g$t$6580$PT8AO)
                                                     (if g$t$6580$PT8AO
                                                       g$t$6580$PT8AO
                                                       ((case-lambda
                                                          ((g$t$6581$PT8AO)
                                                           (if g$t$6581$PT8AO
                                                             g$t$6581$PT8AO
                                                             ((case-lambda
                                                                ((g$t$6582$PT8AO)
                                                                 (if g$t$6582$PT8AO
                                                                   g$t$6582$PT8AO
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$6579$PT8AO
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (char<=?
                                                                '#\0
                                                                g$c$6579$PT8AO
                                                                '#\9)))))
                                                        (char<=?
                                                          '#\A
                                                          g$c$6579$PT8AO
                                                          '#\Z)))))
                                                  (char<=?
                                                    '#\a
                                                    g$c$6579$PT8AO
                                                    '#\z))
                                               (display
                                                 g$c$6579$PT8AO
                                                 g$p$6575$PT8AO)
                                               (begin
                                                 (display '"%" g$p$6575$PT8AO)
                                                 ((case-lambda
                                                    ((g$n$6583$PT8AO)
                                                     (begin
                                                       (g$display-hex$6576$PT8AO
                                                         (g$quotient$5722$PT8AO
                                                           g$n$6583$PT8AO
                                                           '16))
                                                       (g$display-hex$6576$PT8AO
                                                         (g$remainder$5723$PT8AO
                                                           g$n$6583$PT8AO
                                                           '16)))))
                                                  (char->integer
                                                    g$c$6579$PT8AO))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$6578$PT8AO))))
                                        (g$f$6577$PT8AO
                                          (cdr g$ls$6578$PT8AO))))))))
                        g$f$6577$PT8AO)
                      g$x$6569$PT8AO)
                     (g$extract$6574$PT8AO)))))
              g$extract$6573$PT8AO
              g$p$6572$PT8AO)))))))
   (g$file-locator$6533$PT8AO
     g$file-locator$6737$PT8AO
     (g$make-parameter$6205$PT8AO
       (case-lambda
         ((g$x$6585$PT8AO)
          ((case-lambda
             ((g$str$6586$PT8AO)
              ((letrec ((g$f$6587$PT8AO
                          (case-lambda
                            ((g$ls$6588$PT8AO
                               g$exts$6589$PT8AO
                               g$failed-list$6590$PT8AO)
                             (if (null? g$ls$6588$PT8AO)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$7436$6591$PT8AO
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$7439$PT8AO
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$7438$6592$PT8AO '#f)
                                             (g$7437$6593$PT8AO
                                               (make-record-constructor-descriptor
                                                 g$7436$6591$PT8AO
                                                 &condition-rcd
                                                 g$7438$6592$PT8AO))
                                             (g$7435$6594$PT8AO
                                               (record-predicate
                                                 g$7436$6591$PT8AO))
                                             (g$make-library-resolution-condition$6595$PT8AO
                                               (record-constructor
                                                 g$7437$6593$PT8AO))
                                             (g$7433$6596$PT8AO
                                               (record-accessor
                                                 g$7436$6591$PT8AO
                                                 '0))
                                             (g$7434$6597$PT8AO
                                               (record-accessor
                                                 g$7436$6591$PT8AO
                                                 '1))
                                             (g$library-resolution-condition?$6598$PT8AO
                                               (condition-predicate
                                                 g$7436$6591$PT8AO))
                                             (g$condition-library$6599$PT8AO
                                               (condition-accessor
                                                 g$7436$6591$PT8AO
                                                 g$7433$6596$PT8AO))
                                             (g$condition-files$6600$PT8AO
                                               (condition-accessor
                                                 g$7436$6591$PT8AO
                                                 g$7434$6597$PT8AO)))
                                     (raise
                                       (condition
                                         (g$make-error$5639$PT8AO)
                                         (g$make-who-condition$5665$PT8AO
                                           'expander)
                                         (g$make-message-condition$5619$PT8AO
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$6595$PT8AO
                                           g$x$6585$PT8AO
                                           (reverse
                                             g$failed-list$6590$PT8AO))))))))
                               (if (null? g$exts$6589$PT8AO)
                                 (g$f$6587$PT8AO
                                   (cdr g$ls$6588$PT8AO)
                                   (g$library-extensions$6531$PT8AO)
                                   g$failed-list$6590$PT8AO)
                                 ((case-lambda
                                    ((g$name$6601$PT8AO)
                                     (if (g$file-exists?$5236$PT8AO
                                           g$name$6601$PT8AO)
                                       g$name$6601$PT8AO
                                       (g$f$6587$PT8AO
                                         g$ls$6588$PT8AO
                                         (cdr g$exts$6589$PT8AO)
                                         (cons
                                           g$name$6601$PT8AO
                                           g$failed-list$6590$PT8AO)))))
                                  (string-append
                                    (car g$ls$6588$PT8AO)
                                    g$str$6586$PT8AO
                                    (car g$exts$6589$PT8AO)))))))))
                 g$f$6587$PT8AO)
               (g$library-path$6530$PT8AO)
               (g$library-extensions$6531$PT8AO)
               '())))
           (g$library-name->file-name$6532$PT8AO g$x$6585$PT8AO))))
       (case-lambda
         ((g$f$6602$PT8AO)
          (if (procedure? g$f$6602$PT8AO)
            g$f$6602$PT8AO
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$6602$PT8AO))))))
   (g$serialize-all$6534$PT8AO
     g$serialize-all$6738$PT8AO
     (case-lambda
       ((g$serialize$6603$PT8AO g$compile$6604$PT8AO)
        (letrec* ((g$library-desc$6605$PT8AO
                    (case-lambda
                      ((g$x$6607$PT8AO)
                       (list
                         (g$library-id$6499$PT8AO g$x$6607$PT8AO)
                         (g$library-name$6500$PT8AO g$x$6607$PT8AO))))))
          (for-each
            (case-lambda
              ((g$x$6606$PT8AO)
               (if (g$library-source-file-name$6512$PT8AO g$x$6606$PT8AO)
                 (g$serialize$6603$PT8AO
                   (g$library-source-file-name$6512$PT8AO g$x$6606$PT8AO)
                   (list
                     (g$library-id$6499$PT8AO g$x$6606$PT8AO)
                     (g$library-name$6500$PT8AO g$x$6606$PT8AO)
                     (g$library-version$6501$PT8AO g$x$6606$PT8AO)
                     (map g$library-desc$6605$PT8AO
                          (g$library-imp*$6502$PT8AO g$x$6606$PT8AO))
                     (map g$library-desc$6605$PT8AO
                          (g$library-vis*$6503$PT8AO g$x$6606$PT8AO))
                     (map g$library-desc$6605$PT8AO
                          (g$library-inv*$6504$PT8AO g$x$6606$PT8AO))
                     (g$library-subst$6505$PT8AO g$x$6606$PT8AO)
                     (g$library-env$6506$PT8AO g$x$6606$PT8AO)
                     (g$compile$6604$PT8AO
                       (g$library-visit-code$6509$PT8AO g$x$6606$PT8AO))
                     (g$compile$6604$PT8AO
                       (g$library-invoke-code$6510$PT8AO g$x$6606$PT8AO))
                     (g$library-visible?$6511$PT8AO g$x$6606$PT8AO)))
                 (void))))
            ((g$current-library-collection$6493$PT8AO)))))))
   (g$current-precompiled-library-loader$6535$PT8AO
     g$current-precompiled-library-loader$6739$PT8AO
     (g$make-parameter$6205$PT8AO
       (case-lambda ((g$filename$6608$PT8AO g$sk$6609$PT8AO) '#f))))
   (g$try-load-from-file$6536$PT8AO
     g$try-load-from-file$6740$PT8AO
     (case-lambda
       ((g$filename$6610$PT8AO)
        ((g$current-precompiled-library-loader$6535$PT8AO)
         g$filename$6610$PT8AO
         (case-lambda
           ((g$id$6611$PT8AO
              g$name$6612$PT8AO
              g$ver$6613$PT8AO
              g$imp*$6614$PT8AO
              g$vis*$6615$PT8AO
              g$inv*$6616$PT8AO
              g$exp-subst$6617$PT8AO
              g$exp-env$6618$PT8AO
              g$visit-proc$6619$PT8AO
              g$invoke-proc$6620$PT8AO
              g$visible?$6621$PT8AO)
            ((letrec ((g$f$6622$PT8AO
                        (case-lambda
                          ((g$deps$6623$PT8AO)
                           (if (null? g$deps$6623$PT8AO)
                             (begin
                               (g$install-library$6546$PT8AO
                                 g$id$6611$PT8AO
                                 g$name$6612$PT8AO
                                 g$ver$6613$PT8AO
                                 g$imp*$6614$PT8AO
                                 g$vis*$6615$PT8AO
                                 g$inv*$6616$PT8AO
                                 g$exp-subst$6617$PT8AO
                                 g$exp-env$6618$PT8AO
                                 g$visit-proc$6619$PT8AO
                                 g$invoke-proc$6620$PT8AO
                                 '#f
                                 '#f
                                 g$visible?$6621$PT8AO
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$6624$PT8AO)
                                 ((case-lambda
                                    ((g$label$6625$PT8AO g$dname$6626$PT8AO)
                                     ((case-lambda
                                        ((g$l$6627$PT8AO)
                                         (if (if (g$library?$6497$PT8AO
                                                   g$l$6627$PT8AO)
                                               (begin
                                                 '#f
                                                 (eq? g$label$6625$PT8AO
                                                      (g$library-id$6499$PT8AO
                                                        g$l$6627$PT8AO)))
                                               '#f)
                                           (g$f$6622$PT8AO
                                             (cdr g$deps$6623$PT8AO))
                                           (begin
                                             (g$fprintf$6120$PT8AO
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from \\
                           source.
"
                                               g$name$6612$PT8AO
                                               g$dname$6626$PT8AO
                                               g$filename$6610$PT8AO)
                                             '#f))))
                                      (g$find-library-by-name$6541$PT8AO
                                        g$dname$6626$PT8AO))))
                                  (car g$d$6624$PT8AO)
                                  (g$cadr$4896$PT8AO g$d$6624$PT8AO))))
                              (car g$deps$6623$PT8AO)))))))
               g$f$6622$PT8AO)
             (append g$imp*$6614$PT8AO g$vis*$6615$PT8AO g$inv*$6616$PT8AO)))
           (g$others$6628$PT8AO '#f))))))
   (g$library-loader$6537$PT8AO
     g$library-loader$6741$PT8AO
     (g$make-parameter$6205$PT8AO
       (case-lambda
         ((g$x$6629$PT8AO)
          ((case-lambda
             ((g$file-name$6630$PT8AO)
              (if (not g$file-name$6630$PT8AO)
                (assertion-violation '#f '"cannot file library" g$x$6629$PT8AO)
                ((case-lambda
                   ((g$t$6631$PT8AO)
                    (if g$t$6631$PT8AO
                      g$t$6631$PT8AO
                      (begin
                        '#f
                        ((g$current-library-expander$6538$PT8AO)
                         (g$read-library-source-file$6204$PT8AO
                           g$file-name$6630$PT8AO)
                         g$file-name$6630$PT8AO
                         (case-lambda
                           ((g$name$6632$PT8AO)
                            (if (equal? g$name$6632$PT8AO g$x$6629$PT8AO)
                              (void)
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6095$PT8AO)))
                                  (case-lambda
                                    ((g$p$6635$PT8AO g$e$6636$PT8AO)
                                     ((case-lambda
                                        ((g$e$6637$PT8AO g$p$6638$PT8AO)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$6638$PT8AO)
                                           (write g$x$6629$PT8AO g$p$6638$PT8AO)
                                           (display '" in file " g$p$6638$PT8AO)
                                           (display
                                             g$file-name$6630$PT8AO
                                             g$p$6638$PT8AO)
                                           (display '", found " g$p$6638$PT8AO)
                                           (write
                                             g$name$6632$PT8AO
                                             g$p$6638$PT8AO)
                                           (display '" instead" g$p$6638$PT8AO)
                                           (g$e$6637$PT8AO))))
                                      g$e$6636$PT8AO
                                      g$p$6635$PT8AO)))))))))))))
                 (g$try-load-from-file$6536$PT8AO g$file-name$6630$PT8AO)))))
           ((g$file-locator$6533$PT8AO) g$x$6629$PT8AO))))
       (case-lambda
         ((g$f$6639$PT8AO)
          (if (procedure? g$f$6639$PT8AO)
            g$f$6639$PT8AO
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$6639$PT8AO))))))
   (g$current-library-expander$6538$PT8AO
     g$current-library-expander$6742$PT8AO
     (g$make-parameter$6205$PT8AO
       (case-lambda
         ((g$x$6640$PT8AO)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$6641$PT8AO)
          (if (procedure? g$f$6641$PT8AO)
            g$f$6641$PT8AO
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$6641$PT8AO))))))
   (g$external-pending-libraries$6539$PT8AO
     g$external-pending-libraries$6743$PT8AO
     (g$make-parameter$6205$PT8AO '()))
   (g$find-external-library$6540$PT8AO
     g$find-external-library$6744$PT8AO
     (case-lambda
       ((g$name$6642$PT8AO)
        (begin
          (if (g$member$5361$PT8AO
                g$name$6642$PT8AO
                (g$external-pending-libraries$6539$PT8AO))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$6642$PT8AO)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$6645$PT8AO
                g$external-pending-libraries$6646$PT8AO)
              ((case-lambda
                 ((g$swap$6647$PT8AO)
                  (dynamic-wind
                    g$swap$6647$PT8AO
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6537$PT8AO) g$name$6642$PT8AO)
                         ((case-lambda
                            ((g$t$6648$PT8AO)
                             (if g$t$6648$PT8AO
                               g$t$6648$PT8AO
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$6642$PT8AO)))))
                          (g$find-library-by$6529$PT8AO
                            (case-lambda
                              ((g$x$6649$PT8AO)
                               (equal?
                                 (g$library-name$6500$PT8AO g$x$6649$PT8AO)
                                 g$name$6642$PT8AO))))))))
                    g$swap$6647$PT8AO)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$6650$PT8AO)
                      (begin
                        (g$external-pending-libraries$6645$PT8AO
                          g$external-pending-libraries$6646$PT8AO)
                        (set! g$external-pending-libraries$6646$PT8AO
                          g$t$6650$PT8AO))))
                   (g$external-pending-libraries$6645$PT8AO)))))))
           g$external-pending-libraries$6539$PT8AO
           (cons
             g$name$6642$PT8AO
             (g$external-pending-libraries$6539$PT8AO)))))))
   (g$find-library-by-name$6541$PT8AO
     g$find-library-by-name$6745$PT8AO
     (case-lambda
       ((g$name$6651$PT8AO)
        ((case-lambda
           ((g$t$6652$PT8AO)
            (if g$t$6652$PT8AO
              g$t$6652$PT8AO
              (begin
                '#f
                (g$find-external-library$6540$PT8AO g$name$6651$PT8AO)))))
         (g$find-library-by$6529$PT8AO
           (case-lambda
             ((g$x$6653$PT8AO)
              (equal?
                (g$library-name$6500$PT8AO g$x$6653$PT8AO)
                g$name$6651$PT8AO))))))))
   (g$library-exists?$6542$PT8AO
     g$library-exists?$6746$PT8AO
     (case-lambda
       ((g$name$6654$PT8AO)
        (if (g$find-library-by$6529$PT8AO
              (case-lambda
                ((g$x$6655$PT8AO)
                 (equal?
                   (g$library-name$6500$PT8AO g$x$6655$PT8AO)
                   g$name$6654$PT8AO))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6543$PT8AO
     g$find-library-by-spec/die$6747$PT8AO
     (case-lambda
       ((g$spec$6656$PT8AO)
        ((case-lambda
           ((g$id$6657$PT8AO)
            ((case-lambda
               ((g$t$6658$PT8AO)
                (if g$t$6658$PT8AO
                  g$t$6658$PT8AO
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$6656$PT8AO)))))
             (g$find-library-by$6529$PT8AO
               (case-lambda
                 ((g$x$6659$PT8AO)
                  (eq? g$id$6657$PT8AO
                       (g$library-id$6499$PT8AO g$x$6659$PT8AO))))))))
         (car g$spec$6656$PT8AO)))))
   (g$label->binding-table$6544$PT8AO
     g$label->binding-table$6748$PT8AO
     (g$make-eq-hashtable$5158$PT8AO))
   (g$install-library-record$6545$PT8AO
     g$install-library-record$6749$PT8AO
     (case-lambda
       ((g$lib$6660$PT8AO)
        (begin
          ((case-lambda
             ((g$exp-env$6661$PT8AO)
              (for-each
                (case-lambda
                  ((g$x$6662$PT8AO)
                   ((case-lambda
                      ((g$label$6663$PT8AO g$binding$6664$PT8AO)
                       ((case-lambda
                          ((g$binding$6665$PT8AO)
                           (g$hashtable-set!$5162$PT8AO
                             g$label->binding-table$6544$PT8AO
                             g$label$6663$PT8AO
                             g$binding$6665$PT8AO)))
                        ((case-lambda
                           ((g$t$6666$PT8AO)
                            (if (eqv? g$t$6666$PT8AO 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$6660$PT8AO
                                  (cdr g$binding$6664$PT8AO)))
                              (if (eqv? g$t$6666$PT8AO 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$6660$PT8AO
                                    (cdr g$binding$6664$PT8AO)))
                                (if (eqv? g$t$6666$PT8AO 'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$6660$PT8AO
                                      (cdr g$binding$6664$PT8AO)))
                                  g$binding$6664$PT8AO)))))
                         (car g$binding$6664$PT8AO)))))
                    (car g$x$6662$PT8AO)
                    (cdr g$x$6662$PT8AO))))
                g$exp-env$6661$PT8AO)))
           (g$library-env$6506$PT8AO g$lib$6660$PT8AO))
          ((g$current-library-collection$6493$PT8AO) g$lib$6660$PT8AO)))))
   (g$install-library$6546$PT8AO
     g$install-library$6750$PT8AO
     (case-lambda
       ((g$id$6667$PT8AO
          g$name$6668$PT8AO
          g$ver$6669$PT8AO
          g$imp*$6670$PT8AO
          g$vis*$6671$PT8AO
          g$inv*$6672$PT8AO
          g$exp-subst$6673$PT8AO
          g$exp-env$6674$PT8AO
          g$visit-proc$6675$PT8AO
          g$invoke-proc$6676$PT8AO
          g$visit-code$6677$PT8AO
          g$invoke-code$6678$PT8AO
          g$visible?$6679$PT8AO
          g$source-file-name$6680$PT8AO)
        ((case-lambda
           ((g$imp-lib*$6681$PT8AO g$vis-lib*$6682$PT8AO g$inv-lib*$6683$PT8AO)
            (begin
              (if (if (symbol? g$id$6667$PT8AO)
                    (if (list? g$name$6668$PT8AO)
                      (begin '#f (list? g$ver$6669$PT8AO))
                      '#f)
                    '#f)
                (void)
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$6667$PT8AO
                  g$name$6668$PT8AO
                  g$ver$6669$PT8AO))
              (if (g$library-exists?$6542$PT8AO g$name$6668$PT8AO)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$6668$PT8AO)
                (void))
              ((case-lambda
                 ((g$lib$6684$PT8AO)
                  (g$install-library-record$6545$PT8AO g$lib$6684$PT8AO)))
               (g$make-library$6498$PT8AO
                 g$id$6667$PT8AO
                 g$name$6668$PT8AO
                 g$ver$6669$PT8AO
                 g$imp-lib*$6681$PT8AO
                 g$vis-lib*$6682$PT8AO
                 g$inv-lib*$6683$PT8AO
                 g$exp-subst$6673$PT8AO
                 g$exp-env$6674$PT8AO
                 g$visit-proc$6675$PT8AO
                 g$invoke-proc$6676$PT8AO
                 g$visit-code$6677$PT8AO
                 g$invoke-code$6678$PT8AO
                 g$visible?$6679$PT8AO
                 g$source-file-name$6680$PT8AO)))))
         (map g$find-library-by-spec/die$6543$PT8AO g$imp*$6670$PT8AO)
         (map g$find-library-by-spec/die$6543$PT8AO g$vis*$6671$PT8AO)
         (map g$find-library-by-spec/die$6543$PT8AO g$inv*$6672$PT8AO)))))
   (g$imported-label->binding$6547$PT8AO
     g$imported-label->binding$6751$PT8AO
     (case-lambda
       ((g$lab$6685$PT8AO)
        (g$hashtable-ref$5161$PT8AO
          g$label->binding-table$6544$PT8AO
          g$lab$6685$PT8AO
          '#f))))
   (g$invoke-library$6548$PT8AO
     g$invoke-library$6752$PT8AO
     (case-lambda
       ((g$lib$6686$PT8AO)
        ((case-lambda
           ((g$invoke$6687$PT8AO)
            (if (procedure? g$invoke$6687$PT8AO)
              (begin
                (g$set-library-invoke-state!$6522$PT8AO
                  g$lib$6686$PT8AO
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$6686$PT8AO))))
                (for-each
                  g$invoke-library$6548$PT8AO
                  (g$library-inv*$6504$PT8AO g$lib$6686$PT8AO))
                (g$set-library-invoke-state!$6522$PT8AO
                  g$lib$6686$PT8AO
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$6686$PT8AO))))
                (g$invoke$6687$PT8AO)
                (g$set-library-invoke-state!$6522$PT8AO g$lib$6686$PT8AO '#t))
              (void))))
         (g$library-invoke-state$6508$PT8AO g$lib$6686$PT8AO)))))
   (g$visit-library$6549$PT8AO
     g$visit-library$6753$PT8AO
     (case-lambda
       ((g$lib$6688$PT8AO)
        ((case-lambda
           ((g$visit$6689$PT8AO)
            (if (procedure? g$visit$6689$PT8AO)
              (begin
                (g$set-library-visit-state!$6521$PT8AO
                  g$lib$6688$PT8AO
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$6688$PT8AO))))
                (for-each
                  g$invoke-library$6548$PT8AO
                  (g$library-vis*$6503$PT8AO g$lib$6688$PT8AO))
                (g$set-library-visit-state!$6521$PT8AO
                  g$lib$6688$PT8AO
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$6688$PT8AO))))
                (g$visit$6689$PT8AO)
                (g$set-library-visit-state!$6521$PT8AO g$lib$6688$PT8AO '#t))
              (void))))
         (g$library-visit-state$6507$PT8AO g$lib$6688$PT8AO)))))
   (g$invoke-library-by-spec$6550$PT8AO
     g$invoke-library-by-spec$6754$PT8AO
     (case-lambda
       ((g$spec$6690$PT8AO)
        (g$invoke-library$6548$PT8AO
          (g$find-library-by-spec/die$6543$PT8AO g$spec$6690$PT8AO)))))
   (g$installed-libraries$6551$PT8AO
     g$installed-libraries$6755$PT8AO
     (case-lambda
       ((g$all?$6691$PT8AO)
        ((letrec ((g$f$6692$PT8AO
                    (case-lambda
                      ((g$ls$6693$PT8AO)
                       (if (null? g$ls$6693$PT8AO)
                         '()
                         (if ((case-lambda
                                ((g$t$6694$PT8AO)
                                 (if g$t$6694$PT8AO
                                   g$t$6694$PT8AO
                                   (begin
                                     '#f
                                     (g$library-visible?$6511$PT8AO
                                       (car g$ls$6693$PT8AO))))))
                              g$all?$6691$PT8AO)
                           (cons
                             (car g$ls$6693$PT8AO)
                             (g$f$6692$PT8AO (cdr g$ls$6693$PT8AO)))
                           (g$f$6692$PT8AO (cdr g$ls$6693$PT8AO))))))))
           g$f$6692$PT8AO)
         ((g$current-library-collection$6493$PT8AO))))
       (() (g$installed-libraries$6551$PT8AO '#f))))
   (g$library-spec$6552$PT8AO
     g$library-spec$6756$PT8AO
     (case-lambda
       ((g$x$6695$PT8AO)
        (begin
          (if (g$library?$6497$PT8AO g$x$6695$PT8AO)
            (void)
            (assertion-violation 'library-spec '"not a library" g$x$6695$PT8AO))
          (list
            (g$library-id$6499$PT8AO g$x$6695$PT8AO)
            (g$library-name$6500$PT8AO g$x$6695$PT8AO)
            (g$library-version$6501$PT8AO g$x$6695$PT8AO)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$6757$PT8AO
     g$build-global-define$6867$PT8AO
     (case-lambda ((g$x$6838$PT8AO) (g$build-void$6834$PT8AO))))
   (g$build-lambda$6806$PT8AO
     g$build-lambda$6868$PT8AO
     (case-lambda
       ((g$ae$6839$PT8AO g$vars$6840$PT8AO g$exp$6841$PT8AO)
        (list 'case-lambda (list g$vars$6840$PT8AO g$exp$6841$PT8AO)))))
   (g$build-case-lambda$6807$PT8AO
     g$build-case-lambda$6869$PT8AO
     (case-lambda
       ((g$ae$6842$PT8AO g$vars*$6843$PT8AO g$exp*$6844$PT8AO)
        (cons 'case-lambda (map list g$vars*$6843$PT8AO g$exp*$6844$PT8AO)))))
   (g$build-let$6808$PT8AO
     g$build-let$6870$PT8AO
     (case-lambda
       ((g$ae$6845$PT8AO g$lhs*$6846$PT8AO g$rhs*$6847$PT8AO g$body$6848$PT8AO)
        (cons
          (g$build-lambda$6806$PT8AO
            g$ae$6845$PT8AO
            g$lhs*$6846$PT8AO
            g$body$6848$PT8AO)
          g$rhs*$6847$PT8AO))))
   (g$build-sequence$6833$PT8AO
     g$build-sequence$6871$PT8AO
     (case-lambda
       ((g$ae$6849$PT8AO g$exps$6850$PT8AO)
        ((letrec ((g$loop$6851$PT8AO
                    (case-lambda
                      ((g$exps$6852$PT8AO)
                       (if (null? (cdr g$exps$6852$PT8AO))
                         (car g$exps$6852$PT8AO)
                         (if (equal?
                               (car g$exps$6852$PT8AO)
                               (g$build-void$6834$PT8AO))
                           (g$loop$6851$PT8AO (cdr g$exps$6852$PT8AO))
                           (cons 'begin g$exps$6852$PT8AO)))))))
           g$loop$6851$PT8AO)
         g$exps$6850$PT8AO))))
   (g$build-void$6834$PT8AO
     g$build-void$6872$PT8AO
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$6835$PT8AO
     g$build-letrec$6873$PT8AO
     (case-lambda
       ((g$ae$6853$PT8AO
          g$vars$6854$PT8AO
          g$val-exps$6855$PT8AO
          g$body-exp$6856$PT8AO)
        (if (null? g$vars$6854$PT8AO)
          g$body-exp$6856$PT8AO
          (list
            'letrec
            (map list g$vars$6854$PT8AO g$val-exps$6855$PT8AO)
            g$body-exp$6856$PT8AO)))))
   (g$build-letrec*$6836$PT8AO
     g$build-letrec*$6874$PT8AO
     (case-lambda
       ((g$ae$6857$PT8AO
          g$vars$6858$PT8AO
          g$val-exps$6859$PT8AO
          g$body-exp$6860$PT8AO)
        (if (null? g$vars$6858$PT8AO)
          g$body-exp$6860$PT8AO
          (list
            'letrec*
            (map list g$vars$6858$PT8AO g$val-exps$6859$PT8AO)
            g$body-exp$6860$PT8AO)))))
   (g$build-library-letrec*$6837$PT8AO
     g$build-library-letrec*$6875$PT8AO
     (case-lambda
       ((g$ae$6861$PT8AO
          g$name$6862$PT8AO
          g$vars$6863$PT8AO
          g$locs$6864$PT8AO
          g$val-exps$6865$PT8AO
          g$body-exp$6866$PT8AO)
        (list
          'library-letrec*
          g$name$6862$PT8AO
          (map list g$vars$6863$PT8AO g$locs$6864$PT8AO g$val-exps$6865$PT8AO)
          g$body-exp$6866$PT8AO)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$6876$PT8AO
     g$set-cons$10519$PT8AO
     (case-lambda
       ((g$x$7329$PT8AO g$ls$7330$PT8AO)
        (if (memq g$x$7329$PT8AO g$ls$7330$PT8AO)
          g$ls$7330$PT8AO
          (cons g$x$7329$PT8AO g$ls$7330$PT8AO)))))
   (g$set-union$6877$PT8AO
     g$set-union$10520$PT8AO
     (case-lambda
       ((g$ls1$7331$PT8AO g$ls2$7332$PT8AO)
        (if (null? g$ls1$7331$PT8AO)
          g$ls2$7332$PT8AO
          (if (memq (car g$ls1$7331$PT8AO) g$ls2$7332$PT8AO)
            (g$set-union$6877$PT8AO (cdr g$ls1$7331$PT8AO) g$ls2$7332$PT8AO)
            (cons
              (car g$ls1$7331$PT8AO)
              (g$set-union$6877$PT8AO
                (cdr g$ls1$7331$PT8AO)
                g$ls2$7332$PT8AO)))))))
   (g$top-mark*$6879$PT8AO g$top-mark*$10521$PT8AO '(top))
   (g$top-marked?$6880$PT8AO
     g$top-marked?$10522$PT8AO
     (case-lambda ((g$m*$7333$PT8AO) (memq 'top g$m*$7333$PT8AO))))
   (g$gen-lexical$6881$PT8AO
     g$gen-lexical$10523$PT8AO
     (case-lambda
       ((g$sym$7334$PT8AO)
        (if (symbol? g$sym$7334$PT8AO)
          (gensym g$sym$7334$PT8AO)
          (if (g$stx?$6909$PT8AO g$sym$7334$PT8AO)
            (g$gen-lexical$6881$PT8AO (g$id->sym$6938$PT8AO g$sym$7334$PT8AO))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7334$PT8AO))))))
   (g$gen-global$6882$PT8AO
     g$gen-global$10524$PT8AO
     (case-lambda
       ((g$x$7335$PT8AO) (g$gen-lexical$6881$PT8AO g$x$7335$PT8AO))))
   (g$gen-label$6883$PT8AO
     g$gen-label$10525$PT8AO
     (case-lambda ((g$_$7336$PT8AO) (gensym))))
   (g$gen-top-level-label$6884$PT8AO
     g$gen-top-level-label$10526$PT8AO
     (case-lambda
       ((g$id$7337$PT8AO g$rib$7338$PT8AO)
        (letrec* ((g$find$7339$PT8AO
                    (case-lambda
                      ((g$sym$7345$PT8AO
                         g$mark*$7346$PT8AO
                         g$sym*$7347$PT8AO
                         g$mark**$7348$PT8AO
                         g$label*$7349$PT8AO)
                       (if (pair? g$sym*$7347$PT8AO)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7345$PT8AO
                                        (car g$sym*$7347$PT8AO))
                                 (begin
                                   '#f
                                   (g$same-marks?$6939$PT8AO
                                     g$mark*$7346$PT8AO
                                     (car g$mark**$7348$PT8AO)))
                                 '#f)
                             (car g$label*$7349$PT8AO)
                             (g$find$7339$PT8AO
                               g$sym$7345$PT8AO
                               g$mark*$7346$PT8AO
                               (cdr g$sym*$7347$PT8AO)
                               (cdr g$mark**$7348$PT8AO)
                               (cdr g$label*$7349$PT8AO))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7340$PT8AO g$mark*$7341$PT8AO)
              ((case-lambda
                 ((g$sym*$7342$PT8AO)
                  ((case-lambda
                     ((g$t$7343$PT8AO)
                      (if g$t$7343$PT8AO
                        ((case-lambda
                           ((g$label$7344$PT8AO)
                            (if (g$imported-label->binding$6751$PT8AO
                                  g$label$7344$PT8AO)
                              (gensym)
                              g$label$7344$PT8AO)))
                         g$t$7343$PT8AO)
                        (gensym))))
                   (if (memq
                         g$sym$7340$PT8AO
                         (g$rib-sym*$6892$PT8AO g$rib$7338$PT8AO))
                     (begin
                       '#f
                       (g$find$7339$PT8AO
                         g$sym$7340$PT8AO
                         g$mark*$7341$PT8AO
                         g$sym*$7342$PT8AO
                         (g$rib-mark**$6893$PT8AO g$rib$7338$PT8AO)
                         (g$rib-label*$6894$PT8AO g$rib$7338$PT8AO)))
                     '#f))))
               (g$rib-sym*$6892$PT8AO g$rib$7338$PT8AO))))
           (g$id->sym$6938$PT8AO g$id$7337$PT8AO)
           (g$stx-mark*$6912$PT8AO g$id$7337$PT8AO))))))
   (g$gen-define-label+loc$6885$PT8AO
     g$gen-define-label+loc$10527$PT8AO
     (case-lambda
       ((g$id$7350$PT8AO g$rib$7351$PT8AO)
        ((case-lambda
           ((g$t$7352$PT8AO)
            (if g$t$7352$PT8AO
              ((case-lambda
                 ((g$env$7353$PT8AO)
                  ((case-lambda
                     ((g$label$7354$PT8AO g$locs$7355$PT8AO)
                      (values
                        g$label$7354$PT8AO
                        ((case-lambda
                           ((g$t$7356$PT8AO)
                            (if g$t$7356$PT8AO
                              (cdr g$t$7356$PT8AO)
                              ((case-lambda
                                 ((g$loc$7357$PT8AO)
                                  (begin
                                    (g$set-interaction-env-locs!$7298$PT8AO
                                      g$env$7353$PT8AO
                                      (cons
                                        (cons
                                          g$label$7354$PT8AO
                                          g$loc$7357$PT8AO)
                                        g$locs$7355$PT8AO))
                                    g$loc$7357$PT8AO)))
                               (g$gen-lexical$6881$PT8AO g$id$7350$PT8AO)))))
                         (assq g$label$7354$PT8AO g$locs$7355$PT8AO)))))
                   (g$gen-top-level-label$6884$PT8AO
                     g$id$7350$PT8AO
                     g$rib$7351$PT8AO)
                   (g$interaction-env-locs$7295$PT8AO g$env$7353$PT8AO))))
               g$t$7352$PT8AO)
              (values (gensym) (g$gen-lexical$6881$PT8AO g$id$7350$PT8AO)))))
         (g$top-level-context$7328$PT8AO)))))
   (g$gen-define-label$6886$PT8AO
     g$gen-define-label$10528$PT8AO
     (case-lambda
       ((g$id$7358$PT8AO g$rib$7359$PT8AO)
        (if (g$top-level-context$7328$PT8AO)
          (g$gen-top-level-label$6884$PT8AO g$id$7358$PT8AO g$rib$7359$PT8AO)
          (gensym)))))
   (g$7733$6887$PT8AO
     g$7733$10529$PT8AO
     (make-record-type-descriptor
       'rib
       '#f
       'g$7736$PT8AO
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$7735$6888$PT8AO g$7735$10530$PT8AO '#f)
   (g$7734$6889$PT8AO
     g$7734$10531$PT8AO
     (make-record-constructor-descriptor
       g$7733$6887$PT8AO
       '#f
       g$7735$6888$PT8AO))
   (g$rib?$6890$PT8AO
     g$rib?$10532$PT8AO
     (record-predicate g$7733$6887$PT8AO))
   (g$make-rib$6891$PT8AO
     g$make-rib$10533$PT8AO
     (record-constructor g$7734$6889$PT8AO))
   (g$rib-sym*$6892$PT8AO
     g$rib-sym*$10534$PT8AO
     (record-accessor g$7733$6887$PT8AO '0))
   (g$rib-mark**$6893$PT8AO
     g$rib-mark**$10535$PT8AO
     (record-accessor g$7733$6887$PT8AO '1))
   (g$rib-label*$6894$PT8AO
     g$rib-label*$10536$PT8AO
     (record-accessor g$7733$6887$PT8AO '2))
   (g$rib-sealed/freq$6895$PT8AO
     g$rib-sealed/freq$10537$PT8AO
     (record-accessor g$7733$6887$PT8AO '3))
   (g$set-rib-sym*!$6896$PT8AO
     g$set-rib-sym*!$10538$PT8AO
     (record-mutator g$7733$6887$PT8AO '0))
   (g$set-rib-mark**!$6897$PT8AO
     g$set-rib-mark**!$10539$PT8AO
     (record-mutator g$7733$6887$PT8AO '1))
   (g$set-rib-label*!$6898$PT8AO
     g$set-rib-label*!$10540$PT8AO
     (record-mutator g$7733$6887$PT8AO '2))
   (g$set-rib-sealed/freq!$6899$PT8AO
     g$set-rib-sealed/freq!$10541$PT8AO
     (record-mutator g$7733$6887$PT8AO '3))
   (g$make-empty-rib$6900$PT8AO
     g$make-empty-rib$10542$PT8AO
     (case-lambda (() (g$make-rib$6891$PT8AO '() '() '() '#f))))
   (g$extend-rib!$6901$PT8AO
     g$extend-rib!$10543$PT8AO
     (case-lambda
       ((g$rib$7360$PT8AO g$id$7361$PT8AO g$label$7362$PT8AO)
        (letrec* ((g$find$7363$PT8AO
                    (case-lambda
                      ((g$sym$7369$PT8AO
                         g$mark*$7370$PT8AO
                         g$sym*$7371$PT8AO
                         g$mark**$7372$PT8AO
                         g$label*$7373$PT8AO)
                       (if (pair? g$sym*$7371$PT8AO)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7369$PT8AO
                                        (car g$sym*$7371$PT8AO))
                                 (begin
                                   '#f
                                   (g$same-marks?$6939$PT8AO
                                     g$mark*$7370$PT8AO
                                     (car g$mark**$7372$PT8AO)))
                                 '#f)
                             g$label*$7373$PT8AO
                             (g$find$7363$PT8AO
                               g$sym$7369$PT8AO
                               g$mark*$7370$PT8AO
                               (cdr g$sym*$7371$PT8AO)
                               (cdr g$mark**$7372$PT8AO)
                               (cdr g$label*$7373$PT8AO))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$6895$PT8AO g$rib$7360$PT8AO)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7360$PT8AO)
              (void))
            ((case-lambda
               ((g$sym$7364$PT8AO g$mark*$7365$PT8AO)
                ((case-lambda
                   ((g$sym*$7366$PT8AO)
                    ((case-lambda
                       ((g$t$7367$PT8AO)
                        (if g$t$7367$PT8AO
                          ((case-lambda
                             ((g$p$7368$PT8AO)
                              (if (eq? g$label$7362$PT8AO (car g$p$7368$PT8AO))
                                (void)
                                (if (g$top-level-context$7328$PT8AO)
                                  (set-car! g$p$7368$PT8AO g$label$7362$PT8AO)
                                  (g$syntax-violation$7321$PT8AO
                                    '#f
                                    '"cannot redefine"
                                    g$id$7361$PT8AO)))))
                           g$t$7367$PT8AO)
                          (begin
                            (g$set-rib-sym*!$6896$PT8AO
                              g$rib$7360$PT8AO
                              (cons g$sym$7364$PT8AO g$sym*$7366$PT8AO))
                            (g$set-rib-mark**!$6897$PT8AO
                              g$rib$7360$PT8AO
                              (cons
                                g$mark*$7365$PT8AO
                                (g$rib-mark**$6893$PT8AO g$rib$7360$PT8AO)))
                            (g$set-rib-label*!$6898$PT8AO
                              g$rib$7360$PT8AO
                              (cons
                                g$label$7362$PT8AO
                                (g$rib-label*$6894$PT8AO g$rib$7360$PT8AO)))))))
                     (if (memq
                           g$sym$7364$PT8AO
                           (g$rib-sym*$6892$PT8AO g$rib$7360$PT8AO))
                       (begin
                         '#f
                         (g$find$7363$PT8AO
                           g$sym$7364$PT8AO
                           g$mark*$7365$PT8AO
                           g$sym*$7366$PT8AO
                           (g$rib-mark**$6893$PT8AO g$rib$7360$PT8AO)
                           (g$rib-label*$6894$PT8AO g$rib$7360$PT8AO)))
                       '#f))))
                 (g$rib-sym*$6892$PT8AO g$rib$7360$PT8AO))))
             (g$id->sym$6938$PT8AO g$id$7361$PT8AO)
             (g$stx-mark*$6912$PT8AO g$id$7361$PT8AO)))))))
   (g$make-rib-map$6902$PT8AO
     g$make-rib-map$10544$PT8AO
     (case-lambda
       ((g$sym*$7374$PT8AO)
        ((case-lambda
           ((g$ht$7375$PT8AO)
            ((letrec ((g$f$7376$PT8AO
                        (case-lambda
                          ((g$i$7377$PT8AO g$sym*$7378$PT8AO)
                           (if (null? g$sym*$7378$PT8AO)
                             g$ht$7375$PT8AO
                             (begin
                               (g$hashtable-update!$5165$PT8AO
                                 g$ht$7375$PT8AO
                                 (car g$sym*$7378$PT8AO)
                                 (case-lambda
                                   ((g$x$7379$PT8AO)
                                    (cons g$i$7377$PT8AO g$x$7379$PT8AO)))
                                 '())
                               (g$f$7376$PT8AO
                                 (+ g$i$7377$PT8AO '1)
                                 (cdr g$sym*$7378$PT8AO))))))))
               g$f$7376$PT8AO)
             '0
             g$sym*$7374$PT8AO)))
         (g$make-eq-hashtable$5158$PT8AO)))))
   (g$seal-rib!$6903$PT8AO
     g$seal-rib!$10545$PT8AO
     (case-lambda
       ((g$rib$7380$PT8AO)
        ((case-lambda
           ((g$sym*$7381$PT8AO)
            (if (null? g$sym*$7381$PT8AO)
              (void)
              (begin
                (g$set-rib-sym*!$6896$PT8AO
                  g$rib$7380$PT8AO
                  (list->vector g$sym*$7381$PT8AO))
                (g$set-rib-mark**!$6897$PT8AO
                  g$rib$7380$PT8AO
                  (list->vector (g$rib-mark**$6893$PT8AO g$rib$7380$PT8AO)))
                (g$set-rib-label*!$6898$PT8AO
                  g$rib$7380$PT8AO
                  (list->vector (g$rib-label*$6894$PT8AO g$rib$7380$PT8AO)))
                (g$set-rib-sealed/freq!$6899$PT8AO
                  g$rib$7380$PT8AO
                  (g$make-rib-map$6902$PT8AO g$sym*$7381$PT8AO))))))
         (g$rib-sym*$6892$PT8AO g$rib$7380$PT8AO)))))
   (g$unseal-rib!$6904$PT8AO
     g$unseal-rib!$10546$PT8AO
     (case-lambda
       ((g$rib$7382$PT8AO)
        (if (g$rib-sealed/freq$6895$PT8AO g$rib$7382$PT8AO)
          (begin
            (g$set-rib-sealed/freq!$6899$PT8AO g$rib$7382$PT8AO '#f)
            (g$set-rib-sym*!$6896$PT8AO
              g$rib$7382$PT8AO
              (vector->list (g$rib-sym*$6892$PT8AO g$rib$7382$PT8AO)))
            (g$set-rib-mark**!$6897$PT8AO
              g$rib$7382$PT8AO
              (vector->list (g$rib-mark**$6893$PT8AO g$rib$7382$PT8AO)))
            (g$set-rib-label*!$6898$PT8AO
              g$rib$7382$PT8AO
              (vector->list (g$rib-label*$6894$PT8AO g$rib$7382$PT8AO))))
          (void)))))
   (g$make-full-rib$6905$PT8AO
     g$make-full-rib$10547$PT8AO
     (case-lambda
       ((g$id*$7383$PT8AO g$label*$7384$PT8AO)
        ((case-lambda
           ((g$r$7385$PT8AO)
            (begin (g$seal-rib!$6903$PT8AO g$r$7385$PT8AO) g$r$7385$PT8AO)))
         (g$make-rib$6891$PT8AO
           (map g$id->sym$6938$PT8AO g$id*$7383$PT8AO)
           (map g$stx-mark*$6912$PT8AO g$id*$7383$PT8AO)
           g$label*$7384$PT8AO
           '#f)))))
   (g$7759$6906$PT8AO
     g$7759$10548$PT8AO
     (make-record-type-descriptor
       'stx
       '#f
       'g$7762$PT8AO
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$7761$6907$PT8AO g$7761$10549$PT8AO '#f)
   (g$7760$6908$PT8AO
     g$7760$10550$PT8AO
     (make-record-constructor-descriptor
       g$7759$6906$PT8AO
       '#f
       g$7761$6907$PT8AO))
   (g$stx?$6909$PT8AO
     g$stx?$10551$PT8AO
     (record-predicate g$7759$6906$PT8AO))
   (g$make-stx$6910$PT8AO
     g$make-stx$10552$PT8AO
     (record-constructor g$7760$6908$PT8AO))
   (g$stx-expr$6911$PT8AO
     g$stx-expr$10553$PT8AO
     (record-accessor g$7759$6906$PT8AO '0))
   (g$stx-mark*$6912$PT8AO
     g$stx-mark*$10554$PT8AO
     (record-accessor g$7759$6906$PT8AO '1))
   (g$stx-subst*$6913$PT8AO
     g$stx-subst*$10555$PT8AO
     (record-accessor g$7759$6906$PT8AO '2))
   (g$stx-ae*$6914$PT8AO
     g$stx-ae*$10556$PT8AO
     (record-accessor g$7759$6906$PT8AO '3))
   (g$set-stx-expr!$6915$PT8AO
     g$set-stx-expr!$10557$PT8AO
     (record-mutator g$7759$6906$PT8AO '0))
   (g$set-stx-mark*!$6916$PT8AO
     g$set-stx-mark*!$10558$PT8AO
     (record-mutator g$7759$6906$PT8AO '1))
   (g$set-stx-subst*!$6917$PT8AO
     g$set-stx-subst*!$10559$PT8AO
     (record-mutator g$7759$6906$PT8AO '2))
   (g$set-stx-ae*!$6918$PT8AO
     g$set-stx-ae*!$10560$PT8AO
     (record-mutator g$7759$6906$PT8AO '3))
   (g$rp$6919$PT8AO
     g$rp$10561$PT8AO
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7386$PT8AO g$p$7387$PT8AO)
          (begin
            (display '"#<syntax " g$p$7387$PT8AO)
            (write (g$stx->datum$6948$PT8AO g$x$7386$PT8AO) g$p$7387$PT8AO)
            ((case-lambda
               ((g$expr$7388$PT8AO)
                (if (annotation? g$expr$7388$PT8AO)
                  ((case-lambda
                     ((g$src$7389$PT8AO)
                      (if (pair? g$src$7389$PT8AO)
                        (begin
                          (display '" [" g$p$7387$PT8AO)
                          (display (cdr g$src$7389$PT8AO) g$p$7387$PT8AO)
                          (display '" of " g$p$7387$PT8AO)
                          (display (car g$src$7389$PT8AO) g$p$7387$PT8AO)
                          (display '"]" g$p$7387$PT8AO))
                        (void))))
                   (annotation-source g$expr$7388$PT8AO))
                  (void))))
             (g$stx-expr$6911$PT8AO g$x$7386$PT8AO))
            (display '">" g$p$7387$PT8AO))))))
   (g$datum->stx$6920$PT8AO
     g$datum->stx$10562$PT8AO
     (case-lambda
       ((g$id$7390$PT8AO g$datum$7391$PT8AO)
        (g$make-stx$6910$PT8AO
          g$datum$7391$PT8AO
          (g$stx-mark*$6912$PT8AO g$id$7390$PT8AO)
          (g$stx-subst*$6913$PT8AO g$id$7390$PT8AO)
          (g$stx-ae*$6914$PT8AO g$id$7390$PT8AO)))))
   (g$gen-mark$6921$PT8AO
     g$gen-mark$10563$PT8AO
     (case-lambda (() (string '#\m))))
   (g$anti-mark$6922$PT8AO g$anti-mark$10564$PT8AO '#f)
   (g$anti-mark?$6923$PT8AO g$anti-mark?$10565$PT8AO not)
   (g$join-wraps$6924$PT8AO
     g$join-wraps$10566$PT8AO
     (case-lambda
       ((g$m1*$7392$PT8AO g$s1*$7393$PT8AO g$ae1*$7394$PT8AO g$e$7395$PT8AO)
        (letrec* ((g$cancel$7396$PT8AO
                    (case-lambda
                      ((g$ls1$7400$PT8AO g$ls2$7401$PT8AO)
                       ((letrec ((g$f$7402$PT8AO
                                   (case-lambda
                                     ((g$x$7403$PT8AO g$ls1$7404$PT8AO)
                                      (if (null? g$ls1$7404$PT8AO)
                                        (cdr g$ls2$7401$PT8AO)
                                        (cons
                                          g$x$7403$PT8AO
                                          (g$f$7402$PT8AO
                                            (car g$ls1$7404$PT8AO)
                                            (cdr g$ls1$7404$PT8AO))))))))
                          g$f$7402$PT8AO)
                        (car g$ls1$7400$PT8AO)
                        (cdr g$ls1$7400$PT8AO))))))
          ((case-lambda
             ((g$m2*$7397$PT8AO g$s2*$7398$PT8AO g$ae2*$7399$PT8AO)
              (if (if (not (null? g$m1*$7392$PT8AO))
                    (if (not (null? g$m2*$7397$PT8AO))
                      (begin
                        '#f
                        (g$anti-mark?$6923$PT8AO (car g$m2*$7397$PT8AO)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7396$PT8AO g$m1*$7392$PT8AO g$m2*$7397$PT8AO)
                  (g$cancel$7396$PT8AO g$s1*$7393$PT8AO g$s2*$7398$PT8AO)
                  (g$cancel$7396$PT8AO g$ae1*$7394$PT8AO g$ae2*$7399$PT8AO))
                (values
                  (append g$m1*$7392$PT8AO g$m2*$7397$PT8AO)
                  (append g$s1*$7393$PT8AO g$s2*$7398$PT8AO)
                  (append g$ae1*$7394$PT8AO g$ae2*$7399$PT8AO)))))
           (g$stx-mark*$6912$PT8AO g$e$7395$PT8AO)
           (g$stx-subst*$6913$PT8AO g$e$7395$PT8AO)
           (g$stx-ae*$6914$PT8AO g$e$7395$PT8AO))))))
   (g$mkstx$6925$PT8AO
     g$mkstx$10567$PT8AO
     (case-lambda
       ((g$e$7405$PT8AO g$m*$7406$PT8AO g$s*$7407$PT8AO g$ae*$7408$PT8AO)
        (if (g$stx?$6909$PT8AO g$e$7405$PT8AO)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$6924$PT8AO
                 g$m*$7406$PT8AO
                 g$s*$7407$PT8AO
                 g$ae*$7408$PT8AO
                 g$e$7405$PT8AO)))
            (case-lambda
              ((g$m*$7412$PT8AO g$s*$7413$PT8AO g$ae*$7414$PT8AO)
               ((case-lambda
                  ((g$ae*$7415$PT8AO g$s*$7416$PT8AO g$m*$7417$PT8AO)
                   (g$make-stx$6910$PT8AO
                     (g$stx-expr$6911$PT8AO g$e$7405$PT8AO)
                     g$m*$7417$PT8AO
                     g$s*$7416$PT8AO
                     g$ae*$7415$PT8AO)))
                g$ae*$7414$PT8AO
                g$s*$7413$PT8AO
                g$m*$7412$PT8AO))))
          (g$make-stx$6910$PT8AO
            g$e$7405$PT8AO
            g$m*$7406$PT8AO
            g$s*$7407$PT8AO
            g$ae*$7408$PT8AO)))))
   (g$add-mark$6926$PT8AO
     g$add-mark$10568$PT8AO
     (case-lambda
       ((g$m$7418$PT8AO g$e$7419$PT8AO g$ae$7420$PT8AO)
        (g$mkstx$6925$PT8AO
          g$e$7419$PT8AO
          (list g$m$7418$PT8AO)
          '(shift)
          (list g$ae$7420$PT8AO)))))
   (g$add-subst$6927$PT8AO
     g$add-subst$10569$PT8AO
     (case-lambda
       ((g$subst$7421$PT8AO g$e$7422$PT8AO)
        (g$mkstx$6925$PT8AO g$e$7422$PT8AO '() (list g$subst$7421$PT8AO) '()))))
   (g$syntax-kind?$6928$PT8AO
     g$syntax-kind?$10570$PT8AO
     (case-lambda
       ((g$x$7423$PT8AO g$p?$7424$PT8AO)
        (if (g$stx?$6909$PT8AO g$x$7423$PT8AO)
          (g$syntax-kind?$6928$PT8AO
            (g$stx-expr$6911$PT8AO g$x$7423$PT8AO)
            g$p?$7424$PT8AO)
          (if (annotation? g$x$7423$PT8AO)
            (g$syntax-kind?$6928$PT8AO
              (annotation-expression g$x$7423$PT8AO)
              g$p?$7424$PT8AO)
            (g$p?$7424$PT8AO g$x$7423$PT8AO))))))
   (g$syntax-vector->list$6929$PT8AO
     g$syntax-vector->list$10571$PT8AO
     (case-lambda
       ((g$x$7425$PT8AO)
        (if (g$stx?$6909$PT8AO g$x$7425$PT8AO)
          ((case-lambda
             ((g$ls$7426$PT8AO g$m*$7427$PT8AO g$s*$7428$PT8AO g$ae*$7429$PT8AO)
              (map (case-lambda
                     ((g$x$7430$PT8AO)
                      (g$mkstx$6925$PT8AO
                        g$x$7430$PT8AO
                        g$m*$7427$PT8AO
                        g$s*$7428$PT8AO
                        g$ae*$7429$PT8AO)))
                   g$ls$7426$PT8AO)))
           (g$syntax-vector->list$6929$PT8AO
             (g$stx-expr$6911$PT8AO g$x$7425$PT8AO))
           (g$stx-mark*$6912$PT8AO g$x$7425$PT8AO)
           (g$stx-subst*$6913$PT8AO g$x$7425$PT8AO)
           (g$stx-ae*$6914$PT8AO g$x$7425$PT8AO))
          (if (annotation? g$x$7425$PT8AO)
            (g$syntax-vector->list$6929$PT8AO
              (annotation-expression g$x$7425$PT8AO))
            (if (vector? g$x$7425$PT8AO)
              (vector->list g$x$7425$PT8AO)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7425$PT8AO)))))))
   (g$syntax-pair?$6930$PT8AO
     g$syntax-pair?$10572$PT8AO
     (case-lambda
       ((g$x$7431$PT8AO) (g$syntax-kind?$6928$PT8AO g$x$7431$PT8AO pair?))))
   (g$syntax-vector?$6931$PT8AO
     g$syntax-vector?$10573$PT8AO
     (case-lambda
       ((g$x$7432$PT8AO) (g$syntax-kind?$6928$PT8AO g$x$7432$PT8AO vector?))))
   (g$syntax-null?$6932$PT8AO
     g$syntax-null?$10574$PT8AO
     (case-lambda
       ((g$x$7433$PT8AO) (g$syntax-kind?$6928$PT8AO g$x$7433$PT8AO null?))))
   (g$syntax-list?$6933$PT8AO
     g$syntax-list?$10575$PT8AO
     (case-lambda
       ((g$x$7434$PT8AO)
        ((case-lambda
           ((g$t$7435$PT8AO)
            (if g$t$7435$PT8AO
              g$t$7435$PT8AO
              (begin
                '#f
                (if (g$syntax-pair?$6930$PT8AO g$x$7434$PT8AO)
                  (begin
                    '#f
                    (g$syntax-list?$6933$PT8AO
                      (g$syntax-cdr$6935$PT8AO g$x$7434$PT8AO)))
                  '#f)))))
         (g$syntax-null?$6932$PT8AO g$x$7434$PT8AO)))))
   (g$syntax-car$6934$PT8AO
     g$syntax-car$10576$PT8AO
     (case-lambda
       ((g$x$7436$PT8AO)
        (if (g$stx?$6909$PT8AO g$x$7436$PT8AO)
          (g$mkstx$6925$PT8AO
            (g$syntax-car$6934$PT8AO (g$stx-expr$6911$PT8AO g$x$7436$PT8AO))
            (g$stx-mark*$6912$PT8AO g$x$7436$PT8AO)
            (g$stx-subst*$6913$PT8AO g$x$7436$PT8AO)
            (g$stx-ae*$6914$PT8AO g$x$7436$PT8AO))
          (if (annotation? g$x$7436$PT8AO)
            (g$syntax-car$6934$PT8AO (annotation-expression g$x$7436$PT8AO))
            (if (pair? g$x$7436$PT8AO)
              (car g$x$7436$PT8AO)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7436$PT8AO)))))))
   (g$syntax-cdr$6935$PT8AO
     g$syntax-cdr$10577$PT8AO
     (case-lambda
       ((g$x$7437$PT8AO)
        (if (g$stx?$6909$PT8AO g$x$7437$PT8AO)
          (g$mkstx$6925$PT8AO
            (g$syntax-cdr$6935$PT8AO (g$stx-expr$6911$PT8AO g$x$7437$PT8AO))
            (g$stx-mark*$6912$PT8AO g$x$7437$PT8AO)
            (g$stx-subst*$6913$PT8AO g$x$7437$PT8AO)
            (g$stx-ae*$6914$PT8AO g$x$7437$PT8AO))
          (if (annotation? g$x$7437$PT8AO)
            (g$syntax-cdr$6935$PT8AO (annotation-expression g$x$7437$PT8AO))
            (if (pair? g$x$7437$PT8AO)
              (cdr g$x$7437$PT8AO)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7437$PT8AO)))))))
   (g$syntax->list$6936$PT8AO
     g$syntax->list$10578$PT8AO
     (case-lambda
       ((g$x$7438$PT8AO)
        (if (g$syntax-pair?$6930$PT8AO g$x$7438$PT8AO)
          (cons
            (g$syntax-car$6934$PT8AO g$x$7438$PT8AO)
            (g$syntax->list$6936$PT8AO
              (g$syntax-cdr$6935$PT8AO g$x$7438$PT8AO)))
          (if (g$syntax-null?$6932$PT8AO g$x$7438$PT8AO)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7438$PT8AO))))))
   (g$id?$6937$PT8AO
     g$id?$10579$PT8AO
     (case-lambda
       ((g$x$7439$PT8AO)
        (if (g$stx?$6909$PT8AO g$x$7439$PT8AO)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7440$PT8AO)
                (symbol?
                  (if (annotation? g$expr$7440$PT8AO)
                    (annotation-stripped g$expr$7440$PT8AO)
                    g$expr$7440$PT8AO))))
             (g$stx-expr$6911$PT8AO g$x$7439$PT8AO)))
          '#f))))
   (g$id->sym$6938$PT8AO
     g$id->sym$10580$PT8AO
     (case-lambda
       ((g$x$7441$PT8AO)
        (begin
          (if (g$stx?$6909$PT8AO g$x$7441$PT8AO)
            (void)
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7441$PT8AO))
          ((case-lambda
             ((g$expr$7442$PT8AO)
              ((case-lambda
                 ((g$sym$7443$PT8AO)
                  (if (symbol? g$sym$7443$PT8AO)
                    g$sym$7443$PT8AO
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7441$PT8AO))))
               (if (annotation? g$expr$7442$PT8AO)
                 (annotation-stripped g$expr$7442$PT8AO)
                 g$expr$7442$PT8AO))))
           (g$stx-expr$6911$PT8AO g$x$7441$PT8AO))))))
   (g$same-marks?$6939$PT8AO
     g$same-marks?$10581$PT8AO
     (case-lambda
       ((g$x$7444$PT8AO g$y$7445$PT8AO)
        ((case-lambda
           ((g$t$7446$PT8AO)
            (if g$t$7446$PT8AO
              g$t$7446$PT8AO
              (begin
                '#f
                (if (pair? g$x$7444$PT8AO)
                  (if (pair? g$y$7445$PT8AO)
                    (if (eq? (car g$x$7444$PT8AO) (car g$y$7445$PT8AO))
                      (begin
                        '#f
                        (g$same-marks?$6939$PT8AO
                          (cdr g$x$7444$PT8AO)
                          (cdr g$y$7445$PT8AO)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7444$PT8AO) (begin '#f (null? g$y$7445$PT8AO)) '#f)))))
   (g$bound-id=?$6940$PT8AO
     g$bound-id=?$10582$PT8AO
     (case-lambda
       ((g$x$7447$PT8AO g$y$7448$PT8AO)
        (if (eq? (g$id->sym$6938$PT8AO g$x$7447$PT8AO)
                 (g$id->sym$6938$PT8AO g$y$7448$PT8AO))
          (begin
            '#f
            (g$same-marks?$6939$PT8AO
              (g$stx-mark*$6912$PT8AO g$x$7447$PT8AO)
              (g$stx-mark*$6912$PT8AO g$y$7448$PT8AO)))
          '#f))))
   (g$free-id=?$6941$PT8AO
     g$free-id=?$10583$PT8AO
     (case-lambda
       ((g$i$7449$PT8AO g$j$7450$PT8AO)
        ((case-lambda
           ((g$t0$7451$PT8AO g$t1$7452$PT8AO)
            (if ((case-lambda
                   ((g$t$7453$PT8AO)
                    (if g$t$7453$PT8AO
                      g$t$7453$PT8AO
                      (begin '#f g$t1$7452$PT8AO))))
                 g$t0$7451$PT8AO)
              (eq? g$t0$7451$PT8AO g$t1$7452$PT8AO)
              (eq? (g$id->sym$6938$PT8AO g$i$7449$PT8AO)
                   (g$id->sym$6938$PT8AO g$j$7450$PT8AO)))))
         (g$id->real-label$6951$PT8AO g$i$7449$PT8AO)
         (g$id->real-label$6951$PT8AO g$j$7450$PT8AO)))))
   (g$valid-bound-ids?$6942$PT8AO
     g$valid-bound-ids?$10584$PT8AO
     (case-lambda
       ((g$id*$7454$PT8AO)
        (if (g$for-all$5365$PT8AO g$id?$6937$PT8AO g$id*$7454$PT8AO)
          (begin '#f (g$distinct-bound-ids?$6943$PT8AO g$id*$7454$PT8AO))
          '#f))))
   (g$distinct-bound-ids?$6943$PT8AO
     g$distinct-bound-ids?$10585$PT8AO
     (case-lambda
       ((g$id*$7455$PT8AO)
        ((case-lambda
           ((g$t$7456$PT8AO)
            (if g$t$7456$PT8AO
              g$t$7456$PT8AO
              (begin
                '#f
                (if (not (g$bound-id-member?$6944$PT8AO
                           (car g$id*$7455$PT8AO)
                           (cdr g$id*$7455$PT8AO)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$6943$PT8AO (cdr g$id*$7455$PT8AO)))
                  '#f)))))
         (null? g$id*$7455$PT8AO)))))
   (g$bound-id-member?$6944$PT8AO
     g$bound-id-member?$10586$PT8AO
     (case-lambda
       ((g$id$7457$PT8AO g$id*$7458$PT8AO)
        (if (pair? g$id*$7458$PT8AO)
          (begin
            '#f
            ((case-lambda
               ((g$t$7459$PT8AO)
                (if g$t$7459$PT8AO
                  g$t$7459$PT8AO
                  (begin
                    '#f
                    (g$bound-id-member?$6944$PT8AO
                      g$id$7457$PT8AO
                      (cdr g$id*$7458$PT8AO))))))
             (g$bound-id=?$6940$PT8AO g$id$7457$PT8AO (car g$id*$7458$PT8AO))))
          '#f))))
   (g$self-evaluating?$6945$PT8AO
     g$self-evaluating?$10587$PT8AO
     (case-lambda
       ((g$x$7460$PT8AO)
        ((case-lambda
           ((g$t$7461$PT8AO)
            (if g$t$7461$PT8AO
              g$t$7461$PT8AO
              ((case-lambda
                 ((g$t$7462$PT8AO)
                  (if g$t$7462$PT8AO
                    g$t$7462$PT8AO
                    ((case-lambda
                       ((g$t$7463$PT8AO)
                        (if g$t$7463$PT8AO
                          g$t$7463$PT8AO
                          ((case-lambda
                             ((g$t$7464$PT8AO)
                              (if g$t$7464$PT8AO
                                g$t$7464$PT8AO
                                (begin '#f (bytevector? g$x$7460$PT8AO)))))
                           (boolean? g$x$7460$PT8AO)))))
                     (char? g$x$7460$PT8AO)))))
               (string? g$x$7460$PT8AO)))))
         (number? g$x$7460$PT8AO)))))
   (g$strip-annotations$6946$PT8AO
     g$strip-annotations$10588$PT8AO
     (case-lambda
       ((g$x$7465$PT8AO)
        (if (pair? g$x$7465$PT8AO)
          (cons
            (g$strip-annotations$6946$PT8AO (car g$x$7465$PT8AO))
            (g$strip-annotations$6946$PT8AO (cdr g$x$7465$PT8AO)))
          (if (vector? g$x$7465$PT8AO)
            (vector-map g$strip-annotations$6946$PT8AO g$x$7465$PT8AO)
            (if (annotation? g$x$7465$PT8AO)
              (annotation-stripped g$x$7465$PT8AO)
              g$x$7465$PT8AO))))))
   (g$strip$6947$PT8AO
     g$strip$10589$PT8AO
     (case-lambda
       ((g$x$7466$PT8AO g$m*$7467$PT8AO)
        (if (g$top-marked?$6880$PT8AO g$m*$7467$PT8AO)
          (if ((case-lambda
                 ((g$t$7468$PT8AO)
                  (if g$t$7468$PT8AO
                    g$t$7468$PT8AO
                    ((case-lambda
                       ((g$t$7469$PT8AO)
                        (if g$t$7469$PT8AO
                          g$t$7469$PT8AO
                          (begin
                            '#f
                            (if (vector? g$x$7466$PT8AO)
                              (if (> (vector-length g$x$7466$PT8AO) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7466$PT8AO '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7466$PT8AO)
                       (begin '#f (annotation? (car g$x$7466$PT8AO)))
                       '#f)))))
               (annotation? g$x$7466$PT8AO))
            (g$strip-annotations$6946$PT8AO g$x$7466$PT8AO)
            g$x$7466$PT8AO)
          ((letrec ((g$f$7470$PT8AO
                      (case-lambda
                        ((g$x$7471$PT8AO)
                         (if (g$stx?$6909$PT8AO g$x$7471$PT8AO)
                           (g$strip$6947$PT8AO
                             (g$stx-expr$6911$PT8AO g$x$7471$PT8AO)
                             (g$stx-mark*$6912$PT8AO g$x$7471$PT8AO))
                           (if (annotation? g$x$7471$PT8AO)
                             (annotation-stripped g$x$7471$PT8AO)
                             (if (pair? g$x$7471$PT8AO)
                               ((case-lambda
                                  ((g$a$7472$PT8AO g$d$7473$PT8AO)
                                   (if (if (eq? g$a$7472$PT8AO
                                                (car g$x$7471$PT8AO))
                                         (begin
                                           '#f
                                           (eq? g$d$7473$PT8AO
                                                (cdr g$x$7471$PT8AO)))
                                         '#f)
                                     g$x$7471$PT8AO
                                     (cons g$a$7472$PT8AO g$d$7473$PT8AO))))
                                (g$f$7470$PT8AO (car g$x$7471$PT8AO))
                                (g$f$7470$PT8AO (cdr g$x$7471$PT8AO)))
                               (if (vector? g$x$7471$PT8AO)
                                 ((case-lambda
                                    ((g$old$7474$PT8AO)
                                     ((case-lambda
                                        ((g$new$7475$PT8AO)
                                         (if (g$for-all$5365$PT8AO
                                               eq?
                                               g$old$7474$PT8AO
                                               g$new$7475$PT8AO)
                                           g$x$7471$PT8AO
                                           (list->vector g$new$7475$PT8AO))))
                                      (map g$f$7470$PT8AO g$old$7474$PT8AO))))
                                  (vector->list g$x$7471$PT8AO))
                                 g$x$7471$PT8AO))))))))
             g$f$7470$PT8AO)
           g$x$7466$PT8AO)))))
   (g$stx->datum$6948$PT8AO
     g$stx->datum$10590$PT8AO
     (case-lambda
       ((g$x$7476$PT8AO) (g$strip$6947$PT8AO g$x$7476$PT8AO '()))))
   (g$same-marks*?$6949$PT8AO
     g$same-marks*?$10591$PT8AO
     (case-lambda
       ((g$mark*$7477$PT8AO g$mark**$7478$PT8AO g$si$7479$PT8AO)
        (if (null? g$si$7479$PT8AO)
          '#f
          (if (g$same-marks?$6939$PT8AO
                g$mark*$7477$PT8AO
                (vector-ref g$mark**$7478$PT8AO (car g$si$7479$PT8AO)))
            (car g$si$7479$PT8AO)
            (g$same-marks*?$6949$PT8AO
              g$mark*$7477$PT8AO
              g$mark**$7478$PT8AO
              (cdr g$si$7479$PT8AO)))))))
   (g$id->label$6950$PT8AO
     g$id->label$10592$PT8AO
     (case-lambda
       ((g$id$7480$PT8AO)
        ((case-lambda
           ((g$t$7481$PT8AO)
            (if g$t$7481$PT8AO
              g$t$7481$PT8AO
              (begin
                '#f
                ((case-lambda
                   ((g$t$7482$PT8AO)
                    (if g$t$7482$PT8AO
                      ((case-lambda
                         ((g$env$7483$PT8AO)
                          ((case-lambda
                             ((g$rib$7484$PT8AO)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$6885$PT8AO
                                     g$id$7480$PT8AO
                                     g$rib$7484$PT8AO)))
                                (case-lambda
                                  ((g$lab$7487$PT8AO g$loc_$7488$PT8AO)
                                   ((case-lambda
                                      ((g$loc_$7489$PT8AO g$lab$7490$PT8AO)
                                       (begin
                                         (g$extend-rib!$6901$PT8AO
                                           g$rib$7484$PT8AO
                                           g$id$7480$PT8AO
                                           g$lab$7490$PT8AO)
                                         g$lab$7490$PT8AO)))
                                    g$loc_$7488$PT8AO
                                    g$lab$7487$PT8AO))))))
                           (g$interaction-env-rib$7293$PT8AO
                             g$env$7483$PT8AO))))
                       g$t$7482$PT8AO)
                      '#f)))
                 (g$top-level-context$7328$PT8AO))))))
         (g$id->real-label$6951$PT8AO g$id$7480$PT8AO)))))
   (g$id->real-label$6951$PT8AO
     g$id->real-label$10593$PT8AO
     (case-lambda
       ((g$id$7491$PT8AO)
        ((case-lambda
           ((g$sym$7492$PT8AO)
            ((letrec ((g$search$7493$PT8AO
                        (case-lambda
                          ((g$subst*$7494$PT8AO g$mark*$7495$PT8AO)
                           (if (null? g$subst*$7494$PT8AO)
                             '#f
                             (if (eq? (car g$subst*$7494$PT8AO) 'shift)
                               (g$search$7493$PT8AO
                                 (cdr g$subst*$7494$PT8AO)
                                 (cdr g$mark*$7495$PT8AO))
                               ((case-lambda
                                  ((g$rib$7496$PT8AO)
                                   ((case-lambda
                                      ((g$t$7497$PT8AO)
                                       (if g$t$7497$PT8AO
                                         ((case-lambda
                                            ((g$ht$7498$PT8AO)
                                             ((case-lambda
                                                ((g$si$7499$PT8AO)
                                                 ((case-lambda
                                                    ((g$i$7500$PT8AO)
                                                     (if g$i$7500$PT8AO
                                                       (vector-ref
                                                         (g$rib-label*$6894$PT8AO
                                                           g$rib$7496$PT8AO)
                                                         g$i$7500$PT8AO)
                                                       (g$search$7493$PT8AO
                                                         (cdr g$subst*$7494$PT8AO)
                                                         g$mark*$7495$PT8AO))))
                                                  (if g$si$7499$PT8AO
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$6949$PT8AO
                                                        g$mark*$7495$PT8AO
                                                        (g$rib-mark**$6893$PT8AO
                                                          g$rib$7496$PT8AO)
                                                        (reverse
                                                          g$si$7499$PT8AO)))
                                                    '#f))))
                                              (g$hashtable-ref$5161$PT8AO
                                                g$ht$7498$PT8AO
                                                g$sym$7492$PT8AO
                                                '#f))))
                                          g$t$7497$PT8AO)
                                         ((letrec ((g$f$7501$PT8AO
                                                     (case-lambda
                                                       ((g$sym*$7502$PT8AO
                                                          g$mark**$7503$PT8AO
                                                          g$label*$7504$PT8AO)
                                                        (if (null?
                                                              g$sym*$7502$PT8AO)
                                                          (g$search$7493$PT8AO
                                                            (cdr g$subst*$7494$PT8AO)
                                                            g$mark*$7495$PT8AO)
                                                          (if (if (eq? (car g$sym*$7502$PT8AO)
                                                                       g$sym$7492$PT8AO)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$6939$PT8AO
                                                                    (car g$mark**$7503$PT8AO)
                                                                    g$mark*$7495$PT8AO))
                                                                '#f)
                                                            (car g$label*$7504$PT8AO)
                                                            (g$f$7501$PT8AO
                                                              (cdr g$sym*$7502$PT8AO)
                                                              (cdr g$mark**$7503$PT8AO)
                                                              (cdr g$label*$7504$PT8AO))))))))
                                            g$f$7501$PT8AO)
                                          (g$rib-sym*$6892$PT8AO
                                            g$rib$7496$PT8AO)
                                          (g$rib-mark**$6893$PT8AO
                                            g$rib$7496$PT8AO)
                                          (g$rib-label*$6894$PT8AO
                                            g$rib$7496$PT8AO)))))
                                    (g$rib-sealed/freq$6895$PT8AO
                                      g$rib$7496$PT8AO))))
                                (car g$subst*$7494$PT8AO))))))))
               g$search$7493$PT8AO)
             (g$stx-subst*$6913$PT8AO g$id$7491$PT8AO)
             (g$stx-mark*$6912$PT8AO g$id$7491$PT8AO))))
         (g$id->sym$6938$PT8AO g$id$7491$PT8AO)))))
   (g$label->binding$6952$PT8AO
     g$label->binding$10594$PT8AO
     (case-lambda
       ((g$x$7505$PT8AO g$r$7506$PT8AO)
        ((case-lambda
           ((g$t$7507$PT8AO)
            (if g$t$7507$PT8AO
              ((case-lambda
                 ((g$b$7508$PT8AO)
                  (if (if (pair? g$b$7508$PT8AO)
                        (begin '#f (eq? (car g$b$7508$PT8AO) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7178$PT8AO (cdr g$b$7508$PT8AO)))
                    (if (if (pair? g$b$7508$PT8AO)
                          (begin '#f (eq? (car g$b$7508$PT8AO) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7509$PT8AO g$loc$7510$PT8AO)
                          (cons '$rtd (symbol-value g$loc$7510$PT8AO))))
                       (g$cadr$4896$PT8AO g$b$7508$PT8AO)
                       (g$cddr$4898$PT8AO g$b$7508$PT8AO))
                      g$b$7508$PT8AO))))
               g$t$7507$PT8AO)
              ((case-lambda
                 ((g$t$7511$PT8AO)
                  (if g$t$7511$PT8AO
                    (cdr g$t$7511$PT8AO)
                    ((case-lambda
                       ((g$t$7512$PT8AO)
                        (if g$t$7512$PT8AO
                          ((case-lambda
                             ((g$env$7513$PT8AO)
                              ((case-lambda
                                 ((g$t$7514$PT8AO)
                                  (if g$t$7514$PT8AO
                                    ((case-lambda
                                       ((g$p$7515$PT8AO)
                                        (g$cons*$5367$PT8AO
                                          'lexical
                                          (cdr g$p$7515$PT8AO)
                                          '#f)))
                                     g$t$7514$PT8AO)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$7505$PT8AO
                                 (g$interaction-env-locs$7295$PT8AO
                                   g$env$7513$PT8AO)))))
                           g$t$7512$PT8AO)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7328$PT8AO)))))
               (assq g$x$7505$PT8AO g$r$7506$PT8AO)))))
         (g$imported-label->binding$6751$PT8AO g$x$7505$PT8AO)))))
   (g$make-binding$6953$PT8AO g$make-binding$10595$PT8AO cons)
   (g$binding-type$6954$PT8AO g$binding-type$10596$PT8AO car)
   (g$binding-value$6955$PT8AO g$binding-value$10597$PT8AO cdr)
   (g$raise-unbound-error$6956$PT8AO
     g$raise-unbound-error$10598$PT8AO
     (case-lambda
       ((g$id$7516$PT8AO)
        (g$syntax-violation*$7320$PT8AO
          '#f
          '"unbound identifier"
          g$id$7516$PT8AO
          (g$make-undefined-violation$5701$PT8AO)))))
   (g$syntax-type$6957$PT8AO
     g$syntax-type$10599$PT8AO
     (case-lambda
       ((g$e$7517$PT8AO g$r$7518$PT8AO)
        (if (g$id?$6937$PT8AO g$e$7517$PT8AO)
          ((case-lambda
             ((g$id$7519$PT8AO)
              ((case-lambda
                 ((g$label$7520$PT8AO)
                  ((case-lambda
                     ((g$b$7521$PT8AO)
                      ((case-lambda
                         ((g$type$7522$PT8AO)
                          ((case-lambda
                             (()
                              (begin
                                (if g$label$7520$PT8AO
                                  (void)
                                  (g$raise-unbound-error$6956$PT8AO
                                    g$id$7519$PT8AO))
                                ((case-lambda
                                   ((g$t$7523$PT8AO)
                                    (if (memv
                                          g$t$7523$PT8AO
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7522$PT8AO
                                        (g$binding-value$6955$PT8AO
                                          g$b$7521$PT8AO)
                                        g$id$7519$PT8AO)
                                      (values 'other '#f '#f))))
                                 g$type$7522$PT8AO)))))))
                       (g$binding-type$6954$PT8AO g$b$7521$PT8AO))))
                   (g$label->binding$6952$PT8AO
                     g$label$7520$PT8AO
                     g$r$7518$PT8AO))))
               (g$id->label$6950$PT8AO g$id$7519$PT8AO))))
           g$e$7517$PT8AO)
          (if (g$syntax-pair?$6930$PT8AO g$e$7517$PT8AO)
            ((case-lambda
               ((g$id$7524$PT8AO)
                (if (g$id?$6937$PT8AO g$id$7524$PT8AO)
                  ((case-lambda
                     ((g$label$7525$PT8AO)
                      ((case-lambda
                         ((g$b$7526$PT8AO)
                          ((case-lambda
                             ((g$type$7527$PT8AO)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if g$label$7525$PT8AO
                                      (void)
                                      (g$raise-unbound-error$6956$PT8AO
                                        g$id$7524$PT8AO))
                                    ((case-lambda
                                       ((g$t$7528$PT8AO)
                                        (if (memv
                                              g$t$7528$PT8AO
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$7527$PT8AO
                                            (g$binding-value$6955$PT8AO
                                              g$b$7526$PT8AO)
                                            g$id$7524$PT8AO)
                                          (values 'call '#f '#f))))
                                     g$type$7527$PT8AO)))))))
                           (g$binding-type$6954$PT8AO g$b$7526$PT8AO))))
                       (g$label->binding$6952$PT8AO
                         g$label$7525$PT8AO
                         g$r$7518$PT8AO))))
                   (g$id->label$6950$PT8AO g$id$7524$PT8AO))
                  (values 'call '#f '#f))))
             (g$syntax-car$6934$PT8AO g$e$7517$PT8AO))
            ((case-lambda
               ((g$d$7529$PT8AO)
                (if (g$self-evaluating?$6945$PT8AO g$d$7529$PT8AO)
                  (values 'constant g$d$7529$PT8AO '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$6948$PT8AO g$e$7517$PT8AO)))))))
   (g$sanitize-binding$6965$PT8AO
     g$sanitize-binding$10600$PT8AO
     (case-lambda
       ((g$x$7530$PT8AO g$src$7531$PT8AO)
        (if (procedure? g$x$7530$PT8AO)
          (g$cons*$5367$PT8AO 'local-macro g$x$7530$PT8AO g$src$7531$PT8AO)
          (if (if (pair? g$x$7530$PT8AO)
                (if (eq? (car g$x$7530$PT8AO) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7530$PT8AO)))
                  '#f)
                '#f)
            (g$cons*$5367$PT8AO
              'local-macro!
              (cdr g$x$7530$PT8AO)
              g$src$7531$PT8AO)
            (if (if (pair? g$x$7530$PT8AO)
                  (begin '#f (eq? (car g$x$7530$PT8AO) '$rtd))
                  '#f)
              g$x$7530$PT8AO
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7530$PT8AO)))))))
   (g$make-variable-transformer$6966$PT8AO
     g$make-variable-transformer$10601$PT8AO
     (case-lambda
       ((g$x$7532$PT8AO)
        (if (procedure? g$x$7532$PT8AO)
          (cons 'macro! g$x$7532$PT8AO)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7532$PT8AO)))))
   (g$variable-transformer?$6967$PT8AO
     g$variable-transformer?$10602$PT8AO
     (case-lambda
       ((g$x$7533$PT8AO)
        (if (pair? g$x$7533$PT8AO)
          (if (eq? (car g$x$7533$PT8AO) 'macro!)
            (begin '#f (procedure? (cdr g$x$7533$PT8AO)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$6968$PT8AO
     g$variable-transformer-procedure$10603$PT8AO
     (case-lambda
       ((g$x$7534$PT8AO)
        (if (g$variable-transformer?$6967$PT8AO g$x$7534$PT8AO)
          (cdr g$x$7534$PT8AO)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7534$PT8AO)))))
   (g$make-eval-transformer$6969$PT8AO
     g$make-eval-transformer$10604$PT8AO
     (case-lambda
       ((g$x$7535$PT8AO)
        (g$sanitize-binding$6965$PT8AO
          (eval-core (g$expanded->core$6451$PT8AO g$x$7535$PT8AO))
          g$x$7535$PT8AO))))
   (g$parse-define$7155$PT8AO
     g$parse-define$10605$PT8AO
     (case-lambda
       ((g$x$7536$PT8AO)
        ((case-lambda
           ((g$t$7537$PT8AO)
            ((case-lambda
               ((g$ls/false$7538$PT8AO)
                (if (if g$ls/false$7538$PT8AO
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7539$PT8AO
                               g$fmls$7540$PT8AO
                               g$b$7541$PT8AO
                               g$b*$7542$PT8AO)
                             (g$id?$6937$PT8AO g$id$7539$PT8AO)))
                          g$ls/false$7538$PT8AO))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7543$PT8AO
                         g$fmls$7544$PT8AO
                         g$b$7545$PT8AO
                         g$b*$7546$PT8AO)
                       (begin
                         (g$verify-formals$7235$PT8AO
                           g$fmls$7544$PT8AO
                           g$x$7536$PT8AO)
                         (values
                           g$id$7543$PT8AO
                           (cons
                             'defun
                             (cons
                               g$fmls$7544$PT8AO
                               (cons g$b$7545$PT8AO g$b*$7546$PT8AO)))))))
                    g$ls/false$7538$PT8AO)
                  ((case-lambda
                     ((g$t$7547$PT8AO)
                      ((case-lambda
                         ((g$ls/false$7548$PT8AO)
                          (if (if g$ls/false$7548$PT8AO
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7549$PT8AO g$val$7550$PT8AO)
                                       (g$id?$6937$PT8AO g$id$7549$PT8AO)))
                                    g$ls/false$7548$PT8AO))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7551$PT8AO g$val$7552$PT8AO)
                                 (values
                                   g$id$7551$PT8AO
                                   (cons 'expr g$val$7552$PT8AO))))
                              g$ls/false$7548$PT8AO)
                            ((case-lambda
                               ((g$t$7553$PT8AO)
                                ((case-lambda
                                   ((g$ls/false$7554$PT8AO)
                                    (if (if g$ls/false$7554$PT8AO
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7555$PT8AO)
                                                 (g$id?$6937$PT8AO
                                                   g$id$7555$PT8AO)))
                                              g$ls/false$7554$PT8AO))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7556$PT8AO)
                                           (values
                                             g$id$7556$PT8AO
                                             (cons
                                               'expr
                                               (g$bless$7178$PT8AO '(void))))))
                                        g$ls/false$7554$PT8AO)
                                      (g$syntax-violation$7321$PT8AO
                                        '#f
                                        '"invalid syntax"
                                        g$t$7553$PT8AO))))
                                 (g$syntax-dispatch$7215$PT8AO
                                   g$t$7553$PT8AO
                                   '(_ any)))))
                             g$t$7547$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$7547$PT8AO
                         '(_ any any)))))
                   g$t$7537$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$7537$PT8AO
               '(_ (any . any) any . each-any)))))
         g$x$7536$PT8AO))))
   (g$parse-define-syntax$7156$PT8AO
     g$parse-define-syntax$10606$PT8AO
     (case-lambda
       ((g$x$7557$PT8AO)
        ((case-lambda
           ((g$t$7558$PT8AO)
            ((case-lambda
               ((g$ls/false$7559$PT8AO)
                (if (if g$ls/false$7559$PT8AO
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7560$PT8AO g$val$7561$PT8AO)
                             (g$id?$6937$PT8AO g$id$7560$PT8AO)))
                          g$ls/false$7559$PT8AO))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7562$PT8AO g$val$7563$PT8AO)
                       (values g$id$7562$PT8AO g$val$7563$PT8AO)))
                    g$ls/false$7559$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$7558$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$7558$PT8AO '(_ any any)))))
         g$x$7557$PT8AO))))
   (g$scheme-stx-hashtable$7157$PT8AO
     g$scheme-stx-hashtable$10607$PT8AO
     (g$make-eq-hashtable$5158$PT8AO))
   (g$scheme-stx$7158$PT8AO
     g$scheme-stx$10608$PT8AO
     (case-lambda
       ((g$sym$7564$PT8AO)
        ((case-lambda
           ((g$t$7565$PT8AO)
            (if g$t$7565$PT8AO
              g$t$7565$PT8AO
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7566$PT8AO)
                    ((case-lambda
                       ((g$stx$7567$PT8AO)
                        ((case-lambda
                           ((g$stx$7568$PT8AO)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5162$PT8AO
                                    g$scheme-stx-hashtable$7157$PT8AO
                                    g$sym$7564$PT8AO
                                    g$stx$7568$PT8AO)
                                  g$stx$7568$PT8AO))))))
                         ((case-lambda
                            ((g$t$7569$PT8AO)
                             (if g$t$7569$PT8AO
                               ((case-lambda
                                  ((g$x$7570$PT8AO)
                                   ((case-lambda
                                      ((g$name$7571$PT8AO g$label$7572$PT8AO)
                                       (g$add-subst$6927$PT8AO
                                         (g$make-rib$6891$PT8AO
                                           (list g$name$7571$PT8AO)
                                           (list g$top-mark*$6879$PT8AO)
                                           (list g$label$7572$PT8AO)
                                           '#f)
                                         g$stx$7567$PT8AO)))
                                    (car g$x$7570$PT8AO)
                                    (cdr g$x$7570$PT8AO))))
                                g$t$7569$PT8AO)
                               g$stx$7567$PT8AO)))
                          (assq g$sym$7564$PT8AO g$subst$7566$PT8AO)))))
                     (g$make-stx$6910$PT8AO
                       g$sym$7564$PT8AO
                       g$top-mark*$6879$PT8AO
                       '()
                       '()))))
                 (g$library-subst$6709$PT8AO
                   (g$find-library-by-name$6745$PT8AO
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5161$PT8AO
           g$scheme-stx-hashtable$7157$PT8AO
           g$sym$7564$PT8AO
           '#f)))))
   (g$lexical-var$7159$PT8AO g$lexical-var$10609$PT8AO car)
   (g$lexical-mutable?$7160$PT8AO g$lexical-mutable?$10610$PT8AO cdr)
   (g$set-lexical-mutable!$7161$PT8AO
     g$set-lexical-mutable!$10611$PT8AO
     set-cdr!)
   (g$add-lexical$7162$PT8AO
     g$add-lexical$10612$PT8AO
     (case-lambda
       ((g$lab$7573$PT8AO g$lex$7574$PT8AO g$r$7575$PT8AO)
        (cons
          (g$cons*$5367$PT8AO g$lab$7573$PT8AO 'lexical g$lex$7574$PT8AO '#f)
          g$r$7575$PT8AO))))
   (g$add-lexicals$7163$PT8AO
     g$add-lexicals$10613$PT8AO
     (case-lambda
       ((g$lab*$7576$PT8AO g$lex*$7577$PT8AO g$r$7578$PT8AO)
        (if (null? g$lab*$7576$PT8AO)
          g$r$7578$PT8AO
          (g$add-lexicals$7163$PT8AO
            (cdr g$lab*$7576$PT8AO)
            (cdr g$lex*$7577$PT8AO)
            (g$add-lexical$7162$PT8AO
              (car g$lab*$7576$PT8AO)
              (car g$lex*$7577$PT8AO)
              g$r$7578$PT8AO))))))
   (g$letrec-helper$7164$PT8AO
     g$letrec-helper$10614$PT8AO
     (case-lambda
       ((g$e$7579$PT8AO g$r$7580$PT8AO g$mr$7581$PT8AO g$build$7582$PT8AO)
        ((case-lambda
           ((g$t$7583$PT8AO)
            ((case-lambda
               ((g$ls/false$7584$PT8AO)
                (if g$ls/false$7584$PT8AO
                  (apply
                    (case-lambda
                      ((g$lhs*$7585$PT8AO
                         g$rhs*$7586$PT8AO
                         g$b$7587$PT8AO
                         g$b*$7588$PT8AO)
                       (if (not (g$valid-bound-ids?$6942$PT8AO
                                  g$lhs*$7585$PT8AO))
                         (g$invalid-fmls-error$7180$PT8AO
                           g$e$7579$PT8AO
                           g$lhs*$7585$PT8AO)
                         ((case-lambda
                            ((g$lex*$7589$PT8AO g$lab*$7590$PT8AO)
                             ((case-lambda
                                ((g$rib$7591$PT8AO g$r$7592$PT8AO)
                                 ((case-lambda
                                    ((g$body$7593$PT8AO g$rhs*$7594$PT8AO)
                                     (g$build$7582$PT8AO
                                       '#f
                                       g$lex*$7589$PT8AO
                                       g$rhs*$7594$PT8AO
                                       g$body$7593$PT8AO)))
                                  (g$chi-internal$7244$PT8AO
                                    (g$add-subst$6927$PT8AO
                                      g$rib$7591$PT8AO
                                      (cons g$b$7587$PT8AO g$b*$7588$PT8AO))
                                    g$r$7592$PT8AO
                                    g$mr$7581$PT8AO)
                                  (g$chi-expr*$7231$PT8AO
                                    (map (case-lambda
                                           ((g$x$7595$PT8AO)
                                            (g$add-subst$6927$PT8AO
                                              g$rib$7591$PT8AO
                                              g$x$7595$PT8AO)))
                                         g$rhs*$7586$PT8AO)
                                    g$r$7592$PT8AO
                                    g$mr$7581$PT8AO))))
                              (g$make-full-rib$6905$PT8AO
                                g$lhs*$7585$PT8AO
                                g$lab*$7590$PT8AO)
                              (g$add-lexicals$7163$PT8AO
                                g$lab*$7590$PT8AO
                                g$lex*$7589$PT8AO
                                g$r$7580$PT8AO))))
                          (map g$gen-lexical$6881$PT8AO g$lhs*$7585$PT8AO)
                          (map g$gen-label$6883$PT8AO g$lhs*$7585$PT8AO)))))
                    g$ls/false$7584$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$7583$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$7583$PT8AO
               '(_ #(each (any any)) any . each-any)))))
         g$e$7579$PT8AO))))
   (g$letrec-transformer$7165$PT8AO
     g$letrec-transformer$10615$PT8AO
     (case-lambda
       ((g$e$7596$PT8AO g$r$7597$PT8AO g$mr$7598$PT8AO)
        (g$letrec-helper$7164$PT8AO
          g$e$7596$PT8AO
          g$r$7597$PT8AO
          g$mr$7598$PT8AO
          g$build-letrec$6873$PT8AO))))
   (g$letrec*-transformer$7166$PT8AO
     g$letrec*-transformer$10616$PT8AO
     (case-lambda
       ((g$e$7599$PT8AO g$r$7600$PT8AO g$mr$7601$PT8AO)
        (g$letrec-helper$7164$PT8AO
          g$e$7599$PT8AO
          g$r$7600$PT8AO
          g$mr$7601$PT8AO
          g$build-letrec*$6874$PT8AO))))
   (g$fluid-let-syntax-transformer$7167$PT8AO
     g$fluid-let-syntax-transformer$10617$PT8AO
     (case-lambda
       ((g$e$7602$PT8AO g$r$7603$PT8AO g$mr$7604$PT8AO)
        (letrec* ((g$lookup$7605$PT8AO
                    (case-lambda
                      ((g$x$7615$PT8AO)
                       ((case-lambda
                          ((g$t$7616$PT8AO)
                           (if g$t$7616$PT8AO
                             g$t$7616$PT8AO
                             (begin
                               '#f
                               (g$syntax-violation$7321$PT8AO
                                 '#f
                                 '"unbound identifier"
                                 g$e$7602$PT8AO
                                 g$x$7615$PT8AO)))))
                        (g$id->label$6950$PT8AO g$x$7615$PT8AO))))))
          ((case-lambda
             ((g$t$7606$PT8AO)
              ((case-lambda
                 ((g$ls/false$7607$PT8AO)
                  (if g$ls/false$7607$PT8AO
                    (apply
                      (case-lambda
                        ((g$lhs*$7608$PT8AO
                           g$rhs*$7609$PT8AO
                           g$b$7610$PT8AO
                           g$b*$7611$PT8AO)
                         (if (not (g$valid-bound-ids?$6942$PT8AO
                                    g$lhs*$7608$PT8AO))
                           (g$invalid-fmls-error$7180$PT8AO
                             g$e$7602$PT8AO
                             g$lhs*$7608$PT8AO)
                           ((case-lambda
                              ((g$lab*$7612$PT8AO g$rhs*$7613$PT8AO)
                               (g$chi-internal$7244$PT8AO
                                 (cons g$b$7610$PT8AO g$b*$7611$PT8AO)
                                 (append
                                   (map cons
                                        g$lab*$7612$PT8AO
                                        g$rhs*$7613$PT8AO)
                                   g$r$7603$PT8AO)
                                 (append
                                   (map cons
                                        g$lab*$7612$PT8AO
                                        g$rhs*$7613$PT8AO)
                                   g$mr$7604$PT8AO))))
                            (map g$lookup$7605$PT8AO g$lhs*$7608$PT8AO)
                            (map (case-lambda
                                   ((g$x$7614$PT8AO)
                                    (g$make-eval-transformer$6969$PT8AO
                                      (g$expand-transformer$7260$PT8AO
                                        g$x$7614$PT8AO
                                        g$mr$7604$PT8AO))))
                                 g$rhs*$7609$PT8AO)))))
                      g$ls/false$7607$PT8AO)
                    (g$syntax-violation$7321$PT8AO
                      '#f
                      '"invalid syntax"
                      g$t$7606$PT8AO))))
               (g$syntax-dispatch$7215$PT8AO
                 g$t$7606$PT8AO
                 '(_ #(each (any any)) any . each-any)))))
           g$e$7602$PT8AO)))))
   (g$type-descriptor-transformer$7168$PT8AO
     g$type-descriptor-transformer$10618$PT8AO
     (case-lambda
       ((g$e$7617$PT8AO g$r$7618$PT8AO g$mr$7619$PT8AO)
        ((case-lambda
           ((g$t$7620$PT8AO)
            ((case-lambda
               ((g$ls/false$7621$PT8AO)
                (if (if g$ls/false$7621$PT8AO
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7622$PT8AO)
                             (g$id?$6937$PT8AO g$id$7622$PT8AO)))
                          g$ls/false$7621$PT8AO))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7623$PT8AO)
                       ((case-lambda
                          ((g$lab$7624$PT8AO)
                           ((case-lambda
                              ((g$b$7625$PT8AO)
                               ((case-lambda
                                  ((g$type$7626$PT8AO)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$7624$PT8AO
                                           (void)
                                           (g$raise-unbound-error$6956$PT8AO
                                             g$id$7623$PT8AO))
                                         (if (if (eq? g$type$7626$PT8AO '$rtd)
                                               (begin
                                                 '#f
                                                 (not (list?
                                                        (g$binding-value$6955$PT8AO
                                                          g$b$7625$PT8AO))))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"not a record type"
                                             g$e$7617$PT8AO))
                                         (list
                                           'quote
                                           (g$binding-value$6955$PT8AO
                                             g$b$7625$PT8AO))))))))
                                (g$binding-type$6954$PT8AO g$b$7625$PT8AO))))
                            (g$label->binding$6952$PT8AO
                              g$lab$7624$PT8AO
                              g$r$7618$PT8AO))))
                        (g$id->label$6950$PT8AO g$id$7623$PT8AO))))
                    g$ls/false$7621$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$7620$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$7620$PT8AO '(_ any)))))
         g$e$7617$PT8AO))))
   (g$record-type-descriptor-transformer$7169$PT8AO
     g$record-type-descriptor-transformer$10619$PT8AO
     (case-lambda
       ((g$e$7627$PT8AO g$r$7628$PT8AO g$mr$7629$PT8AO)
        ((case-lambda
           ((g$t$7630$PT8AO)
            ((case-lambda
               ((g$ls/false$7631$PT8AO)
                (if (if g$ls/false$7631$PT8AO
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7632$PT8AO)
                             (g$id?$6937$PT8AO g$id$7632$PT8AO)))
                          g$ls/false$7631$PT8AO))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7633$PT8AO)
                       ((case-lambda
                          ((g$lab$7634$PT8AO)
                           ((case-lambda
                              ((g$b$7635$PT8AO)
                               ((case-lambda
                                  ((g$type$7636$PT8AO)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$7634$PT8AO
                                           (void)
                                           (g$raise-unbound-error$6956$PT8AO
                                             g$id$7633$PT8AO))
                                         (if (if (eq? g$type$7636$PT8AO '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$6955$PT8AO
                                                     g$b$7635$PT8AO)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"not a record type"
                                             g$e$7627$PT8AO))
                                         (g$chi-expr$7233$PT8AO
                                           (car (g$binding-value$6955$PT8AO
                                                  g$b$7635$PT8AO))
                                           g$r$7628$PT8AO
                                           g$mr$7629$PT8AO)))))))
                                (g$binding-type$6954$PT8AO g$b$7635$PT8AO))))
                            (g$label->binding$6952$PT8AO
                              g$lab$7634$PT8AO
                              g$r$7628$PT8AO))))
                        (g$id->label$6950$PT8AO g$id$7633$PT8AO))))
                    g$ls/false$7631$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$7630$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$7630$PT8AO '(_ any)))))
         g$e$7627$PT8AO))))
   (g$record-constructor-descriptor-transformer$7170$PT8AO
     g$record-constructor-descriptor-transformer$10620$PT8AO
     (case-lambda
       ((g$e$7637$PT8AO g$r$7638$PT8AO g$mr$7639$PT8AO)
        ((case-lambda
           ((g$t$7640$PT8AO)
            ((case-lambda
               ((g$ls/false$7641$PT8AO)
                (if (if g$ls/false$7641$PT8AO
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7642$PT8AO)
                             (g$id?$6937$PT8AO g$id$7642$PT8AO)))
                          g$ls/false$7641$PT8AO))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7643$PT8AO)
                       ((case-lambda
                          ((g$lab$7644$PT8AO)
                           ((case-lambda
                              ((g$b$7645$PT8AO)
                               ((case-lambda
                                  ((g$type$7646$PT8AO)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$7644$PT8AO
                                           (void)
                                           (g$raise-unbound-error$6956$PT8AO
                                             g$id$7643$PT8AO))
                                         (if (if (eq? g$type$7646$PT8AO '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$6955$PT8AO
                                                     g$b$7645$PT8AO)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"invalid type"
                                             g$e$7637$PT8AO))
                                         (g$chi-expr$7233$PT8AO
                                           (g$cadr$4896$PT8AO
                                             (g$binding-value$6955$PT8AO
                                               g$b$7645$PT8AO))
                                           g$r$7638$PT8AO
                                           g$mr$7639$PT8AO)))))))
                                (g$binding-type$6954$PT8AO g$b$7645$PT8AO))))
                            (g$label->binding$6952$PT8AO
                              g$lab$7644$PT8AO
                              g$r$7638$PT8AO))))
                        (g$id->label$6950$PT8AO g$id$7643$PT8AO))))
                    g$ls/false$7641$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$7640$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$7640$PT8AO '(_ any)))))
         g$e$7637$PT8AO))))
   (g$when-transformer$7171$PT8AO
     g$when-transformer$10621$PT8AO
     (case-lambda
       ((g$e$7647$PT8AO g$r$7648$PT8AO g$mr$7649$PT8AO)
        ((case-lambda
           ((g$t$7650$PT8AO)
            ((case-lambda
               ((g$ls/false$7651$PT8AO)
                (if g$ls/false$7651$PT8AO
                  (apply
                    (case-lambda
                      ((g$test$7652$PT8AO g$e$7653$PT8AO g$e*$7654$PT8AO)
                       (list
                         'if
                         (g$chi-expr$7233$PT8AO
                           g$test$7652$PT8AO
                           g$r$7648$PT8AO
                           g$mr$7649$PT8AO)
                         (g$build-sequence$6871$PT8AO
                           '#f
                           (g$chi-expr*$7231$PT8AO
                             (cons g$e$7653$PT8AO g$e*$7654$PT8AO)
                             g$r$7648$PT8AO
                             g$mr$7649$PT8AO))
                         (g$build-void$6872$PT8AO))))
                    g$ls/false$7651$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$7650$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$7650$PT8AO
               '(_ any any . each-any)))))
         g$e$7647$PT8AO))))
   (g$unless-transformer$7172$PT8AO
     g$unless-transformer$10622$PT8AO
     (case-lambda
       ((g$e$7655$PT8AO g$r$7656$PT8AO g$mr$7657$PT8AO)
        ((case-lambda
           ((g$t$7658$PT8AO)
            ((case-lambda
               ((g$ls/false$7659$PT8AO)
                (if g$ls/false$7659$PT8AO
                  (apply
                    (case-lambda
                      ((g$test$7660$PT8AO g$e$7661$PT8AO g$e*$7662$PT8AO)
                       (list
                         'if
                         (g$chi-expr$7233$PT8AO
                           g$test$7660$PT8AO
                           g$r$7656$PT8AO
                           g$mr$7657$PT8AO)
                         (g$build-void$6872$PT8AO)
                         (g$build-sequence$6871$PT8AO
                           '#f
                           (g$chi-expr*$7231$PT8AO
                             (cons g$e$7661$PT8AO g$e*$7662$PT8AO)
                             g$r$7656$PT8AO
                             g$mr$7657$PT8AO)))))
                    g$ls/false$7659$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$7658$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$7658$PT8AO
               '(_ any any . each-any)))))
         g$e$7655$PT8AO))))
   (g$if-transformer$7173$PT8AO
     g$if-transformer$10623$PT8AO
     (case-lambda
       ((g$e$7663$PT8AO g$r$7664$PT8AO g$mr$7665$PT8AO)
        ((case-lambda
           ((g$t$7666$PT8AO)
            ((case-lambda
               ((g$ls/false$7667$PT8AO)
                (if g$ls/false$7667$PT8AO
                  (apply
                    (case-lambda
                      ((g$e0$7668$PT8AO g$e1$7669$PT8AO g$e2$7670$PT8AO)
                       (list
                         'if
                         (g$chi-expr$7233$PT8AO
                           g$e0$7668$PT8AO
                           g$r$7664$PT8AO
                           g$mr$7665$PT8AO)
                         (g$chi-expr$7233$PT8AO
                           g$e1$7669$PT8AO
                           g$r$7664$PT8AO
                           g$mr$7665$PT8AO)
                         (g$chi-expr$7233$PT8AO
                           g$e2$7670$PT8AO
                           g$r$7664$PT8AO
                           g$mr$7665$PT8AO))))
                    g$ls/false$7667$PT8AO)
                  ((case-lambda
                     ((g$t$7671$PT8AO)
                      ((case-lambda
                         ((g$ls/false$7672$PT8AO)
                          (if g$ls/false$7672$PT8AO
                            (apply
                              (case-lambda
                                ((g$e0$7673$PT8AO g$e1$7674$PT8AO)
                                 (list
                                   'if
                                   (g$chi-expr$7233$PT8AO
                                     g$e0$7673$PT8AO
                                     g$r$7664$PT8AO
                                     g$mr$7665$PT8AO)
                                   (g$chi-expr$7233$PT8AO
                                     g$e1$7674$PT8AO
                                     g$r$7664$PT8AO
                                     g$mr$7665$PT8AO)
                                   (g$build-void$6872$PT8AO))))
                              g$ls/false$7672$PT8AO)
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"invalid syntax"
                              g$t$7671$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$7671$PT8AO
                         '(_ any any)))))
                   g$t$7666$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$7666$PT8AO '(_ any any any)))))
         g$e$7663$PT8AO))))
   (g$case-transformer$7174$PT8AO
     g$case-transformer$10624$PT8AO
     (case-lambda
       ((g$e$7675$PT8AO g$r$7676$PT8AO g$mr$7677$PT8AO)
        (letrec* ((g$build-one$7678$PT8AO
                    (case-lambda
                      ((g$t$7707$PT8AO g$cls$7708$PT8AO g$rest$7709$PT8AO)
                       ((case-lambda
                          ((g$t$7710$PT8AO)
                           ((case-lambda
                              ((g$ls/false$7711$PT8AO)
                               (if g$ls/false$7711$PT8AO
                                 (apply
                                   (case-lambda
                                     ((g$d*$7712$PT8AO
                                        g$e$7713$PT8AO
                                        g$e*$7714$PT8AO)
                                      (list
                                        'if
                                        ((case-lambda
                                           ((g$data$7715$PT8AO)
                                            (if (= '1
                                                   (length g$data$7715$PT8AO))
                                              (list
                                                '(primitive eqv?)
                                                g$t$7707$PT8AO
                                                (list
                                                  'quote
                                                  (car g$data$7715$PT8AO)))
                                              (list
                                                '(primitive memv)
                                                g$t$7707$PT8AO
                                                (list
                                                  'quote
                                                  g$data$7715$PT8AO)))))
                                         (g$stx->datum$6948$PT8AO
                                           g$d*$7712$PT8AO))
                                        (g$build-sequence$6871$PT8AO
                                          '#f
                                          (g$chi-expr*$7231$PT8AO
                                            (cons
                                              g$e$7713$PT8AO
                                              g$e*$7714$PT8AO)
                                            g$r$7676$PT8AO
                                            g$mr$7677$PT8AO))
                                        g$rest$7709$PT8AO)))
                                   g$ls/false$7711$PT8AO)
                                 ((case-lambda
                                    ((g$t$7716$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$7717$PT8AO)
                                         (if g$ls/false$7717$PT8AO
                                           (apply
                                             (case-lambda
                                               ((g$else$7718$PT8AO)
                                                (g$syntax-violation$7321$PT8AO
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$7675$PT8AO)))
                                             g$ls/false$7717$PT8AO)
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"invalid syntax"
                                             g$t$7716$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$7716$PT8AO
                                        'any))))
                                  g$t$7710$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO
                              g$t$7710$PT8AO
                              '(each-any any . each-any)))))
                        g$cls$7708$PT8AO))))
                  (g$build-last$7679$PT8AO
                    (case-lambda
                      ((g$t$7692$PT8AO g$cls$7693$PT8AO)
                       ((case-lambda
                          ((g$t$7694$PT8AO)
                           ((case-lambda
                              ((g$ls/false$7695$PT8AO)
                               (if g$ls/false$7695$PT8AO
                                 (apply
                                   (case-lambda
                                     ((g$d*$7696$PT8AO
                                        g$e$7697$PT8AO
                                        g$e*$7698$PT8AO)
                                      (g$build-one$7678$PT8AO
                                        g$t$7692$PT8AO
                                        g$cls$7693$PT8AO
                                        (g$build-void$6872$PT8AO))))
                                   g$ls/false$7695$PT8AO)
                                 ((case-lambda
                                    ((g$t$7699$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$7700$PT8AO)
                                         (if g$ls/false$7700$PT8AO
                                           (apply
                                             (case-lambda
                                               ((g$else-kwd$7701$PT8AO
                                                  g$x$7702$PT8AO
                                                  g$x*$7703$PT8AO)
                                                (if (if (g$id?$6937$PT8AO
                                                          g$else-kwd$7701$PT8AO)
                                                      (begin
                                                        '#f
                                                        (g$free-id=?$6941$PT8AO
                                                          g$else-kwd$7701$PT8AO
                                                          (g$scheme-stx$7158$PT8AO
                                                            'else)))
                                                      '#f)
                                                  (g$build-sequence$6871$PT8AO
                                                    '#f
                                                    (g$chi-expr*$7231$PT8AO
                                                      (cons
                                                        g$x$7702$PT8AO
                                                        g$x*$7703$PT8AO)
                                                      g$r$7676$PT8AO
                                                      g$mr$7677$PT8AO))
                                                  (g$syntax-violation$7321$PT8AO
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$7675$PT8AO))))
                                             g$ls/false$7700$PT8AO)
                                           ((case-lambda
                                              ((g$t$7704$PT8AO)
                                               ((case-lambda
                                                  ((g$ls/false$7705$PT8AO)
                                                   (if g$ls/false$7705$PT8AO
                                                     (apply
                                                       (case-lambda
                                                         ((g$else$7706$PT8AO)
                                                          (g$syntax-violation$7321$PT8AO
                                                            '#f
                                                            '"invalid syntax"
                                                            g$e$7675$PT8AO)))
                                                       g$ls/false$7705$PT8AO)
                                                     (g$syntax-violation$7321$PT8AO
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$7704$PT8AO))))
                                                (g$syntax-dispatch$7215$PT8AO
                                                  g$t$7704$PT8AO
                                                  'any))))
                                            g$t$7699$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$7699$PT8AO
                                        '(any any . each-any)))))
                                  g$t$7694$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO
                              g$t$7694$PT8AO
                              '(each-any any . each-any)))))
                        g$cls$7693$PT8AO)))))
          ((case-lambda
             ((g$t$7680$PT8AO)
              ((case-lambda
                 ((g$ls/false$7681$PT8AO)
                  (if g$ls/false$7681$PT8AO
                    (apply
                      (case-lambda
                        ((g$expr$7682$PT8AO)
                         (g$build-sequence$6871$PT8AO
                           '#f
                           (list
                             (g$chi-expr$7233$PT8AO
                               g$expr$7682$PT8AO
                               g$r$7676$PT8AO
                               g$mr$7677$PT8AO)
                             (g$build-void$6872$PT8AO)))))
                      g$ls/false$7681$PT8AO)
                    ((case-lambda
                       ((g$t$7683$PT8AO)
                        ((case-lambda
                           ((g$ls/false$7684$PT8AO)
                            (if g$ls/false$7684$PT8AO
                              (apply
                                (case-lambda
                                  ((g$expr$7685$PT8AO
                                     g$cls$7686$PT8AO
                                     g$cls*$7687$PT8AO)
                                   ((case-lambda
                                      ((g$t$7688$PT8AO)
                                       (g$build-let$6870$PT8AO
                                         '#f
                                         (list g$t$7688$PT8AO)
                                         (list
                                           (g$chi-expr$7233$PT8AO
                                             g$expr$7685$PT8AO
                                             g$r$7676$PT8AO
                                             g$mr$7677$PT8AO))
                                         ((letrec ((g$f$7689$PT8AO
                                                     (case-lambda
                                                       ((g$cls$7690$PT8AO
                                                          g$cls*$7691$PT8AO)
                                                        (if (null?
                                                              g$cls*$7691$PT8AO)
                                                          (g$build-last$7679$PT8AO
                                                            g$t$7688$PT8AO
                                                            g$cls$7690$PT8AO)
                                                          (g$build-one$7678$PT8AO
                                                            g$t$7688$PT8AO
                                                            g$cls$7690$PT8AO
                                                            (g$f$7689$PT8AO
                                                              (car g$cls*$7691$PT8AO)
                                                              (cdr g$cls*$7691$PT8AO))))))))
                                            g$f$7689$PT8AO)
                                          g$cls$7686$PT8AO
                                          g$cls*$7687$PT8AO))))
                                    (g$gen-lexical$6881$PT8AO 't))))
                                g$ls/false$7684$PT8AO)
                              (g$syntax-violation$7321$PT8AO
                                '#f
                                '"invalid syntax"
                                g$t$7683$PT8AO))))
                         (g$syntax-dispatch$7215$PT8AO
                           g$t$7683$PT8AO
                           '(_ any any . each-any)))))
                     g$t$7680$PT8AO))))
               (g$syntax-dispatch$7215$PT8AO g$t$7680$PT8AO '(_ any)))))
           g$e$7675$PT8AO)))))
   (g$quote-transformer$7175$PT8AO
     g$quote-transformer$10625$PT8AO
     (case-lambda
       ((g$e$7719$PT8AO g$r$7720$PT8AO g$mr$7721$PT8AO)
        ((case-lambda
           ((g$t$7722$PT8AO)
            ((case-lambda
               ((g$ls/false$7723$PT8AO)
                (if g$ls/false$7723$PT8AO
                  (apply
                    (case-lambda
                      ((g$datum$7724$PT8AO)
                       (list
                         'quote
                         (g$stx->datum$6948$PT8AO g$datum$7724$PT8AO))))
                    g$ls/false$7723$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$7722$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$7722$PT8AO '(_ any)))))
         g$e$7719$PT8AO))))
   (g$case-lambda-transformer$7176$PT8AO
     g$case-lambda-transformer$10626$PT8AO
     (case-lambda
       ((g$e$7725$PT8AO g$r$7726$PT8AO g$mr$7727$PT8AO)
        ((case-lambda
           ((g$t$7728$PT8AO)
            ((case-lambda
               ((g$ls/false$7729$PT8AO)
                (if g$ls/false$7729$PT8AO
                  (apply
                    (case-lambda
                      ((g$fmls*$7730$PT8AO g$b*$7731$PT8AO g$b**$7732$PT8AO)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7237$PT8AO
                              g$e$7725$PT8AO
                              g$fmls*$7730$PT8AO
                              (map cons g$b*$7731$PT8AO g$b**$7732$PT8AO)
                              g$r$7726$PT8AO
                              g$mr$7727$PT8AO)))
                         (case-lambda
                           ((g$fmls*$7735$PT8AO g$body*$7736$PT8AO)
                            ((case-lambda
                               ((g$body*$7737$PT8AO g$fmls*$7738$PT8AO)
                                (g$build-case-lambda$6869$PT8AO
                                  '#f
                                  g$fmls*$7738$PT8AO
                                  g$body*$7737$PT8AO)))
                             g$body*$7736$PT8AO
                             g$fmls*$7735$PT8AO))))))
                    g$ls/false$7729$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$7728$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$7728$PT8AO
               '(_ . #(each (any any . each-any)))))))
         g$e$7725$PT8AO))))
   (g$lambda-transformer$7177$PT8AO
     g$lambda-transformer$10627$PT8AO
     (case-lambda
       ((g$e$7739$PT8AO g$r$7740$PT8AO g$mr$7741$PT8AO)
        ((case-lambda
           ((g$t$7742$PT8AO)
            ((case-lambda
               ((g$ls/false$7743$PT8AO)
                (if g$ls/false$7743$PT8AO
                  (apply
                    (case-lambda
                      ((g$fmls$7744$PT8AO g$b$7745$PT8AO g$b*$7746$PT8AO)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7236$PT8AO
                              g$e$7739$PT8AO
                              g$fmls$7744$PT8AO
                              (cons g$b$7745$PT8AO g$b*$7746$PT8AO)
                              g$r$7740$PT8AO
                              g$mr$7741$PT8AO)))
                         (case-lambda
                           ((g$fmls$7749$PT8AO g$body$7750$PT8AO)
                            ((case-lambda
                               ((g$body$7751$PT8AO g$fmls$7752$PT8AO)
                                (g$build-lambda$6868$PT8AO
                                  '#f
                                  g$fmls$7752$PT8AO
                                  g$body$7751$PT8AO)))
                             g$body$7750$PT8AO
                             g$fmls$7749$PT8AO))))))
                    g$ls/false$7743$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$7742$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$7742$PT8AO
               '(_ any any . each-any)))))
         g$e$7739$PT8AO))))
   (g$bless$7178$PT8AO
     g$bless$10628$PT8AO
     (case-lambda
       ((g$x$7753$PT8AO)
        (g$mkstx$6925$PT8AO
          ((letrec ((g$f$7754$PT8AO
                      (case-lambda
                        ((g$x$7755$PT8AO)
                         (if (g$stx?$6909$PT8AO g$x$7755$PT8AO)
                           g$x$7755$PT8AO
                           (if (pair? g$x$7755$PT8AO)
                             (cons
                               (g$f$7754$PT8AO (car g$x$7755$PT8AO))
                               (g$f$7754$PT8AO (cdr g$x$7755$PT8AO)))
                             (if (symbol? g$x$7755$PT8AO)
                               (g$scheme-stx$7158$PT8AO g$x$7755$PT8AO)
                               (if (vector? g$x$7755$PT8AO)
                                 (vector-map g$f$7754$PT8AO g$x$7755$PT8AO)
                                 g$x$7755$PT8AO))))))))
             g$f$7754$PT8AO)
           g$x$7753$PT8AO)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7179$PT8AO
     g$with-syntax-macro$10629$PT8AO
     (case-lambda
       ((g$e$7756$PT8AO)
        ((case-lambda
           ((g$t$7757$PT8AO)
            ((case-lambda
               ((g$ls/false$7758$PT8AO)
                (if g$ls/false$7758$PT8AO
                  (apply
                    (case-lambda
                      ((g$pat*$7759$PT8AO
                         g$expr*$7760$PT8AO
                         g$b$7761$PT8AO
                         g$b*$7762$PT8AO)
                       ((case-lambda
                          ((g$idn*$7763$PT8AO)
                           (begin
                             (g$verify-formals$7235$PT8AO
                               (map car g$idn*$7763$PT8AO)
                               g$e$7756$PT8AO)
                             ((case-lambda
                                ((g$t*$7764$PT8AO)
                                 (g$bless$7178$PT8AO
                                   (list
                                     'let
                                     (map list
                                          g$t*$7764$PT8AO
                                          g$expr*$7760$PT8AO)
                                     ((letrec ((g$f$7765$PT8AO
                                                 (case-lambda
                                                   ((g$pat*$7766$PT8AO
                                                      g$t*$7767$PT8AO)
                                                    (if (null?
                                                          g$pat*$7766$PT8AO)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$7761$PT8AO
                                                            g$b*$7762$PT8AO)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$7767$PT8AO)
                                                        '()
                                                        (list
                                                          (car g$pat*$7766$PT8AO)
                                                          (g$f$7765$PT8AO
                                                            (cdr g$pat*$7766$PT8AO)
                                                            (cdr g$t*$7767$PT8AO)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$7766$PT8AO))
                                                            (car g$t*$7767$PT8AO)))))))))
                                        g$f$7765$PT8AO)
                                      g$pat*$7759$PT8AO
                                      g$t*$7764$PT8AO)))))
                              (g$generate-temporaries$7314$PT8AO
                                g$expr*$7760$PT8AO)))))
                        ((letrec ((g$f$7768$PT8AO
                                    (case-lambda
                                      ((g$pat*$7769$PT8AO)
                                       (if (null? g$pat*$7769$PT8AO)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7214$PT8AO
                                                (car g$pat*$7769$PT8AO)
                                                '())))
                                           (case-lambda
                                             ((g$pat$7772$PT8AO
                                                g$idn*$7773$PT8AO)
                                              ((case-lambda
                                                 ((g$idn*$7774$PT8AO
                                                    g$pat$7775$PT8AO)
                                                  (append
                                                    g$idn*$7774$PT8AO
                                                    (g$f$7768$PT8AO
                                                      (cdr g$pat*$7769$PT8AO)))))
                                               g$idn*$7773$PT8AO
                                               g$pat$7772$PT8AO)))))))))
                           g$f$7768$PT8AO)
                         g$pat*$7759$PT8AO))))
                    g$ls/false$7758$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$7757$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$7757$PT8AO
               '(_ #(each (any any)) any . each-any)))))
         g$e$7756$PT8AO))))
   (g$invalid-fmls-error$7180$PT8AO
     g$invalid-fmls-error$10630$PT8AO
     (case-lambda
       ((g$stx$7776$PT8AO g$fmls$7777$PT8AO)
        ((case-lambda
           ((g$t$7778$PT8AO)
            ((case-lambda
               ((g$ls/false$7779$PT8AO)
                (if g$ls/false$7779$PT8AO
                  (apply
                    (case-lambda
                      ((g$id*$7780$PT8AO g$last$7781$PT8AO)
                       ((letrec ((g$f$7782$PT8AO
                                   (case-lambda
                                     ((g$id*$7783$PT8AO)
                                      (if (null? g$id*$7783$PT8AO)
                                        (values)
                                        (if (not (g$id?$6937$PT8AO
                                                   (car g$id*$7783$PT8AO)))
                                          (g$syntax-violation$7321$PT8AO
                                            '#f
                                            '"not an identifier"
                                            g$stx$7776$PT8AO
                                            (car g$id*$7783$PT8AO))
                                          (begin
                                            (g$f$7782$PT8AO
                                              (cdr g$id*$7783$PT8AO))
                                            (if (g$bound-id-member?$6944$PT8AO
                                                  (car g$id*$7783$PT8AO)
                                                  (cdr g$id*$7783$PT8AO))
                                              (g$syntax-violation$7321$PT8AO
                                                '#f
                                                '"duplicate binding"
                                                g$stx$7776$PT8AO
                                                (car g$id*$7783$PT8AO))
                                              (void)))))))))
                          g$f$7782$PT8AO)
                        (if (g$id?$6937$PT8AO g$last$7781$PT8AO)
                          (cons g$last$7781$PT8AO g$id*$7780$PT8AO)
                          (if (g$syntax-null?$6932$PT8AO g$last$7781$PT8AO)
                            g$id*$7780$PT8AO
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"not an identifier"
                              g$stx$7776$PT8AO
                              g$last$7781$PT8AO))))))
                    g$ls/false$7779$PT8AO)
                  ((case-lambda
                     ((g$t$7784$PT8AO)
                      ((case-lambda
                         ((g$ls/false$7785$PT8AO)
                          (if g$ls/false$7785$PT8AO
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7321$PT8AO
                                   '#f
                                   '"malformed binding form"
                                   g$stx$7776$PT8AO
                                   g$fmls$7777$PT8AO)))
                              g$ls/false$7785$PT8AO)
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"invalid syntax"
                              g$t$7784$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO g$t$7784$PT8AO '_))))
                   g$t$7778$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$7778$PT8AO
               '#(each+ any () any)))))
         g$fmls$7777$PT8AO))))
   (g$let-macro$7181$PT8AO
     g$let-macro$10631$PT8AO
     (case-lambda
       ((g$stx$7786$PT8AO)
        ((case-lambda
           ((g$t$7787$PT8AO)
            ((case-lambda
               ((g$ls/false$7788$PT8AO)
                (if g$ls/false$7788$PT8AO
                  (apply
                    (case-lambda
                      ((g$lhs*$7789$PT8AO
                         g$rhs*$7790$PT8AO
                         g$b$7791$PT8AO
                         g$b*$7792$PT8AO)
                       (if (g$valid-bound-ids?$6942$PT8AO g$lhs*$7789$PT8AO)
                         (g$bless$7178$PT8AO
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$7789$PT8AO
                                 (cons g$b$7791$PT8AO g$b*$7792$PT8AO)))
                             g$rhs*$7790$PT8AO))
                         (g$invalid-fmls-error$7180$PT8AO
                           g$stx$7786$PT8AO
                           g$lhs*$7789$PT8AO))))
                    g$ls/false$7788$PT8AO)
                  ((case-lambda
                     ((g$t$7793$PT8AO)
                      ((case-lambda
                         ((g$ls/false$7794$PT8AO)
                          (if (if g$ls/false$7794$PT8AO
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$7795$PT8AO
                                         g$lhs*$7796$PT8AO
                                         g$rhs*$7797$PT8AO
                                         g$b$7798$PT8AO
                                         g$b*$7799$PT8AO)
                                       (g$id?$6937$PT8AO g$f$7795$PT8AO)))
                                    g$ls/false$7794$PT8AO))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$7800$PT8AO
                                   g$lhs*$7801$PT8AO
                                   g$rhs*$7802$PT8AO
                                   g$b$7803$PT8AO
                                   g$b*$7804$PT8AO)
                                 (if (g$valid-bound-ids?$6942$PT8AO
                                       g$lhs*$7801$PT8AO)
                                   (g$bless$7178$PT8AO
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$7800$PT8AO
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$7801$PT8AO
                                                 (cons
                                                   g$b$7803$PT8AO
                                                   g$b*$7804$PT8AO)))))
                                         g$f$7800$PT8AO)
                                       g$rhs*$7802$PT8AO))
                                   (g$invalid-fmls-error$7180$PT8AO
                                     g$stx$7786$PT8AO
                                     g$lhs*$7801$PT8AO))))
                              g$ls/false$7794$PT8AO)
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"invalid syntax"
                              g$t$7793$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$7793$PT8AO
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$7787$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$7787$PT8AO
               '(_ #(each (any any)) any . each-any)))))
         g$stx$7786$PT8AO))))
   (g$let-values-macro$7182$PT8AO
     g$let-values-macro$10632$PT8AO
     (case-lambda
       ((g$stx$7805$PT8AO)
        (letrec* ((g$rename$7806$PT8AO
                    (case-lambda
                      ((g$x$7857$PT8AO g$old*$7858$PT8AO g$new*$7859$PT8AO)
                       (begin
                         (if (g$id?$6937$PT8AO g$x$7857$PT8AO)
                           (void)
                           (g$syntax-violation$7321$PT8AO
                             '#f
                             '"not an indentifier"
                             g$stx$7805$PT8AO
                             g$x$7857$PT8AO))
                         (if (g$bound-id-member?$6944$PT8AO
                               g$x$7857$PT8AO
                               g$old*$7858$PT8AO)
                           (g$syntax-violation$7321$PT8AO
                             '#f
                             '"duplicate binding"
                             g$stx$7805$PT8AO
                             g$x$7857$PT8AO)
                           (void))
                         ((case-lambda
                            ((g$y$7860$PT8AO)
                             (values
                               g$y$7860$PT8AO
                               (cons g$x$7857$PT8AO g$old*$7858$PT8AO)
                               (cons g$y$7860$PT8AO g$new*$7859$PT8AO))))
                          (gensym
                            (g$syntax->datum$7324$PT8AO g$x$7857$PT8AO)))))))
                  (g$rename*$7807$PT8AO
                    (case-lambda
                      ((g$x*$7848$PT8AO g$old*$7849$PT8AO g$new*$7850$PT8AO)
                       (if (null? g$x*$7848$PT8AO)
                         (values '() g$old*$7849$PT8AO g$new*$7850$PT8AO)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$7806$PT8AO
                                (car g$x*$7848$PT8AO)
                                g$old*$7849$PT8AO
                                g$new*$7850$PT8AO)))
                           (case-lambda
                             ((g$x$7851$PT8AO
                                g$old*$7852$PT8AO
                                g$new*$7853$PT8AO)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$7807$PT8AO
                                     (cdr g$x*$7848$PT8AO)
                                     g$old*$7852$PT8AO
                                     g$new*$7853$PT8AO)))
                                (case-lambda
                                  ((g$x*$7854$PT8AO
                                     g$old*$7855$PT8AO
                                     g$new*$7856$PT8AO)
                                   (values
                                     (cons g$x$7851$PT8AO g$x*$7854$PT8AO)
                                     g$old*$7855$PT8AO
                                     g$new*$7856$PT8AO))))))))))))
          ((case-lambda
             ((g$t$7808$PT8AO)
              ((case-lambda
                 ((g$ls/false$7809$PT8AO)
                  (if g$ls/false$7809$PT8AO
                    (apply
                      (case-lambda
                        ((g$b$7810$PT8AO g$b*$7811$PT8AO)
                         (g$cons*$5367$PT8AO
                           (g$bless$7178$PT8AO 'let)
                           '()
                           g$b$7810$PT8AO
                           g$b*$7811$PT8AO)))
                      g$ls/false$7809$PT8AO)
                    ((case-lambda
                       ((g$t$7812$PT8AO)
                        ((case-lambda
                           ((g$ls/false$7813$PT8AO)
                            (if g$ls/false$7813$PT8AO
                              (apply
                                (case-lambda
                                  ((g$lhs*$7814$PT8AO
                                     g$rhs*$7815$PT8AO
                                     g$b$7816$PT8AO
                                     g$b*$7817$PT8AO)
                                   (g$bless$7178$PT8AO
                                     ((letrec ((g$f$7818$PT8AO
                                                 (case-lambda
                                                   ((g$lhs*$7819$PT8AO
                                                      g$rhs*$7820$PT8AO
                                                      g$old*$7821$PT8AO
                                                      g$new*$7822$PT8AO)
                                                    (if (null?
                                                          g$lhs*$7819$PT8AO)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$7821$PT8AO
                                                               g$new*$7822$PT8AO)
                                                          (cons
                                                            g$b$7816$PT8AO
                                                            g$b*$7817$PT8AO)))
                                                      ((case-lambda
                                                         ((g$t$7823$PT8AO)
                                                          ((case-lambda
                                                             ((g$ls/false$7824$PT8AO)
                                                              (if g$ls/false$7824$PT8AO
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$7825$PT8AO)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$7807$PT8AO
                                                                            g$x*$7825$PT8AO
                                                                            g$old*$7821$PT8AO
                                                                            g$new*$7822$PT8AO)))
                                                                       (case-lambda
                                                                         ((g$y*$7829$PT8AO
                                                                            g$old*$7830$PT8AO
                                                                            g$new*$7831$PT8AO)
                                                                          ((case-lambda
                                                                             ((g$new*$7832$PT8AO
                                                                                g$old*$7833$PT8AO
                                                                                g$y*$7834$PT8AO)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$7820$PT8AO))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$7834$PT8AO
                                                                                  (g$f$7818$PT8AO
                                                                                    (cdr g$lhs*$7819$PT8AO)
                                                                                    (cdr g$rhs*$7820$PT8AO)
                                                                                    g$old*$7833$PT8AO
                                                                                    g$new*$7832$PT8AO)))))
                                                                           g$new*$7831$PT8AO
                                                                           g$old*$7830$PT8AO
                                                                           g$y*$7829$PT8AO))))))
                                                                  g$ls/false$7824$PT8AO)
                                                                ((case-lambda
                                                                   ((g$t$7835$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$ls/false$7836$PT8AO)
                                                                        (if g$ls/false$7836$PT8AO
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$7837$PT8AO
                                                                                 g$x$7838$PT8AO)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$7806$PT8AO
                                                                                      g$x$7838$PT8AO
                                                                                      g$old*$7821$PT8AO
                                                                                      g$new*$7822$PT8AO)))
                                                                                 (case-lambda
                                                                                   ((g$y$7839$PT8AO
                                                                                      g$old*$7840$PT8AO
                                                                                      g$new*$7841$PT8AO)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$7807$PT8AO
                                                                                           g$x*$7837$PT8AO
                                                                                           g$old*$7840$PT8AO
                                                                                           g$new*$7841$PT8AO)))
                                                                                      (case-lambda
                                                                                        ((g$y*$7842$PT8AO
                                                                                           g$old*$7843$PT8AO
                                                                                           g$new*$7844$PT8AO)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$7820$PT8AO))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$7842$PT8AO
                                                                                               g$y$7839$PT8AO)
                                                                                             (g$f$7818$PT8AO
                                                                                               (cdr g$lhs*$7819$PT8AO)
                                                                                               (cdr g$rhs*$7820$PT8AO)
                                                                                               g$old*$7843$PT8AO
                                                                                               g$new*$7844$PT8AO)))))))))))
                                                                            g$ls/false$7836$PT8AO)
                                                                          ((case-lambda
                                                                             ((g$t$7845$PT8AO)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$7846$PT8AO)
                                                                                  (if g$ls/false$7846$PT8AO
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$7847$PT8AO)
                                                                                         (g$syntax-violation$7321$PT8AO
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$7805$PT8AO
                                                                                           g$others$7847$PT8AO)))
                                                                                      g$ls/false$7846$PT8AO)
                                                                                    (g$syntax-violation$7321$PT8AO
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$7845$PT8AO))))
                                                                               (g$syntax-dispatch$7215$PT8AO
                                                                                 g$t$7845$PT8AO
                                                                                 'any))))
                                                                           g$t$7835$PT8AO))))
                                                                     (g$syntax-dispatch$7215$PT8AO
                                                                       g$t$7835$PT8AO
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$7823$PT8AO))))
                                                           (g$syntax-dispatch$7215$PT8AO
                                                             g$t$7823$PT8AO
                                                             'each-any))))
                                                       (car g$lhs*$7819$PT8AO)))))))
                                        g$f$7818$PT8AO)
                                      g$lhs*$7814$PT8AO
                                      g$rhs*$7815$PT8AO
                                      '()
                                      '()))))
                                g$ls/false$7813$PT8AO)
                              (g$syntax-violation$7321$PT8AO
                                '#f
                                '"invalid syntax"
                                g$t$7812$PT8AO))))
                         (g$syntax-dispatch$7215$PT8AO
                           g$t$7812$PT8AO
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$7808$PT8AO))))
               (g$syntax-dispatch$7215$PT8AO
                 g$t$7808$PT8AO
                 '(_ () any . each-any)))))
           g$stx$7805$PT8AO)))))
   (g$let*-values-macro$7183$PT8AO
     g$let*-values-macro$10633$PT8AO
     (case-lambda
       ((g$stx$7861$PT8AO)
        (letrec* ((g$check$7862$PT8AO
                    (case-lambda
                      ((g$x*$7886$PT8AO)
                       (if (null? g$x*$7886$PT8AO)
                         (void)
                         ((case-lambda
                            ((g$x$7887$PT8AO)
                             (begin
                               (if (g$id?$6937$PT8AO g$x$7887$PT8AO)
                                 (void)
                                 (g$syntax-violation$7321$PT8AO
                                   '#f
                                   '"not an identifier"
                                   g$stx$7861$PT8AO
                                   g$x$7887$PT8AO))
                               (g$check$7862$PT8AO (cdr g$x*$7886$PT8AO))
                               (if (g$bound-id-member?$6944$PT8AO
                                     g$x$7887$PT8AO
                                     (cdr g$x*$7886$PT8AO))
                                 (g$syntax-violation$7321$PT8AO
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$7861$PT8AO
                                   g$x$7887$PT8AO)
                                 (void)))))
                          (car g$x*$7886$PT8AO)))))))
          ((case-lambda
             ((g$t$7863$PT8AO)
              ((case-lambda
                 ((g$ls/false$7864$PT8AO)
                  (if g$ls/false$7864$PT8AO
                    (apply
                      (case-lambda
                        ((g$b$7865$PT8AO g$b*$7866$PT8AO)
                         (g$cons*$5367$PT8AO
                           (g$bless$7178$PT8AO 'let)
                           '()
                           g$b$7865$PT8AO
                           g$b*$7866$PT8AO)))
                      g$ls/false$7864$PT8AO)
                    ((case-lambda
                       ((g$t$7867$PT8AO)
                        ((case-lambda
                           ((g$ls/false$7868$PT8AO)
                            (if g$ls/false$7868$PT8AO
                              (apply
                                (case-lambda
                                  ((g$lhs*$7869$PT8AO
                                     g$rhs*$7870$PT8AO
                                     g$b$7871$PT8AO
                                     g$b*$7872$PT8AO)
                                   (g$bless$7178$PT8AO
                                     ((letrec ((g$f$7873$PT8AO
                                                 (case-lambda
                                                   ((g$lhs*$7874$PT8AO
                                                      g$rhs*$7875$PT8AO)
                                                    (if (null?
                                                          g$lhs*$7874$PT8AO)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$7871$PT8AO
                                                          g$b*$7872$PT8AO))
                                                      ((case-lambda
                                                         ((g$t$7876$PT8AO)
                                                          ((case-lambda
                                                             ((g$ls/false$7877$PT8AO)
                                                              (if g$ls/false$7877$PT8AO
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$7878$PT8AO)
                                                                     (begin
                                                                       (g$check$7862$PT8AO
                                                                         g$x*$7878$PT8AO)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$7875$PT8AO))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$7878$PT8AO
                                                                           (g$f$7873$PT8AO
                                                                             (cdr g$lhs*$7874$PT8AO)
                                                                             (cdr g$rhs*$7875$PT8AO)))))))
                                                                  g$ls/false$7877$PT8AO)
                                                                ((case-lambda
                                                                   ((g$t$7879$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$ls/false$7880$PT8AO)
                                                                        (if g$ls/false$7880$PT8AO
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$7881$PT8AO
                                                                                 g$x$7882$PT8AO)
                                                                               (begin
                                                                                 (g$check$7862$PT8AO
                                                                                   (cons
                                                                                     g$x$7882$PT8AO
                                                                                     g$x*$7881$PT8AO))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$7875$PT8AO))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$7881$PT8AO
                                                                                       g$x$7882$PT8AO)
                                                                                     (g$f$7873$PT8AO
                                                                                       (cdr g$lhs*$7874$PT8AO)
                                                                                       (cdr g$rhs*$7875$PT8AO)))))))
                                                                            g$ls/false$7880$PT8AO)
                                                                          ((case-lambda
                                                                             ((g$t$7883$PT8AO)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$7884$PT8AO)
                                                                                  (if g$ls/false$7884$PT8AO
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$7885$PT8AO)
                                                                                         (g$syntax-violation$7321$PT8AO
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$7861$PT8AO
                                                                                           g$others$7885$PT8AO)))
                                                                                      g$ls/false$7884$PT8AO)
                                                                                    (g$syntax-violation$7321$PT8AO
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$7883$PT8AO))))
                                                                               (g$syntax-dispatch$7215$PT8AO
                                                                                 g$t$7883$PT8AO
                                                                                 'any))))
                                                                           g$t$7879$PT8AO))))
                                                                     (g$syntax-dispatch$7215$PT8AO
                                                                       g$t$7879$PT8AO
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$7876$PT8AO))))
                                                           (g$syntax-dispatch$7215$PT8AO
                                                             g$t$7876$PT8AO
                                                             'each-any))))
                                                       (car g$lhs*$7874$PT8AO)))))))
                                        g$f$7873$PT8AO)
                                      g$lhs*$7869$PT8AO
                                      g$rhs*$7870$PT8AO))))
                                g$ls/false$7868$PT8AO)
                              (g$syntax-violation$7321$PT8AO
                                '#f
                                '"invalid syntax"
                                g$t$7867$PT8AO))))
                         (g$syntax-dispatch$7215$PT8AO
                           g$t$7867$PT8AO
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$7863$PT8AO))))
               (g$syntax-dispatch$7215$PT8AO
                 g$t$7863$PT8AO
                 '(_ () any . each-any)))))
           g$stx$7861$PT8AO)))))
   (g$trace-lambda-macro$7184$PT8AO
     g$trace-lambda-macro$10634$PT8AO
     (case-lambda
       ((g$stx$7888$PT8AO)
        ((case-lambda
           ((g$t$7889$PT8AO)
            ((case-lambda
               ((g$ls/false$7890$PT8AO)
                (if g$ls/false$7890$PT8AO
                  (apply
                    (case-lambda
                      ((g$who$7891$PT8AO
                         g$fmls$7892$PT8AO
                         g$b$7893$PT8AO
                         g$b*$7894$PT8AO)
                       (if (g$valid-bound-ids?$6942$PT8AO g$fmls$7892$PT8AO)
                         (g$bless$7178$PT8AO
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$7891$PT8AO)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$7892$PT8AO
                                 (cons g$b$7893$PT8AO g$b*$7894$PT8AO)))))
                         (g$invalid-fmls-error$7180$PT8AO
                           g$stx$7888$PT8AO
                           g$fmls$7892$PT8AO))))
                    g$ls/false$7890$PT8AO)
                  ((case-lambda
                     ((g$t$7895$PT8AO)
                      ((case-lambda
                         ((g$ls/false$7896$PT8AO)
                          (if g$ls/false$7896$PT8AO
                            (apply
                              (case-lambda
                                ((g$who$7897$PT8AO
                                   g$fmls$7898$PT8AO
                                   g$last$7899$PT8AO
                                   g$b$7900$PT8AO
                                   g$b*$7901$PT8AO)
                                 (if (g$valid-bound-ids?$6942$PT8AO
                                       (cons
                                         g$last$7899$PT8AO
                                         g$fmls$7898$PT8AO))
                                   (g$bless$7178$PT8AO
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$7897$PT8AO)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$7898$PT8AO
                                             g$last$7899$PT8AO)
                                           (cons
                                             g$b$7900$PT8AO
                                             g$b*$7901$PT8AO)))))
                                   (g$invalid-fmls-error$7180$PT8AO
                                     g$stx$7888$PT8AO
                                     (append
                                       g$fmls$7898$PT8AO
                                       g$last$7899$PT8AO)))))
                              g$ls/false$7896$PT8AO)
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"invalid syntax"
                              g$t$7895$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$7895$PT8AO
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$7889$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$7889$PT8AO
               '(_ any each-any any . each-any)))))
         g$stx$7888$PT8AO))))
   (g$trace-define-macro$7185$PT8AO
     g$trace-define-macro$10635$PT8AO
     (case-lambda
       ((g$stx$7902$PT8AO)
        ((case-lambda
           ((g$t$7903$PT8AO)
            ((case-lambda
               ((g$ls/false$7904$PT8AO)
                (if g$ls/false$7904$PT8AO
                  (apply
                    (case-lambda
                      ((g$who$7905$PT8AO
                         g$fmls$7906$PT8AO
                         g$b$7907$PT8AO
                         g$b*$7908$PT8AO)
                       (if (g$valid-bound-ids?$6942$PT8AO g$fmls$7906$PT8AO)
                         (g$bless$7178$PT8AO
                           (list
                             'define
                             g$who$7905$PT8AO
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$7905$PT8AO)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$7906$PT8AO
                                   (cons g$b$7907$PT8AO g$b*$7908$PT8AO))))))
                         (g$invalid-fmls-error$7180$PT8AO
                           g$stx$7902$PT8AO
                           g$fmls$7906$PT8AO))))
                    g$ls/false$7904$PT8AO)
                  ((case-lambda
                     ((g$t$7909$PT8AO)
                      ((case-lambda
                         ((g$ls/false$7910$PT8AO)
                          (if g$ls/false$7910$PT8AO
                            (apply
                              (case-lambda
                                ((g$who$7911$PT8AO
                                   g$fmls$7912$PT8AO
                                   g$last$7913$PT8AO
                                   g$b$7914$PT8AO
                                   g$b*$7915$PT8AO)
                                 (if (g$valid-bound-ids?$6942$PT8AO
                                       (cons
                                         g$last$7913$PT8AO
                                         g$fmls$7912$PT8AO))
                                   (g$bless$7178$PT8AO
                                     (list
                                       'define
                                       g$who$7911$PT8AO
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$7911$PT8AO)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$7912$PT8AO
                                               g$last$7913$PT8AO)
                                             (cons
                                               g$b$7914$PT8AO
                                               g$b*$7915$PT8AO))))))
                                   (g$invalid-fmls-error$7180$PT8AO
                                     g$stx$7902$PT8AO
                                     (append
                                       g$fmls$7912$PT8AO
                                       g$last$7913$PT8AO)))))
                              g$ls/false$7910$PT8AO)
                            ((case-lambda
                               ((g$t$7916$PT8AO)
                                ((case-lambda
                                   ((g$ls/false$7917$PT8AO)
                                    (if g$ls/false$7917$PT8AO
                                      (apply
                                        (case-lambda
                                          ((g$who$7918$PT8AO g$expr$7919$PT8AO)
                                           (if (g$id?$6937$PT8AO
                                                 g$who$7918$PT8AO)
                                             (g$bless$7178$PT8AO
                                               (list
                                                 'define
                                                 g$who$7918$PT8AO
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$7919$PT8AO))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$7918$PT8AO)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7321$PT8AO
                                               '#f
                                               '"invalid name"
                                               g$stx$7902$PT8AO))))
                                        g$ls/false$7917$PT8AO)
                                      (g$syntax-violation$7321$PT8AO
                                        '#f
                                        '"invalid syntax"
                                        g$t$7916$PT8AO))))
                                 (g$syntax-dispatch$7215$PT8AO
                                   g$t$7916$PT8AO
                                   '(_ any any)))))
                             g$t$7909$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$7909$PT8AO
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$7903$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$7903$PT8AO
               '(_ (any . each-any) any . each-any)))))
         g$stx$7902$PT8AO))))
   (g$trace-define-syntax-macro$7186$PT8AO
     g$trace-define-syntax-macro$10636$PT8AO
     (case-lambda
       ((g$stx$7920$PT8AO)
        ((case-lambda
           ((g$t$7921$PT8AO)
            ((case-lambda
               ((g$ls/false$7922$PT8AO)
                (if g$ls/false$7922$PT8AO
                  (apply
                    (case-lambda
                      ((g$who$7923$PT8AO g$expr$7924$PT8AO)
                       (if (g$id?$6937$PT8AO g$who$7923$PT8AO)
                         (g$bless$7178$PT8AO
                           (list
                             'define-syntax
                             g$who$7923$PT8AO
                             (list
                               'make-traced-macro
                               (list 'quote g$who$7923$PT8AO)
                               g$expr$7924$PT8AO)))
                         (g$syntax-violation$7321$PT8AO
                           '#f
                           '"invalid name"
                           g$stx$7920$PT8AO))))
                    g$ls/false$7922$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$7921$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$7921$PT8AO '(_ any any)))))
         g$stx$7920$PT8AO))))
   (g$trace-let/rec-syntax$7187$PT8AO
     g$trace-let/rec-syntax$10637$PT8AO
     (case-lambda
       ((g$who$7925$PT8AO)
        (case-lambda
          ((g$stx$7926$PT8AO)
           ((case-lambda
              ((g$t$7927$PT8AO)
               ((case-lambda
                  ((g$ls/false$7928$PT8AO)
                   (if g$ls/false$7928$PT8AO
                     (apply
                       (case-lambda
                         ((g$lhs*$7929$PT8AO
                            g$rhs*$7930$PT8AO
                            g$b$7931$PT8AO
                            g$b*$7932$PT8AO)
                          (if (g$valid-bound-ids?$6942$PT8AO g$lhs*$7929$PT8AO)
                            ((case-lambda
                               ((g$rhs*$7933$PT8AO)
                                (g$bless$7178$PT8AO
                                  (cons
                                    g$who$7925$PT8AO
                                    (cons
                                      (map list
                                           g$lhs*$7929$PT8AO
                                           g$rhs*$7933$PT8AO)
                                      (cons g$b$7931$PT8AO g$b*$7932$PT8AO))))))
                             (map (case-lambda
                                    ((g$lhs$7934$PT8AO g$rhs$7935$PT8AO)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$7934$PT8AO)
                                       g$rhs$7935$PT8AO)))
                                  g$lhs*$7929$PT8AO
                                  g$rhs*$7930$PT8AO))
                            (g$invalid-fmls-error$7180$PT8AO
                              g$stx$7926$PT8AO
                              g$lhs*$7929$PT8AO))))
                       g$ls/false$7928$PT8AO)
                     (g$syntax-violation$7321$PT8AO
                       '#f
                       '"invalid syntax"
                       g$t$7927$PT8AO))))
                (g$syntax-dispatch$7215$PT8AO
                  g$t$7927$PT8AO
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$7926$PT8AO))))))
   (g$trace-let-syntax-macro$7188$PT8AO
     g$trace-let-syntax-macro$10638$PT8AO
     (g$trace-let/rec-syntax$7187$PT8AO 'let-syntax))
   (g$trace-letrec-syntax-macro$7189$PT8AO
     g$trace-letrec-syntax-macro$10639$PT8AO
     (g$trace-let/rec-syntax$7187$PT8AO 'letrec-syntax))
   (g$guard-macro$7190$PT8AO
     g$guard-macro$10640$PT8AO
     (case-lambda
       ((g$x$7936$PT8AO)
        (letrec* ((g$gen-clauses$7937$PT8AO
                    (case-lambda
                      ((g$con$7949$PT8AO
                         g$outerk$7950$PT8AO
                         g$clause*$7951$PT8AO)
                       (letrec* ((g$f$7952$PT8AO
                                   (case-lambda
                                     ((g$x$7980$PT8AO g$k$7981$PT8AO)
                                      ((case-lambda
                                         ((g$t$7982$PT8AO)
                                          ((case-lambda
                                             ((g$ls/false$7983$PT8AO)
                                              (if g$ls/false$7983$PT8AO
                                                (apply
                                                  (case-lambda
                                                    ((g$e$7984$PT8AO
                                                       g$p$7985$PT8AO)
                                                     ((case-lambda
                                                        ((g$t$7986$PT8AO)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$7986$PT8AO
                                                               g$e$7984$PT8AO))
                                                           (list
                                                             'if
                                                             g$t$7986$PT8AO
                                                             (list
                                                               g$p$7985$PT8AO
                                                               g$t$7986$PT8AO)
                                                             g$k$7981$PT8AO))))
                                                      (gensym))))
                                                  g$ls/false$7983$PT8AO)
                                                ((case-lambda
                                                   ((g$t$7987$PT8AO)
                                                    ((case-lambda
                                                       ((g$ls/false$7988$PT8AO)
                                                        (if g$ls/false$7988$PT8AO
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$7989$PT8AO)
                                                               ((case-lambda
                                                                  ((g$t$7990$PT8AO)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$7990$PT8AO
                                                                         g$e$7989$PT8AO))
                                                                     (list
                                                                       'if
                                                                       g$t$7990$PT8AO
                                                                       g$t$7990$PT8AO
                                                                       g$k$7981$PT8AO))))
                                                                (gensym))))
                                                            g$ls/false$7988$PT8AO)
                                                          ((case-lambda
                                                             ((g$t$7991$PT8AO)
                                                              ((case-lambda
                                                                 ((g$ls/false$7992$PT8AO)
                                                                  (if g$ls/false$7992$PT8AO
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$7993$PT8AO
                                                                           g$v$7994$PT8AO
                                                                           g$v*$7995$PT8AO)
                                                                         (list
                                                                           'if
                                                                           g$e$7993$PT8AO
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$7994$PT8AO
                                                                               g$v*$7995$PT8AO))
                                                                           g$k$7981$PT8AO)))
                                                                      g$ls/false$7992$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$t$7996$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$ls/false$7997$PT8AO)
                                                                            (if g$ls/false$7997$PT8AO
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7321$PT8AO
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$7980$PT8AO)))
                                                                                g$ls/false$7997$PT8AO)
                                                                              (g$syntax-violation$7321$PT8AO
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$7996$PT8AO))))
                                                                         (g$syntax-dispatch$7215$PT8AO
                                                                           g$t$7996$PT8AO
                                                                           '_))))
                                                                     g$t$7991$PT8AO))))
                                                               (g$syntax-dispatch$7215$PT8AO
                                                                 g$t$7991$PT8AO
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$7987$PT8AO))))
                                                     (g$syntax-dispatch$7215$PT8AO
                                                       g$t$7987$PT8AO
                                                       '(any)))))
                                                 g$t$7982$PT8AO))))
                                           (g$syntax-dispatch$7215$PT8AO
                                             g$t$7982$PT8AO
                                             '(any #(scheme-id =>) any)))))
                                       g$x$7980$PT8AO))))
                                 (g$f*$7953$PT8AO
                                   (case-lambda
                                     ((g$x*$7960$PT8AO)
                                      ((case-lambda
                                         ((g$t$7961$PT8AO)
                                          ((case-lambda
                                             ((g$ls/false$7962$PT8AO)
                                              (if g$ls/false$7962$PT8AO
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$7949$PT8AO)
                                                       '#t)))
                                                  g$ls/false$7962$PT8AO)
                                                ((case-lambda
                                                   ((g$t$7963$PT8AO)
                                                    ((case-lambda
                                                       ((g$ls/false$7964$PT8AO)
                                                        (if g$ls/false$7964$PT8AO
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$7965$PT8AO
                                                                 g$e*$7966$PT8AO)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$7965$PT8AO
                                                                     g$e*$7966$PT8AO))
                                                                 '#f)))
                                                            g$ls/false$7964$PT8AO)
                                                          ((case-lambda
                                                             ((g$t$7967$PT8AO)
                                                              ((case-lambda
                                                                 ((g$ls/false$7968$PT8AO)
                                                                  (if g$ls/false$7968$PT8AO
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$7969$PT8AO
                                                                           g$cls*$7970$PT8AO)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$7953$PT8AO
                                                                                g$cls*$7970$PT8AO)))
                                                                           (case-lambda
                                                                             ((g$e$7973$PT8AO
                                                                                g$g$7974$PT8AO)
                                                                              ((case-lambda
                                                                                 ((g$g$7975$PT8AO
                                                                                    g$e$7976$PT8AO)
                                                                                  (values
                                                                                    (g$f$7952$PT8AO
                                                                                      g$cls$7969$PT8AO
                                                                                      g$e$7976$PT8AO)
                                                                                    g$g$7975$PT8AO)))
                                                                               g$g$7974$PT8AO
                                                                               g$e$7973$PT8AO))))))
                                                                      g$ls/false$7968$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$t$7977$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$ls/false$7978$PT8AO)
                                                                            (if g$ls/false$7978$PT8AO
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$7979$PT8AO)
                                                                                   (g$syntax-violation$7321$PT8AO
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$7979$PT8AO)))
                                                                                g$ls/false$7978$PT8AO)
                                                                              (g$syntax-violation$7321$PT8AO
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$7977$PT8AO))))
                                                                         (g$syntax-dispatch$7215$PT8AO
                                                                           g$t$7977$PT8AO
                                                                           'any))))
                                                                     g$t$7967$PT8AO))))
                                                               (g$syntax-dispatch$7215$PT8AO
                                                                 g$t$7967$PT8AO
                                                                 '(any .
                                                                       any)))))
                                                           g$t$7963$PT8AO))))
                                                     (g$syntax-dispatch$7215$PT8AO
                                                       g$t$7963$PT8AO
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$7961$PT8AO))))
                                           (g$syntax-dispatch$7215$PT8AO
                                             g$t$7961$PT8AO
                                             '()))))
                                       g$x*$7960$PT8AO)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$7953$PT8AO g$clause*$7951$PT8AO)))
                           (case-lambda
                             ((g$code$7956$PT8AO g$raisek$7957$PT8AO)
                              ((case-lambda
                                 ((g$raisek$7958$PT8AO g$code$7959$PT8AO)
                                  (if g$raisek$7958$PT8AO
                                    (list g$outerk$7950$PT8AO g$code$7959$PT8AO)
                                    g$code$7959$PT8AO)))
                               g$raisek$7957$PT8AO
                               g$code$7956$PT8AO)))))))))
          ((case-lambda
             ((g$t$7938$PT8AO)
              ((case-lambda
                 ((g$ls/false$7939$PT8AO)
                  (if (if g$ls/false$7939$PT8AO
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$7940$PT8AO
                                 g$clause*$7941$PT8AO
                                 g$b$7942$PT8AO
                                 g$b*$7943$PT8AO)
                               (g$id?$6937$PT8AO g$con$7940$PT8AO)))
                            g$ls/false$7939$PT8AO))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$7944$PT8AO
                           g$clause*$7945$PT8AO
                           g$b$7946$PT8AO
                           g$b*$7947$PT8AO)
                         ((case-lambda
                            ((g$outerk$7948$PT8AO)
                             (g$bless$7178$PT8AO
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$7948$PT8AO)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$7944$PT8AO)
                                           (g$gen-clauses$7937$PT8AO
                                             g$con$7944$PT8AO
                                             g$outerk$7948$PT8AO
                                             g$clause*$7945$PT8AO))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$7946$PT8AO
                                                 g$b*$7947$PT8AO))))))))))))
                          (gensym))))
                      g$ls/false$7939$PT8AO)
                    (g$syntax-violation$7321$PT8AO
                      '#f
                      '"invalid syntax"
                      g$t$7938$PT8AO))))
               (g$syntax-dispatch$7215$PT8AO
                 g$t$7938$PT8AO
                 '(_ (any . each-any) any . each-any)))))
           g$x$7936$PT8AO)))))
   (g$define-enumeration-macro$7191$PT8AO
     g$define-enumeration-macro$10641$PT8AO
     (case-lambda
       ((g$stx$7998$PT8AO)
        (letrec* ((g$set?$7999$PT8AO
                    (case-lambda
                      ((g$x$8012$PT8AO)
                       ((case-lambda
                          ((g$t$8013$PT8AO)
                           (if g$t$8013$PT8AO
                             g$t$8013$PT8AO
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8012$PT8AO)
                                          (cdr g$x$8012$PT8AO)))
                                 (begin
                                   '#f
                                   (g$set?$7999$PT8AO (cdr g$x$8012$PT8AO)))
                                 '#f)))))
                        (null? g$x$8012$PT8AO)))))
                  (g$remove-dups$8000$PT8AO
                    (case-lambda
                      ((g$ls$8011$PT8AO)
                       (if (null? g$ls$8011$PT8AO)
                         '()
                         (cons
                           (car g$ls$8011$PT8AO)
                           (g$remove-dups$8000$PT8AO
                             (g$remq$5372$PT8AO
                               (car g$ls$8011$PT8AO)
                               (cdr g$ls$8011$PT8AO)))))))))
          ((case-lambda
             ((g$t$8001$PT8AO)
              ((case-lambda
                 ((g$ls/false$8002$PT8AO)
                  (if (if g$ls/false$8002$PT8AO
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8003$PT8AO
                                 g$id*$8004$PT8AO
                                 g$maker$8005$PT8AO)
                               (if (g$id?$6937$PT8AO g$name$8003$PT8AO)
                                 (if (g$id?$6937$PT8AO g$maker$8005$PT8AO)
                                   (begin
                                     '#f
                                     (g$for-all$5365$PT8AO
                                       g$id?$6937$PT8AO
                                       g$id*$8004$PT8AO))
                                   '#f)
                                 '#f)))
                            g$ls/false$8002$PT8AO))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8006$PT8AO g$id*$8007$PT8AO g$maker$8008$PT8AO)
                         ((case-lambda
                            ((g$name*$8009$PT8AO g$mk$8010$PT8AO)
                             (g$bless$7178$PT8AO
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8010$PT8AO
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8009$PT8AO))))
                                 (list
                                   'define-syntax
                                   g$name$8006$PT8AO
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8009$PT8AO))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8006$PT8AO)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8008$PT8AO
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8008$PT8AO)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8009$PT8AO))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8008$PT8AO)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8010$PT8AO
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8000$PT8AO
                            (g$syntax->datum$7324$PT8AO g$id*$8007$PT8AO))
                          (gensym))))
                      g$ls/false$8002$PT8AO)
                    (g$syntax-violation$7321$PT8AO
                      '#f
                      '"invalid syntax"
                      g$t$8001$PT8AO))))
               (g$syntax-dispatch$7215$PT8AO
                 g$t$8001$PT8AO
                 '(_ any each-any any)))))
           g$stx$7998$PT8AO)))))
   (g$time-macro$7192$PT8AO
     g$time-macro$10642$PT8AO
     (case-lambda
       ((g$stx$8014$PT8AO)
        ((case-lambda
           ((g$t$8015$PT8AO)
            ((case-lambda
               ((g$ls/false$8016$PT8AO)
                (if g$ls/false$8016$PT8AO
                  (apply
                    (case-lambda
                      ((g$expr$8017$PT8AO)
                       ((case-lambda
                          ((g$str$8018$PT8AO)
                           (g$bless$7178$PT8AO
                             (list
                               'time-it
                               g$str$8018$PT8AO
                               (list 'lambda '() g$expr$8017$PT8AO)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6095$PT8AO)))
                          (case-lambda
                            ((g$p$8021$PT8AO g$e$8022$PT8AO)
                             ((case-lambda
                                ((g$e$8023$PT8AO g$p$8024$PT8AO)
                                 (begin
                                   (write
                                     (g$syntax->datum$7324$PT8AO
                                       g$expr$8017$PT8AO)
                                     g$p$8024$PT8AO)
                                   (g$e$8023$PT8AO))))
                              g$e$8022$PT8AO
                              g$p$8021$PT8AO)))))))
                    g$ls/false$8016$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$8015$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$8015$PT8AO '(_ any)))))
         g$stx$8014$PT8AO))))
   (g$delay-macro$7193$PT8AO
     g$delay-macro$10643$PT8AO
     (case-lambda
       ((g$stx$8025$PT8AO)
        ((case-lambda
           ((g$t$8026$PT8AO)
            ((case-lambda
               ((g$ls/false$8027$PT8AO)
                (if g$ls/false$8027$PT8AO
                  (apply
                    (case-lambda
                      ((g$expr$8028$PT8AO)
                       (g$bless$7178$PT8AO
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8028$PT8AO)))))
                    g$ls/false$8027$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$8026$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$8026$PT8AO '(_ any)))))
         g$stx$8025$PT8AO))))
   (g$assert-macro$7194$PT8AO
     g$assert-macro$10644$PT8AO
     (case-lambda
       ((g$stx$8029$PT8AO)
        ((case-lambda
           ((g$t$8030$PT8AO)
            ((case-lambda
               ((g$ls/false$8031$PT8AO)
                (if g$ls/false$8031$PT8AO
                  (apply
                    (case-lambda
                      ((g$expr$8032$PT8AO)
                       (g$bless$7178$PT8AO
                         (list
                           'unless
                           g$expr$8032$PT8AO
                           (list
                             'assertion-violation
                             ''assert
                             '"assertion failed"
                             (list 'quote g$expr$8032$PT8AO))))))
                    g$ls/false$8031$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$8030$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$8030$PT8AO '(_ any)))))
         g$stx$8029$PT8AO))))
   (g$endianness-macro$7195$PT8AO
     g$endianness-macro$10645$PT8AO
     (case-lambda
       ((g$stx$8033$PT8AO)
        ((case-lambda
           ((g$t$8034$PT8AO)
            ((case-lambda
               ((g$ls/false$8035$PT8AO)
                (if g$ls/false$8035$PT8AO
                  (apply
                    (case-lambda
                      ((g$e$8036$PT8AO)
                       ((case-lambda
                          ((g$t$8037$PT8AO)
                           (if (eqv? g$t$8037$PT8AO 'little)
                             (g$bless$7178$PT8AO ''little)
                             (if (eqv? g$t$8037$PT8AO 'big)
                               (g$bless$7178$PT8AO ''big)
                               (g$syntax-violation$7321$PT8AO
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8033$PT8AO)))))
                        (g$syntax->datum$7324$PT8AO g$e$8036$PT8AO))))
                    g$ls/false$8035$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$8034$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$8034$PT8AO '(_ any)))))
         g$stx$8033$PT8AO))))
   (g$identifier-syntax-macro$7196$PT8AO
     g$identifier-syntax-macro$10646$PT8AO
     (case-lambda
       ((g$stx$8038$PT8AO)
        ((case-lambda
           ((g$t$8039$PT8AO)
            ((case-lambda
               ((g$ls/false$8040$PT8AO)
                (if g$ls/false$8040$PT8AO
                  (apply
                    (case-lambda
                      ((g$expr$8041$PT8AO)
                       (g$bless$7178$PT8AO
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8041$PT8AO))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8041$PT8AO)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8040$PT8AO)
                  ((case-lambda
                     ((g$t$8042$PT8AO)
                      ((case-lambda
                         ((g$ls/false$8043$PT8AO)
                          (if (if g$ls/false$8043$PT8AO
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8044$PT8AO
                                         g$expr1$8045$PT8AO
                                         g$id2$8046$PT8AO
                                         g$expr2$8047$PT8AO
                                         g$expr3$8048$PT8AO)
                                       (if (g$id?$6937$PT8AO g$id1$8044$PT8AO)
                                         (if (g$id?$6937$PT8AO g$id2$8046$PT8AO)
                                           (begin
                                             '#f
                                             (g$id?$6937$PT8AO
                                               g$expr2$8047$PT8AO))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8043$PT8AO))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8049$PT8AO
                                   g$expr1$8050$PT8AO
                                   g$id2$8051$PT8AO
                                   g$expr2$8052$PT8AO
                                   g$expr3$8053$PT8AO)
                                 (g$bless$7178$PT8AO
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8050$PT8AO))
                                         (list
                                           (list 'set! 'id g$expr2$8052$PT8AO)
                                           (list 'syntax g$expr3$8053$PT8AO))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8050$PT8AO
                                               '(e* ...))))))))))
                              g$ls/false$8043$PT8AO)
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"invalid syntax"
                              g$t$8042$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$8042$PT8AO
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8039$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$8039$PT8AO '(_ any)))))
         g$stx$8038$PT8AO))))
   (g$do-macro$7197$PT8AO
     g$do-macro$10647$PT8AO
     (case-lambda
       ((g$stx$8054$PT8AO)
        (letrec* ((g$bind$8055$PT8AO
                    (case-lambda
                      ((g$x$8067$PT8AO)
                       ((case-lambda
                          ((g$t$8068$PT8AO)
                           ((case-lambda
                              ((g$ls/false$8069$PT8AO)
                               (if g$ls/false$8069$PT8AO
                                 (apply
                                   (case-lambda
                                     ((g$x$8070$PT8AO g$init$8071$PT8AO)
                                      (list
                                        g$x$8070$PT8AO
                                        g$init$8071$PT8AO
                                        g$x$8070$PT8AO)))
                                   g$ls/false$8069$PT8AO)
                                 ((case-lambda
                                    ((g$t$8072$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$8073$PT8AO)
                                         (if g$ls/false$8073$PT8AO
                                           (apply
                                             (case-lambda
                                               ((g$x$8074$PT8AO
                                                  g$init$8075$PT8AO
                                                  g$step$8076$PT8AO)
                                                (list
                                                  g$x$8074$PT8AO
                                                  g$init$8075$PT8AO
                                                  g$step$8076$PT8AO)))
                                             g$ls/false$8073$PT8AO)
                                           ((case-lambda
                                              ((g$t$8077$PT8AO)
                                               ((case-lambda
                                                  ((g$ls/false$8078$PT8AO)
                                                   (if g$ls/false$8078$PT8AO
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7321$PT8AO
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8054$PT8AO)))
                                                       g$ls/false$8078$PT8AO)
                                                     (g$syntax-violation$7321$PT8AO
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8077$PT8AO))))
                                                (g$syntax-dispatch$7215$PT8AO
                                                  g$t$8077$PT8AO
                                                  '_))))
                                            g$t$8072$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$8072$PT8AO
                                        '(any any any)))))
                                  g$t$8068$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO
                              g$t$8068$PT8AO
                              '(any any)))))
                        g$x$8067$PT8AO)))))
          ((case-lambda
             ((g$t$8056$PT8AO)
              ((case-lambda
                 ((g$ls/false$8057$PT8AO)
                  (if g$ls/false$8057$PT8AO
                    (apply
                      (case-lambda
                        ((g$binding*$8058$PT8AO
                           g$test$8059$PT8AO
                           g$expr*$8060$PT8AO
                           g$command*$8061$PT8AO)
                         ((case-lambda
                            ((g$t$8062$PT8AO)
                             ((case-lambda
                                ((g$ls/false$8063$PT8AO)
                                 (if g$ls/false$8063$PT8AO
                                   (apply
                                     (case-lambda
                                       ((g$x*$8064$PT8AO
                                          g$init*$8065$PT8AO
                                          g$step*$8066$PT8AO)
                                        (if (g$valid-bound-ids?$6942$PT8AO
                                              g$x*$8064$PT8AO)
                                          (g$bless$7178$PT8AO
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8064$PT8AO
                                                    (list
                                                      'if
                                                      g$test$8059$PT8AO
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8060$PT8AO))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8061$PT8AO
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8066$PT8AO))))))))
                                              (cons 'loop g$init*$8065$PT8AO)))
                                          (g$syntax-violation$7321$PT8AO
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8054$PT8AO))))
                                     g$ls/false$8063$PT8AO)
                                   (g$syntax-violation$7321$PT8AO
                                     '#f
                                     '"invalid syntax"
                                     g$t$8062$PT8AO))))
                              (g$syntax-dispatch$7215$PT8AO
                                g$t$8062$PT8AO
                                '#(each (any any any))))))
                          (map g$bind$8055$PT8AO g$binding*$8058$PT8AO))))
                      g$ls/false$8057$PT8AO)
                    (g$syntax-violation$7321$PT8AO
                      '#f
                      '"invalid syntax"
                      g$t$8056$PT8AO))))
               (g$syntax-dispatch$7215$PT8AO
                 g$t$8056$PT8AO
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8054$PT8AO)))))
   (g$let*-macro$7198$PT8AO
     g$let*-macro$10648$PT8AO
     (case-lambda
       ((g$stx$8079$PT8AO)
        ((case-lambda
           ((g$t$8080$PT8AO)
            ((case-lambda
               ((g$ls/false$8081$PT8AO)
                (if (if g$ls/false$8081$PT8AO
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8082$PT8AO
                               g$rhs*$8083$PT8AO
                               g$b$8084$PT8AO
                               g$b*$8085$PT8AO)
                             (g$for-all$5365$PT8AO
                               g$id?$6937$PT8AO
                               g$lhs*$8082$PT8AO)))
                          g$ls/false$8081$PT8AO))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8086$PT8AO
                         g$rhs*$8087$PT8AO
                         g$b$8088$PT8AO
                         g$b*$8089$PT8AO)
                       (g$bless$7178$PT8AO
                         ((letrec ((g$f$8090$PT8AO
                                     (case-lambda
                                       ((g$x*$8091$PT8AO)
                                        (if (null? g$x*$8091$PT8AO)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8088$PT8AO
                                                g$b*$8089$PT8AO)))
                                          (list
                                            'let
                                            (list (car g$x*$8091$PT8AO))
                                            (g$f$8090$PT8AO
                                              (cdr g$x*$8091$PT8AO))))))))
                            g$f$8090$PT8AO)
                          (map list g$lhs*$8086$PT8AO g$rhs*$8087$PT8AO)))))
                    g$ls/false$8081$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$8080$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$8080$PT8AO
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8079$PT8AO))))
   (g$or-macro$7199$PT8AO
     g$or-macro$10649$PT8AO
     (case-lambda
       ((g$stx$8092$PT8AO)
        ((case-lambda
           ((g$t$8093$PT8AO)
            ((case-lambda
               ((g$ls/false$8094$PT8AO)
                (if g$ls/false$8094$PT8AO
                  (apply (case-lambda (() '#f)) g$ls/false$8094$PT8AO)
                  ((case-lambda
                     ((g$t$8095$PT8AO)
                      ((case-lambda
                         ((g$ls/false$8096$PT8AO)
                          (if g$ls/false$8096$PT8AO
                            (apply
                              (case-lambda
                                ((g$e$8097$PT8AO g$e*$8098$PT8AO)
                                 (g$bless$7178$PT8AO
                                   ((letrec ((g$f$8099$PT8AO
                                               (case-lambda
                                                 ((g$e$8100$PT8AO
                                                    g$e*$8101$PT8AO)
                                                  (if (null? g$e*$8101$PT8AO)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8100$PT8AO)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8100$PT8AO))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8099$PT8AO
                                                          (car g$e*$8101$PT8AO)
                                                          (cdr g$e*$8101$PT8AO)))))))))
                                      g$f$8099$PT8AO)
                                    g$e$8097$PT8AO
                                    g$e*$8098$PT8AO))))
                              g$ls/false$8096$PT8AO)
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"invalid syntax"
                              g$t$8095$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$8095$PT8AO
                         '(_ any . each-any)))))
                   g$t$8093$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$8093$PT8AO '(_)))))
         g$stx$8092$PT8AO))))
   (g$and-macro$7200$PT8AO
     g$and-macro$10650$PT8AO
     (case-lambda
       ((g$stx$8102$PT8AO)
        ((case-lambda
           ((g$t$8103$PT8AO)
            ((case-lambda
               ((g$ls/false$8104$PT8AO)
                (if g$ls/false$8104$PT8AO
                  (apply (case-lambda (() '#t)) g$ls/false$8104$PT8AO)
                  ((case-lambda
                     ((g$t$8105$PT8AO)
                      ((case-lambda
                         ((g$ls/false$8106$PT8AO)
                          (if g$ls/false$8106$PT8AO
                            (apply
                              (case-lambda
                                ((g$e$8107$PT8AO g$e*$8108$PT8AO)
                                 (g$bless$7178$PT8AO
                                   ((letrec ((g$f$8109$PT8AO
                                               (case-lambda
                                                 ((g$e$8110$PT8AO
                                                    g$e*$8111$PT8AO)
                                                  (if (null? g$e*$8111$PT8AO)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8110$PT8AO)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8110$PT8AO
                                                        (cons
                                                          (g$f$8109$PT8AO
                                                            (car g$e*$8111$PT8AO)
                                                            (cdr g$e*$8111$PT8AO))
                                                          '(#f)))))))))
                                      g$f$8109$PT8AO)
                                    g$e$8107$PT8AO
                                    g$e*$8108$PT8AO))))
                              g$ls/false$8106$PT8AO)
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"invalid syntax"
                              g$t$8105$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$8105$PT8AO
                         '(_ any . each-any)))))
                   g$t$8103$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$8103$PT8AO '(_)))))
         g$stx$8102$PT8AO))))
   (g$cond-macro$7201$PT8AO
     g$cond-macro$10651$PT8AO
     (case-lambda
       ((g$stx$8112$PT8AO)
        ((case-lambda
           ((g$t$8113$PT8AO)
            ((case-lambda
               ((g$ls/false$8114$PT8AO)
                (if g$ls/false$8114$PT8AO
                  (apply
                    (case-lambda
                      ((g$cls$8115$PT8AO g$cls*$8116$PT8AO)
                       (g$bless$7178$PT8AO
                         ((letrec ((g$f$8117$PT8AO
                                     (case-lambda
                                       ((g$cls$8118$PT8AO g$cls*$8119$PT8AO)
                                        (if (null? g$cls*$8119$PT8AO)
                                          ((case-lambda
                                             ((g$t$8120$PT8AO)
                                              ((case-lambda
                                                 ((g$ls/false$8121$PT8AO)
                                                  (if g$ls/false$8121$PT8AO
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8122$PT8AO
                                                           g$e*$8123$PT8AO)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8122$PT8AO
                                                             g$e*$8123$PT8AO))))
                                                      g$ls/false$8121$PT8AO)
                                                    ((case-lambda
                                                       ((g$t$8124$PT8AO)
                                                        ((case-lambda
                                                           ((g$ls/false$8125$PT8AO)
                                                            (if g$ls/false$8125$PT8AO
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8126$PT8AO
                                                                     g$p$8127$PT8AO)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8126$PT8AO))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8127$PT8AO
                                                                         '(t))))))
                                                                g$ls/false$8125$PT8AO)
                                                              ((case-lambda
                                                                 ((g$t$8128$PT8AO)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8129$PT8AO)
                                                                      (if g$ls/false$8129$PT8AO
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8130$PT8AO)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8130$PT8AO
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8129$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$t$8131$PT8AO)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8132$PT8AO)
                                                                                (if g$ls/false$8132$PT8AO
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8133$PT8AO
                                                                                         g$e*$8134$PT8AO)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8133$PT8AO
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8134$PT8AO))))
                                                                                    g$ls/false$8132$PT8AO)
                                                                                  ((case-lambda
                                                                                     ((g$t$8135$PT8AO)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8136$PT8AO)
                                                                                          (if g$ls/false$8136$PT8AO
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7321$PT8AO
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8112$PT8AO)))
                                                                                              g$ls/false$8136$PT8AO)
                                                                                            (g$syntax-violation$7321$PT8AO
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8135$PT8AO))))
                                                                                       (g$syntax-dispatch$7215$PT8AO
                                                                                         g$t$8135$PT8AO
                                                                                         '_))))
                                                                                   g$t$8131$PT8AO))))
                                                                             (g$syntax-dispatch$7215$PT8AO
                                                                               g$t$8131$PT8AO
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8128$PT8AO))))
                                                                   (g$syntax-dispatch$7215$PT8AO
                                                                     g$t$8128$PT8AO
                                                                     '(any)))))
                                                               g$t$8124$PT8AO))))
                                                         (g$syntax-dispatch$7215$PT8AO
                                                           g$t$8124$PT8AO
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8120$PT8AO))))
                                               (g$syntax-dispatch$7215$PT8AO
                                                 g$t$8120$PT8AO
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8118$PT8AO)
                                          ((case-lambda
                                             ((g$t$8137$PT8AO)
                                              ((case-lambda
                                                 ((g$ls/false$8138$PT8AO)
                                                  (if g$ls/false$8138$PT8AO
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8139$PT8AO
                                                           g$e*$8140$PT8AO)
                                                         (g$syntax-violation$7321$PT8AO
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8112$PT8AO)))
                                                      g$ls/false$8138$PT8AO)
                                                    ((case-lambda
                                                       ((g$t$8141$PT8AO)
                                                        ((case-lambda
                                                           ((g$ls/false$8142$PT8AO)
                                                            (if g$ls/false$8142$PT8AO
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8143$PT8AO
                                                                     g$p$8144$PT8AO)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8143$PT8AO))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8144$PT8AO
                                                                         '(t))
                                                                       (g$f$8117$PT8AO
                                                                         (car g$cls*$8119$PT8AO)
                                                                         (cdr g$cls*$8119$PT8AO))))))
                                                                g$ls/false$8142$PT8AO)
                                                              ((case-lambda
                                                                 ((g$t$8145$PT8AO)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8146$PT8AO)
                                                                      (if g$ls/false$8146$PT8AO
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8147$PT8AO)
                                                                             (list
                                                                               'or
                                                                               g$e$8147$PT8AO
                                                                               (g$f$8117$PT8AO
                                                                                 (car g$cls*$8119$PT8AO)
                                                                                 (cdr g$cls*$8119$PT8AO)))))
                                                                          g$ls/false$8146$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$t$8148$PT8AO)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8149$PT8AO)
                                                                                (if g$ls/false$8149$PT8AO
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8150$PT8AO
                                                                                         g$e*$8151$PT8AO)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8150$PT8AO
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8151$PT8AO)
                                                                                         (g$f$8117$PT8AO
                                                                                           (car g$cls*$8119$PT8AO)
                                                                                           (cdr g$cls*$8119$PT8AO)))))
                                                                                    g$ls/false$8149$PT8AO)
                                                                                  ((case-lambda
                                                                                     ((g$t$8152$PT8AO)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8153$PT8AO)
                                                                                          (if g$ls/false$8153$PT8AO
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7321$PT8AO
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8112$PT8AO)))
                                                                                              g$ls/false$8153$PT8AO)
                                                                                            (g$syntax-violation$7321$PT8AO
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8152$PT8AO))))
                                                                                       (g$syntax-dispatch$7215$PT8AO
                                                                                         g$t$8152$PT8AO
                                                                                         '_))))
                                                                                   g$t$8148$PT8AO))))
                                                                             (g$syntax-dispatch$7215$PT8AO
                                                                               g$t$8148$PT8AO
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8145$PT8AO))))
                                                                   (g$syntax-dispatch$7215$PT8AO
                                                                     g$t$8145$PT8AO
                                                                     '(any)))))
                                                               g$t$8141$PT8AO))))
                                                         (g$syntax-dispatch$7215$PT8AO
                                                           g$t$8141$PT8AO
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8137$PT8AO))))
                                               (g$syntax-dispatch$7215$PT8AO
                                                 g$t$8137$PT8AO
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8118$PT8AO))))))
                            g$f$8117$PT8AO)
                          g$cls$8115$PT8AO
                          g$cls*$8116$PT8AO))))
                    g$ls/false$8114$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$8113$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$8113$PT8AO
               '(_ any . each-any)))))
         g$stx$8112$PT8AO))))
   (g$do-include$7202$PT8AO
     g$do-include$10652$PT8AO
     (case-lambda
       ((g$stx$8154$PT8AO g$id$8155$PT8AO g$filename$8156$PT8AO)
        ((case-lambda
           ((g$filename$8157$PT8AO)
            (begin
              (if (if (string? g$filename$8157$PT8AO)
                    (begin '#f (g$id?$6937$PT8AO g$id$8155$PT8AO))
                    '#f)
                (void)
                (g$syntax-violation$7321$PT8AO
                  '#f
                  '"invalid syntax"
                  g$stx$8154$PT8AO))
              (cons
                (g$bless$7178$PT8AO 'begin)
                (with-input-from-file
                  g$filename$8157$PT8AO
                  (case-lambda
                    (()
                     ((letrec ((g$f$8158$PT8AO
                                 (case-lambda
                                   ((g$ls$8159$PT8AO)
                                    ((case-lambda
                                       ((g$x$8160$PT8AO)
                                        (if (eof-object? g$x$8160$PT8AO)
                                          (reverse g$ls$8159$PT8AO)
                                          (g$f$8158$PT8AO
                                            (cons
                                              (g$datum->stx$6920$PT8AO
                                                g$id$8155$PT8AO
                                                g$x$8160$PT8AO)
                                              g$ls$8159$PT8AO)))))
                                     (read-annotated))))))
                        g$f$8158$PT8AO)
                      '()))))))))
         (g$stx->datum$6948$PT8AO g$filename$8156$PT8AO)))))
   (g$include-macro$7203$PT8AO
     g$include-macro$10653$PT8AO
     (case-lambda
       ((g$e$8161$PT8AO)
        ((case-lambda
           ((g$t$8162$PT8AO)
            ((case-lambda
               ((g$ls/false$8163$PT8AO)
                (if g$ls/false$8163$PT8AO
                  (apply
                    (case-lambda
                      ((g$id$8164$PT8AO g$filename$8165$PT8AO)
                       (g$do-include$7202$PT8AO
                         g$e$8161$PT8AO
                         g$id$8164$PT8AO
                         g$filename$8165$PT8AO)))
                    g$ls/false$8163$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$8162$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$8162$PT8AO '(any any)))))
         g$e$8161$PT8AO))))
   (g$include-into-macro$7204$PT8AO
     g$include-into-macro$10654$PT8AO
     (case-lambda
       ((g$e$8166$PT8AO)
        ((case-lambda
           ((g$t$8167$PT8AO)
            ((case-lambda
               ((g$ls/false$8168$PT8AO)
                (if g$ls/false$8168$PT8AO
                  (apply
                    (case-lambda
                      ((g$id$8169$PT8AO g$filename$8170$PT8AO)
                       (g$do-include$7202$PT8AO
                         g$e$8166$PT8AO
                         g$id$8169$PT8AO
                         g$filename$8170$PT8AO)))
                    g$ls/false$8168$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$8167$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$8167$PT8AO '(_ any any)))))
         g$e$8166$PT8AO))))
   (g$syntax-rules-macro$7205$PT8AO
     g$syntax-rules-macro$10655$PT8AO
     (case-lambda
       ((g$e$8171$PT8AO)
        ((case-lambda
           ((g$t$8172$PT8AO)
            ((case-lambda
               ((g$ls/false$8173$PT8AO)
                (if g$ls/false$8173$PT8AO
                  (apply
                    (case-lambda
                      ((g$lits$8174$PT8AO g$pat*$8175$PT8AO g$tmp*$8176$PT8AO)
                       (begin
                         (g$verify-literals$7218$PT8AO
                           g$lits$8174$PT8AO
                           g$e$8171$PT8AO)
                         (g$bless$7178$PT8AO
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8174$PT8AO
                                   (map (case-lambda
                                          ((g$pat$8177$PT8AO g$tmp$8178$PT8AO)
                                           ((case-lambda
                                              ((g$t$8179$PT8AO)
                                               ((case-lambda
                                                  ((g$ls/false$8180$PT8AO)
                                                   (if g$ls/false$8180$PT8AO
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8181$PT8AO)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8181$PT8AO)
                                                            (list
                                                              'syntax
                                                              g$tmp$8178$PT8AO))))
                                                       g$ls/false$8180$PT8AO)
                                                     ((case-lambda
                                                        ((g$t$8182$PT8AO)
                                                         ((case-lambda
                                                            ((g$ls/false$8183$PT8AO)
                                                             (if g$ls/false$8183$PT8AO
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7321$PT8AO
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8171$PT8AO
                                                                      g$pat$8177$PT8AO)))
                                                                 g$ls/false$8183$PT8AO)
                                                               (g$syntax-violation$7321$PT8AO
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8182$PT8AO))))
                                                          (g$syntax-dispatch$7215$PT8AO
                                                            g$t$8182$PT8AO
                                                            '_))))
                                                      g$t$8179$PT8AO))))
                                                (g$syntax-dispatch$7215$PT8AO
                                                  g$t$8179$PT8AO
                                                  '(_ . any)))))
                                            g$pat$8177$PT8AO)))
                                        g$pat*$8175$PT8AO
                                        g$tmp*$8176$PT8AO)))))))))
                    g$ls/false$8173$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$8172$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$8172$PT8AO
               '(_ each-any . #(each (any any)))))))
         g$e$8171$PT8AO))))
   (g$quasiquote-macro$7206$PT8AO
     g$quasiquote-macro$10656$PT8AO
     ((case-lambda
        (()
         (letrec* ((g$datum$8184$PT8AO
                     (case-lambda
                       ((g$x$8315$PT8AO)
                        (list
                          (g$scheme-stx$7158$PT8AO 'quote)
                          (g$mkstx$6925$PT8AO g$x$8315$PT8AO '() '() '())))))
                   (g$quasicons*$8200$PT8AO
                     (case-lambda
                       ((g$x$8311$PT8AO g$y$8312$PT8AO)
                        ((letrec ((g$f$8313$PT8AO
                                    (case-lambda
                                      ((g$x$8314$PT8AO)
                                       (if (null? g$x$8314$PT8AO)
                                         g$y$8312$PT8AO
                                         (g$quasicons$8201$PT8AO
                                           (car g$x$8314$PT8AO)
                                           (g$f$8313$PT8AO
                                             (cdr g$x$8314$PT8AO))))))))
                           g$f$8313$PT8AO)
                         g$x$8311$PT8AO))))
                   (g$quasicons$8201$PT8AO
                     (case-lambda
                       ((g$x$8292$PT8AO g$y$8293$PT8AO)
                        ((case-lambda
                           ((g$t$8294$PT8AO)
                            ((case-lambda
                               ((g$ls/false$8295$PT8AO)
                                (if g$ls/false$8295$PT8AO
                                  (apply
                                    (case-lambda
                                      ((g$dy$8296$PT8AO)
                                       ((case-lambda
                                          ((g$t$8297$PT8AO)
                                           ((case-lambda
                                              ((g$ls/false$8298$PT8AO)
                                               (if g$ls/false$8298$PT8AO
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8299$PT8AO)
                                                      (list
                                                        (g$scheme-stx$7158$PT8AO
                                                          'quote)
                                                        (cons
                                                          g$dx$8299$PT8AO
                                                          g$dy$8296$PT8AO))))
                                                   g$ls/false$8298$PT8AO)
                                                 ((case-lambda
                                                    ((g$t$8300$PT8AO)
                                                     ((case-lambda
                                                        ((g$ls/false$8301$PT8AO)
                                                         (if g$ls/false$8301$PT8AO
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8302$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8303$PT8AO)
                                                                        (if g$ls/false$8303$PT8AO
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7158$PT8AO
                                                                                   'list)
                                                                                 g$x$8292$PT8AO)))
                                                                            g$ls/false$8303$PT8AO)
                                                                          ((case-lambda
                                                                             ((g$t$8304$PT8AO)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8305$PT8AO)
                                                                                  (if g$ls/false$8305$PT8AO
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7158$PT8AO
                                                                                             'cons)
                                                                                           g$x$8292$PT8AO
                                                                                           g$y$8293$PT8AO)))
                                                                                      g$ls/false$8305$PT8AO)
                                                                                    (g$syntax-violation$7321$PT8AO
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8304$PT8AO))))
                                                                               (g$syntax-dispatch$7215$PT8AO
                                                                                 g$t$8304$PT8AO
                                                                                 '_))))
                                                                           g$t$8302$PT8AO))))
                                                                     (g$syntax-dispatch$7215$PT8AO
                                                                       g$t$8302$PT8AO
                                                                       '()))))
                                                                 g$dy$8296$PT8AO)))
                                                             g$ls/false$8301$PT8AO)
                                                           (g$syntax-violation$7321$PT8AO
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8300$PT8AO))))
                                                      (g$syntax-dispatch$7215$PT8AO
                                                        g$t$8300$PT8AO
                                                        '_))))
                                                  g$t$8297$PT8AO))))
                                            (g$syntax-dispatch$7215$PT8AO
                                              g$t$8297$PT8AO
                                              '(#(scheme-id quote) any)))))
                                        g$x$8292$PT8AO)))
                                    g$ls/false$8295$PT8AO)
                                  ((case-lambda
                                     ((g$t$8306$PT8AO)
                                      ((case-lambda
                                         ((g$ls/false$8307$PT8AO)
                                          (if g$ls/false$8307$PT8AO
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8308$PT8AO)
                                                 (g$cons*$5367$PT8AO
                                                   (g$scheme-stx$7158$PT8AO
                                                     'list)
                                                   g$x$8292$PT8AO
                                                   g$stuff$8308$PT8AO)))
                                              g$ls/false$8307$PT8AO)
                                            ((case-lambda
                                               ((g$t$8309$PT8AO)
                                                ((case-lambda
                                                   ((g$ls/false$8310$PT8AO)
                                                    (if g$ls/false$8310$PT8AO
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7158$PT8AO
                                                               'cons)
                                                             g$x$8292$PT8AO
                                                             g$y$8293$PT8AO)))
                                                        g$ls/false$8310$PT8AO)
                                                      (g$syntax-violation$7321$PT8AO
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8309$PT8AO))))
                                                 (g$syntax-dispatch$7215$PT8AO
                                                   g$t$8309$PT8AO
                                                   '_))))
                                             g$t$8306$PT8AO))))
                                       (g$syntax-dispatch$7215$PT8AO
                                         g$t$8306$PT8AO
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8294$PT8AO))))
                             (g$syntax-dispatch$7215$PT8AO
                               g$t$8294$PT8AO
                               '(#(scheme-id quote) any)))))
                         g$y$8293$PT8AO))))
                   (g$quasiappend$8202$PT8AO
                     (case-lambda
                       ((g$x$8279$PT8AO g$y$8280$PT8AO)
                        ((case-lambda
                           ((g$ls$8281$PT8AO)
                            (if (null? g$ls$8281$PT8AO)
                              (list (g$scheme-stx$7158$PT8AO 'quote) '())
                              (if (null? (cdr g$ls$8281$PT8AO))
                                (car g$ls$8281$PT8AO)
                                (g$cons*$5367$PT8AO
                                  (g$scheme-stx$7158$PT8AO 'append)
                                  g$ls$8281$PT8AO)))))
                         ((letrec ((g$f$8282$PT8AO
                                     (case-lambda
                                       ((g$x$8283$PT8AO)
                                        (if (null? g$x$8283$PT8AO)
                                          ((case-lambda
                                             ((g$t$8284$PT8AO)
                                              ((case-lambda
                                                 ((g$ls/false$8285$PT8AO)
                                                  (if g$ls/false$8285$PT8AO
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8285$PT8AO)
                                                    ((case-lambda
                                                       ((g$t$8286$PT8AO)
                                                        ((case-lambda
                                                           ((g$ls/false$8287$PT8AO)
                                                            (if g$ls/false$8287$PT8AO
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8280$PT8AO)))
                                                                g$ls/false$8287$PT8AO)
                                                              (g$syntax-violation$7321$PT8AO
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8286$PT8AO))))
                                                         (g$syntax-dispatch$7215$PT8AO
                                                           g$t$8286$PT8AO
                                                           '_))))
                                                     g$t$8284$PT8AO))))
                                               (g$syntax-dispatch$7215$PT8AO
                                                 g$t$8284$PT8AO
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8280$PT8AO)
                                          ((case-lambda
                                             ((g$t$8288$PT8AO)
                                              ((case-lambda
                                                 ((g$ls/false$8289$PT8AO)
                                                  (if g$ls/false$8289$PT8AO
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8282$PT8AO
                                                           (cdr g$x$8283$PT8AO))))
                                                      g$ls/false$8289$PT8AO)
                                                    ((case-lambda
                                                       ((g$t$8290$PT8AO)
                                                        ((case-lambda
                                                           ((g$ls/false$8291$PT8AO)
                                                            (if g$ls/false$8291$PT8AO
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8283$PT8AO)
                                                                     (g$f$8282$PT8AO
                                                                       (cdr g$x$8283$PT8AO)))))
                                                                g$ls/false$8291$PT8AO)
                                                              (g$syntax-violation$7321$PT8AO
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8290$PT8AO))))
                                                         (g$syntax-dispatch$7215$PT8AO
                                                           g$t$8290$PT8AO
                                                           '_))))
                                                     g$t$8288$PT8AO))))
                                               (g$syntax-dispatch$7215$PT8AO
                                                 g$t$8288$PT8AO
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8283$PT8AO)))))))
                            g$f$8282$PT8AO)
                          g$x$8279$PT8AO)))))
                   (g$quasivector$8203$PT8AO
                     (case-lambda
                       ((g$x$8254$PT8AO)
                        ((case-lambda
                           ((g$pat-x$8255$PT8AO)
                            ((case-lambda
                               ((g$t$8256$PT8AO)
                                ((case-lambda
                                   ((g$ls/false$8257$PT8AO)
                                    (if g$ls/false$8257$PT8AO
                                      (apply
                                        (case-lambda
                                          ((g$x*$8258$PT8AO)
                                           (list
                                             (g$scheme-stx$7158$PT8AO 'quote)
                                             (list->vector g$x*$8258$PT8AO))))
                                        g$ls/false$8257$PT8AO)
                                      ((case-lambda
                                         ((g$t$8259$PT8AO)
                                          ((case-lambda
                                             ((g$ls/false$8260$PT8AO)
                                              (if g$ls/false$8260$PT8AO
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8261$PT8AO
                                                                 (case-lambda
                                                                   ((g$x$8262$PT8AO
                                                                      g$k$8263$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$t$8264$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8265$PT8AO)
                                                                            (if g$ls/false$8265$PT8AO
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8266$PT8AO)
                                                                                   (g$k$8263$PT8AO
                                                                                     (map (case-lambda
                                                                                            ((g$x$8267$PT8AO)
                                                                                             (list
                                                                                               (g$scheme-stx$7158$PT8AO
                                                                                                 'quote)
                                                                                               g$x$8267$PT8AO)))
                                                                                          g$x*$8266$PT8AO))))
                                                                                g$ls/false$8265$PT8AO)
                                                                              ((case-lambda
                                                                                 ((g$t$8268$PT8AO)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8269$PT8AO)
                                                                                      (if g$ls/false$8269$PT8AO
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8270$PT8AO)
                                                                                             (g$k$8263$PT8AO
                                                                                               g$x*$8270$PT8AO)))
                                                                                          g$ls/false$8269$PT8AO)
                                                                                        ((case-lambda
                                                                                           ((g$t$8271$PT8AO)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8272$PT8AO)
                                                                                                (if g$ls/false$8272$PT8AO
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8273$PT8AO
                                                                                                         g$y$8274$PT8AO)
                                                                                                       (g$f$8261$PT8AO
                                                                                                         g$y$8274$PT8AO
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8275$PT8AO)
                                                                                                            (g$k$8263$PT8AO
                                                                                                              (cons
                                                                                                                g$x$8273$PT8AO
                                                                                                                g$ls$8275$PT8AO)))))))
                                                                                                    g$ls/false$8272$PT8AO)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8276$PT8AO)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8277$PT8AO)
                                                                                                          (if g$ls/false$8277$PT8AO
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7158$PT8AO
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8255$PT8AO)))
                                                                                                              g$ls/false$8277$PT8AO)
                                                                                                            (g$syntax-violation$7321$PT8AO
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8276$PT8AO))))
                                                                                                       (g$syntax-dispatch$7215$PT8AO
                                                                                                         g$t$8276$PT8AO
                                                                                                         '_))))
                                                                                                   g$t$8271$PT8AO))))
                                                                                             (g$syntax-dispatch$7215$PT8AO
                                                                                               g$t$8271$PT8AO
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8268$PT8AO))))
                                                                                   (g$syntax-dispatch$7215$PT8AO
                                                                                     g$t$8268$PT8AO
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8264$PT8AO))))
                                                                         (g$syntax-dispatch$7215$PT8AO
                                                                           g$t$8264$PT8AO
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8262$PT8AO)))))
                                                        g$f$8261$PT8AO)
                                                      g$x$8254$PT8AO
                                                      (case-lambda
                                                        ((g$ls$8278$PT8AO)
                                                         (g$cons*$5367$PT8AO
                                                           (g$scheme-stx$7158$PT8AO
                                                             'vector)
                                                           g$ls$8278$PT8AO))))))
                                                  g$ls/false$8260$PT8AO)
                                                (g$syntax-violation$7321$PT8AO
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8259$PT8AO))))
                                           (g$syntax-dispatch$7215$PT8AO
                                             g$t$8259$PT8AO
                                             '_))))
                                       g$t$8256$PT8AO))))
                                 (g$syntax-dispatch$7215$PT8AO
                                   g$t$8256$PT8AO
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8255$PT8AO)))
                         g$x$8254$PT8AO))))
                   (g$vquasi$8204$PT8AO
                     (case-lambda
                       ((g$p$8237$PT8AO g$lev$8238$PT8AO)
                        ((case-lambda
                           ((g$t$8239$PT8AO)
                            ((case-lambda
                               ((g$ls/false$8240$PT8AO)
                                (if g$ls/false$8240$PT8AO
                                  (apply
                                    (case-lambda
                                      ((g$p$8241$PT8AO g$q$8242$PT8AO)
                                       ((case-lambda
                                          ((g$t$8243$PT8AO)
                                           ((case-lambda
                                              ((g$ls/false$8244$PT8AO)
                                               (if g$ls/false$8244$PT8AO
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8245$PT8AO)
                                                      (if (= g$lev$8238$PT8AO
                                                             '0)
                                                        (g$quasicons*$8200$PT8AO
                                                          g$p$8245$PT8AO
                                                          (g$vquasi$8204$PT8AO
                                                            g$q$8242$PT8AO
                                                            g$lev$8238$PT8AO))
                                                        (g$quasicons$8201$PT8AO
                                                          (g$quasicons$8201$PT8AO
                                                            (g$datum$8184$PT8AO
                                                              'unquote)
                                                            (g$quasi$8205$PT8AO
                                                              g$p$8245$PT8AO
                                                              (- g$lev$8238$PT8AO
                                                                 '1)))
                                                          (g$vquasi$8204$PT8AO
                                                            g$q$8242$PT8AO
                                                            g$lev$8238$PT8AO)))))
                                                   g$ls/false$8244$PT8AO)
                                                 ((case-lambda
                                                    ((g$t$8246$PT8AO)
                                                     ((case-lambda
                                                        ((g$ls/false$8247$PT8AO)
                                                         (if g$ls/false$8247$PT8AO
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8248$PT8AO)
                                                                (if (= g$lev$8238$PT8AO
                                                                       '0)
                                                                  (g$quasiappend$8202$PT8AO
                                                                    g$p$8248$PT8AO
                                                                    (g$vquasi$8204$PT8AO
                                                                      g$q$8242$PT8AO
                                                                      g$lev$8238$PT8AO))
                                                                  (g$quasicons$8201$PT8AO
                                                                    (g$quasicons$8201$PT8AO
                                                                      (g$datum$8184$PT8AO
                                                                        'unquote-splicing)
                                                                      (g$quasi$8205$PT8AO
                                                                        g$p$8248$PT8AO
                                                                        (- g$lev$8238$PT8AO
                                                                           '1)))
                                                                    (g$vquasi$8204$PT8AO
                                                                      g$q$8242$PT8AO
                                                                      g$lev$8238$PT8AO)))))
                                                             g$ls/false$8247$PT8AO)
                                                           ((case-lambda
                                                              ((g$t$8249$PT8AO)
                                                               ((case-lambda
                                                                  ((g$ls/false$8250$PT8AO)
                                                                   (if g$ls/false$8250$PT8AO
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8251$PT8AO)
                                                                          (g$quasicons$8201$PT8AO
                                                                            (g$quasi$8205$PT8AO
                                                                              g$p$8251$PT8AO
                                                                              g$lev$8238$PT8AO)
                                                                            (g$vquasi$8204$PT8AO
                                                                              g$q$8242$PT8AO
                                                                              g$lev$8238$PT8AO))))
                                                                       g$ls/false$8250$PT8AO)
                                                                     (g$syntax-violation$7321$PT8AO
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8249$PT8AO))))
                                                                (g$syntax-dispatch$7215$PT8AO
                                                                  g$t$8249$PT8AO
                                                                  'any))))
                                                            g$t$8246$PT8AO))))
                                                      (g$syntax-dispatch$7215$PT8AO
                                                        g$t$8246$PT8AO
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8243$PT8AO))))
                                            (g$syntax-dispatch$7215$PT8AO
                                              g$t$8243$PT8AO
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8241$PT8AO)))
                                    g$ls/false$8240$PT8AO)
                                  ((case-lambda
                                     ((g$t$8252$PT8AO)
                                      ((case-lambda
                                         ((g$ls/false$8253$PT8AO)
                                          (if g$ls/false$8253$PT8AO
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7158$PT8AO
                                                     'quote)
                                                   '())))
                                              g$ls/false$8253$PT8AO)
                                            (g$syntax-violation$7321$PT8AO
                                              '#f
                                              '"invalid syntax"
                                              g$t$8252$PT8AO))))
                                       (g$syntax-dispatch$7215$PT8AO
                                         g$t$8252$PT8AO
                                         '()))))
                                   g$t$8239$PT8AO))))
                             (g$syntax-dispatch$7215$PT8AO
                               g$t$8239$PT8AO
                               '(any . any)))))
                         g$p$8237$PT8AO))))
                   (g$quasi$8205$PT8AO
                     (case-lambda
                       ((g$p$8210$PT8AO g$lev$8211$PT8AO)
                        ((case-lambda
                           ((g$t$8212$PT8AO)
                            ((case-lambda
                               ((g$ls/false$8213$PT8AO)
                                (if g$ls/false$8213$PT8AO
                                  (apply
                                    (case-lambda
                                      ((g$p$8214$PT8AO)
                                       (if (= g$lev$8211$PT8AO '0)
                                         g$p$8214$PT8AO
                                         (g$quasicons$8201$PT8AO
                                           (g$datum$8184$PT8AO 'unquote)
                                           (g$quasi$8205$PT8AO
                                             (list g$p$8214$PT8AO)
                                             (- g$lev$8211$PT8AO '1))))))
                                    g$ls/false$8213$PT8AO)
                                  ((case-lambda
                                     ((g$t$8215$PT8AO)
                                      ((case-lambda
                                         ((g$ls/false$8216$PT8AO)
                                          (if g$ls/false$8216$PT8AO
                                            (apply
                                              (case-lambda
                                                ((g$p$8217$PT8AO g$q$8218$PT8AO)
                                                 (if (= g$lev$8211$PT8AO '0)
                                                   (g$quasicons*$8200$PT8AO
                                                     g$p$8217$PT8AO
                                                     (g$quasi$8205$PT8AO
                                                       g$q$8218$PT8AO
                                                       g$lev$8211$PT8AO))
                                                   (g$quasicons$8201$PT8AO
                                                     (g$quasicons$8201$PT8AO
                                                       (g$datum$8184$PT8AO
                                                         'unquote)
                                                       (g$quasi$8205$PT8AO
                                                         g$p$8217$PT8AO
                                                         (- g$lev$8211$PT8AO
                                                            '1)))
                                                     (g$quasi$8205$PT8AO
                                                       g$q$8218$PT8AO
                                                       g$lev$8211$PT8AO)))))
                                              g$ls/false$8216$PT8AO)
                                            ((case-lambda
                                               ((g$t$8219$PT8AO)
                                                ((case-lambda
                                                   ((g$ls/false$8220$PT8AO)
                                                    (if g$ls/false$8220$PT8AO
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8221$PT8AO
                                                             g$q$8222$PT8AO)
                                                           (if (= g$lev$8211$PT8AO
                                                                  '0)
                                                             (g$quasiappend$8202$PT8AO
                                                               g$p$8221$PT8AO
                                                               (g$quasi$8205$PT8AO
                                                                 g$q$8222$PT8AO
                                                                 g$lev$8211$PT8AO))
                                                             (g$quasicons$8201$PT8AO
                                                               (g$quasicons$8201$PT8AO
                                                                 (g$datum$8184$PT8AO
                                                                   'unquote-splicing)
                                                                 (g$quasi$8205$PT8AO
                                                                   g$p$8221$PT8AO
                                                                   (- g$lev$8211$PT8AO
                                                                      '1)))
                                                               (g$quasi$8205$PT8AO
                                                                 g$q$8222$PT8AO
                                                                 g$lev$8211$PT8AO)))))
                                                        g$ls/false$8220$PT8AO)
                                                      ((case-lambda
                                                         ((g$t$8223$PT8AO)
                                                          ((case-lambda
                                                             ((g$ls/false$8224$PT8AO)
                                                              (if g$ls/false$8224$PT8AO
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8225$PT8AO)
                                                                     (g$quasicons$8201$PT8AO
                                                                       (g$datum$8184$PT8AO
                                                                         'quasiquote)
                                                                       (g$quasi$8205$PT8AO
                                                                         (list
                                                                           g$p$8225$PT8AO)
                                                                         (+ g$lev$8211$PT8AO
                                                                            '1)))))
                                                                  g$ls/false$8224$PT8AO)
                                                                ((case-lambda
                                                                   ((g$t$8226$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8227$PT8AO)
                                                                        (if g$ls/false$8227$PT8AO
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8228$PT8AO
                                                                                 g$q$8229$PT8AO)
                                                                               (g$quasicons$8201$PT8AO
                                                                                 (g$quasi$8205$PT8AO
                                                                                   g$p$8228$PT8AO
                                                                                   g$lev$8211$PT8AO)
                                                                                 (g$quasi$8205$PT8AO
                                                                                   g$q$8229$PT8AO
                                                                                   g$lev$8211$PT8AO))))
                                                                            g$ls/false$8227$PT8AO)
                                                                          ((case-lambda
                                                                             ((g$t$8230$PT8AO)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8231$PT8AO)
                                                                                  (if (if g$ls/false$8231$PT8AO
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8232$PT8AO)
                                                                                               (not (g$stx?$6909$PT8AO
                                                                                                      g$x$8232$PT8AO))))
                                                                                            g$ls/false$8231$PT8AO))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8233$PT8AO)
                                                                                         (g$quasivector$8203$PT8AO
                                                                                           (g$vquasi$8204$PT8AO
                                                                                             g$x$8233$PT8AO
                                                                                             g$lev$8211$PT8AO))))
                                                                                      g$ls/false$8231$PT8AO)
                                                                                    ((case-lambda
                                                                                       ((g$t$8234$PT8AO)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8235$PT8AO)
                                                                                            (if g$ls/false$8235$PT8AO
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8236$PT8AO)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7158$PT8AO
                                                                                                       'quote)
                                                                                                     g$p$8236$PT8AO)))
                                                                                                g$ls/false$8235$PT8AO)
                                                                                              (g$syntax-violation$7321$PT8AO
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8234$PT8AO))))
                                                                                         (g$syntax-dispatch$7215$PT8AO
                                                                                           g$t$8234$PT8AO
                                                                                           'any))))
                                                                                     g$t$8230$PT8AO))))
                                                                               (g$syntax-dispatch$7215$PT8AO
                                                                                 g$t$8230$PT8AO
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8226$PT8AO))))
                                                                     (g$syntax-dispatch$7215$PT8AO
                                                                       g$t$8226$PT8AO
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8223$PT8AO))))
                                                           (g$syntax-dispatch$7215$PT8AO
                                                             g$t$8223$PT8AO
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8219$PT8AO))))
                                                 (g$syntax-dispatch$7215$PT8AO
                                                   g$t$8219$PT8AO
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8215$PT8AO))))
                                       (g$syntax-dispatch$7215$PT8AO
                                         g$t$8215$PT8AO
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8212$PT8AO))))
                             (g$syntax-dispatch$7215$PT8AO
                               g$t$8212$PT8AO
                               '(#(scheme-id unquote) any)))))
                         g$p$8210$PT8AO)))))
           (case-lambda
             ((g$x$8206$PT8AO)
              ((case-lambda
                 ((g$t$8207$PT8AO)
                  ((case-lambda
                     ((g$ls/false$8208$PT8AO)
                      (if g$ls/false$8208$PT8AO
                        (apply
                          (case-lambda
                            ((g$e$8209$PT8AO)
                             (g$quasi$8205$PT8AO g$e$8209$PT8AO '0)))
                          g$ls/false$8208$PT8AO)
                        (g$syntax-violation$7321$PT8AO
                          '#f
                          '"invalid syntax"
                          g$t$8207$PT8AO))))
                   (g$syntax-dispatch$7215$PT8AO g$t$8207$PT8AO '(_ any)))))
               g$x$8206$PT8AO))))))))
   (g$quasisyntax-macro$7207$PT8AO
     g$quasisyntax-macro$10657$PT8AO
     ((case-lambda
        (()
         (letrec* ((g$quasi$8316$PT8AO
                     (case-lambda
                       ((g$p$8330$PT8AO g$lev$8331$PT8AO)
                        ((case-lambda
                           ((g$t$8332$PT8AO)
                            ((case-lambda
                               ((g$ls/false$8333$PT8AO)
                                (if g$ls/false$8333$PT8AO
                                  (apply
                                    (case-lambda
                                      ((g$p$8334$PT8AO)
                                       (if (= g$lev$8331$PT8AO '0)
                                         ((case-lambda
                                            ((g$g$8335$PT8AO)
                                             (values
                                               (list g$g$8335$PT8AO)
                                               (list g$p$8334$PT8AO)
                                               g$g$8335$PT8AO)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8316$PT8AO
                                                g$p$8334$PT8AO
                                                (- g$lev$8331$PT8AO '1))))
                                           (case-lambda
                                             ((g$lhs*$8339$PT8AO
                                                g$rhs*$8340$PT8AO
                                                g$p$8341$PT8AO)
                                              ((case-lambda
                                                 ((g$p$8342$PT8AO
                                                    g$rhs*$8343$PT8AO
                                                    g$lhs*$8344$PT8AO)
                                                  (values
                                                    g$lhs*$8344$PT8AO
                                                    g$rhs*$8343$PT8AO
                                                    (list
                                                      'unsyntax
                                                      g$p$8342$PT8AO))))
                                               g$p$8341$PT8AO
                                               g$rhs*$8340$PT8AO
                                               g$lhs*$8339$PT8AO)))))))
                                    g$ls/false$8333$PT8AO)
                                  ((case-lambda
                                     ((g$t$8345$PT8AO)
                                      ((case-lambda
                                         ((g$ls/false$8346$PT8AO)
                                          (if (if g$ls/false$8346$PT8AO
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8331$PT8AO '0)))
                                                    g$ls/false$8346$PT8AO))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7321$PT8AO
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8330$PT8AO)))
                                              g$ls/false$8346$PT8AO)
                                            ((case-lambda
                                               ((g$t$8347$PT8AO)
                                                ((case-lambda
                                                   ((g$ls/false$8348$PT8AO)
                                                    (if g$ls/false$8348$PT8AO
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8349$PT8AO
                                                             g$q$8350$PT8AO)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8316$PT8AO
                                                                  g$q$8350$PT8AO
                                                                  g$lev$8331$PT8AO)))
                                                             (case-lambda
                                                               ((g$lhs*$8354$PT8AO
                                                                  g$rhs*$8355$PT8AO
                                                                  g$q$8356$PT8AO)
                                                                ((case-lambda
                                                                   ((g$q$8357$PT8AO
                                                                      g$rhs*$8358$PT8AO
                                                                      g$lhs*$8359$PT8AO)
                                                                    (if (= g$lev$8331$PT8AO
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g$8360$PT8AO)
                                                                          (values
                                                                            (cons
                                                                              (cons
                                                                                g$g$8360$PT8AO
                                                                                '(...))
                                                                              g$lhs*$8359$PT8AO)
                                                                            (cons
                                                                              g$p$8349$PT8AO
                                                                              g$rhs*$8358$PT8AO)
                                                                            (cons
                                                                              g$g$8360$PT8AO
                                                                              (cons
                                                                                '...
                                                                                g$q$8357$PT8AO)))))
                                                                       (gensym))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8316$PT8AO
                                                                             g$p$8349$PT8AO
                                                                             (- g$lev$8331$PT8AO
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8364$PT8AO
                                                                             g$rhs2*$8365$PT8AO
                                                                             g$p$8366$PT8AO)
                                                                           ((case-lambda
                                                                              ((g$p$8367$PT8AO
                                                                                 g$rhs2*$8368$PT8AO
                                                                                 g$lhs2*$8369$PT8AO)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8369$PT8AO
                                                                                   g$lhs*$8359$PT8AO)
                                                                                 (append
                                                                                   g$rhs2*$8368$PT8AO
                                                                                   g$rhs*$8358$PT8AO)
                                                                                 (cons
                                                                                   (list
                                                                                     'unsyntax-splicing
                                                                                     g$p$8367$PT8AO)
                                                                                   g$q$8357$PT8AO))))
                                                                            g$p$8366$PT8AO
                                                                            g$rhs2*$8365$PT8AO
                                                                            g$lhs2*$8364$PT8AO)))))))
                                                                 g$q$8356$PT8AO
                                                                 g$rhs*$8355$PT8AO
                                                                 g$lhs*$8354$PT8AO))))))
                                                        g$ls/false$8348$PT8AO)
                                                      ((case-lambda
                                                         ((g$t$8370$PT8AO)
                                                          ((case-lambda
                                                             ((g$ls/false$8371$PT8AO)
                                                              (if (if g$ls/false$8371$PT8AO
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (= g$lev$8331$PT8AO
                                                                              '0)))
                                                                        g$ls/false$8371$PT8AO))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    (()
                                                                     (g$syntax-violation$7321$PT8AO
                                                                       '#f
                                                                       '"incorrect use of unsyntax-splicing"
                                                                       g$p$8330$PT8AO)))
                                                                  g$ls/false$8371$PT8AO)
                                                                ((case-lambda
                                                                   ((g$t$8372$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8373$PT8AO)
                                                                        (if g$ls/false$8373$PT8AO
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8374$PT8AO)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$quasi$8316$PT8AO
                                                                                      g$p$8374$PT8AO
                                                                                      (+ g$lev$8331$PT8AO
                                                                                         '1))))
                                                                                 (case-lambda
                                                                                   ((g$lhs*$8378$PT8AO
                                                                                      g$rhs*$8379$PT8AO
                                                                                      g$p$8380$PT8AO)
                                                                                    ((case-lambda
                                                                                       ((g$p$8381$PT8AO
                                                                                          g$rhs*$8382$PT8AO
                                                                                          g$lhs*$8383$PT8AO)
                                                                                        (values
                                                                                          g$lhs*$8383$PT8AO
                                                                                          g$rhs*$8382$PT8AO
                                                                                          (list
                                                                                            'quasisyntax
                                                                                            g$p$8381$PT8AO))))
                                                                                     g$p$8380$PT8AO
                                                                                     g$rhs*$8379$PT8AO
                                                                                     g$lhs*$8378$PT8AO))))))
                                                                            g$ls/false$8373$PT8AO)
                                                                          ((case-lambda
                                                                             ((g$t$8384$PT8AO)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8385$PT8AO)
                                                                                  (if g$ls/false$8385$PT8AO
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8386$PT8AO
                                                                                           g$q$8387$PT8AO)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8316$PT8AO
                                                                                                g$p$8386$PT8AO
                                                                                                g$lev$8331$PT8AO)))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8394$PT8AO
                                                                                                g$rhs*$8395$PT8AO
                                                                                                g$p$8396$PT8AO)
                                                                                              (call-with-values
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$quasi$8316$PT8AO
                                                                                                     g$q$8387$PT8AO
                                                                                                     g$lev$8331$PT8AO)))
                                                                                                (case-lambda
                                                                                                  ((g$lhs2*$8397$PT8AO
                                                                                                     g$rhs2*$8398$PT8AO
                                                                                                     g$q$8399$PT8AO)
                                                                                                   ((case-lambda
                                                                                                      ((g$q$8400$PT8AO
                                                                                                         g$rhs2*$8401$PT8AO
                                                                                                         g$lhs2*$8402$PT8AO
                                                                                                         g$p$8403$PT8AO
                                                                                                         g$rhs*$8404$PT8AO
                                                                                                         g$lhs*$8405$PT8AO)
                                                                                                       (values
                                                                                                         (append
                                                                                                           g$lhs2*$8402$PT8AO
                                                                                                           g$lhs*$8405$PT8AO)
                                                                                                         (append
                                                                                                           g$rhs2*$8401$PT8AO
                                                                                                           g$rhs*$8404$PT8AO)
                                                                                                         (cons
                                                                                                           g$p$8403$PT8AO
                                                                                                           g$q$8400$PT8AO))))
                                                                                                    g$q$8399$PT8AO
                                                                                                    g$rhs2*$8398$PT8AO
                                                                                                    g$lhs2*$8397$PT8AO
                                                                                                    g$p$8396$PT8AO
                                                                                                    g$rhs*$8395$PT8AO
                                                                                                    g$lhs*$8394$PT8AO)))))))))
                                                                                      g$ls/false$8385$PT8AO)
                                                                                    ((case-lambda
                                                                                       ((g$t$8406$PT8AO)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8407$PT8AO)
                                                                                            (if (if g$ls/false$8407$PT8AO
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$x$8408$PT8AO)
                                                                                                         (not (g$stx?$6909$PT8AO
                                                                                                                g$p$8330$PT8AO))))
                                                                                                      g$ls/false$8407$PT8AO))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$x$8409$PT8AO)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        ((letrec ((g$f$8413$PT8AO
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$8414$PT8AO)
                                                                                                                       (if (null?
                                                                                                                             g$x$8414$PT8AO)
                                                                                                                         (values
                                                                                                                           '()
                                                                                                                           '()
                                                                                                                           '())
                                                                                                                         (call-with-values
                                                                                                                           (case-lambda
                                                                                                                             (()
                                                                                                                              (g$quasi$8316$PT8AO
                                                                                                                                (car g$x$8414$PT8AO)
                                                                                                                                g$lev$8331$PT8AO)))
                                                                                                                           (case-lambda
                                                                                                                             ((g$lhs*$8418$PT8AO
                                                                                                                                g$rhs*$8419$PT8AO
                                                                                                                                g$a$8420$PT8AO)
                                                                                                                              ((case-lambda
                                                                                                                                 ((g$a$8421$PT8AO
                                                                                                                                    g$rhs*$8422$PT8AO
                                                                                                                                    g$lhs*$8423$PT8AO)
                                                                                                                                  (call-with-values
                                                                                                                                    (case-lambda
                                                                                                                                      (()
                                                                                                                                       (g$f$8413$PT8AO
                                                                                                                                         (cdr g$x$8414$PT8AO))))
                                                                                                                                    (case-lambda
                                                                                                                                      ((g$lhs2*$8427$PT8AO
                                                                                                                                         g$rhs2*$8428$PT8AO
                                                                                                                                         g$d$8429$PT8AO)
                                                                                                                                       ((case-lambda
                                                                                                                                          ((g$d$8430$PT8AO
                                                                                                                                             g$rhs2*$8431$PT8AO
                                                                                                                                             g$lhs2*$8432$PT8AO)
                                                                                                                                           (values
                                                                                                                                             (append
                                                                                                                                               g$lhs*$8423$PT8AO
                                                                                                                                               g$lhs2*$8432$PT8AO)
                                                                                                                                             (append
                                                                                                                                               g$rhs*$8422$PT8AO
                                                                                                                                               g$rhs2*$8431$PT8AO)
                                                                                                                                             (cons
                                                                                                                                               g$a$8421$PT8AO
                                                                                                                                               g$d$8430$PT8AO))))
                                                                                                                                        g$d$8429$PT8AO
                                                                                                                                        g$rhs2*$8428$PT8AO
                                                                                                                                        g$lhs2*$8427$PT8AO))))))
                                                                                                                               g$a$8420$PT8AO
                                                                                                                               g$rhs*$8419$PT8AO
                                                                                                                               g$lhs*$8418$PT8AO)))))))))
                                                                                                           g$f$8413$PT8AO)
                                                                                                         g$x$8409$PT8AO)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8433$PT8AO
                                                                                                          g$rhs*$8434$PT8AO
                                                                                                          g$x*$8435$PT8AO)
                                                                                                        ((case-lambda
                                                                                                           ((g$x*$8436$PT8AO
                                                                                                              g$rhs*$8437$PT8AO
                                                                                                              g$lhs*$8438$PT8AO)
                                                                                                            (values
                                                                                                              g$lhs*$8438$PT8AO
                                                                                                              g$rhs*$8437$PT8AO
                                                                                                              (list->vector
                                                                                                                g$x*$8436$PT8AO))))
                                                                                                         g$x*$8435$PT8AO
                                                                                                         g$rhs*$8434$PT8AO
                                                                                                         g$lhs*$8433$PT8AO))))))
                                                                                                g$ls/false$8407$PT8AO)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8439$PT8AO)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8440$PT8AO)
                                                                                                      (if g$ls/false$8440$PT8AO
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (values
                                                                                                               '()
                                                                                                               '()
                                                                                                               g$p$8330$PT8AO)))
                                                                                                          g$ls/false$8440$PT8AO)
                                                                                                        (g$syntax-violation$7321$PT8AO
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$8439$PT8AO))))
                                                                                                   (g$syntax-dispatch$7215$PT8AO
                                                                                                     g$t$8439$PT8AO
                                                                                                     '_))))
                                                                                               g$t$8406$PT8AO))))
                                                                                         (g$syntax-dispatch$7215$PT8AO
                                                                                           g$t$8406$PT8AO
                                                                                           '#(vector
                                                                                              each-any)))))
                                                                                     g$t$8384$PT8AO))))
                                                                               (g$syntax-dispatch$7215$PT8AO
                                                                                 g$t$8384$PT8AO
                                                                                 '(any .
                                                                                       any)))))
                                                                           g$t$8372$PT8AO))))
                                                                     (g$syntax-dispatch$7215$PT8AO
                                                                       g$t$8372$PT8AO
                                                                       '(#(scheme-id
                                                                           quasisyntax)
                                                                         any)))))
                                                                 g$t$8370$PT8AO))))
                                                           (g$syntax-dispatch$7215$PT8AO
                                                             g$t$8370$PT8AO
                                                             '#(scheme-id
                                                                unsyntax-splicing)))))
                                                       g$t$8347$PT8AO))))
                                                 (g$syntax-dispatch$7215$PT8AO
                                                   g$t$8347$PT8AO
                                                   '((#(scheme-id
                                                        unsyntax-splicing)
                                                      any)
                                                     .
                                                     any)))))
                                             g$t$8345$PT8AO))))
                                       (g$syntax-dispatch$7215$PT8AO
                                         g$t$8345$PT8AO
                                         '#(scheme-id unsyntax)))))
                                   g$t$8332$PT8AO))))
                             (g$syntax-dispatch$7215$PT8AO
                               g$t$8332$PT8AO
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8330$PT8AO)))))
           (case-lambda
             ((g$x$8317$PT8AO)
              ((case-lambda
                 ((g$t$8318$PT8AO)
                  ((case-lambda
                     ((g$ls/false$8319$PT8AO)
                      (if g$ls/false$8319$PT8AO
                        (apply
                          (case-lambda
                            ((g$e$8320$PT8AO)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8316$PT8AO g$e$8320$PT8AO '0)))
                               (case-lambda
                                 ((g$lhs*$8324$PT8AO
                                    g$rhs*$8325$PT8AO
                                    g$v$8326$PT8AO)
                                  ((case-lambda
                                     ((g$v$8327$PT8AO
                                        g$rhs*$8328$PT8AO
                                        g$lhs*$8329$PT8AO)
                                      (g$bless$7178$PT8AO
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8328$PT8AO)
                                          '()
                                          (list
                                            g$lhs*$8329$PT8AO
                                            (list 'syntax g$v$8327$PT8AO))))))
                                   g$v$8326$PT8AO
                                   g$rhs*$8325$PT8AO
                                   g$lhs*$8324$PT8AO))))))
                          g$ls/false$8319$PT8AO)
                        (g$syntax-violation$7321$PT8AO
                          '#f
                          '"invalid syntax"
                          g$t$8318$PT8AO))))
                   (g$syntax-dispatch$7215$PT8AO g$t$8318$PT8AO '(_ any)))))
               g$x$8317$PT8AO))))))))
   (g$define-struct-macro$7208$PT8AO
     g$define-struct-macro$10658$PT8AO
     (case-lambda
       ((g$stx$8441$PT8AO)
        (g$syntax-violation$7321$PT8AO
          '#f
          '"define-struct not supported"
          g$stx$8441$PT8AO))))
   (g$define-record-type-macro$7209$PT8AO
     g$define-record-type-macro$10659$PT8AO
     (case-lambda
       ((g$x$8442$PT8AO)
        (letrec* ((g$id$8443$PT8AO
                    (case-lambda
                      ((g$ctxt$8695$PT8AO . g$str*$8696$PT8AO)
                       (g$datum->syntax$7323$PT8AO
                         g$ctxt$8695$PT8AO
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$8697$PT8AO)
                                     (if (symbol? g$x$8697$PT8AO)
                                       (symbol->string g$x$8697$PT8AO)
                                       (if (string? g$x$8697$PT8AO)
                                         g$x$8697$PT8AO
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$8696$PT8AO)))))))
                  (g$get-record-name$8444$PT8AO
                    (case-lambda
                      ((g$spec$8686$PT8AO)
                       ((case-lambda
                          ((g$t$8687$PT8AO)
                           ((case-lambda
                              ((g$ls/false$8688$PT8AO)
                               (if g$ls/false$8688$PT8AO
                                 (apply
                                   (case-lambda
                                     ((g$foo$8689$PT8AO
                                        g$make-foo$8690$PT8AO
                                        g$foo?$8691$PT8AO)
                                      g$foo$8689$PT8AO))
                                   g$ls/false$8688$PT8AO)
                                 ((case-lambda
                                    ((g$t$8692$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$8693$PT8AO)
                                         (if g$ls/false$8693$PT8AO
                                           (apply
                                             (case-lambda
                                               ((g$foo$8694$PT8AO)
                                                g$foo$8694$PT8AO))
                                             g$ls/false$8693$PT8AO)
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"invalid syntax"
                                             g$t$8692$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$8692$PT8AO
                                        'any))))
                                  g$t$8687$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO
                              g$t$8687$PT8AO
                              '(any any any)))))
                        g$spec$8686$PT8AO))))
                  (g$get-record-constructor-name$8445$PT8AO
                    (case-lambda
                      ((g$spec$8676$PT8AO)
                       ((case-lambda
                          ((g$t$8677$PT8AO)
                           ((case-lambda
                              ((g$ls/false$8678$PT8AO)
                               (if g$ls/false$8678$PT8AO
                                 (apply
                                   (case-lambda
                                     ((g$foo$8679$PT8AO
                                        g$make-foo$8680$PT8AO
                                        g$foo?$8681$PT8AO)
                                      g$make-foo$8680$PT8AO))
                                   g$ls/false$8678$PT8AO)
                                 ((case-lambda
                                    ((g$t$8682$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$8683$PT8AO)
                                         (if (if g$ls/false$8683$PT8AO
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8684$PT8AO)
                                                      (g$id?$6937$PT8AO
                                                        g$foo$8684$PT8AO)))
                                                   g$ls/false$8683$PT8AO))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8685$PT8AO)
                                                (g$id$8443$PT8AO
                                                  g$foo$8685$PT8AO
                                                  '"make-"
                                                  (g$stx->datum$6948$PT8AO
                                                    g$foo$8685$PT8AO))))
                                             g$ls/false$8683$PT8AO)
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"invalid syntax"
                                             g$t$8682$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$8682$PT8AO
                                        'any))))
                                  g$t$8677$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO
                              g$t$8677$PT8AO
                              '(any any any)))))
                        g$spec$8676$PT8AO))))
                  (g$get-record-predicate-name$8446$PT8AO
                    (case-lambda
                      ((g$spec$8666$PT8AO)
                       ((case-lambda
                          ((g$t$8667$PT8AO)
                           ((case-lambda
                              ((g$ls/false$8668$PT8AO)
                               (if g$ls/false$8668$PT8AO
                                 (apply
                                   (case-lambda
                                     ((g$foo$8669$PT8AO
                                        g$make-foo$8670$PT8AO
                                        g$foo?$8671$PT8AO)
                                      g$foo?$8671$PT8AO))
                                   g$ls/false$8668$PT8AO)
                                 ((case-lambda
                                    ((g$t$8672$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$8673$PT8AO)
                                         (if (if g$ls/false$8673$PT8AO
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8674$PT8AO)
                                                      (g$id?$6937$PT8AO
                                                        g$foo$8674$PT8AO)))
                                                   g$ls/false$8673$PT8AO))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8675$PT8AO)
                                                (g$id$8443$PT8AO
                                                  g$foo$8675$PT8AO
                                                  (g$stx->datum$6948$PT8AO
                                                    g$foo$8675$PT8AO)
                                                  '"?")))
                                             g$ls/false$8673$PT8AO)
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"invalid syntax"
                                             g$t$8672$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$8672$PT8AO
                                        'any))))
                                  g$t$8667$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO
                              g$t$8667$PT8AO
                              '(any any any)))))
                        g$spec$8666$PT8AO))))
                  (g$get-clause$8447$PT8AO
                    (case-lambda
                      ((g$id$8657$PT8AO g$ls$8658$PT8AO)
                       ((case-lambda
                          ((g$t$8659$PT8AO)
                           ((case-lambda
                              ((g$ls/false$8660$PT8AO)
                               (if g$ls/false$8660$PT8AO
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$8660$PT8AO)
                                 ((case-lambda
                                    ((g$t$8661$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$8662$PT8AO)
                                         (if g$ls/false$8662$PT8AO
                                           (apply
                                             (case-lambda
                                               ((g$x$8663$PT8AO
                                                  g$rest$8664$PT8AO
                                                  g$ls$8665$PT8AO)
                                                (if (g$free-id=?$6941$PT8AO
                                                      (g$bless$7178$PT8AO
                                                        g$id$8657$PT8AO)
                                                      g$x$8663$PT8AO)
                                                  (cons
                                                    g$x$8663$PT8AO
                                                    g$rest$8664$PT8AO)
                                                  (g$get-clause$8447$PT8AO
                                                    g$id$8657$PT8AO
                                                    g$ls$8665$PT8AO))))
                                             g$ls/false$8662$PT8AO)
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"invalid syntax"
                                             g$t$8661$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$8661$PT8AO
                                        '((any . any) . any)))))
                                  g$t$8659$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO g$t$8659$PT8AO '()))))
                        g$ls$8658$PT8AO))))
                  (g$foo-rtd-code$8448$PT8AO
                    (case-lambda
                      ((g$name$8616$PT8AO
                         g$clause*$8617$PT8AO
                         g$parent-rtd-code$8618$PT8AO)
                       (letrec* ((g$convert-field-spec*$8619$PT8AO
                                   (case-lambda
                                     ((g$ls$8644$PT8AO)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$8645$PT8AO)
                                                ((case-lambda
                                                   ((g$t$8646$PT8AO)
                                                    ((case-lambda
                                                       ((g$ls/false$8647$PT8AO)
                                                        (if g$ls/false$8647$PT8AO
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$8648$PT8AO
                                                                 g$rest$8649$PT8AO)
                                                               (list
                                                                 'mutable
                                                                 g$name$8648$PT8AO)))
                                                            g$ls/false$8647$PT8AO)
                                                          ((case-lambda
                                                             ((g$t$8650$PT8AO)
                                                              ((case-lambda
                                                                 ((g$ls/false$8651$PT8AO)
                                                                  (if g$ls/false$8651$PT8AO
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$8652$PT8AO
                                                                           g$rest$8653$PT8AO)
                                                                         (list
                                                                           'immutable
                                                                           g$name$8652$PT8AO)))
                                                                      g$ls/false$8651$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$t$8654$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8655$PT8AO)
                                                                            (if g$ls/false$8655$PT8AO
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$8656$PT8AO)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$8656$PT8AO)))
                                                                                g$ls/false$8655$PT8AO)
                                                                              (g$syntax-violation$7321$PT8AO
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8654$PT8AO))))
                                                                         (g$syntax-dispatch$7215$PT8AO
                                                                           g$t$8654$PT8AO
                                                                           'any))))
                                                                     g$t$8650$PT8AO))))
                                                               (g$syntax-dispatch$7215$PT8AO
                                                                 g$t$8650$PT8AO
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$8646$PT8AO))))
                                                     (g$syntax-dispatch$7215$PT8AO
                                                       g$t$8646$PT8AO
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$8645$PT8AO)))
                                             g$ls$8644$PT8AO))))))
                         ((case-lambda
                            ((g$uid-code$8620$PT8AO
                               g$sealed?$8621$PT8AO
                               g$opaque?$8622$PT8AO
                               g$fields$8623$PT8AO)
                             (g$bless$7178$PT8AO
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$8616$PT8AO)
                                 g$parent-rtd-code$8618$PT8AO
                                 g$uid-code$8620$PT8AO
                                 g$sealed?$8621$PT8AO
                                 g$opaque?$8622$PT8AO
                                 g$fields$8623$PT8AO))))
                          ((case-lambda
                             ((g$t$8624$PT8AO)
                              ((case-lambda
                                 ((g$ls/false$8625$PT8AO)
                                  (if g$ls/false$8625$PT8AO
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$8625$PT8AO)
                                    ((case-lambda
                                       ((g$t$8626$PT8AO)
                                        ((case-lambda
                                           ((g$ls/false$8627$PT8AO)
                                            (if g$ls/false$8627$PT8AO
                                              (apply
                                                (case-lambda
                                                  ((g$uid$8628$PT8AO)
                                                   (list
                                                     'quote
                                                     g$uid$8628$PT8AO)))
                                                g$ls/false$8627$PT8AO)
                                              ((case-lambda
                                                 ((g$t$8629$PT8AO)
                                                  ((case-lambda
                                                     ((g$ls/false$8630$PT8AO)
                                                      (if g$ls/false$8630$PT8AO
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$8630$PT8AO)
                                                        (g$syntax-violation$7321$PT8AO
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$8629$PT8AO))))
                                                   (g$syntax-dispatch$7215$PT8AO
                                                     g$t$8629$PT8AO
                                                     '_))))
                                               g$t$8626$PT8AO))))
                                         (g$syntax-dispatch$7215$PT8AO
                                           g$t$8626$PT8AO
                                           '(_ any)))))
                                     g$t$8624$PT8AO))))
                               (g$syntax-dispatch$7215$PT8AO
                                 g$t$8624$PT8AO
                                 '(_)))))
                           (g$get-clause$8447$PT8AO
                             'nongenerative
                             g$clause*$8617$PT8AO))
                          ((case-lambda
                             ((g$t$8631$PT8AO)
                              ((case-lambda
                                 ((g$ls/false$8632$PT8AO)
                                  (if g$ls/false$8632$PT8AO
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8632$PT8AO)
                                    ((case-lambda
                                       ((g$t$8633$PT8AO)
                                        ((case-lambda
                                           ((g$ls/false$8634$PT8AO)
                                            (if g$ls/false$8634$PT8AO
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8634$PT8AO)
                                              (g$syntax-violation$7321$PT8AO
                                                '#f
                                                '"invalid syntax"
                                                g$t$8633$PT8AO))))
                                         (g$syntax-dispatch$7215$PT8AO
                                           g$t$8633$PT8AO
                                           '_))))
                                     g$t$8631$PT8AO))))
                               (g$syntax-dispatch$7215$PT8AO
                                 g$t$8631$PT8AO
                                 '(_ #(atom #t))))))
                           (g$get-clause$8447$PT8AO
                             'sealed
                             g$clause*$8617$PT8AO))
                          ((case-lambda
                             ((g$t$8635$PT8AO)
                              ((case-lambda
                                 ((g$ls/false$8636$PT8AO)
                                  (if g$ls/false$8636$PT8AO
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8636$PT8AO)
                                    ((case-lambda
                                       ((g$t$8637$PT8AO)
                                        ((case-lambda
                                           ((g$ls/false$8638$PT8AO)
                                            (if g$ls/false$8638$PT8AO
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8638$PT8AO)
                                              (g$syntax-violation$7321$PT8AO
                                                '#f
                                                '"invalid syntax"
                                                g$t$8637$PT8AO))))
                                         (g$syntax-dispatch$7215$PT8AO
                                           g$t$8637$PT8AO
                                           '_))))
                                     g$t$8635$PT8AO))))
                               (g$syntax-dispatch$7215$PT8AO
                                 g$t$8635$PT8AO
                                 '(_ #(atom #t))))))
                           (g$get-clause$8447$PT8AO
                             'opaque
                             g$clause*$8617$PT8AO))
                          ((case-lambda
                             ((g$t$8639$PT8AO)
                              ((case-lambda
                                 ((g$ls/false$8640$PT8AO)
                                  (if g$ls/false$8640$PT8AO
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$8641$PT8AO)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$8619$PT8AO
                                             g$field-spec*$8641$PT8AO))))
                                      g$ls/false$8640$PT8AO)
                                    ((case-lambda
                                       ((g$t$8642$PT8AO)
                                        ((case-lambda
                                           ((g$ls/false$8643$PT8AO)
                                            (if g$ls/false$8643$PT8AO
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$8643$PT8AO)
                                              (g$syntax-violation$7321$PT8AO
                                                '#f
                                                '"invalid syntax"
                                                g$t$8642$PT8AO))))
                                         (g$syntax-dispatch$7215$PT8AO
                                           g$t$8642$PT8AO
                                           '_))))
                                     g$t$8639$PT8AO))))
                               (g$syntax-dispatch$7215$PT8AO
                                 g$t$8639$PT8AO
                                 '(_ . each-any)))))
                           (g$get-clause$8447$PT8AO
                             'fields
                             g$clause*$8617$PT8AO)))))))
                  (g$parent-rtd-code$8449$PT8AO
                    (case-lambda
                      ((g$clause*$8604$PT8AO)
                       ((case-lambda
                          ((g$t$8605$PT8AO)
                           ((case-lambda
                              ((g$ls/false$8606$PT8AO)
                               (if g$ls/false$8606$PT8AO
                                 (apply
                                   (case-lambda
                                     ((g$name$8607$PT8AO)
                                      (list
                                        'record-type-descriptor
                                        g$name$8607$PT8AO)))
                                   g$ls/false$8606$PT8AO)
                                 ((case-lambda
                                    ((g$t$8608$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$8609$PT8AO)
                                         (if g$ls/false$8609$PT8AO
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8610$PT8AO)
                                                    ((case-lambda
                                                       ((g$ls/false$8611$PT8AO)
                                                        (if g$ls/false$8611$PT8AO
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8612$PT8AO
                                                                 g$rcd$8613$PT8AO)
                                                               g$rtd$8612$PT8AO))
                                                            g$ls/false$8611$PT8AO)
                                                          ((case-lambda
                                                             ((g$t$8614$PT8AO)
                                                              ((case-lambda
                                                                 ((g$ls/false$8615$PT8AO)
                                                                  (if g$ls/false$8615$PT8AO
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8615$PT8AO)
                                                                    (g$syntax-violation$7321$PT8AO
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8614$PT8AO))))
                                                               (g$syntax-dispatch$7215$PT8AO
                                                                 g$t$8614$PT8AO
                                                                 '#(atom #f)))))
                                                           g$t$8610$PT8AO))))
                                                     (g$syntax-dispatch$7215$PT8AO
                                                       g$t$8610$PT8AO
                                                       '(_ any any)))))
                                                 (g$get-clause$8447$PT8AO
                                                   'parent-rtd
                                                   g$clause*$8604$PT8AO))))
                                             g$ls/false$8609$PT8AO)
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"invalid syntax"
                                             g$t$8608$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$8608$PT8AO
                                        '#(atom #f)))))
                                  g$t$8605$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO
                              g$t$8605$PT8AO
                              '(_ any)))))
                        (g$get-clause$8447$PT8AO
                          'parent
                          g$clause*$8604$PT8AO)))))
                  (g$parent-rcd-code$8450$PT8AO
                    (case-lambda
                      ((g$clause*$8592$PT8AO)
                       ((case-lambda
                          ((g$t$8593$PT8AO)
                           ((case-lambda
                              ((g$ls/false$8594$PT8AO)
                               (if g$ls/false$8594$PT8AO
                                 (apply
                                   (case-lambda
                                     ((g$name$8595$PT8AO)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$8595$PT8AO)))
                                   g$ls/false$8594$PT8AO)
                                 ((case-lambda
                                    ((g$t$8596$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$8597$PT8AO)
                                         (if g$ls/false$8597$PT8AO
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8598$PT8AO)
                                                    ((case-lambda
                                                       ((g$ls/false$8599$PT8AO)
                                                        (if g$ls/false$8599$PT8AO
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8600$PT8AO
                                                                 g$rcd$8601$PT8AO)
                                                               g$rcd$8601$PT8AO))
                                                            g$ls/false$8599$PT8AO)
                                                          ((case-lambda
                                                             ((g$t$8602$PT8AO)
                                                              ((case-lambda
                                                                 ((g$ls/false$8603$PT8AO)
                                                                  (if g$ls/false$8603$PT8AO
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8603$PT8AO)
                                                                    (g$syntax-violation$7321$PT8AO
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8602$PT8AO))))
                                                               (g$syntax-dispatch$7215$PT8AO
                                                                 g$t$8602$PT8AO
                                                                 '#(atom #f)))))
                                                           g$t$8598$PT8AO))))
                                                     (g$syntax-dispatch$7215$PT8AO
                                                       g$t$8598$PT8AO
                                                       '(_ any any)))))
                                                 (g$get-clause$8447$PT8AO
                                                   'parent-rtd
                                                   g$clause*$8592$PT8AO))))
                                             g$ls/false$8597$PT8AO)
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"invalid syntax"
                                             g$t$8596$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$8596$PT8AO
                                        '#(atom #f)))))
                                  g$t$8593$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO
                              g$t$8593$PT8AO
                              '(_ any)))))
                        (g$get-clause$8447$PT8AO
                          'parent
                          g$clause*$8592$PT8AO)))))
                  (g$foo-rcd-code$8451$PT8AO
                    (case-lambda
                      ((g$clause*$8588$PT8AO
                         g$foo-rtd$8589$PT8AO
                         g$protocol$8590$PT8AO
                         g$parent-rcd-code$8591$PT8AO)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$8589$PT8AO
                         g$parent-rcd-code$8591$PT8AO
                         g$protocol$8590$PT8AO))))
                  (g$get-protocol-code$8452$PT8AO
                    (case-lambda
                      ((g$clause*$8582$PT8AO)
                       ((case-lambda
                          ((g$t$8583$PT8AO)
                           ((case-lambda
                              ((g$ls/false$8584$PT8AO)
                               (if g$ls/false$8584$PT8AO
                                 (apply
                                   (case-lambda
                                     ((g$expr$8585$PT8AO) g$expr$8585$PT8AO))
                                   g$ls/false$8584$PT8AO)
                                 ((case-lambda
                                    ((g$t$8586$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$8587$PT8AO)
                                         (if g$ls/false$8587$PT8AO
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$8587$PT8AO)
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"invalid syntax"
                                             g$t$8586$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$8586$PT8AO
                                        '_))))
                                  g$t$8583$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO
                              g$t$8583$PT8AO
                              '(_ any)))))
                        (g$get-clause$8447$PT8AO
                          'protocol
                          g$clause*$8582$PT8AO)))))
                  (g$get-fields$8453$PT8AO
                    (case-lambda
                      ((g$clause*$8573$PT8AO)
                       ((case-lambda
                          ((g$t$8574$PT8AO)
                           ((case-lambda
                              ((g$ls/false$8575$PT8AO)
                               (if g$ls/false$8575$PT8AO
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8575$PT8AO)
                                 ((case-lambda
                                    ((g$t$8576$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$8577$PT8AO)
                                         (if g$ls/false$8577$PT8AO
                                           (apply
                                             (case-lambda
                                               ((g$f*$8578$PT8AO)
                                                g$f*$8578$PT8AO))
                                             g$ls/false$8577$PT8AO)
                                           ((case-lambda
                                              ((g$t$8579$PT8AO)
                                               ((case-lambda
                                                  ((g$ls/false$8580$PT8AO)
                                                   (if g$ls/false$8580$PT8AO
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8581$PT8AO)
                                                          (g$get-fields$8453$PT8AO
                                                            g$rest$8581$PT8AO)))
                                                       g$ls/false$8580$PT8AO)
                                                     (g$syntax-violation$7321$PT8AO
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8579$PT8AO))))
                                                (g$syntax-dispatch$7215$PT8AO
                                                  g$t$8579$PT8AO
                                                  '(_ . any)))))
                                            g$t$8576$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$8576$PT8AO
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8574$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO g$t$8574$PT8AO '()))))
                        g$clause*$8573$PT8AO))))
                  (g$get-mutator-indices$8454$PT8AO
                    (case-lambda
                      ((g$fields$8561$PT8AO)
                       ((letrec ((g$f$8562$PT8AO
                                   (case-lambda
                                     ((g$fields$8563$PT8AO g$i$8564$PT8AO)
                                      ((case-lambda
                                         ((g$t$8565$PT8AO)
                                          ((case-lambda
                                             ((g$ls/false$8566$PT8AO)
                                              (if g$ls/false$8566$PT8AO
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8566$PT8AO)
                                                ((case-lambda
                                                   ((g$t$8567$PT8AO)
                                                    ((case-lambda
                                                       ((g$ls/false$8568$PT8AO)
                                                        (if g$ls/false$8568$PT8AO
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8569$PT8AO)
                                                               (cons
                                                                 g$i$8564$PT8AO
                                                                 (g$f$8562$PT8AO
                                                                   g$rest$8569$PT8AO
                                                                   (+ g$i$8564$PT8AO
                                                                      '1)))))
                                                            g$ls/false$8568$PT8AO)
                                                          ((case-lambda
                                                             ((g$t$8570$PT8AO)
                                                              ((case-lambda
                                                                 ((g$ls/false$8571$PT8AO)
                                                                  (if g$ls/false$8571$PT8AO
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8572$PT8AO)
                                                                         (g$f$8562$PT8AO
                                                                           g$rest$8572$PT8AO
                                                                           (+ g$i$8564$PT8AO
                                                                              '1))))
                                                                      g$ls/false$8571$PT8AO)
                                                                    (g$syntax-violation$7321$PT8AO
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8570$PT8AO))))
                                                               (g$syntax-dispatch$7215$PT8AO
                                                                 g$t$8570$PT8AO
                                                                 '(_ . any)))))
                                                           g$t$8567$PT8AO))))
                                                     (g$syntax-dispatch$7215$PT8AO
                                                       g$t$8567$PT8AO
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8565$PT8AO))))
                                           (g$syntax-dispatch$7215$PT8AO
                                             g$t$8565$PT8AO
                                             '()))))
                                       g$fields$8563$PT8AO)))))
                          g$f$8562$PT8AO)
                        g$fields$8561$PT8AO
                        '0))))
                  (g$get-mutators$8455$PT8AO
                    (case-lambda
                      ((g$foo$8540$PT8AO g$fields$8541$PT8AO)
                       (letrec* ((g$gen-name$8542$PT8AO
                                   (case-lambda
                                     ((g$x$8560$PT8AO)
                                      (g$datum->syntax$7323$PT8AO
                                        g$foo$8540$PT8AO
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7324$PT8AO
                                                g$foo$8540$PT8AO))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7324$PT8AO
                                                g$x$8560$PT8AO))
                                            '"-set!")))))))
                         ((letrec ((g$f$8543$PT8AO
                                     (case-lambda
                                       ((g$fields$8544$PT8AO)
                                        ((case-lambda
                                           ((g$t$8545$PT8AO)
                                            ((case-lambda
                                               ((g$ls/false$8546$PT8AO)
                                                (if g$ls/false$8546$PT8AO
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8546$PT8AO)
                                                  ((case-lambda
                                                     ((g$t$8547$PT8AO)
                                                      ((case-lambda
                                                         ((g$ls/false$8548$PT8AO)
                                                          (if g$ls/false$8548$PT8AO
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8549$PT8AO
                                                                   g$accessor$8550$PT8AO
                                                                   g$mutator$8551$PT8AO
                                                                   g$rest$8552$PT8AO)
                                                                 (cons
                                                                   g$mutator$8551$PT8AO
                                                                   (g$f$8543$PT8AO
                                                                     g$rest$8552$PT8AO))))
                                                              g$ls/false$8548$PT8AO)
                                                            ((case-lambda
                                                               ((g$t$8553$PT8AO)
                                                                ((case-lambda
                                                                   ((g$ls/false$8554$PT8AO)
                                                                    (if g$ls/false$8554$PT8AO
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8555$PT8AO
                                                                             g$rest$8556$PT8AO)
                                                                           (cons
                                                                             (g$gen-name$8542$PT8AO
                                                                               g$name$8555$PT8AO)
                                                                             (g$f$8543$PT8AO
                                                                               g$rest$8556$PT8AO))))
                                                                        g$ls/false$8554$PT8AO)
                                                                      ((case-lambda
                                                                         ((g$t$8557$PT8AO)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8558$PT8AO)
                                                                              (if g$ls/false$8558$PT8AO
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8559$PT8AO)
                                                                                     (g$f$8543$PT8AO
                                                                                       g$rest$8559$PT8AO)))
                                                                                  g$ls/false$8558$PT8AO)
                                                                                (g$syntax-violation$7321$PT8AO
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8557$PT8AO))))
                                                                           (g$syntax-dispatch$7215$PT8AO
                                                                             g$t$8557$PT8AO
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8553$PT8AO))))
                                                                 (g$syntax-dispatch$7215$PT8AO
                                                                   g$t$8553$PT8AO
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8547$PT8AO))))
                                                       (g$syntax-dispatch$7215$PT8AO
                                                         g$t$8547$PT8AO
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8545$PT8AO))))
                                             (g$syntax-dispatch$7215$PT8AO
                                               g$t$8545$PT8AO
                                               '()))))
                                         g$fields$8544$PT8AO)))))
                            g$f$8543$PT8AO)
                          g$fields$8541$PT8AO)))))
                  (g$get-accessors$8456$PT8AO
                    (case-lambda
                      ((g$foo$8506$PT8AO g$fields$8507$PT8AO)
                       (letrec* ((g$gen-name$8508$PT8AO
                                   (case-lambda
                                     ((g$x$8539$PT8AO)
                                      (g$datum->syntax$7323$PT8AO
                                        g$foo$8506$PT8AO
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7324$PT8AO
                                                g$foo$8506$PT8AO))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7324$PT8AO
                                                g$x$8539$PT8AO)))))))))
                         (map (case-lambda
                                ((g$field$8509$PT8AO)
                                 ((case-lambda
                                    ((g$t$8510$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$8511$PT8AO)
                                         (if (if g$ls/false$8511$PT8AO
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8512$PT8AO
                                                        g$accessor$8513$PT8AO
                                                        g$mutator$8514$PT8AO)
                                                      (g$id?$6937$PT8AO
                                                        g$accessor$8513$PT8AO)))
                                                   g$ls/false$8511$PT8AO))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8515$PT8AO
                                                  g$accessor$8516$PT8AO
                                                  g$mutator$8517$PT8AO)
                                                g$accessor$8516$PT8AO))
                                             g$ls/false$8511$PT8AO)
                                           ((case-lambda
                                              ((g$t$8518$PT8AO)
                                               ((case-lambda
                                                  ((g$ls/false$8519$PT8AO)
                                                   (if (if g$ls/false$8519$PT8AO
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8520$PT8AO
                                                                  g$accessor$8521$PT8AO)
                                                                (g$id?$6937$PT8AO
                                                                  g$accessor$8521$PT8AO)))
                                                             g$ls/false$8519$PT8AO))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8522$PT8AO
                                                            g$accessor$8523$PT8AO)
                                                          g$accessor$8523$PT8AO))
                                                       g$ls/false$8519$PT8AO)
                                                     ((case-lambda
                                                        ((g$t$8524$PT8AO)
                                                         ((case-lambda
                                                            ((g$ls/false$8525$PT8AO)
                                                             (if (if g$ls/false$8525$PT8AO
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8526$PT8AO)
                                                                          (g$id?$6937$PT8AO
                                                                            g$name$8526$PT8AO)))
                                                                       g$ls/false$8525$PT8AO))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8527$PT8AO)
                                                                    (g$gen-name$8508$PT8AO
                                                                      g$name$8527$PT8AO)))
                                                                 g$ls/false$8525$PT8AO)
                                                               ((case-lambda
                                                                  ((g$t$8528$PT8AO)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8529$PT8AO)
                                                                       (if (if g$ls/false$8529$PT8AO
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8530$PT8AO)
                                                                                    (g$id?$6937$PT8AO
                                                                                      g$name$8530$PT8AO)))
                                                                                 g$ls/false$8529$PT8AO))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8531$PT8AO)
                                                                              (g$gen-name$8508$PT8AO
                                                                                g$name$8531$PT8AO)))
                                                                           g$ls/false$8529$PT8AO)
                                                                         ((case-lambda
                                                                            ((g$t$8532$PT8AO)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8533$PT8AO)
                                                                                 (if (if g$ls/false$8533$PT8AO
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8534$PT8AO)
                                                                                              (g$id?$6937$PT8AO
                                                                                                g$name$8534$PT8AO)))
                                                                                           g$ls/false$8533$PT8AO))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8535$PT8AO)
                                                                                        (g$gen-name$8508$PT8AO
                                                                                          g$name$8535$PT8AO)))
                                                                                     g$ls/false$8533$PT8AO)
                                                                                   ((case-lambda
                                                                                      ((g$t$8536$PT8AO)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8537$PT8AO)
                                                                                           (if g$ls/false$8537$PT8AO
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8538$PT8AO)
                                                                                                  (g$syntax-violation$7321$PT8AO
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8509$PT8AO)))
                                                                                               g$ls/false$8537$PT8AO)
                                                                                             (g$syntax-violation$7321$PT8AO
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8536$PT8AO))))
                                                                                        (g$syntax-dispatch$7215$PT8AO
                                                                                          g$t$8536$PT8AO
                                                                                          'any))))
                                                                                    g$t$8532$PT8AO))))
                                                                              (g$syntax-dispatch$7215$PT8AO
                                                                                g$t$8532$PT8AO
                                                                                'any))))
                                                                          g$t$8528$PT8AO))))
                                                                    (g$syntax-dispatch$7215$PT8AO
                                                                      g$t$8528$PT8AO
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8524$PT8AO))))
                                                          (g$syntax-dispatch$7215$PT8AO
                                                            g$t$8524$PT8AO
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8518$PT8AO))))
                                                (g$syntax-dispatch$7215$PT8AO
                                                  g$t$8518$PT8AO
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8510$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$8510$PT8AO
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8509$PT8AO)))
                              g$fields$8507$PT8AO)))))
                  (g$enumerate$8457$PT8AO
                    (case-lambda
                      ((g$ls$8502$PT8AO)
                       ((letrec ((g$f$8503$PT8AO
                                   (case-lambda
                                     ((g$ls$8504$PT8AO g$i$8505$PT8AO)
                                      (if (null? g$ls$8504$PT8AO)
                                        '()
                                        (cons
                                          g$i$8505$PT8AO
                                          (g$f$8503$PT8AO
                                            (cdr g$ls$8504$PT8AO)
                                            (+ g$i$8505$PT8AO '1))))))))
                          g$f$8503$PT8AO)
                        g$ls$8502$PT8AO
                        '0))))
                  (g$do-define-record$8458$PT8AO
                    (case-lambda
                      ((g$namespec$8482$PT8AO g$clause*$8483$PT8AO)
                       ((case-lambda
                          ((g$foo$8484$PT8AO)
                           ((case-lambda
                              ((g$foo-rtd$8485$PT8AO)
                               ((case-lambda
                                  ((g$foo-rcd$8486$PT8AO)
                                   ((case-lambda
                                      ((g$protocol$8487$PT8AO)
                                       ((case-lambda
                                          ((g$make-foo$8488$PT8AO)
                                           ((case-lambda
                                              ((g$fields$8489$PT8AO)
                                               ((case-lambda
                                                  ((g$idx*$8490$PT8AO)
                                                   ((case-lambda
                                                      ((g$foo-x*$8491$PT8AO)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8492$PT8AO)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8493$PT8AO)
                                                               ((case-lambda
                                                                  ((g$foo?$8494$PT8AO)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8495$PT8AO)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8496$PT8AO)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8497$PT8AO)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7178$PT8AO
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8485$PT8AO
                                                                                           g$foo-rtd-code$8495$PT8AO)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8487$PT8AO
                                                                                             g$protocol-code$8497$PT8AO)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8486$PT8AO
                                                                                               g$foo-rcd-code$8496$PT8AO)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8484$PT8AO
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8485$PT8AO)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8486$PT8AO)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8494$PT8AO
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8485$PT8AO))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8488$PT8AO
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8486$PT8AO))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8498$PT8AO
                                                                                                               g$idx$8499$PT8AO)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8498$PT8AO
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8485$PT8AO
                                                                                                                 g$idx$8499$PT8AO))))
                                                                                                          g$foo-x*$8491$PT8AO
                                                                                                          g$idx*$8490$PT8AO)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8500$PT8AO
                                                                                                               g$idx$8501$PT8AO)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8500$PT8AO
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8485$PT8AO
                                                                                                                 g$idx$8501$PT8AO))))
                                                                                                          g$set-foo-x!*$8492$PT8AO
                                                                                                          g$set-foo-idx*$8493$PT8AO)))))))))))))))
                                                                            (g$get-protocol-code$8452$PT8AO
                                                                              g$clause*$8483$PT8AO))))
                                                                        (g$foo-rcd-code$8451$PT8AO
                                                                          g$clause*$8483$PT8AO
                                                                          g$foo-rtd$8485$PT8AO
                                                                          g$protocol$8487$PT8AO
                                                                          (g$parent-rcd-code$8450$PT8AO
                                                                            g$clause*$8483$PT8AO)))))
                                                                    (g$foo-rtd-code$8448$PT8AO
                                                                      g$foo$8484$PT8AO
                                                                      g$clause*$8483$PT8AO
                                                                      (g$parent-rtd-code$8449$PT8AO
                                                                        g$clause*$8483$PT8AO)))))
                                                                (g$get-record-predicate-name$8446$PT8AO
                                                                  g$namespec$8482$PT8AO))))
                                                            (g$get-mutator-indices$8454$PT8AO
                                                              g$fields$8489$PT8AO))))
                                                        (g$get-mutators$8455$PT8AO
                                                          g$foo$8484$PT8AO
                                                          g$fields$8489$PT8AO))))
                                                    (g$get-accessors$8456$PT8AO
                                                      g$foo$8484$PT8AO
                                                      g$fields$8489$PT8AO))))
                                                (g$enumerate$8457$PT8AO
                                                  g$fields$8489$PT8AO))))
                                            (g$get-fields$8453$PT8AO
                                              g$clause*$8483$PT8AO))))
                                        (g$get-record-constructor-name$8445$PT8AO
                                          g$namespec$8482$PT8AO))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8444$PT8AO g$namespec$8482$PT8AO)))))
                  (g$verify-clauses$8459$PT8AO
                    (case-lambda
                      ((g$x$8464$PT8AO g$cls*$8465$PT8AO)
                       (letrec* ((g$valid-kwds$8466$PT8AO
                                   (map g$bless$7178$PT8AO
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8467$PT8AO
                                   (case-lambda
                                     ((g$x$8479$PT8AO g$ls$8480$PT8AO)
                                      (if (pair? g$ls$8480$PT8AO)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8481$PT8AO)
                                              (if g$t$8481$PT8AO
                                                g$t$8481$PT8AO
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8467$PT8AO
                                                    g$x$8479$PT8AO
                                                    (cdr g$ls$8480$PT8AO))))))
                                           (g$free-id=?$6941$PT8AO
                                             g$x$8479$PT8AO
                                             (car g$ls$8480$PT8AO))))
                                        '#f)))))
                         ((letrec ((g$f$8468$PT8AO
                                     (case-lambda
                                       ((g$cls*$8469$PT8AO g$seen*$8470$PT8AO)
                                        (if (null? g$cls*$8469$PT8AO)
                                          (void)
                                          ((case-lambda
                                             ((g$t$8471$PT8AO)
                                              ((case-lambda
                                                 ((g$ls/false$8472$PT8AO)
                                                  (if g$ls/false$8472$PT8AO
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8473$PT8AO
                                                           g$rest$8474$PT8AO)
                                                         (if ((case-lambda
                                                                ((g$t$8475$PT8AO)
                                                                 (if g$t$8475$PT8AO
                                                                   g$t$8475$PT8AO
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8467$PT8AO
                                                                            g$kwd$8473$PT8AO
                                                                            g$valid-kwds$8466$PT8AO))))))
                                                              (not (g$id?$6937$PT8AO
                                                                     g$kwd$8473$PT8AO)))
                                                           (g$syntax-violation$7321$PT8AO
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8473$PT8AO)
                                                           (if (g$bound-id-member?$6944$PT8AO
                                                                 g$kwd$8473$PT8AO
                                                                 g$seen*$8470$PT8AO)
                                                             (g$syntax-violation$7321$PT8AO
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8464$PT8AO
                                                               g$kwd$8473$PT8AO)
                                                             (g$f$8468$PT8AO
                                                               (cdr g$cls*$8469$PT8AO)
                                                               (cons
                                                                 g$kwd$8473$PT8AO
                                                                 g$seen*$8470$PT8AO))))))
                                                      g$ls/false$8472$PT8AO)
                                                    ((case-lambda
                                                       ((g$t$8476$PT8AO)
                                                        ((case-lambda
                                                           ((g$ls/false$8477$PT8AO)
                                                            (if g$ls/false$8477$PT8AO
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8478$PT8AO)
                                                                   (g$syntax-violation$7321$PT8AO
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8478$PT8AO)))
                                                                g$ls/false$8477$PT8AO)
                                                              (g$syntax-violation$7321$PT8AO
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8476$PT8AO))))
                                                         (g$syntax-dispatch$7215$PT8AO
                                                           g$t$8476$PT8AO
                                                           'any))))
                                                     g$t$8471$PT8AO))))
                                               (g$syntax-dispatch$7215$PT8AO
                                                 g$t$8471$PT8AO
                                                 '(any . any)))))
                                           (car g$cls*$8469$PT8AO)))))))
                            g$f$8468$PT8AO)
                          g$cls*$8465$PT8AO
                          '()))))))
          ((case-lambda
             ((g$t$8460$PT8AO)
              ((case-lambda
                 ((g$ls/false$8461$PT8AO)
                  (if g$ls/false$8461$PT8AO
                    (apply
                      (case-lambda
                        ((g$namespec$8462$PT8AO g$clause*$8463$PT8AO)
                         (begin
                           (g$verify-clauses$8459$PT8AO
                             g$x$8442$PT8AO
                             g$clause*$8463$PT8AO)
                           (g$do-define-record$8458$PT8AO
                             g$namespec$8462$PT8AO
                             g$clause*$8463$PT8AO))))
                      g$ls/false$8461$PT8AO)
                    (g$syntax-violation$7321$PT8AO
                      '#f
                      '"invalid syntax"
                      g$t$8460$PT8AO))))
               (g$syntax-dispatch$7215$PT8AO
                 g$t$8460$PT8AO
                 '(_ any . each-any)))))
           g$x$8442$PT8AO)))))
   (g$define-condition-type-macro$7210$PT8AO
     g$define-condition-type-macro$10660$PT8AO
     (case-lambda
       ((g$x$8698$PT8AO)
        (letrec* ((g$mkname$8699$PT8AO
                    (case-lambda
                      ((g$name$8722$PT8AO g$suffix$8723$PT8AO)
                       (g$datum->syntax$7323$PT8AO
                         g$name$8722$PT8AO
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7324$PT8AO g$name$8722$PT8AO))
                             g$suffix$8723$PT8AO)))))))
          ((case-lambda
             ((g$t$8700$PT8AO)
              ((case-lambda
                 ((g$ls/false$8701$PT8AO)
                  (if (if g$ls/false$8701$PT8AO
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$8702$PT8AO
                                 g$name$8703$PT8AO
                                 g$super$8704$PT8AO
                                 g$constructor$8705$PT8AO
                                 g$predicate$8706$PT8AO
                                 g$field*$8707$PT8AO
                                 g$accessor*$8708$PT8AO)
                               (if (g$id?$6937$PT8AO g$name$8703$PT8AO)
                                 (if (g$id?$6937$PT8AO g$super$8704$PT8AO)
                                   (if (g$id?$6937$PT8AO
                                         g$constructor$8705$PT8AO)
                                     (if (g$id?$6937$PT8AO
                                           g$predicate$8706$PT8AO)
                                       (if (g$for-all$5365$PT8AO
                                             g$id?$6937$PT8AO
                                             g$field*$8707$PT8AO)
                                         (begin
                                           '#f
                                           (g$for-all$5365$PT8AO
                                             g$id?$6937$PT8AO
                                             g$accessor*$8708$PT8AO))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$8701$PT8AO))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$8709$PT8AO
                           g$name$8710$PT8AO
                           g$super$8711$PT8AO
                           g$constructor$8712$PT8AO
                           g$predicate$8713$PT8AO
                           g$field*$8714$PT8AO
                           g$accessor*$8715$PT8AO)
                         ((case-lambda
                            ((g$aux-accessor*$8716$PT8AO)
                             (g$bless$7178$PT8AO
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$8710$PT8AO
                                         g$constructor$8712$PT8AO
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$8711$PT8AO)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$8717$PT8AO
                                                       g$aux$8718$PT8AO)
                                                     (list
                                                       'immutable
                                                       g$field$8717$PT8AO
                                                       g$aux$8718$PT8AO)))
                                                  g$field*$8714$PT8AO
                                                  g$aux-accessor*$8716$PT8AO))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$8713$PT8AO
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$8710$PT8AO)))
                                     (map (case-lambda
                                            ((g$accessor$8719$PT8AO
                                               g$aux$8720$PT8AO)
                                             (list
                                               'define
                                               g$accessor$8719$PT8AO
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$8710$PT8AO)
                                                 g$aux$8720$PT8AO))))
                                          g$accessor*$8715$PT8AO
                                          g$aux-accessor*$8716$PT8AO)))))))
                          (map (case-lambda ((g$x$8721$PT8AO) (gensym)))
                               g$accessor*$8715$PT8AO))))
                      g$ls/false$8701$PT8AO)
                    (g$syntax-violation$7321$PT8AO
                      '#f
                      '"invalid syntax"
                      g$t$8700$PT8AO))))
               (g$syntax-dispatch$7215$PT8AO
                 g$t$8700$PT8AO
                 '(any any any any any . #(each (any any)))))))
           g$x$8698$PT8AO)))))
   (g$incorrect-usage-macro$7211$PT8AO
     g$incorrect-usage-macro$10661$PT8AO
     (case-lambda
       ((g$e$8724$PT8AO)
        (g$syntax-violation$7321$PT8AO
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$8724$PT8AO))))
   (g$parameterize-transformer$7212$PT8AO
     g$parameterize-transformer$10662$PT8AO
     (case-lambda
       ((g$e$8725$PT8AO g$r$8726$PT8AO g$mr$8727$PT8AO)
        ((case-lambda
           ((g$t$8728$PT8AO)
            ((case-lambda
               ((g$ls/false$8729$PT8AO)
                (if g$ls/false$8729$PT8AO
                  (apply
                    (case-lambda
                      ((g$b$8730$PT8AO g$b*$8731$PT8AO)
                       (g$chi-internal$7244$PT8AO
                         (cons g$b$8730$PT8AO g$b*$8731$PT8AO)
                         g$r$8726$PT8AO
                         g$mr$8727$PT8AO)))
                    g$ls/false$8729$PT8AO)
                  ((case-lambda
                     ((g$t$8732$PT8AO)
                      ((case-lambda
                         ((g$ls/false$8733$PT8AO)
                          (if g$ls/false$8733$PT8AO
                            (apply
                              (case-lambda
                                ((g$olhs*$8734$PT8AO
                                   g$orhs*$8735$PT8AO
                                   g$b$8736$PT8AO
                                   g$b*$8737$PT8AO)
                                 ((case-lambda
                                    ((g$lhs*$8738$PT8AO
                                       g$rhs*$8739$PT8AO
                                       g$t*$8740$PT8AO
                                       g$swap$8741$PT8AO)
                                     (g$build-let$6870$PT8AO
                                       '#f
                                       (append
                                         g$lhs*$8738$PT8AO
                                         g$rhs*$8739$PT8AO)
                                       (append
                                         (g$chi-expr*$7231$PT8AO
                                           g$olhs*$8734$PT8AO
                                           g$r$8726$PT8AO
                                           g$mr$8727$PT8AO)
                                         (g$chi-expr*$7231$PT8AO
                                           g$orhs*$8735$PT8AO
                                           g$r$8726$PT8AO
                                           g$mr$8727$PT8AO))
                                       (g$build-let$6870$PT8AO
                                         '#f
                                         (list g$swap$8741$PT8AO)
                                         (list
                                           (g$build-lambda$6868$PT8AO
                                             '#f
                                             '()
                                             (g$build-sequence$6871$PT8AO
                                               '#f
                                               (map (case-lambda
                                                      ((g$t$8742$PT8AO
                                                         g$lhs$8743$PT8AO
                                                         g$rhs$8744$PT8AO)
                                                       (g$build-let$6870$PT8AO
                                                         '#f
                                                         (list g$t$8742$PT8AO)
                                                         (list
                                                           (list
                                                             g$lhs$8743$PT8AO))
                                                         (g$build-sequence$6871$PT8AO
                                                           '#f
                                                           (list
                                                             (list
                                                               g$lhs$8743$PT8AO
                                                               g$rhs$8744$PT8AO)
                                                             (list
                                                               'set!
                                                               g$rhs$8744$PT8AO
                                                               g$t$8742$PT8AO))))))
                                                    g$t*$8740$PT8AO
                                                    g$lhs*$8738$PT8AO
                                                    g$rhs*$8739$PT8AO))))
                                         (list
                                           '(primitive dynamic-wind)
                                           g$swap$8741$PT8AO
                                           (g$build-lambda$6868$PT8AO
                                             '#f
                                             '()
                                             (g$chi-internal$7244$PT8AO
                                               (cons
                                                 g$b$8736$PT8AO
                                                 g$b*$8737$PT8AO)
                                               g$r$8726$PT8AO
                                               g$mr$8727$PT8AO))
                                           g$swap$8741$PT8AO)))))
                                  (map (case-lambda
                                         ((g$x$8745$PT8AO)
                                          (g$gen-lexical$6881$PT8AO 'lhs)))
                                       g$olhs*$8734$PT8AO)
                                  (map (case-lambda
                                         ((g$x$8746$PT8AO)
                                          (g$gen-lexical$6881$PT8AO 'rhs)))
                                       g$olhs*$8734$PT8AO)
                                  (map (case-lambda
                                         ((g$x$8747$PT8AO)
                                          (g$gen-lexical$6881$PT8AO 't)))
                                       g$olhs*$8734$PT8AO)
                                  (g$gen-lexical$6881$PT8AO 'swap))))
                              g$ls/false$8733$PT8AO)
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"invalid syntax"
                              g$t$8732$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$8732$PT8AO
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$8728$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$8728$PT8AO
               '(_ () any . each-any)))))
         g$e$8725$PT8AO))))
   (g$foreign-call-transformer$7213$PT8AO
     g$foreign-call-transformer$10663$PT8AO
     (case-lambda
       ((g$e$8748$PT8AO g$r$8749$PT8AO g$mr$8750$PT8AO)
        ((case-lambda
           ((g$t$8751$PT8AO)
            ((case-lambda
               ((g$ls/false$8752$PT8AO)
                (if g$ls/false$8752$PT8AO
                  (apply
                    (case-lambda
                      ((g$name$8753$PT8AO g$arg*$8754$PT8AO)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7233$PT8AO
                             g$name$8753$PT8AO
                             g$r$8749$PT8AO
                             g$mr$8750$PT8AO)
                           (g$chi-expr*$7231$PT8AO
                             g$arg*$8754$PT8AO
                             g$r$8749$PT8AO
                             g$mr$8750$PT8AO)))))
                    g$ls/false$8752$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$8751$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$8751$PT8AO
               '(_ any . each-any)))))
         g$e$8748$PT8AO))))
   (g$convert-pattern$7214$PT8AO
     g$convert-pattern$10664$PT8AO
     (case-lambda
       ((g$pattern$8755$PT8AO g$keys$8756$PT8AO)
        (letrec* ((g$cvt*$8757$PT8AO
                    (case-lambda
                      ((g$p*$8837$PT8AO g$n$8838$PT8AO g$ids$8839$PT8AO)
                       (if (null? g$p*$8837$PT8AO)
                         (values '() g$ids$8839$PT8AO)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$8757$PT8AO
                                (cdr g$p*$8837$PT8AO)
                                g$n$8838$PT8AO
                                g$ids$8839$PT8AO)))
                           (case-lambda
                             ((g$y$8842$PT8AO g$ids$8843$PT8AO)
                              ((case-lambda
                                 ((g$ids$8844$PT8AO g$y$8845$PT8AO)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$8758$PT8AO
                                         (car g$p*$8837$PT8AO)
                                         g$n$8838$PT8AO
                                         g$ids$8844$PT8AO)))
                                    (case-lambda
                                      ((g$x$8848$PT8AO g$ids$8849$PT8AO)
                                       ((case-lambda
                                          ((g$ids$8850$PT8AO g$x$8851$PT8AO)
                                           (values
                                             (cons
                                               g$x$8851$PT8AO
                                               g$y$8845$PT8AO)
                                             g$ids$8850$PT8AO)))
                                        g$ids$8849$PT8AO
                                        g$x$8848$PT8AO))))))
                               g$ids$8843$PT8AO
                               g$y$8842$PT8AO))))))))
                  (g$cvt$8758$PT8AO
                    (case-lambda
                      ((g$p$8759$PT8AO g$n$8760$PT8AO g$ids$8761$PT8AO)
                       ((case-lambda
                          ((g$t$8762$PT8AO)
                           ((case-lambda
                              ((g$ls/false$8763$PT8AO)
                               (if (if g$ls/false$8763$PT8AO
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$8764$PT8AO)
                                            (g$id?$6937$PT8AO g$id$8764$PT8AO)))
                                         g$ls/false$8763$PT8AO))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$8765$PT8AO)
                                      (if (g$bound-id-member?$6944$PT8AO
                                            g$p$8759$PT8AO
                                            g$keys$8756$PT8AO)
                                        (values
                                          (vector 'free-id g$p$8759$PT8AO)
                                          g$ids$8761$PT8AO)
                                        (if (g$free-id=?$6941$PT8AO
                                              g$p$8759$PT8AO
                                              (g$scheme-stx$7158$PT8AO '_))
                                          (values '_ g$ids$8761$PT8AO)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$8759$PT8AO
                                                g$n$8760$PT8AO)
                                              g$ids$8761$PT8AO))))))
                                   g$ls/false$8763$PT8AO)
                                 ((case-lambda
                                    ((g$t$8766$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$8767$PT8AO)
                                         (if (if g$ls/false$8767$PT8AO
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8768$PT8AO
                                                        g$dots$8769$PT8AO)
                                                      (g$ellipsis?$7216$PT8AO
                                                        g$dots$8769$PT8AO)))
                                                   g$ls/false$8767$PT8AO))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$8770$PT8AO
                                                  g$dots$8771$PT8AO)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$8758$PT8AO
                                                       g$p$8770$PT8AO
                                                       (+ g$n$8760$PT8AO '1)
                                                       g$ids$8761$PT8AO)))
                                                  (case-lambda
                                                    ((g$p$8774$PT8AO
                                                       g$ids$8775$PT8AO)
                                                     ((case-lambda
                                                        ((g$ids$8776$PT8AO
                                                           g$p$8777$PT8AO)
                                                         (values
                                                           (if (eq? g$p$8777$PT8AO
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$8777$PT8AO))
                                                           g$ids$8776$PT8AO)))
                                                      g$ids$8775$PT8AO
                                                      g$p$8774$PT8AO))))))
                                             g$ls/false$8767$PT8AO)
                                           ((case-lambda
                                              ((g$t$8778$PT8AO)
                                               ((case-lambda
                                                  ((g$ls/false$8779$PT8AO)
                                                   (if (if g$ls/false$8779$PT8AO
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$8780$PT8AO
                                                                  g$dots$8781$PT8AO
                                                                  g$ys$8782$PT8AO
                                                                  g$z$8783$PT8AO)
                                                                (g$ellipsis?$7216$PT8AO
                                                                  g$dots$8781$PT8AO)))
                                                             g$ls/false$8779$PT8AO))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$8784$PT8AO
                                                            g$dots$8785$PT8AO
                                                            g$ys$8786$PT8AO
                                                            g$z$8787$PT8AO)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$8758$PT8AO
                                                                 g$z$8787$PT8AO
                                                                 g$n$8760$PT8AO
                                                                 g$ids$8761$PT8AO)))
                                                            (case-lambda
                                                              ((g$z$8790$PT8AO
                                                                 g$ids$8791$PT8AO)
                                                               ((case-lambda
                                                                  ((g$ids$8792$PT8AO
                                                                     g$z$8793$PT8AO)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$8757$PT8AO
                                                                          g$ys$8786$PT8AO
                                                                          g$n$8760$PT8AO
                                                                          g$ids$8792$PT8AO)))
                                                                     (case-lambda
                                                                       ((g$ys$8796$PT8AO
                                                                          g$ids$8797$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$ids$8798$PT8AO
                                                                              g$ys$8799$PT8AO)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$8758$PT8AO
                                                                                   g$x$8784$PT8AO
                                                                                   (+ g$n$8760$PT8AO
                                                                                      '1)
                                                                                   g$ids$8798$PT8AO)))
                                                                              (case-lambda
                                                                                ((g$x$8802$PT8AO
                                                                                   g$ids$8803$PT8AO)
                                                                                 ((case-lambda
                                                                                    ((g$ids$8804$PT8AO
                                                                                       g$x$8805$PT8AO)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$8805$PT8AO
                                                                                         (reverse
                                                                                           g$ys$8799$PT8AO)
                                                                                         g$z$8793$PT8AO)
                                                                                       g$ids$8804$PT8AO)))
                                                                                  g$ids$8803$PT8AO
                                                                                  g$x$8802$PT8AO))))))
                                                                         g$ids$8797$PT8AO
                                                                         g$ys$8796$PT8AO))))))
                                                                g$ids$8791$PT8AO
                                                                g$z$8790$PT8AO))))))
                                                       g$ls/false$8779$PT8AO)
                                                     ((case-lambda
                                                        ((g$t$8806$PT8AO)
                                                         ((case-lambda
                                                            ((g$ls/false$8807$PT8AO)
                                                             (if g$ls/false$8807$PT8AO
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$8808$PT8AO
                                                                      g$y$8809$PT8AO)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$8758$PT8AO
                                                                           g$y$8809$PT8AO
                                                                           g$n$8760$PT8AO
                                                                           g$ids$8761$PT8AO)))
                                                                      (case-lambda
                                                                        ((g$y$8812$PT8AO
                                                                           g$ids$8813$PT8AO)
                                                                         ((case-lambda
                                                                            ((g$ids$8814$PT8AO
                                                                               g$y$8815$PT8AO)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$8758$PT8AO
                                                                                    g$x$8808$PT8AO
                                                                                    g$n$8760$PT8AO
                                                                                    g$ids$8814$PT8AO)))
                                                                               (case-lambda
                                                                                 ((g$x$8818$PT8AO
                                                                                    g$ids$8819$PT8AO)
                                                                                  ((case-lambda
                                                                                     ((g$ids$8820$PT8AO
                                                                                        g$x$8821$PT8AO)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$8821$PT8AO
                                                                                          g$y$8815$PT8AO)
                                                                                        g$ids$8820$PT8AO)))
                                                                                   g$ids$8819$PT8AO
                                                                                   g$x$8818$PT8AO))))))
                                                                          g$ids$8813$PT8AO
                                                                          g$y$8812$PT8AO))))))
                                                                 g$ls/false$8807$PT8AO)
                                                               ((case-lambda
                                                                  ((g$t$8822$PT8AO)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8823$PT8AO)
                                                                       (if g$ls/false$8823$PT8AO
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$8761$PT8AO)))
                                                                           g$ls/false$8823$PT8AO)
                                                                         ((case-lambda
                                                                            ((g$t$8824$PT8AO)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8825$PT8AO)
                                                                                 (if (if g$ls/false$8825$PT8AO
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$8826$PT8AO)
                                                                                              (not (g$stx?$6909$PT8AO
                                                                                                     g$p$8826$PT8AO))))
                                                                                           g$ls/false$8825$PT8AO))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$8827$PT8AO)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$8758$PT8AO
                                                                                               g$p$8827$PT8AO
                                                                                               g$n$8760$PT8AO
                                                                                               g$ids$8761$PT8AO)))
                                                                                          (case-lambda
                                                                                            ((g$p$8830$PT8AO
                                                                                               g$ids$8831$PT8AO)
                                                                                             ((case-lambda
                                                                                                ((g$ids$8832$PT8AO
                                                                                                   g$p$8833$PT8AO)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$8833$PT8AO)
                                                                                                   g$ids$8832$PT8AO)))
                                                                                              g$ids$8831$PT8AO
                                                                                              g$p$8830$PT8AO))))))
                                                                                     g$ls/false$8825$PT8AO)
                                                                                   ((case-lambda
                                                                                      ((g$t$8834$PT8AO)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8835$PT8AO)
                                                                                           (if g$ls/false$8835$PT8AO
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$8836$PT8AO)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$6948$PT8AO
                                                                                                        g$datum$8836$PT8AO))
                                                                                                    g$ids$8761$PT8AO)))
                                                                                               g$ls/false$8835$PT8AO)
                                                                                             (g$syntax-violation$7321$PT8AO
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8834$PT8AO))))
                                                                                        (g$syntax-dispatch$7215$PT8AO
                                                                                          g$t$8834$PT8AO
                                                                                          'any))))
                                                                                    g$t$8824$PT8AO))))
                                                                              (g$syntax-dispatch$7215$PT8AO
                                                                                g$t$8824$PT8AO
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$8822$PT8AO))))
                                                                    (g$syntax-dispatch$7215$PT8AO
                                                                      g$t$8822$PT8AO
                                                                      '()))))
                                                                g$t$8806$PT8AO))))
                                                          (g$syntax-dispatch$7215$PT8AO
                                                            g$t$8806$PT8AO
                                                            '(any . any)))))
                                                      g$t$8778$PT8AO))))
                                                (g$syntax-dispatch$7215$PT8AO
                                                  g$t$8778$PT8AO
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$8766$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$8766$PT8AO
                                        '(any any)))))
                                  g$t$8762$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO
                              g$t$8762$PT8AO
                              'any))))
                        g$p$8759$PT8AO)))))
          (g$cvt$8758$PT8AO g$pattern$8755$PT8AO '0 '())))))
   (g$syntax-dispatch$7215$PT8AO
     g$syntax-dispatch$10665$PT8AO
     (case-lambda
       ((g$e$8852$PT8AO g$p$8853$PT8AO)
        (letrec* ((g$stx^$8854$PT8AO
                    (case-lambda
                      ((g$e$8962$PT8AO
                         g$m*$8963$PT8AO
                         g$s*$8964$PT8AO
                         g$ae*$8965$PT8AO)
                       (if (if (null? g$m*$8963$PT8AO)
                             (if (null? g$s*$8964$PT8AO)
                               (begin '#f (null? g$ae*$8965$PT8AO))
                               '#f)
                             '#f)
                         g$e$8962$PT8AO
                         (g$mkstx$6925$PT8AO
                           g$e$8962$PT8AO
                           g$m*$8963$PT8AO
                           g$s*$8964$PT8AO
                           g$ae*$8965$PT8AO)))))
                  (g$match-each$8855$PT8AO
                    (case-lambda
                      ((g$e$8946$PT8AO
                         g$p$8947$PT8AO
                         g$m*$8948$PT8AO
                         g$s*$8949$PT8AO
                         g$ae*$8950$PT8AO)
                       (if (pair? g$e$8946$PT8AO)
                         ((case-lambda
                            ((g$first$8951$PT8AO)
                             (if g$first$8951$PT8AO
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$8952$PT8AO)
                                     (if g$rest$8952$PT8AO
                                       (begin
                                         '#f
                                         (cons
                                           g$first$8951$PT8AO
                                           g$rest$8952$PT8AO))
                                       '#f)))
                                  (g$match-each$8855$PT8AO
                                    (cdr g$e$8946$PT8AO)
                                    g$p$8947$PT8AO
                                    g$m*$8948$PT8AO
                                    g$s*$8949$PT8AO
                                    g$ae*$8950$PT8AO)))
                               '#f)))
                          (g$match$8861$PT8AO
                            (car g$e$8946$PT8AO)
                            g$p$8947$PT8AO
                            g$m*$8948$PT8AO
                            g$s*$8949$PT8AO
                            g$ae*$8950$PT8AO
                            '()))
                         (if (null? g$e$8946$PT8AO)
                           '()
                           (if (g$stx?$6909$PT8AO g$e$8946$PT8AO)
                             (if (not (g$top-marked?$6880$PT8AO
                                        g$m*$8948$PT8AO))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$6924$PT8AO
                                        g$m*$8948$PT8AO
                                        g$s*$8949$PT8AO
                                        g$ae*$8950$PT8AO
                                        g$e$8946$PT8AO)))
                                   (case-lambda
                                     ((g$m*$8956$PT8AO
                                        g$s*$8957$PT8AO
                                        g$ae*$8958$PT8AO)
                                      ((case-lambda
                                         ((g$ae*$8959$PT8AO
                                            g$s*$8960$PT8AO
                                            g$m*$8961$PT8AO)
                                          (g$match-each$8855$PT8AO
                                            (g$stx-expr$6911$PT8AO
                                              g$e$8946$PT8AO)
                                            g$p$8947$PT8AO
                                            g$m*$8961$PT8AO
                                            g$s*$8960$PT8AO
                                            g$ae*$8959$PT8AO)))
                                       g$ae*$8958$PT8AO
                                       g$s*$8957$PT8AO
                                       g$m*$8956$PT8AO)))))
                               '#f)
                             (if (annotation? g$e$8946$PT8AO)
                               (g$match-each$8855$PT8AO
                                 (annotation-expression g$e$8946$PT8AO)
                                 g$p$8947$PT8AO
                                 g$m*$8948$PT8AO
                                 g$s*$8949$PT8AO
                                 g$ae*$8950$PT8AO)
                               '#f)))))))
                  (g$match-each+$8856$PT8AO
                    (case-lambda
                      ((g$e$8914$PT8AO
                         g$x-pat$8915$PT8AO
                         g$y-pat$8916$PT8AO
                         g$z-pat$8917$PT8AO
                         g$m*$8918$PT8AO
                         g$s*$8919$PT8AO
                         g$ae*$8920$PT8AO
                         g$r$8921$PT8AO)
                       ((letrec ((g$f$8922$PT8AO
                                   (case-lambda
                                     ((g$e$8923$PT8AO
                                        g$m*$8924$PT8AO
                                        g$s*$8925$PT8AO
                                        g$ae*$8926$PT8AO)
                                      (if (pair? g$e$8923$PT8AO)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$8922$PT8AO
                                               (cdr g$e$8923$PT8AO)
                                               g$m*$8924$PT8AO
                                               g$s*$8925$PT8AO
                                               g$ae*$8926$PT8AO)))
                                          (case-lambda
                                            ((g$xr*$8930$PT8AO
                                               g$y-pat$8931$PT8AO
                                               g$r$8932$PT8AO)
                                             ((case-lambda
                                                ((g$r$8933$PT8AO
                                                   g$y-pat$8934$PT8AO
                                                   g$xr*$8935$PT8AO)
                                                 (if g$r$8933$PT8AO
                                                   (if (null?
                                                         g$y-pat$8934$PT8AO)
                                                     ((case-lambda
                                                        ((g$xr$8936$PT8AO)
                                                         (if g$xr$8936$PT8AO
                                                           (values
                                                             (cons
                                                               g$xr$8936$PT8AO
                                                               g$xr*$8935$PT8AO)
                                                             g$y-pat$8934$PT8AO
                                                             g$r$8933$PT8AO)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$8861$PT8AO
                                                        (car g$e$8923$PT8AO)
                                                        g$x-pat$8915$PT8AO
                                                        g$m*$8924$PT8AO
                                                        g$s*$8925$PT8AO
                                                        g$ae*$8926$PT8AO
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$8934$PT8AO)
                                                       (g$match$8861$PT8AO
                                                         (car g$e$8923$PT8AO)
                                                         (car g$y-pat$8934$PT8AO)
                                                         g$m*$8924$PT8AO
                                                         g$s*$8925$PT8AO
                                                         g$ae*$8926$PT8AO
                                                         g$r$8933$PT8AO)))
                                                   (values '#f '#f '#f))))
                                              g$r$8932$PT8AO
                                              g$y-pat$8931$PT8AO
                                              g$xr*$8930$PT8AO))))
                                        (if (g$stx?$6909$PT8AO g$e$8923$PT8AO)
                                          (if (g$top-marked?$6880$PT8AO
                                                g$m*$8924$PT8AO)
                                            (values
                                              '()
                                              g$y-pat$8916$PT8AO
                                              (g$match$8861$PT8AO
                                                g$e$8923$PT8AO
                                                g$z-pat$8917$PT8AO
                                                g$m*$8924$PT8AO
                                                g$s*$8925$PT8AO
                                                g$ae*$8926$PT8AO
                                                g$r$8921$PT8AO))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$6924$PT8AO
                                                   g$m*$8924$PT8AO
                                                   g$s*$8925$PT8AO
                                                   g$ae*$8926$PT8AO
                                                   g$e$8923$PT8AO)))
                                              (case-lambda
                                                ((g$m*$8940$PT8AO
                                                   g$s*$8941$PT8AO
                                                   g$ae*$8942$PT8AO)
                                                 ((case-lambda
                                                    ((g$ae*$8943$PT8AO
                                                       g$s*$8944$PT8AO
                                                       g$m*$8945$PT8AO)
                                                     (g$f$8922$PT8AO
                                                       (g$stx-expr$6911$PT8AO
                                                         g$e$8923$PT8AO)
                                                       g$m*$8945$PT8AO
                                                       g$s*$8944$PT8AO
                                                       g$ae*$8943$PT8AO)))
                                                  g$ae*$8942$PT8AO
                                                  g$s*$8941$PT8AO
                                                  g$m*$8940$PT8AO)))))
                                          (if (annotation? g$e$8923$PT8AO)
                                            (g$f$8922$PT8AO
                                              (annotation-expression
                                                g$e$8923$PT8AO)
                                              g$m*$8924$PT8AO
                                              g$s*$8925$PT8AO
                                              g$ae*$8926$PT8AO)
                                            (values
                                              '()
                                              g$y-pat$8916$PT8AO
                                              (g$match$8861$PT8AO
                                                g$e$8923$PT8AO
                                                g$z-pat$8917$PT8AO
                                                g$m*$8924$PT8AO
                                                g$s*$8925$PT8AO
                                                g$ae*$8926$PT8AO
                                                g$r$8921$PT8AO)))))))))
                          g$f$8922$PT8AO)
                        g$e$8914$PT8AO
                        g$m*$8918$PT8AO
                        g$s*$8919$PT8AO
                        g$ae*$8920$PT8AO))))
                  (g$match-each-any$8857$PT8AO
                    (case-lambda
                      ((g$e$8900$PT8AO
                         g$m*$8901$PT8AO
                         g$s*$8902$PT8AO
                         g$ae*$8903$PT8AO)
                       (if (pair? g$e$8900$PT8AO)
                         ((case-lambda
                            ((g$l$8904$PT8AO)
                             (if g$l$8904$PT8AO
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$8854$PT8AO
                                     (car g$e$8900$PT8AO)
                                     g$m*$8901$PT8AO
                                     g$s*$8902$PT8AO
                                     g$ae*$8903$PT8AO)
                                   g$l$8904$PT8AO))
                               '#f)))
                          (g$match-each-any$8857$PT8AO
                            (cdr g$e$8900$PT8AO)
                            g$m*$8901$PT8AO
                            g$s*$8902$PT8AO
                            g$ae*$8903$PT8AO))
                         (if (null? g$e$8900$PT8AO)
                           '()
                           (if (g$stx?$6909$PT8AO g$e$8900$PT8AO)
                             (if (not (g$top-marked?$6880$PT8AO
                                        g$m*$8901$PT8AO))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$6924$PT8AO
                                        g$m*$8901$PT8AO
                                        g$s*$8902$PT8AO
                                        g$ae*$8903$PT8AO
                                        g$e$8900$PT8AO)))
                                   (case-lambda
                                     ((g$m*$8908$PT8AO
                                        g$s*$8909$PT8AO
                                        g$ae*$8910$PT8AO)
                                      ((case-lambda
                                         ((g$ae*$8911$PT8AO
                                            g$s*$8912$PT8AO
                                            g$m*$8913$PT8AO)
                                          (g$match-each-any$8857$PT8AO
                                            (g$stx-expr$6911$PT8AO
                                              g$e$8900$PT8AO)
                                            g$m*$8913$PT8AO
                                            g$s*$8912$PT8AO
                                            g$ae*$8911$PT8AO)))
                                       g$ae*$8910$PT8AO
                                       g$s*$8909$PT8AO
                                       g$m*$8908$PT8AO)))))
                               '#f)
                             (if (annotation? g$e$8900$PT8AO)
                               (g$match-each-any$8857$PT8AO
                                 (annotation-expression g$e$8900$PT8AO)
                                 g$m*$8901$PT8AO
                                 g$s*$8902$PT8AO
                                 g$ae*$8903$PT8AO)
                               '#f)))))))
                  (g$match-empty$8858$PT8AO
                    (case-lambda
                      ((g$p$8897$PT8AO g$r$8898$PT8AO)
                       (if (null? g$p$8897$PT8AO)
                         g$r$8898$PT8AO
                         (if (eq? g$p$8897$PT8AO '_)
                           g$r$8898$PT8AO
                           (if (eq? g$p$8897$PT8AO 'any)
                             (cons '() g$r$8898$PT8AO)
                             (if (pair? g$p$8897$PT8AO)
                               (g$match-empty$8858$PT8AO
                                 (car g$p$8897$PT8AO)
                                 (g$match-empty$8858$PT8AO
                                   (cdr g$p$8897$PT8AO)
                                   g$r$8898$PT8AO))
                               (if (eq? g$p$8897$PT8AO 'each-any)
                                 (cons '() g$r$8898$PT8AO)
                                 ((case-lambda
                                    ((g$t$8899$PT8AO)
                                     (if (eqv? g$t$8899$PT8AO 'each)
                                       (g$match-empty$8858$PT8AO
                                         (vector-ref g$p$8897$PT8AO '1)
                                         g$r$8898$PT8AO)
                                       (if (eqv? g$t$8899$PT8AO 'each+)
                                         (g$match-empty$8858$PT8AO
                                           (vector-ref g$p$8897$PT8AO '1)
                                           (g$match-empty$8858$PT8AO
                                             (reverse
                                               (vector-ref g$p$8897$PT8AO '2))
                                             (g$match-empty$8858$PT8AO
                                               (vector-ref g$p$8897$PT8AO '3)
                                               g$r$8898$PT8AO)))
                                         (if (memv
                                               g$t$8899$PT8AO
                                               '(free-id atom))
                                           g$r$8898$PT8AO
                                           (if (memv
                                                 g$t$8899$PT8AO
                                                 '(scheme-id atom))
                                             g$r$8898$PT8AO
                                             (if (eqv? g$t$8899$PT8AO 'vector)
                                               (g$match-empty$8858$PT8AO
                                                 (vector-ref g$p$8897$PT8AO '1)
                                                 g$r$8898$PT8AO)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$8897$PT8AO))))))))
                                  (vector-ref g$p$8897$PT8AO '0))))))))))
                  (g$combine$8859$PT8AO
                    (case-lambda
                      ((g$r*$8895$PT8AO g$r$8896$PT8AO)
                       (if (null? (car g$r*$8895$PT8AO))
                         g$r$8896$PT8AO
                         (cons
                           (map car g$r*$8895$PT8AO)
                           (g$combine$8859$PT8AO
                             (map cdr g$r*$8895$PT8AO)
                             g$r$8896$PT8AO))))))
                  (g$match*$8860$PT8AO
                    (case-lambda
                      ((g$e$8877$PT8AO
                         g$p$8878$PT8AO
                         g$m*$8879$PT8AO
                         g$s*$8880$PT8AO
                         g$ae*$8881$PT8AO
                         g$r$8882$PT8AO)
                       (if (null? g$p$8878$PT8AO)
                         (if (null? g$e$8877$PT8AO)
                           (begin '#f g$r$8882$PT8AO)
                           '#f)
                         (if (pair? g$p$8878$PT8AO)
                           (if (pair? g$e$8877$PT8AO)
                             (begin
                               '#f
                               (g$match$8861$PT8AO
                                 (car g$e$8877$PT8AO)
                                 (car g$p$8878$PT8AO)
                                 g$m*$8879$PT8AO
                                 g$s*$8880$PT8AO
                                 g$ae*$8881$PT8AO
                                 (g$match$8861$PT8AO
                                   (cdr g$e$8877$PT8AO)
                                   (cdr g$p$8878$PT8AO)
                                   g$m*$8879$PT8AO
                                   g$s*$8880$PT8AO
                                   g$ae*$8881$PT8AO
                                   g$r$8882$PT8AO)))
                             '#f)
                           (if (eq? g$p$8878$PT8AO 'each-any)
                             ((case-lambda
                                ((g$l$8883$PT8AO)
                                 (if g$l$8883$PT8AO
                                   (begin
                                     '#f
                                     (cons g$l$8883$PT8AO g$r$8882$PT8AO))
                                   '#f)))
                              (g$match-each-any$8857$PT8AO
                                g$e$8877$PT8AO
                                g$m*$8879$PT8AO
                                g$s*$8880$PT8AO
                                g$ae*$8881$PT8AO))
                             ((case-lambda
                                ((g$t$8884$PT8AO)
                                 (if (eqv? g$t$8884$PT8AO 'each)
                                   (if (null? g$e$8877$PT8AO)
                                     (g$match-empty$8858$PT8AO
                                       (vector-ref g$p$8878$PT8AO '1)
                                       g$r$8882$PT8AO)
                                     ((case-lambda
                                        ((g$r*$8894$PT8AO)
                                         (if g$r*$8894$PT8AO
                                           (begin
                                             '#f
                                             (g$combine$8859$PT8AO
                                               g$r*$8894$PT8AO
                                               g$r$8882$PT8AO))
                                           '#f)))
                                      (g$match-each$8855$PT8AO
                                        g$e$8877$PT8AO
                                        (vector-ref g$p$8878$PT8AO '1)
                                        g$m*$8879$PT8AO
                                        g$s*$8880$PT8AO
                                        g$ae*$8881$PT8AO)))
                                   (if (eqv? g$t$8884$PT8AO 'free-id)
                                     (if (symbol? g$e$8877$PT8AO)
                                       (if (g$top-marked?$6880$PT8AO
                                             g$m*$8879$PT8AO)
                                         (if (g$free-id=?$6941$PT8AO
                                               (g$stx^$8854$PT8AO
                                                 g$e$8877$PT8AO
                                                 g$m*$8879$PT8AO
                                                 g$s*$8880$PT8AO
                                                 g$ae*$8881$PT8AO)
                                               (vector-ref g$p$8878$PT8AO '1))
                                           (begin '#f g$r$8882$PT8AO)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (eqv? g$t$8884$PT8AO 'scheme-id)
                                       (if (symbol? g$e$8877$PT8AO)
                                         (if (g$top-marked?$6880$PT8AO
                                               g$m*$8879$PT8AO)
                                           (if (g$free-id=?$6941$PT8AO
                                                 (g$stx^$8854$PT8AO
                                                   g$e$8877$PT8AO
                                                   g$m*$8879$PT8AO
                                                   g$s*$8880$PT8AO
                                                   g$ae*$8881$PT8AO)
                                                 (g$scheme-stx$7158$PT8AO
                                                   (vector-ref
                                                     g$p$8878$PT8AO
                                                     '1)))
                                             (begin '#f g$r$8882$PT8AO)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv? g$t$8884$PT8AO 'each+)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$8856$PT8AO
                                                g$e$8877$PT8AO
                                                (vector-ref g$p$8878$PT8AO '1)
                                                (vector-ref g$p$8878$PT8AO '2)
                                                (vector-ref g$p$8878$PT8AO '3)
                                                g$m*$8879$PT8AO
                                                g$s*$8880$PT8AO
                                                g$ae*$8881$PT8AO
                                                g$r$8882$PT8AO)))
                                           (case-lambda
                                             ((g$xr*$8888$PT8AO
                                                g$y-pat$8889$PT8AO
                                                g$r$8890$PT8AO)
                                              ((case-lambda
                                                 ((g$r$8891$PT8AO
                                                    g$y-pat$8892$PT8AO
                                                    g$xr*$8893$PT8AO)
                                                  (if g$r$8891$PT8AO
                                                    (if (null?
                                                          g$y-pat$8892$PT8AO)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$8893$PT8AO)
                                                          (g$match-empty$8858$PT8AO
                                                            (vector-ref
                                                              g$p$8878$PT8AO
                                                              '1)
                                                            g$r$8891$PT8AO)
                                                          (g$combine$8859$PT8AO
                                                            g$xr*$8893$PT8AO
                                                            g$r$8891$PT8AO)))
                                                      '#f)
                                                    '#f)))
                                               g$r$8890$PT8AO
                                               g$y-pat$8889$PT8AO
                                               g$xr*$8888$PT8AO))))
                                         (if (eqv? g$t$8884$PT8AO 'atom)
                                           (if (equal?
                                                 (vector-ref g$p$8878$PT8AO '1)
                                                 (g$strip$6947$PT8AO
                                                   g$e$8877$PT8AO
                                                   g$m*$8879$PT8AO))
                                             (begin '#f g$r$8882$PT8AO)
                                             '#f)
                                           (if (eqv? g$t$8884$PT8AO 'vector)
                                             (if (vector? g$e$8877$PT8AO)
                                               (begin
                                                 '#f
                                                 (g$match$8861$PT8AO
                                                   (vector->list g$e$8877$PT8AO)
                                                   (vector-ref
                                                     g$p$8878$PT8AO
                                                     '1)
                                                   g$m*$8879$PT8AO
                                                   g$s*$8880$PT8AO
                                                   g$ae*$8881$PT8AO
                                                   g$r$8882$PT8AO))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$8878$PT8AO)))))))))
                              (vector-ref g$p$8878$PT8AO '0))))))))
                  (g$match$8861$PT8AO
                    (case-lambda
                      ((g$e$8862$PT8AO
                         g$p$8863$PT8AO
                         g$m*$8864$PT8AO
                         g$s*$8865$PT8AO
                         g$ae*$8866$PT8AO
                         g$r$8867$PT8AO)
                       (if (not g$r$8867$PT8AO)
                         '#f
                         (if (eq? g$p$8863$PT8AO '_)
                           g$r$8867$PT8AO
                           (if (eq? g$p$8863$PT8AO 'any)
                             (cons
                               (g$stx^$8854$PT8AO
                                 g$e$8862$PT8AO
                                 g$m*$8864$PT8AO
                                 g$s*$8865$PT8AO
                                 g$ae*$8866$PT8AO)
                               g$r$8867$PT8AO)
                             (if (g$stx?$6909$PT8AO g$e$8862$PT8AO)
                               (if (not (g$top-marked?$6880$PT8AO
                                          g$m*$8864$PT8AO))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$6924$PT8AO
                                          g$m*$8864$PT8AO
                                          g$s*$8865$PT8AO
                                          g$ae*$8866$PT8AO
                                          g$e$8862$PT8AO)))
                                     (case-lambda
                                       ((g$m*$8871$PT8AO
                                          g$s*$8872$PT8AO
                                          g$ae*$8873$PT8AO)
                                        ((case-lambda
                                           ((g$ae*$8874$PT8AO
                                              g$s*$8875$PT8AO
                                              g$m*$8876$PT8AO)
                                            (g$match$8861$PT8AO
                                              (g$stx-expr$6911$PT8AO
                                                g$e$8862$PT8AO)
                                              g$p$8863$PT8AO
                                              g$m*$8876$PT8AO
                                              g$s*$8875$PT8AO
                                              g$ae*$8874$PT8AO
                                              g$r$8867$PT8AO)))
                                         g$ae*$8873$PT8AO
                                         g$s*$8872$PT8AO
                                         g$m*$8871$PT8AO)))))
                                 '#f)
                               (if (annotation? g$e$8862$PT8AO)
                                 (g$match$8861$PT8AO
                                   (annotation-expression g$e$8862$PT8AO)
                                   g$p$8863$PT8AO
                                   g$m*$8864$PT8AO
                                   g$s*$8865$PT8AO
                                   g$ae*$8866$PT8AO
                                   g$r$8867$PT8AO)
                                 (g$match*$8860$PT8AO
                                   g$e$8862$PT8AO
                                   g$p$8863$PT8AO
                                   g$m*$8864$PT8AO
                                   g$s*$8865$PT8AO
                                   g$ae*$8866$PT8AO
                                   g$r$8867$PT8AO))))))))))
          (g$match$8861$PT8AO g$e$8852$PT8AO g$p$8853$PT8AO '() '() '() '())))))
   (g$ellipsis?$7216$PT8AO
     g$ellipsis?$10666$PT8AO
     (case-lambda
       ((g$x$8966$PT8AO)
        (if (g$id?$6937$PT8AO g$x$8966$PT8AO)
          (begin
            '#f
            (g$free-id=?$6941$PT8AO
              g$x$8966$PT8AO
              (g$scheme-stx$7158$PT8AO '...)))
          '#f))))
   (g$underscore?$7217$PT8AO
     g$underscore?$10667$PT8AO
     (case-lambda
       ((g$x$8967$PT8AO)
        (if (g$id?$6937$PT8AO g$x$8967$PT8AO)
          (begin
            '#f
            (g$free-id=?$6941$PT8AO
              g$x$8967$PT8AO
              (g$scheme-stx$7158$PT8AO '_)))
          '#f))))
   (g$verify-literals$7218$PT8AO
     g$verify-literals$10668$PT8AO
     (case-lambda
       ((g$lits$8968$PT8AO g$expr$8969$PT8AO)
        (for-each
          (case-lambda
            ((g$x$8970$PT8AO)
             (if ((case-lambda
                    ((g$t$8971$PT8AO)
                     (if g$t$8971$PT8AO
                       g$t$8971$PT8AO
                       ((case-lambda
                          ((g$t$8972$PT8AO)
                           (if g$t$8972$PT8AO
                             g$t$8972$PT8AO
                             (begin
                               '#f
                               (g$underscore?$7217$PT8AO g$x$8970$PT8AO)))))
                        (g$ellipsis?$7216$PT8AO g$x$8970$PT8AO)))))
                  (not (g$id?$6937$PT8AO g$x$8970$PT8AO)))
               (g$syntax-violation$7321$PT8AO
                 '#f
                 '"invalid literal"
                 g$expr$8969$PT8AO
                 g$x$8970$PT8AO)
               (void))))
          g$lits$8968$PT8AO))))
   (g$syntax-case-transformer$7219$PT8AO
     g$syntax-case-transformer$10669$PT8AO
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$8973$PT8AO
                     (case-lambda
                       ((g$pvars$9030$PT8AO
                          g$expr$9031$PT8AO
                          g$y$9032$PT8AO
                          g$r$9033$PT8AO
                          g$mr$9034$PT8AO)
                        ((case-lambda
                           ((g$ids$9035$PT8AO g$levels$9036$PT8AO)
                            ((case-lambda
                               ((g$labels$9037$PT8AO g$new-vars$9038$PT8AO)
                                ((case-lambda
                                   ((g$body$9039$PT8AO)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$6868$PT8AO
                                        '#f
                                        g$new-vars$9038$PT8AO
                                        g$body$9039$PT8AO)
                                      g$y$9032$PT8AO)))
                                 (g$chi-expr$7233$PT8AO
                                   (g$add-subst$6927$PT8AO
                                     (g$make-full-rib$6905$PT8AO
                                       g$ids$9035$PT8AO
                                       g$labels$9037$PT8AO)
                                     g$expr$9031$PT8AO)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9040$PT8AO
                                               g$var$9041$PT8AO
                                               g$level$9042$PT8AO)
                                             (cons
                                               g$label$9040$PT8AO
                                               (g$make-binding$6953$PT8AO
                                                 'syntax
                                                 (cons
                                                   g$var$9041$PT8AO
                                                   g$level$9042$PT8AO)))))
                                          g$labels$9037$PT8AO
                                          g$new-vars$9038$PT8AO
                                          (map cdr g$pvars$9030$PT8AO))
                                     g$r$9033$PT8AO)
                                   g$mr$9034$PT8AO))))
                             (map g$gen-label$6883$PT8AO g$ids$9035$PT8AO)
                             (map g$gen-lexical$6881$PT8AO g$ids$9035$PT8AO))))
                         (map car g$pvars$9030$PT8AO)
                         (map cdr g$pvars$9030$PT8AO)))))
                   (g$invalid-ids-error$8974$PT8AO
                     (case-lambda
                       ((g$id*$9024$PT8AO g$e$9025$PT8AO g$class$9026$PT8AO)
                        ((letrec ((g$find$9027$PT8AO
                                    (case-lambda
                                      ((g$id*$9028$PT8AO g$ok*$9029$PT8AO)
                                       (if (null? g$id*$9028$PT8AO)
                                         (g$syntax-violation$7321$PT8AO
                                           '#f
                                           '"invalid syntax"
                                           g$e$9025$PT8AO)
                                         (if (g$id?$6937$PT8AO
                                               (car g$id*$9028$PT8AO))
                                           (if (g$bound-id-member?$6944$PT8AO
                                                 (car g$id*$9028$PT8AO)
                                                 g$ok*$9029$PT8AO)
                                             (g$syntax-error$7318$PT8AO
                                               (car g$id*$9028$PT8AO)
                                               '"duplicate "
                                               g$class$9026$PT8AO)
                                             (g$find$9027$PT8AO
                                               (cdr g$id*$9028$PT8AO)
                                               (cons
                                                 (car g$id*$9028$PT8AO)
                                                 g$ok*$9029$PT8AO)))
                                           (g$syntax-error$7318$PT8AO
                                             (car g$id*$9028$PT8AO)
                                             '"invalid "
                                             g$class$9026$PT8AO)))))))
                           g$find$9027$PT8AO)
                         g$id*$9024$PT8AO
                         '()))))
                   (g$gen-clause$8975$PT8AO
                     (case-lambda
                       ((g$x$9004$PT8AO
                          g$keys$9005$PT8AO
                          g$clauses$9006$PT8AO
                          g$r$9007$PT8AO
                          g$mr$9008$PT8AO
                          g$pat$9009$PT8AO
                          g$fender$9010$PT8AO
                          g$expr$9011$PT8AO)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7214$PT8AO
                               g$pat$9009$PT8AO
                               g$keys$9005$PT8AO)))
                          (case-lambda
                            ((g$p$9014$PT8AO g$pvars$9015$PT8AO)
                             ((case-lambda
                                ((g$pvars$9016$PT8AO g$p$9017$PT8AO)
                                 (if (not (g$distinct-bound-ids?$6943$PT8AO
                                            (map car g$pvars$9016$PT8AO)))
                                   (g$invalid-ids-error$8974$PT8AO
                                     (map car g$pvars$9016$PT8AO)
                                     g$pat$9009$PT8AO
                                     '"pattern variable")
                                   (if (not (g$for-all$5365$PT8AO
                                              (case-lambda
                                                ((g$x$9018$PT8AO)
                                                 (not (g$ellipsis?$7216$PT8AO
                                                        (car g$x$9018$PT8AO)))))
                                              g$pvars$9016$PT8AO))
                                     (g$syntax-violation$7321$PT8AO
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9009$PT8AO)
                                     ((case-lambda
                                        ((g$y$9019$PT8AO)
                                         ((case-lambda
                                            ((g$test$9020$PT8AO)
                                             ((case-lambda
                                                ((g$conseq$9021$PT8AO)
                                                 ((case-lambda
                                                    ((g$altern$9022$PT8AO)
                                                     (list
                                                       (g$build-lambda$6868$PT8AO
                                                         '#f
                                                         (list g$y$9019$PT8AO)
                                                         (list
                                                           'if
                                                           g$test$9020$PT8AO
                                                           g$conseq$9021$PT8AO
                                                           g$altern$9022$PT8AO))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9004$PT8AO
                                                         (list
                                                           'quote
                                                           g$p$9017$PT8AO)))))
                                                  (g$gen-syntax-case$8976$PT8AO
                                                    g$x$9004$PT8AO
                                                    g$keys$9005$PT8AO
                                                    g$clauses$9006$PT8AO
                                                    g$r$9007$PT8AO
                                                    g$mr$9008$PT8AO))))
                                              (g$build-dispatch-call$8973$PT8AO
                                                g$pvars$9016$PT8AO
                                                g$expr$9011$PT8AO
                                                g$y$9019$PT8AO
                                                g$r$9007$PT8AO
                                                g$mr$9008$PT8AO))))
                                          (if (eq? g$fender$9010$PT8AO '#t)
                                            g$y$9019$PT8AO
                                            ((case-lambda
                                               ((g$call$9023$PT8AO)
                                                (list
                                                  'if
                                                  g$y$9019$PT8AO
                                                  g$call$9023$PT8AO
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$8973$PT8AO
                                               g$pvars$9016$PT8AO
                                               g$fender$9010$PT8AO
                                               g$y$9019$PT8AO
                                               g$r$9007$PT8AO
                                               g$mr$9008$PT8AO))))))
                                      (g$gen-lexical$6881$PT8AO 'tmp))))))
                              g$pvars$9015$PT8AO
                              g$p$9014$PT8AO)))))))
                   (g$gen-syntax-case$8976$PT8AO
                     (case-lambda
                       ((g$x$8987$PT8AO
                          g$keys$8988$PT8AO
                          g$clauses$8989$PT8AO
                          g$r$8990$PT8AO
                          g$mr$8991$PT8AO)
                        (if (null? g$clauses$8989$PT8AO)
                          (list '(primitive syntax-error) g$x$8987$PT8AO)
                          ((case-lambda
                             ((g$t$8992$PT8AO)
                              ((case-lambda
                                 ((g$ls/false$8993$PT8AO)
                                  (if g$ls/false$8993$PT8AO
                                    (apply
                                      (case-lambda
                                        ((g$pat$8994$PT8AO g$expr$8995$PT8AO)
                                         (if (if (g$id?$6937$PT8AO
                                                   g$pat$8994$PT8AO)
                                               (if (not (g$bound-id-member?$6944$PT8AO
                                                          g$pat$8994$PT8AO
                                                          g$keys$8988$PT8AO))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7216$PT8AO
                                                          g$pat$8994$PT8AO)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$6941$PT8AO
                                                 g$pat$8994$PT8AO
                                                 (g$scheme-stx$7158$PT8AO '_))
                                             (g$chi-expr$7233$PT8AO
                                               g$expr$8995$PT8AO
                                               g$r$8990$PT8AO
                                               g$mr$8991$PT8AO)
                                             ((case-lambda
                                                ((g$lab$8996$PT8AO
                                                   g$lex$8997$PT8AO)
                                                 ((case-lambda
                                                    ((g$body$8998$PT8AO)
                                                     (list
                                                       (g$build-lambda$6868$PT8AO
                                                         '#f
                                                         (list g$lex$8997$PT8AO)
                                                         g$body$8998$PT8AO)
                                                       g$x$8987$PT8AO)))
                                                  (g$chi-expr$7233$PT8AO
                                                    (g$add-subst$6927$PT8AO
                                                      (g$make-full-rib$6905$PT8AO
                                                        (list g$pat$8994$PT8AO)
                                                        (list g$lab$8996$PT8AO))
                                                      g$expr$8995$PT8AO)
                                                    (cons
                                                      (cons
                                                        g$lab$8996$PT8AO
                                                        (g$make-binding$6953$PT8AO
                                                          'syntax
                                                          (cons
                                                            g$lex$8997$PT8AO
                                                            '0)))
                                                      g$r$8990$PT8AO)
                                                    g$mr$8991$PT8AO))))
                                              (g$gen-label$6883$PT8AO
                                                g$pat$8994$PT8AO)
                                              (g$gen-lexical$6881$PT8AO
                                                g$pat$8994$PT8AO)))
                                           (g$gen-clause$8975$PT8AO
                                             g$x$8987$PT8AO
                                             g$keys$8988$PT8AO
                                             (cdr g$clauses$8989$PT8AO)
                                             g$r$8990$PT8AO
                                             g$mr$8991$PT8AO
                                             g$pat$8994$PT8AO
                                             '#t
                                             g$expr$8995$PT8AO))))
                                      g$ls/false$8993$PT8AO)
                                    ((case-lambda
                                       ((g$t$8999$PT8AO)
                                        ((case-lambda
                                           ((g$ls/false$9000$PT8AO)
                                            (if g$ls/false$9000$PT8AO
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9001$PT8AO
                                                     g$fender$9002$PT8AO
                                                     g$expr$9003$PT8AO)
                                                   (g$gen-clause$8975$PT8AO
                                                     g$x$8987$PT8AO
                                                     g$keys$8988$PT8AO
                                                     (cdr g$clauses$8989$PT8AO)
                                                     g$r$8990$PT8AO
                                                     g$mr$8991$PT8AO
                                                     g$pat$9001$PT8AO
                                                     g$fender$9002$PT8AO
                                                     g$expr$9003$PT8AO)))
                                                g$ls/false$9000$PT8AO)
                                              (g$syntax-violation$7321$PT8AO
                                                '#f
                                                '"invalid syntax"
                                                g$t$8999$PT8AO))))
                                         (g$syntax-dispatch$7215$PT8AO
                                           g$t$8999$PT8AO
                                           '(any any any)))))
                                     g$t$8992$PT8AO))))
                               (g$syntax-dispatch$7215$PT8AO
                                 g$t$8992$PT8AO
                                 '(any any)))))
                           (car g$clauses$8989$PT8AO)))))))
           (case-lambda
             ((g$e$8977$PT8AO g$r$8978$PT8AO g$mr$8979$PT8AO)
              ((case-lambda
                 ((g$t$8980$PT8AO)
                  ((case-lambda
                     ((g$ls/false$8981$PT8AO)
                      (if g$ls/false$8981$PT8AO
                        (apply
                          (case-lambda
                            ((g$expr$8982$PT8AO
                               g$keys$8983$PT8AO
                               g$clauses$8984$PT8AO)
                             (begin
                               (g$verify-literals$7218$PT8AO
                                 g$keys$8983$PT8AO
                                 g$e$8977$PT8AO)
                               ((case-lambda
                                  ((g$x$8985$PT8AO)
                                   ((case-lambda
                                      ((g$body$8986$PT8AO)
                                       (list
                                         (g$build-lambda$6868$PT8AO
                                           '#f
                                           (list g$x$8985$PT8AO)
                                           g$body$8986$PT8AO)
                                         (g$chi-expr$7233$PT8AO
                                           g$expr$8982$PT8AO
                                           g$r$8978$PT8AO
                                           g$mr$8979$PT8AO))))
                                    (g$gen-syntax-case$8976$PT8AO
                                      g$x$8985$PT8AO
                                      g$keys$8983$PT8AO
                                      g$clauses$8984$PT8AO
                                      g$r$8978$PT8AO
                                      g$mr$8979$PT8AO))))
                                (g$gen-lexical$6881$PT8AO 'tmp)))))
                          g$ls/false$8981$PT8AO)
                        (g$syntax-violation$7321$PT8AO
                          '#f
                          '"invalid syntax"
                          g$t$8980$PT8AO))))
                   (g$syntax-dispatch$7215$PT8AO
                     g$t$8980$PT8AO
                     '(_ any each-any . each-any)))))
               g$e$8977$PT8AO))))))))
   (g$ellipsis-map$7220$PT8AO
     g$ellipsis-map$10670$PT8AO
     (case-lambda
       ((g$proc$9043$PT8AO g$ls$9044$PT8AO . g$ls*$9045$PT8AO)
        (letrec* ((g$who$9046$PT8AO '...))
          (begin
            (if (list? g$ls$9044$PT8AO)
              (void)
              (assertion-violation
                g$who$9046$PT8AO
                '"not a list"
                g$ls$9044$PT8AO))
            (if (null? g$ls*$9045$PT8AO)
              (void)
              ((case-lambda
                 ((g$n$9047$PT8AO)
                  (for-each
                    (case-lambda
                      ((g$x$9048$PT8AO)
                       (begin
                         (if (list? g$x$9048$PT8AO)
                           (void)
                           (assertion-violation
                             g$who$9046$PT8AO
                             '"not a list"
                             g$x$9048$PT8AO))
                         (if (= (length g$x$9048$PT8AO) g$n$9047$PT8AO)
                           (void)
                           (assertion-violation
                             g$who$9046$PT8AO
                             '"length mismatch"
                             g$ls$9044$PT8AO
                             g$x$9048$PT8AO)))))
                    g$ls*$9045$PT8AO)))
               (length g$ls$9044$PT8AO)))
            (apply map g$proc$9043$PT8AO g$ls$9044$PT8AO g$ls*$9045$PT8AO))))))
   (g$syntax-transformer$7221$PT8AO
     g$syntax-transformer$10671$PT8AO
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9049$PT8AO
                     (case-lambda
                       ((g$src$9109$PT8AO
                          g$e$9110$PT8AO
                          g$r$9111$PT8AO
                          g$maps$9112$PT8AO
                          g$ellipsis?$9113$PT8AO
                          g$vec?$9114$PT8AO)
                        ((case-lambda
                           ((g$t$9115$PT8AO)
                            ((case-lambda
                               ((g$ls/false$9116$PT8AO)
                                (if (if g$ls/false$9116$PT8AO
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9117$PT8AO)
                                             (g$ellipsis?$9113$PT8AO
                                               g$dots$9117$PT8AO)))
                                          g$ls/false$9116$PT8AO))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9118$PT8AO)
                                       (g$syntax-violation$7321$PT8AO
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9109$PT8AO)))
                                    g$ls/false$9116$PT8AO)
                                  ((case-lambda
                                     ((g$t$9119$PT8AO)
                                      ((case-lambda
                                         ((g$ls/false$9120$PT8AO)
                                          (if (if g$ls/false$9120$PT8AO
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9121$PT8AO)
                                                       (g$id?$6937$PT8AO
                                                         g$id$9121$PT8AO)))
                                                    g$ls/false$9120$PT8AO))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9122$PT8AO)
                                                 ((case-lambda
                                                    ((g$label$9123$PT8AO)
                                                     ((case-lambda
                                                        ((g$b$9124$PT8AO)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$6954$PT8AO
                                                                        g$b$9124$PT8AO)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9127$PT8AO)
                                                                        (g$gen-ref$9050$PT8AO
                                                                          g$src$9109$PT8AO
                                                                          (car g$var.lev$9127$PT8AO)
                                                                          (cdr g$var.lev$9127$PT8AO)
                                                                          g$maps$9112$PT8AO)))
                                                                     (g$binding-value$6955$PT8AO
                                                                       g$b$9124$PT8AO))))
                                                                 (case-lambda
                                                                   ((g$var$9128$PT8AO
                                                                      g$maps$9129$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$maps$9130$PT8AO
                                                                          g$var$9131$PT8AO)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9131$PT8AO)
                                                                          g$maps$9130$PT8AO)))
                                                                     g$maps$9129$PT8AO
                                                                     g$var$9128$PT8AO))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9110$PT8AO)
                                                                 g$maps$9112$PT8AO)))))))
                                                      (g$label->binding$6952$PT8AO
                                                        g$label$9123$PT8AO
                                                        g$r$9111$PT8AO))))
                                                  (g$id->label$6950$PT8AO
                                                    g$e$9110$PT8AO))))
                                              g$ls/false$9120$PT8AO)
                                            ((case-lambda
                                               ((g$t$9132$PT8AO)
                                                ((case-lambda
                                                   ((g$ls/false$9133$PT8AO)
                                                    (if (if g$ls/false$9133$PT8AO
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9134$PT8AO
                                                                   g$e$9135$PT8AO)
                                                                 (g$ellipsis?$9113$PT8AO
                                                                   g$dots$9134$PT8AO)))
                                                              g$ls/false$9133$PT8AO))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9136$PT8AO
                                                             g$e$9137$PT8AO)
                                                           (if g$vec?$9114$PT8AO
                                                             (g$syntax-violation$7321$PT8AO
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9109$PT8AO)
                                                             (g$gen-syntax$9049$PT8AO
                                                               g$src$9109$PT8AO
                                                               g$e$9137$PT8AO
                                                               g$r$9111$PT8AO
                                                               g$maps$9112$PT8AO
                                                               (case-lambda
                                                                 ((g$x$9138$PT8AO)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9133$PT8AO)
                                                      ((case-lambda
                                                         ((g$t$9139$PT8AO)
                                                          ((case-lambda
                                                             ((g$ls/false$9140$PT8AO)
                                                              (if (if g$ls/false$9140$PT8AO
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9141$PT8AO
                                                                             g$dots$9142$PT8AO
                                                                             g$y$9143$PT8AO)
                                                                           (g$ellipsis?$9113$PT8AO
                                                                             g$dots$9142$PT8AO)))
                                                                        g$ls/false$9140$PT8AO))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9144$PT8AO
                                                                       g$dots$9145$PT8AO
                                                                       g$y$9146$PT8AO)
                                                                     ((letrec ((g$f$9147$PT8AO
                                                                                 (case-lambda
                                                                                   ((g$y$9148$PT8AO
                                                                                      g$k$9149$PT8AO)
                                                                                    ((case-lambda
                                                                                       ((g$t$9150$PT8AO)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9151$PT8AO)
                                                                                            (if g$ls/false$9151$PT8AO
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9149$PT8AO
                                                                                                     g$maps$9112$PT8AO)))
                                                                                                g$ls/false$9151$PT8AO)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9152$PT8AO)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9153$PT8AO)
                                                                                                      (if (if g$ls/false$9153$PT8AO
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9154$PT8AO
                                                                                                                     g$y$9155$PT8AO)
                                                                                                                   (g$ellipsis?$9113$PT8AO
                                                                                                                     g$dots$9154$PT8AO)))
                                                                                                                g$ls/false$9153$PT8AO))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9156$PT8AO
                                                                                                               g$y$9157$PT8AO)
                                                                                                             (g$f$9147$PT8AO
                                                                                                               g$y$9157$PT8AO
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9158$PT8AO)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9149$PT8AO
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9158$PT8AO))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9161$PT8AO
                                                                                                                         g$maps$9162$PT8AO)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9163$PT8AO
                                                                                                                             g$x$9164$PT8AO)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9163$PT8AO))
                                                                                                                             (g$syntax-violation$7321$PT8AO
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9109$PT8AO)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9052$PT8AO
                                                                                                                                 g$x$9164$PT8AO
                                                                                                                                 (car g$maps$9163$PT8AO))
                                                                                                                               (cdr g$maps$9163$PT8AO)))))
                                                                                                                        g$maps$9162$PT8AO
                                                                                                                        g$x$9161$PT8AO)))))))))
                                                                                                          g$ls/false$9153$PT8AO)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9165$PT8AO)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9166$PT8AO)
                                                                                                                (if g$ls/false$9166$PT8AO
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9049$PT8AO
                                                                                                                              g$src$9109$PT8AO
                                                                                                                              g$y$9148$PT8AO
                                                                                                                              g$r$9111$PT8AO
                                                                                                                              g$maps$9112$PT8AO
                                                                                                                              g$ellipsis?$9113$PT8AO
                                                                                                                              g$vec?$9114$PT8AO)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9169$PT8AO
                                                                                                                              g$maps$9170$PT8AO)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9171$PT8AO
                                                                                                                                  g$y$9172$PT8AO)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9149$PT8AO
                                                                                                                                       g$maps$9171$PT8AO)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9175$PT8AO
                                                                                                                                       g$maps$9176$PT8AO)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9177$PT8AO
                                                                                                                                           g$x$9178$PT8AO)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9051$PT8AO
                                                                                                                                             g$x$9178$PT8AO
                                                                                                                                             g$y$9172$PT8AO)
                                                                                                                                           g$maps$9177$PT8AO)))
                                                                                                                                      g$maps$9176$PT8AO
                                                                                                                                      g$x$9175$PT8AO))))))
                                                                                                                             g$maps$9170$PT8AO
                                                                                                                             g$y$9169$PT8AO))))))
                                                                                                                    g$ls/false$9166$PT8AO)
                                                                                                                  (g$syntax-violation$7321$PT8AO
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9165$PT8AO))))
                                                                                                             (g$syntax-dispatch$7215$PT8AO
                                                                                                               g$t$9165$PT8AO
                                                                                                               '_))))
                                                                                                         g$t$9152$PT8AO))))
                                                                                                   (g$syntax-dispatch$7215$PT8AO
                                                                                                     g$t$9152$PT8AO
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9150$PT8AO))))
                                                                                         (g$syntax-dispatch$7215$PT8AO
                                                                                           g$t$9150$PT8AO
                                                                                           '()))))
                                                                                     g$y$9148$PT8AO)))))
                                                                        g$f$9147$PT8AO)
                                                                      g$y$9146$PT8AO
                                                                      (case-lambda
                                                                        ((g$maps$9179$PT8AO)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9049$PT8AO
                                                                                g$src$9109$PT8AO
                                                                                g$x$9144$PT8AO
                                                                                g$r$9111$PT8AO
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9179$PT8AO)
                                                                                g$ellipsis?$9113$PT8AO
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9182$PT8AO
                                                                                g$maps$9183$PT8AO)
                                                                              ((case-lambda
                                                                                 ((g$maps$9184$PT8AO
                                                                                    g$x$9185$PT8AO)
                                                                                  (if (null?
                                                                                        (car g$maps$9184$PT8AO))
                                                                                    (g$syntax-violation$7321$PT8AO
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9109$PT8AO)
                                                                                    (values
                                                                                      (g$gen-map$9053$PT8AO
                                                                                        g$x$9185$PT8AO
                                                                                        (car g$maps$9184$PT8AO))
                                                                                      (cdr g$maps$9184$PT8AO)))))
                                                                               g$maps$9183$PT8AO
                                                                               g$x$9182$PT8AO)))))))))
                                                                  g$ls/false$9140$PT8AO)
                                                                ((case-lambda
                                                                   ((g$t$9186$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9187$PT8AO)
                                                                        (if g$ls/false$9187$PT8AO
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9188$PT8AO
                                                                                 g$y$9189$PT8AO)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9049$PT8AO
                                                                                      g$src$9109$PT8AO
                                                                                      g$x$9188$PT8AO
                                                                                      g$r$9111$PT8AO
                                                                                      g$maps$9112$PT8AO
                                                                                      g$ellipsis?$9113$PT8AO
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9192$PT8AO
                                                                                      g$maps$9193$PT8AO)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9194$PT8AO
                                                                                          g$xnew$9195$PT8AO)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9049$PT8AO
                                                                                               g$src$9109$PT8AO
                                                                                               g$y$9189$PT8AO
                                                                                               g$r$9111$PT8AO
                                                                                               g$maps$9194$PT8AO
                                                                                               g$ellipsis?$9113$PT8AO
                                                                                               g$vec?$9114$PT8AO)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9198$PT8AO
                                                                                               g$maps$9199$PT8AO)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9200$PT8AO
                                                                                                   g$ynew$9201$PT8AO)
                                                                                                 (values
                                                                                                   (g$gen-cons$9054$PT8AO
                                                                                                     g$e$9110$PT8AO
                                                                                                     g$x$9188$PT8AO
                                                                                                     g$y$9189$PT8AO
                                                                                                     g$xnew$9195$PT8AO
                                                                                                     g$ynew$9201$PT8AO)
                                                                                                   g$maps$9200$PT8AO)))
                                                                                              g$maps$9199$PT8AO
                                                                                              g$ynew$9198$PT8AO))))))
                                                                                     g$maps$9193$PT8AO
                                                                                     g$xnew$9192$PT8AO))))))
                                                                            g$ls/false$9187$PT8AO)
                                                                          ((case-lambda
                                                                             ((g$t$9202$PT8AO)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9203$PT8AO)
                                                                                  (if g$ls/false$9203$PT8AO
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9204$PT8AO)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9049$PT8AO
                                                                                                g$src$9109$PT8AO
                                                                                                g$ls$9204$PT8AO
                                                                                                g$r$9111$PT8AO
                                                                                                g$maps$9112$PT8AO
                                                                                                g$ellipsis?$9113$PT8AO
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9207$PT8AO
                                                                                                g$maps$9208$PT8AO)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9209$PT8AO
                                                                                                    g$lsnew$9210$PT8AO)
                                                                                                  (values
                                                                                                    (g$gen-vector$9055$PT8AO
                                                                                                      g$e$9110$PT8AO
                                                                                                      g$ls$9204$PT8AO
                                                                                                      g$lsnew$9210$PT8AO)
                                                                                                    g$maps$9209$PT8AO)))
                                                                                               g$maps$9208$PT8AO
                                                                                               g$lsnew$9207$PT8AO))))))
                                                                                      g$ls/false$9203$PT8AO)
                                                                                    ((case-lambda
                                                                                       ((g$t$9211$PT8AO)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9212$PT8AO)
                                                                                            (if g$ls/false$9212$PT8AO
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9110$PT8AO)
                                                                                                     g$maps$9112$PT8AO)))
                                                                                                g$ls/false$9212$PT8AO)
                                                                                              (g$syntax-violation$7321$PT8AO
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9211$PT8AO))))
                                                                                         (g$syntax-dispatch$7215$PT8AO
                                                                                           g$t$9211$PT8AO
                                                                                           '_))))
                                                                                     g$t$9202$PT8AO))))
                                                                               (g$syntax-dispatch$7215$PT8AO
                                                                                 g$t$9202$PT8AO
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9186$PT8AO))))
                                                                     (g$syntax-dispatch$7215$PT8AO
                                                                       g$t$9186$PT8AO
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9139$PT8AO))))
                                                           (g$syntax-dispatch$7215$PT8AO
                                                             g$t$9139$PT8AO
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9132$PT8AO))))
                                                 (g$syntax-dispatch$7215$PT8AO
                                                   g$t$9132$PT8AO
                                                   '(any any)))))
                                             g$t$9119$PT8AO))))
                                       (g$syntax-dispatch$7215$PT8AO
                                         g$t$9119$PT8AO
                                         'any))))
                                   g$t$9115$PT8AO))))
                             (g$syntax-dispatch$7215$PT8AO
                               g$t$9115$PT8AO
                               'any))))
                         g$e$9110$PT8AO))))
                   (g$gen-ref$9050$PT8AO
                     (case-lambda
                       ((g$src$9096$PT8AO
                          g$var$9097$PT8AO
                          g$level$9098$PT8AO
                          g$maps$9099$PT8AO)
                        (if (= g$level$9098$PT8AO '0)
                          (values g$var$9097$PT8AO g$maps$9099$PT8AO)
                          (if (null? g$maps$9099$PT8AO)
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9096$PT8AO)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9050$PT8AO
                                   g$src$9096$PT8AO
                                   g$var$9097$PT8AO
                                   (- g$level$9098$PT8AO '1)
                                   (cdr g$maps$9099$PT8AO))))
                              (case-lambda
                                ((g$outer-var$9102$PT8AO
                                   g$outer-maps$9103$PT8AO)
                                 ((case-lambda
                                    ((g$outer-maps$9104$PT8AO
                                       g$outer-var$9105$PT8AO)
                                     ((case-lambda
                                        ((g$t$9106$PT8AO)
                                         (if g$t$9106$PT8AO
                                           ((case-lambda
                                              ((g$b$9107$PT8AO)
                                               (values
                                                 (cdr g$b$9107$PT8AO)
                                                 g$maps$9099$PT8AO)))
                                            g$t$9106$PT8AO)
                                           ((case-lambda
                                              ((g$inner-var$9108$PT8AO)
                                               (values
                                                 g$inner-var$9108$PT8AO
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9105$PT8AO
                                                       g$inner-var$9108$PT8AO)
                                                     (car g$maps$9099$PT8AO))
                                                   g$outer-maps$9104$PT8AO))))
                                            (g$gen-lexical$6881$PT8AO 'tmp)))))
                                      (assq
                                        g$outer-var$9105$PT8AO
                                        (car g$maps$9099$PT8AO)))))
                                  g$outer-maps$9103$PT8AO
                                  g$outer-var$9102$PT8AO)))))))))
                   (g$gen-append$9051$PT8AO
                     (case-lambda
                       ((g$x$9094$PT8AO g$y$9095$PT8AO)
                        (if (equal? g$y$9095$PT8AO ''())
                          g$x$9094$PT8AO
                          (list 'append g$x$9094$PT8AO g$y$9095$PT8AO)))))
                   (g$gen-mappend$9052$PT8AO
                     (case-lambda
                       ((g$e$9092$PT8AO g$map-env$9093$PT8AO)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9053$PT8AO
                            g$e$9092$PT8AO
                            g$map-env$9093$PT8AO)))))
                   (g$gen-map$9053$PT8AO
                     (case-lambda
                       ((g$e$9083$PT8AO g$map-env$9084$PT8AO)
                        ((case-lambda
                           ((g$formals$9085$PT8AO g$actuals$9086$PT8AO)
                            (if (eq? (car g$e$9083$PT8AO) 'ref)
                              (car g$actuals$9086$PT8AO)
                              (if (g$for-all$5365$PT8AO
                                    (case-lambda
                                      ((g$x$9087$PT8AO)
                                       (if (eq? (car g$x$9087$PT8AO) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$4896$PT8AO g$x$9087$PT8AO)
                                             g$formals$9085$PT8AO))
                                         '#f)))
                                    (cdr g$e$9083$PT8AO))
                                ((case-lambda
                                   ((g$args$9088$PT8AO)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9083$PT8AO))
                                        g$args$9088$PT8AO))))
                                 (map ((case-lambda
                                         ((g$r$9089$PT8AO)
                                          (case-lambda
                                            ((g$x$9090$PT8AO)
                                             (cdr (assq
                                                    (g$cadr$4896$PT8AO
                                                      g$x$9090$PT8AO)
                                                    g$r$9089$PT8AO))))))
                                       (map cons
                                            g$formals$9085$PT8AO
                                            g$actuals$9086$PT8AO))
                                      (cdr g$e$9083$PT8AO)))
                                (g$cons*$5367$PT8AO
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9085$PT8AO
                                    g$e$9083$PT8AO)
                                  g$actuals$9086$PT8AO)))))
                         (map cdr g$map-env$9084$PT8AO)
                         (map (case-lambda
                                ((g$x$9091$PT8AO)
                                 (list 'ref (car g$x$9091$PT8AO))))
                              g$map-env$9084$PT8AO)))))
                   (g$gen-cons$9054$PT8AO
                     (case-lambda
                       ((g$e$9075$PT8AO
                          g$x$9076$PT8AO
                          g$y$9077$PT8AO
                          g$xnew$9078$PT8AO
                          g$ynew$9079$PT8AO)
                        ((case-lambda
                           ((g$t$9080$PT8AO)
                            (if (eqv? g$t$9080$PT8AO 'quote)
                              (if (eq? (car g$xnew$9078$PT8AO) 'quote)
                                ((case-lambda
                                   ((g$xnew$9081$PT8AO g$ynew$9082$PT8AO)
                                    (if (if (eq? g$xnew$9081$PT8AO
                                                 g$x$9076$PT8AO)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9082$PT8AO
                                                 g$y$9077$PT8AO))
                                          '#f)
                                      (list 'quote g$e$9075$PT8AO)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9081$PT8AO
                                          g$ynew$9082$PT8AO)))))
                                 (g$cadr$4896$PT8AO g$xnew$9078$PT8AO)
                                 (g$cadr$4896$PT8AO g$ynew$9079$PT8AO))
                                (if (null?
                                      (g$cadr$4896$PT8AO g$ynew$9079$PT8AO))
                                  (list 'list g$xnew$9078$PT8AO)
                                  (list
                                    'cons
                                    g$xnew$9078$PT8AO
                                    g$ynew$9079$PT8AO)))
                              (if (eqv? g$t$9080$PT8AO 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9078$PT8AO
                                    (cdr g$ynew$9079$PT8AO)))
                                (list
                                  'cons
                                  g$xnew$9078$PT8AO
                                  g$ynew$9079$PT8AO)))))
                         (car g$ynew$9079$PT8AO)))))
                   (g$gen-vector$9055$PT8AO
                     (case-lambda
                       ((g$e$9072$PT8AO g$ls$9073$PT8AO g$lsnew$9074$PT8AO)
                        (if (eq? (car g$lsnew$9074$PT8AO) 'quote)
                          (if (eq? (g$cadr$4896$PT8AO g$lsnew$9074$PT8AO)
                                   g$ls$9073$PT8AO)
                            (list 'quote g$e$9072$PT8AO)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$4896$PT8AO g$lsnew$9074$PT8AO))))
                          (if (eq? (car g$lsnew$9074$PT8AO) 'list)
                            (cons 'vector (cdr g$lsnew$9074$PT8AO))
                            (list 'list->vector g$lsnew$9074$PT8AO))))))
                   (g$regen$9056$PT8AO
                     (case-lambda
                       ((g$x$9069$PT8AO)
                        ((case-lambda
                           ((g$t$9070$PT8AO)
                            (if (eqv? g$t$9070$PT8AO 'ref)
                              (g$cadr$4896$PT8AO g$x$9069$PT8AO)
                              (if (eqv? g$t$9070$PT8AO 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$4896$PT8AO g$x$9069$PT8AO))
                                (if (eqv? g$t$9070$PT8AO 'quote)
                                  (list
                                    'quote
                                    (g$cadr$4896$PT8AO g$x$9069$PT8AO))
                                  (if (eqv? g$t$9070$PT8AO 'lambda)
                                    (g$build-lambda$6868$PT8AO
                                      '#f
                                      (g$cadr$4896$PT8AO g$x$9069$PT8AO)
                                      (g$regen$9056$PT8AO
                                        (g$caddr$4902$PT8AO g$x$9069$PT8AO)))
                                    (if (eqv? g$t$9070$PT8AO 'map)
                                      ((case-lambda
                                         ((g$ls$9071$PT8AO)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9071$PT8AO)))
                                       (map g$regen$9056$PT8AO
                                            (cdr g$x$9069$PT8AO)))
                                      (cons
                                        (list 'primitive (car g$x$9069$PT8AO))
                                        (map g$regen$9056$PT8AO
                                             (cdr g$x$9069$PT8AO))))))))))
                         (car g$x$9069$PT8AO))))))
           (case-lambda
             ((g$e$9057$PT8AO g$r$9058$PT8AO g$mr$9059$PT8AO)
              ((case-lambda
                 ((g$t$9060$PT8AO)
                  ((case-lambda
                     ((g$ls/false$9061$PT8AO)
                      (if g$ls/false$9061$PT8AO
                        (apply
                          (case-lambda
                            ((g$x$9062$PT8AO)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9049$PT8AO
                                    g$e$9057$PT8AO
                                    g$x$9062$PT8AO
                                    g$r$9058$PT8AO
                                    '()
                                    g$ellipsis?$7216$PT8AO
                                    '#f)))
                               (case-lambda
                                 ((g$e$9065$PT8AO g$maps$9066$PT8AO)
                                  ((case-lambda
                                     ((g$maps$9067$PT8AO g$e$9068$PT8AO)
                                      (g$regen$9056$PT8AO g$e$9068$PT8AO)))
                                   g$maps$9066$PT8AO
                                   g$e$9065$PT8AO))))))
                          g$ls/false$9061$PT8AO)
                        (g$syntax-violation$7321$PT8AO
                          '#f
                          '"invalid syntax"
                          g$t$9060$PT8AO))))
                   (g$syntax-dispatch$7215$PT8AO g$t$9060$PT8AO '(_ any)))))
               g$e$9057$PT8AO))))))))
   (g$core-macro-transformer$7222$PT8AO
     g$core-macro-transformer$10672$PT8AO
     (case-lambda
       ((g$name$9213$PT8AO)
        ((case-lambda
           ((g$t$9214$PT8AO)
            (if (eqv? g$t$9214$PT8AO 'quote)
              g$quote-transformer$7175$PT8AO
              (if (eqv? g$t$9214$PT8AO 'lambda)
                g$lambda-transformer$7177$PT8AO
                (if (eqv? g$t$9214$PT8AO 'case-lambda)
                  g$case-lambda-transformer$7176$PT8AO
                  (if (eqv? g$t$9214$PT8AO 'letrec)
                    g$letrec-transformer$7165$PT8AO
                    (if (eqv? g$t$9214$PT8AO 'letrec*)
                      g$letrec*-transformer$7166$PT8AO
                      (if (eqv? g$t$9214$PT8AO 'case)
                        g$case-transformer$7174$PT8AO
                        (if (eqv? g$t$9214$PT8AO 'if)
                          g$if-transformer$7173$PT8AO
                          (if (eqv? g$t$9214$PT8AO 'when)
                            g$when-transformer$7171$PT8AO
                            (if (eqv? g$t$9214$PT8AO 'unless)
                              g$unless-transformer$7172$PT8AO
                              (if (eqv? g$t$9214$PT8AO 'parameterize)
                                g$parameterize-transformer$7212$PT8AO
                                (if (eqv? g$t$9214$PT8AO 'foreign-call)
                                  g$foreign-call-transformer$7213$PT8AO
                                  (if (eqv? g$t$9214$PT8AO 'syntax-case)
                                    g$syntax-case-transformer$7219$PT8AO
                                    (if (eqv? g$t$9214$PT8AO 'syntax)
                                      g$syntax-transformer$7221$PT8AO
                                      (if (eqv? g$t$9214$PT8AO 'type-descriptor)
                                        g$type-descriptor-transformer$7168$PT8AO
                                        (if (eqv?
                                              g$t$9214$PT8AO
                                              'record-type-descriptor)
                                          g$record-type-descriptor-transformer$7169$PT8AO
                                          (if (eqv?
                                                g$t$9214$PT8AO
                                                'record-constructor-descriptor)
                                            g$record-constructor-descriptor-transformer$7170$PT8AO
                                            (if (eqv?
                                                  g$t$9214$PT8AO
                                                  'fluid-let-syntax)
                                              g$fluid-let-syntax-transformer$7167$PT8AO
                                              (assertion-violation
                                                'macro-transformer
                                                '"BUG: cannot find transformer"
                                                g$name$9213$PT8AO))))))))))))))))))))
         g$name$9213$PT8AO))))
   (g$file-options-macro$7223$PT8AO
     g$file-options-macro$10673$PT8AO
     (case-lambda
       ((g$x$9215$PT8AO)
        ((case-lambda
           ((g$t$9216$PT8AO)
            ((case-lambda
               ((g$ls/false$9217$PT8AO)
                (if (if g$ls/false$9217$PT8AO
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$opt*$9218$PT8AO)
                             (if (g$for-all$5365$PT8AO
                                   g$id?$6937$PT8AO
                                   g$opt*$9218$PT8AO)
                               (begin
                                 '#f
                                 (g$file-options-spec$6206$PT8AO
                                   (map g$id->sym$6938$PT8AO
                                        g$opt*$9218$PT8AO)))
                               '#f)))
                          g$ls/false$9217$PT8AO))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$opt*$9219$PT8AO)
                       (g$bless$7178$PT8AO
                         (list
                           'quote
                           (g$file-options-spec$6206$PT8AO
                             (map g$id->sym$6938$PT8AO g$opt*$9219$PT8AO))))))
                    g$ls/false$9217$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$9216$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$9216$PT8AO '(_ . each-any)))))
         g$x$9215$PT8AO))))
   (g$symbol-macro$7224$PT8AO
     g$symbol-macro$10674$PT8AO
     (case-lambda
       ((g$x$9220$PT8AO g$set$9221$PT8AO)
        ((case-lambda
           ((g$t$9222$PT8AO)
            ((case-lambda
               ((g$ls/false$9223$PT8AO)
                (if (if g$ls/false$9223$PT8AO
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9224$PT8AO)
                             (if (g$id?$6937$PT8AO g$name$9224$PT8AO)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$6938$PT8AO g$name$9224$PT8AO)
                                   g$set$9221$PT8AO))
                               '#f)))
                          g$ls/false$9223$PT8AO))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9225$PT8AO)
                       (g$bless$7178$PT8AO (list 'quote g$name$9225$PT8AO))))
                    g$ls/false$9223$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$9222$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$9222$PT8AO '(_ any)))))
         g$x$9220$PT8AO))))
   (g$macro-transformer$7225$PT8AO
     g$macro-transformer$10675$PT8AO
     (case-lambda
       ((g$x$9226$PT8AO)
        (if (procedure? g$x$9226$PT8AO)
          g$x$9226$PT8AO
          (if (symbol? g$x$9226$PT8AO)
            ((case-lambda
               ((g$t$9227$PT8AO)
                (if (eqv? g$t$9227$PT8AO 'define-record-type)
                  g$define-record-type-macro$7209$PT8AO
                  (if (eqv? g$t$9227$PT8AO 'define-struct)
                    g$define-struct-macro$7208$PT8AO
                    (if (eqv? g$t$9227$PT8AO 'include)
                      g$include-macro$7203$PT8AO
                      (if (eqv? g$t$9227$PT8AO 'cond)
                        g$cond-macro$7201$PT8AO
                        (if (eqv? g$t$9227$PT8AO 'let)
                          g$let-macro$7181$PT8AO
                          (if (eqv? g$t$9227$PT8AO 'do)
                            g$do-macro$7197$PT8AO
                            (if (eqv? g$t$9227$PT8AO 'or)
                              g$or-macro$7199$PT8AO
                              (if (eqv? g$t$9227$PT8AO 'and)
                                g$and-macro$7200$PT8AO
                                (if (eqv? g$t$9227$PT8AO 'let*)
                                  g$let*-macro$7198$PT8AO
                                  (if (eqv? g$t$9227$PT8AO 'let-values)
                                    g$let-values-macro$7182$PT8AO
                                    (if (eqv? g$t$9227$PT8AO 'let*-values)
                                      g$let*-values-macro$7183$PT8AO
                                      (if (eqv? g$t$9227$PT8AO 'syntax-rules)
                                        g$syntax-rules-macro$7205$PT8AO
                                        (if (eqv? g$t$9227$PT8AO 'quasiquote)
                                          g$quasiquote-macro$7206$PT8AO
                                          (if (eqv? g$t$9227$PT8AO 'quasisyntax)
                                            g$quasisyntax-macro$7207$PT8AO
                                            (if (eqv?
                                                  g$t$9227$PT8AO
                                                  'with-syntax)
                                              g$with-syntax-macro$7179$PT8AO
                                              (if (eqv?
                                                    g$t$9227$PT8AO
                                                    'identifier-syntax)
                                                g$identifier-syntax-macro$7196$PT8AO
                                                (if (eqv? g$t$9227$PT8AO 'time)
                                                  g$time-macro$7192$PT8AO
                                                  (if (eqv?
                                                        g$t$9227$PT8AO
                                                        'delay)
                                                    g$delay-macro$7193$PT8AO
                                                    (if (eqv?
                                                          g$t$9227$PT8AO
                                                          'assert)
                                                      g$assert-macro$7194$PT8AO
                                                      (if (eqv?
                                                            g$t$9227$PT8AO
                                                            'endianness)
                                                        g$endianness-macro$7195$PT8AO
                                                        (if (eqv?
                                                              g$t$9227$PT8AO
                                                              'guard)
                                                          g$guard-macro$7190$PT8AO
                                                          (if (eqv?
                                                                g$t$9227$PT8AO
                                                                'define-enumeration)
                                                            g$define-enumeration-macro$7191$PT8AO
                                                            (if (eqv?
                                                                  g$t$9227$PT8AO
                                                                  'trace-lambda)
                                                              g$trace-lambda-macro$7184$PT8AO
                                                              (if (eqv?
                                                                    g$t$9227$PT8AO
                                                                    'trace-define)
                                                                g$trace-define-macro$7185$PT8AO
                                                                (if (eqv?
                                                                      g$t$9227$PT8AO
                                                                      'trace-define-syntax)
                                                                  g$trace-define-syntax-macro$7186$PT8AO
                                                                  (if (eqv?
                                                                        g$t$9227$PT8AO
                                                                        'trace-let-syntax)
                                                                    g$trace-let-syntax-macro$7188$PT8AO
                                                                    (if (eqv?
                                                                          g$t$9227$PT8AO
                                                                          'trace-letrec-syntax)
                                                                      g$trace-letrec-syntax-macro$7189$PT8AO
                                                                      (if (eqv?
                                                                            g$t$9227$PT8AO
                                                                            'define-condition-type)
                                                                        g$define-condition-type-macro$7210$PT8AO
                                                                        (if (eqv?
                                                                              g$t$9227$PT8AO
                                                                              'include-into)
                                                                          g$include-into-macro$7204$PT8AO
                                                                          (if (eqv?
                                                                                g$t$9227$PT8AO
                                                                                'eol-style)
                                                                            (case-lambda
                                                                              ((g$x$9230$PT8AO)
                                                                               (g$symbol-macro$7224$PT8AO
                                                                                 g$x$9230$PT8AO
                                                                                 '(none
                                                                                    lf
                                                                                    cr
                                                                                    crlf
                                                                                    nel
                                                                                    crnel
                                                                                    ls))))
                                                                            (if (eqv?
                                                                                  g$t$9227$PT8AO
                                                                                  'error-handling-mode)
                                                                              (case-lambda
                                                                                ((g$x$9229$PT8AO)
                                                                                 (g$symbol-macro$7224$PT8AO
                                                                                   g$x$9229$PT8AO
                                                                                   '(ignore
                                                                                      raise
                                                                                      replace))))
                                                                              (if (eqv?
                                                                                    g$t$9227$PT8AO
                                                                                    'buffer-mode)
                                                                                (case-lambda
                                                                                  ((g$x$9228$PT8AO)
                                                                                   (g$symbol-macro$7224$PT8AO
                                                                                     g$x$9228$PT8AO
                                                                                     '(none
                                                                                        line
                                                                                        block))))
                                                                                (if (eqv?
                                                                                      g$t$9227$PT8AO
                                                                                      'file-options)
                                                                                  g$file-options-macro$7223$PT8AO
                                                                                  (if (memv
                                                                                        g$t$9227$PT8AO
                                                                                        '(... =>
                                                                                              _
                                                                                              else
                                                                                              unquote
                                                                                              unquote-splicing
                                                                                              unsyntax
                                                                                              unsyntax-splicing
                                                                                              fields
                                                                                              mutable
                                                                                              immutable
                                                                                              parent
                                                                                              protocol
                                                                                              sealed
                                                                                              opaque
                                                                                              nongenerative
                                                                                              parent-rtd))
                                                                                    g$incorrect-usage-macro$7211$PT8AO
                                                                                    (error
                                                                                      'macro-transformer
                                                                                      '"BUG: invalid macro"
                                                                                      g$x$9226$PT8AO)))))))))))))))))))))))))))))))))))))
             g$x$9226$PT8AO)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9226$PT8AO))))))
   (g$local-macro-transformer$7226$PT8AO
     g$local-macro-transformer$10676$PT8AO
     (case-lambda ((g$x$9231$PT8AO) (car g$x$9231$PT8AO))))
   (g$do-macro-call$7227$PT8AO
     g$do-macro-call$10677$PT8AO
     (case-lambda
       ((g$transformer$9232$PT8AO g$expr$9233$PT8AO)
        ((case-lambda
           ((g$out$9234$PT8AO)
            (begin
              ((letrec ((g$f$9235$PT8AO
                          (case-lambda
                            ((g$x$9236$PT8AO)
                             (if (g$stx?$6909$PT8AO g$x$9236$PT8AO)
                               (void)
                               (if (pair? g$x$9236$PT8AO)
                                 (begin
                                   (g$f$9235$PT8AO (car g$x$9236$PT8AO))
                                   (g$f$9235$PT8AO (cdr g$x$9236$PT8AO)))
                                 (if (vector? g$x$9236$PT8AO)
                                   (vector-for-each
                                     g$f$9235$PT8AO
                                     g$x$9236$PT8AO)
                                   (if (symbol? g$x$9236$PT8AO)
                                     (g$syntax-violation$7321$PT8AO
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9233$PT8AO
                                       g$x$9236$PT8AO)
                                     (void)))))))))
                 g$f$9235$PT8AO)
               g$out$9234$PT8AO)
              (g$add-mark$6926$PT8AO
                (g$gen-mark$6921$PT8AO)
                g$out$9234$PT8AO
                g$expr$9233$PT8AO))))
         (g$transformer$9232$PT8AO
           (g$add-mark$6926$PT8AO
             g$anti-mark$6922$PT8AO
             g$expr$9233$PT8AO
             '#f))))))
   (g$chi-macro$7228$PT8AO
     g$chi-macro$10678$PT8AO
     (case-lambda
       ((g$p$9237$PT8AO g$e$9238$PT8AO)
        (g$do-macro-call$7227$PT8AO
          (g$macro-transformer$7225$PT8AO g$p$9237$PT8AO)
          g$e$9238$PT8AO))))
   (g$chi-local-macro$7229$PT8AO
     g$chi-local-macro$10679$PT8AO
     (case-lambda
       ((g$p$9239$PT8AO g$e$9240$PT8AO)
        (g$do-macro-call$7227$PT8AO
          (g$local-macro-transformer$7226$PT8AO g$p$9239$PT8AO)
          g$e$9240$PT8AO))))
   (g$chi-global-macro$7230$PT8AO
     g$chi-global-macro$10680$PT8AO
     (case-lambda
       ((g$p$9241$PT8AO g$e$9242$PT8AO)
        ((case-lambda
           ((g$lib$9243$PT8AO g$loc$9244$PT8AO)
            (begin
              (g$visit-library$6753$PT8AO g$lib$9243$PT8AO)
              ((case-lambda
                 ((g$x$9245$PT8AO)
                  ((case-lambda
                     ((g$transformer$9246$PT8AO)
                      (g$do-macro-call$7227$PT8AO
                        g$transformer$9246$PT8AO
                        g$e$9242$PT8AO)))
                   (if (procedure? g$x$9245$PT8AO)
                     g$x$9245$PT8AO
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9245$PT8AO)))))
               (symbol-value g$loc$9244$PT8AO)))))
         (car g$p$9241$PT8AO)
         (cdr g$p$9241$PT8AO)))))
   (g$chi-expr*$7231$PT8AO
     g$chi-expr*$10681$PT8AO
     (case-lambda
       ((g$e*$9247$PT8AO g$r$9248$PT8AO g$mr$9249$PT8AO)
        (if (null? g$e*$9247$PT8AO)
          '()
          ((case-lambda
             ((g$e$9250$PT8AO)
              (cons
                g$e$9250$PT8AO
                (g$chi-expr*$7231$PT8AO
                  (cdr g$e*$9247$PT8AO)
                  g$r$9248$PT8AO
                  g$mr$9249$PT8AO))))
           (g$chi-expr$7233$PT8AO
             (car g$e*$9247$PT8AO)
             g$r$9248$PT8AO
             g$mr$9249$PT8AO))))))
   (g$chi-application$7232$PT8AO
     g$chi-application$10682$PT8AO
     (case-lambda
       ((g$e$9251$PT8AO g$r$9252$PT8AO g$mr$9253$PT8AO)
        ((case-lambda
           ((g$t$9254$PT8AO)
            ((case-lambda
               ((g$ls/false$9255$PT8AO)
                (if g$ls/false$9255$PT8AO
                  (apply
                    (case-lambda
                      ((g$rator$9256$PT8AO g$rands$9257$PT8AO)
                       ((case-lambda
                          ((g$rator$9258$PT8AO)
                           (cons
                             g$rator$9258$PT8AO
                             (g$chi-expr*$7231$PT8AO
                               g$rands$9257$PT8AO
                               g$r$9252$PT8AO
                               g$mr$9253$PT8AO))))
                        (g$chi-expr$7233$PT8AO
                          g$rator$9256$PT8AO
                          g$r$9252$PT8AO
                          g$mr$9253$PT8AO))))
                    g$ls/false$9255$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$9254$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$9254$PT8AO '(any . each-any)))))
         g$e$9251$PT8AO))))
   (g$chi-expr$7233$PT8AO
     g$chi-expr$10683$PT8AO
     (case-lambda
       ((g$e$9259$PT8AO g$r$9260$PT8AO g$mr$9261$PT8AO)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$6957$PT8AO g$e$9259$PT8AO g$r$9260$PT8AO)))
          (case-lambda
            ((g$type$9265$PT8AO g$value$9266$PT8AO g$kwd$9267$PT8AO)
             ((case-lambda
                ((g$kwd$9268$PT8AO g$value$9269$PT8AO g$type$9270$PT8AO)
                 ((case-lambda
                    ((g$t$9271$PT8AO)
                     (if (eqv? g$t$9271$PT8AO 'core-macro)
                       ((case-lambda
                          ((g$transformer$9297$PT8AO)
                           (g$transformer$9297$PT8AO
                             g$e$9259$PT8AO
                             g$r$9260$PT8AO
                             g$mr$9261$PT8AO)))
                        (g$core-macro-transformer$7222$PT8AO
                          g$value$9269$PT8AO))
                       (if (eqv? g$t$9271$PT8AO 'global)
                         ((case-lambda
                            ((g$lib$9295$PT8AO)
                             ((case-lambda
                                ((g$loc$9296$PT8AO)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7267$PT8AO)
                                        g$lib$9295$PT8AO)
                                       g$loc$9296$PT8AO))))))
                              (cdr g$value$9269$PT8AO))))
                          (car g$value$9269$PT8AO))
                         (if (eqv? g$t$9271$PT8AO 'core-prim)
                           ((case-lambda
                              ((g$name$9294$PT8AO)
                               (list 'primitive g$name$9294$PT8AO)))
                            g$value$9269$PT8AO)
                           (if (eqv? g$t$9271$PT8AO 'call)
                             (g$chi-application$7232$PT8AO
                               g$e$9259$PT8AO
                               g$r$9260$PT8AO
                               g$mr$9261$PT8AO)
                             (if (eqv? g$t$9271$PT8AO 'lexical)
                               ((case-lambda
                                  ((g$lex$9293$PT8AO) g$lex$9293$PT8AO))
                                (g$lexical-var$7159$PT8AO g$value$9269$PT8AO))
                               (if (memv
                                     g$t$9271$PT8AO
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7233$PT8AO
                                   (g$chi-global-macro$7230$PT8AO
                                     g$value$9269$PT8AO
                                     g$e$9259$PT8AO)
                                   g$r$9260$PT8AO
                                   g$mr$9261$PT8AO)
                                 (if (memv
                                       g$t$9271$PT8AO
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7233$PT8AO
                                     (g$chi-local-macro$7229$PT8AO
                                       g$value$9269$PT8AO
                                       g$e$9259$PT8AO)
                                     g$r$9260$PT8AO
                                     g$mr$9261$PT8AO)
                                   (if (memv g$t$9271$PT8AO '(macro macro!))
                                     (g$chi-expr$7233$PT8AO
                                       (g$chi-macro$7228$PT8AO
                                         g$value$9269$PT8AO
                                         g$e$9259$PT8AO)
                                       g$r$9260$PT8AO
                                       g$mr$9261$PT8AO)
                                     (if (eqv? g$t$9271$PT8AO 'constant)
                                       ((case-lambda
                                          ((g$datum$9292$PT8AO)
                                           (list 'quote g$datum$9292$PT8AO)))
                                        g$value$9269$PT8AO)
                                       (if (eqv? g$t$9271$PT8AO 'set!)
                                         (g$chi-set!$7234$PT8AO
                                           g$e$9259$PT8AO
                                           g$r$9260$PT8AO
                                           g$mr$9261$PT8AO)
                                         (if (eqv? g$t$9271$PT8AO 'begin)
                                           ((case-lambda
                                              ((g$t$9288$PT8AO)
                                               ((case-lambda
                                                  ((g$ls/false$9289$PT8AO)
                                                   (if g$ls/false$9289$PT8AO
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9290$PT8AO
                                                            g$x*$9291$PT8AO)
                                                          (g$build-sequence$6871$PT8AO
                                                            '#f
                                                            (g$chi-expr*$7231$PT8AO
                                                              (cons
                                                                g$x$9290$PT8AO
                                                                g$x*$9291$PT8AO)
                                                              g$r$9260$PT8AO
                                                              g$mr$9261$PT8AO))))
                                                       g$ls/false$9289$PT8AO)
                                                     (g$syntax-violation$7321$PT8AO
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9288$PT8AO))))
                                                (g$syntax-dispatch$7215$PT8AO
                                                  g$t$9288$PT8AO
                                                  '(_ any . each-any)))))
                                            g$e$9259$PT8AO)
                                           (if (memv
                                                 g$t$9271$PT8AO
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9273$PT8AO)
                                                 ((case-lambda
                                                    ((g$ls/false$9274$PT8AO)
                                                     (if (if g$ls/false$9274$PT8AO
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9275$PT8AO
                                                                    g$xrhs*$9276$PT8AO
                                                                    g$xbody$9277$PT8AO
                                                                    g$xbody*$9278$PT8AO)
                                                                  (if (g$valid-bound-ids?$6942$PT8AO
                                                                        g$xlhs*$9275$PT8AO)
                                                                    (void)
                                                                    (g$syntax-violation$7321$PT8AO
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9259$PT8AO))))
                                                               g$ls/false$9274$PT8AO))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9279$PT8AO
                                                              g$xrhs*$9280$PT8AO
                                                              g$xbody$9281$PT8AO
                                                              g$xbody*$9282$PT8AO)
                                                            ((case-lambda
                                                               ((g$xlab*$9283$PT8AO)
                                                                ((case-lambda
                                                                   ((g$xrib$9284$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$xb*$9285$PT8AO)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$6871$PT8AO
                                                                              '#f
                                                                              (g$chi-expr*$7231$PT8AO
                                                                                (map (case-lambda
                                                                                       ((g$x$9286$PT8AO)
                                                                                        (g$add-subst$6927$PT8AO
                                                                                          g$xrib$9284$PT8AO
                                                                                          g$x$9286$PT8AO)))
                                                                                     (cons
                                                                                       g$xbody$9281$PT8AO
                                                                                       g$xbody*$9282$PT8AO))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9283$PT8AO
                                                                                       g$xb*$9285$PT8AO)
                                                                                  g$r$9260$PT8AO)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9283$PT8AO
                                                                                       g$xb*$9285$PT8AO)
                                                                                  g$mr$9261$PT8AO))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9287$PT8AO)
                                                                             (g$make-eval-transformer$6969$PT8AO
                                                                               (g$expand-transformer$7260$PT8AO
                                                                                 (if (eq? g$type$9270$PT8AO
                                                                                          'let-syntax)
                                                                                   g$x$9287$PT8AO
                                                                                   (g$add-subst$6927$PT8AO
                                                                                     g$xrib$9284$PT8AO
                                                                                     g$x$9287$PT8AO))
                                                                                 g$mr$9261$PT8AO))))
                                                                          g$xrhs*$9280$PT8AO))))
                                                                 (g$make-full-rib$6905$PT8AO
                                                                   g$xlhs*$9279$PT8AO
                                                                   g$xlab*$9283$PT8AO))))
                                                             (map g$gen-label$6883$PT8AO
                                                                  g$xlhs*$9279$PT8AO))))
                                                         g$ls/false$9274$PT8AO)
                                                       (g$syntax-violation$7321$PT8AO
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9273$PT8AO))))
                                                  (g$syntax-dispatch$7215$PT8AO
                                                    g$t$9273$PT8AO
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9259$PT8AO)
                                             (if (eqv?
                                                   g$t$9271$PT8AO
                                                   'displaced-lexical)
                                               (g$syntax-violation$7321$PT8AO
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9259$PT8AO)
                                               (if (eqv? g$t$9271$PT8AO 'syntax)
                                                 (g$syntax-violation$7321$PT8AO
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9259$PT8AO)
                                                 (if (memv
                                                       g$t$9271$PT8AO
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7321$PT8AO
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9272$PT8AO)
                                                           (if (eqv?
                                                                 g$t$9272$PT8AO
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$9272$PT8AO
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$9272$PT8AO
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$9272$PT8AO
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$9272$PT8AO
                                                                         'import)
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9270$PT8AO)
                                                       '" was found where an expression was expected")
                                                     g$e$9259$PT8AO)
                                                   (if (eqv?
                                                         g$t$9271$PT8AO
                                                         'mutable)
                                                     (g$syntax-violation$7321$PT8AO
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9259$PT8AO)
                                                     (g$syntax-violation$7321$PT8AO
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9259$PT8AO)))))))))))))))))))
                  g$type$9270$PT8AO)))
              g$kwd$9267$PT8AO
              g$value$9266$PT8AO
              g$type$9265$PT8AO)))))))
   (g$chi-set!$7234$PT8AO
     g$chi-set!$10684$PT8AO
     (case-lambda
       ((g$e$9298$PT8AO g$r$9299$PT8AO g$mr$9300$PT8AO)
        ((case-lambda
           ((g$t$9301$PT8AO)
            ((case-lambda
               ((g$ls/false$9302$PT8AO)
                (if (if g$ls/false$9302$PT8AO
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9303$PT8AO g$v$9304$PT8AO)
                             (g$id?$6937$PT8AO g$x$9303$PT8AO)))
                          g$ls/false$9302$PT8AO))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9305$PT8AO g$v$9306$PT8AO)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$6957$PT8AO
                              g$x$9305$PT8AO
                              g$r$9299$PT8AO)))
                         (case-lambda
                           ((g$type$9310$PT8AO
                              g$value$9311$PT8AO
                              g$kwd$9312$PT8AO)
                            ((case-lambda
                               ((g$kwd$9313$PT8AO
                                  g$value$9314$PT8AO
                                  g$type$9315$PT8AO)
                                ((case-lambda
                                   ((g$t$9316$PT8AO)
                                    (if (eqv? g$t$9316$PT8AO 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$7161$PT8AO
                                          g$value$9314$PT8AO
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7159$PT8AO
                                            g$value$9314$PT8AO)
                                          (g$chi-expr$7233$PT8AO
                                            g$v$9306$PT8AO
                                            g$r$9299$PT8AO
                                            g$mr$9300$PT8AO)))
                                      (if (eqv? g$t$9316$PT8AO 'core-prim)
                                        (g$syntax-violation$7321$PT8AO
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9298$PT8AO)
                                        (if (eqv? g$t$9316$PT8AO 'global)
                                          (g$syntax-violation$7321$PT8AO
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9298$PT8AO)
                                          (if (eqv?
                                                g$t$9316$PT8AO
                                                'global-macro!)
                                            (g$chi-expr$7233$PT8AO
                                              (g$chi-global-macro$7230$PT8AO
                                                g$value$9314$PT8AO
                                                g$e$9298$PT8AO)
                                              g$r$9299$PT8AO
                                              g$mr$9300$PT8AO)
                                            (if (eqv?
                                                  g$t$9316$PT8AO
                                                  'local-macro!)
                                              (g$chi-expr$7233$PT8AO
                                                (g$chi-local-macro$7229$PT8AO
                                                  g$value$9314$PT8AO
                                                  g$e$9298$PT8AO)
                                                g$r$9299$PT8AO
                                                g$mr$9300$PT8AO)
                                              (if (eqv? g$t$9316$PT8AO 'mutable)
                                                (g$syntax-violation$7321$PT8AO
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9298$PT8AO)
                                                (g$syntax-violation$7321$PT8AO
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9298$PT8AO)))))))))
                                 g$type$9315$PT8AO)))
                             g$kwd$9312$PT8AO
                             g$value$9311$PT8AO
                             g$type$9310$PT8AO))))))
                    g$ls/false$9302$PT8AO)
                  (g$syntax-violation$7321$PT8AO
                    '#f
                    '"invalid syntax"
                    g$t$9301$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$9301$PT8AO '(_ any any)))))
         g$e$9298$PT8AO))))
   (g$verify-formals$7235$PT8AO
     g$verify-formals$10685$PT8AO
     (case-lambda
       ((g$fmls$9317$PT8AO g$stx$9318$PT8AO)
        ((case-lambda
           ((g$t$9319$PT8AO)
            ((case-lambda
               ((g$ls/false$9320$PT8AO)
                (if g$ls/false$9320$PT8AO
                  (apply
                    (case-lambda
                      ((g$x*$9321$PT8AO)
                       (if (g$valid-bound-ids?$6942$PT8AO g$x*$9321$PT8AO)
                         (void)
                         (g$invalid-fmls-error$7180$PT8AO
                           g$stx$9318$PT8AO
                           g$fmls$9317$PT8AO))))
                    g$ls/false$9320$PT8AO)
                  ((case-lambda
                     ((g$t$9322$PT8AO)
                      ((case-lambda
                         ((g$ls/false$9323$PT8AO)
                          (if g$ls/false$9323$PT8AO
                            (apply
                              (case-lambda
                                ((g$x*$9324$PT8AO g$x$9325$PT8AO)
                                 (if (g$valid-bound-ids?$6942$PT8AO
                                       (cons g$x$9325$PT8AO g$x*$9324$PT8AO))
                                   (void)
                                   (g$invalid-fmls-error$7180$PT8AO
                                     g$stx$9318$PT8AO
                                     g$fmls$9317$PT8AO))))
                              g$ls/false$9323$PT8AO)
                            ((case-lambda
                               ((g$t$9326$PT8AO)
                                ((case-lambda
                                   ((g$ls/false$9327$PT8AO)
                                    (if g$ls/false$9327$PT8AO
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9318$PT8AO)))
                                        g$ls/false$9327$PT8AO)
                                      (g$syntax-violation$7321$PT8AO
                                        '#f
                                        '"invalid syntax"
                                        g$t$9326$PT8AO))))
                                 (g$syntax-dispatch$7215$PT8AO
                                   g$t$9326$PT8AO
                                   '_))))
                             g$t$9322$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$9322$PT8AO
                         '#(each+ any () any)))))
                   g$t$9319$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$9319$PT8AO 'each-any))))
         g$fmls$9317$PT8AO))))
   (g$chi-lambda-clause$7236$PT8AO
     g$chi-lambda-clause$10686$PT8AO
     (case-lambda
       ((g$stx$9328$PT8AO
          g$fmls$9329$PT8AO
          g$body*$9330$PT8AO
          g$r$9331$PT8AO
          g$mr$9332$PT8AO)
        ((case-lambda
           ((g$t$9333$PT8AO)
            ((case-lambda
               ((g$ls/false$9334$PT8AO)
                (if g$ls/false$9334$PT8AO
                  (apply
                    (case-lambda
                      ((g$x*$9335$PT8AO)
                       (begin
                         (g$verify-formals$7235$PT8AO
                           g$fmls$9329$PT8AO
                           g$stx$9328$PT8AO)
                         ((case-lambda
                            ((g$lex*$9336$PT8AO g$lab*$9337$PT8AO)
                             (values
                               g$lex*$9336$PT8AO
                               (g$chi-internal$7244$PT8AO
                                 (g$add-subst$6927$PT8AO
                                   (g$make-full-rib$6905$PT8AO
                                     g$x*$9335$PT8AO
                                     g$lab*$9337$PT8AO)
                                   g$body*$9330$PT8AO)
                                 (g$add-lexicals$7163$PT8AO
                                   g$lab*$9337$PT8AO
                                   g$lex*$9336$PT8AO
                                   g$r$9331$PT8AO)
                                 g$mr$9332$PT8AO))))
                          (map g$gen-lexical$6881$PT8AO g$x*$9335$PT8AO)
                          (map g$gen-label$6883$PT8AO g$x*$9335$PT8AO)))))
                    g$ls/false$9334$PT8AO)
                  ((case-lambda
                     ((g$t$9338$PT8AO)
                      ((case-lambda
                         ((g$ls/false$9339$PT8AO)
                          (if g$ls/false$9339$PT8AO
                            (apply
                              (case-lambda
                                ((g$x*$9340$PT8AO g$x$9341$PT8AO)
                                 (begin
                                   (g$verify-formals$7235$PT8AO
                                     g$fmls$9329$PT8AO
                                     g$stx$9328$PT8AO)
                                   ((case-lambda
                                      ((g$lex*$9342$PT8AO
                                         g$lab*$9343$PT8AO
                                         g$lex$9344$PT8AO
                                         g$lab$9345$PT8AO)
                                       (values
                                         (append
                                           g$lex*$9342$PT8AO
                                           g$lex$9344$PT8AO)
                                         (g$chi-internal$7244$PT8AO
                                           (g$add-subst$6927$PT8AO
                                             (g$make-full-rib$6905$PT8AO
                                               (cons
                                                 g$x$9341$PT8AO
                                                 g$x*$9340$PT8AO)
                                               (cons
                                                 g$lab$9345$PT8AO
                                                 g$lab*$9343$PT8AO))
                                             g$body*$9330$PT8AO)
                                           (g$add-lexicals$7163$PT8AO
                                             (cons
                                               g$lab$9345$PT8AO
                                               g$lab*$9343$PT8AO)
                                             (cons
                                               g$lex$9344$PT8AO
                                               g$lex*$9342$PT8AO)
                                             g$r$9331$PT8AO)
                                           g$mr$9332$PT8AO))))
                                    (map g$gen-lexical$6881$PT8AO
                                         g$x*$9340$PT8AO)
                                    (map g$gen-label$6883$PT8AO g$x*$9340$PT8AO)
                                    (g$gen-lexical$6881$PT8AO g$x$9341$PT8AO)
                                    (g$gen-label$6883$PT8AO g$x$9341$PT8AO)))))
                              g$ls/false$9339$PT8AO)
                            ((case-lambda
                               ((g$t$9346$PT8AO)
                                ((case-lambda
                                   ((g$ls/false$9347$PT8AO)
                                    (if g$ls/false$9347$PT8AO
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7321$PT8AO
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9329$PT8AO)))
                                        g$ls/false$9347$PT8AO)
                                      (g$syntax-violation$7321$PT8AO
                                        '#f
                                        '"invalid syntax"
                                        g$t$9346$PT8AO))))
                                 (g$syntax-dispatch$7215$PT8AO
                                   g$t$9346$PT8AO
                                   '_))))
                             g$t$9338$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$9338$PT8AO
                         '#(each+ any () any)))))
                   g$t$9333$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$9333$PT8AO 'each-any))))
         g$fmls$9329$PT8AO))))
   (g$chi-lambda-clause*$7237$PT8AO
     g$chi-lambda-clause*$10687$PT8AO
     (case-lambda
       ((g$stx$9348$PT8AO
          g$fmls*$9349$PT8AO
          g$body**$9350$PT8AO
          g$r$9351$PT8AO
          g$mr$9352$PT8AO)
        (if (null? g$fmls*$9349$PT8AO)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7236$PT8AO
                 g$stx$9348$PT8AO
                 (car g$fmls*$9349$PT8AO)
                 (car g$body**$9350$PT8AO)
                 g$r$9351$PT8AO
                 g$mr$9352$PT8AO)))
            (case-lambda
              ((g$a$9355$PT8AO g$b$9356$PT8AO)
               ((case-lambda
                  ((g$b$9357$PT8AO g$a$9358$PT8AO)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7237$PT8AO
                          g$stx$9348$PT8AO
                          (cdr g$fmls*$9349$PT8AO)
                          (cdr g$body**$9350$PT8AO)
                          g$r$9351$PT8AO
                          g$mr$9352$PT8AO)))
                     (case-lambda
                       ((g$a*$9361$PT8AO g$b*$9362$PT8AO)
                        ((case-lambda
                           ((g$b*$9363$PT8AO g$a*$9364$PT8AO)
                            (values
                              (cons g$a$9358$PT8AO g$a*$9364$PT8AO)
                              (cons g$b$9357$PT8AO g$b*$9363$PT8AO))))
                         g$b*$9362$PT8AO
                         g$a*$9361$PT8AO))))))
                g$b$9356$PT8AO
                g$a$9355$PT8AO))))))))
   (g$chi-defun$7238$PT8AO
     g$chi-defun$10688$PT8AO
     (case-lambda
       ((g$x$9365$PT8AO g$r$9366$PT8AO g$mr$9367$PT8AO)
        ((case-lambda
           ((g$fmls$9368$PT8AO g$body*$9369$PT8AO)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7236$PT8AO
                   g$fmls$9368$PT8AO
                   g$fmls$9368$PT8AO
                   g$body*$9369$PT8AO
                   g$r$9366$PT8AO
                   g$mr$9367$PT8AO)))
              (case-lambda
                ((g$fmls$9372$PT8AO g$body$9373$PT8AO)
                 ((case-lambda
                    ((g$body$9374$PT8AO g$fmls$9375$PT8AO)
                     (g$build-lambda$6868$PT8AO
                       '#f
                       g$fmls$9375$PT8AO
                       g$body$9374$PT8AO)))
                  g$body$9373$PT8AO
                  g$fmls$9372$PT8AO))))))
         (car g$x$9365$PT8AO)
         (cdr g$x$9365$PT8AO)))))
   (g$chi-rhs$7239$PT8AO
     g$chi-rhs$10689$PT8AO
     (case-lambda
       ((g$rhs$9376$PT8AO g$r$9377$PT8AO g$mr$9378$PT8AO)
        ((case-lambda
           ((g$t$9379$PT8AO)
            (if (eqv? g$t$9379$PT8AO 'defun)
              (g$chi-defun$7238$PT8AO
                (cdr g$rhs$9376$PT8AO)
                g$r$9377$PT8AO
                g$mr$9378$PT8AO)
              (if (eqv? g$t$9379$PT8AO 'expr)
                ((case-lambda
                   ((g$expr$9381$PT8AO)
                    (g$chi-expr$7233$PT8AO
                      g$expr$9381$PT8AO
                      g$r$9377$PT8AO
                      g$mr$9378$PT8AO)))
                 (cdr g$rhs$9376$PT8AO))
                (if (eqv? g$t$9379$PT8AO 'top-expr)
                  ((case-lambda
                     ((g$expr$9380$PT8AO)
                      (g$build-sequence$6871$PT8AO
                        '#f
                        (list
                          (g$chi-expr$7233$PT8AO
                            g$expr$9380$PT8AO
                            g$r$9377$PT8AO
                            g$mr$9378$PT8AO)
                          (g$build-void$6872$PT8AO)))))
                   (cdr g$rhs$9376$PT8AO))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9376$PT8AO))))))
         (car g$rhs$9376$PT8AO)))))
   (g$expand-interaction-rhs*/init*$7240$PT8AO
     g$expand-interaction-rhs*/init*$10690$PT8AO
     (case-lambda
       ((g$lhs*$9382$PT8AO
          g$rhs*$9383$PT8AO
          g$init*$9384$PT8AO
          g$r$9385$PT8AO
          g$mr$9386$PT8AO)
        ((letrec ((g$f$9387$PT8AO
                    (case-lambda
                      ((g$lhs*$9388$PT8AO g$rhs*$9389$PT8AO)
                       (if (null? g$lhs*$9388$PT8AO)
                         (map (case-lambda
                                ((g$x$9390$PT8AO)
                                 (g$chi-expr$7233$PT8AO
                                   g$x$9390$PT8AO
                                   g$r$9385$PT8AO
                                   g$mr$9386$PT8AO)))
                              g$init*$9384$PT8AO)
                         ((case-lambda
                            ((g$lhs$9391$PT8AO g$rhs$9392$PT8AO)
                             ((case-lambda
                                ((g$t$9393$PT8AO)
                                 (if (eqv? g$t$9393$PT8AO 'defun)
                                   ((case-lambda
                                      ((g$rhs$9396$PT8AO)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9391$PT8AO
                                           g$rhs$9396$PT8AO)
                                         (g$f$9387$PT8AO
                                           (cdr g$lhs*$9388$PT8AO)
                                           (cdr g$rhs*$9389$PT8AO)))))
                                    (g$chi-defun$7238$PT8AO
                                      (cdr g$rhs$9392$PT8AO)
                                      g$r$9385$PT8AO
                                      g$mr$9386$PT8AO))
                                   (if (eqv? g$t$9393$PT8AO 'expr)
                                     ((case-lambda
                                        ((g$rhs$9395$PT8AO)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9391$PT8AO
                                             g$rhs$9395$PT8AO)
                                           (g$f$9387$PT8AO
                                             (cdr g$lhs*$9388$PT8AO)
                                             (cdr g$rhs*$9389$PT8AO)))))
                                      (g$chi-expr$7233$PT8AO
                                        (cdr g$rhs$9392$PT8AO)
                                        g$r$9385$PT8AO
                                        g$mr$9386$PT8AO))
                                     (if (eqv? g$t$9393$PT8AO 'top-expr)
                                       ((case-lambda
                                          ((g$e$9394$PT8AO)
                                           (cons
                                             g$e$9394$PT8AO
                                             (g$f$9387$PT8AO
                                               (cdr g$lhs*$9388$PT8AO)
                                               (cdr g$rhs*$9389$PT8AO)))))
                                        (g$chi-expr$7233$PT8AO
                                          (cdr g$rhs$9392$PT8AO)
                                          g$r$9385$PT8AO
                                          g$mr$9386$PT8AO))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9392$PT8AO))))))
                              (car g$rhs$9392$PT8AO))))
                          (car g$lhs*$9388$PT8AO)
                          (car g$rhs*$9389$PT8AO)))))))
           g$f$9387$PT8AO)
         g$lhs*$9382$PT8AO
         g$rhs*$9383$PT8AO))))
   (g$chi-rhs*$7241$PT8AO
     g$chi-rhs*$10691$PT8AO
     (case-lambda
       ((g$rhs*$9397$PT8AO g$r$9398$PT8AO g$mr$9399$PT8AO)
        ((letrec ((g$f$9400$PT8AO
                    (case-lambda
                      ((g$ls$9401$PT8AO)
                       (if (null? g$ls$9401$PT8AO)
                         '()
                         ((case-lambda
                            ((g$a$9402$PT8AO)
                             (cons
                               g$a$9402$PT8AO
                               (g$f$9400$PT8AO (cdr g$ls$9401$PT8AO)))))
                          (g$chi-rhs$7239$PT8AO
                            (car g$ls$9401$PT8AO)
                            g$r$9398$PT8AO
                            g$mr$9399$PT8AO)))))))
           g$f$9400$PT8AO)
         g$rhs*$9397$PT8AO))))
   (g$find-bound=?$7242$PT8AO
     g$find-bound=?$10692$PT8AO
     (case-lambda
       ((g$x$9403$PT8AO g$lhs*$9404$PT8AO g$rhs*$9405$PT8AO)
        (if (null? g$lhs*$9404$PT8AO)
          '#f
          (if (g$bound-id=?$6940$PT8AO g$x$9403$PT8AO (car g$lhs*$9404$PT8AO))
            (car g$rhs*$9405$PT8AO)
            (g$find-bound=?$7242$PT8AO
              g$x$9403$PT8AO
              (cdr g$lhs*$9404$PT8AO)
              (cdr g$rhs*$9405$PT8AO)))))))
   (g$find-dups$7243$PT8AO
     g$find-dups$10693$PT8AO
     (case-lambda
       ((g$ls$9406$PT8AO)
        ((letrec ((g$f$9407$PT8AO
                    (case-lambda
                      ((g$ls$9408$PT8AO g$dups$9409$PT8AO)
                       (if (null? g$ls$9408$PT8AO)
                         g$dups$9409$PT8AO
                         ((case-lambda
                            ((g$t$9410$PT8AO)
                             (if g$t$9410$PT8AO
                               ((case-lambda
                                  ((g$x$9411$PT8AO)
                                   (g$f$9407$PT8AO
                                     (cdr g$ls$9408$PT8AO)
                                     (cons
                                       (list
                                         (car g$ls$9408$PT8AO)
                                         g$x$9411$PT8AO)
                                       g$dups$9409$PT8AO))))
                                g$t$9410$PT8AO)
                               (g$f$9407$PT8AO
                                 (cdr g$ls$9408$PT8AO)
                                 g$dups$9409$PT8AO))))
                          (g$find-bound=?$7242$PT8AO
                            (car g$ls$9408$PT8AO)
                            (cdr g$ls$9408$PT8AO)
                            (cdr g$ls$9408$PT8AO))))))))
           g$f$9407$PT8AO)
         g$ls$9406$PT8AO
         '()))))
   (g$chi-internal$7244$PT8AO
     g$chi-internal$10694$PT8AO
     (case-lambda
       ((g$e*$9412$PT8AO g$r$9413$PT8AO g$mr$9414$PT8AO)
        ((case-lambda
           ((g$rib$9415$PT8AO)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7259$PT8AO
                   (map (case-lambda
                          ((g$x$9423$PT8AO)
                           (g$add-subst$6927$PT8AO
                             g$rib$9415$PT8AO
                             g$x$9423$PT8AO)))
                        (g$syntax->list$6936$PT8AO g$e*$9412$PT8AO))
                   g$r$9413$PT8AO
                   g$mr$9414$PT8AO
                   '()
                   '()
                   '()
                   '()
                   g$rib$9415$PT8AO
                   '#f)))
              (case-lambda
                ((g$e*$9424$PT8AO
                   g$r$9425$PT8AO
                   g$mr$9426$PT8AO
                   g$lex*$9427$PT8AO
                   g$rhs*$9428$PT8AO
                   g$mod**$9429$PT8AO
                   g$kwd*$9430$PT8AO)
                 ((case-lambda
                    ((g$kwd*$9431$PT8AO
                       g$mod**$9432$PT8AO
                       g$rhs*$9433$PT8AO
                       g$lex*$9434$PT8AO
                       g$mr$9435$PT8AO
                       g$r$9436$PT8AO
                       g$e*$9437$PT8AO)
                     (begin
                       (if (null? g$e*$9437$PT8AO)
                         (g$syntax-violation$7321$PT8AO
                           '#f
                           '"no expression in body"
                           g$e*$9437$PT8AO)
                         (void))
                       ((case-lambda
                          ((g$init*$9438$PT8AO)
                           ((case-lambda
                              ((g$rhs*$9439$PT8AO)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$6874$PT8AO
                                     '#f
                                     (reverse g$lex*$9434$PT8AO)
                                     (reverse g$rhs*$9439$PT8AO)
                                     (g$build-sequence$6871$PT8AO
                                       '#f
                                       g$init*$9438$PT8AO)))))))
                            (g$chi-rhs*$7241$PT8AO
                              g$rhs*$9433$PT8AO
                              g$r$9436$PT8AO
                              g$mr$9435$PT8AO))))
                        (g$chi-expr*$7231$PT8AO
                          (append
                            (apply append (reverse g$mod**$9432$PT8AO))
                            g$e*$9437$PT8AO)
                          g$r$9436$PT8AO
                          g$mr$9435$PT8AO)))))
                  g$kwd*$9430$PT8AO
                  g$mod**$9429$PT8AO
                  g$rhs*$9428$PT8AO
                  g$lex*$9427$PT8AO
                  g$mr$9426$PT8AO
                  g$r$9425$PT8AO
                  g$e*$9424$PT8AO))))))
         (g$make-empty-rib$6900$PT8AO)))))
   (g$parse-module$7245$PT8AO
     g$parse-module$10695$PT8AO
     (case-lambda
       ((g$e$9440$PT8AO)
        ((case-lambda
           ((g$t$9441$PT8AO)
            ((case-lambda
               ((g$ls/false$9442$PT8AO)
                (if g$ls/false$9442$PT8AO
                  (apply
                    (case-lambda
                      ((g$export*$9443$PT8AO g$b*$9444$PT8AO)
                       (begin
                         (if (g$for-all$5365$PT8AO
                               g$id?$6937$PT8AO
                               g$export*$9443$PT8AO)
                           (void)
                           (g$syntax-violation$7321$PT8AO
                             '#f
                             '"module exports must be identifiers"
                             g$e$9440$PT8AO))
                         (values
                           '#f
                           (list->vector g$export*$9443$PT8AO)
                           g$b*$9444$PT8AO))))
                    g$ls/false$9442$PT8AO)
                  ((case-lambda
                     ((g$t$9445$PT8AO)
                      ((case-lambda
                         ((g$ls/false$9446$PT8AO)
                          (if g$ls/false$9446$PT8AO
                            (apply
                              (case-lambda
                                ((g$name$9447$PT8AO
                                   g$export*$9448$PT8AO
                                   g$b*$9449$PT8AO)
                                 (begin
                                   (if (g$id?$6937$PT8AO g$name$9447$PT8AO)
                                     (void)
                                     (g$syntax-violation$7321$PT8AO
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9440$PT8AO))
                                   (if (g$for-all$5365$PT8AO
                                         g$id?$6937$PT8AO
                                         g$export*$9448$PT8AO)
                                     (void)
                                     (g$syntax-violation$7321$PT8AO
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9440$PT8AO))
                                   (values
                                     g$name$9447$PT8AO
                                     (list->vector g$export*$9448$PT8AO)
                                     g$b*$9449$PT8AO))))
                              g$ls/false$9446$PT8AO)
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"invalid syntax"
                              g$t$9445$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$9445$PT8AO
                         '(_ any each-any . each-any)))))
                   g$t$9441$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$9441$PT8AO
               '(_ each-any . each-any)))))
         g$e$9440$PT8AO))))
   (g$8129$7246$PT8AO
     g$8129$10696$PT8AO
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8132$PT8AO
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8131$7247$PT8AO g$8131$10697$PT8AO '#f)
   (g$8130$7248$PT8AO
     g$8130$10698$PT8AO
     (make-record-constructor-descriptor
       g$8129$7246$PT8AO
       '#f
       g$8131$7247$PT8AO))
   (g$module-interface?$7249$PT8AO
     g$module-interface?$10699$PT8AO
     (record-predicate g$8129$7246$PT8AO))
   (g$make-module-interface$7250$PT8AO
     g$make-module-interface$10700$PT8AO
     (record-constructor g$8130$7248$PT8AO))
   (g$module-interface-first-mark$7251$PT8AO
     g$module-interface-first-mark$10701$PT8AO
     (record-accessor g$8129$7246$PT8AO '0))
   (g$module-interface-exp-id-vec$7252$PT8AO
     g$module-interface-exp-id-vec$10702$PT8AO
     (record-accessor g$8129$7246$PT8AO '1))
   (g$module-interface-exp-lab-vec$7253$PT8AO
     g$module-interface-exp-lab-vec$10703$PT8AO
     (record-accessor g$8129$7246$PT8AO '2))
   (g$set-module-interface-first-mark!$7254$PT8AO
     g$set-module-interface-first-mark!$10704$PT8AO
     (record-mutator g$8129$7246$PT8AO '0))
   (g$set-module-interface-exp-id-vec!$7255$PT8AO
     g$set-module-interface-exp-id-vec!$10705$PT8AO
     (record-mutator g$8129$7246$PT8AO '1))
   (g$set-module-interface-exp-lab-vec!$7256$PT8AO
     g$set-module-interface-exp-lab-vec!$10706$PT8AO
     (record-mutator g$8129$7246$PT8AO '2))
   (g$module-interface-exp-id*$7257$PT8AO
     g$module-interface-exp-id*$10707$PT8AO
     (case-lambda
       ((g$iface$9450$PT8AO g$id$9451$PT8AO)
        (letrec* ((g$diff-marks$9452$PT8AO
                    (case-lambda
                      ((g$ls$9456$PT8AO g$x$9457$PT8AO)
                       (begin
                         (if (null? g$ls$9456$PT8AO)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9458$PT8AO)
                             (if (eq? g$a$9458$PT8AO g$x$9457$PT8AO)
                               '()
                               (cons
                                 g$a$9458$PT8AO
                                 (g$diff-marks$9452$PT8AO
                                   (cdr g$ls$9456$PT8AO)
                                   g$x$9457$PT8AO)))))
                          (car g$ls$9456$PT8AO)))))))
          ((case-lambda
             ((g$diff$9453$PT8AO g$id-vec$9454$PT8AO)
              (if (null? g$diff$9453$PT8AO)
                g$id-vec$9454$PT8AO
                (vector-map
                  (case-lambda
                    ((g$x$9455$PT8AO)
                     (g$make-stx$6910$PT8AO
                       (g$stx-expr$6911$PT8AO g$x$9455$PT8AO)
                       (append
                         g$diff$9453$PT8AO
                         (g$stx-mark*$6912$PT8AO g$x$9455$PT8AO))
                       '()
                       '())))
                  g$id-vec$9454$PT8AO))))
           (g$diff-marks$9452$PT8AO
             (g$stx-mark*$6912$PT8AO g$id$9451$PT8AO)
             (g$module-interface-first-mark$7251$PT8AO g$iface$9450$PT8AO))
           (g$module-interface-exp-id-vec$7252$PT8AO g$iface$9450$PT8AO))))))
   (g$chi-internal-module$7258$PT8AO
     g$chi-internal-module$10708$PT8AO
     (case-lambda
       ((g$e$9459$PT8AO
          g$r$9460$PT8AO
          g$mr$9461$PT8AO
          g$lex*$9462$PT8AO
          g$rhs*$9463$PT8AO
          g$mod**$9464$PT8AO
          g$kwd*$9465$PT8AO)
        (call-with-values
          (case-lambda (() (g$parse-module$7245$PT8AO g$e$9459$PT8AO)))
          (case-lambda
            ((g$name$9469$PT8AO g$exp-id*$9470$PT8AO g$e*$9471$PT8AO)
             ((case-lambda
                ((g$e*$9472$PT8AO g$exp-id*$9473$PT8AO g$name$9474$PT8AO)
                 ((case-lambda
                    ((g$rib$9475$PT8AO)
                     ((case-lambda
                        ((g$e*$9476$PT8AO)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7259$PT8AO
                                    g$e*$9476$PT8AO
                                    g$r$9460$PT8AO
                                    g$mr$9461$PT8AO
                                    g$lex*$9462$PT8AO
                                    g$rhs*$9463$PT8AO
                                    g$mod**$9464$PT8AO
                                    g$kwd*$9465$PT8AO
                                    g$rib$9475$PT8AO
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9484$PT8AO
                                    g$r$9485$PT8AO
                                    g$mr$9486$PT8AO
                                    g$lex*$9487$PT8AO
                                    g$rhs*$9488$PT8AO
                                    g$mod**$9489$PT8AO
                                    g$kwd*$9490$PT8AO)
                                  ((case-lambda
                                     ((g$kwd*$9491$PT8AO
                                        g$mod**$9492$PT8AO
                                        g$rhs*$9493$PT8AO
                                        g$lex*$9494$PT8AO
                                        g$mr$9495$PT8AO
                                        g$r$9496$PT8AO
                                        g$e*$9497$PT8AO)
                                      ((case-lambda
                                         ((g$exp-lab*$9498$PT8AO
                                            g$mod**$9499$PT8AO)
                                          (if (not g$name$9474$PT8AO)
                                            (values
                                              g$lex*$9494$PT8AO
                                              g$rhs*$9493$PT8AO
                                              g$exp-id*$9473$PT8AO
                                              g$exp-lab*$9498$PT8AO
                                              g$r$9496$PT8AO
                                              g$mr$9495$PT8AO
                                              g$mod**$9499$PT8AO
                                              g$kwd*$9491$PT8AO)
                                            ((case-lambda
                                               ((g$lab$9500$PT8AO
                                                  g$iface$9501$PT8AO)
                                                (values
                                                  g$lex*$9494$PT8AO
                                                  g$rhs*$9493$PT8AO
                                                  (vector g$name$9474$PT8AO)
                                                  (vector g$lab$9500$PT8AO)
                                                  (cons
                                                    (cons
                                                      g$lab$9500$PT8AO
                                                      (cons
                                                        '$module
                                                        g$iface$9501$PT8AO))
                                                    g$r$9496$PT8AO)
                                                  (cons
                                                    (cons
                                                      g$lab$9500$PT8AO
                                                      (cons
                                                        '$module
                                                        g$iface$9501$PT8AO))
                                                    g$mr$9495$PT8AO)
                                                  g$mod**$9499$PT8AO
                                                  g$kwd*$9491$PT8AO)))
                                             (g$gen-label$6883$PT8AO 'module)
                                             (g$make-module-interface$7250$PT8AO
                                               (car (g$stx-mark*$6912$PT8AO
                                                      g$name$9474$PT8AO))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9502$PT8AO)
                                                    (g$make-stx$6910$PT8AO
                                                      (g$stx-expr$6911$PT8AO
                                                        g$x$9502$PT8AO)
                                                      (g$stx-mark*$6912$PT8AO
                                                        g$x$9502$PT8AO)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9473$PT8AO)
                                               g$exp-lab*$9498$PT8AO)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9503$PT8AO)
                                            ((case-lambda
                                               ((g$t$9504$PT8AO)
                                                (if g$t$9504$PT8AO
                                                  g$t$9504$PT8AO
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7321$PT8AO
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9503$PT8AO)))))
                                             (g$id->label$6950$PT8AO
                                               (g$make-stx$6910$PT8AO
                                                 (g$id->sym$6938$PT8AO
                                                   g$x$9503$PT8AO)
                                                 (g$stx-mark*$6912$PT8AO
                                                   g$x$9503$PT8AO)
                                                 (list g$rib$9475$PT8AO)
                                                 '())))))
                                         g$exp-id*$9473$PT8AO)
                                       (cons
                                         g$e*$9497$PT8AO
                                         g$mod**$9492$PT8AO))))
                                   g$kwd*$9490$PT8AO
                                   g$mod**$9489$PT8AO
                                   g$rhs*$9488$PT8AO
                                   g$lex*$9487$PT8AO
                                   g$mr$9486$PT8AO
                                   g$r$9485$PT8AO
                                   g$e*$9484$PT8AO)))))))))
                      (map (case-lambda
                             ((g$x$9505$PT8AO)
                              (g$add-subst$6927$PT8AO
                                g$rib$9475$PT8AO
                                g$x$9505$PT8AO)))
                           (g$syntax->list$6936$PT8AO g$e*$9472$PT8AO)))))
                  (g$make-empty-rib$6900$PT8AO))))
              g$e*$9471$PT8AO
              g$exp-id*$9470$PT8AO
              g$name$9469$PT8AO)))))))
   (g$chi-body*$7259$PT8AO
     g$chi-body*$10709$PT8AO
     (case-lambda
       ((g$e*$9506$PT8AO
          g$r$9507$PT8AO
          g$mr$9508$PT8AO
          g$lex*$9509$PT8AO
          g$rhs*$9510$PT8AO
          g$mod**$9511$PT8AO
          g$kwd*$9512$PT8AO
          g$rib$9513$PT8AO
          g$top?$9514$PT8AO)
        (if (null? g$e*$9506$PT8AO)
          (values
            g$e*$9506$PT8AO
            g$r$9507$PT8AO
            g$mr$9508$PT8AO
            g$lex*$9509$PT8AO
            g$rhs*$9510$PT8AO
            g$mod**$9511$PT8AO
            g$kwd*$9512$PT8AO)
          ((case-lambda
             ((g$e$9515$PT8AO)
              (call-with-values
                (case-lambda
                  (() (g$syntax-type$6957$PT8AO g$e$9515$PT8AO g$r$9507$PT8AO)))
                (case-lambda
                  ((g$type$9519$PT8AO g$value$9520$PT8AO g$kwd$9521$PT8AO)
                   ((case-lambda
                      ((g$kwd$9522$PT8AO g$value$9523$PT8AO g$type$9524$PT8AO)
                       ((case-lambda
                          ((g$kwd*$9525$PT8AO)
                           ((case-lambda
                              ((g$t$9526$PT8AO)
                               (if (eqv? g$t$9526$PT8AO 'define)
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7155$PT8AO
                                        g$e$9515$PT8AO)))
                                   (case-lambda
                                     ((g$id$9632$PT8AO g$rhs$9633$PT8AO)
                                      ((case-lambda
                                         ((g$rhs$9634$PT8AO g$id$9635$PT8AO)
                                          (begin
                                            (if (g$bound-id-member?$6944$PT8AO
                                                  g$id$9635$PT8AO
                                                  g$kwd*$9525$PT8AO)
                                              (g$syntax-violation$7321$PT8AO
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9515$PT8AO)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$6885$PT8AO
                                                   g$id$9635$PT8AO
                                                   g$rib$9513$PT8AO)))
                                              (case-lambda
                                                ((g$lab$9638$PT8AO
                                                   g$lex$9639$PT8AO)
                                                 ((case-lambda
                                                    ((g$lex$9640$PT8AO
                                                       g$lab$9641$PT8AO)
                                                     (begin
                                                       (g$extend-rib!$6901$PT8AO
                                                         g$rib$9513$PT8AO
                                                         g$id$9635$PT8AO
                                                         g$lab$9641$PT8AO)
                                                       (g$chi-body*$7259$PT8AO
                                                         (cdr g$e*$9506$PT8AO)
                                                         (g$add-lexical$7162$PT8AO
                                                           g$lab$9641$PT8AO
                                                           g$lex$9640$PT8AO
                                                           g$r$9507$PT8AO)
                                                         g$mr$9508$PT8AO
                                                         (cons
                                                           g$lex$9640$PT8AO
                                                           g$lex*$9509$PT8AO)
                                                         (cons
                                                           g$rhs$9634$PT8AO
                                                           g$rhs*$9510$PT8AO)
                                                         g$mod**$9511$PT8AO
                                                         g$kwd*$9525$PT8AO
                                                         g$rib$9513$PT8AO
                                                         g$top?$9514$PT8AO))))
                                                  g$lex$9639$PT8AO
                                                  g$lab$9638$PT8AO)))))))
                                       g$rhs$9633$PT8AO
                                       g$id$9632$PT8AO))))
                                 (if (eqv? g$t$9526$PT8AO 'define-syntax)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7156$PT8AO
                                          g$e$9515$PT8AO)))
                                     (case-lambda
                                       ((g$id$9623$PT8AO g$rhs$9624$PT8AO)
                                        ((case-lambda
                                           ((g$rhs$9625$PT8AO g$id$9626$PT8AO)
                                            (begin
                                              (if (g$bound-id-member?$6944$PT8AO
                                                    g$id$9626$PT8AO
                                                    g$kwd*$9525$PT8AO)
                                                (g$syntax-violation$7321$PT8AO
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9515$PT8AO)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9627$PT8AO
                                                    g$expanded-rhs$9628$PT8AO)
                                                  (begin
                                                    (g$extend-rib!$6901$PT8AO
                                                      g$rib$9513$PT8AO
                                                      g$id$9626$PT8AO
                                                      g$lab$9627$PT8AO)
                                                    ((case-lambda
                                                       ((g$b$9629$PT8AO)
                                                        (g$chi-body*$7259$PT8AO
                                                          (cdr g$e*$9506$PT8AO)
                                                          (cons
                                                            (cons
                                                              g$lab$9627$PT8AO
                                                              g$b$9629$PT8AO)
                                                            g$r$9507$PT8AO)
                                                          (cons
                                                            (cons
                                                              g$lab$9627$PT8AO
                                                              g$b$9629$PT8AO)
                                                            g$mr$9508$PT8AO)
                                                          g$lex*$9509$PT8AO
                                                          g$rhs*$9510$PT8AO
                                                          g$mod**$9511$PT8AO
                                                          g$kwd*$9525$PT8AO
                                                          g$rib$9513$PT8AO
                                                          g$top?$9514$PT8AO)))
                                                     (g$make-eval-transformer$6969$PT8AO
                                                       g$expanded-rhs$9628$PT8AO)))))
                                               (g$gen-define-label$6886$PT8AO
                                                 g$id$9626$PT8AO
                                                 g$rib$9513$PT8AO)
                                               (g$expand-transformer$7260$PT8AO
                                                 g$rhs$9625$PT8AO
                                                 g$mr$9508$PT8AO)))))
                                         g$rhs$9624$PT8AO
                                         g$id$9623$PT8AO))))
                                   (if (memv
                                         g$t$9526$PT8AO
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9608$PT8AO)
                                         ((case-lambda
                                            ((g$ls/false$9609$PT8AO)
                                             (if (if g$ls/false$9609$PT8AO
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9610$PT8AO
                                                            g$xrhs*$9611$PT8AO
                                                            g$xbody*$9612$PT8AO)
                                                          (if (g$valid-bound-ids?$6942$PT8AO
                                                                g$xlhs*$9610$PT8AO)
                                                            (void)
                                                            (g$syntax-violation$7321$PT8AO
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9515$PT8AO))))
                                                       g$ls/false$9609$PT8AO))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9613$PT8AO
                                                      g$xrhs*$9614$PT8AO
                                                      g$xbody*$9615$PT8AO)
                                                    ((case-lambda
                                                       ((g$xlab*$9616$PT8AO)
                                                        ((case-lambda
                                                           ((g$xrib$9617$PT8AO)
                                                            ((case-lambda
                                                               ((g$xb*$9618$PT8AO)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7259$PT8AO
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9619$PT8AO)
                                                                                (g$add-subst$6927$PT8AO
                                                                                  g$xrib$9617$PT8AO
                                                                                  g$x$9619$PT8AO)))
                                                                             g$xbody*$9615$PT8AO)
                                                                        (cdr g$e*$9506$PT8AO))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9616$PT8AO
                                                                             g$xb*$9618$PT8AO)
                                                                        g$r$9507$PT8AO)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9616$PT8AO
                                                                             g$xb*$9618$PT8AO)
                                                                        g$mr$9508$PT8AO)
                                                                      g$lex*$9509$PT8AO
                                                                      g$rhs*$9510$PT8AO
                                                                      g$mod**$9511$PT8AO
                                                                      g$kwd*$9525$PT8AO
                                                                      g$rib$9513$PT8AO
                                                                      g$top?$9514$PT8AO))))))
                                                             (map (case-lambda
                                                                    ((g$x$9620$PT8AO)
                                                                     (g$make-eval-transformer$6969$PT8AO
                                                                       (g$expand-transformer$7260$PT8AO
                                                                         (if (eq? g$type$9524$PT8AO
                                                                                  'let-syntax)
                                                                           g$x$9620$PT8AO
                                                                           (g$add-subst$6927$PT8AO
                                                                             g$xrib$9617$PT8AO
                                                                             g$x$9620$PT8AO))
                                                                         g$mr$9508$PT8AO))))
                                                                  g$xrhs*$9614$PT8AO))))
                                                         (g$make-full-rib$6905$PT8AO
                                                           g$xlhs*$9613$PT8AO
                                                           g$xlab*$9616$PT8AO))))
                                                     (map g$gen-label$6883$PT8AO
                                                          g$xlhs*$9613$PT8AO))))
                                                 g$ls/false$9609$PT8AO)
                                               (g$syntax-violation$7321$PT8AO
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9608$PT8AO))))
                                          (g$syntax-dispatch$7215$PT8AO
                                            g$t$9608$PT8AO
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9515$PT8AO)
                                     (if (eqv? g$t$9526$PT8AO 'begin)
                                       ((case-lambda
                                          ((g$t$9605$PT8AO)
                                           ((case-lambda
                                              ((g$ls/false$9606$PT8AO)
                                               (if g$ls/false$9606$PT8AO
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9607$PT8AO)
                                                      (g$chi-body*$7259$PT8AO
                                                        (append
                                                          g$x*$9607$PT8AO
                                                          (cdr g$e*$9506$PT8AO))
                                                        g$r$9507$PT8AO
                                                        g$mr$9508$PT8AO
                                                        g$lex*$9509$PT8AO
                                                        g$rhs*$9510$PT8AO
                                                        g$mod**$9511$PT8AO
                                                        g$kwd*$9525$PT8AO
                                                        g$rib$9513$PT8AO
                                                        g$top?$9514$PT8AO)))
                                                   g$ls/false$9606$PT8AO)
                                                 (g$syntax-violation$7321$PT8AO
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9605$PT8AO))))
                                            (g$syntax-dispatch$7215$PT8AO
                                              g$t$9605$PT8AO
                                              '(_ . each-any)))))
                                        g$e$9515$PT8AO)
                                       (if (memv
                                             g$t$9526$PT8AO
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7259$PT8AO
                                           (cons
                                             (g$add-subst$6927$PT8AO
                                               g$rib$9513$PT8AO
                                               (g$chi-global-macro$7230$PT8AO
                                                 g$value$9523$PT8AO
                                                 g$e$9515$PT8AO))
                                             (cdr g$e*$9506$PT8AO))
                                           g$r$9507$PT8AO
                                           g$mr$9508$PT8AO
                                           g$lex*$9509$PT8AO
                                           g$rhs*$9510$PT8AO
                                           g$mod**$9511$PT8AO
                                           g$kwd*$9525$PT8AO
                                           g$rib$9513$PT8AO
                                           g$top?$9514$PT8AO)
                                         (if (memv
                                               g$t$9526$PT8AO
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7259$PT8AO
                                             (cons
                                               (g$add-subst$6927$PT8AO
                                                 g$rib$9513$PT8AO
                                                 (g$chi-local-macro$7229$PT8AO
                                                   g$value$9523$PT8AO
                                                   g$e$9515$PT8AO))
                                               (cdr g$e*$9506$PT8AO))
                                             g$r$9507$PT8AO
                                             g$mr$9508$PT8AO
                                             g$lex*$9509$PT8AO
                                             g$rhs*$9510$PT8AO
                                             g$mod**$9511$PT8AO
                                             g$kwd*$9525$PT8AO
                                             g$rib$9513$PT8AO
                                             g$top?$9514$PT8AO)
                                           (if (memv
                                                 g$t$9526$PT8AO
                                                 '(macro macro!))
                                             (g$chi-body*$7259$PT8AO
                                               (cons
                                                 (g$add-subst$6927$PT8AO
                                                   g$rib$9513$PT8AO
                                                   (g$chi-macro$7228$PT8AO
                                                     g$value$9523$PT8AO
                                                     g$e$9515$PT8AO))
                                                 (cdr g$e*$9506$PT8AO))
                                               g$r$9507$PT8AO
                                               g$mr$9508$PT8AO
                                               g$lex*$9509$PT8AO
                                               g$rhs*$9510$PT8AO
                                               g$mod**$9511$PT8AO
                                               g$kwd*$9525$PT8AO
                                               g$rib$9513$PT8AO
                                               g$top?$9514$PT8AO)
                                             (if (eqv? g$t$9526$PT8AO 'module)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7258$PT8AO
                                                      g$e$9515$PT8AO
                                                      g$r$9507$PT8AO
                                                      g$mr$9508$PT8AO
                                                      g$lex*$9509$PT8AO
                                                      g$rhs*$9510$PT8AO
                                                      g$mod**$9511$PT8AO
                                                      g$kwd*$9525$PT8AO)))
                                                 (case-lambda
                                                   ((g$lex*$9587$PT8AO
                                                      g$rhs*$9588$PT8AO
                                                      g$m-exp-id*$9589$PT8AO
                                                      g$m-exp-lab*$9590$PT8AO
                                                      g$r$9591$PT8AO
                                                      g$mr$9592$PT8AO
                                                      g$mod**$9593$PT8AO
                                                      g$kwd*$9594$PT8AO)
                                                    ((case-lambda
                                                       ((g$kwd*$9595$PT8AO
                                                          g$mod**$9596$PT8AO
                                                          g$mr$9597$PT8AO
                                                          g$r$9598$PT8AO
                                                          g$m-exp-lab*$9599$PT8AO
                                                          g$m-exp-id*$9600$PT8AO
                                                          g$rhs*$9601$PT8AO
                                                          g$lex*$9602$PT8AO)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$9603$PT8AO
                                                                 g$lab$9604$PT8AO)
                                                               (g$extend-rib!$6901$PT8AO
                                                                 g$rib$9513$PT8AO
                                                                 g$id$9603$PT8AO
                                                                 g$lab$9604$PT8AO)))
                                                            g$m-exp-id*$9600$PT8AO
                                                            g$m-exp-lab*$9599$PT8AO)
                                                          (g$chi-body*$7259$PT8AO
                                                            (cdr g$e*$9506$PT8AO)
                                                            g$r$9598$PT8AO
                                                            g$mr$9597$PT8AO
                                                            g$lex*$9602$PT8AO
                                                            g$rhs*$9601$PT8AO
                                                            g$mod**$9596$PT8AO
                                                            g$kwd*$9595$PT8AO
                                                            g$rib$9513$PT8AO
                                                            g$top?$9514$PT8AO))))
                                                     g$kwd*$9594$PT8AO
                                                     g$mod**$9593$PT8AO
                                                     g$mr$9592$PT8AO
                                                     g$r$9591$PT8AO
                                                     g$m-exp-lab*$9590$PT8AO
                                                     g$m-exp-id*$9589$PT8AO
                                                     g$rhs*$9588$PT8AO
                                                     g$lex*$9587$PT8AO))))
                                               (if (eqv?
                                                     g$t$9526$PT8AO
                                                     'library)
                                                 (begin
                                                   (g$library-expander$7308$PT8AO
                                                     (g$stx->datum$6948$PT8AO
                                                       g$e$9515$PT8AO))
                                                   (g$chi-body*$7259$PT8AO
                                                     (cdr g$e*$9506$PT8AO)
                                                     g$r$9507$PT8AO
                                                     g$mr$9508$PT8AO
                                                     g$lex*$9509$PT8AO
                                                     g$rhs*$9510$PT8AO
                                                     g$mod**$9511$PT8AO
                                                     g$kwd*$9525$PT8AO
                                                     g$rib$9513$PT8AO
                                                     g$top?$9514$PT8AO))
                                                 (if (eqv?
                                                       g$t$9526$PT8AO
                                                       'import)
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$9527$PT8AO
                                                                     (case-lambda
                                                                       ((g$e$9569$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$t$9570$PT8AO)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9571$PT8AO)
                                                                                (if (if g$ls/false$9571$PT8AO
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9572$PT8AO)
                                                                                             (g$id?$6937$PT8AO
                                                                                               g$id$9572$PT8AO)))
                                                                                          g$ls/false$9571$PT8AO))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9573$PT8AO)
                                                                                       '#t))
                                                                                    g$ls/false$9571$PT8AO)
                                                                                  ((case-lambda
                                                                                     ((g$t$9574$PT8AO)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9575$PT8AO)
                                                                                          (if g$ls/false$9575$PT8AO
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$9576$PT8AO)
                                                                                                 '#f))
                                                                                              g$ls/false$9575$PT8AO)
                                                                                            ((case-lambda
                                                                                               ((g$t$9577$PT8AO)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$9578$PT8AO)
                                                                                                    (if g$ls/false$9578$PT8AO
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7321$PT8AO
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$9569$PT8AO)))
                                                                                                        g$ls/false$9578$PT8AO)
                                                                                                      (g$syntax-violation$7321$PT8AO
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$9577$PT8AO))))
                                                                                                 (g$syntax-dispatch$7215$PT8AO
                                                                                                   g$t$9577$PT8AO
                                                                                                   '_))))
                                                                                             g$t$9574$PT8AO))))
                                                                                       (g$syntax-dispatch$7215$PT8AO
                                                                                         g$t$9574$PT8AO
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$9570$PT8AO))))
                                                                             (g$syntax-dispatch$7215$PT8AO
                                                                               g$t$9570$PT8AO
                                                                               '(_ any)))))
                                                                         g$e$9569$PT8AO))))
                                                                   (g$module-import$9528$PT8AO
                                                                     (case-lambda
                                                                       ((g$e$9552$PT8AO
                                                                          g$r$9553$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$t$9554$PT8AO)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9555$PT8AO)
                                                                                (if (if g$ls/false$9555$PT8AO
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9556$PT8AO)
                                                                                             (g$id?$6937$PT8AO
                                                                                               g$id$9556$PT8AO)))
                                                                                          g$ls/false$9555$PT8AO))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9557$PT8AO)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$6957$PT8AO
                                                                                              g$id$9557$PT8AO
                                                                                              g$r$9553$PT8AO)))
                                                                                         (case-lambda
                                                                                           ((g$type$9561$PT8AO
                                                                                              g$value$9562$PT8AO
                                                                                              g$kwd$9563$PT8AO)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$9564$PT8AO
                                                                                                  g$value$9565$PT8AO
                                                                                                  g$type$9566$PT8AO)
                                                                                                ((case-lambda
                                                                                                   ((g$t$9567$PT8AO)
                                                                                                    (if (eqv?
                                                                                                          g$t$9567$PT8AO
                                                                                                          '$module)
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$9568$PT8AO)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7257$PT8AO
                                                                                                              g$iface$9568$PT8AO
                                                                                                              g$id$9557$PT8AO)
                                                                                                            (g$module-interface-exp-lab-vec$7253$PT8AO
                                                                                                              g$iface$9568$PT8AO))))
                                                                                                       g$value$9565$PT8AO)
                                                                                                      (g$syntax-violation$7321$PT8AO
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$9552$PT8AO))))
                                                                                                 g$type$9566$PT8AO)))
                                                                                             g$kwd$9563$PT8AO
                                                                                             g$value$9562$PT8AO
                                                                                             g$type$9561$PT8AO))))))
                                                                                    g$ls/false$9555$PT8AO)
                                                                                  (g$syntax-violation$7321$PT8AO
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$9554$PT8AO))))
                                                                             (g$syntax-dispatch$7215$PT8AO
                                                                               g$t$9554$PT8AO
                                                                               '(_ any)))))
                                                                         g$e$9552$PT8AO))))
                                                                   (g$library-import$9529$PT8AO
                                                                     (case-lambda
                                                                       ((g$e$9538$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$t$9539$PT8AO)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9540$PT8AO)
                                                                                (if g$ls/false$9540$PT8AO
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$9541$PT8AO
                                                                                         g$imp*$9542$PT8AO)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7264$PT8AO
                                                                                              (g$syntax->datum$7324$PT8AO
                                                                                                g$imp*$9542$PT8AO))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$9545$PT8AO
                                                                                              g$subst-labels$9546$PT8AO)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$9547$PT8AO
                                                                                                  g$subst-names$9548$PT8AO)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$9549$PT8AO)
                                                                                                       (g$datum->stx$6920$PT8AO
                                                                                                         g$ctxt$9541$PT8AO
                                                                                                         g$name$9549$PT8AO)))
                                                                                                    g$subst-names$9548$PT8AO)
                                                                                                  g$subst-labels$9547$PT8AO)))
                                                                                             g$subst-labels$9546$PT8AO
                                                                                             g$subst-names$9545$PT8AO))))))
                                                                                    g$ls/false$9540$PT8AO)
                                                                                  ((case-lambda
                                                                                     ((g$t$9550$PT8AO)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9551$PT8AO)
                                                                                          (if g$ls/false$9551$PT8AO
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7321$PT8AO
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$9538$PT8AO)))
                                                                                              g$ls/false$9551$PT8AO)
                                                                                            (g$syntax-violation$7321$PT8AO
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9550$PT8AO))))
                                                                                       (g$syntax-dispatch$7215$PT8AO
                                                                                         g$t$9550$PT8AO
                                                                                         '_))))
                                                                                   g$t$9539$PT8AO))))
                                                                             (g$syntax-dispatch$7215$PT8AO
                                                                               g$t$9539$PT8AO
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$9538$PT8AO)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$9527$PT8AO
                                                                      g$e$9515$PT8AO)
                                                                  (g$module-import$9528$PT8AO
                                                                    g$e$9515$PT8AO
                                                                    g$r$9507$PT8AO)
                                                                  (g$library-import$9529$PT8AO
                                                                    g$e$9515$PT8AO))))
                                                             (case-lambda
                                                               ((g$id*$9532$PT8AO
                                                                  g$lab*$9533$PT8AO)
                                                                ((case-lambda
                                                                   ((g$lab*$9534$PT8AO
                                                                      g$id*$9535$PT8AO)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$9536$PT8AO
                                                                           g$lab$9537$PT8AO)
                                                                         (g$extend-rib!$6901$PT8AO
                                                                           g$rib$9513$PT8AO
                                                                           g$id$9536$PT8AO
                                                                           g$lab$9537$PT8AO)))
                                                                      g$id*$9535$PT8AO
                                                                      g$lab*$9534$PT8AO)))
                                                                 g$lab*$9533$PT8AO
                                                                 g$id*$9532$PT8AO))))))))
                                                     (g$chi-body*$7259$PT8AO
                                                       (cdr g$e*$9506$PT8AO)
                                                       g$r$9507$PT8AO
                                                       g$mr$9508$PT8AO
                                                       g$lex*$9509$PT8AO
                                                       g$rhs*$9510$PT8AO
                                                       g$mod**$9511$PT8AO
                                                       g$kwd*$9525$PT8AO
                                                       g$rib$9513$PT8AO
                                                       g$top?$9514$PT8AO))
                                                   (if g$top?$9514$PT8AO
                                                     (g$chi-body*$7259$PT8AO
                                                       (cdr g$e*$9506$PT8AO)
                                                       g$r$9507$PT8AO
                                                       g$mr$9508$PT8AO
                                                       (cons
                                                         (g$gen-lexical$6881$PT8AO
                                                           'dummy)
                                                         g$lex*$9509$PT8AO)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$9515$PT8AO)
                                                         g$rhs*$9510$PT8AO)
                                                       g$mod**$9511$PT8AO
                                                       g$kwd*$9525$PT8AO
                                                       g$rib$9513$PT8AO
                                                       g$top?$9514$PT8AO)
                                                     (values
                                                       g$e*$9506$PT8AO
                                                       g$r$9507$PT8AO
                                                       g$mr$9508$PT8AO
                                                       g$lex*$9509$PT8AO
                                                       g$rhs*$9510$PT8AO
                                                       g$mod**$9511$PT8AO
                                                       g$kwd*$9525$PT8AO))))))))))))))
                            g$type$9524$PT8AO)))
                        (if (g$id?$6937$PT8AO g$kwd$9522$PT8AO)
                          (cons g$kwd$9522$PT8AO g$kwd*$9512$PT8AO)
                          g$kwd*$9512$PT8AO))))
                    g$kwd$9521$PT8AO
                    g$value$9520$PT8AO
                    g$type$9519$PT8AO))))))
           (car g$e*$9506$PT8AO))))))
   (g$expand-transformer$7260$PT8AO
     g$expand-transformer$10710$PT8AO
     (case-lambda
       ((g$expr$9642$PT8AO g$r$9643$PT8AO)
        ((case-lambda
           ((g$rtc$9644$PT8AO)
            ((case-lambda
               ((g$expanded-rhs$9645$PT8AO)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$9646$PT8AO)
                        (case-lambda
                          ((g$x$9647$PT8AO)
                           (begin
                             (g$invoke-library$6752$PT8AO g$x$9647$PT8AO)
                             (g$mark-visit$9646$PT8AO g$x$9647$PT8AO))))))
                     (g$vis-collector$7268$PT8AO))
                    (g$rtc$9644$PT8AO))
                  g$expanded-rhs$9645$PT8AO)))
             ((case-lambda
                ((g$inv-collector$9652$PT8AO
                   g$vis-collector$9653$PT8AO
                   g$inv-collector$9654$PT8AO
                   g$vis-collector$9655$PT8AO)
                 ((case-lambda
                    ((g$swap$9656$PT8AO)
                     (dynamic-wind
                       g$swap$9656$PT8AO
                       (case-lambda
                         (()
                          (g$chi-expr$7233$PT8AO
                            g$expr$9642$PT8AO
                            g$r$9643$PT8AO
                            g$r$9643$PT8AO)))
                       g$swap$9656$PT8AO)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$9657$PT8AO)
                           (begin
                             (g$inv-collector$9652$PT8AO
                               g$inv-collector$9654$PT8AO)
                             (set! g$inv-collector$9654$PT8AO g$t$9657$PT8AO))))
                        (g$inv-collector$9652$PT8AO))
                       ((case-lambda
                          ((g$t$9658$PT8AO)
                           (begin
                             (g$vis-collector$9653$PT8AO
                               g$vis-collector$9655$PT8AO)
                             (set! g$vis-collector$9655$PT8AO g$t$9658$PT8AO))))
                        (g$vis-collector$9653$PT8AO))))))))
              g$inv-collector$7267$PT8AO
              g$vis-collector$7268$PT8AO
              g$rtc$9644$PT8AO
              (case-lambda ((g$x$9659$PT8AO) (values)))))))
         (g$make-collector$7266$PT8AO)))))
   (g$parse-exports$7261$PT8AO
     g$parse-exports$10711$PT8AO
     (case-lambda
       ((g$exp*$9660$PT8AO)
        (letrec* ((g$idsyn?$9661$PT8AO
                    (case-lambda
                      ((g$x$9676$PT8AO)
                       (symbol? (g$syntax->datum$7324$PT8AO g$x$9676$PT8AO))))))
          ((letrec ((g$f$9662$PT8AO
                      (case-lambda
                        ((g$exp*$9663$PT8AO g$int*$9664$PT8AO g$ext*$9665$PT8AO)
                         (if (null? g$exp*$9663$PT8AO)
                           (begin
                             ((case-lambda
                                ((g$id*$9666$PT8AO)
                                 (if (g$valid-bound-ids?$6942$PT8AO
                                       g$id*$9666$PT8AO)
                                   (void)
                                   (g$syntax-violation$7321$PT8AO
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7243$PT8AO
                                       g$id*$9666$PT8AO)))))
                              (map (case-lambda
                                     ((g$x$9667$PT8AO)
                                      (g$make-stx$6910$PT8AO
                                        g$x$9667$PT8AO
                                        g$top-mark*$6879$PT8AO
                                        '()
                                        '())))
                                   g$ext*$9665$PT8AO))
                             (values
                               (map g$syntax->datum$7324$PT8AO
                                    g$int*$9664$PT8AO)
                               (map g$syntax->datum$7324$PT8AO
                                    g$ext*$9665$PT8AO)))
                           ((case-lambda
                              ((g$t$9668$PT8AO)
                               ((case-lambda
                                  ((g$ls/false$9669$PT8AO)
                                   (if g$ls/false$9669$PT8AO
                                     (apply
                                       (case-lambda
                                         ((g$rename$9670$PT8AO
                                            g$i*$9671$PT8AO
                                            g$e*$9672$PT8AO)
                                          (begin
                                            (if (if (eq? (g$syntax->datum$7324$PT8AO
                                                           g$rename$9670$PT8AO)
                                                         'rename)
                                                  (if (g$for-all$5365$PT8AO
                                                        g$idsyn?$9661$PT8AO
                                                        g$i*$9671$PT8AO)
                                                    (begin
                                                      '#f
                                                      (g$for-all$5365$PT8AO
                                                        g$idsyn?$9661$PT8AO
                                                        g$e*$9672$PT8AO))
                                                    '#f)
                                                  '#f)
                                              (void)
                                              (g$syntax-violation$7321$PT8AO
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$9663$PT8AO)))
                                            (g$f$9662$PT8AO
                                              (cdr g$exp*$9663$PT8AO)
                                              (append
                                                g$i*$9671$PT8AO
                                                g$int*$9664$PT8AO)
                                              (append
                                                g$e*$9672$PT8AO
                                                g$ext*$9665$PT8AO)))))
                                       g$ls/false$9669$PT8AO)
                                     ((case-lambda
                                        ((g$t$9673$PT8AO)
                                         ((case-lambda
                                            ((g$ls/false$9674$PT8AO)
                                             (if g$ls/false$9674$PT8AO
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$9675$PT8AO)
                                                    (begin
                                                      (if (g$idsyn?$9661$PT8AO
                                                            g$ie$9675$PT8AO)
                                                        (void)
                                                        (g$syntax-violation$7321$PT8AO
                                                          'export
                                                          '"invalid export"
                                                          g$ie$9675$PT8AO))
                                                      (g$f$9662$PT8AO
                                                        (cdr g$exp*$9663$PT8AO)
                                                        (cons
                                                          g$ie$9675$PT8AO
                                                          g$int*$9664$PT8AO)
                                                        (cons
                                                          g$ie$9675$PT8AO
                                                          g$ext*$9665$PT8AO)))))
                                                 g$ls/false$9674$PT8AO)
                                               (g$syntax-violation$7321$PT8AO
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9673$PT8AO))))
                                          (g$syntax-dispatch$7215$PT8AO
                                            g$t$9673$PT8AO
                                            'any))))
                                      g$t$9668$PT8AO))))
                                (g$syntax-dispatch$7215$PT8AO
                                  g$t$9668$PT8AO
                                  '(any . #(each (any any)))))))
                            (car g$exp*$9663$PT8AO)))))))
             g$f$9662$PT8AO)
           g$exp*$9660$PT8AO
           '()
           '())))))
   (g$parse-library-name$7262$PT8AO
     g$parse-library-name$10712$PT8AO
     (case-lambda
       ((g$spec$9677$PT8AO)
        (letrec* ((g$parse$9678$PT8AO
                    (case-lambda
                      ((g$x$9685$PT8AO)
                       ((case-lambda
                          ((g$t$9686$PT8AO)
                           ((case-lambda
                              ((g$ls/false$9687$PT8AO)
                               (if (if g$ls/false$9687$PT8AO
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$9688$PT8AO)
                                            (g$for-all$5365$PT8AO
                                              (case-lambda
                                                ((g$x$9689$PT8AO)
                                                 ((case-lambda
                                                    ((g$x$9690$PT8AO)
                                                     (if (integer?
                                                           g$x$9690$PT8AO)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$9690$PT8AO))
                                                       '#f)))
                                                  (g$syntax->datum$7324$PT8AO
                                                    g$x$9689$PT8AO))))
                                              g$v*$9688$PT8AO)))
                                         g$ls/false$9687$PT8AO))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$9691$PT8AO)
                                      (values
                                        '()
                                        (map g$syntax->datum$7324$PT8AO
                                             g$v*$9691$PT8AO))))
                                   g$ls/false$9687$PT8AO)
                                 ((case-lambda
                                    ((g$t$9692$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$9693$PT8AO)
                                         (if (if g$ls/false$9693$PT8AO
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$9694$PT8AO
                                                        g$rest$9695$PT8AO)
                                                      (symbol?
                                                        (g$syntax->datum$7324$PT8AO
                                                          g$x$9694$PT8AO))))
                                                   g$ls/false$9693$PT8AO))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$9696$PT8AO
                                                  g$rest$9697$PT8AO)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$9678$PT8AO
                                                       g$rest$9697$PT8AO)))
                                                  (case-lambda
                                                    ((g$x*$9700$PT8AO
                                                       g$v*$9701$PT8AO)
                                                     ((case-lambda
                                                        ((g$v*$9702$PT8AO
                                                           g$x*$9703$PT8AO)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7324$PT8AO
                                                               g$x$9696$PT8AO)
                                                             g$x*$9703$PT8AO)
                                                           g$v*$9702$PT8AO)))
                                                      g$v*$9701$PT8AO
                                                      g$x*$9700$PT8AO))))))
                                             g$ls/false$9693$PT8AO)
                                           ((case-lambda
                                              ((g$t$9704$PT8AO)
                                               ((case-lambda
                                                  ((g$ls/false$9705$PT8AO)
                                                   (if g$ls/false$9705$PT8AO
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$9705$PT8AO)
                                                     ((case-lambda
                                                        ((g$t$9706$PT8AO)
                                                         ((case-lambda
                                                            ((g$ls/false$9707$PT8AO)
                                                             (if g$ls/false$9707$PT8AO
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7321$PT8AO
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$9677$PT8AO)))
                                                                 g$ls/false$9707$PT8AO)
                                                               (g$syntax-violation$7321$PT8AO
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$9706$PT8AO))))
                                                          (g$syntax-dispatch$7215$PT8AO
                                                            g$t$9706$PT8AO
                                                            '_))))
                                                      g$t$9704$PT8AO))))
                                                (g$syntax-dispatch$7215$PT8AO
                                                  g$t$9704$PT8AO
                                                  '()))))
                                            g$t$9692$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$9692$PT8AO
                                        '(any . any)))))
                                  g$t$9686$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO
                              g$t$9686$PT8AO
                              '(each-any)))))
                        g$x$9685$PT8AO)))))
          (call-with-values
            (case-lambda (() (g$parse$9678$PT8AO g$spec$9677$PT8AO)))
            (case-lambda
              ((g$name*$9681$PT8AO g$ver*$9682$PT8AO)
               ((case-lambda
                  ((g$ver*$9683$PT8AO g$name*$9684$PT8AO)
                   (begin
                     (if (null? g$name*$9684$PT8AO)
                       (g$syntax-violation$7321$PT8AO
                         '#f
                         '"empty library name"
                         g$spec$9677$PT8AO)
                       (void))
                     (values g$name*$9684$PT8AO g$ver*$9683$PT8AO))))
                g$ver*$9682$PT8AO
                g$name*$9681$PT8AO))))))))
   (g$parse-library$7263$PT8AO
     g$parse-library$10713$PT8AO
     (case-lambda
       ((g$e$9708$PT8AO)
        ((case-lambda
           ((g$t$9709$PT8AO)
            ((case-lambda
               ((g$ls/false$9710$PT8AO)
                (if (if g$ls/false$9710$PT8AO
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$9711$PT8AO
                               g$name*$9712$PT8AO
                               g$export$9713$PT8AO
                               g$exp*$9714$PT8AO
                               g$import$9715$PT8AO
                               g$imp*$9716$PT8AO
                               g$b*$9717$PT8AO)
                             (if (eq? (g$syntax->datum$7324$PT8AO
                                        g$export$9713$PT8AO)
                                      'export)
                               (if (eq? (g$syntax->datum$7324$PT8AO
                                          g$import$9715$PT8AO)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7324$PT8AO
                                          g$library$9711$PT8AO)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$9710$PT8AO))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$9718$PT8AO
                         g$name*$9719$PT8AO
                         g$export$9720$PT8AO
                         g$exp*$9721$PT8AO
                         g$import$9722$PT8AO
                         g$imp*$9723$PT8AO
                         g$b*$9724$PT8AO)
                       (values
                         g$name*$9719$PT8AO
                         g$exp*$9721$PT8AO
                         g$imp*$9723$PT8AO
                         g$b*$9724$PT8AO)))
                    g$ls/false$9710$PT8AO)
                  ((case-lambda
                     ((g$t$9725$PT8AO)
                      ((case-lambda
                         ((g$ls/false$9726$PT8AO)
                          (if g$ls/false$9726$PT8AO
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7321$PT8AO
                                   '#f
                                   '"malformed library"
                                   g$e$9708$PT8AO)))
                              g$ls/false$9726$PT8AO)
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"invalid syntax"
                              g$t$9725$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO g$t$9725$PT8AO '_))))
                   g$t$9709$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$9709$PT8AO
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$9708$PT8AO))))
   (g$parse-import-spec*$7264$PT8AO
     g$parse-import-spec*$10714$PT8AO
     (case-lambda
       ((g$imp*$9727$PT8AO)
        (letrec* ((g$idsyn?$9728$PT8AO
                    (case-lambda
                      ((g$x$9987$PT8AO)
                       (symbol? (g$syntax->datum$7324$PT8AO g$x$9987$PT8AO)))))
                  (g$dup-error$9729$PT8AO
                    (case-lambda
                      ((g$name$9986$PT8AO)
                       (g$syntax-violation$7321$PT8AO
                         'import
                         '"two imports with different bindings"
                         g$name$9986$PT8AO))))
                  (g$merge-substs$9730$PT8AO
                    (case-lambda
                      ((g$s$9977$PT8AO g$subst$9978$PT8AO)
                       (letrec* ((g$insert-to-subst$9979$PT8AO
                                   (case-lambda
                                     ((g$a$9980$PT8AO g$subst$9981$PT8AO)
                                      ((case-lambda
                                         ((g$name$9982$PT8AO g$label$9983$PT8AO)
                                          ((case-lambda
                                             ((g$t$9984$PT8AO)
                                              (if g$t$9984$PT8AO
                                                ((case-lambda
                                                   ((g$x$9985$PT8AO)
                                                    (if (eq? (cdr g$x$9985$PT8AO)
                                                             g$label$9983$PT8AO)
                                                      g$subst$9981$PT8AO
                                                      (g$dup-error$9729$PT8AO
                                                        g$name$9982$PT8AO))))
                                                 g$t$9984$PT8AO)
                                                (cons
                                                  g$a$9980$PT8AO
                                                  g$subst$9981$PT8AO))))
                                           (assq
                                             g$name$9982$PT8AO
                                             g$subst$9981$PT8AO))))
                                       (car g$a$9980$PT8AO)
                                       (cdr g$a$9980$PT8AO))))))
                         (if (null? g$s$9977$PT8AO)
                           g$subst$9978$PT8AO
                           (g$insert-to-subst$9979$PT8AO
                             (car g$s$9977$PT8AO)
                             (g$merge-substs$9730$PT8AO
                               (cdr g$s$9977$PT8AO)
                               g$subst$9978$PT8AO)))))))
                  (g$exclude*$9731$PT8AO
                    (case-lambda
                      ((g$sym*$9953$PT8AO g$subst$9954$PT8AO)
                       (letrec* ((g$exclude$9955$PT8AO
                                   (case-lambda
                                     ((g$sym$9968$PT8AO g$subst$9969$PT8AO)
                                      (if (null? g$subst$9969$PT8AO)
                                        (g$syntax-violation$7321$PT8AO
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$9968$PT8AO)
                                        (if (eq? g$sym$9968$PT8AO
                                                 (g$caar$4895$PT8AO
                                                   g$subst$9969$PT8AO))
                                          (values
                                            (g$cdar$4897$PT8AO
                                              g$subst$9969$PT8AO)
                                            (cdr g$subst$9969$PT8AO))
                                          ((case-lambda
                                             ((g$a$9970$PT8AO)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$9955$PT8AO
                                                     g$sym$9968$PT8AO
                                                     (cdr g$subst$9969$PT8AO))))
                                                (case-lambda
                                                  ((g$old$9973$PT8AO
                                                     g$subst$9974$PT8AO)
                                                   ((case-lambda
                                                      ((g$subst$9975$PT8AO
                                                         g$old$9976$PT8AO)
                                                       (values
                                                         g$old$9976$PT8AO
                                                         (cons
                                                           g$a$9970$PT8AO
                                                           g$subst$9975$PT8AO))))
                                                    g$subst$9974$PT8AO
                                                    g$old$9973$PT8AO))))))
                                           (car g$subst$9969$PT8AO))))))))
                         (if (null? g$sym*$9953$PT8AO)
                           (values '() g$subst$9954$PT8AO)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$9955$PT8AO
                                  (car g$sym*$9953$PT8AO)
                                  g$subst$9954$PT8AO)))
                             (case-lambda
                               ((g$old$9958$PT8AO g$subst$9959$PT8AO)
                                ((case-lambda
                                   ((g$subst$9960$PT8AO g$old$9961$PT8AO)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$9731$PT8AO
                                           (cdr g$sym*$9953$PT8AO)
                                           g$subst$9960$PT8AO)))
                                      (case-lambda
                                        ((g$old*$9964$PT8AO g$subst$9965$PT8AO)
                                         ((case-lambda
                                            ((g$subst$9966$PT8AO
                                               g$old*$9967$PT8AO)
                                             (values
                                               (cons
                                                 g$old$9961$PT8AO
                                                 g$old*$9967$PT8AO)
                                               g$subst$9966$PT8AO)))
                                          g$subst$9965$PT8AO
                                          g$old*$9964$PT8AO))))))
                                 g$subst$9959$PT8AO
                                 g$old$9958$PT8AO)))))))))
                  (g$find*$9732$PT8AO
                    (case-lambda
                      ((g$sym*$9949$PT8AO g$subst$9950$PT8AO)
                       (map (case-lambda
                              ((g$x$9951$PT8AO)
                               ((case-lambda
                                  ((g$t$9952$PT8AO)
                                   (if g$t$9952$PT8AO
                                     (cdr g$t$9952$PT8AO)
                                     (g$syntax-violation$7321$PT8AO
                                       'import
                                       '"cannot find identifier"
                                       g$x$9951$PT8AO))))
                                (assq g$x$9951$PT8AO g$subst$9950$PT8AO))))
                            g$sym*$9949$PT8AO))))
                  (g$rem*$9733$PT8AO
                    (case-lambda
                      ((g$sym*$9945$PT8AO g$subst$9946$PT8AO)
                       ((letrec ((g$f$9947$PT8AO
                                   (case-lambda
                                     ((g$subst$9948$PT8AO)
                                      (if (null? g$subst$9948$PT8AO)
                                        '()
                                        (if (memq
                                              (g$caar$4895$PT8AO
                                                g$subst$9948$PT8AO)
                                              g$sym*$9945$PT8AO)
                                          (g$f$9947$PT8AO
                                            (cdr g$subst$9948$PT8AO))
                                          (cons
                                            (car g$subst$9948$PT8AO)
                                            (g$f$9947$PT8AO
                                              (cdr g$subst$9948$PT8AO)))))))))
                          g$f$9947$PT8AO)
                        g$subst$9946$PT8AO))))
                  (g$remove-dups$9734$PT8AO
                    (case-lambda
                      ((g$ls$9944$PT8AO)
                       (if (null? g$ls$9944$PT8AO)
                         '()
                         (if (memq (car g$ls$9944$PT8AO) (cdr g$ls$9944$PT8AO))
                           (g$remove-dups$9734$PT8AO (cdr g$ls$9944$PT8AO))
                           (cons
                             (car g$ls$9944$PT8AO)
                             (g$remove-dups$9734$PT8AO
                               (cdr g$ls$9944$PT8AO))))))))
                  (g$parse-library-name$9735$PT8AO
                    (case-lambda
                      ((g$spec$9829$PT8AO)
                       (letrec* ((g$subversion?$9830$PT8AO
                                   (case-lambda
                                     ((g$x$9943$PT8AO)
                                      (if (integer? g$x$9943$PT8AO)
                                        (if (exact? g$x$9943$PT8AO)
                                          (begin '#f (>= g$x$9943$PT8AO '0))
                                          '#f)
                                        '#f))))
                                 (g$subversion-pred$9831$PT8AO
                                   (case-lambda
                                     ((g$x*$9895$PT8AO)
                                      ((case-lambda
                                         ((g$t$9896$PT8AO)
                                          ((case-lambda
                                             ((g$ls/false$9897$PT8AO)
                                              (if (if g$ls/false$9897$PT8AO
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$9898$PT8AO)
                                                           (g$subversion?$9830$PT8AO
                                                             (g$syntax->datum$7324$PT8AO
                                                               g$n$9898$PT8AO))))
                                                        g$ls/false$9897$PT8AO))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$9899$PT8AO)
                                                     (case-lambda
                                                       ((g$x$9900$PT8AO)
                                                        (= g$x$9900$PT8AO
                                                           (g$syntax->datum$7324$PT8AO
                                                             g$n$9899$PT8AO))))))
                                                  g$ls/false$9897$PT8AO)
                                                ((case-lambda
                                                   ((g$t$9901$PT8AO)
                                                    ((case-lambda
                                                       ((g$ls/false$9902$PT8AO)
                                                        (if (if g$ls/false$9902$PT8AO
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$9903$PT8AO
                                                                       g$sub*$9904$PT8AO)
                                                                     (eq? (g$syntax->datum$7324$PT8AO
                                                                            g$p?$9903$PT8AO)
                                                                          'and)))
                                                                  g$ls/false$9902$PT8AO))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$9905$PT8AO
                                                                 g$sub*$9906$PT8AO)
                                                               ((case-lambda
                                                                  ((g$p*$9907$PT8AO)
                                                                   (case-lambda
                                                                     ((g$x$9908$PT8AO)
                                                                      (g$for-all$5365$PT8AO
                                                                        (case-lambda
                                                                          ((g$p$9909$PT8AO)
                                                                           (g$p$9909$PT8AO
                                                                             g$x$9908$PT8AO)))
                                                                        g$p*$9907$PT8AO)))))
                                                                (map g$subversion-pred$9831$PT8AO
                                                                     g$sub*$9906$PT8AO))))
                                                            g$ls/false$9902$PT8AO)
                                                          ((case-lambda
                                                             ((g$t$9910$PT8AO)
                                                              ((case-lambda
                                                                 ((g$ls/false$9911$PT8AO)
                                                                  (if (if g$ls/false$9911$PT8AO
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$9912$PT8AO
                                                                                 g$sub*$9913$PT8AO)
                                                                               (eq? (g$syntax->datum$7324$PT8AO
                                                                                      g$p?$9912$PT8AO)
                                                                                    'or)))
                                                                            g$ls/false$9911$PT8AO))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$9914$PT8AO
                                                                           g$sub*$9915$PT8AO)
                                                                         ((case-lambda
                                                                            ((g$p*$9916$PT8AO)
                                                                             (case-lambda
                                                                               ((g$x$9917$PT8AO)
                                                                                (g$exists$5366$PT8AO
                                                                                  (case-lambda
                                                                                    ((g$p$9918$PT8AO)
                                                                                     (g$p$9918$PT8AO
                                                                                       g$x$9917$PT8AO)))
                                                                                  g$p*$9916$PT8AO)))))
                                                                          (map g$subversion-pred$9831$PT8AO
                                                                               g$sub*$9915$PT8AO))))
                                                                      g$ls/false$9911$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$t$9919$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9920$PT8AO)
                                                                            (if (if g$ls/false$9920$PT8AO
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$9921$PT8AO
                                                                                           g$sub$9922$PT8AO)
                                                                                         (eq? (g$syntax->datum$7324$PT8AO
                                                                                                g$p?$9921$PT8AO)
                                                                                              'not)))
                                                                                      g$ls/false$9920$PT8AO))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$9923$PT8AO
                                                                                     g$sub$9924$PT8AO)
                                                                                   ((case-lambda
                                                                                      ((g$p$9925$PT8AO)
                                                                                       (case-lambda
                                                                                         ((g$x$9926$PT8AO)
                                                                                          (not (g$p$9925$PT8AO
                                                                                                 g$x$9926$PT8AO))))))
                                                                                    (g$subversion-pred$9831$PT8AO
                                                                                      g$sub$9924$PT8AO))))
                                                                                g$ls/false$9920$PT8AO)
                                                                              ((case-lambda
                                                                                 ((g$t$9927$PT8AO)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9928$PT8AO)
                                                                                      (if (if g$ls/false$9928$PT8AO
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$9929$PT8AO
                                                                                                     g$n$9930$PT8AO)
                                                                                                   (if (eq? (g$syntax->datum$7324$PT8AO
                                                                                                              g$p?$9929$PT8AO)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$9830$PT8AO
                                                                                                         (g$syntax->datum$7324$PT8AO
                                                                                                           g$n$9930$PT8AO)))
                                                                                                     '#f)))
                                                                                                g$ls/false$9928$PT8AO))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$9931$PT8AO
                                                                                               g$n$9932$PT8AO)
                                                                                             (case-lambda
                                                                                               ((g$x$9933$PT8AO)
                                                                                                (<= g$x$9933$PT8AO
                                                                                                    (g$syntax->datum$7324$PT8AO
                                                                                                      g$n$9932$PT8AO))))))
                                                                                          g$ls/false$9928$PT8AO)
                                                                                        ((case-lambda
                                                                                           ((g$t$9934$PT8AO)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9935$PT8AO)
                                                                                                (if (if g$ls/false$9935$PT8AO
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$9936$PT8AO
                                                                                                               g$n$9937$PT8AO)
                                                                                                             (if (eq? (g$syntax->datum$7324$PT8AO
                                                                                                                        g$p?$9936$PT8AO)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$9830$PT8AO
                                                                                                                   g$n$9937$PT8AO))
                                                                                                               '#f)))
                                                                                                          g$ls/false$9935$PT8AO))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$9938$PT8AO
                                                                                                         g$n$9939$PT8AO)
                                                                                                       (case-lambda
                                                                                                         ((g$x$9940$PT8AO)
                                                                                                          (>= g$x$9940$PT8AO
                                                                                                              (g$syntax->datum$7324$PT8AO
                                                                                                                g$n$9939$PT8AO))))))
                                                                                                    g$ls/false$9935$PT8AO)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9941$PT8AO)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$9942$PT8AO)
                                                                                                          (if g$ls/false$9942$PT8AO
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7321$PT8AO
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$9829$PT8AO
                                                                                                                   g$x*$9895$PT8AO)))
                                                                                                              g$ls/false$9942$PT8AO)
                                                                                                            (g$syntax-violation$7321$PT8AO
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$9941$PT8AO))))
                                                                                                       (g$syntax-dispatch$7215$PT8AO
                                                                                                         g$t$9941$PT8AO
                                                                                                         '_))))
                                                                                                   g$t$9934$PT8AO))))
                                                                                             (g$syntax-dispatch$7215$PT8AO
                                                                                               g$t$9934$PT8AO
                                                                                               '(any any)))))
                                                                                         g$t$9927$PT8AO))))
                                                                                   (g$syntax-dispatch$7215$PT8AO
                                                                                     g$t$9927$PT8AO
                                                                                     '(any any)))))
                                                                               g$t$9919$PT8AO))))
                                                                         (g$syntax-dispatch$7215$PT8AO
                                                                           g$t$9919$PT8AO
                                                                           '(any any)))))
                                                                     g$t$9910$PT8AO))))
                                                               (g$syntax-dispatch$7215$PT8AO
                                                                 g$t$9910$PT8AO
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$9901$PT8AO))))
                                                     (g$syntax-dispatch$7215$PT8AO
                                                       g$t$9901$PT8AO
                                                       '(any . each-any)))))
                                                 g$t$9896$PT8AO))))
                                           (g$syntax-dispatch$7215$PT8AO
                                             g$t$9896$PT8AO
                                             'any))))
                                       g$x*$9895$PT8AO))))
                                 (g$version-pred$9832$PT8AO
                                   (case-lambda
                                     ((g$x*$9855$PT8AO)
                                      ((case-lambda
                                         ((g$t$9856$PT8AO)
                                          ((case-lambda
                                             ((g$ls/false$9857$PT8AO)
                                              (if g$ls/false$9857$PT8AO
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$9858$PT8AO) '#t))))
                                                  g$ls/false$9857$PT8AO)
                                                ((case-lambda
                                                   ((g$t$9859$PT8AO)
                                                    ((case-lambda
                                                       ((g$ls/false$9860$PT8AO)
                                                        (if (if g$ls/false$9860$PT8AO
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$9861$PT8AO
                                                                       g$ver*$9862$PT8AO)
                                                                     (eq? (g$syntax->datum$7324$PT8AO
                                                                            g$c$9861$PT8AO)
                                                                          'and)))
                                                                  g$ls/false$9860$PT8AO))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$9863$PT8AO
                                                                 g$ver*$9864$PT8AO)
                                                               ((case-lambda
                                                                  ((g$p*$9865$PT8AO)
                                                                   (case-lambda
                                                                     ((g$x$9866$PT8AO)
                                                                      (g$for-all$5365$PT8AO
                                                                        (case-lambda
                                                                          ((g$p$9867$PT8AO)
                                                                           (g$p$9867$PT8AO
                                                                             g$x$9866$PT8AO)))
                                                                        g$p*$9865$PT8AO)))))
                                                                (map g$version-pred$9832$PT8AO
                                                                     g$ver*$9864$PT8AO))))
                                                            g$ls/false$9860$PT8AO)
                                                          ((case-lambda
                                                             ((g$t$9868$PT8AO)
                                                              ((case-lambda
                                                                 ((g$ls/false$9869$PT8AO)
                                                                  (if (if g$ls/false$9869$PT8AO
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$9870$PT8AO
                                                                                 g$ver*$9871$PT8AO)
                                                                               (eq? (g$syntax->datum$7324$PT8AO
                                                                                      g$c$9870$PT8AO)
                                                                                    'or)))
                                                                            g$ls/false$9869$PT8AO))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$9872$PT8AO
                                                                           g$ver*$9873$PT8AO)
                                                                         ((case-lambda
                                                                            ((g$p*$9874$PT8AO)
                                                                             (case-lambda
                                                                               ((g$x$9875$PT8AO)
                                                                                (g$exists$5366$PT8AO
                                                                                  (case-lambda
                                                                                    ((g$p$9876$PT8AO)
                                                                                     (g$p$9876$PT8AO
                                                                                       g$x$9875$PT8AO)))
                                                                                  g$p*$9874$PT8AO)))))
                                                                          (map g$version-pred$9832$PT8AO
                                                                               g$ver*$9873$PT8AO))))
                                                                      g$ls/false$9869$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$t$9877$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9878$PT8AO)
                                                                            (if (if g$ls/false$9878$PT8AO
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$9879$PT8AO
                                                                                           g$ver$9880$PT8AO)
                                                                                         (eq? (g$syntax->datum$7324$PT8AO
                                                                                                g$c$9879$PT8AO)
                                                                                              'not)))
                                                                                      g$ls/false$9878$PT8AO))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$9881$PT8AO
                                                                                     g$ver$9882$PT8AO)
                                                                                   ((case-lambda
                                                                                      ((g$p$9883$PT8AO)
                                                                                       (case-lambda
                                                                                         ((g$x$9884$PT8AO)
                                                                                          (not (g$p$9883$PT8AO
                                                                                                 g$x$9884$PT8AO))))))
                                                                                    (g$version-pred$9832$PT8AO
                                                                                      g$ver$9882$PT8AO))))
                                                                                g$ls/false$9878$PT8AO)
                                                                              ((case-lambda
                                                                                 ((g$t$9885$PT8AO)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9886$PT8AO)
                                                                                      (if g$ls/false$9886$PT8AO
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$9887$PT8AO)
                                                                                             ((case-lambda
                                                                                                ((g$p*$9888$PT8AO)
                                                                                                 (case-lambda
                                                                                                   ((g$x$9889$PT8AO)
                                                                                                    ((letrec ((g$f$9890$PT8AO
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$9891$PT8AO
                                                                                                                     g$x$9892$PT8AO)
                                                                                                                   (if (null?
                                                                                                                         g$p*$9891$PT8AO)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$9892$PT8AO)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$9891$PT8AO)
                                                                                                                            (car g$x$9892$PT8AO))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$9890$PT8AO
                                                                                                                             (cdr g$p*$9891$PT8AO)
                                                                                                                             (cdr g$x$9892$PT8AO)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$9890$PT8AO)
                                                                                                     g$p*$9888$PT8AO
                                                                                                     g$x$9889$PT8AO)))))
                                                                                              (map g$subversion-pred$9831$PT8AO
                                                                                                   g$sub*$9887$PT8AO))))
                                                                                          g$ls/false$9886$PT8AO)
                                                                                        ((case-lambda
                                                                                           ((g$t$9893$PT8AO)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9894$PT8AO)
                                                                                                (if g$ls/false$9894$PT8AO
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7321$PT8AO
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$9829$PT8AO
                                                                                                         g$x*$9855$PT8AO)))
                                                                                                    g$ls/false$9894$PT8AO)
                                                                                                  (g$syntax-violation$7321$PT8AO
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$9893$PT8AO))))
                                                                                             (g$syntax-dispatch$7215$PT8AO
                                                                                               g$t$9893$PT8AO
                                                                                               '_))))
                                                                                         g$t$9885$PT8AO))))
                                                                                   (g$syntax-dispatch$7215$PT8AO
                                                                                     g$t$9885$PT8AO
                                                                                     'each-any))))
                                                                               g$t$9877$PT8AO))))
                                                                         (g$syntax-dispatch$7215$PT8AO
                                                                           g$t$9877$PT8AO
                                                                           '(any any)))))
                                                                     g$t$9868$PT8AO))))
                                                               (g$syntax-dispatch$7215$PT8AO
                                                                 g$t$9868$PT8AO
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$9859$PT8AO))))
                                                     (g$syntax-dispatch$7215$PT8AO
                                                       g$t$9859$PT8AO
                                                       '(any . each-any)))))
                                                 g$t$9856$PT8AO))))
                                           (g$syntax-dispatch$7215$PT8AO
                                             g$t$9856$PT8AO
                                             '()))))
                                       g$x*$9855$PT8AO)))))
                         ((letrec ((g$f$9833$PT8AO
                                     (case-lambda
                                       ((g$x$9834$PT8AO)
                                        ((case-lambda
                                           ((g$t$9835$PT8AO)
                                            ((case-lambda
                                               ((g$ls/false$9836$PT8AO)
                                                (if g$ls/false$9836$PT8AO
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$9837$PT8AO)
                                                       (values
                                                         '()
                                                         (g$version-pred$9832$PT8AO
                                                           g$version-spec*$9837$PT8AO))))
                                                    g$ls/false$9836$PT8AO)
                                                  ((case-lambda
                                                     ((g$t$9838$PT8AO)
                                                      ((case-lambda
                                                         ((g$ls/false$9839$PT8AO)
                                                          (if (if g$ls/false$9839$PT8AO
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$9840$PT8AO
                                                                         g$x*$9841$PT8AO)
                                                                       (g$idsyn?$9728$PT8AO
                                                                         g$x$9840$PT8AO)))
                                                                    g$ls/false$9839$PT8AO))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$9842$PT8AO
                                                                   g$x*$9843$PT8AO)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$9833$PT8AO
                                                                        g$x*$9843$PT8AO)))
                                                                   (case-lambda
                                                                     ((g$name$9846$PT8AO
                                                                        g$pred$9847$PT8AO)
                                                                      ((case-lambda
                                                                         ((g$pred$9848$PT8AO
                                                                            g$name$9849$PT8AO)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7324$PT8AO
                                                                                g$x$9842$PT8AO)
                                                                              g$name$9849$PT8AO)
                                                                            g$pred$9848$PT8AO)))
                                                                       g$pred$9847$PT8AO
                                                                       g$name$9846$PT8AO))))))
                                                              g$ls/false$9839$PT8AO)
                                                            ((case-lambda
                                                               ((g$t$9850$PT8AO)
                                                                ((case-lambda
                                                                   ((g$ls/false$9851$PT8AO)
                                                                    (if g$ls/false$9851$PT8AO
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$9852$PT8AO)
                                                                                '#t)))))
                                                                        g$ls/false$9851$PT8AO)
                                                                      ((case-lambda
                                                                         ((g$t$9853$PT8AO)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9854$PT8AO)
                                                                              (if g$ls/false$9854$PT8AO
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7321$PT8AO
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$9829$PT8AO)))
                                                                                  g$ls/false$9854$PT8AO)
                                                                                (g$syntax-violation$7321$PT8AO
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9853$PT8AO))))
                                                                           (g$syntax-dispatch$7215$PT8AO
                                                                             g$t$9853$PT8AO
                                                                             '_))))
                                                                       g$t$9850$PT8AO))))
                                                                 (g$syntax-dispatch$7215$PT8AO
                                                                   g$t$9850$PT8AO
                                                                   '()))))
                                                             g$t$9838$PT8AO))))
                                                       (g$syntax-dispatch$7215$PT8AO
                                                         g$t$9838$PT8AO
                                                         '(any . any)))))
                                                   g$t$9835$PT8AO))))
                                             (g$syntax-dispatch$7215$PT8AO
                                               g$t$9835$PT8AO
                                               '(each-any)))))
                                         g$x$9834$PT8AO)))))
                            g$f$9833$PT8AO)
                          g$spec$9829$PT8AO)))))
                  (g$import-library$9736$PT8AO
                    (case-lambda
                      ((g$spec*$9821$PT8AO)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$9735$PT8AO
                              g$spec*$9821$PT8AO)))
                         (case-lambda
                           ((g$name$9824$PT8AO g$pred$9825$PT8AO)
                            ((case-lambda
                               ((g$pred$9826$PT8AO g$name$9827$PT8AO)
                                (begin
                                  (if (null? g$name$9827$PT8AO)
                                    (g$syntax-violation$7321$PT8AO
                                      'import
                                      '"empty library name"
                                      g$spec*$9821$PT8AO)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$9828$PT8AO)
                                      (begin
                                        (if g$lib$9828$PT8AO
                                          (void)
                                          (g$syntax-violation$7321$PT8AO
                                            'import
                                            '"cannot find library with required name"
                                            g$name$9827$PT8AO))
                                        (if (g$pred$9826$PT8AO
                                              (g$library-version$6705$PT8AO
                                                g$lib$9828$PT8AO))
                                          (void)
                                          (g$syntax-violation$7321$PT8AO
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$9821$PT8AO
                                            g$lib$9828$PT8AO))
                                        ((g$imp-collector$7269$PT8AO)
                                         g$lib$9828$PT8AO)
                                        (g$library-subst$6709$PT8AO
                                          g$lib$9828$PT8AO))))
                                   (g$find-library-by-name$6745$PT8AO
                                     g$name$9827$PT8AO)))))
                             g$pred$9825$PT8AO
                             g$name$9824$PT8AO)))))))
                  (g$get-import$9737$PT8AO
                    (case-lambda
                      ((g$spec$9750$PT8AO)
                       ((case-lambda
                          ((g$t$9751$PT8AO)
                           ((case-lambda
                              ((g$ls/false$9752$PT8AO)
                               (if (if g$ls/false$9752$PT8AO
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$9753$PT8AO g$x*$9754$PT8AO)
                                            (not (memq
                                                   (g$syntax->datum$7324$PT8AO
                                                     g$x$9753$PT8AO)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$9752$PT8AO))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$9755$PT8AO g$x*$9756$PT8AO)
                                      (g$import-library$9736$PT8AO
                                        (cons g$x$9755$PT8AO g$x*$9756$PT8AO))))
                                   g$ls/false$9752$PT8AO)
                                 ((case-lambda
                                    ((g$t$9757$PT8AO)
                                     ((case-lambda
                                        ((g$ls/false$9758$PT8AO)
                                         (if (if g$ls/false$9758$PT8AO
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$9759$PT8AO
                                                        g$isp$9760$PT8AO
                                                        g$old*$9761$PT8AO
                                                        g$new*$9762$PT8AO)
                                                      (if (eq? (g$syntax->datum$7324$PT8AO
                                                                 g$rename$9759$PT8AO)
                                                               'rename)
                                                        (if (g$for-all$5365$PT8AO
                                                              g$idsyn?$9728$PT8AO
                                                              g$old*$9761$PT8AO)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5365$PT8AO
                                                              g$idsyn?$9728$PT8AO
                                                              g$new*$9762$PT8AO))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$9758$PT8AO))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$9763$PT8AO
                                                  g$isp$9764$PT8AO
                                                  g$old*$9765$PT8AO
                                                  g$new*$9766$PT8AO)
                                                ((case-lambda
                                                   ((g$subst$9767$PT8AO
                                                      g$old*$9768$PT8AO
                                                      g$new*$9769$PT8AO)
                                                    ((case-lambda
                                                       ((g$old-label*$9770$PT8AO)
                                                        ((case-lambda
                                                           ((g$subst$9771$PT8AO)
                                                            (g$merge-substs$9730$PT8AO
                                                              (map cons
                                                                   g$new*$9769$PT8AO
                                                                   g$old-label*$9770$PT8AO)
                                                              g$subst$9771$PT8AO)))
                                                         (g$rem*$9733$PT8AO
                                                           g$old*$9768$PT8AO
                                                           g$subst$9767$PT8AO))))
                                                     (g$find*$9732$PT8AO
                                                       g$old*$9768$PT8AO
                                                       g$subst$9767$PT8AO))))
                                                 (g$get-import$9737$PT8AO
                                                   g$isp$9764$PT8AO)
                                                 (map g$syntax->datum$7324$PT8AO
                                                      g$old*$9765$PT8AO)
                                                 (map g$syntax->datum$7324$PT8AO
                                                      g$new*$9766$PT8AO))))
                                             g$ls/false$9758$PT8AO)
                                           ((case-lambda
                                              ((g$t$9772$PT8AO)
                                               ((case-lambda
                                                  ((g$ls/false$9773$PT8AO)
                                                   (if (if g$ls/false$9773$PT8AO
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$9774$PT8AO
                                                                  g$isp$9775$PT8AO
                                                                  g$sym*$9776$PT8AO)
                                                                (if (eq? (g$syntax->datum$7324$PT8AO
                                                                           g$except$9774$PT8AO)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5365$PT8AO
                                                                      g$idsyn?$9728$PT8AO
                                                                      g$sym*$9776$PT8AO))
                                                                  '#f)))
                                                             g$ls/false$9773$PT8AO))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$9777$PT8AO
                                                            g$isp$9778$PT8AO
                                                            g$sym*$9779$PT8AO)
                                                          ((case-lambda
                                                             ((g$subst$9780$PT8AO)
                                                              (g$rem*$9733$PT8AO
                                                                (map g$syntax->datum$7324$PT8AO
                                                                     g$sym*$9779$PT8AO)
                                                                g$subst$9780$PT8AO)))
                                                           (g$get-import$9737$PT8AO
                                                             g$isp$9778$PT8AO))))
                                                       g$ls/false$9773$PT8AO)
                                                     ((case-lambda
                                                        ((g$t$9781$PT8AO)
                                                         ((case-lambda
                                                            ((g$ls/false$9782$PT8AO)
                                                             (if (if g$ls/false$9782$PT8AO
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$9783$PT8AO
                                                                            g$isp$9784$PT8AO
                                                                            g$sym*$9785$PT8AO)
                                                                          (if (eq? (g$syntax->datum$7324$PT8AO
                                                                                     g$only$9783$PT8AO)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5365$PT8AO
                                                                                g$idsyn?$9728$PT8AO
                                                                                g$sym*$9785$PT8AO))
                                                                            '#f)))
                                                                       g$ls/false$9782$PT8AO))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$9786$PT8AO
                                                                      g$isp$9787$PT8AO
                                                                      g$sym*$9788$PT8AO)
                                                                    ((case-lambda
                                                                       ((g$subst$9789$PT8AO
                                                                          g$sym*$9790$PT8AO)
                                                                        ((case-lambda
                                                                           ((g$sym*$9791$PT8AO)
                                                                            ((case-lambda
                                                                               ((g$lab*$9792$PT8AO)
                                                                                (map cons
                                                                                     g$sym*$9791$PT8AO
                                                                                     g$lab*$9792$PT8AO)))
                                                                             (g$find*$9732$PT8AO
                                                                               g$sym*$9791$PT8AO
                                                                               g$subst$9789$PT8AO))))
                                                                         (g$remove-dups$9734$PT8AO
                                                                           g$sym*$9790$PT8AO))))
                                                                     (g$get-import$9737$PT8AO
                                                                       g$isp$9787$PT8AO)
                                                                     (map g$syntax->datum$7324$PT8AO
                                                                          g$sym*$9788$PT8AO))))
                                                                 g$ls/false$9782$PT8AO)
                                                               ((case-lambda
                                                                  ((g$t$9793$PT8AO)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9794$PT8AO)
                                                                       (if (if g$ls/false$9794$PT8AO
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$9795$PT8AO
                                                                                      g$isp$9796$PT8AO
                                                                                      g$p$9797$PT8AO)
                                                                                    (if (eq? (g$syntax->datum$7324$PT8AO
                                                                                               g$prefix$9795$PT8AO)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$9728$PT8AO
                                                                                          g$p$9797$PT8AO))
                                                                                      '#f)))
                                                                                 g$ls/false$9794$PT8AO))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$9798$PT8AO
                                                                                g$isp$9799$PT8AO
                                                                                g$p$9800$PT8AO)
                                                                              ((case-lambda
                                                                                 ((g$subst$9801$PT8AO
                                                                                    g$prefix$9802$PT8AO)
                                                                                  (map (case-lambda
                                                                                         ((g$x$9803$PT8AO)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$9802$PT8AO
                                                                                                (symbol->string
                                                                                                  (car g$x$9803$PT8AO))))
                                                                                            (cdr g$x$9803$PT8AO))))
                                                                                       g$subst$9801$PT8AO)))
                                                                               (g$get-import$9737$PT8AO
                                                                                 g$isp$9799$PT8AO)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7324$PT8AO
                                                                                   g$p$9800$PT8AO)))))
                                                                           g$ls/false$9794$PT8AO)
                                                                         ((case-lambda
                                                                            ((g$t$9804$PT8AO)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9805$PT8AO)
                                                                                 (if (if g$ls/false$9805$PT8AO
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$9806$PT8AO
                                                                                                g$spec*$9807$PT8AO)
                                                                                              (eq? (g$syntax->datum$7324$PT8AO
                                                                                                     g$library$9806$PT8AO)
                                                                                                   'library)))
                                                                                           g$ls/false$9805$PT8AO))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$9808$PT8AO
                                                                                          g$spec*$9809$PT8AO)
                                                                                        (g$import-library$9736$PT8AO
                                                                                          g$spec*$9809$PT8AO)))
                                                                                     g$ls/false$9805$PT8AO)
                                                                                   ((case-lambda
                                                                                      ((g$t$9810$PT8AO)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9811$PT8AO)
                                                                                           (if (if g$ls/false$9811$PT8AO
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$9812$PT8AO
                                                                                                          g$isp$9813$PT8AO
                                                                                                          g$rest$9814$PT8AO)
                                                                                                        (eq? (g$syntax->datum$7324$PT8AO
                                                                                                               g$for$9812$PT8AO)
                                                                                                             'for)))
                                                                                                     g$ls/false$9811$PT8AO))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$9815$PT8AO
                                                                                                    g$isp$9816$PT8AO
                                                                                                    g$rest$9817$PT8AO)
                                                                                                  (g$get-import$9737$PT8AO
                                                                                                    g$isp$9816$PT8AO)))
                                                                                               g$ls/false$9811$PT8AO)
                                                                                             ((case-lambda
                                                                                                ((g$t$9818$PT8AO)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$9819$PT8AO)
                                                                                                     (if g$ls/false$9819$PT8AO
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$9820$PT8AO)
                                                                                                            (g$syntax-violation$7321$PT8AO
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$9820$PT8AO)))
                                                                                                         g$ls/false$9819$PT8AO)
                                                                                                       (g$syntax-violation$7321$PT8AO
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$9818$PT8AO))))
                                                                                                  (g$syntax-dispatch$7215$PT8AO
                                                                                                    g$t$9818$PT8AO
                                                                                                    'any))))
                                                                                              g$t$9810$PT8AO))))
                                                                                        (g$syntax-dispatch$7215$PT8AO
                                                                                          g$t$9810$PT8AO
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$9804$PT8AO))))
                                                                              (g$syntax-dispatch$7215$PT8AO
                                                                                g$t$9804$PT8AO
                                                                                '(any each-any)))))
                                                                          g$t$9793$PT8AO))))
                                                                    (g$syntax-dispatch$7215$PT8AO
                                                                      g$t$9793$PT8AO
                                                                      '(any any
                                                                            any)))))
                                                                g$t$9781$PT8AO))))
                                                          (g$syntax-dispatch$7215$PT8AO
                                                            g$t$9781$PT8AO
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$9772$PT8AO))))
                                                (g$syntax-dispatch$7215$PT8AO
                                                  g$t$9772$PT8AO
                                                  '(any any . each-any)))))
                                            g$t$9757$PT8AO))))
                                      (g$syntax-dispatch$7215$PT8AO
                                        g$t$9757$PT8AO
                                        '(any any . #(each (any any)))))))
                                  g$t$9751$PT8AO))))
                            (g$syntax-dispatch$7215$PT8AO
                              g$t$9751$PT8AO
                              '(any . each-any)))))
                        g$spec$9750$PT8AO))))
                  (g$add-imports!$9738$PT8AO
                    (case-lambda
                      ((g$imp$9742$PT8AO g$h$9743$PT8AO)
                       ((case-lambda
                          ((g$subst$9744$PT8AO)
                           (for-each
                             (case-lambda
                               ((g$x$9745$PT8AO)
                                ((case-lambda
                                   ((g$name$9746$PT8AO g$label$9747$PT8AO)
                                    ((case-lambda
                                       ((g$t$9748$PT8AO)
                                        (if g$t$9748$PT8AO
                                          ((case-lambda
                                             ((g$l$9749$PT8AO)
                                              (if (eq? g$l$9749$PT8AO
                                                       g$label$9747$PT8AO)
                                                (void)
                                                (g$dup-error$9729$PT8AO
                                                  g$name$9746$PT8AO))))
                                           g$t$9748$PT8AO)
                                          (g$hashtable-set!$5162$PT8AO
                                            g$h$9743$PT8AO
                                            g$name$9746$PT8AO
                                            g$label$9747$PT8AO))))
                                     (g$hashtable-ref$5161$PT8AO
                                       g$h$9743$PT8AO
                                       g$name$9746$PT8AO
                                       '#f))))
                                 (car g$x$9745$PT8AO)
                                 (cdr g$x$9745$PT8AO))))
                             g$subst$9744$PT8AO)))
                        (g$get-import$9737$PT8AO g$imp$9742$PT8AO))))))
          ((letrec ((g$f$9739$PT8AO
                      (case-lambda
                        ((g$imp*$9740$PT8AO g$h$9741$PT8AO)
                         (if (null? g$imp*$9740$PT8AO)
                           (hashtable-entries g$h$9741$PT8AO)
                           (begin
                             (g$add-imports!$9738$PT8AO
                               (car g$imp*$9740$PT8AO)
                               g$h$9741$PT8AO)
                             (g$f$9739$PT8AO
                               (cdr g$imp*$9740$PT8AO)
                               g$h$9741$PT8AO)))))))
             g$f$9739$PT8AO)
           g$imp*$9727$PT8AO
           (g$make-eq-hashtable$5158$PT8AO))))))
   (g$make-top-rib$7265$PT8AO
     g$make-top-rib$10715$PT8AO
     (case-lambda
       ((g$names$9988$PT8AO g$labels$9989$PT8AO)
        ((case-lambda
           ((g$rib$9990$PT8AO)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$9991$PT8AO g$label$9992$PT8AO)
                   (begin
                     (if (symbol? g$name$9991$PT8AO)
                       (void)
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$9991$PT8AO))
                     (g$extend-rib!$6901$PT8AO
                       g$rib$9990$PT8AO
                       (g$make-stx$6910$PT8AO
                         g$name$9991$PT8AO
                         g$top-mark*$6879$PT8AO
                         '()
                         '())
                       g$label$9992$PT8AO))))
                g$names$9988$PT8AO
                g$labels$9989$PT8AO)
              g$rib$9990$PT8AO)))
         (g$make-empty-rib$6900$PT8AO)))))
   (g$make-collector$7266$PT8AO
     g$make-collector$10716$PT8AO
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$9993$PT8AO)
            (case-lambda
              (() g$ls$9993$PT8AO)
              ((g$x$9994$PT8AO)
               (set! g$ls$9993$PT8AO
                 (g$set-cons$6876$PT8AO g$x$9994$PT8AO g$ls$9993$PT8AO))))))
         '()))))
   (g$inv-collector$7267$PT8AO
     g$inv-collector$10717$PT8AO
     (g$make-parameter$6205$PT8AO
       (case-lambda
         (g$args$9995$PT8AO
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$9996$PT8AO)
          (begin
            (if (procedure? g$x$9996$PT8AO)
              (void)
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$9996$PT8AO))
            g$x$9996$PT8AO)))))
   (g$vis-collector$7268$PT8AO
     g$vis-collector$10718$PT8AO
     (g$make-parameter$6205$PT8AO
       (case-lambda
         (g$args$9997$PT8AO
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$9998$PT8AO)
          (begin
            (if (procedure? g$x$9998$PT8AO)
              (void)
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$9998$PT8AO))
            g$x$9998$PT8AO)))))
   (g$imp-collector$7269$PT8AO
     g$imp-collector$10719$PT8AO
     (g$make-parameter$6205$PT8AO
       (case-lambda
         (g$args$9999$PT8AO
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10000$PT8AO)
          (begin
            (if (procedure? g$x$10000$PT8AO)
              (void)
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10000$PT8AO))
            g$x$10000$PT8AO)))))
   (g$chi-library-internal$7270$PT8AO
     g$chi-library-internal$10720$PT8AO
     (case-lambda
       ((g$e*$10001$PT8AO g$rib$10002$PT8AO g$top?$10003$PT8AO)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7259$PT8AO
               g$e*$10001$PT8AO
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10002$PT8AO
               g$top?$10003$PT8AO)))
          (case-lambda
            ((g$e*$10011$PT8AO
               g$r$10012$PT8AO
               g$mr$10013$PT8AO
               g$lex*$10014$PT8AO
               g$rhs*$10015$PT8AO
               g$mod**$10016$PT8AO
               g$_kwd*$10017$PT8AO)
             ((case-lambda
                ((g$_kwd*$10018$PT8AO
                   g$mod**$10019$PT8AO
                   g$rhs*$10020$PT8AO
                   g$lex*$10021$PT8AO
                   g$mr$10022$PT8AO
                   g$r$10023$PT8AO
                   g$e*$10024$PT8AO)
                 (values
                   (append
                     (apply append (reverse g$mod**$10019$PT8AO))
                     g$e*$10024$PT8AO)
                   g$r$10023$PT8AO
                   g$mr$10022$PT8AO
                   (reverse g$lex*$10021$PT8AO)
                   (reverse g$rhs*$10020$PT8AO))))
              g$_kwd*$10017$PT8AO
              g$mod**$10016$PT8AO
              g$rhs*$10015$PT8AO
              g$lex*$10014$PT8AO
              g$mr$10013$PT8AO
              g$r$10012$PT8AO
              g$e*$10011$PT8AO)))))))
   (g$chi-interaction-expr$7271$PT8AO
     g$chi-interaction-expr$10721$PT8AO
     (case-lambda
       ((g$e$10025$PT8AO g$rib$10026$PT8AO g$r$10027$PT8AO)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7259$PT8AO
               (list g$e$10025$PT8AO)
               g$r$10027$PT8AO
               g$r$10027$PT8AO
               '()
               '()
               '()
               '()
               g$rib$10026$PT8AO
               '#t)))
          (case-lambda
            ((g$e*$10035$PT8AO
               g$r$10036$PT8AO
               g$mr$10037$PT8AO
               g$lex*$10038$PT8AO
               g$rhs*$10039$PT8AO
               g$mod**$10040$PT8AO
               g$_kwd*$10041$PT8AO)
             ((case-lambda
                ((g$_kwd*$10042$PT8AO
                   g$mod**$10043$PT8AO
                   g$rhs*$10044$PT8AO
                   g$lex*$10045$PT8AO
                   g$mr$10046$PT8AO
                   g$r$10047$PT8AO
                   g$e*$10048$PT8AO)
                 ((case-lambda
                    ((g$e*$10049$PT8AO)
                     ((case-lambda
                        ((g$e$10050$PT8AO)
                         (values g$e$10050$PT8AO g$r$10047$PT8AO)))
                      (if (null? g$e*$10049$PT8AO)
                        (g$build-void$6872$PT8AO)
                        (if (null? (cdr g$e*$10049$PT8AO))
                          (car g$e*$10049$PT8AO)
                          (g$build-sequence$6871$PT8AO
                            '#f
                            g$e*$10049$PT8AO))))))
                  (g$expand-interaction-rhs*/init*$7240$PT8AO
                    (reverse g$lex*$10045$PT8AO)
                    (reverse g$rhs*$10044$PT8AO)
                    (append
                      (apply append (reverse g$mod**$10043$PT8AO))
                      g$e*$10048$PT8AO)
                    g$r$10047$PT8AO
                    g$mr$10046$PT8AO))))
              g$_kwd*$10041$PT8AO
              g$mod**$10040$PT8AO
              g$rhs*$10039$PT8AO
              g$lex*$10038$PT8AO
              g$mr$10037$PT8AO
              g$r$10036$PT8AO
              g$e*$10035$PT8AO)))))))
   (g$library-body-expander$7272$PT8AO
     g$library-body-expander$10722$PT8AO
     (case-lambda
       ((g$name$10051$PT8AO
          g$exp*$10052$PT8AO
          g$imp*$10053$PT8AO
          g$b*$10054$PT8AO
          g$top?$10055$PT8AO)
        (letrec* ((g$itc$10056$PT8AO (g$make-collector$7266$PT8AO)))
          ((case-lambda
             ((g$imp-collector$10061$PT8AO
                g$top-level-context$10062$PT8AO
                g$imp-collector$10063$PT8AO
                g$top-level-context$10064$PT8AO)
              ((case-lambda
                 ((g$swap$10065$PT8AO)
                  (dynamic-wind
                    g$swap$10065$PT8AO
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (() (g$parse-exports$7261$PT8AO g$exp*$10052$PT8AO)))
                         (case-lambda
                           ((g$exp-int*$10068$PT8AO g$exp-ext*$10069$PT8AO)
                            ((case-lambda
                               ((g$exp-ext*$10070$PT8AO g$exp-int*$10071$PT8AO)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7264$PT8AO
                                       g$imp*$10053$PT8AO)))
                                  (case-lambda
                                    ((g$subst-names$10074$PT8AO
                                       g$subst-labels$10075$PT8AO)
                                     ((case-lambda
                                        ((g$subst-labels$10076$PT8AO
                                           g$subst-names$10077$PT8AO)
                                         ((case-lambda
                                            ((g$rib$10078$PT8AO)
                                             ((case-lambda
                                                ((g$b*$10079$PT8AO
                                                   g$rtc$10080$PT8AO
                                                   g$vtc$10081$PT8AO)
                                                 ((case-lambda
                                                    ((g$inv-collector$10086$PT8AO
                                                       g$vis-collector$10087$PT8AO
                                                       g$inv-collector$10088$PT8AO
                                                       g$vis-collector$10089$PT8AO)
                                                     ((case-lambda
                                                        ((g$swap$10090$PT8AO)
                                                         (dynamic-wind
                                                           g$swap$10090$PT8AO
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7270$PT8AO
                                                                     g$b*$10079$PT8AO
                                                                     g$rib$10078$PT8AO
                                                                     g$top?$10055$PT8AO)))
                                                                (case-lambda
                                                                  ((g$init*$10096$PT8AO
                                                                     g$r$10097$PT8AO
                                                                     g$mr$10098$PT8AO
                                                                     g$lex*$10099$PT8AO
                                                                     g$rhs*$10100$PT8AO)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10101$PT8AO
                                                                         g$lex*$10102$PT8AO
                                                                         g$mr$10103$PT8AO
                                                                         g$r$10104$PT8AO
                                                                         g$init*$10105$PT8AO)
                                                                       (begin
                                                                         (g$seal-rib!$6903$PT8AO
                                                                           g$rib$10078$PT8AO)
                                                                         ((case-lambda
                                                                            ((g$init*$10106$PT8AO)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10107$PT8AO)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$6904$PT8AO
                                                                                         g$rib$10078$PT8AO)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10108$PT8AO
                                                                                             g$export-subst$10109$PT8AO)
                                                                                           (letrec* ((g$errstr$10110$PT8AO
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7313$PT8AO
                                                                                                    g$lex*$10102$PT8AO
                                                                                                    g$loc*$10108$PT8AO
                                                                                                    g$r$10104$PT8AO)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10114$PT8AO
                                                                                                    g$global*$10115$PT8AO
                                                                                                    g$macro*$10116$PT8AO)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10117$PT8AO
                                                                                                        g$global*$10118$PT8AO
                                                                                                        g$export-env$10119$PT8AO)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10120$PT8AO)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10121$PT8AO
                                                                                                                   g$label$10122$PT8AO)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10123$PT8AO)
                                                                                                                     (if g$p$10123$PT8AO
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10124$PT8AO)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10125$PT8AO)
                                                                                                                               (if (eq? g$type$10125$PT8AO
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7321$PT8AO
                                                                                                                                   'export
                                                                                                                                   g$errstr$10110$PT8AO
                                                                                                                                   g$name$10121$PT8AO)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10124$PT8AO))))
                                                                                                                        (cdr g$p$10123$PT8AO))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10122$PT8AO
                                                                                                                    g$export-env$10119$PT8AO))))
                                                                                                              (car g$s$10120$PT8AO)
                                                                                                              (cdr g$s$10120$PT8AO))))
                                                                                                          g$export-subst$10109$PT8AO)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10126$PT8AO
                                                                                                              g$invoke-definitions$10127$PT8AO)
                                                                                                            (values
                                                                                                              (g$itc$10056$PT8AO)
                                                                                                              (g$rtc$10080$PT8AO)
                                                                                                              (g$vtc$10081$PT8AO)
                                                                                                              (g$build-sequence$6871$PT8AO
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10127$PT8AO
                                                                                                                  (list
                                                                                                                    g$invoke-body$10126$PT8AO)))
                                                                                                              g$macro*$10117$PT8AO
                                                                                                              g$export-subst$10109$PT8AO
                                                                                                              g$export-env$10119$PT8AO)))
                                                                                                         (g$build-library-letrec*$6875$PT8AO
                                                                                                           '#f
                                                                                                           g$name$10051$PT8AO
                                                                                                           g$lex*$10102$PT8AO
                                                                                                           g$loc*$10108$PT8AO
                                                                                                           g$rhs*$10107$PT8AO
                                                                                                           (if (null?
                                                                                                                 g$init*$10106$PT8AO)
                                                                                                             (g$build-void$6872$PT8AO)
                                                                                                             (g$build-sequence$6871$PT8AO
                                                                                                               '#f
                                                                                                               g$init*$10106$PT8AO)))
                                                                                                         (map g$build-global-define$6867$PT8AO
                                                                                                              (map cdr
                                                                                                                   g$global*$10118$PT8AO))))))
                                                                                                   g$macro*$10116$PT8AO
                                                                                                   g$global*$10115$PT8AO
                                                                                                   g$export-env$10114$PT8AO)))))))
                                                                                        (map g$gen-global$6882$PT8AO
                                                                                             g$lex*$10102$PT8AO)
                                                                                        (g$make-export-subst$7312$PT8AO
                                                                                          g$exp-int*$10071$PT8AO
                                                                                          g$exp-ext*$10070$PT8AO
                                                                                          g$rib$10078$PT8AO))))))))
                                                                              (g$chi-rhs*$7241$PT8AO
                                                                                g$rhs*$10101$PT8AO
                                                                                g$r$10104$PT8AO
                                                                                g$mr$10103$PT8AO))))
                                                                          (g$chi-expr*$7231$PT8AO
                                                                            g$init*$10105$PT8AO
                                                                            g$r$10104$PT8AO
                                                                            g$mr$10103$PT8AO)))))
                                                                    g$rhs*$10100$PT8AO
                                                                    g$lex*$10099$PT8AO
                                                                    g$mr$10098$PT8AO
                                                                    g$r$10097$PT8AO
                                                                    g$init*$10096$PT8AO))))))
                                                           g$swap$10090$PT8AO)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10128$PT8AO)
                                                               (begin
                                                                 (g$inv-collector$10086$PT8AO
                                                                   g$inv-collector$10088$PT8AO)
                                                                 (set! g$inv-collector$10088$PT8AO
                                                                   g$t$10128$PT8AO))))
                                                            (g$inv-collector$10086$PT8AO))
                                                           ((case-lambda
                                                              ((g$t$10129$PT8AO)
                                                               (begin
                                                                 (g$vis-collector$10087$PT8AO
                                                                   g$vis-collector$10089$PT8AO)
                                                                 (set! g$vis-collector$10089$PT8AO
                                                                   g$t$10129$PT8AO))))
                                                            (g$vis-collector$10087$PT8AO))))))))
                                                  g$inv-collector$7267$PT8AO
                                                  g$vis-collector$7268$PT8AO
                                                  g$rtc$10080$PT8AO
                                                  g$vtc$10081$PT8AO)))
                                              (map (case-lambda
                                                     ((g$x$10130$PT8AO)
                                                      (g$make-stx$6910$PT8AO
                                                        g$x$10130$PT8AO
                                                        g$top-mark*$6879$PT8AO
                                                        (list g$rib$10078$PT8AO)
                                                        '())))
                                                   g$b*$10054$PT8AO)
                                              (g$make-collector$7266$PT8AO)
                                              (g$make-collector$7266$PT8AO))))
                                          (g$make-top-rib$7265$PT8AO
                                            g$subst-names$10077$PT8AO
                                            g$subst-labels$10076$PT8AO))))
                                      g$subst-labels$10075$PT8AO
                                      g$subst-names$10074$PT8AO))))))
                             g$exp-ext*$10069$PT8AO
                             g$exp-int*$10068$PT8AO))))))
                    g$swap$10065$PT8AO)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10131$PT8AO)
                        (begin
                          (g$imp-collector$10061$PT8AO
                            g$imp-collector$10063$PT8AO)
                          (set! g$imp-collector$10063$PT8AO g$t$10131$PT8AO))))
                     (g$imp-collector$10061$PT8AO))
                    ((case-lambda
                       ((g$t$10132$PT8AO)
                        (begin
                          (g$top-level-context$10062$PT8AO
                            g$top-level-context$10064$PT8AO)
                          (set! g$top-level-context$10064$PT8AO
                            g$t$10132$PT8AO))))
                     (g$top-level-context$10062$PT8AO))))))))
           g$imp-collector$7269$PT8AO
           g$top-level-context$7328$PT8AO
           g$itc$10056$PT8AO
           '#f)))))
   (g$core-library-expander$7273$PT8AO
     g$core-library-expander$10723$PT8AO
     (case-lambda
       ((g$e$10133$PT8AO g$verify-name$10134$PT8AO)
        (call-with-values
          (case-lambda (() (g$parse-library$7263$PT8AO g$e$10133$PT8AO)))
          (case-lambda
            ((g$name*$10139$PT8AO
               g$exp*$10140$PT8AO
               g$imp*$10141$PT8AO
               g$b*$10142$PT8AO)
             ((case-lambda
                ((g$b*$10143$PT8AO
                   g$imp*$10144$PT8AO
                   g$exp*$10145$PT8AO
                   g$name*$10146$PT8AO)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$7262$PT8AO g$name*$10146$PT8AO)))
                   (case-lambda
                     ((g$name$10149$PT8AO g$ver$10150$PT8AO)
                      ((case-lambda
                         ((g$ver$10151$PT8AO g$name$10152$PT8AO)
                          (begin
                            (g$verify-name$10134$PT8AO g$name$10152$PT8AO)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7272$PT8AO
                                   g$name$10152$PT8AO
                                   g$exp*$10145$PT8AO
                                   g$imp*$10144$PT8AO
                                   g$b*$10143$PT8AO
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10160$PT8AO
                                   g$invoke-req*$10161$PT8AO
                                   g$visit-req*$10162$PT8AO
                                   g$invoke-code$10163$PT8AO
                                   g$visit-code$10164$PT8AO
                                   g$export-subst$10165$PT8AO
                                   g$export-env$10166$PT8AO)
                                 ((case-lambda
                                    ((g$export-env$10167$PT8AO
                                       g$export-subst$10168$PT8AO
                                       g$visit-code$10169$PT8AO
                                       g$invoke-code$10170$PT8AO
                                       g$visit-req*$10171$PT8AO
                                       g$invoke-req*$10172$PT8AO
                                       g$imp*$10173$PT8AO)
                                     (values
                                       g$name$10152$PT8AO
                                       g$ver$10151$PT8AO
                                       g$imp*$10173$PT8AO
                                       g$invoke-req*$10172$PT8AO
                                       g$visit-req*$10171$PT8AO
                                       g$invoke-code$10170$PT8AO
                                       g$visit-code$10169$PT8AO
                                       g$export-subst$10168$PT8AO
                                       g$export-env$10167$PT8AO)))
                                  g$export-env$10166$PT8AO
                                  g$export-subst$10165$PT8AO
                                  g$visit-code$10164$PT8AO
                                  g$invoke-code$10163$PT8AO
                                  g$visit-req*$10162$PT8AO
                                  g$invoke-req*$10161$PT8AO
                                  g$imp*$10160$PT8AO)))))))
                       g$ver$10150$PT8AO
                       g$name$10149$PT8AO))))))
              g$b*$10142$PT8AO
              g$imp*$10141$PT8AO
              g$exp*$10140$PT8AO
              g$name*$10139$PT8AO)))))))
   (g$parse-top-level-program$7274$PT8AO
     g$parse-top-level-program$10724$PT8AO
     (case-lambda
       ((g$e*$10174$PT8AO)
        ((case-lambda
           ((g$t$10175$PT8AO)
            ((case-lambda
               ((g$ls/false$10176$PT8AO)
                (if (if g$ls/false$10176$PT8AO
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10177$PT8AO
                               g$imp*$10178$PT8AO
                               g$b*$10179$PT8AO)
                             (eq? (g$syntax->datum$7324$PT8AO
                                    g$import$10177$PT8AO)
                                  'import)))
                          g$ls/false$10176$PT8AO))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10180$PT8AO
                         g$imp*$10181$PT8AO
                         g$b*$10182$PT8AO)
                       (values g$imp*$10181$PT8AO g$b*$10182$PT8AO)))
                    g$ls/false$10176$PT8AO)
                  ((case-lambda
                     ((g$t$10183$PT8AO)
                      ((case-lambda
                         ((g$ls/false$10184$PT8AO)
                          (if (if g$ls/false$10184$PT8AO
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10185$PT8AO
                                         g$x$10186$PT8AO
                                         g$y$10187$PT8AO)
                                       (eq? (g$syntax->datum$7324$PT8AO
                                              g$import$10185$PT8AO)
                                            'import)))
                                    g$ls/false$10184$PT8AO))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10188$PT8AO
                                   g$x$10189$PT8AO
                                   g$y$10190$PT8AO)
                                 (g$syntax-violation$7321$PT8AO
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$6934$PT8AO g$e*$10174$PT8AO))))
                              g$ls/false$10184$PT8AO)
                            ((case-lambda
                               ((g$t$10191$PT8AO)
                                ((case-lambda
                                   ((g$ls/false$10192$PT8AO)
                                    (if g$ls/false$10192$PT8AO
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10192$PT8AO)
                                      (g$syntax-violation$7321$PT8AO
                                        '#f
                                        '"invalid syntax"
                                        g$t$10191$PT8AO))))
                                 (g$syntax-dispatch$7215$PT8AO
                                   g$t$10191$PT8AO
                                   '_))))
                             g$t$10183$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO
                         g$t$10183$PT8AO
                         '((any . any) . any)))))
                   g$t$10175$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO
               g$t$10175$PT8AO
               '((any . each-any) . each-any)))))
         g$e*$10174$PT8AO))))
   (g$top-level-expander$7275$PT8AO
     g$top-level-expander$10725$PT8AO
     (case-lambda
       ((g$e*$10193$PT8AO)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7274$PT8AO g$e*$10193$PT8AO)))
          (case-lambda
            ((g$imp*$10196$PT8AO g$b*$10197$PT8AO)
             ((case-lambda
                ((g$b*$10198$PT8AO g$imp*$10199$PT8AO)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7272$PT8AO
                        '()
                        '()
                        g$imp*$10199$PT8AO
                        g$b*$10198$PT8AO
                        '#t)))
                   (case-lambda
                     ((g$imp*$10207$PT8AO
                        g$invoke-req*$10208$PT8AO
                        g$visit-req*$10209$PT8AO
                        g$invoke-code$10210$PT8AO
                        g$visit-code$10211$PT8AO
                        g$export-subst$10212$PT8AO
                        g$export-env$10213$PT8AO)
                      ((case-lambda
                         ((g$export-env$10214$PT8AO
                            g$export-subst$10215$PT8AO
                            g$visit-code$10216$PT8AO
                            g$invoke-code$10217$PT8AO
                            g$visit-req*$10218$PT8AO
                            g$invoke-req*$10219$PT8AO
                            g$imp*$10220$PT8AO)
                          (values
                            g$invoke-req*$10219$PT8AO
                            g$invoke-code$10217$PT8AO)))
                       g$export-env$10213$PT8AO
                       g$export-subst$10212$PT8AO
                       g$visit-code$10211$PT8AO
                       g$invoke-code$10210$PT8AO
                       g$visit-req*$10209$PT8AO
                       g$invoke-req*$10208$PT8AO
                       g$imp*$10207$PT8AO))))))
              g$b*$10197$PT8AO
              g$imp*$10196$PT8AO)))))))
   (g$8166$7276$PT8AO
     g$8166$10726$PT8AO
     (make-record-type-descriptor
       'env
       '#f
       'g$8169$PT8AO
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8168$7277$PT8AO g$8168$10727$PT8AO '#f)
   (g$8167$7278$PT8AO
     g$8167$10728$PT8AO
     (make-record-constructor-descriptor
       g$8166$7276$PT8AO
       '#f
       g$8168$7277$PT8AO))
   (g$env?$7279$PT8AO
     g$env?$10729$PT8AO
     (record-predicate g$8166$7276$PT8AO))
   (g$make-env$7280$PT8AO
     g$make-env$10730$PT8AO
     (record-constructor g$8167$7278$PT8AO))
   (g$env-names$7281$PT8AO
     g$env-names$10731$PT8AO
     (record-accessor g$8166$7276$PT8AO '0))
   (g$env-labels$7282$PT8AO
     g$env-labels$10732$PT8AO
     (record-accessor g$8166$7276$PT8AO '1))
   (g$env-itc$7283$PT8AO
     g$env-itc$10733$PT8AO
     (record-accessor g$8166$7276$PT8AO '2))
   (g$set-env-names!$7284$PT8AO
     g$set-env-names!$10734$PT8AO
     (record-mutator g$8166$7276$PT8AO '0))
   (g$set-env-labels!$7285$PT8AO
     g$set-env-labels!$10735$PT8AO
     (record-mutator g$8166$7276$PT8AO '1))
   (g$set-env-itc!$7286$PT8AO
     g$set-env-itc!$10736$PT8AO
     (record-mutator g$8166$7276$PT8AO '2))
   (g$rp$7287$PT8AO
     g$rp$10737$PT8AO
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10221$PT8AO g$p$10222$PT8AO)
          (display '"#<environment>" g$p$10222$PT8AO)))))
   (g$8185$7288$PT8AO
     g$8185$10738$PT8AO
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8188$PT8AO
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8187$7289$PT8AO g$8187$10739$PT8AO '#f)
   (g$8186$7290$PT8AO
     g$8186$10740$PT8AO
     (make-record-constructor-descriptor
       g$8185$7288$PT8AO
       '#f
       g$8187$7289$PT8AO))
   (g$interaction-env?$7291$PT8AO
     g$interaction-env?$10741$PT8AO
     (record-predicate g$8185$7288$PT8AO))
   (g$make-interaction-env$7292$PT8AO
     g$make-interaction-env$10742$PT8AO
     (record-constructor g$8186$7290$PT8AO))
   (g$interaction-env-rib$7293$PT8AO
     g$interaction-env-rib$10743$PT8AO
     (record-accessor g$8185$7288$PT8AO '0))
   (g$interaction-env-r$7294$PT8AO
     g$interaction-env-r$10744$PT8AO
     (record-accessor g$8185$7288$PT8AO '1))
   (g$interaction-env-locs$7295$PT8AO
     g$interaction-env-locs$10745$PT8AO
     (record-accessor g$8185$7288$PT8AO '2))
   (g$set-interaction-env-rib!$7296$PT8AO
     g$set-interaction-env-rib!$10746$PT8AO
     (record-mutator g$8185$7288$PT8AO '0))
   (g$set-interaction-env-r!$7297$PT8AO
     g$set-interaction-env-r!$10747$PT8AO
     (record-mutator g$8185$7288$PT8AO '1))
   (g$set-interaction-env-locs!$7298$PT8AO
     g$set-interaction-env-locs!$10748$PT8AO
     (record-mutator g$8185$7288$PT8AO '2))
   (g$rp$7299$PT8AO
     g$rp$10749$PT8AO
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10223$PT8AO g$p$10224$PT8AO)
          (display '"#<environment>" g$p$10224$PT8AO)))))
   (g$interaction-environment-symbols$7300$PT8AO
     g$interaction-environment-symbols$10750$PT8AO
     (case-lambda
       (()
        (map (case-lambda ((g$x$10225$PT8AO) g$x$10225$PT8AO))
             (g$rib-sym*$6892$PT8AO
               (g$interaction-env-rib$7293$PT8AO
                 (g$interaction-environment$7327$PT8AO)))))))
   (g$environment-symbols$7301$PT8AO
     g$environment-symbols$10751$PT8AO
     (case-lambda
       ((g$e$10226$PT8AO)
        (vector->list (g$env-names$7281$PT8AO g$e$10226$PT8AO)))))
   (g$environment?$7302$PT8AO
     g$environment?$10752$PT8AO
     (case-lambda
       ((g$x$10227$PT8AO)
        ((case-lambda
           ((g$t$10228$PT8AO)
            (if g$t$10228$PT8AO
              g$t$10228$PT8AO
              (begin '#f (g$interaction-env?$7291$PT8AO g$x$10227$PT8AO)))))
         (g$env?$7279$PT8AO g$x$10227$PT8AO)))))
   (g$environment$7303$PT8AO
     g$environment$10753$PT8AO
     (case-lambda
       (g$imp*$10229$PT8AO
        ((case-lambda
           ((g$itc$10230$PT8AO)
            ((case-lambda
               ((g$imp-collector$10233$PT8AO g$imp-collector$10234$PT8AO)
                ((case-lambda
                   ((g$swap$10235$PT8AO)
                    (dynamic-wind
                      g$swap$10235$PT8AO
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7264$PT8AO
                                g$imp*$10229$PT8AO)))
                           (case-lambda
                             ((g$subst-names$10238$PT8AO
                                g$subst-labels$10239$PT8AO)
                              ((case-lambda
                                 ((g$subst-labels$10240$PT8AO
                                    g$subst-names$10241$PT8AO)
                                  (g$make-env$7280$PT8AO
                                    g$subst-names$10241$PT8AO
                                    g$subst-labels$10240$PT8AO
                                    g$itc$10230$PT8AO)))
                               g$subst-labels$10239$PT8AO
                               g$subst-names$10238$PT8AO))))))
                      g$swap$10235$PT8AO)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10242$PT8AO)
                        (begin
                          (g$imp-collector$10233$PT8AO
                            g$imp-collector$10234$PT8AO)
                          (set! g$imp-collector$10234$PT8AO g$t$10242$PT8AO))))
                     (g$imp-collector$10233$PT8AO)))))))
             g$imp-collector$7269$PT8AO
             g$itc$10230$PT8AO)))
         (g$make-collector$7266$PT8AO)))))
   (g$null-environment$7304$PT8AO
     g$null-environment$10754$PT8AO
     (case-lambda
       ((g$n$10243$PT8AO)
        (begin
          (if (eqv? g$n$10243$PT8AO '5)
            (void)
            (assertion-violation 'null-environment '"not 5" g$n$10243$PT8AO))
          (g$environment$7303$PT8AO '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7305$PT8AO
     g$scheme-report-environment$10755$PT8AO
     (case-lambda
       ((g$n$10244$PT8AO)
        (begin
          (if (eqv? g$n$10244$PT8AO '5)
            (void)
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10244$PT8AO))
          (g$environment$7303$PT8AO '(psyntax scheme-report-environment-5))))))
   (g$expand$7306$PT8AO
     g$expand$10756$PT8AO
     (case-lambda
       ((g$x$10245$PT8AO g$env$10246$PT8AO)
        (if (g$env?$7279$PT8AO g$env$10246$PT8AO)
          ((case-lambda
             ((g$rib$10247$PT8AO)
              ((case-lambda
                 ((g$x$10248$PT8AO
                    g$itc$10249$PT8AO
                    g$rtc$10250$PT8AO
                    g$vtc$10251$PT8AO)
                  ((case-lambda
                     ((g$x$10252$PT8AO)
                      (begin
                        (g$seal-rib!$6903$PT8AO g$rib$10247$PT8AO)
                        (values g$x$10252$PT8AO (g$rtc$10250$PT8AO)))))
                   ((case-lambda
                      ((g$inv-collector$10259$PT8AO
                         g$vis-collector$10260$PT8AO
                         g$imp-collector$10261$PT8AO
                         g$inv-collector$10262$PT8AO
                         g$vis-collector$10263$PT8AO
                         g$imp-collector$10264$PT8AO)
                       ((case-lambda
                          ((g$swap$10265$PT8AO)
                           (dynamic-wind
                             g$swap$10265$PT8AO
                             (case-lambda
                               (()
                                (g$chi-expr$7233$PT8AO
                                  g$x$10248$PT8AO
                                  '()
                                  '())))
                             g$swap$10265$PT8AO)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10266$PT8AO)
                                 (begin
                                   (g$inv-collector$10259$PT8AO
                                     g$inv-collector$10262$PT8AO)
                                   (set! g$inv-collector$10262$PT8AO
                                     g$t$10266$PT8AO))))
                              (g$inv-collector$10259$PT8AO))
                             ((case-lambda
                                ((g$t$10267$PT8AO)
                                 (begin
                                   (g$vis-collector$10260$PT8AO
                                     g$vis-collector$10263$PT8AO)
                                   (set! g$vis-collector$10263$PT8AO
                                     g$t$10267$PT8AO))))
                              (g$vis-collector$10260$PT8AO))
                             ((case-lambda
                                ((g$t$10268$PT8AO)
                                 (begin
                                   (g$imp-collector$10261$PT8AO
                                     g$imp-collector$10264$PT8AO)
                                   (set! g$imp-collector$10264$PT8AO
                                     g$t$10268$PT8AO))))
                              (g$imp-collector$10261$PT8AO))))))))
                    g$inv-collector$7267$PT8AO
                    g$vis-collector$7268$PT8AO
                    g$imp-collector$7269$PT8AO
                    g$rtc$10250$PT8AO
                    g$vtc$10251$PT8AO
                    g$itc$10249$PT8AO))))
               (g$make-stx$6910$PT8AO
                 g$x$10245$PT8AO
                 g$top-mark*$6879$PT8AO
                 (list g$rib$10247$PT8AO)
                 '())
               (g$env-itc$7283$PT8AO g$env$10246$PT8AO)
               (g$make-collector$7266$PT8AO)
               (g$make-collector$7266$PT8AO))))
           (g$make-top-rib$7265$PT8AO
             (g$env-names$7281$PT8AO g$env$10246$PT8AO)
             (g$env-labels$7282$PT8AO g$env$10246$PT8AO)))
          (if (g$interaction-env?$7291$PT8AO g$env$10246$PT8AO)
            ((case-lambda
               ((g$rib$10269$PT8AO g$r$10270$PT8AO g$rtc$10271$PT8AO)
                ((case-lambda
                   ((g$x$10272$PT8AO)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10283$PT8AO
                               g$inv-collector$10284$PT8AO
                               g$vis-collector$10285$PT8AO
                               g$imp-collector$10286$PT8AO
                               g$top-level-context$10287$PT8AO
                               g$inv-collector$10288$PT8AO
                               g$vis-collector$10289$PT8AO
                               g$imp-collector$10290$PT8AO)
                             ((case-lambda
                                ((g$swap$10291$PT8AO)
                                 (dynamic-wind
                                   g$swap$10291$PT8AO
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7271$PT8AO
                                        g$x$10272$PT8AO
                                        g$rib$10269$PT8AO
                                        g$r$10270$PT8AO)))
                                   g$swap$10291$PT8AO)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10292$PT8AO)
                                       (begin
                                         (g$top-level-context$10283$PT8AO
                                           g$top-level-context$10287$PT8AO)
                                         (set! g$top-level-context$10287$PT8AO
                                           g$t$10292$PT8AO))))
                                    (g$top-level-context$10283$PT8AO))
                                   ((case-lambda
                                      ((g$t$10293$PT8AO)
                                       (begin
                                         (g$inv-collector$10284$PT8AO
                                           g$inv-collector$10288$PT8AO)
                                         (set! g$inv-collector$10288$PT8AO
                                           g$t$10293$PT8AO))))
                                    (g$inv-collector$10284$PT8AO))
                                   ((case-lambda
                                      ((g$t$10294$PT8AO)
                                       (begin
                                         (g$vis-collector$10285$PT8AO
                                           g$vis-collector$10289$PT8AO)
                                         (set! g$vis-collector$10289$PT8AO
                                           g$t$10294$PT8AO))))
                                    (g$vis-collector$10285$PT8AO))
                                   ((case-lambda
                                      ((g$t$10295$PT8AO)
                                       (begin
                                         (g$imp-collector$10286$PT8AO
                                           g$imp-collector$10290$PT8AO)
                                         (set! g$imp-collector$10290$PT8AO
                                           g$t$10295$PT8AO))))
                                    (g$imp-collector$10286$PT8AO))))))))
                          g$top-level-context$7328$PT8AO
                          g$inv-collector$7267$PT8AO
                          g$vis-collector$7268$PT8AO
                          g$imp-collector$7269$PT8AO
                          g$env$10246$PT8AO
                          g$rtc$10271$PT8AO
                          (g$make-collector$7266$PT8AO)
                          (g$make-collector$7266$PT8AO))))
                      (case-lambda
                        ((g$e$10296$PT8AO g$r^$10297$PT8AO)
                         ((case-lambda
                            ((g$r^$10298$PT8AO g$e$10299$PT8AO)
                             (begin
                               (g$set-interaction-env-r!$7297$PT8AO
                                 g$env$10246$PT8AO
                                 g$r^$10298$PT8AO)
                               (values g$e$10299$PT8AO (g$rtc$10271$PT8AO)))))
                          g$r^$10297$PT8AO
                          g$e$10296$PT8AO))))))
                 (g$make-stx$6910$PT8AO
                   g$x$10245$PT8AO
                   g$top-mark*$6879$PT8AO
                   (list g$rib$10269$PT8AO)
                   '()))))
             (g$interaction-env-rib$7293$PT8AO g$env$10246$PT8AO)
             (g$interaction-env-r$7294$PT8AO g$env$10246$PT8AO)
             (g$make-collector$7266$PT8AO))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10246$PT8AO))))))
   (g$eval$7307$PT8AO
     g$eval$10757$PT8AO
     (case-lambda
       ((g$x$10300$PT8AO g$env$10301$PT8AO)
        (begin
          (if (g$environment?$7302$PT8AO g$env$10301$PT8AO)
            (void)
            (error 'eval '"not an environment" g$env$10301$PT8AO))
          (call-with-values
            (case-lambda
              (() (g$expand$7306$PT8AO g$x$10300$PT8AO g$env$10301$PT8AO)))
            (case-lambda
              ((g$x$10304$PT8AO g$invoke-req*$10305$PT8AO)
               ((case-lambda
                  ((g$invoke-req*$10306$PT8AO g$x$10307$PT8AO)
                   (begin
                     (for-each
                       g$invoke-library$6752$PT8AO
                       g$invoke-req*$10306$PT8AO)
                     (eval-core
                       (g$expanded->core$6451$PT8AO g$x$10307$PT8AO)))))
                g$invoke-req*$10305$PT8AO
                g$x$10304$PT8AO))))))))
   (g$library-expander$7308$PT8AO
     g$library-expander$10758$PT8AO
     (case-lambda
       ((g$x$10308$PT8AO g$filename$10309$PT8AO g$verify-name$10310$PT8AO)
        (letrec* ((g$build-visit-code$10311$PT8AO
                    (case-lambda
                      ((g$macro*$10354$PT8AO)
                       (if (null? g$macro*$10354$PT8AO)
                         (g$build-void$6872$PT8AO)
                         (g$build-sequence$6871$PT8AO
                           '#f
                           (map (case-lambda
                                  ((g$x$10355$PT8AO)
                                   ((case-lambda
                                      ((g$loc$10356$PT8AO g$src$10357$PT8AO)
                                       (list
                                         'set!
                                         g$loc$10356$PT8AO
                                         g$src$10357$PT8AO)))
                                    (car g$x$10355$PT8AO)
                                    (g$cddr$4898$PT8AO g$x$10355$PT8AO))))
                                g$macro*$10354$PT8AO))))))
                  (g$visit!$10312$PT8AO
                    (case-lambda
                      ((g$macro*$10350$PT8AO)
                       (for-each
                         (case-lambda
                           ((g$x$10351$PT8AO)
                            ((case-lambda
                               ((g$loc$10352$PT8AO g$proc$10353$PT8AO)
                                (set-symbol-value!
                                  g$loc$10352$PT8AO
                                  g$proc$10353$PT8AO)))
                             (car g$x$10351$PT8AO)
                             (g$cadr$4896$PT8AO g$x$10351$PT8AO))))
                         g$macro*$10350$PT8AO)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7273$PT8AO
                 g$x$10308$PT8AO
                 g$verify-name$10310$PT8AO)))
            (case-lambda
              ((g$name$10322$PT8AO
                 g$ver$10323$PT8AO
                 g$imp*$10324$PT8AO
                 g$inv*$10325$PT8AO
                 g$vis*$10326$PT8AO
                 g$invoke-code$10327$PT8AO
                 g$macro*$10328$PT8AO
                 g$export-subst$10329$PT8AO
                 g$export-env$10330$PT8AO)
               ((case-lambda
                  ((g$export-env$10331$PT8AO
                     g$export-subst$10332$PT8AO
                     g$macro*$10333$PT8AO
                     g$invoke-code$10334$PT8AO
                     g$vis*$10335$PT8AO
                     g$inv*$10336$PT8AO
                     g$imp*$10337$PT8AO
                     g$ver$10338$PT8AO
                     g$name$10339$PT8AO)
                   ((case-lambda
                      ((g$id$10340$PT8AO
                         g$name$10341$PT8AO
                         g$ver$10342$PT8AO
                         g$imp*$10343$PT8AO
                         g$vis*$10344$PT8AO
                         g$inv*$10345$PT8AO
                         g$visit-proc$10346$PT8AO
                         g$invoke-proc$10347$PT8AO
                         g$visit-code$10348$PT8AO
                         g$invoke-code$10349$PT8AO)
                       (begin
                         (g$install-library$6750$PT8AO
                           g$id$10340$PT8AO
                           g$name$10341$PT8AO
                           g$ver$10342$PT8AO
                           g$imp*$10343$PT8AO
                           g$vis*$10344$PT8AO
                           g$inv*$10345$PT8AO
                           g$export-subst$10332$PT8AO
                           g$export-env$10331$PT8AO
                           g$visit-proc$10346$PT8AO
                           g$invoke-proc$10347$PT8AO
                           g$visit-code$10348$PT8AO
                           g$invoke-code$10349$PT8AO
                           '#t
                           g$filename$10309$PT8AO)
                         (values
                           g$id$10340$PT8AO
                           g$name$10341$PT8AO
                           g$ver$10342$PT8AO
                           g$imp*$10343$PT8AO
                           g$vis*$10344$PT8AO
                           g$inv*$10345$PT8AO
                           g$invoke-code$10349$PT8AO
                           g$visit-code$10348$PT8AO
                           g$export-subst$10332$PT8AO
                           g$export-env$10331$PT8AO))))
                    (gensym)
                    g$name$10339$PT8AO
                    g$ver$10338$PT8AO
                    (map g$library-spec$6756$PT8AO g$imp*$10337$PT8AO)
                    (map g$library-spec$6756$PT8AO g$vis*$10335$PT8AO)
                    (map g$library-spec$6756$PT8AO g$inv*$10336$PT8AO)
                    (case-lambda
                      (() (g$visit!$10312$PT8AO g$macro*$10333$PT8AO)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6451$PT8AO
                           g$invoke-code$10334$PT8AO))))
                    (g$build-visit-code$10311$PT8AO g$macro*$10333$PT8AO)
                    g$invoke-code$10334$PT8AO)))
                g$export-env$10330$PT8AO
                g$export-subst$10329$PT8AO
                g$macro*$10328$PT8AO
                g$invoke-code$10327$PT8AO
                g$vis*$10326$PT8AO
                g$inv*$10325$PT8AO
                g$imp*$10324$PT8AO
                g$ver$10323$PT8AO
                g$name$10322$PT8AO))))))
       ((g$x$10358$PT8AO g$filename$10359$PT8AO)
        (g$library-expander$7308$PT8AO
          g$x$10358$PT8AO
          g$filename$10359$PT8AO
          (case-lambda ((g$x$10360$PT8AO) (values)))))
       ((g$x$10361$PT8AO)
        (g$library-expander$7308$PT8AO
          g$x$10361$PT8AO
          '#f
          (case-lambda ((g$x$10362$PT8AO) (values)))))))
   (g$boot-library-expand$7309$PT8AO
     g$boot-library-expand$10759$PT8AO
     (case-lambda
       ((g$x$10363$PT8AO)
        (call-with-values
          (case-lambda (() (g$library-expander$7308$PT8AO g$x$10363$PT8AO)))
          (case-lambda
            ((g$id$10374$PT8AO
               g$name$10375$PT8AO
               g$ver$10376$PT8AO
               g$imp*$10377$PT8AO
               g$vis*$10378$PT8AO
               g$inv*$10379$PT8AO
               g$invoke-code$10380$PT8AO
               g$visit-code$10381$PT8AO
               g$export-subst$10382$PT8AO
               g$export-env$10383$PT8AO)
             ((case-lambda
                ((g$export-env$10384$PT8AO
                   g$export-subst$10385$PT8AO
                   g$visit-code$10386$PT8AO
                   g$invoke-code$10387$PT8AO
                   g$inv*$10388$PT8AO
                   g$vis*$10389$PT8AO
                   g$imp*$10390$PT8AO
                   g$ver$10391$PT8AO
                   g$name$10392$PT8AO
                   g$id$10393$PT8AO)
                 (values
                   g$name$10392$PT8AO
                   g$invoke-code$10387$PT8AO
                   g$export-subst$10385$PT8AO
                   g$export-env$10384$PT8AO)))
              g$export-env$10383$PT8AO
              g$export-subst$10382$PT8AO
              g$visit-code$10381$PT8AO
              g$invoke-code$10380$PT8AO
              g$inv*$10379$PT8AO
              g$vis*$10378$PT8AO
              g$imp*$10377$PT8AO
              g$ver$10376$PT8AO
              g$name$10375$PT8AO
              g$id$10374$PT8AO)))))))
   (g$rev-map-append$7310$PT8AO
     g$rev-map-append$10760$PT8AO
     (case-lambda
       ((g$f$10394$PT8AO g$ls$10395$PT8AO g$ac$10396$PT8AO)
        (if (null? g$ls$10395$PT8AO)
          g$ac$10396$PT8AO
          (g$rev-map-append$7310$PT8AO
            g$f$10394$PT8AO
            (cdr g$ls$10395$PT8AO)
            (cons
              (g$f$10394$PT8AO (car g$ls$10395$PT8AO))
              g$ac$10396$PT8AO))))))
   (g$build-exports$7311$PT8AO
     g$build-exports$10761$PT8AO
     (case-lambda
       ((g$lex*+loc*$10397$PT8AO g$init*$10398$PT8AO)
        (g$build-sequence$6871$PT8AO
          '#f
          (cons
            (g$build-void$6872$PT8AO)
            (g$rev-map-append$7310$PT8AO
              (case-lambda
                ((g$x$10399$PT8AO)
                 (list 'set! (cdr g$x$10399$PT8AO) (car g$x$10399$PT8AO))))
              g$lex*+loc*$10397$PT8AO
              g$init*$10398$PT8AO))))))
   (g$make-export-subst$7312$PT8AO
     g$make-export-subst$10762$PT8AO
     (case-lambda
       ((g$int*$10400$PT8AO g$ext*$10401$PT8AO g$rib$10402$PT8AO)
        (map (case-lambda
               ((g$int$10403$PT8AO g$ext$10404$PT8AO)
                ((case-lambda
                   ((g$id$10405$PT8AO)
                    ((case-lambda
                       ((g$label$10406$PT8AO)
                        ((case-lambda
                           (()
                            (begin
                              (if g$label$10406$PT8AO
                                (void)
                                (g$syntax-violation$7321$PT8AO
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$10405$PT8AO))
                              (cons g$ext$10404$PT8AO g$label$10406$PT8AO)))))))
                     (g$id->label$6950$PT8AO g$id$10405$PT8AO))))
                 (g$make-stx$6910$PT8AO
                   g$int$10403$PT8AO
                   g$top-mark*$6879$PT8AO
                   (list g$rib$10402$PT8AO)
                   '()))))
             g$int*$10400$PT8AO
             g$ext*$10401$PT8AO))))
   (g$make-export-env/macros$7313$PT8AO
     g$make-export-env/macros$10763$PT8AO
     (case-lambda
       ((g$lex*$10407$PT8AO g$loc*$10408$PT8AO g$r$10409$PT8AO)
        (letrec* ((g$lookup$10410$PT8AO
                    (case-lambda
                      ((g$x$10425$PT8AO)
                       ((letrec ((g$f$10426$PT8AO
                                   (case-lambda
                                     ((g$x$10427$PT8AO
                                        g$lex*$10428$PT8AO
                                        g$loc*$10429$PT8AO)
                                      (if (pair? g$lex*$10428$PT8AO)
                                        (if (eq? g$x$10427$PT8AO
                                                 (car g$lex*$10428$PT8AO))
                                          (car g$loc*$10429$PT8AO)
                                          (g$f$10426$PT8AO
                                            g$x$10427$PT8AO
                                            (cdr g$lex*$10428$PT8AO)
                                            (cdr g$loc*$10429$PT8AO)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10426$PT8AO)
                        g$x$10425$PT8AO
                        g$lex*$10407$PT8AO
                        g$loc*$10408$PT8AO)))))
          ((letrec ((g$f$10411$PT8AO
                      (case-lambda
                        ((g$r$10412$PT8AO
                           g$env$10413$PT8AO
                           g$global*$10414$PT8AO
                           g$macro*$10415$PT8AO)
                         (if (null? g$r$10412$PT8AO)
                           (values
                             g$env$10413$PT8AO
                             g$global*$10414$PT8AO
                             g$macro*$10415$PT8AO)
                           ((case-lambda
                              ((g$x$10416$PT8AO)
                               ((case-lambda
                                  ((g$label$10417$PT8AO g$b$10418$PT8AO)
                                   ((case-lambda
                                      ((g$t$10419$PT8AO)
                                       (if (eqv? g$t$10419$PT8AO 'lexical)
                                         ((case-lambda
                                            ((g$v$10422$PT8AO)
                                             ((case-lambda
                                                ((g$loc$10423$PT8AO
                                                   g$type$10424$PT8AO)
                                                 (g$f$10411$PT8AO
                                                   (cdr g$r$10412$PT8AO)
                                                   (cons
                                                     (g$cons*$5367$PT8AO
                                                       g$label$10417$PT8AO
                                                       g$type$10424$PT8AO
                                                       g$loc$10423$PT8AO)
                                                     g$env$10413$PT8AO)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7159$PT8AO
                                                         g$v$10422$PT8AO)
                                                       g$loc$10423$PT8AO)
                                                     g$global*$10414$PT8AO)
                                                   g$macro*$10415$PT8AO)))
                                              (g$lookup$10410$PT8AO
                                                (g$lexical-var$7159$PT8AO
                                                  g$v$10422$PT8AO))
                                              (if (g$lexical-mutable?$7160$PT8AO
                                                    g$v$10422$PT8AO)
                                                'mutable
                                                'global))))
                                          (g$binding-value$6955$PT8AO
                                            g$b$10418$PT8AO))
                                         (if (eqv? g$t$10419$PT8AO 'local-macro)
                                           ((case-lambda
                                              ((g$loc$10421$PT8AO)
                                               (g$f$10411$PT8AO
                                                 (cdr g$r$10412$PT8AO)
                                                 (cons
                                                   (g$cons*$5367$PT8AO
                                                     g$label$10417$PT8AO
                                                     'global-macro
                                                     g$loc$10421$PT8AO)
                                                   g$env$10413$PT8AO)
                                                 g$global*$10414$PT8AO
                                                 (cons
                                                   (cons
                                                     g$loc$10421$PT8AO
                                                     (g$binding-value$6955$PT8AO
                                                       g$b$10418$PT8AO))
                                                   g$macro*$10415$PT8AO))))
                                            (gensym))
                                           (if (eqv?
                                                 g$t$10419$PT8AO
                                                 'local-macro!)
                                             ((case-lambda
                                                ((g$loc$10420$PT8AO)
                                                 (g$f$10411$PT8AO
                                                   (cdr g$r$10412$PT8AO)
                                                   (cons
                                                     (g$cons*$5367$PT8AO
                                                       g$label$10417$PT8AO
                                                       'global-macro!
                                                       g$loc$10420$PT8AO)
                                                     g$env$10413$PT8AO)
                                                   g$global*$10414$PT8AO
                                                   (cons
                                                     (cons
                                                       g$loc$10420$PT8AO
                                                       (g$binding-value$6955$PT8AO
                                                         g$b$10418$PT8AO))
                                                     g$macro*$10415$PT8AO))))
                                              (gensym))
                                             (if (memv
                                                   g$t$10419$PT8AO
                                                   '($rtd $module))
                                               (g$f$10411$PT8AO
                                                 (cdr g$r$10412$PT8AO)
                                                 (cons
                                                   g$x$10416$PT8AO
                                                   g$env$10413$PT8AO)
                                                 g$global*$10414$PT8AO
                                                 g$macro*$10415$PT8AO)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$6954$PT8AO
                                                   g$b$10418$PT8AO)
                                                 (g$binding-value$6955$PT8AO
                                                   g$b$10418$PT8AO))))))))
                                    (g$binding-type$6954$PT8AO
                                      g$b$10418$PT8AO))))
                                (car g$x$10416$PT8AO)
                                (cdr g$x$10416$PT8AO))))
                            (car g$r$10412$PT8AO)))))))
             g$f$10411$PT8AO)
           g$r$10409$PT8AO
           '()
           '()
           '())))))
   (g$generate-temporaries$7314$PT8AO
     g$generate-temporaries$10764$PT8AO
     (case-lambda
       ((g$ls$10430$PT8AO)
        ((case-lambda
           ((g$t$10431$PT8AO)
            ((case-lambda
               ((g$ls/false$10432$PT8AO)
                (if g$ls/false$10432$PT8AO
                  (apply
                    (case-lambda
                      ((g$ls$10433$PT8AO)
                       (map (case-lambda
                              ((g$x$10434$PT8AO)
                               (g$make-stx$6910$PT8AO
                                 ((case-lambda
                                    ((g$x$10435$PT8AO)
                                     (if ((case-lambda
                                            ((g$t$10436$PT8AO)
                                             (if g$t$10436$PT8AO
                                               g$t$10436$PT8AO
                                               (begin
                                                 '#f
                                                 (string? g$x$10435$PT8AO)))))
                                          (symbol? g$x$10435$PT8AO))
                                       (gensym g$x$10435$PT8AO)
                                       (gensym 't))))
                                  (g$syntax->datum$7324$PT8AO g$x$10434$PT8AO))
                                 g$top-mark*$6879$PT8AO
                                 '()
                                 '())))
                            g$ls$10433$PT8AO)))
                    g$ls/false$10432$PT8AO)
                  ((case-lambda
                     ((g$t$10437$PT8AO)
                      ((case-lambda
                         ((g$ls/false$10438$PT8AO)
                          (if g$ls/false$10438$PT8AO
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10438$PT8AO)
                            (g$syntax-violation$7321$PT8AO
                              '#f
                              '"invalid syntax"
                              g$t$10437$PT8AO))))
                       (g$syntax-dispatch$7215$PT8AO g$t$10437$PT8AO '_))))
                   g$t$10431$PT8AO))))
             (g$syntax-dispatch$7215$PT8AO g$t$10431$PT8AO 'each-any))))
         g$ls$10430$PT8AO))))
   (g$free-identifier=?$7315$PT8AO
     g$free-identifier=?$10765$PT8AO
     (case-lambda
       ((g$x$10439$PT8AO g$y$10440$PT8AO)
        (if (g$id?$6937$PT8AO g$x$10439$PT8AO)
          (if (g$id?$6937$PT8AO g$y$10440$PT8AO)
            (g$free-id=?$6941$PT8AO g$x$10439$PT8AO g$y$10440$PT8AO)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10440$PT8AO))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10439$PT8AO)))))
   (g$bound-identifier=?$7316$PT8AO
     g$bound-identifier=?$10766$PT8AO
     (case-lambda
       ((g$x$10441$PT8AO g$y$10442$PT8AO)
        (if (g$id?$6937$PT8AO g$x$10441$PT8AO)
          (if (g$id?$6937$PT8AO g$y$10442$PT8AO)
            (g$bound-id=?$6940$PT8AO g$x$10441$PT8AO g$y$10442$PT8AO)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10442$PT8AO))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10441$PT8AO)))))
   (g$extract-position-condition$7317$PT8AO
     g$extract-position-condition$10767$PT8AO
     (case-lambda
       ((g$x$10443$PT8AO)
        (letrec* ((g$11067$10444$PT8AO
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11070$PT8AO
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11069$10445$PT8AO '#f)
                  (g$11068$10446$PT8AO
                    (make-record-constructor-descriptor
                      g$11067$10444$PT8AO
                      &condition-rcd
                      g$11069$10445$PT8AO))
                  (g$11066$10447$PT8AO (record-predicate g$11067$10444$PT8AO))
                  (g$make-source-condition$10448$PT8AO
                    (record-constructor g$11068$10446$PT8AO))
                  (g$11064$10449$PT8AO (record-accessor g$11067$10444$PT8AO '0))
                  (g$11065$10450$PT8AO (record-accessor g$11067$10444$PT8AO '1))
                  (g$source-condition?$10451$PT8AO
                    (condition-predicate g$11067$10444$PT8AO))
                  (g$source-filename$10452$PT8AO
                    (condition-accessor
                      g$11067$10444$PT8AO
                      g$11064$10449$PT8AO))
                  (g$source-character$10453$PT8AO
                    (condition-accessor
                      g$11067$10444$PT8AO
                      g$11065$10450$PT8AO)))
          (if (g$stx?$6909$PT8AO g$x$10443$PT8AO)
            ((case-lambda
               ((g$x$10454$PT8AO)
                (if (annotation? g$x$10454$PT8AO)
                  ((case-lambda
                     ((g$src$10455$PT8AO)
                      (if (pair? g$src$10455$PT8AO)
                        (g$make-source-condition$10448$PT8AO
                          (car g$src$10455$PT8AO)
                          (cdr g$src$10455$PT8AO))
                        (condition))))
                   (annotation-source g$x$10454$PT8AO))
                  (condition))))
             (g$stx-expr$6911$PT8AO g$x$10443$PT8AO))
            (condition))))))
   (g$syntax-error$7318$PT8AO
     g$syntax-error$10768$PT8AO
     (case-lambda
       ((g$x$10456$PT8AO . g$args$10457$PT8AO)
        (begin
          (if (g$for-all$5365$PT8AO string? g$args$10457$PT8AO)
            (void)
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10457$PT8AO))
          (raise
            (condition
              (g$make-message-condition$5619$PT8AO
                (if (null? g$args$10457$PT8AO)
                  '"invalid syntax"
                  (apply string-append g$args$10457$PT8AO)))
              (g$make-syntax-violation$5691$PT8AO
                (g$syntax->datum$7324$PT8AO g$x$10456$PT8AO)
                '#f)
              (g$extract-position-condition$7317$PT8AO g$x$10456$PT8AO)
              (g$extract-trace$7319$PT8AO g$x$10456$PT8AO)))))))
   (g$extract-trace$7319$PT8AO
     g$extract-trace$10769$PT8AO
     (case-lambda
       ((g$x$10458$PT8AO)
        (letrec* ((g$11091$10459$PT8AO
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11094$PT8AO
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11093$10460$PT8AO '#f)
                  (g$11092$10461$PT8AO
                    (make-record-constructor-descriptor
                      g$11091$10459$PT8AO
                      &condition-rcd
                      g$11093$10460$PT8AO))
                  (g$11090$10462$PT8AO (record-predicate g$11091$10459$PT8AO))
                  (g$make-trace$10463$PT8AO
                    (record-constructor g$11092$10461$PT8AO))
                  (g$11089$10464$PT8AO (record-accessor g$11091$10459$PT8AO '0))
                  (g$trace?$10465$PT8AO
                    (condition-predicate g$11091$10459$PT8AO))
                  (g$trace-form$10466$PT8AO
                    (condition-accessor
                      g$11091$10459$PT8AO
                      g$11089$10464$PT8AO)))
          ((letrec ((g$f$10467$PT8AO
                      (case-lambda
                        ((g$x$10468$PT8AO)
                         (if (g$stx?$6909$PT8AO g$x$10468$PT8AO)
                           (apply
                             condition
                             (g$make-trace$10463$PT8AO g$x$10468$PT8AO)
                             (map g$f$10467$PT8AO
                                  (g$stx-ae*$6914$PT8AO g$x$10468$PT8AO)))
                           (if (annotation? g$x$10468$PT8AO)
                             (g$make-trace$10463$PT8AO
                               (g$make-stx$6910$PT8AO
                                 g$x$10468$PT8AO
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10467$PT8AO)
           g$x$10458$PT8AO)))))
   (g$syntax-violation*$7320$PT8AO
     g$syntax-violation*$10770$PT8AO
     (case-lambda
       ((g$who$10469$PT8AO
          g$msg$10470$PT8AO
          g$form$10471$PT8AO
          g$condition-object$10472$PT8AO)
        (begin
          (if (string? g$msg$10470$PT8AO)
            (void)
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10470$PT8AO))
          ((case-lambda
             ((g$who$10473$PT8AO)
              (raise
                (condition
                  (if g$who$10473$PT8AO
                    (g$make-who-condition$5665$PT8AO g$who$10473$PT8AO)
                    (condition))
                  (g$make-message-condition$5619$PT8AO g$msg$10470$PT8AO)
                  g$condition-object$10472$PT8AO
                  (g$extract-position-condition$7317$PT8AO g$form$10471$PT8AO)
                  (g$extract-trace$7319$PT8AO g$form$10471$PT8AO)))))
           (if ((case-lambda
                  ((g$t$10474$PT8AO)
                   (if g$t$10474$PT8AO
                     g$t$10474$PT8AO
                     (begin '#f (symbol? g$who$10469$PT8AO)))))
                (string? g$who$10469$PT8AO))
             g$who$10469$PT8AO
             (if (not g$who$10469$PT8AO)
               ((case-lambda
                  ((g$t$10475$PT8AO)
                   ((case-lambda
                      ((g$ls/false$10476$PT8AO)
                       (if (if g$ls/false$10476$PT8AO
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10477$PT8AO)
                                    (g$id?$6937$PT8AO g$id$10477$PT8AO)))
                                 g$ls/false$10476$PT8AO))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10478$PT8AO)
                              (g$syntax->datum$7324$PT8AO g$id$10478$PT8AO)))
                           g$ls/false$10476$PT8AO)
                         ((case-lambda
                            ((g$t$10479$PT8AO)
                             ((case-lambda
                                ((g$ls/false$10480$PT8AO)
                                 (if (if g$ls/false$10480$PT8AO
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10481$PT8AO
                                                g$rest$10482$PT8AO)
                                              (g$id?$6937$PT8AO
                                                g$id$10481$PT8AO)))
                                           g$ls/false$10480$PT8AO))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10483$PT8AO g$rest$10484$PT8AO)
                                        (g$syntax->datum$7324$PT8AO
                                          g$id$10483$PT8AO)))
                                     g$ls/false$10480$PT8AO)
                                   ((case-lambda
                                      ((g$t$10485$PT8AO)
                                       ((case-lambda
                                          ((g$ls/false$10486$PT8AO)
                                           (if g$ls/false$10486$PT8AO
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10486$PT8AO)
                                             (g$syntax-violation$7321$PT8AO
                                               '#f
                                               '"invalid syntax"
                                               g$t$10485$PT8AO))))
                                        (g$syntax-dispatch$7215$PT8AO
                                          g$t$10485$PT8AO
                                          '_))))
                                    g$t$10479$PT8AO))))
                              (g$syntax-dispatch$7215$PT8AO
                                g$t$10479$PT8AO
                                '(any . any)))))
                          g$t$10475$PT8AO))))
                    (g$syntax-dispatch$7215$PT8AO g$t$10475$PT8AO 'any))))
                g$form$10471$PT8AO)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10469$PT8AO))))))))
   (g$syntax-violation$7321$PT8AO
     g$syntax-violation$10771$PT8AO
     (case-lambda
       ((g$who$10487$PT8AO g$msg$10488$PT8AO g$form$10489$PT8AO)
        (g$syntax-violation$7321$PT8AO
          g$who$10487$PT8AO
          g$msg$10488$PT8AO
          g$form$10489$PT8AO
          '#f))
       ((g$who$10490$PT8AO
          g$msg$10491$PT8AO
          g$form$10492$PT8AO
          g$subform$10493$PT8AO)
        (g$syntax-violation*$7320$PT8AO
          g$who$10490$PT8AO
          g$msg$10491$PT8AO
          g$form$10492$PT8AO
          (g$make-syntax-violation$5691$PT8AO
            (g$syntax->datum$7324$PT8AO g$form$10492$PT8AO)
            (g$syntax->datum$7324$PT8AO g$subform$10493$PT8AO))))))
   (g$identifier?$7322$PT8AO
     g$identifier?$10772$PT8AO
     (case-lambda ((g$x$10494$PT8AO) (g$id?$6937$PT8AO g$x$10494$PT8AO))))
   (g$datum->syntax$7323$PT8AO
     g$datum->syntax$10773$PT8AO
     (case-lambda
       ((g$id$10495$PT8AO g$datum$10496$PT8AO)
        (if (g$id?$6937$PT8AO g$id$10495$PT8AO)
          (g$datum->stx$6920$PT8AO g$id$10495$PT8AO g$datum$10496$PT8AO)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10495$PT8AO)))))
   (g$syntax->datum$7324$PT8AO
     g$syntax->datum$10774$PT8AO
     (case-lambda
       ((g$x$10497$PT8AO) (g$stx->datum$6948$PT8AO g$x$10497$PT8AO))))
   (g$compile-r6rs-top-level$7325$PT8AO
     g$compile-r6rs-top-level$10775$PT8AO
     (case-lambda
       ((g$x*$10498$PT8AO)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7275$PT8AO g$x*$10498$PT8AO)))
          (case-lambda
            ((g$lib*$10501$PT8AO g$invoke-code$10502$PT8AO)
             ((case-lambda
                ((g$invoke-code$10503$PT8AO g$lib*$10504$PT8AO)
                 (case-lambda
                   (()
                    (begin
                      (for-each g$invoke-library$6752$PT8AO g$lib*$10504$PT8AO)
                      (eval-core
                        (g$expanded->core$6451$PT8AO
                          g$invoke-code$10503$PT8AO)))))))
              g$invoke-code$10502$PT8AO
              g$lib*$10501$PT8AO)))))))
   (g$pre-compile-r6rs-top-level$7326$PT8AO
     g$pre-compile-r6rs-top-level$10776$PT8AO
     (case-lambda
       ((g$x*$10505$PT8AO)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7275$PT8AO g$x*$10505$PT8AO)))
          (case-lambda
            ((g$lib*$10508$PT8AO g$invoke-code$10509$PT8AO)
             ((case-lambda
                ((g$invoke-code$10510$PT8AO g$lib*$10511$PT8AO)
                 (begin
                   (for-each g$invoke-library$6752$PT8AO g$lib*$10511$PT8AO)
                   (compile-core
                     (g$expanded->core$6451$PT8AO g$invoke-code$10510$PT8AO)))))
              g$invoke-code$10509$PT8AO
              g$lib*$10508$PT8AO)))))))
   (g$interaction-environment$7327$PT8AO
     g$interaction-environment$10777$PT8AO
     ((case-lambda
        ((g$the-env$10512$PT8AO)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10513$PT8AO)
                (if g$t$10513$PT8AO
                  g$t$10513$PT8AO
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10514$PT8AO g$rib$10515$PT8AO)
                        (begin
                          ((case-lambda
                             ((g$subst$10516$PT8AO)
                              (begin
                                (g$set-rib-sym*!$6896$PT8AO
                                  g$rib$10515$PT8AO
                                  (map car g$subst$10516$PT8AO))
                                (g$set-rib-mark**!$6897$PT8AO
                                  g$rib$10515$PT8AO
                                  (map (case-lambda
                                         ((g$x$10517$PT8AO)
                                          g$top-mark*$6879$PT8AO))
                                       g$subst$10516$PT8AO))
                                (g$set-rib-label*!$6898$PT8AO
                                  g$rib$10515$PT8AO
                                  (map cdr g$subst$10516$PT8AO)))))
                           (g$library-subst$6709$PT8AO g$lib$10514$PT8AO))
                          ((case-lambda
                             ((g$env$10518$PT8AO)
                              (begin
                                (set! g$the-env$10512$PT8AO g$env$10518$PT8AO)
                                g$env$10518$PT8AO)))
                           (g$make-interaction-env$7292$PT8AO
                             g$rib$10515$PT8AO
                             '()
                             '())))))
                     (g$find-library-by-name$6745$PT8AO '(ironscheme))
                     (g$make-empty-rib$6900$PT8AO))))))
             g$the-env$10512$PT8AO)))))
      '#f))
   (g$top-level-context$7328$PT8AO
     g$top-level-context$10778$PT8AO
     (g$make-parameter$6205$PT8AO '#f)))
  (g$current-library-expander$6742$PT8AO g$library-expander$7308$PT8AO))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6448$PT8AO
      (case-lambda
        ((g$x$10815$PT8AO)
         ((case-lambda
            ((g$t$10816$PT8AO) (if g$t$10816$PT8AO (cdr g$t$10816$PT8AO) '#f)))
          (assq
            g$x$10815$PT8AO
            '((ellipsis-map . g$ellipsis-map$10670$PT8AO)
              (ironscheme-build . g$ironscheme-build$10809$PT8AO)
              (syntax-error . g$syntax-error$10768$PT8AO)
              (syntax-dispatch . g$syntax-dispatch$10665$PT8AO)
              (compile-system-libraries
                .
                g$compile-system-libraries$10811$PT8AO)
              (compile->closure . g$compile->closure$10813$PT8AO)
              (compile . g$compile$10812$PT8AO)
              (load . g$load$10808$PT8AO)
              (interaction-environment . g$interaction-environment$10777$PT8AO)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$10603$PT8AO)
              (variable-transformer? . g$variable-transformer?$10602$PT8AO)
              (make-variable-transformer
                .
                g$make-variable-transformer$10601$PT8AO)
              (identifier? . g$identifier?$10772$PT8AO)
              (generate-temporaries . g$generate-temporaries$10764$PT8AO)
              (free-identifier=? . g$free-identifier=?$10765$PT8AO)
              (syntax->datum . g$syntax->datum$10774$PT8AO)
              (datum->syntax . g$datum->syntax$10773$PT8AO)
              (bound-identifier=? . g$bound-identifier=?$10766$PT8AO)
              (delete-file . g$delete-file$5237$PT8AO)
              (file-exists? . g$file-exists?$5236$PT8AO)
              (list-sort . g$list-sort$5753$PT8AO)
              (make-eqv-hashtable . g$make-eqv-hashtable$5159$PT8AO)
              (make-eq-hashtable . g$make-eq-hashtable$5158$PT8AO)
              (hashtable-update! . g$hashtable-update!$5165$PT8AO)
              (hashtable-size . g$hashtable-size$5160$PT8AO)
              (hashtable-set! . g$hashtable-set!$5162$PT8AO)
              (hashtable-ref . g$hashtable-ref$5161$PT8AO)
              (hashtable-delete! . g$hashtable-delete!$5163$PT8AO)
              (hashtable-contains? . g$hashtable-contains?$5164$PT8AO)
              (hashtable-clear! . g$hashtable-clear!$5166$PT8AO)
              (open-string-output-port . g$open-string-output-port$6095$PT8AO)
              (make-i/o-write-error . g$make-i/o-write-error$6024$PT8AO)
              (make-i/o-read-error . g$make-i/o-read-error$6018$PT8AO)
              (make-i/o-port-error . g$make-i/o-port-error$6070$PT8AO)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6030$PT8AO)
              (make-i/o-filename-error . g$make-i/o-filename-error$6038$PT8AO)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6046$PT8AO)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6052$PT8AO)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6064$PT8AO)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6058$PT8AO)
              (make-i/o-error . g$make-i/o-error$6012$PT8AO)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6084$PT8AO)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6078$PT8AO)
              (i/o-write-error? . g$i/o-write-error?$6025$PT8AO)
              (i/o-read-error? . g$i/o-read-error?$6019$PT8AO)
              (i/o-port-error? . g$i/o-port-error?$6072$PT8AO)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6032$PT8AO)
              (i/o-filename-error? . g$i/o-filename-error?$6040$PT8AO)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6047$PT8AO)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6053$PT8AO)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6065$PT8AO)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6059$PT8AO)
              (i/o-error? . g$i/o-error?$6013$PT8AO)
              (i/o-error-port . g$i/o-error-port$6073$PT8AO)
              (i/o-error-filename . g$i/o-error-filename$6041$PT8AO)
              (i/o-encoding-error? . g$i/o-encoding-error?$6086$PT8AO)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6087$PT8AO)
              (i/o-decoding-error? . g$i/o-decoding-error?$6079$PT8AO)
              (scheme-report-environment
                .
                g$scheme-report-environment$10755$PT8AO)
              (quotient . g$quotient$5722$PT8AO)
              (null-environment . g$null-environment$10754$PT8AO)
              (remainder . g$remainder$5723$PT8AO)
              (modulo . g$modulo$5724$PT8AO)
              (remove . g$remove$5370$PT8AO)
              (remv . g$remv$5371$PT8AO)
              (remp . g$remp$5356$PT8AO)
              (remq . g$remq$5372$PT8AO)
              (partition . g$partition$5355$PT8AO)
              (memp . g$memp$5362$PT8AO)
              (member . g$member$5361$PT8AO)
              (exists . g$exists$5366$PT8AO)
              (for-all . g$for-all$5365$PT8AO)
              (fold-right . g$fold-right$5369$PT8AO)
              (fold-left . g$fold-left$5368$PT8AO)
              (find . g$find$5354$PT8AO)
              (filter . g$filter$5357$PT8AO)
              (cons* . g$cons*$5367$PT8AO)
              (assv . g$assv$5358$PT8AO)
              (assp . g$assp$5360$PT8AO)
              (assoc . g$assoc$5359$PT8AO)
              (eval . g$eval$10757$PT8AO)
              (environment . g$environment$10753$PT8AO)
              (who-condition? . g$who-condition?$5667$PT8AO)
              (warning? . g$warning?$5628$PT8AO)
              (violation? . g$violation?$5646$PT8AO)
              (undefined-violation? . g$undefined-violation?$5702$PT8AO)
              (syntax-violation? . g$syntax-violation?$5694$PT8AO)
              (syntax-violation-subform . g$syntax-violation-subform$5696$PT8AO)
              (syntax-violation-form . g$syntax-violation-form$5695$PT8AO)
              (syntax-violation . g$syntax-violation$10771$PT8AO)
              (serious-condition? . g$serious-condition?$5634$PT8AO)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5674$PT8AO)
              (message-condition? . g$message-condition?$5621$PT8AO)
              (make-who-condition . g$make-who-condition$5665$PT8AO)
              (make-warning . g$make-warning$5627$PT8AO)
              (make-violation . g$make-violation$5645$PT8AO)
              (make-undefined-violation . g$make-undefined-violation$5701$PT8AO)
              (make-syntax-violation . g$make-syntax-violation$5691$PT8AO)
              (make-serious-condition . g$make-serious-condition$5633$PT8AO)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5673$PT8AO)
              (make-message-condition . g$make-message-condition$5619$PT8AO)
              (make-lexical-violation . g$make-lexical-violation$5685$PT8AO)
              (make-irritants-condition . g$make-irritants-condition$5657$PT8AO)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5679$PT8AO)
              (make-error . g$make-error$5639$PT8AO)
              (make-assertion-violation . g$make-assertion-violation$5651$PT8AO)
              (lexical-violation? . g$lexical-violation?$5686$PT8AO)
              (irritants-condition? . g$irritants-condition?$5659$PT8AO)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5680$PT8AO)
              (error? . g$error?$5640$PT8AO)
              (condition-who . g$condition-who$5668$PT8AO)
              (condition-message . g$condition-message$5622$PT8AO)
              (condition-irritants . g$condition-irritants$5660$PT8AO)
              (assertion-violation? . g$assertion-violation?$5652$PT8AO)
              (native-endianness . g$native-endianness$5484$PT8AO)
              (bytevector-u64-set! . g$bytevector-u64-set!$5505$PT8AO)
              (bytevector-u64-ref . g$bytevector-u64-ref$5501$PT8AO)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5507$PT8AO)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5503$PT8AO)
              (bytevector-u32-set! . g$bytevector-u32-set!$5497$PT8AO)
              (bytevector-u32-ref . g$bytevector-u32-ref$5493$PT8AO)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5499$PT8AO)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5495$PT8AO)
              (bytevector-u16-set! . g$bytevector-u16-set!$5489$PT8AO)
              (bytevector-u16-ref . g$bytevector-u16-ref$5485$PT8AO)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5491$PT8AO)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5487$PT8AO)
              (bytevector-s64-set! . g$bytevector-s64-set!$5506$PT8AO)
              (bytevector-s64-ref . g$bytevector-s64-ref$5502$PT8AO)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5508$PT8AO)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5504$PT8AO)
              (bytevector-s32-set! . g$bytevector-s32-set!$5498$PT8AO)
              (bytevector-s32-ref . g$bytevector-s32-ref$5494$PT8AO)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5500$PT8AO)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5496$PT8AO)
              (bytevector-s16-set! . g$bytevector-s16-set!$5490$PT8AO)
              (bytevector-s16-ref . g$bytevector-s16-ref$5486$PT8AO)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5492$PT8AO)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5488$PT8AO)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5511$PT8AO)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5509$PT8AO)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5512$PT8AO)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5510$PT8AO)
              (no-nans-violation? . g$no-nans-violation?$5927$PT8AO)
              (no-infinities-violation? . g$no-infinities-violation?$5921$PT8AO)
              (make-no-nans-violation . g$make-no-nans-violation$5926$PT8AO)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$5920$PT8AO)
              (fxrotate-bit-field . g$fxrotate-bit-field$5903$PT8AO)
              (fxif . g$fxif$5897$PT8AO)
              (fxcopy-bit-field . g$fxcopy-bit-field$5900$PT8AO)
              (fxcopy-bit . g$fxcopy-bit$5898$PT8AO)
              (fxbit-field . g$fxbit-field$5899$PT8AO)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$5902$PT8AO)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$5901$PT8AO)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$5848$PT8AO)
              (bitwise-reverse-bit-field
                .
                g$bitwise-reverse-bit-field$5849$PT8AO)
              (bitwise-if . g$bitwise-if$5842$PT8AO)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$5845$PT8AO)
              (bitwise-copy-bit . g$bitwise-copy-bit$5843$PT8AO)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$5847$PT8AO)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$5846$PT8AO)
              (rationalize . g$rationalize$4923$PT8AO)
              (cddddr . g$cddddr$4922$PT8AO)
              (cdddar . g$cdddar$4921$PT8AO)
              (cddadr . g$cddadr$4920$PT8AO)
              (cddaar . g$cddaar$4919$PT8AO)
              (cdaddr . g$cdaddr$4918$PT8AO)
              (cdadar . g$cdadar$4917$PT8AO)
              (cdaadr . g$cdaadr$4916$PT8AO)
              (cdaaar . g$cdaaar$4915$PT8AO)
              (cadddr . g$cadddr$4914$PT8AO)
              (caddar . g$caddar$4913$PT8AO)
              (cadadr . g$cadadr$4912$PT8AO)
              (cadaar . g$cadaar$4911$PT8AO)
              (caaddr . g$caaddr$4910$PT8AO)
              (caadar . g$caadar$4909$PT8AO)
              (caaadr . g$caaadr$4908$PT8AO)
              (caaaar . g$caaaar$4907$PT8AO)
              (cdddr . g$cdddr$4906$PT8AO)
              (cddar . g$cddar$4905$PT8AO)
              (cdadr . g$cdadr$4904$PT8AO)
              (cdaar . g$cdaar$4903$PT8AO)
              (caddr . g$caddr$4902$PT8AO)
              (cadar . g$cadar$4901$PT8AO)
              (caadr . g$caadr$4900$PT8AO)
              (caaar . g$caaar$4899$PT8AO)
              (cddr . g$cddr$4898$PT8AO)
              (cdar . g$cdar$4897$PT8AO)
              (cadr . g$cadr$4896$PT8AO)
              (caar . g$caar$4895$PT8AO)
              (printf . g$printf$6119$PT8AO)
              (fprintf . g$fprintf$6120$PT8AO)
              (format . g$format$6121$PT8AO)
              (trace-printer . g$trace-printer$10806$PT8AO)
              (make-traced-macro . g$make-traced-macro$6125$PT8AO)
              (make-parameter . g$make-parameter$6205$PT8AO)
              (environment-symbols . g$environment-symbols$10751$PT8AO)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$10750$PT8AO)
              (library-path . g$library-path$6734$PT8AO)
              (library-extensions . g$library-extensions$6735$PT8AO)
              (installed-libraries . g$installed-libraries$6755$PT8AO)
              (expand . g$expand$10756$PT8AO)))))))
    (g$install-library$6750$PT8AO
      'g$11840$PT8AO
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$11777$PT8AO)
        (cosh . g$11776$PT8AO)
        (sinh . g$11775$PT8AO)
        (make-guid . g$11774$PT8AO)
        (unspecified? . g$11773$PT8AO)
        (make-trace . g$11772$PT8AO)
        (make-list . g$11771$PT8AO)
        (last-pair . g$11770$PT8AO)
        (load-r5rs . g$11769$PT8AO)
        (license . g$11768$PT8AO)
        (stacktrace . g$11767$PT8AO)
        (ironscheme-build . g$11161$PT8AO)
        (set-symbol-value! . g$11753$PT8AO)
        (symbol-value . g$11752$PT8AO)
        (ungensym . g$11751$PT8AO)
        (gensym . g$11750$PT8AO)
        (void . g$11749$PT8AO)
        (compile-system-libraries . g$11163$PT8AO)
        (compile->closure . g$11165$PT8AO)
        (compile . g$11164$PT8AO)
        (load . g$11160$PT8AO)
        (interaction-environment . g$8231$PT8AO)
        (string-upcase . g$11745$PT8AO)
        (string-titlecase . g$11744$PT8AO)
        (string-normalize-nfkd . g$11743$PT8AO)
        (string-normalize-nfkc . g$11742$PT8AO)
        (string-normalize-nfd . g$11741$PT8AO)
        (string-normalize-nfc . g$11740$PT8AO)
        (string-foldcase . g$11739$PT8AO)
        (string-downcase . g$11738$PT8AO)
        (string-ci>? . g$11737$PT8AO)
        (string-ci>=? . g$11736$PT8AO)
        (string-ci=? . g$11735$PT8AO)
        (string-ci<? . g$11734$PT8AO)
        (string-ci<=? . g$11733$PT8AO)
        (char-whitespace? . g$11732$PT8AO)
        (char-upper-case? . g$11731$PT8AO)
        (char-title-case? . g$11730$PT8AO)
        (char-numeric? . g$11729$PT8AO)
        (char-lower-case? . g$11728$PT8AO)
        (char-general-category . g$11727$PT8AO)
        (char-upcase . g$11726$PT8AO)
        (char-titlecase . g$11725$PT8AO)
        (char-foldcase . g$11724$PT8AO)
        (char-downcase . g$11723$PT8AO)
        (char-ci>? . g$11722$PT8AO)
        (char-ci>=? . g$11721$PT8AO)
        (char-ci=? . g$11720$PT8AO)
        (char-ci<? . g$11719$PT8AO)
        (char-ci<=? . g$11718$PT8AO)
        (char-alphabetic? . g$11717$PT8AO)
        (variable-transformer-procedure . g$7835$PT8AO)
        (variable-transformer? . g$7834$PT8AO)
        (make-variable-transformer . g$7833$PT8AO)
        (identifier? . g$8226$PT8AO)
        (generate-temporaries . g$8218$PT8AO)
        (free-identifier=? . g$8219$PT8AO)
        (syntax->datum . g$8228$PT8AO)
        (datum->syntax . g$8227$PT8AO)
        (bound-identifier=? . g$8220$PT8AO)
        (record-type-descriptor? . g$11716$PT8AO)
        (record-predicate . g$11715$PT8AO)
        (record-mutator . g$11714$PT8AO)
        (record-constructor . g$11713$PT8AO)
        (record-accessor . g$11712$PT8AO)
        (make-record-type-descriptor . g$11711$PT8AO)
        (make-record-constructor-descriptor . g$11710$PT8AO)
        (record? . g$11709$PT8AO)
        (record-type-uid . g$11708$PT8AO)
        (record-type-sealed? . g$11707$PT8AO)
        (record-type-parent . g$11706$PT8AO)
        (record-type-opaque? . g$11705$PT8AO)
        (record-type-name . g$11704$PT8AO)
        (record-type-generative? . g$11703$PT8AO)
        (record-type-field-names . g$11702$PT8AO)
        (record-rtd . g$11701$PT8AO)
        (record-field-mutable? . g$11700$PT8AO)
        (delete-file . g$6016$PT8AO)
        (file-exists? . g$6015$PT8AO)
        (vector-sort! . g$11699$PT8AO)
        (vector-sort . g$11698$PT8AO)
        (list-sort . g$6523$PT8AO)
        (symbol-hash . g$11697$PT8AO)
        (string-ci-hash . g$11696$PT8AO)
        (string-hash . g$11695$PT8AO)
        (equal-hash . g$11694$PT8AO)
        (hashtable-equivalence-function . g$11693$PT8AO)
        (make-hashtable . g$11692$PT8AO)
        (hashtable-hash-function . g$11691$PT8AO)
        (make-eqv-hashtable . g$5983$PT8AO)
        (make-eq-hashtable . g$5982$PT8AO)
        (hashtable? . g$11690$PT8AO)
        (hashtable-update! . g$5989$PT8AO)
        (hashtable-size . g$5984$PT8AO)
        (hashtable-set! . g$5986$PT8AO)
        (hashtable-ref . g$5985$PT8AO)
        (hashtable-mutable? . g$11689$PT8AO)
        (hashtable-keys . g$11688$PT8AO)
        (hashtable-entries . g$11687$PT8AO)
        (hashtable-delete! . g$5987$PT8AO)
        (hashtable-copy . g$11686$PT8AO)
        (hashtable-contains? . g$5988$PT8AO)
        (hashtable-clear! . g$5990$PT8AO)
        (call-with-output-file . g$11685$PT8AO)
        (call-with-input-file . g$11684$PT8AO)
        (write-char . g$11683$PT8AO)
        (write . g$11682$PT8AO)
        (with-output-to-file . g$11681$PT8AO)
        (with-input-from-file . g$11680$PT8AO)
        (read-char . g$11679$PT8AO)
        (read . g$11678$PT8AO)
        (peek-char . g$11677$PT8AO)
        (open-output-file . g$11676$PT8AO)
        (open-input-file . g$11675$PT8AO)
        (newline . g$11674$PT8AO)
        (display . g$11673$PT8AO)
        (close-output-port . g$11672$PT8AO)
        (close-input-port . g$11671$PT8AO)
        (eof-object? . g$11670$PT8AO)
        (eof-object . g$11669$PT8AO)
        (current-error-port . g$11668$PT8AO)
        (current-output-port . g$11667$PT8AO)
        (current-input-port . g$11666$PT8AO)
        (output-port? . g$11665$PT8AO)
        (input-port? . g$11664$PT8AO)
        (utf-8-codec . g$11663$PT8AO)
        (utf-16-codec . g$11662$PT8AO)
        (transcoder-error-handling-mode . g$11661$PT8AO)
        (transcoder-eol-style . g$11660$PT8AO)
        (transcoder-codec . g$11659$PT8AO)
        (transcoded-port . g$11658$PT8AO)
        (textual-port? . g$11657$PT8AO)
        (string->bytevector . g$11656$PT8AO)
        (standard-output-port . g$11655$PT8AO)
        (standard-input-port . g$11654$PT8AO)
        (standard-error-port . g$11653$PT8AO)
        (set-port-position! . g$11652$PT8AO)
        (put-u8 . g$11651$PT8AO)
        (put-string . g$11650$PT8AO)
        (put-datum . g$11649$PT8AO)
        (put-char . g$11648$PT8AO)
        (put-bytevector . g$11647$PT8AO)
        (port? . g$11646$PT8AO)
        (port-transcoder . g$11645$PT8AO)
        (port-position . g$11644$PT8AO)
        (port-has-set-port-position!? . g$11643$PT8AO)
        (port-has-port-position? . g$11642$PT8AO)
        (port-eof? . g$11641$PT8AO)
        (output-port-buffer-mode . g$11640$PT8AO)
        (open-string-output-port . g$6914$PT8AO)
        (open-string-input-port . g$11639$PT8AO)
        (open-file-output-port . g$11638$PT8AO)
        (open-file-input/output-port . g$11637$PT8AO)
        (open-file-input-port . g$11636$PT8AO)
        (open-bytevector-output-port . g$11635$PT8AO)
        (open-bytevector-input-port . g$11634$PT8AO)
        (native-transcoder . g$11633$PT8AO)
        (native-eol-style . g$11632$PT8AO)
        (make-transcoder . g$11631$PT8AO)
        (latin-1-codec . g$11630$PT8AO)
        (make-i/o-write-error . g$6771$PT8AO)
        (make-i/o-read-error . g$6757$PT8AO)
        (make-i/o-port-error . g$6876$PT8AO)
        (make-i/o-invalid-position-error . g$6786$PT8AO)
        (make-i/o-filename-error . g$6803$PT8AO)
        (make-i/o-file-protection-error . g$6819$PT8AO)
        (make-i/o-file-is-read-only-error . g$6833$PT8AO)
        (make-i/o-file-does-not-exist-error . g$6861$PT8AO)
        (make-i/o-file-already-exists-error . g$6847$PT8AO)
        (make-i/o-error . g$6743$PT8AO)
        (make-i/o-encoding-error . g$6907$PT8AO)
        (make-i/o-decoding-error . g$6892$PT8AO)
        (make-custom-textual-output-port . g$11629$PT8AO)
        (make-custom-textual-input/output-port . g$11628$PT8AO)
        (make-custom-textual-input-port . g$11627$PT8AO)
        (make-custom-binary-output-port . g$11626$PT8AO)
        (make-custom-binary-input/output-port . g$11625$PT8AO)
        (make-custom-binary-input-port . g$11624$PT8AO)
        (make-bytevector . g$11623$PT8AO)
        (lookahead-u8 . g$11622$PT8AO)
        (lookahead-char . g$11621$PT8AO)
        (i/o-write-error? . g$6772$PT8AO)
        (i/o-read-error? . g$6758$PT8AO)
        (i/o-port-error? . g$6878$PT8AO)
        (i/o-invalid-position-error? . g$6788$PT8AO)
        (i/o-filename-error? . g$6805$PT8AO)
        (i/o-file-protection-error? . g$6820$PT8AO)
        (i/o-file-is-read-only-error? . g$6834$PT8AO)
        (i/o-file-does-not-exist-error? . g$6862$PT8AO)
        (i/o-file-already-exists-error? . g$6848$PT8AO)
        (i/o-error? . g$6744$PT8AO)
        (i/o-error-port . g$6879$PT8AO)
        (i/o-error-filename . g$6806$PT8AO)
        (i/o-encoding-error? . g$6909$PT8AO)
        (i/o-encoding-error-char . g$6910$PT8AO)
        (i/o-decoding-error? . g$6893$PT8AO)
        (get-u8 . g$11620$PT8AO)
        (get-string-n! . g$11619$PT8AO)
        (get-string-n . g$11618$PT8AO)
        (get-string-all . g$11617$PT8AO)
        (get-line . g$11616$PT8AO)
        (get-datum . g$11615$PT8AO)
        (get-char . g$11614$PT8AO)
        (get-bytevector-some . g$11613$PT8AO)
        (get-bytevector-n! . g$11612$PT8AO)
        (get-bytevector-n . g$11611$PT8AO)
        (get-bytevector-all . g$11610$PT8AO)
        (flush-output-port . g$11609$PT8AO)
        (close-port . g$11608$PT8AO)
        (call-with-string-output-port . g$11607$PT8AO)
        (call-with-port . g$11606$PT8AO)
        (call-with-bytevector-output-port . g$11605$PT8AO)
        (bytevector->string . g$11604$PT8AO)
        (buffer-mode? . g$11603$PT8AO)
        (binary-port? . g$11602$PT8AO)
        (scheme-report-environment . g$8209$PT8AO)
        (quotient . g$6510$PT8AO)
        (null-environment . g$8208$PT8AO)
        (remainder . g$6511$PT8AO)
        (modulo . g$6512$PT8AO)
        (inexact->exact . g$11601$PT8AO)
        (force . g$11600$PT8AO)
        (exact->inexact . g$11599$PT8AO)
        (exit . g$11598$PT8AO)
        (command-line . g$11597$PT8AO)
        (string-fill! . g$11596$PT8AO)
        (string-set! . g$11595$PT8AO)
        (set-cdr! . g$11594$PT8AO)
        (set-car! . g$11593$PT8AO)
        (remove . g$6096$PT8AO)
        (remv . g$6097$PT8AO)
        (remp . g$6082$PT8AO)
        (remq . g$6098$PT8AO)
        (partition . g$6081$PT8AO)
        (memv . g$11592$PT8AO)
        (memq . g$11591$PT8AO)
        (memp . g$6088$PT8AO)
        (member . g$6087$PT8AO)
        (exists . g$6092$PT8AO)
        (for-all . g$6091$PT8AO)
        (fold-right . g$6095$PT8AO)
        (fold-left . g$6094$PT8AO)
        (find . g$6080$PT8AO)
        (filter . g$6083$PT8AO)
        (cons* . g$6093$PT8AO)
        (assv . g$6084$PT8AO)
        (assq . g$11590$PT8AO)
        (assp . g$6086$PT8AO)
        (assoc . g$6085$PT8AO)
        (with-exception-handler . g$11589$PT8AO)
        (raise-continuable . g$11588$PT8AO)
        (raise . g$11587$PT8AO)
        (eval . g$8211$PT8AO)
        (environment . g$8207$PT8AO)
        (make-enumeration . g$11586$PT8AO)
        (enum-set=? . g$11585$PT8AO)
        (enum-set-universe . g$11584$PT8AO)
        (enum-set-union . g$11583$PT8AO)
        (enum-set-subset? . g$11582$PT8AO)
        (enum-set-projection . g$11581$PT8AO)
        (enum-set-member? . g$11580$PT8AO)
        (enum-set-intersection . g$11579$PT8AO)
        (enum-set-indexer . g$11578$PT8AO)
        (enum-set-difference . g$11577$PT8AO)
        (enum-set-constructor . g$11576$PT8AO)
        (enum-set-complement . g$11575$PT8AO)
        (enum-set->list . g$11574$PT8AO)
        (who-condition? . g$6421$PT8AO)
        (warning? . g$6332$PT8AO)
        (violation? . g$6374$PT8AO)
        (undefined-violation? . g$6498$PT8AO)
        (syntax-violation? . g$6482$PT8AO)
        (syntax-violation-subform . g$6484$PT8AO)
        (syntax-violation-form . g$6483$PT8AO)
        (syntax-violation . g$8225$PT8AO)
        (simple-conditions . g$11573$PT8AO)
        (serious-condition? . g$6346$PT8AO)
        (non-continuable-violation? . g$6436$PT8AO)
        (message-condition? . g$6317$PT8AO)
        (make-who-condition . g$6419$PT8AO)
        (make-warning . g$6331$PT8AO)
        (make-violation . g$6373$PT8AO)
        (make-undefined-violation . g$6497$PT8AO)
        (make-syntax-violation . g$6479$PT8AO)
        (make-serious-condition . g$6345$PT8AO)
        (make-non-continuable-violation . g$6435$PT8AO)
        (make-message-condition . g$6315$PT8AO)
        (make-lexical-violation . g$6463$PT8AO)
        (make-irritants-condition . g$6402$PT8AO)
        (make-implementation-restriction-violation . g$6449$PT8AO)
        (make-error . g$6359$PT8AO)
        (make-assertion-violation . g$6387$PT8AO)
        (lexical-violation? . g$6464$PT8AO)
        (irritants-condition? . g$6404$PT8AO)
        (implementation-restriction-violation? . g$6450$PT8AO)
        (error? . g$6360$PT8AO)
        (condition-who . g$6422$PT8AO)
        (condition-predicate . g$11572$PT8AO)
        (condition-message . g$6318$PT8AO)
        (condition-irritants . g$6405$PT8AO)
        (condition-accessor . g$11571$PT8AO)
        (condition . g$11570$PT8AO)
        (assertion-violation? . g$6388$PT8AO)
        (condition? . g$11569$PT8AO)
        (utf32->string . g$11568$PT8AO)
        (utf16->string . g$11567$PT8AO)
        (utf8->string . g$11566$PT8AO)
        (uint-list->bytevector . g$11565$PT8AO)
        (u8-list->bytevector . g$11564$PT8AO)
        (string->utf8 . g$11563$PT8AO)
        (string->utf32 . g$11562$PT8AO)
        (string->utf16 . g$11561$PT8AO)
        (sint-list->bytevector . g$11560$PT8AO)
        (native-endianness . g$6172$PT8AO)
        (bytevector? . g$11559$PT8AO)
        (bytevector=? . g$11558$PT8AO)
        (bytevector-uint-set! . g$11557$PT8AO)
        (bytevector-uint-ref . g$11556$PT8AO)
        (bytevector-u8-set! . g$11555$PT8AO)
        (bytevector-u8-ref . g$11554$PT8AO)
        (bytevector-u64-set! . g$6193$PT8AO)
        (bytevector-u64-ref . g$6189$PT8AO)
        (bytevector-u64-native-set! . g$6195$PT8AO)
        (bytevector-u64-native-ref . g$6191$PT8AO)
        (bytevector-u32-set! . g$6185$PT8AO)
        (bytevector-u32-ref . g$6181$PT8AO)
        (bytevector-u32-native-set! . g$6187$PT8AO)
        (bytevector-u32-native-ref . g$6183$PT8AO)
        (bytevector-u16-set! . g$6177$PT8AO)
        (bytevector-u16-ref . g$6173$PT8AO)
        (bytevector-u16-native-set! . g$6179$PT8AO)
        (bytevector-u16-native-ref . g$6175$PT8AO)
        (bytevector-sint-set! . g$11553$PT8AO)
        (bytevector-sint-ref . g$11552$PT8AO)
        (bytevector-s8-set! . g$11551$PT8AO)
        (bytevector-s8-ref . g$11550$PT8AO)
        (bytevector-s64-set! . g$6194$PT8AO)
        (bytevector-s64-ref . g$6190$PT8AO)
        (bytevector-s64-native-set! . g$6196$PT8AO)
        (bytevector-s64-native-ref . g$6192$PT8AO)
        (bytevector-s32-set! . g$6186$PT8AO)
        (bytevector-s32-ref . g$6182$PT8AO)
        (bytevector-s32-native-set! . g$6188$PT8AO)
        (bytevector-s32-native-ref . g$6184$PT8AO)
        (bytevector-s16-set! . g$6178$PT8AO)
        (bytevector-s16-ref . g$6174$PT8AO)
        (bytevector-s16-native-set! . g$6180$PT8AO)
        (bytevector-s16-native-ref . g$6176$PT8AO)
        (bytevector-length . g$11549$PT8AO)
        (bytevector-ieee-single-set! . g$11548$PT8AO)
        (bytevector-ieee-single-ref . g$11547$PT8AO)
        (bytevector-ieee-single-native-set! . g$6199$PT8AO)
        (bytevector-ieee-single-native-ref . g$6197$PT8AO)
        (bytevector-ieee-double-set! . g$11546$PT8AO)
        (bytevector-ieee-double-ref . g$11545$PT8AO)
        (bytevector-ieee-double-native-set! . g$6200$PT8AO)
        (bytevector-ieee-double-native-ref . g$6198$PT8AO)
        (bytevector-fill! . g$11544$PT8AO)
        (bytevector-copy! . g$11543$PT8AO)
        (bytevector-copy . g$11542$PT8AO)
        (bytevector->uint-list . g$11541$PT8AO)
        (bytevector->u8-list . g$11540$PT8AO)
        (bytevector->sint-list . g$11539$PT8AO)
        (no-nans-violation? . g$6729$PT8AO)
        (no-infinities-violation? . g$6715$PT8AO)
        (make-no-nans-violation . g$6728$PT8AO)
        (make-no-infinities-violation . g$6714$PT8AO)
        (real->flonum . g$11538$PT8AO)
        (flzero? . g$11537$PT8AO)
        (fltruncate . g$11536$PT8AO)
        (fltan . g$11535$PT8AO)
        (flsqrt . g$11534$PT8AO)
        (flsin . g$11533$PT8AO)
        (flround . g$11532$PT8AO)
        (flpositive? . g$11531$PT8AO)
        (flonum? . g$11530$PT8AO)
        (flodd? . g$11529$PT8AO)
        (flnumerator . g$11528$PT8AO)
        (flnegative? . g$11527$PT8AO)
        (flnan? . g$11526$PT8AO)
        (flmod0 . g$11525$PT8AO)
        (flmod . g$11524$PT8AO)
        (flmin . g$11523$PT8AO)
        (flmax . g$11522$PT8AO)
        (fllog . g$11521$PT8AO)
        (flinteger? . g$11520$PT8AO)
        (flinfinite? . g$11519$PT8AO)
        (flfloor . g$11518$PT8AO)
        (flfinite? . g$11517$PT8AO)
        (flexpt . g$11516$PT8AO)
        (flexp . g$11515$PT8AO)
        (fleven? . g$11514$PT8AO)
        (fldiv0-and-mod0 . g$11513$PT8AO)
        (fldiv0 . g$11512$PT8AO)
        (fldiv-and-mod . g$11511$PT8AO)
        (fldiv . g$11510$PT8AO)
        (fldenominator . g$11509$PT8AO)
        (flcos . g$11508$PT8AO)
        (flceiling . g$11507$PT8AO)
        (flatan . g$11506$PT8AO)
        (flasin . g$11505$PT8AO)
        (flacos . g$11504$PT8AO)
        (flabs . g$11503$PT8AO)
        (fl>? . g$11502$PT8AO)
        (fl>=? . g$11501$PT8AO)
        (fl=? . g$11500$PT8AO)
        (fl<? . g$11499$PT8AO)
        (fl<=? . g$11498$PT8AO)
        (fl/ . g$11497$PT8AO)
        (fl- . g$11496$PT8AO)
        (fl+ . g$11495$PT8AO)
        (fl* . g$11494$PT8AO)
        (fixnum->flonum . g$11493$PT8AO)
        (fxzero? . g$11492$PT8AO)
        (fxxor . g$11491$PT8AO)
        (fxrotate-bit-field . g$6660$PT8AO)
        (fxreverse-bit-field . g$11490$PT8AO)
        (fxpositive? . g$11489$PT8AO)
        (fxodd? . g$11488$PT8AO)
        (fxnot . g$11487$PT8AO)
        (fxnegative? . g$11486$PT8AO)
        (fxmod0 . g$11485$PT8AO)
        (fxmod . g$11484$PT8AO)
        (fxmin . g$11483$PT8AO)
        (fxmax . g$11482$PT8AO)
        (fxlength . g$11481$PT8AO)
        (fxior . g$11480$PT8AO)
        (fxif . g$6654$PT8AO)
        (fxfirst-bit-set . g$11479$PT8AO)
        (fxeven? . g$11478$PT8AO)
        (fxdiv0-and-mod0 . g$11477$PT8AO)
        (fxdiv0 . g$11476$PT8AO)
        (fxdiv-and-mod . g$11475$PT8AO)
        (fxdiv . g$11474$PT8AO)
        (fxcopy-bit-field . g$6657$PT8AO)
        (fxcopy-bit . g$6655$PT8AO)
        (fxbit-set? . g$11473$PT8AO)
        (fxbit-field . g$6656$PT8AO)
        (fxbit-count . g$11472$PT8AO)
        (fxarithmetic-shift-right . g$6659$PT8AO)
        (fxarithmetic-shift-left . g$6658$PT8AO)
        (fxarithmetic-shift . g$11471$PT8AO)
        (fxand . g$11470$PT8AO)
        (fx>? . g$11469$PT8AO)
        (fx>=? . g$11468$PT8AO)
        (fx=? . g$11467$PT8AO)
        (fx<? . g$11466$PT8AO)
        (fx<=? . g$11465$PT8AO)
        (fx-/carry . g$11464$PT8AO)
        (fx- . g$11463$PT8AO)
        (fx+/carry . g$11462$PT8AO)
        (fx+ . g$11461$PT8AO)
        (fx*/carry . g$11460$PT8AO)
        (fx* . g$11459$PT8AO)
        (greatest-fixnum . g$11458$PT8AO)
        (least-fixnum . g$11457$PT8AO)
        (fixnum-width . g$11456$PT8AO)
        (fixnum? . g$11455$PT8AO)
        (bitwise-rotate-bit-field . g$6608$PT8AO)
        (bitwise-reverse-bit-field . g$6609$PT8AO)
        (bitwise-length . g$11454$PT8AO)
        (bitwise-if . g$6602$PT8AO)
        (bitwise-first-bit-set . g$11453$PT8AO)
        (bitwise-copy-bit-field . g$6605$PT8AO)
        (bitwise-copy-bit . g$6603$PT8AO)
        (bitwise-bit-set? . g$11452$PT8AO)
        (bitwise-bit-field . g$11451$PT8AO)
        (bitwise-bit-count . g$11450$PT8AO)
        (bitwise-xor . g$11449$PT8AO)
        (bitwise-ior . g$11448$PT8AO)
        (bitwise-and . g$11447$PT8AO)
        (bitwise-not . g$11446$PT8AO)
        (bitwise-arithmetic-shift-right . g$6607$PT8AO)
        (bitwise-arithmetic-shift-left . g$6606$PT8AO)
        (bitwise-arithmetic-shift . g$11445$PT8AO)
        (zero? . g$11444$PT8AO)
        (vector? . g$11443$PT8AO)
        (vector-set! . g$11442$PT8AO)
        (vector-ref . g$11441$PT8AO)
        (vector-map . g$11440$PT8AO)
        (vector-length . g$11439$PT8AO)
        (vector-for-each . g$11438$PT8AO)
        (vector-fill! . g$11437$PT8AO)
        (vector->list . g$11436$PT8AO)
        (vector . g$11435$PT8AO)
        (values . g$11434$PT8AO)
        (truncate . g$11433$PT8AO)
        (tan . g$11432$PT8AO)
        (symbol? . g$11431$PT8AO)
        (symbol=? . g$11430$PT8AO)
        (symbol->string . g$11429$PT8AO)
        (substring . g$11428$PT8AO)
        (string? . g$11427$PT8AO)
        (string>? . g$11426$PT8AO)
        (string>=? . g$11425$PT8AO)
        (string=? . g$11424$PT8AO)
        (string<? . g$11423$PT8AO)
        (string<=? . g$11422$PT8AO)
        (string-ref . g$11421$PT8AO)
        (string-length . g$11420$PT8AO)
        (string-for-each . g$11419$PT8AO)
        (string-copy . g$11418$PT8AO)
        (string-append . g$11417$PT8AO)
        (string->symbol . g$11416$PT8AO)
        (string->number . g$11415$PT8AO)
        (string->list . g$11414$PT8AO)
        (string . g$11413$PT8AO)
        (sqrt . g$11412$PT8AO)
        (sin . g$11411$PT8AO)
        (round . g$11410$PT8AO)
        (reverse . g$11409$PT8AO)
        (real? . g$11408$PT8AO)
        (real-valued? . g$11407$PT8AO)
        (real-part . g$11406$PT8AO)
        (rationalize . g$5633$PT8AO)
        (rational? . g$11405$PT8AO)
        (rational-valued? . g$11404$PT8AO)
        (procedure? . g$11403$PT8AO)
        (positive? . g$11402$PT8AO)
        (pair? . g$11401$PT8AO)
        (odd? . g$11400$PT8AO)
        (numerator . g$11399$PT8AO)
        (number? . g$11398$PT8AO)
        (number->string . g$11397$PT8AO)
        (null? . g$11396$PT8AO)
        (not . g$11395$PT8AO)
        (negative? . g$11394$PT8AO)
        (nan? . g$11393$PT8AO)
        (min . g$11392$PT8AO)
        (max . g$11391$PT8AO)
        (map . g$11390$PT8AO)
        (make-vector . g$11389$PT8AO)
        (make-string . g$11388$PT8AO)
        (make-rectangular . g$11387$PT8AO)
        (make-polar . g$11386$PT8AO)
        (magnitude . g$11385$PT8AO)
        (log . g$11384$PT8AO)
        (list? . g$11383$PT8AO)
        (list-tail . g$11382$PT8AO)
        (list-ref . g$11381$PT8AO)
        (list->vector . g$11380$PT8AO)
        (list->string . g$11379$PT8AO)
        (list . g$11378$PT8AO)
        (length . g$11377$PT8AO)
        (lcm . g$11376$PT8AO)
        (integer? . g$11375$PT8AO)
        (integer-valued? . g$11374$PT8AO)
        (integer->char . g$11373$PT8AO)
        (infinite? . g$11372$PT8AO)
        (inexact? . g$11371$PT8AO)
        (inexact . g$11370$PT8AO)
        (imag-part . g$11369$PT8AO)
        (gcd . g$11368$PT8AO)
        (for-each . g$11367$PT8AO)
        (floor . g$11366$PT8AO)
        (finite? . g$11365$PT8AO)
        (expt . g$11364$PT8AO)
        (exp . g$11363$PT8AO)
        (exact? . g$11362$PT8AO)
        (exact-integer-sqrt . g$11361$PT8AO)
        (exact . g$11360$PT8AO)
        (even? . g$11359$PT8AO)
        (error . g$11358$PT8AO)
        (eqv? . g$11357$PT8AO)
        (equal? . g$11356$PT8AO)
        (eq? . g$11355$PT8AO)
        (dynamic-wind . g$11354$PT8AO)
        (div0-and-mod0 . g$11353$PT8AO)
        (mod0 . g$11352$PT8AO)
        (div0 . g$11351$PT8AO)
        (div-and-mod . g$11350$PT8AO)
        (mod . g$11349$PT8AO)
        (div . g$11348$PT8AO)
        (denominator . g$11347$PT8AO)
        (cos . g$11346$PT8AO)
        (cons . g$11345$PT8AO)
        (complex? . g$11344$PT8AO)
        (char? . g$11343$PT8AO)
        (char>? . g$11342$PT8AO)
        (char>=? . g$11341$PT8AO)
        (char=? . g$11340$PT8AO)
        (char<? . g$11339$PT8AO)
        (char<=? . g$11338$PT8AO)
        (char->integer . g$11337$PT8AO)
        (ceiling . g$11336$PT8AO)
        (call-with-values . g$11335$PT8AO)
        (call/cc . g$11334$PT8AO)
        (call-with-current-continuation . g$11333$PT8AO)
        (cddddr . g$5632$PT8AO)
        (cdddar . g$5631$PT8AO)
        (cddadr . g$5630$PT8AO)
        (cddaar . g$5629$PT8AO)
        (cdaddr . g$5628$PT8AO)
        (cdadar . g$5627$PT8AO)
        (cdaadr . g$5626$PT8AO)
        (cdaaar . g$5625$PT8AO)
        (cadddr . g$5624$PT8AO)
        (caddar . g$5623$PT8AO)
        (cadadr . g$5622$PT8AO)
        (cadaar . g$5621$PT8AO)
        (caaddr . g$5620$PT8AO)
        (caadar . g$5619$PT8AO)
        (caaadr . g$5618$PT8AO)
        (caaaar . g$5617$PT8AO)
        (cdddr . g$5616$PT8AO)
        (cddar . g$5615$PT8AO)
        (cdadr . g$5614$PT8AO)
        (cdaar . g$5613$PT8AO)
        (caddr . g$5612$PT8AO)
        (cadar . g$5611$PT8AO)
        (caadr . g$5610$PT8AO)
        (caaar . g$5609$PT8AO)
        (cddr . g$5608$PT8AO)
        (cdar . g$5607$PT8AO)
        (cadr . g$5606$PT8AO)
        (caar . g$5605$PT8AO)
        (cdr . g$11332$PT8AO)
        (car . g$11331$PT8AO)
        (boolean? . g$11330$PT8AO)
        (boolean=? . g$11329$PT8AO)
        (atan . g$11328$PT8AO)
        (assertion-violation . g$11327$PT8AO)
        (asin . g$11326$PT8AO)
        (apply . g$11325$PT8AO)
        (append . g$11324$PT8AO)
        (angle . g$11323$PT8AO)
        (acos . g$11322$PT8AO)
        (abs . g$11321$PT8AO)
        (/ . g$11320$PT8AO)
        (* . g$11319$PT8AO)
        (- . g$11318$PT8AO)
        (+ . g$11317$PT8AO)
        (>= . g$11316$PT8AO)
        (> . g$11315$PT8AO)
        (= . g$11314$PT8AO)
        (<= . g$11313$PT8AO)
        (< . g$11312$PT8AO)
        (printf . g$6923$PT8AO)
        (fprintf . g$6924$PT8AO)
        (format . g$6925$PT8AO)
        (get-arity . g$11307$PT8AO)
        (gc-collect . g$11306$PT8AO)
        (clr-type? . g$11305$PT8AO)
        (get-clr-type . g$11304$PT8AO)
        (vector-append . g$11303$PT8AO)
        (vector-filter . g$11302$PT8AO)
        (vector-reverse! . g$11301$PT8AO)
        (vector-contains? . g$11300$PT8AO)
        (vector-index-of . g$11299$PT8AO)
        (vector-copy . g$11298$PT8AO)
        (vector-binary-search . g$11297$PT8AO)
        (get-output-string . g$11296$PT8AO)
        (open-output-string . g$11295$PT8AO)
        (open-input-string . g$11294$PT8AO)
        (string-format . g$11293$PT8AO)
        (trace-printer . g$11158$PT8AO)
        (make-traced-procedure . g$11292$PT8AO)
        (make-traced-macro . g$6944$PT8AO)
        (pmap . g$11291$PT8AO)
        (time-it . g$11290$PT8AO)
        (make-parameter . g$6949$PT8AO)
        (library-locator . g$11289$PT8AO)
        (get-library-paths . g$11288$PT8AO)
        (environment-symbols . g$8205$PT8AO)
        (interaction-environment-symbols . g$8204$PT8AO)
        (library-path . g$7374$PT8AO)
        (library-extensions . g$7375$PT8AO)
        (installed-libraries . g$7395$PT8AO)
        (expand . g$8210$PT8AO)
        (&no-nans . g$11287$PT8AO)
        (&no-infinities . g$11286$PT8AO)
        (&i/o-encoding . g$11285$PT8AO)
        (&i/o-decoding . g$11284$PT8AO)
        (&i/o-port . g$11283$PT8AO)
        (&i/o-file-does-not-exist . g$11282$PT8AO)
        (&i/o-file-already-exists . g$11281$PT8AO)
        (&i/o-file-is-read-only . g$11280$PT8AO)
        (&i/o-file-protection . g$11279$PT8AO)
        (&i/o-filename . g$11278$PT8AO)
        (&i/o-invalid-position . g$11277$PT8AO)
        (&i/o-write . g$11276$PT8AO)
        (&i/o-read . g$11275$PT8AO)
        (&i/o . g$11274$PT8AO)
        (&non-continuable . g$11273$PT8AO)
        (&undefined . g$11272$PT8AO)
        (&syntax . g$11271$PT8AO)
        (&lexical . g$11270$PT8AO)
        (&implementation-restriction . g$11269$PT8AO)
        (&who . g$11267$PT8AO)
        (&irritants . g$11266$PT8AO)
        (&assertion . g$11265$PT8AO)
        (&violation . g$11264$PT8AO)
        (&error . g$11263$PT8AO)
        (&serious . g$11262$PT8AO)
        (&warning . g$11261$PT8AO)
        (&message . g$11260$PT8AO)
        (&condition . g$11259$PT8AO)
        (define-condition-type . g$11258$PT8AO)
        (define-enumeration . g$11257$PT8AO)
        (define-record-type . g$11256$PT8AO)
        (parent-rtd . g$11255$PT8AO)
        (nongenerative . g$11254$PT8AO)
        (opaque . g$11253$PT8AO)
        (sealed . g$11252$PT8AO)
        (protocol . g$11251$PT8AO)
        (parent . g$11250$PT8AO)
        (immutable . g$11249$PT8AO)
        (mutable . g$11248$PT8AO)
        (fields . g$11247$PT8AO)
        (error-handling-mode . g$11246$PT8AO)
        (file-options . g$11245$PT8AO)
        (buffer-mode . g$11244$PT8AO)
        (eol-style . g$11243$PT8AO)
        (guard . g$11242$PT8AO)
        (trace-letrec-syntax . g$11241$PT8AO)
        (trace-let-syntax . g$11240$PT8AO)
        (trace-define-syntax . g$11239$PT8AO)
        (trace-define . g$11238$PT8AO)
        (trace-lambda . g$11237$PT8AO)
        (unsyntax-splicing . g$11236$PT8AO)
        (unsyntax . g$11235$PT8AO)
        (unquote-splicing . g$11234$PT8AO)
        (unquote . g$11233$PT8AO)
        (_ . g$11232$PT8AO)
        (else . g$11231$PT8AO)
        (=> . g$11230$PT8AO)
        (... . g$11229$PT8AO)
        (assert . g$11228$PT8AO)
        (endianness . g$11227$PT8AO)
        (delay . g$11226$PT8AO)
        (time . g$11225$PT8AO)
        (or . g$11224$PT8AO)
        (and . g$11223$PT8AO)
        (do . g$11222$PT8AO)
        (cond . g$11221$PT8AO)
        (let* . g$11220$PT8AO)
        (let . g$11219$PT8AO)
        (identifier-syntax . g$11218$PT8AO)
        (with-syntax . g$11217$PT8AO)
        (quasisyntax . g$11216$PT8AO)
        (quasiquote . g$11215$PT8AO)
        (syntax-rules . g$11214$PT8AO)
        (include-into . g$11213$PT8AO)
        (include . g$11212$PT8AO)
        (let-values . g$11210$PT8AO)
        (let*-values . g$11209$PT8AO)
        (record-constructor-descriptor . g$11208$PT8AO)
        (record-type-descriptor . g$11207$PT8AO)
        (fluid-let-syntax . g$11206$PT8AO)
        (case . g$11205$PT8AO)
        (parameterize . g$11204$PT8AO)
        (unless . g$11203$PT8AO)
        (when . g$11202$PT8AO)
        (if . g$11201$PT8AO)
        (letrec* . g$11200$PT8AO)
        (letrec . g$11199$PT8AO)
        (case-lambda . g$11197$PT8AO)
        (lambda . g$11196$PT8AO)
        (syntax . g$11195$PT8AO)
        (syntax-case . g$11194$PT8AO)
        (quote . g$11193$PT8AO)
        (letrec-syntax . g$11191$PT8AO)
        (let-syntax . g$11190$PT8AO)
        (set! . g$11189$PT8AO)
        (import . g$11188$PT8AO)
        (library . g$11187$PT8AO)
        (begin . g$11186$PT8AO)
        (module . g$11185$PT8AO)
        (define-syntax . g$11184$PT8AO)
        (define . g$11183$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11841$PT8AO
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11288$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6750$PT8AO
      'g$11842$PT8AO
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$11782$PT8AO)
        (annotation-source . g$11781$PT8AO)
        (annotation-expression . g$11780$PT8AO)
        (annotation? . g$11779$PT8AO)
        (read-annotated . g$11778$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6750$PT8AO
      'g$11843$PT8AO
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$11748$PT8AO)
        (serialize-library . g$11747$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6750$PT8AO
      'g$11844$PT8AO
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$7835$PT8AO)
        (variable-transformer? . g$7834$PT8AO)
        (eqv-hash . g$11310$PT8AO)
        (eq-hash . g$11309$PT8AO)
        (reverse! . g$11308$PT8AO)
        (make-traced-procedure . g$11292$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6750$PT8AO
      'g$11845$PT8AO
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11311$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11846$PT8AO
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$11766$PT8AO)
        (clr-field-set!-internal . g$11765$PT8AO)
        (clr-field-get-internal . g$11764$PT8AO)
        (clr-cast-internal . g$11763$PT8AO)
        (clr-call-internal . g$11762$PT8AO)
        (clr-new-internal . g$11761$PT8AO)
        (clr-new-array-internal . g$11760$PT8AO)
        (clr-is-internal . g$11759$PT8AO)
        (clr-reference-internal . g$11758$PT8AO)
        (clr-using-internal . g$11757$PT8AO)
        (clr-clear-usings-internal . g$11756$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11847$PT8AO
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11234$PT8AO)
        (unquote . g$11233$PT8AO)
        (delay . g$11226$PT8AO)
        (or . g$11224$PT8AO)
        (and . g$11223$PT8AO)
        (do . g$11222$PT8AO)
        (cond . g$11221$PT8AO)
        (let* . g$11220$PT8AO)
        (let . g$11219$PT8AO)
        (quasiquote . g$11215$PT8AO)
        (syntax-rules . g$11214$PT8AO)
        (case . g$11205$PT8AO)
        (if . g$11201$PT8AO)
        (letrec . g$11199$PT8AO)
        (lambda . g$11196$PT8AO)
        (quote . g$11193$PT8AO)
        (letrec-syntax . g$11191$PT8AO)
        (let-syntax . g$11190$PT8AO)
        (set! . g$11189$PT8AO)
        (begin . g$11186$PT8AO)
        (define-syntax . g$11184$PT8AO)
        (define . g$11183$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6750$PT8AO
      'g$11848$PT8AO
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8231$PT8AO)
        (char-ready? . g$11746$PT8AO)
        (string-ci>? . g$11737$PT8AO)
        (string-ci>=? . g$11736$PT8AO)
        (string-ci=? . g$11735$PT8AO)
        (string-ci<? . g$11734$PT8AO)
        (string-ci<=? . g$11733$PT8AO)
        (char-whitespace? . g$11732$PT8AO)
        (char-upper-case? . g$11731$PT8AO)
        (char-numeric? . g$11729$PT8AO)
        (char-lower-case? . g$11728$PT8AO)
        (char-upcase . g$11726$PT8AO)
        (char-downcase . g$11723$PT8AO)
        (char-ci>? . g$11722$PT8AO)
        (char-ci>=? . g$11721$PT8AO)
        (char-ci=? . g$11720$PT8AO)
        (char-ci<? . g$11719$PT8AO)
        (char-ci<=? . g$11718$PT8AO)
        (char-alphabetic? . g$11717$PT8AO)
        (call-with-output-file . g$11685$PT8AO)
        (call-with-input-file . g$11684$PT8AO)
        (write-char . g$11683$PT8AO)
        (write . g$11682$PT8AO)
        (with-output-to-file . g$11681$PT8AO)
        (with-input-from-file . g$11680$PT8AO)
        (read-char . g$11679$PT8AO)
        (read . g$11678$PT8AO)
        (peek-char . g$11677$PT8AO)
        (open-output-file . g$11676$PT8AO)
        (open-input-file . g$11675$PT8AO)
        (newline . g$11674$PT8AO)
        (display . g$11673$PT8AO)
        (close-output-port . g$11672$PT8AO)
        (close-input-port . g$11671$PT8AO)
        (eof-object? . g$11670$PT8AO)
        (eof-object . g$11669$PT8AO)
        (current-error-port . g$11668$PT8AO)
        (current-output-port . g$11667$PT8AO)
        (current-input-port . g$11666$PT8AO)
        (output-port? . g$11665$PT8AO)
        (input-port? . g$11664$PT8AO)
        (scheme-report-environment . g$8209$PT8AO)
        (quotient . g$6510$PT8AO)
        (null-environment . g$8208$PT8AO)
        (remainder . g$6511$PT8AO)
        (modulo . g$6512$PT8AO)
        (inexact->exact . g$11601$PT8AO)
        (force . g$11600$PT8AO)
        (exact->inexact . g$11599$PT8AO)
        (string-fill! . g$11596$PT8AO)
        (string-set! . g$11595$PT8AO)
        (set-cdr! . g$11594$PT8AO)
        (set-car! . g$11593$PT8AO)
        (memv . g$11592$PT8AO)
        (memq . g$11591$PT8AO)
        (member . g$6087$PT8AO)
        (assv . g$6084$PT8AO)
        (assq . g$11590$PT8AO)
        (assoc . g$6085$PT8AO)
        (eval . g$8211$PT8AO)
        (zero? . g$11444$PT8AO)
        (vector? . g$11443$PT8AO)
        (vector-set! . g$11442$PT8AO)
        (vector-ref . g$11441$PT8AO)
        (vector-length . g$11439$PT8AO)
        (vector-fill! . g$11437$PT8AO)
        (vector->list . g$11436$PT8AO)
        (vector . g$11435$PT8AO)
        (values . g$11434$PT8AO)
        (truncate . g$11433$PT8AO)
        (tan . g$11432$PT8AO)
        (symbol? . g$11431$PT8AO)
        (symbol->string . g$11429$PT8AO)
        (substring . g$11428$PT8AO)
        (string? . g$11427$PT8AO)
        (string>? . g$11426$PT8AO)
        (string>=? . g$11425$PT8AO)
        (string=? . g$11424$PT8AO)
        (string<? . g$11423$PT8AO)
        (string<=? . g$11422$PT8AO)
        (string-ref . g$11421$PT8AO)
        (string-length . g$11420$PT8AO)
        (string-copy . g$11418$PT8AO)
        (string-append . g$11417$PT8AO)
        (string->symbol . g$11416$PT8AO)
        (string->number . g$11415$PT8AO)
        (string->list . g$11414$PT8AO)
        (string . g$11413$PT8AO)
        (sqrt . g$11412$PT8AO)
        (sin . g$11411$PT8AO)
        (round . g$11410$PT8AO)
        (reverse . g$11409$PT8AO)
        (real? . g$11408$PT8AO)
        (real-part . g$11406$PT8AO)
        (rationalize . g$5633$PT8AO)
        (rational? . g$11405$PT8AO)
        (procedure? . g$11403$PT8AO)
        (positive? . g$11402$PT8AO)
        (pair? . g$11401$PT8AO)
        (odd? . g$11400$PT8AO)
        (numerator . g$11399$PT8AO)
        (number? . g$11398$PT8AO)
        (number->string . g$11397$PT8AO)
        (null? . g$11396$PT8AO)
        (not . g$11395$PT8AO)
        (negative? . g$11394$PT8AO)
        (min . g$11392$PT8AO)
        (max . g$11391$PT8AO)
        (map . g$11390$PT8AO)
        (make-vector . g$11389$PT8AO)
        (make-string . g$11388$PT8AO)
        (make-rectangular . g$11387$PT8AO)
        (make-polar . g$11386$PT8AO)
        (magnitude . g$11385$PT8AO)
        (log . g$11384$PT8AO)
        (list? . g$11383$PT8AO)
        (list-tail . g$11382$PT8AO)
        (list-ref . g$11381$PT8AO)
        (list->vector . g$11380$PT8AO)
        (list->string . g$11379$PT8AO)
        (list . g$11378$PT8AO)
        (length . g$11377$PT8AO)
        (lcm . g$11376$PT8AO)
        (integer? . g$11375$PT8AO)
        (integer->char . g$11373$PT8AO)
        (inexact? . g$11371$PT8AO)
        (imag-part . g$11369$PT8AO)
        (gcd . g$11368$PT8AO)
        (for-each . g$11367$PT8AO)
        (floor . g$11366$PT8AO)
        (expt . g$11364$PT8AO)
        (exp . g$11363$PT8AO)
        (exact? . g$11362$PT8AO)
        (even? . g$11359$PT8AO)
        (eqv? . g$11357$PT8AO)
        (equal? . g$11356$PT8AO)
        (eq? . g$11355$PT8AO)
        (dynamic-wind . g$11354$PT8AO)
        (denominator . g$11347$PT8AO)
        (cos . g$11346$PT8AO)
        (cons . g$11345$PT8AO)
        (complex? . g$11344$PT8AO)
        (char? . g$11343$PT8AO)
        (char>? . g$11342$PT8AO)
        (char>=? . g$11341$PT8AO)
        (char=? . g$11340$PT8AO)
        (char<? . g$11339$PT8AO)
        (char<=? . g$11338$PT8AO)
        (char->integer . g$11337$PT8AO)
        (ceiling . g$11336$PT8AO)
        (call-with-values . g$11335$PT8AO)
        (call-with-current-continuation . g$11333$PT8AO)
        (cddddr . g$5632$PT8AO)
        (cdddar . g$5631$PT8AO)
        (cddadr . g$5630$PT8AO)
        (cddaar . g$5629$PT8AO)
        (cdaddr . g$5628$PT8AO)
        (cdadar . g$5627$PT8AO)
        (cdaadr . g$5626$PT8AO)
        (cdaaar . g$5625$PT8AO)
        (cadddr . g$5624$PT8AO)
        (caddar . g$5623$PT8AO)
        (cadadr . g$5622$PT8AO)
        (cadaar . g$5621$PT8AO)
        (caaddr . g$5620$PT8AO)
        (caadar . g$5619$PT8AO)
        (caaadr . g$5618$PT8AO)
        (caaaar . g$5617$PT8AO)
        (cdddr . g$5616$PT8AO)
        (cddar . g$5615$PT8AO)
        (cdadr . g$5614$PT8AO)
        (cdaar . g$5613$PT8AO)
        (caddr . g$5612$PT8AO)
        (cadar . g$5611$PT8AO)
        (caadr . g$5610$PT8AO)
        (caaar . g$5609$PT8AO)
        (cddr . g$5608$PT8AO)
        (cdar . g$5607$PT8AO)
        (cadr . g$5606$PT8AO)
        (caar . g$5605$PT8AO)
        (cdr . g$11332$PT8AO)
        (car . g$11331$PT8AO)
        (boolean? . g$11330$PT8AO)
        (atan . g$11328$PT8AO)
        (asin . g$11326$PT8AO)
        (apply . g$11325$PT8AO)
        (append . g$11324$PT8AO)
        (angle . g$11323$PT8AO)
        (acos . g$11322$PT8AO)
        (abs . g$11321$PT8AO)
        (/ . g$11320$PT8AO)
        (* . g$11319$PT8AO)
        (- . g$11318$PT8AO)
        (+ . g$11317$PT8AO)
        (>= . g$11316$PT8AO)
        (> . g$11315$PT8AO)
        (= . g$11314$PT8AO)
        (<= . g$11313$PT8AO)
        (< . g$11312$PT8AO)
        (unquote-splicing . g$11234$PT8AO)
        (unquote . g$11233$PT8AO)
        (else . g$11231$PT8AO)
        (=> . g$11230$PT8AO)
        (... . g$11229$PT8AO)
        (delay . g$11226$PT8AO)
        (or . g$11224$PT8AO)
        (and . g$11223$PT8AO)
        (do . g$11222$PT8AO)
        (cond . g$11221$PT8AO)
        (let* . g$11220$PT8AO)
        (let . g$11219$PT8AO)
        (quasiquote . g$11215$PT8AO)
        (syntax-rules . g$11214$PT8AO)
        (case . g$11205$PT8AO)
        (if . g$11201$PT8AO)
        (letrec . g$11199$PT8AO)
        (lambda . g$11196$PT8AO)
        (quote . g$11193$PT8AO)
        (letrec-syntax . g$11191$PT8AO)
        (let-syntax . g$11190$PT8AO)
        (set! . g$11189$PT8AO)
        (begin . g$11186$PT8AO)
        (define-syntax . g$11184$PT8AO)
        (define . g$11183$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6750$PT8AO
      'g$11849$PT8AO
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11745$PT8AO)
        (string-titlecase . g$11744$PT8AO)
        (string-normalize-nfkd . g$11743$PT8AO)
        (string-normalize-nfkc . g$11742$PT8AO)
        (string-normalize-nfd . g$11741$PT8AO)
        (string-normalize-nfc . g$11740$PT8AO)
        (string-foldcase . g$11739$PT8AO)
        (string-downcase . g$11738$PT8AO)
        (string-ci>? . g$11737$PT8AO)
        (string-ci>=? . g$11736$PT8AO)
        (string-ci=? . g$11735$PT8AO)
        (string-ci<? . g$11734$PT8AO)
        (string-ci<=? . g$11733$PT8AO)
        (char-whitespace? . g$11732$PT8AO)
        (char-upper-case? . g$11731$PT8AO)
        (char-title-case? . g$11730$PT8AO)
        (char-numeric? . g$11729$PT8AO)
        (char-lower-case? . g$11728$PT8AO)
        (char-general-category . g$11727$PT8AO)
        (char-upcase . g$11726$PT8AO)
        (char-titlecase . g$11725$PT8AO)
        (char-foldcase . g$11724$PT8AO)
        (char-downcase . g$11723$PT8AO)
        (char-ci>? . g$11722$PT8AO)
        (char-ci>=? . g$11721$PT8AO)
        (char-ci=? . g$11720$PT8AO)
        (char-ci<? . g$11719$PT8AO)
        (char-ci<=? . g$11718$PT8AO)
        (char-alphabetic? . g$11717$PT8AO)
        (make-variable-transformer . g$7833$PT8AO)
        (identifier? . g$8226$PT8AO)
        (generate-temporaries . g$8218$PT8AO)
        (free-identifier=? . g$8219$PT8AO)
        (syntax->datum . g$8228$PT8AO)
        (datum->syntax . g$8227$PT8AO)
        (bound-identifier=? . g$8220$PT8AO)
        (record-type-descriptor? . g$11716$PT8AO)
        (record-predicate . g$11715$PT8AO)
        (record-mutator . g$11714$PT8AO)
        (record-constructor . g$11713$PT8AO)
        (record-accessor . g$11712$PT8AO)
        (make-record-type-descriptor . g$11711$PT8AO)
        (make-record-constructor-descriptor . g$11710$PT8AO)
        (record? . g$11709$PT8AO)
        (record-type-uid . g$11708$PT8AO)
        (record-type-sealed? . g$11707$PT8AO)
        (record-type-parent . g$11706$PT8AO)
        (record-type-opaque? . g$11705$PT8AO)
        (record-type-name . g$11704$PT8AO)
        (record-type-generative? . g$11703$PT8AO)
        (record-type-field-names . g$11702$PT8AO)
        (record-rtd . g$11701$PT8AO)
        (record-field-mutable? . g$11700$PT8AO)
        (delete-file . g$6016$PT8AO)
        (file-exists? . g$6015$PT8AO)
        (vector-sort! . g$11699$PT8AO)
        (vector-sort . g$11698$PT8AO)
        (list-sort . g$6523$PT8AO)
        (symbol-hash . g$11697$PT8AO)
        (string-ci-hash . g$11696$PT8AO)
        (string-hash . g$11695$PT8AO)
        (equal-hash . g$11694$PT8AO)
        (hashtable-equivalence-function . g$11693$PT8AO)
        (make-hashtable . g$11692$PT8AO)
        (hashtable-hash-function . g$11691$PT8AO)
        (make-eqv-hashtable . g$5983$PT8AO)
        (make-eq-hashtable . g$5982$PT8AO)
        (hashtable? . g$11690$PT8AO)
        (hashtable-update! . g$5989$PT8AO)
        (hashtable-size . g$5984$PT8AO)
        (hashtable-set! . g$5986$PT8AO)
        (hashtable-ref . g$5985$PT8AO)
        (hashtable-mutable? . g$11689$PT8AO)
        (hashtable-keys . g$11688$PT8AO)
        (hashtable-entries . g$11687$PT8AO)
        (hashtable-delete! . g$5987$PT8AO)
        (hashtable-copy . g$11686$PT8AO)
        (hashtable-contains? . g$5988$PT8AO)
        (hashtable-clear! . g$5990$PT8AO)
        (call-with-output-file . g$11685$PT8AO)
        (call-with-input-file . g$11684$PT8AO)
        (write-char . g$11683$PT8AO)
        (write . g$11682$PT8AO)
        (with-output-to-file . g$11681$PT8AO)
        (with-input-from-file . g$11680$PT8AO)
        (read-char . g$11679$PT8AO)
        (read . g$11678$PT8AO)
        (peek-char . g$11677$PT8AO)
        (open-output-file . g$11676$PT8AO)
        (open-input-file . g$11675$PT8AO)
        (newline . g$11674$PT8AO)
        (display . g$11673$PT8AO)
        (close-output-port . g$11672$PT8AO)
        (close-input-port . g$11671$PT8AO)
        (eof-object? . g$11670$PT8AO)
        (eof-object . g$11669$PT8AO)
        (current-error-port . g$11668$PT8AO)
        (current-output-port . g$11667$PT8AO)
        (current-input-port . g$11666$PT8AO)
        (output-port? . g$11665$PT8AO)
        (input-port? . g$11664$PT8AO)
        (utf-8-codec . g$11663$PT8AO)
        (utf-16-codec . g$11662$PT8AO)
        (transcoder-error-handling-mode . g$11661$PT8AO)
        (transcoder-eol-style . g$11660$PT8AO)
        (transcoder-codec . g$11659$PT8AO)
        (transcoded-port . g$11658$PT8AO)
        (textual-port? . g$11657$PT8AO)
        (string->bytevector . g$11656$PT8AO)
        (standard-output-port . g$11655$PT8AO)
        (standard-input-port . g$11654$PT8AO)
        (standard-error-port . g$11653$PT8AO)
        (set-port-position! . g$11652$PT8AO)
        (put-u8 . g$11651$PT8AO)
        (put-string . g$11650$PT8AO)
        (put-datum . g$11649$PT8AO)
        (put-char . g$11648$PT8AO)
        (put-bytevector . g$11647$PT8AO)
        (port? . g$11646$PT8AO)
        (port-transcoder . g$11645$PT8AO)
        (port-position . g$11644$PT8AO)
        (port-has-set-port-position!? . g$11643$PT8AO)
        (port-has-port-position? . g$11642$PT8AO)
        (port-eof? . g$11641$PT8AO)
        (output-port-buffer-mode . g$11640$PT8AO)
        (open-string-output-port . g$6914$PT8AO)
        (open-string-input-port . g$11639$PT8AO)
        (open-file-output-port . g$11638$PT8AO)
        (open-file-input/output-port . g$11637$PT8AO)
        (open-file-input-port . g$11636$PT8AO)
        (open-bytevector-output-port . g$11635$PT8AO)
        (open-bytevector-input-port . g$11634$PT8AO)
        (native-transcoder . g$11633$PT8AO)
        (native-eol-style . g$11632$PT8AO)
        (make-transcoder . g$11631$PT8AO)
        (latin-1-codec . g$11630$PT8AO)
        (make-i/o-write-error . g$6771$PT8AO)
        (make-i/o-read-error . g$6757$PT8AO)
        (make-i/o-port-error . g$6876$PT8AO)
        (make-i/o-invalid-position-error . g$6786$PT8AO)
        (make-i/o-filename-error . g$6803$PT8AO)
        (make-i/o-file-protection-error . g$6819$PT8AO)
        (make-i/o-file-is-read-only-error . g$6833$PT8AO)
        (make-i/o-file-does-not-exist-error . g$6861$PT8AO)
        (make-i/o-file-already-exists-error . g$6847$PT8AO)
        (make-i/o-error . g$6743$PT8AO)
        (make-i/o-encoding-error . g$6907$PT8AO)
        (make-i/o-decoding-error . g$6892$PT8AO)
        (make-custom-textual-output-port . g$11629$PT8AO)
        (make-custom-textual-input/output-port . g$11628$PT8AO)
        (make-custom-textual-input-port . g$11627$PT8AO)
        (make-custom-binary-output-port . g$11626$PT8AO)
        (make-custom-binary-input/output-port . g$11625$PT8AO)
        (make-custom-binary-input-port . g$11624$PT8AO)
        (make-bytevector . g$11623$PT8AO)
        (lookahead-u8 . g$11622$PT8AO)
        (lookahead-char . g$11621$PT8AO)
        (i/o-write-error? . g$6772$PT8AO)
        (i/o-read-error? . g$6758$PT8AO)
        (i/o-port-error? . g$6878$PT8AO)
        (i/o-invalid-position-error? . g$6788$PT8AO)
        (i/o-filename-error? . g$6805$PT8AO)
        (i/o-file-protection-error? . g$6820$PT8AO)
        (i/o-file-is-read-only-error? . g$6834$PT8AO)
        (i/o-file-does-not-exist-error? . g$6862$PT8AO)
        (i/o-file-already-exists-error? . g$6848$PT8AO)
        (i/o-error? . g$6744$PT8AO)
        (i/o-error-port . g$6879$PT8AO)
        (i/o-error-filename . g$6806$PT8AO)
        (i/o-encoding-error? . g$6909$PT8AO)
        (i/o-encoding-error-char . g$6910$PT8AO)
        (i/o-decoding-error? . g$6893$PT8AO)
        (get-u8 . g$11620$PT8AO)
        (get-string-n! . g$11619$PT8AO)
        (get-string-n . g$11618$PT8AO)
        (get-string-all . g$11617$PT8AO)
        (get-line . g$11616$PT8AO)
        (get-datum . g$11615$PT8AO)
        (get-char . g$11614$PT8AO)
        (get-bytevector-some . g$11613$PT8AO)
        (get-bytevector-n! . g$11612$PT8AO)
        (get-bytevector-n . g$11611$PT8AO)
        (get-bytevector-all . g$11610$PT8AO)
        (flush-output-port . g$11609$PT8AO)
        (close-port . g$11608$PT8AO)
        (call-with-string-output-port . g$11607$PT8AO)
        (call-with-port . g$11606$PT8AO)
        (call-with-bytevector-output-port . g$11605$PT8AO)
        (bytevector->string . g$11604$PT8AO)
        (buffer-mode? . g$11603$PT8AO)
        (binary-port? . g$11602$PT8AO)
        (exit . g$11598$PT8AO)
        (command-line . g$11597$PT8AO)
        (remove . g$6096$PT8AO)
        (remv . g$6097$PT8AO)
        (remp . g$6082$PT8AO)
        (remq . g$6098$PT8AO)
        (partition . g$6081$PT8AO)
        (memv . g$11592$PT8AO)
        (memq . g$11591$PT8AO)
        (memp . g$6088$PT8AO)
        (member . g$6087$PT8AO)
        (exists . g$6092$PT8AO)
        (for-all . g$6091$PT8AO)
        (fold-right . g$6095$PT8AO)
        (fold-left . g$6094$PT8AO)
        (find . g$6080$PT8AO)
        (filter . g$6083$PT8AO)
        (cons* . g$6093$PT8AO)
        (assv . g$6084$PT8AO)
        (assq . g$11590$PT8AO)
        (assp . g$6086$PT8AO)
        (assoc . g$6085$PT8AO)
        (with-exception-handler . g$11589$PT8AO)
        (raise-continuable . g$11588$PT8AO)
        (raise . g$11587$PT8AO)
        (make-enumeration . g$11586$PT8AO)
        (enum-set=? . g$11585$PT8AO)
        (enum-set-universe . g$11584$PT8AO)
        (enum-set-union . g$11583$PT8AO)
        (enum-set-subset? . g$11582$PT8AO)
        (enum-set-projection . g$11581$PT8AO)
        (enum-set-member? . g$11580$PT8AO)
        (enum-set-intersection . g$11579$PT8AO)
        (enum-set-indexer . g$11578$PT8AO)
        (enum-set-difference . g$11577$PT8AO)
        (enum-set-constructor . g$11576$PT8AO)
        (enum-set-complement . g$11575$PT8AO)
        (enum-set->list . g$11574$PT8AO)
        (who-condition? . g$6421$PT8AO)
        (warning? . g$6332$PT8AO)
        (violation? . g$6374$PT8AO)
        (undefined-violation? . g$6498$PT8AO)
        (syntax-violation? . g$6482$PT8AO)
        (syntax-violation-subform . g$6484$PT8AO)
        (syntax-violation-form . g$6483$PT8AO)
        (syntax-violation . g$8225$PT8AO)
        (simple-conditions . g$11573$PT8AO)
        (serious-condition? . g$6346$PT8AO)
        (non-continuable-violation? . g$6436$PT8AO)
        (message-condition? . g$6317$PT8AO)
        (make-who-condition . g$6419$PT8AO)
        (make-warning . g$6331$PT8AO)
        (make-violation . g$6373$PT8AO)
        (make-undefined-violation . g$6497$PT8AO)
        (make-syntax-violation . g$6479$PT8AO)
        (make-serious-condition . g$6345$PT8AO)
        (make-non-continuable-violation . g$6435$PT8AO)
        (make-message-condition . g$6315$PT8AO)
        (make-lexical-violation . g$6463$PT8AO)
        (make-irritants-condition . g$6402$PT8AO)
        (make-implementation-restriction-violation . g$6449$PT8AO)
        (make-error . g$6359$PT8AO)
        (make-assertion-violation . g$6387$PT8AO)
        (lexical-violation? . g$6464$PT8AO)
        (irritants-condition? . g$6404$PT8AO)
        (implementation-restriction-violation? . g$6450$PT8AO)
        (error? . g$6360$PT8AO)
        (condition-who . g$6422$PT8AO)
        (condition-predicate . g$11572$PT8AO)
        (condition-message . g$6318$PT8AO)
        (condition-irritants . g$6405$PT8AO)
        (condition-accessor . g$11571$PT8AO)
        (condition . g$11570$PT8AO)
        (assertion-violation? . g$6388$PT8AO)
        (condition? . g$11569$PT8AO)
        (utf32->string . g$11568$PT8AO)
        (utf16->string . g$11567$PT8AO)
        (utf8->string . g$11566$PT8AO)
        (uint-list->bytevector . g$11565$PT8AO)
        (u8-list->bytevector . g$11564$PT8AO)
        (string->utf8 . g$11563$PT8AO)
        (string->utf32 . g$11562$PT8AO)
        (string->utf16 . g$11561$PT8AO)
        (sint-list->bytevector . g$11560$PT8AO)
        (native-endianness . g$6172$PT8AO)
        (bytevector? . g$11559$PT8AO)
        (bytevector=? . g$11558$PT8AO)
        (bytevector-uint-set! . g$11557$PT8AO)
        (bytevector-uint-ref . g$11556$PT8AO)
        (bytevector-u8-set! . g$11555$PT8AO)
        (bytevector-u8-ref . g$11554$PT8AO)
        (bytevector-u64-set! . g$6193$PT8AO)
        (bytevector-u64-ref . g$6189$PT8AO)
        (bytevector-u64-native-set! . g$6195$PT8AO)
        (bytevector-u64-native-ref . g$6191$PT8AO)
        (bytevector-u32-set! . g$6185$PT8AO)
        (bytevector-u32-ref . g$6181$PT8AO)
        (bytevector-u32-native-set! . g$6187$PT8AO)
        (bytevector-u32-native-ref . g$6183$PT8AO)
        (bytevector-u16-set! . g$6177$PT8AO)
        (bytevector-u16-ref . g$6173$PT8AO)
        (bytevector-u16-native-set! . g$6179$PT8AO)
        (bytevector-u16-native-ref . g$6175$PT8AO)
        (bytevector-sint-set! . g$11553$PT8AO)
        (bytevector-sint-ref . g$11552$PT8AO)
        (bytevector-s8-set! . g$11551$PT8AO)
        (bytevector-s8-ref . g$11550$PT8AO)
        (bytevector-s64-set! . g$6194$PT8AO)
        (bytevector-s64-ref . g$6190$PT8AO)
        (bytevector-s64-native-set! . g$6196$PT8AO)
        (bytevector-s64-native-ref . g$6192$PT8AO)
        (bytevector-s32-set! . g$6186$PT8AO)
        (bytevector-s32-ref . g$6182$PT8AO)
        (bytevector-s32-native-set! . g$6188$PT8AO)
        (bytevector-s32-native-ref . g$6184$PT8AO)
        (bytevector-s16-set! . g$6178$PT8AO)
        (bytevector-s16-ref . g$6174$PT8AO)
        (bytevector-s16-native-set! . g$6180$PT8AO)
        (bytevector-s16-native-ref . g$6176$PT8AO)
        (bytevector-length . g$11549$PT8AO)
        (bytevector-ieee-single-set! . g$11548$PT8AO)
        (bytevector-ieee-single-ref . g$11547$PT8AO)
        (bytevector-ieee-single-native-set! . g$6199$PT8AO)
        (bytevector-ieee-single-native-ref . g$6197$PT8AO)
        (bytevector-ieee-double-set! . g$11546$PT8AO)
        (bytevector-ieee-double-ref . g$11545$PT8AO)
        (bytevector-ieee-double-native-set! . g$6200$PT8AO)
        (bytevector-ieee-double-native-ref . g$6198$PT8AO)
        (bytevector-fill! . g$11544$PT8AO)
        (bytevector-copy! . g$11543$PT8AO)
        (bytevector-copy . g$11542$PT8AO)
        (bytevector->uint-list . g$11541$PT8AO)
        (bytevector->u8-list . g$11540$PT8AO)
        (bytevector->sint-list . g$11539$PT8AO)
        (no-nans-violation? . g$6729$PT8AO)
        (no-infinities-violation? . g$6715$PT8AO)
        (make-no-nans-violation . g$6728$PT8AO)
        (make-no-infinities-violation . g$6714$PT8AO)
        (real->flonum . g$11538$PT8AO)
        (flzero? . g$11537$PT8AO)
        (fltruncate . g$11536$PT8AO)
        (fltan . g$11535$PT8AO)
        (flsqrt . g$11534$PT8AO)
        (flsin . g$11533$PT8AO)
        (flround . g$11532$PT8AO)
        (flpositive? . g$11531$PT8AO)
        (flonum? . g$11530$PT8AO)
        (flodd? . g$11529$PT8AO)
        (flnumerator . g$11528$PT8AO)
        (flnegative? . g$11527$PT8AO)
        (flnan? . g$11526$PT8AO)
        (flmod0 . g$11525$PT8AO)
        (flmod . g$11524$PT8AO)
        (flmin . g$11523$PT8AO)
        (flmax . g$11522$PT8AO)
        (fllog . g$11521$PT8AO)
        (flinteger? . g$11520$PT8AO)
        (flinfinite? . g$11519$PT8AO)
        (flfloor . g$11518$PT8AO)
        (flfinite? . g$11517$PT8AO)
        (flexpt . g$11516$PT8AO)
        (flexp . g$11515$PT8AO)
        (fleven? . g$11514$PT8AO)
        (fldiv0-and-mod0 . g$11513$PT8AO)
        (fldiv0 . g$11512$PT8AO)
        (fldiv-and-mod . g$11511$PT8AO)
        (fldiv . g$11510$PT8AO)
        (fldenominator . g$11509$PT8AO)
        (flcos . g$11508$PT8AO)
        (flceiling . g$11507$PT8AO)
        (flatan . g$11506$PT8AO)
        (flasin . g$11505$PT8AO)
        (flacos . g$11504$PT8AO)
        (flabs . g$11503$PT8AO)
        (fl>? . g$11502$PT8AO)
        (fl>=? . g$11501$PT8AO)
        (fl=? . g$11500$PT8AO)
        (fl<? . g$11499$PT8AO)
        (fl<=? . g$11498$PT8AO)
        (fl/ . g$11497$PT8AO)
        (fl- . g$11496$PT8AO)
        (fl+ . g$11495$PT8AO)
        (fl* . g$11494$PT8AO)
        (fixnum->flonum . g$11493$PT8AO)
        (fxzero? . g$11492$PT8AO)
        (fxxor . g$11491$PT8AO)
        (fxrotate-bit-field . g$6660$PT8AO)
        (fxreverse-bit-field . g$11490$PT8AO)
        (fxpositive? . g$11489$PT8AO)
        (fxodd? . g$11488$PT8AO)
        (fxnot . g$11487$PT8AO)
        (fxnegative? . g$11486$PT8AO)
        (fxmod0 . g$11485$PT8AO)
        (fxmod . g$11484$PT8AO)
        (fxmin . g$11483$PT8AO)
        (fxmax . g$11482$PT8AO)
        (fxlength . g$11481$PT8AO)
        (fxior . g$11480$PT8AO)
        (fxif . g$6654$PT8AO)
        (fxfirst-bit-set . g$11479$PT8AO)
        (fxeven? . g$11478$PT8AO)
        (fxdiv0-and-mod0 . g$11477$PT8AO)
        (fxdiv0 . g$11476$PT8AO)
        (fxdiv-and-mod . g$11475$PT8AO)
        (fxdiv . g$11474$PT8AO)
        (fxcopy-bit-field . g$6657$PT8AO)
        (fxcopy-bit . g$6655$PT8AO)
        (fxbit-set? . g$11473$PT8AO)
        (fxbit-field . g$6656$PT8AO)
        (fxbit-count . g$11472$PT8AO)
        (fxarithmetic-shift-right . g$6659$PT8AO)
        (fxarithmetic-shift-left . g$6658$PT8AO)
        (fxarithmetic-shift . g$11471$PT8AO)
        (fxand . g$11470$PT8AO)
        (fx>? . g$11469$PT8AO)
        (fx>=? . g$11468$PT8AO)
        (fx=? . g$11467$PT8AO)
        (fx<? . g$11466$PT8AO)
        (fx<=? . g$11465$PT8AO)
        (fx-/carry . g$11464$PT8AO)
        (fx- . g$11463$PT8AO)
        (fx+/carry . g$11462$PT8AO)
        (fx+ . g$11461$PT8AO)
        (fx*/carry . g$11460$PT8AO)
        (fx* . g$11459$PT8AO)
        (greatest-fixnum . g$11458$PT8AO)
        (least-fixnum . g$11457$PT8AO)
        (fixnum-width . g$11456$PT8AO)
        (fixnum? . g$11455$PT8AO)
        (bitwise-rotate-bit-field . g$6608$PT8AO)
        (bitwise-reverse-bit-field . g$6609$PT8AO)
        (bitwise-length . g$11454$PT8AO)
        (bitwise-if . g$6602$PT8AO)
        (bitwise-first-bit-set . g$11453$PT8AO)
        (bitwise-copy-bit-field . g$6605$PT8AO)
        (bitwise-copy-bit . g$6603$PT8AO)
        (bitwise-bit-set? . g$11452$PT8AO)
        (bitwise-bit-field . g$11451$PT8AO)
        (bitwise-bit-count . g$11450$PT8AO)
        (bitwise-xor . g$11449$PT8AO)
        (bitwise-ior . g$11448$PT8AO)
        (bitwise-and . g$11447$PT8AO)
        (bitwise-not . g$11446$PT8AO)
        (bitwise-arithmetic-shift-right . g$6607$PT8AO)
        (bitwise-arithmetic-shift-left . g$6606$PT8AO)
        (bitwise-arithmetic-shift . g$11445$PT8AO)
        (zero? . g$11444$PT8AO)
        (vector? . g$11443$PT8AO)
        (vector-set! . g$11442$PT8AO)
        (vector-ref . g$11441$PT8AO)
        (vector-map . g$11440$PT8AO)
        (vector-length . g$11439$PT8AO)
        (vector-for-each . g$11438$PT8AO)
        (vector-fill! . g$11437$PT8AO)
        (vector->list . g$11436$PT8AO)
        (vector . g$11435$PT8AO)
        (values . g$11434$PT8AO)
        (truncate . g$11433$PT8AO)
        (tan . g$11432$PT8AO)
        (symbol? . g$11431$PT8AO)
        (symbol=? . g$11430$PT8AO)
        (symbol->string . g$11429$PT8AO)
        (substring . g$11428$PT8AO)
        (string? . g$11427$PT8AO)
        (string>? . g$11426$PT8AO)
        (string>=? . g$11425$PT8AO)
        (string=? . g$11424$PT8AO)
        (string<? . g$11423$PT8AO)
        (string<=? . g$11422$PT8AO)
        (string-ref . g$11421$PT8AO)
        (string-length . g$11420$PT8AO)
        (string-for-each . g$11419$PT8AO)
        (string-copy . g$11418$PT8AO)
        (string-append . g$11417$PT8AO)
        (string->symbol . g$11416$PT8AO)
        (string->number . g$11415$PT8AO)
        (string->list . g$11414$PT8AO)
        (string . g$11413$PT8AO)
        (sqrt . g$11412$PT8AO)
        (sin . g$11411$PT8AO)
        (round . g$11410$PT8AO)
        (reverse . g$11409$PT8AO)
        (real? . g$11408$PT8AO)
        (real-valued? . g$11407$PT8AO)
        (real-part . g$11406$PT8AO)
        (rationalize . g$5633$PT8AO)
        (rational? . g$11405$PT8AO)
        (rational-valued? . g$11404$PT8AO)
        (procedure? . g$11403$PT8AO)
        (positive? . g$11402$PT8AO)
        (pair? . g$11401$PT8AO)
        (odd? . g$11400$PT8AO)
        (numerator . g$11399$PT8AO)
        (number? . g$11398$PT8AO)
        (number->string . g$11397$PT8AO)
        (null? . g$11396$PT8AO)
        (not . g$11395$PT8AO)
        (negative? . g$11394$PT8AO)
        (nan? . g$11393$PT8AO)
        (min . g$11392$PT8AO)
        (max . g$11391$PT8AO)
        (map . g$11390$PT8AO)
        (make-vector . g$11389$PT8AO)
        (make-string . g$11388$PT8AO)
        (make-rectangular . g$11387$PT8AO)
        (make-polar . g$11386$PT8AO)
        (magnitude . g$11385$PT8AO)
        (log . g$11384$PT8AO)
        (list? . g$11383$PT8AO)
        (list-tail . g$11382$PT8AO)
        (list-ref . g$11381$PT8AO)
        (list->vector . g$11380$PT8AO)
        (list->string . g$11379$PT8AO)
        (list . g$11378$PT8AO)
        (length . g$11377$PT8AO)
        (lcm . g$11376$PT8AO)
        (integer? . g$11375$PT8AO)
        (integer-valued? . g$11374$PT8AO)
        (integer->char . g$11373$PT8AO)
        (infinite? . g$11372$PT8AO)
        (inexact? . g$11371$PT8AO)
        (inexact . g$11370$PT8AO)
        (imag-part . g$11369$PT8AO)
        (gcd . g$11368$PT8AO)
        (for-each . g$11367$PT8AO)
        (floor . g$11366$PT8AO)
        (finite? . g$11365$PT8AO)
        (expt . g$11364$PT8AO)
        (exp . g$11363$PT8AO)
        (exact? . g$11362$PT8AO)
        (exact-integer-sqrt . g$11361$PT8AO)
        (exact . g$11360$PT8AO)
        (even? . g$11359$PT8AO)
        (error . g$11358$PT8AO)
        (eqv? . g$11357$PT8AO)
        (equal? . g$11356$PT8AO)
        (eq? . g$11355$PT8AO)
        (dynamic-wind . g$11354$PT8AO)
        (div0-and-mod0 . g$11353$PT8AO)
        (mod0 . g$11352$PT8AO)
        (div0 . g$11351$PT8AO)
        (div-and-mod . g$11350$PT8AO)
        (mod . g$11349$PT8AO)
        (div . g$11348$PT8AO)
        (denominator . g$11347$PT8AO)
        (cos . g$11346$PT8AO)
        (cons . g$11345$PT8AO)
        (complex? . g$11344$PT8AO)
        (char? . g$11343$PT8AO)
        (char>? . g$11342$PT8AO)
        (char>=? . g$11341$PT8AO)
        (char=? . g$11340$PT8AO)
        (char<? . g$11339$PT8AO)
        (char<=? . g$11338$PT8AO)
        (char->integer . g$11337$PT8AO)
        (ceiling . g$11336$PT8AO)
        (call-with-values . g$11335$PT8AO)
        (call/cc . g$11334$PT8AO)
        (call-with-current-continuation . g$11333$PT8AO)
        (cddddr . g$5632$PT8AO)
        (cdddar . g$5631$PT8AO)
        (cddadr . g$5630$PT8AO)
        (cddaar . g$5629$PT8AO)
        (cdaddr . g$5628$PT8AO)
        (cdadar . g$5627$PT8AO)
        (cdaadr . g$5626$PT8AO)
        (cdaaar . g$5625$PT8AO)
        (cadddr . g$5624$PT8AO)
        (caddar . g$5623$PT8AO)
        (cadadr . g$5622$PT8AO)
        (cadaar . g$5621$PT8AO)
        (caaddr . g$5620$PT8AO)
        (caadar . g$5619$PT8AO)
        (caaadr . g$5618$PT8AO)
        (caaaar . g$5617$PT8AO)
        (cdddr . g$5616$PT8AO)
        (cddar . g$5615$PT8AO)
        (cdadr . g$5614$PT8AO)
        (cdaar . g$5613$PT8AO)
        (caddr . g$5612$PT8AO)
        (cadar . g$5611$PT8AO)
        (caadr . g$5610$PT8AO)
        (caaar . g$5609$PT8AO)
        (cddr . g$5608$PT8AO)
        (cdar . g$5607$PT8AO)
        (cadr . g$5606$PT8AO)
        (caar . g$5605$PT8AO)
        (cdr . g$11332$PT8AO)
        (car . g$11331$PT8AO)
        (boolean? . g$11330$PT8AO)
        (boolean=? . g$11329$PT8AO)
        (atan . g$11328$PT8AO)
        (assertion-violation . g$11327$PT8AO)
        (asin . g$11326$PT8AO)
        (apply . g$11325$PT8AO)
        (append . g$11324$PT8AO)
        (angle . g$11323$PT8AO)
        (acos . g$11322$PT8AO)
        (abs . g$11321$PT8AO)
        (/ . g$11320$PT8AO)
        (* . g$11319$PT8AO)
        (- . g$11318$PT8AO)
        (+ . g$11317$PT8AO)
        (>= . g$11316$PT8AO)
        (> . g$11315$PT8AO)
        (= . g$11314$PT8AO)
        (<= . g$11313$PT8AO)
        (< . g$11312$PT8AO)
        (&no-nans . g$11287$PT8AO)
        (&no-infinities . g$11286$PT8AO)
        (&i/o-encoding . g$11285$PT8AO)
        (&i/o-decoding . g$11284$PT8AO)
        (&i/o-port . g$11283$PT8AO)
        (&i/o-file-does-not-exist . g$11282$PT8AO)
        (&i/o-file-already-exists . g$11281$PT8AO)
        (&i/o-file-is-read-only . g$11280$PT8AO)
        (&i/o-file-protection . g$11279$PT8AO)
        (&i/o-filename . g$11278$PT8AO)
        (&i/o-invalid-position . g$11277$PT8AO)
        (&i/o-write . g$11276$PT8AO)
        (&i/o-read . g$11275$PT8AO)
        (&i/o . g$11274$PT8AO)
        (&non-continuable . g$11273$PT8AO)
        (&undefined . g$11272$PT8AO)
        (&syntax . g$11271$PT8AO)
        (&lexical . g$11270$PT8AO)
        (&implementation-restriction . g$11269$PT8AO)
        (&who . g$11267$PT8AO)
        (&irritants . g$11266$PT8AO)
        (&assertion . g$11265$PT8AO)
        (&violation . g$11264$PT8AO)
        (&error . g$11263$PT8AO)
        (&serious . g$11262$PT8AO)
        (&warning . g$11261$PT8AO)
        (&message . g$11260$PT8AO)
        (&condition . g$11259$PT8AO)
        (define-condition-type . g$11258$PT8AO)
        (define-enumeration . g$11257$PT8AO)
        (define-record-type . g$11256$PT8AO)
        (parent-rtd . g$11255$PT8AO)
        (nongenerative . g$11254$PT8AO)
        (opaque . g$11253$PT8AO)
        (sealed . g$11252$PT8AO)
        (protocol . g$11251$PT8AO)
        (parent . g$11250$PT8AO)
        (immutable . g$11249$PT8AO)
        (mutable . g$11248$PT8AO)
        (fields . g$11247$PT8AO)
        (error-handling-mode . g$11246$PT8AO)
        (file-options . g$11245$PT8AO)
        (buffer-mode . g$11244$PT8AO)
        (eol-style . g$11243$PT8AO)
        (guard . g$11242$PT8AO)
        (unsyntax-splicing . g$11236$PT8AO)
        (unsyntax . g$11235$PT8AO)
        (unquote-splicing . g$11234$PT8AO)
        (unquote . g$11233$PT8AO)
        (_ . g$11232$PT8AO)
        (else . g$11231$PT8AO)
        (=> . g$11230$PT8AO)
        (... . g$11229$PT8AO)
        (assert . g$11228$PT8AO)
        (endianness . g$11227$PT8AO)
        (or . g$11224$PT8AO)
        (and . g$11223$PT8AO)
        (do . g$11222$PT8AO)
        (cond . g$11221$PT8AO)
        (let* . g$11220$PT8AO)
        (let . g$11219$PT8AO)
        (identifier-syntax . g$11218$PT8AO)
        (with-syntax . g$11217$PT8AO)
        (quasisyntax . g$11216$PT8AO)
        (quasiquote . g$11215$PT8AO)
        (syntax-rules . g$11214$PT8AO)
        (let-values . g$11210$PT8AO)
        (let*-values . g$11209$PT8AO)
        (record-constructor-descriptor . g$11208$PT8AO)
        (record-type-descriptor . g$11207$PT8AO)
        (case . g$11205$PT8AO)
        (unless . g$11203$PT8AO)
        (when . g$11202$PT8AO)
        (if . g$11201$PT8AO)
        (letrec* . g$11200$PT8AO)
        (letrec . g$11199$PT8AO)
        (case-lambda . g$11197$PT8AO)
        (lambda . g$11196$PT8AO)
        (syntax . g$11195$PT8AO)
        (syntax-case . g$11194$PT8AO)
        (quote . g$11193$PT8AO)
        (letrec-syntax . g$11191$PT8AO)
        (let-syntax . g$11190$PT8AO)
        (set! . g$11189$PT8AO)
        (import . g$11188$PT8AO)
        (library . g$11187$PT8AO)
        (begin . g$11186$PT8AO)
        (define-syntax . g$11184$PT8AO)
        (define . g$11183$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11850$PT8AO
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8231$PT8AO)
        (scheme-report-environment . g$8209$PT8AO)
        (quotient . g$6510$PT8AO)
        (null-environment . g$8208$PT8AO)
        (remainder . g$6511$PT8AO)
        (modulo . g$6512$PT8AO)
        (inexact->exact . g$11601$PT8AO)
        (force . g$11600$PT8AO)
        (exact->inexact . g$11599$PT8AO)
        (delay . g$11226$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11851$PT8AO
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11222$PT8AO)
        (unless . g$11203$PT8AO)
        (when . g$11202$PT8AO)
        (case-lambda . g$11197$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11852$PT8AO
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8211$PT8AO) (environment . g$8207$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11853$PT8AO
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$11594$PT8AO) (set-car! . g$11593$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11854$PT8AO
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$11596$PT8AO) (string-set! . g$11595$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11855$PT8AO
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$11598$PT8AO) (command-line . g$11597$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11856$PT8AO
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$7833$PT8AO)
        (identifier? . g$8226$PT8AO)
        (generate-temporaries . g$8218$PT8AO)
        (free-identifier=? . g$8219$PT8AO)
        (syntax->datum . g$8228$PT8AO)
        (datum->syntax . g$8227$PT8AO)
        (bound-identifier=? . g$8220$PT8AO)
        (syntax-violation . g$8225$PT8AO)
        (unsyntax-splicing . g$11236$PT8AO)
        (unsyntax . g$11235$PT8AO)
        (_ . g$11232$PT8AO)
        (... . g$11229$PT8AO)
        (with-syntax . g$11217$PT8AO)
        (quasisyntax . g$11216$PT8AO)
        (syntax . g$11195$PT8AO)
        (syntax-case . g$11194$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11857$PT8AO
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6016$PT8AO)
        (file-exists? . g$6015$PT8AO)
        (make-i/o-write-error . g$6771$PT8AO)
        (make-i/o-read-error . g$6757$PT8AO)
        (make-i/o-port-error . g$6876$PT8AO)
        (make-i/o-invalid-position-error . g$6786$PT8AO)
        (make-i/o-filename-error . g$6803$PT8AO)
        (make-i/o-file-protection-error . g$6819$PT8AO)
        (make-i/o-file-is-read-only-error . g$6833$PT8AO)
        (make-i/o-file-does-not-exist-error . g$6861$PT8AO)
        (make-i/o-file-already-exists-error . g$6847$PT8AO)
        (make-i/o-error . g$6743$PT8AO)
        (i/o-write-error? . g$6772$PT8AO)
        (i/o-read-error? . g$6758$PT8AO)
        (i/o-port-error? . g$6878$PT8AO)
        (i/o-invalid-position-error? . g$6788$PT8AO)
        (i/o-filename-error? . g$6805$PT8AO)
        (i/o-file-protection-error? . g$6820$PT8AO)
        (i/o-file-is-read-only-error? . g$6834$PT8AO)
        (i/o-file-does-not-exist-error? . g$6862$PT8AO)
        (i/o-file-already-exists-error? . g$6848$PT8AO)
        (i/o-error? . g$6744$PT8AO)
        (i/o-error-port . g$6879$PT8AO)
        (i/o-error-filename . g$6806$PT8AO)
        (&i/o-port . g$11283$PT8AO)
        (&i/o-file-does-not-exist . g$11282$PT8AO)
        (&i/o-file-already-exists . g$11281$PT8AO)
        (&i/o-file-is-read-only . g$11280$PT8AO)
        (&i/o-file-protection . g$11279$PT8AO)
        (&i/o-filename . g$11278$PT8AO)
        (&i/o-invalid-position . g$11277$PT8AO)
        (&i/o-write . g$11276$PT8AO)
        (&i/o-read . g$11275$PT8AO)
        (&i/o . g$11274$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11858$PT8AO
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$11699$PT8AO)
        (vector-sort . g$11698$PT8AO)
        (list-sort . g$6523$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11859$PT8AO
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$11444$PT8AO)
        (vector? . g$11443$PT8AO)
        (vector-set! . g$11442$PT8AO)
        (vector-ref . g$11441$PT8AO)
        (vector-map . g$11440$PT8AO)
        (vector-length . g$11439$PT8AO)
        (vector-for-each . g$11438$PT8AO)
        (vector-fill! . g$11437$PT8AO)
        (vector->list . g$11436$PT8AO)
        (vector . g$11435$PT8AO)
        (values . g$11434$PT8AO)
        (truncate . g$11433$PT8AO)
        (tan . g$11432$PT8AO)
        (symbol? . g$11431$PT8AO)
        (symbol=? . g$11430$PT8AO)
        (symbol->string . g$11429$PT8AO)
        (substring . g$11428$PT8AO)
        (string? . g$11427$PT8AO)
        (string>? . g$11426$PT8AO)
        (string>=? . g$11425$PT8AO)
        (string=? . g$11424$PT8AO)
        (string<? . g$11423$PT8AO)
        (string<=? . g$11422$PT8AO)
        (string-ref . g$11421$PT8AO)
        (string-length . g$11420$PT8AO)
        (string-for-each . g$11419$PT8AO)
        (string-copy . g$11418$PT8AO)
        (string-append . g$11417$PT8AO)
        (string->symbol . g$11416$PT8AO)
        (string->number . g$11415$PT8AO)
        (string->list . g$11414$PT8AO)
        (string . g$11413$PT8AO)
        (sqrt . g$11412$PT8AO)
        (sin . g$11411$PT8AO)
        (round . g$11410$PT8AO)
        (reverse . g$11409$PT8AO)
        (real? . g$11408$PT8AO)
        (real-valued? . g$11407$PT8AO)
        (real-part . g$11406$PT8AO)
        (rationalize . g$5633$PT8AO)
        (rational? . g$11405$PT8AO)
        (rational-valued? . g$11404$PT8AO)
        (procedure? . g$11403$PT8AO)
        (positive? . g$11402$PT8AO)
        (pair? . g$11401$PT8AO)
        (odd? . g$11400$PT8AO)
        (numerator . g$11399$PT8AO)
        (number? . g$11398$PT8AO)
        (number->string . g$11397$PT8AO)
        (null? . g$11396$PT8AO)
        (not . g$11395$PT8AO)
        (negative? . g$11394$PT8AO)
        (nan? . g$11393$PT8AO)
        (min . g$11392$PT8AO)
        (max . g$11391$PT8AO)
        (map . g$11390$PT8AO)
        (make-vector . g$11389$PT8AO)
        (make-string . g$11388$PT8AO)
        (make-rectangular . g$11387$PT8AO)
        (make-polar . g$11386$PT8AO)
        (magnitude . g$11385$PT8AO)
        (log . g$11384$PT8AO)
        (list? . g$11383$PT8AO)
        (list-tail . g$11382$PT8AO)
        (list-ref . g$11381$PT8AO)
        (list->vector . g$11380$PT8AO)
        (list->string . g$11379$PT8AO)
        (list . g$11378$PT8AO)
        (length . g$11377$PT8AO)
        (lcm . g$11376$PT8AO)
        (integer? . g$11375$PT8AO)
        (integer-valued? . g$11374$PT8AO)
        (integer->char . g$11373$PT8AO)
        (infinite? . g$11372$PT8AO)
        (inexact? . g$11371$PT8AO)
        (inexact . g$11370$PT8AO)
        (imag-part . g$11369$PT8AO)
        (gcd . g$11368$PT8AO)
        (for-each . g$11367$PT8AO)
        (floor . g$11366$PT8AO)
        (finite? . g$11365$PT8AO)
        (expt . g$11364$PT8AO)
        (exp . g$11363$PT8AO)
        (exact? . g$11362$PT8AO)
        (exact-integer-sqrt . g$11361$PT8AO)
        (exact . g$11360$PT8AO)
        (even? . g$11359$PT8AO)
        (error . g$11358$PT8AO)
        (eqv? . g$11357$PT8AO)
        (equal? . g$11356$PT8AO)
        (eq? . g$11355$PT8AO)
        (dynamic-wind . g$11354$PT8AO)
        (div0-and-mod0 . g$11353$PT8AO)
        (mod0 . g$11352$PT8AO)
        (div0 . g$11351$PT8AO)
        (div-and-mod . g$11350$PT8AO)
        (mod . g$11349$PT8AO)
        (div . g$11348$PT8AO)
        (denominator . g$11347$PT8AO)
        (cos . g$11346$PT8AO)
        (cons . g$11345$PT8AO)
        (complex? . g$11344$PT8AO)
        (char? . g$11343$PT8AO)
        (char>? . g$11342$PT8AO)
        (char>=? . g$11341$PT8AO)
        (char=? . g$11340$PT8AO)
        (char<? . g$11339$PT8AO)
        (char<=? . g$11338$PT8AO)
        (char->integer . g$11337$PT8AO)
        (ceiling . g$11336$PT8AO)
        (call-with-values . g$11335$PT8AO)
        (call/cc . g$11334$PT8AO)
        (call-with-current-continuation . g$11333$PT8AO)
        (cddddr . g$5632$PT8AO)
        (cdddar . g$5631$PT8AO)
        (cddadr . g$5630$PT8AO)
        (cddaar . g$5629$PT8AO)
        (cdaddr . g$5628$PT8AO)
        (cdadar . g$5627$PT8AO)
        (cdaadr . g$5626$PT8AO)
        (cdaaar . g$5625$PT8AO)
        (cadddr . g$5624$PT8AO)
        (caddar . g$5623$PT8AO)
        (cadadr . g$5622$PT8AO)
        (cadaar . g$5621$PT8AO)
        (caaddr . g$5620$PT8AO)
        (caadar . g$5619$PT8AO)
        (caaadr . g$5618$PT8AO)
        (caaaar . g$5617$PT8AO)
        (cdddr . g$5616$PT8AO)
        (cddar . g$5615$PT8AO)
        (cdadr . g$5614$PT8AO)
        (cdaar . g$5613$PT8AO)
        (caddr . g$5612$PT8AO)
        (cadar . g$5611$PT8AO)
        (caadr . g$5610$PT8AO)
        (caaar . g$5609$PT8AO)
        (cddr . g$5608$PT8AO)
        (cdar . g$5607$PT8AO)
        (cadr . g$5606$PT8AO)
        (caar . g$5605$PT8AO)
        (cdr . g$11332$PT8AO)
        (car . g$11331$PT8AO)
        (boolean? . g$11330$PT8AO)
        (boolean=? . g$11329$PT8AO)
        (atan . g$11328$PT8AO)
        (assertion-violation . g$11327$PT8AO)
        (asin . g$11326$PT8AO)
        (apply . g$11325$PT8AO)
        (append . g$11324$PT8AO)
        (angle . g$11323$PT8AO)
        (acos . g$11322$PT8AO)
        (abs . g$11321$PT8AO)
        (/ . g$11320$PT8AO)
        (* . g$11319$PT8AO)
        (- . g$11318$PT8AO)
        (+ . g$11317$PT8AO)
        (>= . g$11316$PT8AO)
        (> . g$11315$PT8AO)
        (= . g$11314$PT8AO)
        (<= . g$11313$PT8AO)
        (< . g$11312$PT8AO)
        (unquote-splicing . g$11234$PT8AO)
        (unquote . g$11233$PT8AO)
        (_ . g$11232$PT8AO)
        (else . g$11231$PT8AO)
        (=> . g$11230$PT8AO)
        (... . g$11229$PT8AO)
        (assert . g$11228$PT8AO)
        (or . g$11224$PT8AO)
        (and . g$11223$PT8AO)
        (cond . g$11221$PT8AO)
        (let* . g$11220$PT8AO)
        (let . g$11219$PT8AO)
        (identifier-syntax . g$11218$PT8AO)
        (quasiquote . g$11215$PT8AO)
        (syntax-rules . g$11214$PT8AO)
        (let-values . g$11210$PT8AO)
        (let*-values . g$11209$PT8AO)
        (case . g$11205$PT8AO)
        (if . g$11201$PT8AO)
        (letrec* . g$11200$PT8AO)
        (letrec . g$11199$PT8AO)
        (lambda . g$11196$PT8AO)
        (quote . g$11193$PT8AO)
        (letrec-syntax . g$11191$PT8AO)
        (let-syntax . g$11190$PT8AO)
        (set! . g$11189$PT8AO)
        (begin . g$11186$PT8AO)
        (define-syntax . g$11184$PT8AO)
        (define . g$11183$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11860$PT8AO
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6096$PT8AO)
        (remv . g$6097$PT8AO)
        (remp . g$6082$PT8AO)
        (remq . g$6098$PT8AO)
        (partition . g$6081$PT8AO)
        (memv . g$11592$PT8AO)
        (memq . g$11591$PT8AO)
        (memp . g$6088$PT8AO)
        (member . g$6087$PT8AO)
        (exists . g$6092$PT8AO)
        (for-all . g$6091$PT8AO)
        (fold-right . g$6095$PT8AO)
        (fold-left . g$6094$PT8AO)
        (find . g$6080$PT8AO)
        (filter . g$6083$PT8AO)
        (cons* . g$6093$PT8AO)
        (assv . g$6084$PT8AO)
        (assq . g$11590$PT8AO)
        (assp . g$6086$PT8AO)
        (assoc . g$6085$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11861$PT8AO
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$11685$PT8AO)
        (call-with-input-file . g$11684$PT8AO)
        (write-char . g$11683$PT8AO)
        (write . g$11682$PT8AO)
        (with-output-to-file . g$11681$PT8AO)
        (with-input-from-file . g$11680$PT8AO)
        (read-char . g$11679$PT8AO)
        (read . g$11678$PT8AO)
        (peek-char . g$11677$PT8AO)
        (open-output-file . g$11676$PT8AO)
        (open-input-file . g$11675$PT8AO)
        (newline . g$11674$PT8AO)
        (display . g$11673$PT8AO)
        (close-output-port . g$11672$PT8AO)
        (close-input-port . g$11671$PT8AO)
        (eof-object? . g$11670$PT8AO)
        (eof-object . g$11669$PT8AO)
        (current-error-port . g$11668$PT8AO)
        (current-output-port . g$11667$PT8AO)
        (current-input-port . g$11666$PT8AO)
        (output-port? . g$11665$PT8AO)
        (input-port? . g$11664$PT8AO)
        (make-i/o-write-error . g$6771$PT8AO)
        (make-i/o-read-error . g$6757$PT8AO)
        (make-i/o-port-error . g$6876$PT8AO)
        (make-i/o-invalid-position-error . g$6786$PT8AO)
        (make-i/o-filename-error . g$6803$PT8AO)
        (make-i/o-file-protection-error . g$6819$PT8AO)
        (make-i/o-file-is-read-only-error . g$6833$PT8AO)
        (make-i/o-file-does-not-exist-error . g$6861$PT8AO)
        (make-i/o-file-already-exists-error . g$6847$PT8AO)
        (make-i/o-error . g$6743$PT8AO)
        (i/o-write-error? . g$6772$PT8AO)
        (i/o-read-error? . g$6758$PT8AO)
        (i/o-port-error? . g$6878$PT8AO)
        (i/o-invalid-position-error? . g$6788$PT8AO)
        (i/o-filename-error? . g$6805$PT8AO)
        (i/o-file-protection-error? . g$6820$PT8AO)
        (i/o-file-is-read-only-error? . g$6834$PT8AO)
        (i/o-file-does-not-exist-error? . g$6862$PT8AO)
        (i/o-file-already-exists-error? . g$6848$PT8AO)
        (i/o-error? . g$6744$PT8AO)
        (i/o-error-port . g$6879$PT8AO)
        (i/o-error-filename . g$6806$PT8AO)
        (&i/o-port . g$11283$PT8AO)
        (&i/o-file-does-not-exist . g$11282$PT8AO)
        (&i/o-file-already-exists . g$11281$PT8AO)
        (&i/o-file-is-read-only . g$11280$PT8AO)
        (&i/o-file-protection . g$11279$PT8AO)
        (&i/o-filename . g$11278$PT8AO)
        (&i/o-invalid-position . g$11277$PT8AO)
        (&i/o-write . g$11276$PT8AO)
        (&i/o-read . g$11275$PT8AO)
        (&i/o . g$11274$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11862$PT8AO
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$11623$PT8AO)
        (utf32->string . g$11568$PT8AO)
        (utf16->string . g$11567$PT8AO)
        (utf8->string . g$11566$PT8AO)
        (uint-list->bytevector . g$11565$PT8AO)
        (u8-list->bytevector . g$11564$PT8AO)
        (string->utf8 . g$11563$PT8AO)
        (string->utf32 . g$11562$PT8AO)
        (string->utf16 . g$11561$PT8AO)
        (sint-list->bytevector . g$11560$PT8AO)
        (native-endianness . g$6172$PT8AO)
        (bytevector? . g$11559$PT8AO)
        (bytevector=? . g$11558$PT8AO)
        (bytevector-uint-set! . g$11557$PT8AO)
        (bytevector-uint-ref . g$11556$PT8AO)
        (bytevector-u8-set! . g$11555$PT8AO)
        (bytevector-u8-ref . g$11554$PT8AO)
        (bytevector-u64-set! . g$6193$PT8AO)
        (bytevector-u64-ref . g$6189$PT8AO)
        (bytevector-u64-native-set! . g$6195$PT8AO)
        (bytevector-u64-native-ref . g$6191$PT8AO)
        (bytevector-u32-set! . g$6185$PT8AO)
        (bytevector-u32-ref . g$6181$PT8AO)
        (bytevector-u32-native-set! . g$6187$PT8AO)
        (bytevector-u32-native-ref . g$6183$PT8AO)
        (bytevector-u16-set! . g$6177$PT8AO)
        (bytevector-u16-ref . g$6173$PT8AO)
        (bytevector-u16-native-set! . g$6179$PT8AO)
        (bytevector-u16-native-ref . g$6175$PT8AO)
        (bytevector-sint-set! . g$11553$PT8AO)
        (bytevector-sint-ref . g$11552$PT8AO)
        (bytevector-s8-set! . g$11551$PT8AO)
        (bytevector-s8-ref . g$11550$PT8AO)
        (bytevector-s64-set! . g$6194$PT8AO)
        (bytevector-s64-ref . g$6190$PT8AO)
        (bytevector-s64-native-set! . g$6196$PT8AO)
        (bytevector-s64-native-ref . g$6192$PT8AO)
        (bytevector-s32-set! . g$6186$PT8AO)
        (bytevector-s32-ref . g$6182$PT8AO)
        (bytevector-s32-native-set! . g$6188$PT8AO)
        (bytevector-s32-native-ref . g$6184$PT8AO)
        (bytevector-s16-set! . g$6178$PT8AO)
        (bytevector-s16-ref . g$6174$PT8AO)
        (bytevector-s16-native-set! . g$6180$PT8AO)
        (bytevector-s16-native-ref . g$6176$PT8AO)
        (bytevector-length . g$11549$PT8AO)
        (bytevector-ieee-single-set! . g$11548$PT8AO)
        (bytevector-ieee-single-ref . g$11547$PT8AO)
        (bytevector-ieee-single-native-set! . g$6199$PT8AO)
        (bytevector-ieee-single-native-ref . g$6197$PT8AO)
        (bytevector-ieee-double-set! . g$11546$PT8AO)
        (bytevector-ieee-double-ref . g$11545$PT8AO)
        (bytevector-ieee-double-native-set! . g$6200$PT8AO)
        (bytevector-ieee-double-native-ref . g$6198$PT8AO)
        (bytevector-fill! . g$11544$PT8AO)
        (bytevector-copy! . g$11543$PT8AO)
        (bytevector-copy . g$11542$PT8AO)
        (bytevector->uint-list . g$11541$PT8AO)
        (bytevector->u8-list . g$11540$PT8AO)
        (bytevector->sint-list . g$11539$PT8AO)
        (endianness . g$11227$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11863$PT8AO
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11745$PT8AO)
        (string-titlecase . g$11744$PT8AO)
        (string-normalize-nfkd . g$11743$PT8AO)
        (string-normalize-nfkc . g$11742$PT8AO)
        (string-normalize-nfd . g$11741$PT8AO)
        (string-normalize-nfc . g$11740$PT8AO)
        (string-foldcase . g$11739$PT8AO)
        (string-downcase . g$11738$PT8AO)
        (string-ci>? . g$11737$PT8AO)
        (string-ci>=? . g$11736$PT8AO)
        (string-ci=? . g$11735$PT8AO)
        (string-ci<? . g$11734$PT8AO)
        (string-ci<=? . g$11733$PT8AO)
        (char-whitespace? . g$11732$PT8AO)
        (char-upper-case? . g$11731$PT8AO)
        (char-title-case? . g$11730$PT8AO)
        (char-numeric? . g$11729$PT8AO)
        (char-lower-case? . g$11728$PT8AO)
        (char-general-category . g$11727$PT8AO)
        (char-upcase . g$11726$PT8AO)
        (char-titlecase . g$11725$PT8AO)
        (char-foldcase . g$11724$PT8AO)
        (char-downcase . g$11723$PT8AO)
        (char-ci>? . g$11722$PT8AO)
        (char-ci>=? . g$11721$PT8AO)
        (char-ci=? . g$11720$PT8AO)
        (char-ci<? . g$11719$PT8AO)
        (char-ci<=? . g$11718$PT8AO)
        (char-alphabetic? . g$11717$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11864$PT8AO
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$11589$PT8AO)
        (raise-continuable . g$11588$PT8AO)
        (raise . g$11587$PT8AO)
        (guard . g$11242$PT8AO)
        (else . g$11231$PT8AO)
        (=> . g$11230$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11865$PT8AO
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6608$PT8AO)
        (bitwise-reverse-bit-field . g$6609$PT8AO)
        (bitwise-length . g$11454$PT8AO)
        (bitwise-if . g$6602$PT8AO)
        (bitwise-first-bit-set . g$11453$PT8AO)
        (bitwise-copy-bit-field . g$6605$PT8AO)
        (bitwise-copy-bit . g$6603$PT8AO)
        (bitwise-bit-set? . g$11452$PT8AO)
        (bitwise-bit-field . g$11451$PT8AO)
        (bitwise-bit-count . g$11450$PT8AO)
        (bitwise-xor . g$11449$PT8AO)
        (bitwise-ior . g$11448$PT8AO)
        (bitwise-and . g$11447$PT8AO)
        (bitwise-not . g$11446$PT8AO)
        (bitwise-arithmetic-shift-right . g$6607$PT8AO)
        (bitwise-arithmetic-shift-left . g$6606$PT8AO)
        (bitwise-arithmetic-shift . g$11445$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11866$PT8AO
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$11492$PT8AO)
        (fxxor . g$11491$PT8AO)
        (fxrotate-bit-field . g$6660$PT8AO)
        (fxreverse-bit-field . g$11490$PT8AO)
        (fxpositive? . g$11489$PT8AO)
        (fxodd? . g$11488$PT8AO)
        (fxnot . g$11487$PT8AO)
        (fxnegative? . g$11486$PT8AO)
        (fxmod0 . g$11485$PT8AO)
        (fxmod . g$11484$PT8AO)
        (fxmin . g$11483$PT8AO)
        (fxmax . g$11482$PT8AO)
        (fxlength . g$11481$PT8AO)
        (fxior . g$11480$PT8AO)
        (fxif . g$6654$PT8AO)
        (fxfirst-bit-set . g$11479$PT8AO)
        (fxeven? . g$11478$PT8AO)
        (fxdiv0-and-mod0 . g$11477$PT8AO)
        (fxdiv0 . g$11476$PT8AO)
        (fxdiv-and-mod . g$11475$PT8AO)
        (fxdiv . g$11474$PT8AO)
        (fxcopy-bit-field . g$6657$PT8AO)
        (fxcopy-bit . g$6655$PT8AO)
        (fxbit-set? . g$11473$PT8AO)
        (fxbit-field . g$6656$PT8AO)
        (fxbit-count . g$11472$PT8AO)
        (fxarithmetic-shift-right . g$6659$PT8AO)
        (fxarithmetic-shift-left . g$6658$PT8AO)
        (fxarithmetic-shift . g$11471$PT8AO)
        (fxand . g$11470$PT8AO)
        (fx>? . g$11469$PT8AO)
        (fx>=? . g$11468$PT8AO)
        (fx=? . g$11467$PT8AO)
        (fx<? . g$11466$PT8AO)
        (fx<=? . g$11465$PT8AO)
        (fx-/carry . g$11464$PT8AO)
        (fx- . g$11463$PT8AO)
        (fx+/carry . g$11462$PT8AO)
        (fx+ . g$11461$PT8AO)
        (fx*/carry . g$11460$PT8AO)
        (fx* . g$11459$PT8AO)
        (greatest-fixnum . g$11458$PT8AO)
        (least-fixnum . g$11457$PT8AO)
        (fixnum-width . g$11456$PT8AO)
        (fixnum? . g$11455$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11867$PT8AO
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6729$PT8AO)
        (no-infinities-violation? . g$6715$PT8AO)
        (make-no-nans-violation . g$6728$PT8AO)
        (make-no-infinities-violation . g$6714$PT8AO)
        (real->flonum . g$11538$PT8AO)
        (flzero? . g$11537$PT8AO)
        (fltruncate . g$11536$PT8AO)
        (fltan . g$11535$PT8AO)
        (flsqrt . g$11534$PT8AO)
        (flsin . g$11533$PT8AO)
        (flround . g$11532$PT8AO)
        (flpositive? . g$11531$PT8AO)
        (flonum? . g$11530$PT8AO)
        (flodd? . g$11529$PT8AO)
        (flnumerator . g$11528$PT8AO)
        (flnegative? . g$11527$PT8AO)
        (flnan? . g$11526$PT8AO)
        (flmod0 . g$11525$PT8AO)
        (flmod . g$11524$PT8AO)
        (flmin . g$11523$PT8AO)
        (flmax . g$11522$PT8AO)
        (fllog . g$11521$PT8AO)
        (flinteger? . g$11520$PT8AO)
        (flinfinite? . g$11519$PT8AO)
        (flfloor . g$11518$PT8AO)
        (flfinite? . g$11517$PT8AO)
        (flexpt . g$11516$PT8AO)
        (flexp . g$11515$PT8AO)
        (fleven? . g$11514$PT8AO)
        (fldiv0-and-mod0 . g$11513$PT8AO)
        (fldiv0 . g$11512$PT8AO)
        (fldiv-and-mod . g$11511$PT8AO)
        (fldiv . g$11510$PT8AO)
        (fldenominator . g$11509$PT8AO)
        (flcos . g$11508$PT8AO)
        (flceiling . g$11507$PT8AO)
        (flatan . g$11506$PT8AO)
        (flasin . g$11505$PT8AO)
        (flacos . g$11504$PT8AO)
        (flabs . g$11503$PT8AO)
        (fl>? . g$11502$PT8AO)
        (fl>=? . g$11501$PT8AO)
        (fl=? . g$11500$PT8AO)
        (fl<? . g$11499$PT8AO)
        (fl<=? . g$11498$PT8AO)
        (fl/ . g$11497$PT8AO)
        (fl- . g$11496$PT8AO)
        (fl+ . g$11495$PT8AO)
        (fl* . g$11494$PT8AO)
        (fixnum->flonum . g$11493$PT8AO)
        (&no-nans . g$11287$PT8AO)
        (&no-infinities . g$11286$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11868$PT8AO
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$11697$PT8AO)
        (string-ci-hash . g$11696$PT8AO)
        (string-hash . g$11695$PT8AO)
        (equal-hash . g$11694$PT8AO)
        (hashtable-equivalence-function . g$11693$PT8AO)
        (make-hashtable . g$11692$PT8AO)
        (hashtable-hash-function . g$11691$PT8AO)
        (make-eqv-hashtable . g$5983$PT8AO)
        (make-eq-hashtable . g$5982$PT8AO)
        (hashtable? . g$11690$PT8AO)
        (hashtable-update! . g$5989$PT8AO)
        (hashtable-size . g$5984$PT8AO)
        (hashtable-set! . g$5986$PT8AO)
        (hashtable-ref . g$5985$PT8AO)
        (hashtable-mutable? . g$11689$PT8AO)
        (hashtable-keys . g$11688$PT8AO)
        (hashtable-entries . g$11687$PT8AO)
        (hashtable-delete! . g$5987$PT8AO)
        (hashtable-copy . g$11686$PT8AO)
        (hashtable-contains? . g$5988$PT8AO)
        (hashtable-clear! . g$5990$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11869$PT8AO
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$11670$PT8AO)
        (eof-object . g$11669$PT8AO)
        (current-error-port . g$11668$PT8AO)
        (current-output-port . g$11667$PT8AO)
        (current-input-port . g$11666$PT8AO)
        (output-port? . g$11665$PT8AO)
        (input-port? . g$11664$PT8AO)
        (utf-8-codec . g$11663$PT8AO)
        (utf-16-codec . g$11662$PT8AO)
        (transcoder-error-handling-mode . g$11661$PT8AO)
        (transcoder-eol-style . g$11660$PT8AO)
        (transcoder-codec . g$11659$PT8AO)
        (transcoded-port . g$11658$PT8AO)
        (textual-port? . g$11657$PT8AO)
        (string->bytevector . g$11656$PT8AO)
        (standard-output-port . g$11655$PT8AO)
        (standard-input-port . g$11654$PT8AO)
        (standard-error-port . g$11653$PT8AO)
        (set-port-position! . g$11652$PT8AO)
        (put-u8 . g$11651$PT8AO)
        (put-string . g$11650$PT8AO)
        (put-datum . g$11649$PT8AO)
        (put-char . g$11648$PT8AO)
        (put-bytevector . g$11647$PT8AO)
        (port? . g$11646$PT8AO)
        (port-transcoder . g$11645$PT8AO)
        (port-position . g$11644$PT8AO)
        (port-has-set-port-position!? . g$11643$PT8AO)
        (port-has-port-position? . g$11642$PT8AO)
        (port-eof? . g$11641$PT8AO)
        (output-port-buffer-mode . g$11640$PT8AO)
        (open-string-output-port . g$6914$PT8AO)
        (open-string-input-port . g$11639$PT8AO)
        (open-file-output-port . g$11638$PT8AO)
        (open-file-input/output-port . g$11637$PT8AO)
        (open-file-input-port . g$11636$PT8AO)
        (open-bytevector-output-port . g$11635$PT8AO)
        (open-bytevector-input-port . g$11634$PT8AO)
        (native-transcoder . g$11633$PT8AO)
        (native-eol-style . g$11632$PT8AO)
        (make-transcoder . g$11631$PT8AO)
        (latin-1-codec . g$11630$PT8AO)
        (make-i/o-write-error . g$6771$PT8AO)
        (make-i/o-read-error . g$6757$PT8AO)
        (make-i/o-port-error . g$6876$PT8AO)
        (make-i/o-invalid-position-error . g$6786$PT8AO)
        (make-i/o-filename-error . g$6803$PT8AO)
        (make-i/o-file-protection-error . g$6819$PT8AO)
        (make-i/o-file-is-read-only-error . g$6833$PT8AO)
        (make-i/o-file-does-not-exist-error . g$6861$PT8AO)
        (make-i/o-file-already-exists-error . g$6847$PT8AO)
        (make-i/o-error . g$6743$PT8AO)
        (make-i/o-encoding-error . g$6907$PT8AO)
        (make-i/o-decoding-error . g$6892$PT8AO)
        (make-custom-textual-output-port . g$11629$PT8AO)
        (make-custom-textual-input/output-port . g$11628$PT8AO)
        (make-custom-textual-input-port . g$11627$PT8AO)
        (make-custom-binary-output-port . g$11626$PT8AO)
        (make-custom-binary-input/output-port . g$11625$PT8AO)
        (make-custom-binary-input-port . g$11624$PT8AO)
        (lookahead-u8 . g$11622$PT8AO)
        (lookahead-char . g$11621$PT8AO)
        (i/o-write-error? . g$6772$PT8AO)
        (i/o-read-error? . g$6758$PT8AO)
        (i/o-port-error? . g$6878$PT8AO)
        (i/o-invalid-position-error? . g$6788$PT8AO)
        (i/o-filename-error? . g$6805$PT8AO)
        (i/o-file-protection-error? . g$6820$PT8AO)
        (i/o-file-is-read-only-error? . g$6834$PT8AO)
        (i/o-file-does-not-exist-error? . g$6862$PT8AO)
        (i/o-file-already-exists-error? . g$6848$PT8AO)
        (i/o-error? . g$6744$PT8AO)
        (i/o-error-port . g$6879$PT8AO)
        (i/o-error-filename . g$6806$PT8AO)
        (i/o-encoding-error? . g$6909$PT8AO)
        (i/o-encoding-error-char . g$6910$PT8AO)
        (i/o-decoding-error? . g$6893$PT8AO)
        (get-u8 . g$11620$PT8AO)
        (get-string-n! . g$11619$PT8AO)
        (get-string-n . g$11618$PT8AO)
        (get-string-all . g$11617$PT8AO)
        (get-line . g$11616$PT8AO)
        (get-datum . g$11615$PT8AO)
        (get-char . g$11614$PT8AO)
        (get-bytevector-some . g$11613$PT8AO)
        (get-bytevector-n! . g$11612$PT8AO)
        (get-bytevector-n . g$11611$PT8AO)
        (get-bytevector-all . g$11610$PT8AO)
        (flush-output-port . g$11609$PT8AO)
        (close-port . g$11608$PT8AO)
        (call-with-string-output-port . g$11607$PT8AO)
        (call-with-port . g$11606$PT8AO)
        (call-with-bytevector-output-port . g$11605$PT8AO)
        (bytevector->string . g$11604$PT8AO)
        (buffer-mode? . g$11603$PT8AO)
        (binary-port? . g$11602$PT8AO)
        (&i/o-encoding . g$11285$PT8AO)
        (&i/o-decoding . g$11284$PT8AO)
        (&i/o-port . g$11283$PT8AO)
        (&i/o-file-does-not-exist . g$11282$PT8AO)
        (&i/o-file-already-exists . g$11281$PT8AO)
        (&i/o-file-is-read-only . g$11280$PT8AO)
        (&i/o-file-protection . g$11279$PT8AO)
        (&i/o-filename . g$11278$PT8AO)
        (&i/o-invalid-position . g$11277$PT8AO)
        (&i/o-write . g$11276$PT8AO)
        (&i/o-read . g$11275$PT8AO)
        (&i/o . g$11274$PT8AO)
        (error-handling-mode . g$11246$PT8AO)
        (file-options . g$11245$PT8AO)
        (buffer-mode . g$11244$PT8AO)
        (eol-style . g$11243$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11870$PT8AO
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$11586$PT8AO)
        (enum-set=? . g$11585$PT8AO)
        (enum-set-universe . g$11584$PT8AO)
        (enum-set-union . g$11583$PT8AO)
        (enum-set-subset? . g$11582$PT8AO)
        (enum-set-projection . g$11581$PT8AO)
        (enum-set-member? . g$11580$PT8AO)
        (enum-set-intersection . g$11579$PT8AO)
        (enum-set-indexer . g$11578$PT8AO)
        (enum-set-difference . g$11577$PT8AO)
        (enum-set-constructor . g$11576$PT8AO)
        (enum-set-complement . g$11575$PT8AO)
        (enum-set->list . g$11574$PT8AO)
        (define-enumeration . g$11257$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11871$PT8AO
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6421$PT8AO)
        (warning? . g$6332$PT8AO)
        (violation? . g$6374$PT8AO)
        (undefined-violation? . g$6498$PT8AO)
        (syntax-violation? . g$6482$PT8AO)
        (syntax-violation-subform . g$6484$PT8AO)
        (syntax-violation-form . g$6483$PT8AO)
        (syntax-violation . g$8225$PT8AO)
        (simple-conditions . g$11573$PT8AO)
        (serious-condition? . g$6346$PT8AO)
        (non-continuable-violation? . g$6436$PT8AO)
        (message-condition? . g$6317$PT8AO)
        (make-who-condition . g$6419$PT8AO)
        (make-warning . g$6331$PT8AO)
        (make-violation . g$6373$PT8AO)
        (make-undefined-violation . g$6497$PT8AO)
        (make-syntax-violation . g$6479$PT8AO)
        (make-serious-condition . g$6345$PT8AO)
        (make-non-continuable-violation . g$6435$PT8AO)
        (make-message-condition . g$6315$PT8AO)
        (make-lexical-violation . g$6463$PT8AO)
        (make-irritants-condition . g$6402$PT8AO)
        (make-implementation-restriction-violation . g$6449$PT8AO)
        (make-error . g$6359$PT8AO)
        (make-assertion-violation . g$6387$PT8AO)
        (lexical-violation? . g$6464$PT8AO)
        (irritants-condition? . g$6404$PT8AO)
        (implementation-restriction-violation? . g$6450$PT8AO)
        (error? . g$6360$PT8AO)
        (condition-who . g$6422$PT8AO)
        (condition-predicate . g$11572$PT8AO)
        (condition-message . g$6318$PT8AO)
        (condition-irritants . g$6405$PT8AO)
        (condition-accessor . g$11571$PT8AO)
        (condition . g$11570$PT8AO)
        (assertion-violation? . g$6388$PT8AO)
        (condition? . g$11569$PT8AO)
        (&non-continuable . g$11273$PT8AO)
        (&undefined . g$11272$PT8AO)
        (&syntax . g$11271$PT8AO)
        (&lexical . g$11270$PT8AO)
        (&implementation-restriction . g$11269$PT8AO)
        (&who . g$11267$PT8AO)
        (&irritants . g$11266$PT8AO)
        (&assertion . g$11265$PT8AO)
        (&violation . g$11264$PT8AO)
        (&error . g$11263$PT8AO)
        (&serious . g$11262$PT8AO)
        (&warning . g$11261$PT8AO)
        (&message . g$11260$PT8AO)
        (&condition . g$11259$PT8AO)
        (define-condition-type . g$11258$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11872$PT8AO
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$11709$PT8AO)
        (record-type-uid . g$11708$PT8AO)
        (record-type-sealed? . g$11707$PT8AO)
        (record-type-parent . g$11706$PT8AO)
        (record-type-opaque? . g$11705$PT8AO)
        (record-type-name . g$11704$PT8AO)
        (record-type-generative? . g$11703$PT8AO)
        (record-type-field-names . g$11702$PT8AO)
        (record-rtd . g$11701$PT8AO)
        (record-field-mutable? . g$11700$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11873$PT8AO
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$11716$PT8AO)
        (record-predicate . g$11715$PT8AO)
        (record-mutator . g$11714$PT8AO)
        (record-constructor . g$11713$PT8AO)
        (record-accessor . g$11712$PT8AO)
        (make-record-type-descriptor . g$11711$PT8AO)
        (make-record-constructor-descriptor . g$11710$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11874$PT8AO
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11256$PT8AO)
        (parent-rtd . g$11255$PT8AO)
        (nongenerative . g$11254$PT8AO)
        (opaque . g$11253$PT8AO)
        (sealed . g$11252$PT8AO)
        (protocol . g$11251$PT8AO)
        (parent . g$11250$PT8AO)
        (immutable . g$11249$PT8AO)
        (mutable . g$11248$PT8AO)
        (fields . g$11247$PT8AO)
        (record-constructor-descriptor . g$11208$PT8AO)
        (record-type-descriptor . g$11207$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6750$PT8AO
      'g$11875$PT8AO
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8103$PT8AO)
        (&no-nans-rcd . g$11839$PT8AO)
        (&no-nans-rtd . g$11838$PT8AO)
        (&no-infinities-rcd . g$11837$PT8AO)
        (&no-infinities-rtd . g$11836$PT8AO)
        (&i/o-encoding-rcd . g$11835$PT8AO)
        (&i/o-encoding-rtd . g$11834$PT8AO)
        (&i/o-decoding-rcd . g$11833$PT8AO)
        (&i/o-decoding-rtd . g$11832$PT8AO)
        (&i/o-port-rcd . g$11831$PT8AO)
        (&i/o-port-rtd . g$11830$PT8AO)
        (&i/o-file-does-not-exist-rcd . g$11829$PT8AO)
        (&i/o-file-does-not-exist-rtd . g$11828$PT8AO)
        (&i/o-file-already-exists-rcd . g$11827$PT8AO)
        (&i/o-file-already-exists-rtd . g$11826$PT8AO)
        (&i/o-fie-is-read-only-rcd . g$11825$PT8AO)
        (&i/o-fie-is-read-only-rtd . g$11824$PT8AO)
        (&i/o-file-protection-rcd . g$11823$PT8AO)
        (&i/o-file-protection-rtd . g$11822$PT8AO)
        (&i/o-filename-rcd . g$11821$PT8AO)
        (&i/o-filename-rtd . g$11820$PT8AO)
        (&i/o-invalid-position-rcd . g$11819$PT8AO)
        (&i/o-invalid-position-rtd . g$11818$PT8AO)
        (&i/o-write-rcd . g$11817$PT8AO)
        (&i/o-write-rtd . g$11816$PT8AO)
        (&i/o-read-rcd . g$11815$PT8AO)
        (&i/o-read-rtd . g$11814$PT8AO)
        (&i/o-rcd . g$11813$PT8AO)
        (&i/o-rtd . g$11812$PT8AO)
        (&undefined-rcd . g$11811$PT8AO)
        (&undefined-rtd . g$11810$PT8AO)
        (&syntax-rcd . g$11809$PT8AO)
        (&syntax-rtd . g$11808$PT8AO)
        (&lexical-rcd . g$11807$PT8AO)
        (&lexical-rtd . g$11806$PT8AO)
        (&implementation-restriction-rcd . g$11805$PT8AO)
        (&implementation-restriction-rtd . g$11804$PT8AO)
        (&non-continuable-rcd . g$11803$PT8AO)
        (&non-continuable-rtd . g$11802$PT8AO)
        (&who-rcd . g$11801$PT8AO)
        (&who-rtd . g$11800$PT8AO)
        (&irritants-rcd . g$11799$PT8AO)
        (&irritants-rtd . g$11798$PT8AO)
        (&assertion-rcd . g$11797$PT8AO)
        (&assertion-rtd . g$11796$PT8AO)
        (&violation-rcd . g$11795$PT8AO)
        (&violation-rtd . g$11794$PT8AO)
        (&error-rcd . g$11793$PT8AO)
        (&error-rtd . g$11792$PT8AO)
        (&serious-rcd . g$11791$PT8AO)
        (&serious-rtd . g$11790$PT8AO)
        (&warning-rcd . g$11789$PT8AO)
        (&warning-rtd . g$11788$PT8AO)
        (&message-rcd . g$11787$PT8AO)
        (&message-rtd . g$11786$PT8AO)
        (&condition-rcd . g$11785$PT8AO)
        (&condition-rtd . g$11784$PT8AO)
        (library-letrec* . g$11783$PT8AO)
        (annotation-stripped . g$11782$PT8AO)
        (annotation-source . g$11781$PT8AO)
        (annotation-expression . g$11780$PT8AO)
        (annotation? . g$11779$PT8AO)
        (read-annotated . g$11778$PT8AO)
        (tanh . g$11777$PT8AO)
        (cosh . g$11776$PT8AO)
        (sinh . g$11775$PT8AO)
        (make-guid . g$11774$PT8AO)
        (unspecified? . g$11773$PT8AO)
        (make-trace . g$11772$PT8AO)
        (make-list . g$11771$PT8AO)
        (last-pair . g$11770$PT8AO)
        (load-r5rs . g$11769$PT8AO)
        (license . g$11768$PT8AO)
        (stacktrace . g$11767$PT8AO)
        (ironscheme-build . g$11161$PT8AO)
        (define-clr-class-internal . g$11766$PT8AO)
        (clr-field-set!-internal . g$11765$PT8AO)
        (clr-field-get-internal . g$11764$PT8AO)
        (clr-cast-internal . g$11763$PT8AO)
        (clr-call-internal . g$11762$PT8AO)
        (clr-new-internal . g$11761$PT8AO)
        (clr-new-array-internal . g$11760$PT8AO)
        (clr-is-internal . g$11759$PT8AO)
        (clr-reference-internal . g$11758$PT8AO)
        (clr-using-internal . g$11757$PT8AO)
        (clr-clear-usings-internal . g$11756$PT8AO)
        (syntax-error . g$8222$PT8AO)
        (syntax-dispatch . g$8098$PT8AO)
        (compile-core . g$11755$PT8AO)
        (eval-core . g$11754$PT8AO)
        (set-symbol-value! . g$11753$PT8AO)
        (symbol-value . g$11752$PT8AO)
        (ungensym . g$11751$PT8AO)
        (gensym . g$11750$PT8AO)
        (void . g$11749$PT8AO)
        (load-serialized-library . g$11748$PT8AO)
        (serialize-library . g$11747$PT8AO)
        (compile-system-libraries . g$11163$PT8AO)
        (compile->closure . g$11165$PT8AO)
        (compile . g$11164$PT8AO)
        (load . g$11160$PT8AO)
        (interaction-environment . g$8231$PT8AO)
        (char-ready? . g$11746$PT8AO)
        (string-upcase . g$11745$PT8AO)
        (string-titlecase . g$11744$PT8AO)
        (string-normalize-nfkd . g$11743$PT8AO)
        (string-normalize-nfkc . g$11742$PT8AO)
        (string-normalize-nfd . g$11741$PT8AO)
        (string-normalize-nfc . g$11740$PT8AO)
        (string-foldcase . g$11739$PT8AO)
        (string-downcase . g$11738$PT8AO)
        (string-ci>? . g$11737$PT8AO)
        (string-ci>=? . g$11736$PT8AO)
        (string-ci=? . g$11735$PT8AO)
        (string-ci<? . g$11734$PT8AO)
        (string-ci<=? . g$11733$PT8AO)
        (char-whitespace? . g$11732$PT8AO)
        (char-upper-case? . g$11731$PT8AO)
        (char-title-case? . g$11730$PT8AO)
        (char-numeric? . g$11729$PT8AO)
        (char-lower-case? . g$11728$PT8AO)
        (char-general-category . g$11727$PT8AO)
        (char-upcase . g$11726$PT8AO)
        (char-titlecase . g$11725$PT8AO)
        (char-foldcase . g$11724$PT8AO)
        (char-downcase . g$11723$PT8AO)
        (char-ci>? . g$11722$PT8AO)
        (char-ci>=? . g$11721$PT8AO)
        (char-ci=? . g$11720$PT8AO)
        (char-ci<? . g$11719$PT8AO)
        (char-ci<=? . g$11718$PT8AO)
        (char-alphabetic? . g$11717$PT8AO)
        (variable-transformer-procedure . g$7835$PT8AO)
        (variable-transformer? . g$7834$PT8AO)
        (make-variable-transformer . g$7833$PT8AO)
        (identifier? . g$8226$PT8AO)
        (generate-temporaries . g$8218$PT8AO)
        (free-identifier=? . g$8219$PT8AO)
        (syntax->datum . g$8228$PT8AO)
        (datum->syntax . g$8227$PT8AO)
        (bound-identifier=? . g$8220$PT8AO)
        (record-type-descriptor? . g$11716$PT8AO)
        (record-predicate . g$11715$PT8AO)
        (record-mutator . g$11714$PT8AO)
        (record-constructor . g$11713$PT8AO)
        (record-accessor . g$11712$PT8AO)
        (make-record-type-descriptor . g$11711$PT8AO)
        (make-record-constructor-descriptor . g$11710$PT8AO)
        (record? . g$11709$PT8AO)
        (record-type-uid . g$11708$PT8AO)
        (record-type-sealed? . g$11707$PT8AO)
        (record-type-parent . g$11706$PT8AO)
        (record-type-opaque? . g$11705$PT8AO)
        (record-type-name . g$11704$PT8AO)
        (record-type-generative? . g$11703$PT8AO)
        (record-type-field-names . g$11702$PT8AO)
        (record-rtd . g$11701$PT8AO)
        (record-field-mutable? . g$11700$PT8AO)
        (delete-file . g$6016$PT8AO)
        (file-exists? . g$6015$PT8AO)
        (vector-sort! . g$11699$PT8AO)
        (vector-sort . g$11698$PT8AO)
        (list-sort . g$6523$PT8AO)
        (symbol-hash . g$11697$PT8AO)
        (string-ci-hash . g$11696$PT8AO)
        (string-hash . g$11695$PT8AO)
        (equal-hash . g$11694$PT8AO)
        (hashtable-equivalence-function . g$11693$PT8AO)
        (make-hashtable . g$11692$PT8AO)
        (hashtable-hash-function . g$11691$PT8AO)
        (make-eqv-hashtable . g$5983$PT8AO)
        (make-eq-hashtable . g$5982$PT8AO)
        (hashtable? . g$11690$PT8AO)
        (hashtable-update! . g$5989$PT8AO)
        (hashtable-size . g$5984$PT8AO)
        (hashtable-set! . g$5986$PT8AO)
        (hashtable-ref . g$5985$PT8AO)
        (hashtable-mutable? . g$11689$PT8AO)
        (hashtable-keys . g$11688$PT8AO)
        (hashtable-entries . g$11687$PT8AO)
        (hashtable-delete! . g$5987$PT8AO)
        (hashtable-copy . g$11686$PT8AO)
        (hashtable-contains? . g$5988$PT8AO)
        (hashtable-clear! . g$5990$PT8AO)
        (call-with-output-file . g$11685$PT8AO)
        (call-with-input-file . g$11684$PT8AO)
        (write-char . g$11683$PT8AO)
        (write . g$11682$PT8AO)
        (with-output-to-file . g$11681$PT8AO)
        (with-input-from-file . g$11680$PT8AO)
        (read-char . g$11679$PT8AO)
        (read . g$11678$PT8AO)
        (peek-char . g$11677$PT8AO)
        (open-output-file . g$11676$PT8AO)
        (open-input-file . g$11675$PT8AO)
        (newline . g$11674$PT8AO)
        (display . g$11673$PT8AO)
        (close-output-port . g$11672$PT8AO)
        (close-input-port . g$11671$PT8AO)
        (eof-object? . g$11670$PT8AO)
        (eof-object . g$11669$PT8AO)
        (current-error-port . g$11668$PT8AO)
        (current-output-port . g$11667$PT8AO)
        (current-input-port . g$11666$PT8AO)
        (output-port? . g$11665$PT8AO)
        (input-port? . g$11664$PT8AO)
        (utf-8-codec . g$11663$PT8AO)
        (utf-16-codec . g$11662$PT8AO)
        (transcoder-error-handling-mode . g$11661$PT8AO)
        (transcoder-eol-style . g$11660$PT8AO)
        (transcoder-codec . g$11659$PT8AO)
        (transcoded-port . g$11658$PT8AO)
        (textual-port? . g$11657$PT8AO)
        (string->bytevector . g$11656$PT8AO)
        (standard-output-port . g$11655$PT8AO)
        (standard-input-port . g$11654$PT8AO)
        (standard-error-port . g$11653$PT8AO)
        (set-port-position! . g$11652$PT8AO)
        (put-u8 . g$11651$PT8AO)
        (put-string . g$11650$PT8AO)
        (put-datum . g$11649$PT8AO)
        (put-char . g$11648$PT8AO)
        (put-bytevector . g$11647$PT8AO)
        (port? . g$11646$PT8AO)
        (port-transcoder . g$11645$PT8AO)
        (port-position . g$11644$PT8AO)
        (port-has-set-port-position!? . g$11643$PT8AO)
        (port-has-port-position? . g$11642$PT8AO)
        (port-eof? . g$11641$PT8AO)
        (output-port-buffer-mode . g$11640$PT8AO)
        (open-string-output-port . g$6914$PT8AO)
        (open-string-input-port . g$11639$PT8AO)
        (open-file-output-port . g$11638$PT8AO)
        (open-file-input/output-port . g$11637$PT8AO)
        (open-file-input-port . g$11636$PT8AO)
        (open-bytevector-output-port . g$11635$PT8AO)
        (open-bytevector-input-port . g$11634$PT8AO)
        (native-transcoder . g$11633$PT8AO)
        (native-eol-style . g$11632$PT8AO)
        (make-transcoder . g$11631$PT8AO)
        (latin-1-codec . g$11630$PT8AO)
        (make-i/o-write-error . g$6771$PT8AO)
        (make-i/o-read-error . g$6757$PT8AO)
        (make-i/o-port-error . g$6876$PT8AO)
        (make-i/o-invalid-position-error . g$6786$PT8AO)
        (make-i/o-filename-error . g$6803$PT8AO)
        (make-i/o-file-protection-error . g$6819$PT8AO)
        (make-i/o-file-is-read-only-error . g$6833$PT8AO)
        (make-i/o-file-does-not-exist-error . g$6861$PT8AO)
        (make-i/o-file-already-exists-error . g$6847$PT8AO)
        (make-i/o-error . g$6743$PT8AO)
        (make-i/o-encoding-error . g$6907$PT8AO)
        (make-i/o-decoding-error . g$6892$PT8AO)
        (make-custom-textual-output-port . g$11629$PT8AO)
        (make-custom-textual-input/output-port . g$11628$PT8AO)
        (make-custom-textual-input-port . g$11627$PT8AO)
        (make-custom-binary-output-port . g$11626$PT8AO)
        (make-custom-binary-input/output-port . g$11625$PT8AO)
        (make-custom-binary-input-port . g$11624$PT8AO)
        (make-bytevector . g$11623$PT8AO)
        (lookahead-u8 . g$11622$PT8AO)
        (lookahead-char . g$11621$PT8AO)
        (i/o-write-error? . g$6772$PT8AO)
        (i/o-read-error? . g$6758$PT8AO)
        (i/o-port-error? . g$6878$PT8AO)
        (i/o-invalid-position-error? . g$6788$PT8AO)
        (i/o-filename-error? . g$6805$PT8AO)
        (i/o-file-protection-error? . g$6820$PT8AO)
        (i/o-file-is-read-only-error? . g$6834$PT8AO)
        (i/o-file-does-not-exist-error? . g$6862$PT8AO)
        (i/o-file-already-exists-error? . g$6848$PT8AO)
        (i/o-error? . g$6744$PT8AO)
        (i/o-error-port . g$6879$PT8AO)
        (i/o-error-filename . g$6806$PT8AO)
        (i/o-encoding-error? . g$6909$PT8AO)
        (i/o-encoding-error-char . g$6910$PT8AO)
        (i/o-decoding-error? . g$6893$PT8AO)
        (get-u8 . g$11620$PT8AO)
        (get-string-n! . g$11619$PT8AO)
        (get-string-n . g$11618$PT8AO)
        (get-string-all . g$11617$PT8AO)
        (get-line . g$11616$PT8AO)
        (get-datum . g$11615$PT8AO)
        (get-char . g$11614$PT8AO)
        (get-bytevector-some . g$11613$PT8AO)
        (get-bytevector-n! . g$11612$PT8AO)
        (get-bytevector-n . g$11611$PT8AO)
        (get-bytevector-all . g$11610$PT8AO)
        (flush-output-port . g$11609$PT8AO)
        (close-port . g$11608$PT8AO)
        (call-with-string-output-port . g$11607$PT8AO)
        (call-with-port . g$11606$PT8AO)
        (call-with-bytevector-output-port . g$11605$PT8AO)
        (bytevector->string . g$11604$PT8AO)
        (buffer-mode? . g$11603$PT8AO)
        (binary-port? . g$11602$PT8AO)
        (scheme-report-environment . g$8209$PT8AO)
        (quotient . g$6510$PT8AO)
        (null-environment . g$8208$PT8AO)
        (remainder . g$6511$PT8AO)
        (modulo . g$6512$PT8AO)
        (inexact->exact . g$11601$PT8AO)
        (force . g$11600$PT8AO)
        (exact->inexact . g$11599$PT8AO)
        (exit . g$11598$PT8AO)
        (command-line . g$11597$PT8AO)
        (string-fill! . g$11596$PT8AO)
        (string-set! . g$11595$PT8AO)
        (set-cdr! . g$11594$PT8AO)
        (set-car! . g$11593$PT8AO)
        (remove . g$6096$PT8AO)
        (remv . g$6097$PT8AO)
        (remp . g$6082$PT8AO)
        (remq . g$6098$PT8AO)
        (partition . g$6081$PT8AO)
        (memv . g$11592$PT8AO)
        (memq . g$11591$PT8AO)
        (memp . g$6088$PT8AO)
        (member . g$6087$PT8AO)
        (exists . g$6092$PT8AO)
        (for-all . g$6091$PT8AO)
        (fold-right . g$6095$PT8AO)
        (fold-left . g$6094$PT8AO)
        (find . g$6080$PT8AO)
        (filter . g$6083$PT8AO)
        (cons* . g$6093$PT8AO)
        (assv . g$6084$PT8AO)
        (assq . g$11590$PT8AO)
        (assp . g$6086$PT8AO)
        (assoc . g$6085$PT8AO)
        (with-exception-handler . g$11589$PT8AO)
        (raise-continuable . g$11588$PT8AO)
        (raise . g$11587$PT8AO)
        (eval . g$8211$PT8AO)
        (environment . g$8207$PT8AO)
        (make-enumeration . g$11586$PT8AO)
        (enum-set=? . g$11585$PT8AO)
        (enum-set-universe . g$11584$PT8AO)
        (enum-set-union . g$11583$PT8AO)
        (enum-set-subset? . g$11582$PT8AO)
        (enum-set-projection . g$11581$PT8AO)
        (enum-set-member? . g$11580$PT8AO)
        (enum-set-intersection . g$11579$PT8AO)
        (enum-set-indexer . g$11578$PT8AO)
        (enum-set-difference . g$11577$PT8AO)
        (enum-set-constructor . g$11576$PT8AO)
        (enum-set-complement . g$11575$PT8AO)
        (enum-set->list . g$11574$PT8AO)
        (who-condition? . g$6421$PT8AO)
        (warning? . g$6332$PT8AO)
        (violation? . g$6374$PT8AO)
        (undefined-violation? . g$6498$PT8AO)
        (syntax-violation? . g$6482$PT8AO)
        (syntax-violation-subform . g$6484$PT8AO)
        (syntax-violation-form . g$6483$PT8AO)
        (syntax-violation . g$8225$PT8AO)
        (simple-conditions . g$11573$PT8AO)
        (serious-condition? . g$6346$PT8AO)
        (non-continuable-violation? . g$6436$PT8AO)
        (message-condition? . g$6317$PT8AO)
        (make-who-condition . g$6419$PT8AO)
        (make-warning . g$6331$PT8AO)
        (make-violation . g$6373$PT8AO)
        (make-undefined-violation . g$6497$PT8AO)
        (make-syntax-violation . g$6479$PT8AO)
        (make-serious-condition . g$6345$PT8AO)
        (make-non-continuable-violation . g$6435$PT8AO)
        (make-message-condition . g$6315$PT8AO)
        (make-lexical-violation . g$6463$PT8AO)
        (make-irritants-condition . g$6402$PT8AO)
        (make-implementation-restriction-violation . g$6449$PT8AO)
        (make-error . g$6359$PT8AO)
        (make-assertion-violation . g$6387$PT8AO)
        (lexical-violation? . g$6464$PT8AO)
        (irritants-condition? . g$6404$PT8AO)
        (implementation-restriction-violation? . g$6450$PT8AO)
        (error? . g$6360$PT8AO)
        (condition-who . g$6422$PT8AO)
        (condition-predicate . g$11572$PT8AO)
        (condition-message . g$6318$PT8AO)
        (condition-irritants . g$6405$PT8AO)
        (condition-accessor . g$11571$PT8AO)
        (condition . g$11570$PT8AO)
        (assertion-violation? . g$6388$PT8AO)
        (condition? . g$11569$PT8AO)
        (utf32->string . g$11568$PT8AO)
        (utf16->string . g$11567$PT8AO)
        (utf8->string . g$11566$PT8AO)
        (uint-list->bytevector . g$11565$PT8AO)
        (u8-list->bytevector . g$11564$PT8AO)
        (string->utf8 . g$11563$PT8AO)
        (string->utf32 . g$11562$PT8AO)
        (string->utf16 . g$11561$PT8AO)
        (sint-list->bytevector . g$11560$PT8AO)
        (native-endianness . g$6172$PT8AO)
        (bytevector? . g$11559$PT8AO)
        (bytevector=? . g$11558$PT8AO)
        (bytevector-uint-set! . g$11557$PT8AO)
        (bytevector-uint-ref . g$11556$PT8AO)
        (bytevector-u8-set! . g$11555$PT8AO)
        (bytevector-u8-ref . g$11554$PT8AO)
        (bytevector-u64-set! . g$6193$PT8AO)
        (bytevector-u64-ref . g$6189$PT8AO)
        (bytevector-u64-native-set! . g$6195$PT8AO)
        (bytevector-u64-native-ref . g$6191$PT8AO)
        (bytevector-u32-set! . g$6185$PT8AO)
        (bytevector-u32-ref . g$6181$PT8AO)
        (bytevector-u32-native-set! . g$6187$PT8AO)
        (bytevector-u32-native-ref . g$6183$PT8AO)
        (bytevector-u16-set! . g$6177$PT8AO)
        (bytevector-u16-ref . g$6173$PT8AO)
        (bytevector-u16-native-set! . g$6179$PT8AO)
        (bytevector-u16-native-ref . g$6175$PT8AO)
        (bytevector-sint-set! . g$11553$PT8AO)
        (bytevector-sint-ref . g$11552$PT8AO)
        (bytevector-s8-set! . g$11551$PT8AO)
        (bytevector-s8-ref . g$11550$PT8AO)
        (bytevector-s64-set! . g$6194$PT8AO)
        (bytevector-s64-ref . g$6190$PT8AO)
        (bytevector-s64-native-set! . g$6196$PT8AO)
        (bytevector-s64-native-ref . g$6192$PT8AO)
        (bytevector-s32-set! . g$6186$PT8AO)
        (bytevector-s32-ref . g$6182$PT8AO)
        (bytevector-s32-native-set! . g$6188$PT8AO)
        (bytevector-s32-native-ref . g$6184$PT8AO)
        (bytevector-s16-set! . g$6178$PT8AO)
        (bytevector-s16-ref . g$6174$PT8AO)
        (bytevector-s16-native-set! . g$6180$PT8AO)
        (bytevector-s16-native-ref . g$6176$PT8AO)
        (bytevector-length . g$11549$PT8AO)
        (bytevector-ieee-single-set! . g$11548$PT8AO)
        (bytevector-ieee-single-ref . g$11547$PT8AO)
        (bytevector-ieee-single-native-set! . g$6199$PT8AO)
        (bytevector-ieee-single-native-ref . g$6197$PT8AO)
        (bytevector-ieee-double-set! . g$11546$PT8AO)
        (bytevector-ieee-double-ref . g$11545$PT8AO)
        (bytevector-ieee-double-native-set! . g$6200$PT8AO)
        (bytevector-ieee-double-native-ref . g$6198$PT8AO)
        (bytevector-fill! . g$11544$PT8AO)
        (bytevector-copy! . g$11543$PT8AO)
        (bytevector-copy . g$11542$PT8AO)
        (bytevector->uint-list . g$11541$PT8AO)
        (bytevector->u8-list . g$11540$PT8AO)
        (bytevector->sint-list . g$11539$PT8AO)
        (no-nans-violation? . g$6729$PT8AO)
        (no-infinities-violation? . g$6715$PT8AO)
        (make-no-nans-violation . g$6728$PT8AO)
        (make-no-infinities-violation . g$6714$PT8AO)
        (real->flonum . g$11538$PT8AO)
        (flzero? . g$11537$PT8AO)
        (fltruncate . g$11536$PT8AO)
        (fltan . g$11535$PT8AO)
        (flsqrt . g$11534$PT8AO)
        (flsin . g$11533$PT8AO)
        (flround . g$11532$PT8AO)
        (flpositive? . g$11531$PT8AO)
        (flonum? . g$11530$PT8AO)
        (flodd? . g$11529$PT8AO)
        (flnumerator . g$11528$PT8AO)
        (flnegative? . g$11527$PT8AO)
        (flnan? . g$11526$PT8AO)
        (flmod0 . g$11525$PT8AO)
        (flmod . g$11524$PT8AO)
        (flmin . g$11523$PT8AO)
        (flmax . g$11522$PT8AO)
        (fllog . g$11521$PT8AO)
        (flinteger? . g$11520$PT8AO)
        (flinfinite? . g$11519$PT8AO)
        (flfloor . g$11518$PT8AO)
        (flfinite? . g$11517$PT8AO)
        (flexpt . g$11516$PT8AO)
        (flexp . g$11515$PT8AO)
        (fleven? . g$11514$PT8AO)
        (fldiv0-and-mod0 . g$11513$PT8AO)
        (fldiv0 . g$11512$PT8AO)
        (fldiv-and-mod . g$11511$PT8AO)
        (fldiv . g$11510$PT8AO)
        (fldenominator . g$11509$PT8AO)
        (flcos . g$11508$PT8AO)
        (flceiling . g$11507$PT8AO)
        (flatan . g$11506$PT8AO)
        (flasin . g$11505$PT8AO)
        (flacos . g$11504$PT8AO)
        (flabs . g$11503$PT8AO)
        (fl>? . g$11502$PT8AO)
        (fl>=? . g$11501$PT8AO)
        (fl=? . g$11500$PT8AO)
        (fl<? . g$11499$PT8AO)
        (fl<=? . g$11498$PT8AO)
        (fl/ . g$11497$PT8AO)
        (fl- . g$11496$PT8AO)
        (fl+ . g$11495$PT8AO)
        (fl* . g$11494$PT8AO)
        (fixnum->flonum . g$11493$PT8AO)
        (fxzero? . g$11492$PT8AO)
        (fxxor . g$11491$PT8AO)
        (fxrotate-bit-field . g$6660$PT8AO)
        (fxreverse-bit-field . g$11490$PT8AO)
        (fxpositive? . g$11489$PT8AO)
        (fxodd? . g$11488$PT8AO)
        (fxnot . g$11487$PT8AO)
        (fxnegative? . g$11486$PT8AO)
        (fxmod0 . g$11485$PT8AO)
        (fxmod . g$11484$PT8AO)
        (fxmin . g$11483$PT8AO)
        (fxmax . g$11482$PT8AO)
        (fxlength . g$11481$PT8AO)
        (fxior . g$11480$PT8AO)
        (fxif . g$6654$PT8AO)
        (fxfirst-bit-set . g$11479$PT8AO)
        (fxeven? . g$11478$PT8AO)
        (fxdiv0-and-mod0 . g$11477$PT8AO)
        (fxdiv0 . g$11476$PT8AO)
        (fxdiv-and-mod . g$11475$PT8AO)
        (fxdiv . g$11474$PT8AO)
        (fxcopy-bit-field . g$6657$PT8AO)
        (fxcopy-bit . g$6655$PT8AO)
        (fxbit-set? . g$11473$PT8AO)
        (fxbit-field . g$6656$PT8AO)
        (fxbit-count . g$11472$PT8AO)
        (fxarithmetic-shift-right . g$6659$PT8AO)
        (fxarithmetic-shift-left . g$6658$PT8AO)
        (fxarithmetic-shift . g$11471$PT8AO)
        (fxand . g$11470$PT8AO)
        (fx>? . g$11469$PT8AO)
        (fx>=? . g$11468$PT8AO)
        (fx=? . g$11467$PT8AO)
        (fx<? . g$11466$PT8AO)
        (fx<=? . g$11465$PT8AO)
        (fx-/carry . g$11464$PT8AO)
        (fx- . g$11463$PT8AO)
        (fx+/carry . g$11462$PT8AO)
        (fx+ . g$11461$PT8AO)
        (fx*/carry . g$11460$PT8AO)
        (fx* . g$11459$PT8AO)
        (greatest-fixnum . g$11458$PT8AO)
        (least-fixnum . g$11457$PT8AO)
        (fixnum-width . g$11456$PT8AO)
        (fixnum? . g$11455$PT8AO)
        (bitwise-rotate-bit-field . g$6608$PT8AO)
        (bitwise-reverse-bit-field . g$6609$PT8AO)
        (bitwise-length . g$11454$PT8AO)
        (bitwise-if . g$6602$PT8AO)
        (bitwise-first-bit-set . g$11453$PT8AO)
        (bitwise-copy-bit-field . g$6605$PT8AO)
        (bitwise-copy-bit . g$6603$PT8AO)
        (bitwise-bit-set? . g$11452$PT8AO)
        (bitwise-bit-field . g$11451$PT8AO)
        (bitwise-bit-count . g$11450$PT8AO)
        (bitwise-xor . g$11449$PT8AO)
        (bitwise-ior . g$11448$PT8AO)
        (bitwise-and . g$11447$PT8AO)
        (bitwise-not . g$11446$PT8AO)
        (bitwise-arithmetic-shift-right . g$6607$PT8AO)
        (bitwise-arithmetic-shift-left . g$6606$PT8AO)
        (bitwise-arithmetic-shift . g$11445$PT8AO)
        (zero? . g$11444$PT8AO)
        (vector? . g$11443$PT8AO)
        (vector-set! . g$11442$PT8AO)
        (vector-ref . g$11441$PT8AO)
        (vector-map . g$11440$PT8AO)
        (vector-length . g$11439$PT8AO)
        (vector-for-each . g$11438$PT8AO)
        (vector-fill! . g$11437$PT8AO)
        (vector->list . g$11436$PT8AO)
        (vector . g$11435$PT8AO)
        (values . g$11434$PT8AO)
        (truncate . g$11433$PT8AO)
        (tan . g$11432$PT8AO)
        (symbol? . g$11431$PT8AO)
        (symbol=? . g$11430$PT8AO)
        (symbol->string . g$11429$PT8AO)
        (substring . g$11428$PT8AO)
        (string? . g$11427$PT8AO)
        (string>? . g$11426$PT8AO)
        (string>=? . g$11425$PT8AO)
        (string=? . g$11424$PT8AO)
        (string<? . g$11423$PT8AO)
        (string<=? . g$11422$PT8AO)
        (string-ref . g$11421$PT8AO)
        (string-length . g$11420$PT8AO)
        (string-for-each . g$11419$PT8AO)
        (string-copy . g$11418$PT8AO)
        (string-append . g$11417$PT8AO)
        (string->symbol . g$11416$PT8AO)
        (string->number . g$11415$PT8AO)
        (string->list . g$11414$PT8AO)
        (string . g$11413$PT8AO)
        (sqrt . g$11412$PT8AO)
        (sin . g$11411$PT8AO)
        (round . g$11410$PT8AO)
        (reverse . g$11409$PT8AO)
        (real? . g$11408$PT8AO)
        (real-valued? . g$11407$PT8AO)
        (real-part . g$11406$PT8AO)
        (rationalize . g$5633$PT8AO)
        (rational? . g$11405$PT8AO)
        (rational-valued? . g$11404$PT8AO)
        (procedure? . g$11403$PT8AO)
        (positive? . g$11402$PT8AO)
        (pair? . g$11401$PT8AO)
        (odd? . g$11400$PT8AO)
        (numerator . g$11399$PT8AO)
        (number? . g$11398$PT8AO)
        (number->string . g$11397$PT8AO)
        (null? . g$11396$PT8AO)
        (not . g$11395$PT8AO)
        (negative? . g$11394$PT8AO)
        (nan? . g$11393$PT8AO)
        (min . g$11392$PT8AO)
        (max . g$11391$PT8AO)
        (map . g$11390$PT8AO)
        (make-vector . g$11389$PT8AO)
        (make-string . g$11388$PT8AO)
        (make-rectangular . g$11387$PT8AO)
        (make-polar . g$11386$PT8AO)
        (magnitude . g$11385$PT8AO)
        (log . g$11384$PT8AO)
        (list? . g$11383$PT8AO)
        (list-tail . g$11382$PT8AO)
        (list-ref . g$11381$PT8AO)
        (list->vector . g$11380$PT8AO)
        (list->string . g$11379$PT8AO)
        (list . g$11378$PT8AO)
        (length . g$11377$PT8AO)
        (lcm . g$11376$PT8AO)
        (integer? . g$11375$PT8AO)
        (integer-valued? . g$11374$PT8AO)
        (integer->char . g$11373$PT8AO)
        (infinite? . g$11372$PT8AO)
        (inexact? . g$11371$PT8AO)
        (inexact . g$11370$PT8AO)
        (imag-part . g$11369$PT8AO)
        (gcd . g$11368$PT8AO)
        (for-each . g$11367$PT8AO)
        (floor . g$11366$PT8AO)
        (finite? . g$11365$PT8AO)
        (expt . g$11364$PT8AO)
        (exp . g$11363$PT8AO)
        (exact? . g$11362$PT8AO)
        (exact-integer-sqrt . g$11361$PT8AO)
        (exact . g$11360$PT8AO)
        (even? . g$11359$PT8AO)
        (error . g$11358$PT8AO)
        (eqv? . g$11357$PT8AO)
        (equal? . g$11356$PT8AO)
        (eq? . g$11355$PT8AO)
        (dynamic-wind . g$11354$PT8AO)
        (div0-and-mod0 . g$11353$PT8AO)
        (mod0 . g$11352$PT8AO)
        (div0 . g$11351$PT8AO)
        (div-and-mod . g$11350$PT8AO)
        (mod . g$11349$PT8AO)
        (div . g$11348$PT8AO)
        (denominator . g$11347$PT8AO)
        (cos . g$11346$PT8AO)
        (cons . g$11345$PT8AO)
        (complex? . g$11344$PT8AO)
        (char? . g$11343$PT8AO)
        (char>? . g$11342$PT8AO)
        (char>=? . g$11341$PT8AO)
        (char=? . g$11340$PT8AO)
        (char<? . g$11339$PT8AO)
        (char<=? . g$11338$PT8AO)
        (char->integer . g$11337$PT8AO)
        (ceiling . g$11336$PT8AO)
        (call-with-values . g$11335$PT8AO)
        (call/cc . g$11334$PT8AO)
        (call-with-current-continuation . g$11333$PT8AO)
        (cddddr . g$5632$PT8AO)
        (cdddar . g$5631$PT8AO)
        (cddadr . g$5630$PT8AO)
        (cddaar . g$5629$PT8AO)
        (cdaddr . g$5628$PT8AO)
        (cdadar . g$5627$PT8AO)
        (cdaadr . g$5626$PT8AO)
        (cdaaar . g$5625$PT8AO)
        (cadddr . g$5624$PT8AO)
        (caddar . g$5623$PT8AO)
        (cadadr . g$5622$PT8AO)
        (cadaar . g$5621$PT8AO)
        (caaddr . g$5620$PT8AO)
        (caadar . g$5619$PT8AO)
        (caaadr . g$5618$PT8AO)
        (caaaar . g$5617$PT8AO)
        (cdddr . g$5616$PT8AO)
        (cddar . g$5615$PT8AO)
        (cdadr . g$5614$PT8AO)
        (cdaar . g$5613$PT8AO)
        (caddr . g$5612$PT8AO)
        (cadar . g$5611$PT8AO)
        (caadr . g$5610$PT8AO)
        (caaar . g$5609$PT8AO)
        (cddr . g$5608$PT8AO)
        (cdar . g$5607$PT8AO)
        (cadr . g$5606$PT8AO)
        (caar . g$5605$PT8AO)
        (cdr . g$11332$PT8AO)
        (car . g$11331$PT8AO)
        (boolean? . g$11330$PT8AO)
        (boolean=? . g$11329$PT8AO)
        (atan . g$11328$PT8AO)
        (assertion-violation . g$11327$PT8AO)
        (asin . g$11326$PT8AO)
        (apply . g$11325$PT8AO)
        (append . g$11324$PT8AO)
        (angle . g$11323$PT8AO)
        (acos . g$11322$PT8AO)
        (abs . g$11321$PT8AO)
        (/ . g$11320$PT8AO)
        (* . g$11319$PT8AO)
        (- . g$11318$PT8AO)
        (+ . g$11317$PT8AO)
        (>= . g$11316$PT8AO)
        (> . g$11315$PT8AO)
        (= . g$11314$PT8AO)
        (<= . g$11313$PT8AO)
        (< . g$11312$PT8AO)
        (make-record-printer . g$11311$PT8AO)
        (eqv-hash . g$11310$PT8AO)
        (eq-hash . g$11309$PT8AO)
        (reverse! . g$11308$PT8AO)
        (printf . g$6923$PT8AO)
        (fprintf . g$6924$PT8AO)
        (format . g$6925$PT8AO)
        (get-arity . g$11307$PT8AO)
        (gc-collect . g$11306$PT8AO)
        (clr-type? . g$11305$PT8AO)
        (get-clr-type . g$11304$PT8AO)
        (vector-append . g$11303$PT8AO)
        (vector-filter . g$11302$PT8AO)
        (vector-reverse! . g$11301$PT8AO)
        (vector-contains? . g$11300$PT8AO)
        (vector-index-of . g$11299$PT8AO)
        (vector-copy . g$11298$PT8AO)
        (vector-binary-search . g$11297$PT8AO)
        (get-output-string . g$11296$PT8AO)
        (open-output-string . g$11295$PT8AO)
        (open-input-string . g$11294$PT8AO)
        (string-format . g$11293$PT8AO)
        (trace-printer . g$11158$PT8AO)
        (make-traced-procedure . g$11292$PT8AO)
        (make-traced-macro . g$6944$PT8AO)
        (pmap . g$11291$PT8AO)
        (time-it . g$11290$PT8AO)
        (make-parameter . g$6949$PT8AO)
        (library-locator . g$11289$PT8AO)
        (get-library-paths . g$11288$PT8AO)
        (environment-symbols . g$8205$PT8AO)
        (interaction-environment-symbols . g$8204$PT8AO)
        (library-path . g$7374$PT8AO)
        (library-extensions . g$7375$PT8AO)
        (installed-libraries . g$7395$PT8AO)
        (expand . g$8210$PT8AO)
        (&no-nans . g$11287$PT8AO)
        (&no-infinities . g$11286$PT8AO)
        (&i/o-encoding . g$11285$PT8AO)
        (&i/o-decoding . g$11284$PT8AO)
        (&i/o-port . g$11283$PT8AO)
        (&i/o-file-does-not-exist . g$11282$PT8AO)
        (&i/o-file-already-exists . g$11281$PT8AO)
        (&i/o-file-is-read-only . g$11280$PT8AO)
        (&i/o-file-protection . g$11279$PT8AO)
        (&i/o-filename . g$11278$PT8AO)
        (&i/o-invalid-position . g$11277$PT8AO)
        (&i/o-write . g$11276$PT8AO)
        (&i/o-read . g$11275$PT8AO)
        (&i/o . g$11274$PT8AO)
        (&non-continuable . g$11273$PT8AO)
        (&undefined . g$11272$PT8AO)
        (&syntax . g$11271$PT8AO)
        (&lexical . g$11270$PT8AO)
        (&implementation-restriction . g$11269$PT8AO)
        (&non . g$11268$PT8AO)
        (&who . g$11267$PT8AO)
        (&irritants . g$11266$PT8AO)
        (&assertion . g$11265$PT8AO)
        (&violation . g$11264$PT8AO)
        (&error . g$11263$PT8AO)
        (&serious . g$11262$PT8AO)
        (&warning . g$11261$PT8AO)
        (&message . g$11260$PT8AO)
        (&condition . g$11259$PT8AO)
        (define-condition-type . g$11258$PT8AO)
        (define-enumeration . g$11257$PT8AO)
        (define-record-type . g$11256$PT8AO)
        (parent-rtd . g$11255$PT8AO)
        (nongenerative . g$11254$PT8AO)
        (opaque . g$11253$PT8AO)
        (sealed . g$11252$PT8AO)
        (protocol . g$11251$PT8AO)
        (parent . g$11250$PT8AO)
        (immutable . g$11249$PT8AO)
        (mutable . g$11248$PT8AO)
        (fields . g$11247$PT8AO)
        (error-handling-mode . g$11246$PT8AO)
        (file-options . g$11245$PT8AO)
        (buffer-mode . g$11244$PT8AO)
        (eol-style . g$11243$PT8AO)
        (guard . g$11242$PT8AO)
        (trace-letrec-syntax . g$11241$PT8AO)
        (trace-let-syntax . g$11240$PT8AO)
        (trace-define-syntax . g$11239$PT8AO)
        (trace-define . g$11238$PT8AO)
        (trace-lambda . g$11237$PT8AO)
        (unsyntax-splicing . g$11236$PT8AO)
        (unsyntax . g$11235$PT8AO)
        (unquote-splicing . g$11234$PT8AO)
        (unquote . g$11233$PT8AO)
        (_ . g$11232$PT8AO)
        (else . g$11231$PT8AO)
        (=> . g$11230$PT8AO)
        (... . g$11229$PT8AO)
        (assert . g$11228$PT8AO)
        (endianness . g$11227$PT8AO)
        (delay . g$11226$PT8AO)
        (time . g$11225$PT8AO)
        (or . g$11224$PT8AO)
        (and . g$11223$PT8AO)
        (do . g$11222$PT8AO)
        (cond . g$11221$PT8AO)
        (let* . g$11220$PT8AO)
        (let . g$11219$PT8AO)
        (identifier-syntax . g$11218$PT8AO)
        (with-syntax . g$11217$PT8AO)
        (quasisyntax . g$11216$PT8AO)
        (quasiquote . g$11215$PT8AO)
        (syntax-rules . g$11214$PT8AO)
        (include-into . g$11213$PT8AO)
        (include . g$11212$PT8AO)
        (define-struct . g$11211$PT8AO)
        (let-values . g$11210$PT8AO)
        (let*-values . g$11209$PT8AO)
        (record-constructor-descriptor . g$11208$PT8AO)
        (record-type-descriptor . g$11207$PT8AO)
        (fluid-let-syntax . g$11206$PT8AO)
        (case . g$11205$PT8AO)
        (parameterize . g$11204$PT8AO)
        (unless . g$11203$PT8AO)
        (when . g$11202$PT8AO)
        (if . g$11201$PT8AO)
        (letrec* . g$11200$PT8AO)
        (letrec . g$11199$PT8AO)
        (type-descriptor . g$11198$PT8AO)
        (case-lambda . g$11197$PT8AO)
        (lambda . g$11196$PT8AO)
        (syntax . g$11195$PT8AO)
        (syntax-case . g$11194$PT8AO)
        (quote . g$11193$PT8AO)
        (foreign-call . g$11192$PT8AO)
        (letrec-syntax . g$11191$PT8AO)
        (let-syntax . g$11190$PT8AO)
        (set! . g$11189$PT8AO)
        (import . g$11188$PT8AO)
        (library . g$11187$PT8AO)
        (begin . g$11186$PT8AO)
        (module . g$11185$PT8AO)
        (define-syntax . g$11184$PT8AO)
        (define . g$11183$PT8AO))
      '((g$8103$PT8AO core-prim . ellipsis-map)
        (g$11839$PT8AO core-prim . &no-nans-rcd)
        (g$11838$PT8AO core-prim . &no-nans-rtd)
        (g$11837$PT8AO core-prim . &no-infinities-rcd)
        (g$11836$PT8AO core-prim . &no-infinities-rtd)
        (g$11835$PT8AO core-prim . &i/o-encoding-rcd)
        (g$11834$PT8AO core-prim . &i/o-encoding-rtd)
        (g$11833$PT8AO core-prim . &i/o-decoding-rcd)
        (g$11832$PT8AO core-prim . &i/o-decoding-rtd)
        (g$11831$PT8AO core-prim . &i/o-port-rcd)
        (g$11830$PT8AO core-prim . &i/o-port-rtd)
        (g$11829$PT8AO core-prim . &i/o-file-does-not-exist-rcd)
        (g$11828$PT8AO core-prim . &i/o-file-does-not-exist-rtd)
        (g$11827$PT8AO core-prim . &i/o-file-already-exists-rcd)
        (g$11826$PT8AO core-prim . &i/o-file-already-exists-rtd)
        (g$11825$PT8AO core-prim . &i/o-fie-is-read-only-rcd)
        (g$11824$PT8AO core-prim . &i/o-fie-is-read-only-rtd)
        (g$11823$PT8AO core-prim . &i/o-file-protection-rcd)
        (g$11822$PT8AO core-prim . &i/o-file-protection-rtd)
        (g$11821$PT8AO core-prim . &i/o-filename-rcd)
        (g$11820$PT8AO core-prim . &i/o-filename-rtd)
        (g$11819$PT8AO core-prim . &i/o-invalid-position-rcd)
        (g$11818$PT8AO core-prim . &i/o-invalid-position-rtd)
        (g$11817$PT8AO core-prim . &i/o-write-rcd)
        (g$11816$PT8AO core-prim . &i/o-write-rtd)
        (g$11815$PT8AO core-prim . &i/o-read-rcd)
        (g$11814$PT8AO core-prim . &i/o-read-rtd)
        (g$11813$PT8AO core-prim . &i/o-rcd)
        (g$11812$PT8AO core-prim . &i/o-rtd)
        (g$11811$PT8AO core-prim . &undefined-rcd)
        (g$11810$PT8AO core-prim . &undefined-rtd)
        (g$11809$PT8AO core-prim . &syntax-rcd)
        (g$11808$PT8AO core-prim . &syntax-rtd)
        (g$11807$PT8AO core-prim . &lexical-rcd)
        (g$11806$PT8AO core-prim . &lexical-rtd)
        (g$11805$PT8AO core-prim . &implementation-restriction-rcd)
        (g$11804$PT8AO core-prim . &implementation-restriction-rtd)
        (g$11803$PT8AO core-prim . &non-continuable-rcd)
        (g$11802$PT8AO core-prim . &non-continuable-rtd)
        (g$11801$PT8AO core-prim . &who-rcd)
        (g$11800$PT8AO core-prim . &who-rtd)
        (g$11799$PT8AO core-prim . &irritants-rcd)
        (g$11798$PT8AO core-prim . &irritants-rtd)
        (g$11797$PT8AO core-prim . &assertion-rcd)
        (g$11796$PT8AO core-prim . &assertion-rtd)
        (g$11795$PT8AO core-prim . &violation-rcd)
        (g$11794$PT8AO core-prim . &violation-rtd)
        (g$11793$PT8AO core-prim . &error-rcd)
        (g$11792$PT8AO core-prim . &error-rtd)
        (g$11791$PT8AO core-prim . &serious-rcd)
        (g$11790$PT8AO core-prim . &serious-rtd)
        (g$11789$PT8AO core-prim . &warning-rcd)
        (g$11788$PT8AO core-prim . &warning-rtd)
        (g$11787$PT8AO core-prim . &message-rcd)
        (g$11786$PT8AO core-prim . &message-rtd)
        (g$11785$PT8AO core-prim . &condition-rcd)
        (g$11784$PT8AO core-prim . &condition-rtd)
        (g$11783$PT8AO core-prim . library-letrec*)
        (g$11782$PT8AO core-prim . annotation-stripped)
        (g$11781$PT8AO core-prim . annotation-source)
        (g$11780$PT8AO core-prim . annotation-expression)
        (g$11779$PT8AO core-prim . annotation?)
        (g$11778$PT8AO core-prim . read-annotated)
        (g$11777$PT8AO core-prim . tanh)
        (g$11776$PT8AO core-prim . cosh)
        (g$11775$PT8AO core-prim . sinh)
        (g$11774$PT8AO core-prim . make-guid)
        (g$11773$PT8AO core-prim . unspecified?)
        (g$11772$PT8AO core-prim . make-trace)
        (g$11771$PT8AO core-prim . make-list)
        (g$11770$PT8AO core-prim . last-pair)
        (g$11769$PT8AO core-prim . load-r5rs)
        (g$11768$PT8AO core-prim . license)
        (g$11767$PT8AO core-prim . stacktrace)
        (g$11161$PT8AO core-prim . ironscheme-build)
        (g$11766$PT8AO core-prim . define-clr-class-internal)
        (g$11765$PT8AO core-prim . clr-field-set!-internal)
        (g$11764$PT8AO core-prim . clr-field-get-internal)
        (g$11763$PT8AO core-prim . clr-cast-internal)
        (g$11762$PT8AO core-prim . clr-call-internal)
        (g$11761$PT8AO core-prim . clr-new-internal)
        (g$11760$PT8AO core-prim . clr-new-array-internal)
        (g$11759$PT8AO core-prim . clr-is-internal)
        (g$11758$PT8AO core-prim . clr-reference-internal)
        (g$11757$PT8AO core-prim . clr-using-internal)
        (g$11756$PT8AO core-prim . clr-clear-usings-internal)
        (g$8222$PT8AO core-prim . syntax-error)
        (g$8098$PT8AO core-prim . syntax-dispatch)
        (g$11755$PT8AO core-prim . compile-core)
        (g$11754$PT8AO core-prim . eval-core)
        (g$11753$PT8AO core-prim . set-symbol-value!)
        (g$11752$PT8AO core-prim . symbol-value)
        (g$11751$PT8AO core-prim . ungensym)
        (g$11750$PT8AO core-prim . gensym)
        (g$11749$PT8AO core-prim . void)
        (g$11748$PT8AO core-prim . load-serialized-library)
        (g$11747$PT8AO core-prim . serialize-library)
        (g$11163$PT8AO core-prim . compile-system-libraries)
        (g$11165$PT8AO core-prim . compile->closure)
        (g$11164$PT8AO core-prim . compile)
        (g$11160$PT8AO core-prim . load)
        (g$8231$PT8AO core-prim . interaction-environment)
        (g$11746$PT8AO core-prim . char-ready?)
        (g$11745$PT8AO core-prim . string-upcase)
        (g$11744$PT8AO core-prim . string-titlecase)
        (g$11743$PT8AO core-prim . string-normalize-nfkd)
        (g$11742$PT8AO core-prim . string-normalize-nfkc)
        (g$11741$PT8AO core-prim . string-normalize-nfd)
        (g$11740$PT8AO core-prim . string-normalize-nfc)
        (g$11739$PT8AO core-prim . string-foldcase)
        (g$11738$PT8AO core-prim . string-downcase)
        (g$11737$PT8AO core-prim . string-ci>?)
        (g$11736$PT8AO core-prim . string-ci>=?)
        (g$11735$PT8AO core-prim . string-ci=?)
        (g$11734$PT8AO core-prim . string-ci<?)
        (g$11733$PT8AO core-prim . string-ci<=?)
        (g$11732$PT8AO core-prim . char-whitespace?)
        (g$11731$PT8AO core-prim . char-upper-case?)
        (g$11730$PT8AO core-prim . char-title-case?)
        (g$11729$PT8AO core-prim . char-numeric?)
        (g$11728$PT8AO core-prim . char-lower-case?)
        (g$11727$PT8AO core-prim . char-general-category)
        (g$11726$PT8AO core-prim . char-upcase)
        (g$11725$PT8AO core-prim . char-titlecase)
        (g$11724$PT8AO core-prim . char-foldcase)
        (g$11723$PT8AO core-prim . char-downcase)
        (g$11722$PT8AO core-prim . char-ci>?)
        (g$11721$PT8AO core-prim . char-ci>=?)
        (g$11720$PT8AO core-prim . char-ci=?)
        (g$11719$PT8AO core-prim . char-ci<?)
        (g$11718$PT8AO core-prim . char-ci<=?)
        (g$11717$PT8AO core-prim . char-alphabetic?)
        (g$7835$PT8AO core-prim . variable-transformer-procedure)
        (g$7834$PT8AO core-prim . variable-transformer?)
        (g$7833$PT8AO core-prim . make-variable-transformer)
        (g$8226$PT8AO core-prim . identifier?)
        (g$8218$PT8AO core-prim . generate-temporaries)
        (g$8219$PT8AO core-prim . free-identifier=?)
        (g$8228$PT8AO core-prim . syntax->datum)
        (g$8227$PT8AO core-prim . datum->syntax)
        (g$8220$PT8AO core-prim . bound-identifier=?)
        (g$11716$PT8AO core-prim . record-type-descriptor?)
        (g$11715$PT8AO core-prim . record-predicate)
        (g$11714$PT8AO core-prim . record-mutator)
        (g$11713$PT8AO core-prim . record-constructor)
        (g$11712$PT8AO core-prim . record-accessor)
        (g$11711$PT8AO core-prim . make-record-type-descriptor)
        (g$11710$PT8AO core-prim . make-record-constructor-descriptor)
        (g$11709$PT8AO core-prim . record?)
        (g$11708$PT8AO core-prim . record-type-uid)
        (g$11707$PT8AO core-prim . record-type-sealed?)
        (g$11706$PT8AO core-prim . record-type-parent)
        (g$11705$PT8AO core-prim . record-type-opaque?)
        (g$11704$PT8AO core-prim . record-type-name)
        (g$11703$PT8AO core-prim . record-type-generative?)
        (g$11702$PT8AO core-prim . record-type-field-names)
        (g$11701$PT8AO core-prim . record-rtd)
        (g$11700$PT8AO core-prim . record-field-mutable?)
        (g$6016$PT8AO core-prim . delete-file)
        (g$6015$PT8AO core-prim . file-exists?)
        (g$11699$PT8AO core-prim . vector-sort!)
        (g$11698$PT8AO core-prim . vector-sort)
        (g$6523$PT8AO core-prim . list-sort)
        (g$11697$PT8AO core-prim . symbol-hash)
        (g$11696$PT8AO core-prim . string-ci-hash)
        (g$11695$PT8AO core-prim . string-hash)
        (g$11694$PT8AO core-prim . equal-hash)
        (g$11693$PT8AO core-prim . hashtable-equivalence-function)
        (g$11692$PT8AO core-prim . make-hashtable)
        (g$11691$PT8AO core-prim . hashtable-hash-function)
        (g$5983$PT8AO core-prim . make-eqv-hashtable)
        (g$5982$PT8AO core-prim . make-eq-hashtable)
        (g$11690$PT8AO core-prim . hashtable?)
        (g$5989$PT8AO core-prim . hashtable-update!)
        (g$5984$PT8AO core-prim . hashtable-size)
        (g$5986$PT8AO core-prim . hashtable-set!)
        (g$5985$PT8AO core-prim . hashtable-ref)
        (g$11689$PT8AO core-prim . hashtable-mutable?)
        (g$11688$PT8AO core-prim . hashtable-keys)
        (g$11687$PT8AO core-prim . hashtable-entries)
        (g$5987$PT8AO core-prim . hashtable-delete!)
        (g$11686$PT8AO core-prim . hashtable-copy)
        (g$5988$PT8AO core-prim . hashtable-contains?)
        (g$5990$PT8AO core-prim . hashtable-clear!)
        (g$11685$PT8AO core-prim . call-with-output-file)
        (g$11684$PT8AO core-prim . call-with-input-file)
        (g$11683$PT8AO core-prim . write-char)
        (g$11682$PT8AO core-prim . write)
        (g$11681$PT8AO core-prim . with-output-to-file)
        (g$11680$PT8AO core-prim . with-input-from-file)
        (g$11679$PT8AO core-prim . read-char)
        (g$11678$PT8AO core-prim . read)
        (g$11677$PT8AO core-prim . peek-char)
        (g$11676$PT8AO core-prim . open-output-file)
        (g$11675$PT8AO core-prim . open-input-file)
        (g$11674$PT8AO core-prim . newline)
        (g$11673$PT8AO core-prim . display)
        (g$11672$PT8AO core-prim . close-output-port)
        (g$11671$PT8AO core-prim . close-input-port)
        (g$11670$PT8AO core-prim . eof-object?)
        (g$11669$PT8AO core-prim . eof-object)
        (g$11668$PT8AO core-prim . current-error-port)
        (g$11667$PT8AO core-prim . current-output-port)
        (g$11666$PT8AO core-prim . current-input-port)
        (g$11665$PT8AO core-prim . output-port?)
        (g$11664$PT8AO core-prim . input-port?)
        (g$11663$PT8AO core-prim . utf-8-codec)
        (g$11662$PT8AO core-prim . utf-16-codec)
        (g$11661$PT8AO core-prim . transcoder-error-handling-mode)
        (g$11660$PT8AO core-prim . transcoder-eol-style)
        (g$11659$PT8AO core-prim . transcoder-codec)
        (g$11658$PT8AO core-prim . transcoded-port)
        (g$11657$PT8AO core-prim . textual-port?)
        (g$11656$PT8AO core-prim . string->bytevector)
        (g$11655$PT8AO core-prim . standard-output-port)
        (g$11654$PT8AO core-prim . standard-input-port)
        (g$11653$PT8AO core-prim . standard-error-port)
        (g$11652$PT8AO core-prim . set-port-position!)
        (g$11651$PT8AO core-prim . put-u8)
        (g$11650$PT8AO core-prim . put-string)
        (g$11649$PT8AO core-prim . put-datum)
        (g$11648$PT8AO core-prim . put-char)
        (g$11647$PT8AO core-prim . put-bytevector)
        (g$11646$PT8AO core-prim . port?)
        (g$11645$PT8AO core-prim . port-transcoder)
        (g$11644$PT8AO core-prim . port-position)
        (g$11643$PT8AO core-prim . port-has-set-port-position!?)
        (g$11642$PT8AO core-prim . port-has-port-position?)
        (g$11641$PT8AO core-prim . port-eof?)
        (g$11640$PT8AO core-prim . output-port-buffer-mode)
        (g$6914$PT8AO core-prim . open-string-output-port)
        (g$11639$PT8AO core-prim . open-string-input-port)
        (g$11638$PT8AO core-prim . open-file-output-port)
        (g$11637$PT8AO core-prim . open-file-input/output-port)
        (g$11636$PT8AO core-prim . open-file-input-port)
        (g$11635$PT8AO core-prim . open-bytevector-output-port)
        (g$11634$PT8AO core-prim . open-bytevector-input-port)
        (g$11633$PT8AO core-prim . native-transcoder)
        (g$11632$PT8AO core-prim . native-eol-style)
        (g$11631$PT8AO core-prim . make-transcoder)
        (g$11630$PT8AO core-prim . latin-1-codec)
        (g$6771$PT8AO core-prim . make-i/o-write-error)
        (g$6757$PT8AO core-prim . make-i/o-read-error)
        (g$6876$PT8AO core-prim . make-i/o-port-error)
        (g$6786$PT8AO core-prim . make-i/o-invalid-position-error)
        (g$6803$PT8AO core-prim . make-i/o-filename-error)
        (g$6819$PT8AO core-prim . make-i/o-file-protection-error)
        (g$6833$PT8AO core-prim . make-i/o-file-is-read-only-error)
        (g$6861$PT8AO core-prim . make-i/o-file-does-not-exist-error)
        (g$6847$PT8AO core-prim . make-i/o-file-already-exists-error)
        (g$6743$PT8AO core-prim . make-i/o-error)
        (g$6907$PT8AO core-prim . make-i/o-encoding-error)
        (g$6892$PT8AO core-prim . make-i/o-decoding-error)
        (g$11629$PT8AO core-prim . make-custom-textual-output-port)
        (g$11628$PT8AO core-prim . make-custom-textual-input/output-port)
        (g$11627$PT8AO core-prim . make-custom-textual-input-port)
        (g$11626$PT8AO core-prim . make-custom-binary-output-port)
        (g$11625$PT8AO core-prim . make-custom-binary-input/output-port)
        (g$11624$PT8AO core-prim . make-custom-binary-input-port)
        (g$11623$PT8AO core-prim . make-bytevector)
        (g$11622$PT8AO core-prim . lookahead-u8)
        (g$11621$PT8AO core-prim . lookahead-char)
        (g$6772$PT8AO core-prim . i/o-write-error?)
        (g$6758$PT8AO core-prim . i/o-read-error?)
        (g$6878$PT8AO core-prim . i/o-port-error?)
        (g$6788$PT8AO core-prim . i/o-invalid-position-error?)
        (g$6805$PT8AO core-prim . i/o-filename-error?)
        (g$6820$PT8AO core-prim . i/o-file-protection-error?)
        (g$6834$PT8AO core-prim . i/o-file-is-read-only-error?)
        (g$6862$PT8AO core-prim . i/o-file-does-not-exist-error?)
        (g$6848$PT8AO core-prim . i/o-file-already-exists-error?)
        (g$6744$PT8AO core-prim . i/o-error?)
        (g$6879$PT8AO core-prim . i/o-error-port)
        (g$6806$PT8AO core-prim . i/o-error-filename)
        (g$6909$PT8AO core-prim . i/o-encoding-error?)
        (g$6910$PT8AO core-prim . i/o-encoding-error-char)
        (g$6893$PT8AO core-prim . i/o-decoding-error?)
        (g$11620$PT8AO core-prim . get-u8)
        (g$11619$PT8AO core-prim . get-string-n!)
        (g$11618$PT8AO core-prim . get-string-n)
        (g$11617$PT8AO core-prim . get-string-all)
        (g$11616$PT8AO core-prim . get-line)
        (g$11615$PT8AO core-prim . get-datum)
        (g$11614$PT8AO core-prim . get-char)
        (g$11613$PT8AO core-prim . get-bytevector-some)
        (g$11612$PT8AO core-prim . get-bytevector-n!)
        (g$11611$PT8AO core-prim . get-bytevector-n)
        (g$11610$PT8AO core-prim . get-bytevector-all)
        (g$11609$PT8AO core-prim . flush-output-port)
        (g$11608$PT8AO core-prim . close-port)
        (g$11607$PT8AO core-prim . call-with-string-output-port)
        (g$11606$PT8AO core-prim . call-with-port)
        (g$11605$PT8AO core-prim . call-with-bytevector-output-port)
        (g$11604$PT8AO core-prim . bytevector->string)
        (g$11603$PT8AO core-prim . buffer-mode?)
        (g$11602$PT8AO core-prim . binary-port?)
        (g$8209$PT8AO core-prim . scheme-report-environment)
        (g$6510$PT8AO core-prim . quotient)
        (g$8208$PT8AO core-prim . null-environment)
        (g$6511$PT8AO core-prim . remainder)
        (g$6512$PT8AO core-prim . modulo)
        (g$11601$PT8AO core-prim . inexact->exact)
        (g$11600$PT8AO core-prim . force)
        (g$11599$PT8AO core-prim . exact->inexact)
        (g$11598$PT8AO core-prim . exit)
        (g$11597$PT8AO core-prim . command-line)
        (g$11596$PT8AO core-prim . string-fill!)
        (g$11595$PT8AO core-prim . string-set!)
        (g$11594$PT8AO core-prim . set-cdr!)
        (g$11593$PT8AO core-prim . set-car!)
        (g$6096$PT8AO core-prim . remove)
        (g$6097$PT8AO core-prim . remv)
        (g$6082$PT8AO core-prim . remp)
        (g$6098$PT8AO core-prim . remq)
        (g$6081$PT8AO core-prim . partition)
        (g$11592$PT8AO core-prim . memv)
        (g$11591$PT8AO core-prim . memq)
        (g$6088$PT8AO core-prim . memp)
        (g$6087$PT8AO core-prim . member)
        (g$6092$PT8AO core-prim . exists)
        (g$6091$PT8AO core-prim . for-all)
        (g$6095$PT8AO core-prim . fold-right)
        (g$6094$PT8AO core-prim . fold-left)
        (g$6080$PT8AO core-prim . find)
        (g$6083$PT8AO core-prim . filter)
        (g$6093$PT8AO core-prim . cons*)
        (g$6084$PT8AO core-prim . assv)
        (g$11590$PT8AO core-prim . assq)
        (g$6086$PT8AO core-prim . assp)
        (g$6085$PT8AO core-prim . assoc)
        (g$11589$PT8AO core-prim . with-exception-handler)
        (g$11588$PT8AO core-prim . raise-continuable)
        (g$11587$PT8AO core-prim . raise)
        (g$8211$PT8AO core-prim . eval)
        (g$8207$PT8AO core-prim . environment)
        (g$11586$PT8AO core-prim . make-enumeration)
        (g$11585$PT8AO core-prim . enum-set=?)
        (g$11584$PT8AO core-prim . enum-set-universe)
        (g$11583$PT8AO core-prim . enum-set-union)
        (g$11582$PT8AO core-prim . enum-set-subset?)
        (g$11581$PT8AO core-prim . enum-set-projection)
        (g$11580$PT8AO core-prim . enum-set-member?)
        (g$11579$PT8AO core-prim . enum-set-intersection)
        (g$11578$PT8AO core-prim . enum-set-indexer)
        (g$11577$PT8AO core-prim . enum-set-difference)
        (g$11576$PT8AO core-prim . enum-set-constructor)
        (g$11575$PT8AO core-prim . enum-set-complement)
        (g$11574$PT8AO core-prim . enum-set->list)
        (g$6421$PT8AO core-prim . who-condition?)
        (g$6332$PT8AO core-prim . warning?)
        (g$6374$PT8AO core-prim . violation?)
        (g$6498$PT8AO core-prim . undefined-violation?)
        (g$6482$PT8AO core-prim . syntax-violation?)
        (g$6484$PT8AO core-prim . syntax-violation-subform)
        (g$6483$PT8AO core-prim . syntax-violation-form)
        (g$8225$PT8AO core-prim . syntax-violation)
        (g$11573$PT8AO core-prim . simple-conditions)
        (g$6346$PT8AO core-prim . serious-condition?)
        (g$6436$PT8AO core-prim . non-continuable-violation?)
        (g$6317$PT8AO core-prim . message-condition?)
        (g$6419$PT8AO core-prim . make-who-condition)
        (g$6331$PT8AO core-prim . make-warning)
        (g$6373$PT8AO core-prim . make-violation)
        (g$6497$PT8AO core-prim . make-undefined-violation)
        (g$6479$PT8AO core-prim . make-syntax-violation)
        (g$6345$PT8AO core-prim . make-serious-condition)
        (g$6435$PT8AO core-prim . make-non-continuable-violation)
        (g$6315$PT8AO core-prim . make-message-condition)
        (g$6463$PT8AO core-prim . make-lexical-violation)
        (g$6402$PT8AO core-prim . make-irritants-condition)
        (g$6449$PT8AO core-prim . make-implementation-restriction-violation)
        (g$6359$PT8AO core-prim . make-error)
        (g$6387$PT8AO core-prim . make-assertion-violation)
        (g$6464$PT8AO core-prim . lexical-violation?)
        (g$6404$PT8AO core-prim . irritants-condition?)
        (g$6450$PT8AO core-prim . implementation-restriction-violation?)
        (g$6360$PT8AO core-prim . error?)
        (g$6422$PT8AO core-prim . condition-who)
        (g$11572$PT8AO core-prim . condition-predicate)
        (g$6318$PT8AO core-prim . condition-message)
        (g$6405$PT8AO core-prim . condition-irritants)
        (g$11571$PT8AO core-prim . condition-accessor)
        (g$11570$PT8AO core-prim . condition)
        (g$6388$PT8AO core-prim . assertion-violation?)
        (g$11569$PT8AO core-prim . condition?)
        (g$11568$PT8AO core-prim . utf32->string)
        (g$11567$PT8AO core-prim . utf16->string)
        (g$11566$PT8AO core-prim . utf8->string)
        (g$11565$PT8AO core-prim . uint-list->bytevector)
        (g$11564$PT8AO core-prim . u8-list->bytevector)
        (g$11563$PT8AO core-prim . string->utf8)
        (g$11562$PT8AO core-prim . string->utf32)
        (g$11561$PT8AO core-prim . string->utf16)
        (g$11560$PT8AO core-prim . sint-list->bytevector)
        (g$6172$PT8AO core-prim . native-endianness)
        (g$11559$PT8AO core-prim . bytevector?)
        (g$11558$PT8AO core-prim . bytevector=?)
        (g$11557$PT8AO core-prim . bytevector-uint-set!)
        (g$11556$PT8AO core-prim . bytevector-uint-ref)
        (g$11555$PT8AO core-prim . bytevector-u8-set!)
        (g$11554$PT8AO core-prim . bytevector-u8-ref)
        (g$6193$PT8AO core-prim . bytevector-u64-set!)
        (g$6189$PT8AO core-prim . bytevector-u64-ref)
        (g$6195$PT8AO core-prim . bytevector-u64-native-set!)
        (g$6191$PT8AO core-prim . bytevector-u64-native-ref)
        (g$6185$PT8AO core-prim . bytevector-u32-set!)
        (g$6181$PT8AO core-prim . bytevector-u32-ref)
        (g$6187$PT8AO core-prim . bytevector-u32-native-set!)
        (g$6183$PT8AO core-prim . bytevector-u32-native-ref)
        (g$6177$PT8AO core-prim . bytevector-u16-set!)
        (g$6173$PT8AO core-prim . bytevector-u16-ref)
        (g$6179$PT8AO core-prim . bytevector-u16-native-set!)
        (g$6175$PT8AO core-prim . bytevector-u16-native-ref)
        (g$11553$PT8AO core-prim . bytevector-sint-set!)
        (g$11552$PT8AO core-prim . bytevector-sint-ref)
        (g$11551$PT8AO core-prim . bytevector-s8-set!)
        (g$11550$PT8AO core-prim . bytevector-s8-ref)
        (g$6194$PT8AO core-prim . bytevector-s64-set!)
        (g$6190$PT8AO core-prim . bytevector-s64-ref)
        (g$6196$PT8AO core-prim . bytevector-s64-native-set!)
        (g$6192$PT8AO core-prim . bytevector-s64-native-ref)
        (g$6186$PT8AO core-prim . bytevector-s32-set!)
        (g$6182$PT8AO core-prim . bytevector-s32-ref)
        (g$6188$PT8AO core-prim . bytevector-s32-native-set!)
        (g$6184$PT8AO core-prim . bytevector-s32-native-ref)
        (g$6178$PT8AO core-prim . bytevector-s16-set!)
        (g$6174$PT8AO core-prim . bytevector-s16-ref)
        (g$6180$PT8AO core-prim . bytevector-s16-native-set!)
        (g$6176$PT8AO core-prim . bytevector-s16-native-ref)
        (g$11549$PT8AO core-prim . bytevector-length)
        (g$11548$PT8AO core-prim . bytevector-ieee-single-set!)
        (g$11547$PT8AO core-prim . bytevector-ieee-single-ref)
        (g$6199$PT8AO core-prim . bytevector-ieee-single-native-set!)
        (g$6197$PT8AO core-prim . bytevector-ieee-single-native-ref)
        (g$11546$PT8AO core-prim . bytevector-ieee-double-set!)
        (g$11545$PT8AO core-prim . bytevector-ieee-double-ref)
        (g$6200$PT8AO core-prim . bytevector-ieee-double-native-set!)
        (g$6198$PT8AO core-prim . bytevector-ieee-double-native-ref)
        (g$11544$PT8AO core-prim . bytevector-fill!)
        (g$11543$PT8AO core-prim . bytevector-copy!)
        (g$11542$PT8AO core-prim . bytevector-copy)
        (g$11541$PT8AO core-prim . bytevector->uint-list)
        (g$11540$PT8AO core-prim . bytevector->u8-list)
        (g$11539$PT8AO core-prim . bytevector->sint-list)
        (g$6729$PT8AO core-prim . no-nans-violation?)
        (g$6715$PT8AO core-prim . no-infinities-violation?)
        (g$6728$PT8AO core-prim . make-no-nans-violation)
        (g$6714$PT8AO core-prim . make-no-infinities-violation)
        (g$11538$PT8AO core-prim . real->flonum)
        (g$11537$PT8AO core-prim . flzero?)
        (g$11536$PT8AO core-prim . fltruncate)
        (g$11535$PT8AO core-prim . fltan)
        (g$11534$PT8AO core-prim . flsqrt)
        (g$11533$PT8AO core-prim . flsin)
        (g$11532$PT8AO core-prim . flround)
        (g$11531$PT8AO core-prim . flpositive?)
        (g$11530$PT8AO core-prim . flonum?)
        (g$11529$PT8AO core-prim . flodd?)
        (g$11528$PT8AO core-prim . flnumerator)
        (g$11527$PT8AO core-prim . flnegative?)
        (g$11526$PT8AO core-prim . flnan?)
        (g$11525$PT8AO core-prim . flmod0)
        (g$11524$PT8AO core-prim . flmod)
        (g$11523$PT8AO core-prim . flmin)
        (g$11522$PT8AO core-prim . flmax)
        (g$11521$PT8AO core-prim . fllog)
        (g$11520$PT8AO core-prim . flinteger?)
        (g$11519$PT8AO core-prim . flinfinite?)
        (g$11518$PT8AO core-prim . flfloor)
        (g$11517$PT8AO core-prim . flfinite?)
        (g$11516$PT8AO core-prim . flexpt)
        (g$11515$PT8AO core-prim . flexp)
        (g$11514$PT8AO core-prim . fleven?)
        (g$11513$PT8AO core-prim . fldiv0-and-mod0)
        (g$11512$PT8AO core-prim . fldiv0)
        (g$11511$PT8AO core-prim . fldiv-and-mod)
        (g$11510$PT8AO core-prim . fldiv)
        (g$11509$PT8AO core-prim . fldenominator)
        (g$11508$PT8AO core-prim . flcos)
        (g$11507$PT8AO core-prim . flceiling)
        (g$11506$PT8AO core-prim . flatan)
        (g$11505$PT8AO core-prim . flasin)
        (g$11504$PT8AO core-prim . flacos)
        (g$11503$PT8AO core-prim . flabs)
        (g$11502$PT8AO core-prim . fl>?)
        (g$11501$PT8AO core-prim . fl>=?)
        (g$11500$PT8AO core-prim . fl=?)
        (g$11499$PT8AO core-prim . fl<?)
        (g$11498$PT8AO core-prim . fl<=?)
        (g$11497$PT8AO core-prim . fl/)
        (g$11496$PT8AO core-prim . fl-)
        (g$11495$PT8AO core-prim . fl+)
        (g$11494$PT8AO core-prim . fl*)
        (g$11493$PT8AO core-prim . fixnum->flonum)
        (g$11492$PT8AO core-prim . fxzero?)
        (g$11491$PT8AO core-prim . fxxor)
        (g$6660$PT8AO core-prim . fxrotate-bit-field)
        (g$11490$PT8AO core-prim . fxreverse-bit-field)
        (g$11489$PT8AO core-prim . fxpositive?)
        (g$11488$PT8AO core-prim . fxodd?)
        (g$11487$PT8AO core-prim . fxnot)
        (g$11486$PT8AO core-prim . fxnegative?)
        (g$11485$PT8AO core-prim . fxmod0)
        (g$11484$PT8AO core-prim . fxmod)
        (g$11483$PT8AO core-prim . fxmin)
        (g$11482$PT8AO core-prim . fxmax)
        (g$11481$PT8AO core-prim . fxlength)
        (g$11480$PT8AO core-prim . fxior)
        (g$6654$PT8AO core-prim . fxif)
        (g$11479$PT8AO core-prim . fxfirst-bit-set)
        (g$11478$PT8AO core-prim . fxeven?)
        (g$11477$PT8AO core-prim . fxdiv0-and-mod0)
        (g$11476$PT8AO core-prim . fxdiv0)
        (g$11475$PT8AO core-prim . fxdiv-and-mod)
        (g$11474$PT8AO core-prim . fxdiv)
        (g$6657$PT8AO core-prim . fxcopy-bit-field)
        (g$6655$PT8AO core-prim . fxcopy-bit)
        (g$11473$PT8AO core-prim . fxbit-set?)
        (g$6656$PT8AO core-prim . fxbit-field)
        (g$11472$PT8AO core-prim . fxbit-count)
        (g$6659$PT8AO core-prim . fxarithmetic-shift-right)
        (g$6658$PT8AO core-prim . fxarithmetic-shift-left)
        (g$11471$PT8AO core-prim . fxarithmetic-shift)
        (g$11470$PT8AO core-prim . fxand)
        (g$11469$PT8AO core-prim . fx>?)
        (g$11468$PT8AO core-prim . fx>=?)
        (g$11467$PT8AO core-prim . fx=?)
        (g$11466$PT8AO core-prim . fx<?)
        (g$11465$PT8AO core-prim . fx<=?)
        (g$11464$PT8AO core-prim . fx-/carry)
        (g$11463$PT8AO core-prim . fx-)
        (g$11462$PT8AO core-prim . fx+/carry)
        (g$11461$PT8AO core-prim . fx+)
        (g$11460$PT8AO core-prim . fx*/carry)
        (g$11459$PT8AO core-prim . fx*)
        (g$11458$PT8AO core-prim . greatest-fixnum)
        (g$11457$PT8AO core-prim . least-fixnum)
        (g$11456$PT8AO core-prim . fixnum-width)
        (g$11455$PT8AO core-prim . fixnum?)
        (g$6608$PT8AO core-prim . bitwise-rotate-bit-field)
        (g$6609$PT8AO core-prim . bitwise-reverse-bit-field)
        (g$11454$PT8AO core-prim . bitwise-length)
        (g$6602$PT8AO core-prim . bitwise-if)
        (g$11453$PT8AO core-prim . bitwise-first-bit-set)
        (g$6605$PT8AO core-prim . bitwise-copy-bit-field)
        (g$6603$PT8AO core-prim . bitwise-copy-bit)
        (g$11452$PT8AO core-prim . bitwise-bit-set?)
        (g$11451$PT8AO core-prim . bitwise-bit-field)
        (g$11450$PT8AO core-prim . bitwise-bit-count)
        (g$11449$PT8AO core-prim . bitwise-xor)
        (g$11448$PT8AO core-prim . bitwise-ior)
        (g$11447$PT8AO core-prim . bitwise-and)
        (g$11446$PT8AO core-prim . bitwise-not)
        (g$6607$PT8AO core-prim . bitwise-arithmetic-shift-right)
        (g$6606$PT8AO core-prim . bitwise-arithmetic-shift-left)
        (g$11445$PT8AO core-prim . bitwise-arithmetic-shift)
        (g$11444$PT8AO core-prim . zero?)
        (g$11443$PT8AO core-prim . vector?)
        (g$11442$PT8AO core-prim . vector-set!)
        (g$11441$PT8AO core-prim . vector-ref)
        (g$11440$PT8AO core-prim . vector-map)
        (g$11439$PT8AO core-prim . vector-length)
        (g$11438$PT8AO core-prim . vector-for-each)
        (g$11437$PT8AO core-prim . vector-fill!)
        (g$11436$PT8AO core-prim . vector->list)
        (g$11435$PT8AO core-prim . vector)
        (g$11434$PT8AO core-prim . values)
        (g$11433$PT8AO core-prim . truncate)
        (g$11432$PT8AO core-prim . tan)
        (g$11431$PT8AO core-prim . symbol?)
        (g$11430$PT8AO core-prim . symbol=?)
        (g$11429$PT8AO core-prim . symbol->string)
        (g$11428$PT8AO core-prim . substring)
        (g$11427$PT8AO core-prim . string?)
        (g$11426$PT8AO core-prim . string>?)
        (g$11425$PT8AO core-prim . string>=?)
        (g$11424$PT8AO core-prim . string=?)
        (g$11423$PT8AO core-prim . string<?)
        (g$11422$PT8AO core-prim . string<=?)
        (g$11421$PT8AO core-prim . string-ref)
        (g$11420$PT8AO core-prim . string-length)
        (g$11419$PT8AO core-prim . string-for-each)
        (g$11418$PT8AO core-prim . string-copy)
        (g$11417$PT8AO core-prim . string-append)
        (g$11416$PT8AO core-prim . string->symbol)
        (g$11415$PT8AO core-prim . string->number)
        (g$11414$PT8AO core-prim . string->list)
        (g$11413$PT8AO core-prim . string)
        (g$11412$PT8AO core-prim . sqrt)
        (g$11411$PT8AO core-prim . sin)
        (g$11410$PT8AO core-prim . round)
        (g$11409$PT8AO core-prim . reverse)
        (g$11408$PT8AO core-prim . real?)
        (g$11407$PT8AO core-prim . real-valued?)
        (g$11406$PT8AO core-prim . real-part)
        (g$5633$PT8AO core-prim . rationalize)
        (g$11405$PT8AO core-prim . rational?)
        (g$11404$PT8AO core-prim . rational-valued?)
        (g$11403$PT8AO core-prim . procedure?)
        (g$11402$PT8AO core-prim . positive?)
        (g$11401$PT8AO core-prim . pair?)
        (g$11400$PT8AO core-prim . odd?)
        (g$11399$PT8AO core-prim . numerator)
        (g$11398$PT8AO core-prim . number?)
        (g$11397$PT8AO core-prim . number->string)
        (g$11396$PT8AO core-prim . null?)
        (g$11395$PT8AO core-prim . not)
        (g$11394$PT8AO core-prim . negative?)
        (g$11393$PT8AO core-prim . nan?)
        (g$11392$PT8AO core-prim . min)
        (g$11391$PT8AO core-prim . max)
        (g$11390$PT8AO core-prim . map)
        (g$11389$PT8AO core-prim . make-vector)
        (g$11388$PT8AO core-prim . make-string)
        (g$11387$PT8AO core-prim . make-rectangular)
        (g$11386$PT8AO core-prim . make-polar)
        (g$11385$PT8AO core-prim . magnitude)
        (g$11384$PT8AO core-prim . log)
        (g$11383$PT8AO core-prim . list?)
        (g$11382$PT8AO core-prim . list-tail)
        (g$11381$PT8AO core-prim . list-ref)
        (g$11380$PT8AO core-prim . list->vector)
        (g$11379$PT8AO core-prim . list->string)
        (g$11378$PT8AO core-prim . list)
        (g$11377$PT8AO core-prim . length)
        (g$11376$PT8AO core-prim . lcm)
        (g$11375$PT8AO core-prim . integer?)
        (g$11374$PT8AO core-prim . integer-valued?)
        (g$11373$PT8AO core-prim . integer->char)
        (g$11372$PT8AO core-prim . infinite?)
        (g$11371$PT8AO core-prim . inexact?)
        (g$11370$PT8AO core-prim . inexact)
        (g$11369$PT8AO core-prim . imag-part)
        (g$11368$PT8AO core-prim . gcd)
        (g$11367$PT8AO core-prim . for-each)
        (g$11366$PT8AO core-prim . floor)
        (g$11365$PT8AO core-prim . finite?)
        (g$11364$PT8AO core-prim . expt)
        (g$11363$PT8AO core-prim . exp)
        (g$11362$PT8AO core-prim . exact?)
        (g$11361$PT8AO core-prim . exact-integer-sqrt)
        (g$11360$PT8AO core-prim . exact)
        (g$11359$PT8AO core-prim . even?)
        (g$11358$PT8AO core-prim . error)
        (g$11357$PT8AO core-prim . eqv?)
        (g$11356$PT8AO core-prim . equal?)
        (g$11355$PT8AO core-prim . eq?)
        (g$11354$PT8AO core-prim . dynamic-wind)
        (g$11353$PT8AO core-prim . div0-and-mod0)
        (g$11352$PT8AO core-prim . mod0)
        (g$11351$PT8AO core-prim . div0)
        (g$11350$PT8AO core-prim . div-and-mod)
        (g$11349$PT8AO core-prim . mod)
        (g$11348$PT8AO core-prim . div)
        (g$11347$PT8AO core-prim . denominator)
        (g$11346$PT8AO core-prim . cos)
        (g$11345$PT8AO core-prim . cons)
        (g$11344$PT8AO core-prim . complex?)
        (g$11343$PT8AO core-prim . char?)
        (g$11342$PT8AO core-prim . char>?)
        (g$11341$PT8AO core-prim . char>=?)
        (g$11340$PT8AO core-prim . char=?)
        (g$11339$PT8AO core-prim . char<?)
        (g$11338$PT8AO core-prim . char<=?)
        (g$11337$PT8AO core-prim . char->integer)
        (g$11336$PT8AO core-prim . ceiling)
        (g$11335$PT8AO core-prim . call-with-values)
        (g$11334$PT8AO core-prim . call/cc)
        (g$11333$PT8AO core-prim . call-with-current-continuation)
        (g$5632$PT8AO core-prim . cddddr)
        (g$5631$PT8AO core-prim . cdddar)
        (g$5630$PT8AO core-prim . cddadr)
        (g$5629$PT8AO core-prim . cddaar)
        (g$5628$PT8AO core-prim . cdaddr)
        (g$5627$PT8AO core-prim . cdadar)
        (g$5626$PT8AO core-prim . cdaadr)
        (g$5625$PT8AO core-prim . cdaaar)
        (g$5624$PT8AO core-prim . cadddr)
        (g$5623$PT8AO core-prim . caddar)
        (g$5622$PT8AO core-prim . cadadr)
        (g$5621$PT8AO core-prim . cadaar)
        (g$5620$PT8AO core-prim . caaddr)
        (g$5619$PT8AO core-prim . caadar)
        (g$5618$PT8AO core-prim . caaadr)
        (g$5617$PT8AO core-prim . caaaar)
        (g$5616$PT8AO core-prim . cdddr)
        (g$5615$PT8AO core-prim . cddar)
        (g$5614$PT8AO core-prim . cdadr)
        (g$5613$PT8AO core-prim . cdaar)
        (g$5612$PT8AO core-prim . caddr)
        (g$5611$PT8AO core-prim . cadar)
        (g$5610$PT8AO core-prim . caadr)
        (g$5609$PT8AO core-prim . caaar)
        (g$5608$PT8AO core-prim . cddr)
        (g$5607$PT8AO core-prim . cdar)
        (g$5606$PT8AO core-prim . cadr)
        (g$5605$PT8AO core-prim . caar)
        (g$11332$PT8AO core-prim . cdr)
        (g$11331$PT8AO core-prim . car)
        (g$11330$PT8AO core-prim . boolean?)
        (g$11329$PT8AO core-prim . boolean=?)
        (g$11328$PT8AO core-prim . atan)
        (g$11327$PT8AO core-prim . assertion-violation)
        (g$11326$PT8AO core-prim . asin)
        (g$11325$PT8AO core-prim . apply)
        (g$11324$PT8AO core-prim . append)
        (g$11323$PT8AO core-prim . angle)
        (g$11322$PT8AO core-prim . acos)
        (g$11321$PT8AO core-prim . abs)
        (g$11320$PT8AO core-prim . /)
        (g$11319$PT8AO core-prim . *)
        (g$11318$PT8AO core-prim . -)
        (g$11317$PT8AO core-prim . +)
        (g$11316$PT8AO core-prim . >=)
        (g$11315$PT8AO core-prim . >)
        (g$11314$PT8AO core-prim . =)
        (g$11313$PT8AO core-prim . <=)
        (g$11312$PT8AO core-prim . <)
        (g$11311$PT8AO core-prim . make-record-printer)
        (g$11310$PT8AO core-prim . eqv-hash)
        (g$11309$PT8AO core-prim . eq-hash)
        (g$11308$PT8AO core-prim . reverse!)
        (g$6923$PT8AO core-prim . printf)
        (g$6924$PT8AO core-prim . fprintf)
        (g$6925$PT8AO core-prim . format)
        (g$11307$PT8AO core-prim . get-arity)
        (g$11306$PT8AO core-prim . gc-collect)
        (g$11305$PT8AO core-prim . clr-type?)
        (g$11304$PT8AO core-prim . get-clr-type)
        (g$11303$PT8AO core-prim . vector-append)
        (g$11302$PT8AO core-prim . vector-filter)
        (g$11301$PT8AO core-prim . vector-reverse!)
        (g$11300$PT8AO core-prim . vector-contains?)
        (g$11299$PT8AO core-prim . vector-index-of)
        (g$11298$PT8AO core-prim . vector-copy)
        (g$11297$PT8AO core-prim . vector-binary-search)
        (g$11296$PT8AO core-prim . get-output-string)
        (g$11295$PT8AO core-prim . open-output-string)
        (g$11294$PT8AO core-prim . open-input-string)
        (g$11293$PT8AO core-prim . string-format)
        (g$11158$PT8AO core-prim . trace-printer)
        (g$11292$PT8AO core-prim . make-traced-procedure)
        (g$6944$PT8AO core-prim . make-traced-macro)
        (g$11291$PT8AO core-prim . pmap)
        (g$11290$PT8AO core-prim . time-it)
        (g$6949$PT8AO core-prim . make-parameter)
        (g$11289$PT8AO core-prim . library-locator)
        (g$11288$PT8AO core-prim . get-library-paths)
        (g$8205$PT8AO core-prim . environment-symbols)
        (g$8204$PT8AO core-prim . interaction-environment-symbols)
        (g$7374$PT8AO core-prim . library-path)
        (g$7375$PT8AO core-prim . library-extensions)
        (g$7395$PT8AO core-prim . installed-libraries)
        (g$8210$PT8AO core-prim . expand)
        (g$11287$PT8AO $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11286$PT8AO $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11285$PT8AO $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11284$PT8AO $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11283$PT8AO $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11282$PT8AO
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11281$PT8AO
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11280$PT8AO
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11279$PT8AO
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11278$PT8AO $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11277$PT8AO
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11276$PT8AO $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11275$PT8AO $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11274$PT8AO $core-rtd &i/o-rtd &i/o-rcd)
        (g$11273$PT8AO $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11272$PT8AO $core-rtd &undefined-rtd &undefined-rcd)
        (g$11271$PT8AO $core-rtd &syntax-rtd &syntax-rcd)
        (g$11270$PT8AO $core-rtd &lexical-rtd &lexical-rcd)
        (g$11269$PT8AO
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11268$PT8AO $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11267$PT8AO $core-rtd &who-rtd &who-rcd)
        (g$11266$PT8AO $core-rtd &irritants-rtd &irritants-rcd)
        (g$11265$PT8AO $core-rtd &assertion-rtd &assertion-rcd)
        (g$11264$PT8AO $core-rtd &violation-rtd &violation-rcd)
        (g$11263$PT8AO $core-rtd &error-rtd &error-rcd)
        (g$11262$PT8AO $core-rtd &serious-rtd &serious-rcd)
        (g$11261$PT8AO $core-rtd &warning-rtd &warning-rcd)
        (g$11260$PT8AO $core-rtd &message-rtd &message-rcd)
        (g$11259$PT8AO $core-rtd &condition-rtd &condition-rcd)
        (g$11258$PT8AO macro . define-condition-type)
        (g$11257$PT8AO macro . define-enumeration)
        (g$11256$PT8AO macro . define-record-type)
        (g$11255$PT8AO macro . parent-rtd)
        (g$11254$PT8AO macro . nongenerative)
        (g$11253$PT8AO macro . opaque)
        (g$11252$PT8AO macro . sealed)
        (g$11251$PT8AO macro . protocol)
        (g$11250$PT8AO macro . parent)
        (g$11249$PT8AO macro . immutable)
        (g$11248$PT8AO macro . mutable)
        (g$11247$PT8AO macro . fields)
        (g$11246$PT8AO macro . error-handling-mode)
        (g$11245$PT8AO macro . file-options)
        (g$11244$PT8AO macro . buffer-mode)
        (g$11243$PT8AO macro . eol-style)
        (g$11242$PT8AO macro . guard)
        (g$11241$PT8AO macro . trace-letrec-syntax)
        (g$11240$PT8AO macro . trace-let-syntax)
        (g$11239$PT8AO macro . trace-define-syntax)
        (g$11238$PT8AO macro . trace-define)
        (g$11237$PT8AO macro . trace-lambda)
        (g$11236$PT8AO macro . unsyntax-splicing)
        (g$11235$PT8AO macro . unsyntax)
        (g$11234$PT8AO macro . unquote-splicing)
        (g$11233$PT8AO macro . unquote)
        (g$11232$PT8AO macro . _)
        (g$11231$PT8AO macro . else)
        (g$11230$PT8AO macro . =>)
        (g$11229$PT8AO macro . ...)
        (g$11228$PT8AO macro . assert)
        (g$11227$PT8AO macro . endianness)
        (g$11226$PT8AO macro . delay)
        (g$11225$PT8AO macro . time)
        (g$11224$PT8AO macro . or)
        (g$11223$PT8AO macro . and)
        (g$11222$PT8AO macro . do)
        (g$11221$PT8AO macro . cond)
        (g$11220$PT8AO macro . let*)
        (g$11219$PT8AO macro . let)
        (g$11218$PT8AO macro . identifier-syntax)
        (g$11217$PT8AO macro . with-syntax)
        (g$11216$PT8AO macro . quasisyntax)
        (g$11215$PT8AO macro . quasiquote)
        (g$11214$PT8AO macro . syntax-rules)
        (g$11213$PT8AO macro . include-into)
        (g$11212$PT8AO macro . include)
        (g$11211$PT8AO macro . define-struct)
        (g$11210$PT8AO macro . let-values)
        (g$11209$PT8AO macro . let*-values)
        (g$11208$PT8AO core-macro . record-constructor-descriptor)
        (g$11207$PT8AO core-macro . record-type-descriptor)
        (g$11206$PT8AO core-macro . fluid-let-syntax)
        (g$11205$PT8AO core-macro . case)
        (g$11204$PT8AO core-macro . parameterize)
        (g$11203$PT8AO core-macro . unless)
        (g$11202$PT8AO core-macro . when)
        (g$11201$PT8AO core-macro . if)
        (g$11200$PT8AO core-macro . letrec*)
        (g$11199$PT8AO core-macro . letrec)
        (g$11198$PT8AO core-macro . type-descriptor)
        (g$11197$PT8AO core-macro . case-lambda)
        (g$11196$PT8AO core-macro . lambda)
        (g$11195$PT8AO core-macro . syntax)
        (g$11194$PT8AO core-macro . syntax-case)
        (g$11193$PT8AO core-macro . quote)
        (g$11192$PT8AO core-macro . foreign-call)
        (g$11191$PT8AO letrec-syntax)
        (g$11190$PT8AO let-syntax)
        (g$11189$PT8AO set!)
        (g$11188$PT8AO import)
        (g$11187$PT8AO library)
        (g$11186$PT8AO begin)
        (g$11185$PT8AO module)
        (g$11184$PT8AO define-syntax)
        (g$11183$PT8AO define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6750$PT8AO
      'g$11876$PT8AO
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$11755$PT8AO)
        (eval-core . g$11754$PT8AO)
        (set-symbol-value! . g$11753$PT8AO)
        (symbol-value . g$11752$PT8AO)
        (gensym . g$11750$PT8AO)
        (void . g$11749$PT8AO))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$10779$PT8AO
     g$trace-printer$10806$PT8AO
     (g$make-parameter$6205$PT8AO write))
   (g$local-library-path$10780$PT8AO
     g$local-library-path$10807$PT8AO
     (case-lambda
       ((g$filename$10789$PT8AO)
        (cons
          (g$get-directory-name$5251$PT8AO g$filename$10789$PT8AO)
          (g$library-path$6734$PT8AO)))))
   (g$load$10781$PT8AO
     g$load$10808$PT8AO
     (case-lambda
       ((g$filename$10790$PT8AO)
        (begin
          (g$load-r6rs-top-level$10787$PT8AO g$filename$10790$PT8AO 'load)
          (void)))))
   (g$ironscheme-build$10782$PT8AO
     g$ironscheme-build$10809$PT8AO
     (case-lambda (() (g$load$10781$PT8AO '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$10783$PT8AO
     g$eval-top-level$10810$PT8AO
     (case-lambda
       ((g$x$10791$PT8AO)
        (g$eval$10757$PT8AO
          g$x$10791$PT8AO
          (g$interaction-environment$10777$PT8AO)))))
   (g$compile-system-libraries$10784$PT8AO
     g$compile-system-libraries$10811$PT8AO
     (case-lambda
       (()
        (g$eval-top-level$10783$PT8AO
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$10785$PT8AO
     g$compile$10812$PT8AO
     (case-lambda
       ((g$filename$10792$PT8AO)
        (g$load-r6rs-top-level$10787$PT8AO g$filename$10792$PT8AO 'compile))))
   (g$compile->closure$10786$PT8AO
     g$compile->closure$10813$PT8AO
     (case-lambda
       ((g$filename$10793$PT8AO)
        (g$load-r6rs-top-level$10787$PT8AO g$filename$10793$PT8AO 'closure))))
   (g$load-r6rs-top-level$10787$PT8AO
     g$load-r6rs-top-level$10814$PT8AO
     (case-lambda
       ((g$filename$10794$PT8AO g$how$10795$PT8AO)
        ((case-lambda
           ((g$library-path$10798$PT8AO g$library-path$10799$PT8AO)
            ((case-lambda
               ((g$swap$10800$PT8AO)
                (dynamic-wind
                  g$swap$10800$PT8AO
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$10801$PT8AO)
                         ((case-lambda
                            ((g$t$10802$PT8AO)
                             (if (eqv? g$t$10802$PT8AO 'closure)
                               (g$pre-compile-r6rs-top-level$10776$PT8AO
                                 g$x*$10801$PT8AO)
                               (if (eqv? g$t$10802$PT8AO 'load)
                                 ((g$compile-r6rs-top-level$10775$PT8AO
                                    g$x*$10801$PT8AO))
                                 (if (eqv? g$t$10802$PT8AO 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$10775$PT8AO
                                       g$x*$10801$PT8AO)
                                     (g$serialize-all$6738$PT8AO
                                       serialize-library
                                       g$compile-core-expr$6452$PT8AO))
                                   (void))))))
                          g$how$10795$PT8AO)))
                      (with-input-from-file
                        g$filename$10794$PT8AO
                        (case-lambda
                          (()
                           ((letrec ((g$f$10803$PT8AO
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$10804$PT8AO)
                                              (if (eof-object? g$x$10804$PT8AO)
                                                '()
                                                (cons
                                                  g$x$10804$PT8AO
                                                  (g$f$10803$PT8AO)))))
                                           (read-annotated))))))
                              g$f$10803$PT8AO))))))))
                  g$swap$10800$PT8AO)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$10805$PT8AO)
                    (begin
                      (g$library-path$10798$PT8AO g$library-path$10799$PT8AO)
                      (set! g$library-path$10799$PT8AO g$t$10805$PT8AO))))
                 (g$library-path$10798$PT8AO)))))))
         g$library-path$6734$PT8AO
         (g$local-library-path$10780$PT8AO g$filename$10794$PT8AO))))))
  (begin
    (g$current-precompiled-library-loader$6739$PT8AO
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$10788$PT8AO)
         (if (g$serious-condition?$5634$PT8AO g$ex$10788$PT8AO)
           (raise g$ex$10788$PT8AO)
           (begin (display g$ex$10788$PT8AO) (newline))))))
    (set-symbol-value! 'load g$load$10781$PT8AO)
    (set-symbol-value! 'compile g$compile$10785$PT8AO)
    (set-symbol-value! 'compile->closure g$compile->closure$10786$PT8AO)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$10783$PT8AO)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$10750$PT8AO)
    (set-symbol-value! 'expanded2core g$expanded->core$6451$PT8AO)
    (set-symbol-value! 'trace-printer g$trace-printer$10779$PT8AO)
    (g$library-path$6734$PT8AO (get-library-paths))))

