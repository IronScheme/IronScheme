;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$4828$1l2agK
     g$caar$5021$1l2agK
     (case-lambda ((g$x$4883$1l2agK) (car (car g$x$4883$1l2agK)))))
   (g$cadr$4829$1l2agK
     g$cadr$5022$1l2agK
     (case-lambda ((g$x$4884$1l2agK) (car (cdr g$x$4884$1l2agK)))))
   (g$cdar$4830$1l2agK
     g$cdar$5023$1l2agK
     (case-lambda ((g$x$4885$1l2agK) (cdr (car g$x$4885$1l2agK)))))
   (g$cddr$4831$1l2agK
     g$cddr$5024$1l2agK
     (case-lambda ((g$x$4886$1l2agK) (cdr (cdr g$x$4886$1l2agK)))))
   (g$caaar$4832$1l2agK
     g$caaar$5025$1l2agK
     (case-lambda
       ((g$x$4887$1l2agK) (g$caar$4828$1l2agK (car g$x$4887$1l2agK)))))
   (g$caadr$4833$1l2agK
     g$caadr$5026$1l2agK
     (case-lambda
       ((g$x$4888$1l2agK) (g$caar$4828$1l2agK (cdr g$x$4888$1l2agK)))))
   (g$cadar$4834$1l2agK
     g$cadar$5027$1l2agK
     (case-lambda
       ((g$x$4889$1l2agK) (g$cadr$4829$1l2agK (car g$x$4889$1l2agK)))))
   (g$caddr$4835$1l2agK
     g$caddr$5028$1l2agK
     (case-lambda
       ((g$x$4890$1l2agK) (g$cadr$4829$1l2agK (cdr g$x$4890$1l2agK)))))
   (g$cdaar$4836$1l2agK
     g$cdaar$5029$1l2agK
     (case-lambda
       ((g$x$4891$1l2agK) (g$cdar$4830$1l2agK (car g$x$4891$1l2agK)))))
   (g$cdadr$4837$1l2agK
     g$cdadr$5030$1l2agK
     (case-lambda
       ((g$x$4892$1l2agK) (g$cdar$4830$1l2agK (cdr g$x$4892$1l2agK)))))
   (g$cddar$4838$1l2agK
     g$cddar$5031$1l2agK
     (case-lambda
       ((g$x$4893$1l2agK) (g$cddr$4831$1l2agK (car g$x$4893$1l2agK)))))
   (g$cdddr$4839$1l2agK
     g$cdddr$5032$1l2agK
     (case-lambda
       ((g$x$4894$1l2agK) (g$cddr$4831$1l2agK (cdr g$x$4894$1l2agK)))))
   (g$caaaar$4840$1l2agK
     g$caaaar$5033$1l2agK
     (case-lambda
       ((g$x$4895$1l2agK) (g$caaar$4832$1l2agK (car g$x$4895$1l2agK)))))
   (g$caaadr$4841$1l2agK
     g$caaadr$5034$1l2agK
     (case-lambda
       ((g$x$4896$1l2agK) (g$caaar$4832$1l2agK (cdr g$x$4896$1l2agK)))))
   (g$caadar$4842$1l2agK
     g$caadar$5035$1l2agK
     (case-lambda
       ((g$x$4897$1l2agK) (g$caadr$4833$1l2agK (car g$x$4897$1l2agK)))))
   (g$caaddr$4843$1l2agK
     g$caaddr$5036$1l2agK
     (case-lambda
       ((g$x$4898$1l2agK) (g$caadr$4833$1l2agK (cdr g$x$4898$1l2agK)))))
   (g$cadaar$4844$1l2agK
     g$cadaar$5037$1l2agK
     (case-lambda
       ((g$x$4899$1l2agK) (g$cadar$4834$1l2agK (car g$x$4899$1l2agK)))))
   (g$cadadr$4845$1l2agK
     g$cadadr$5038$1l2agK
     (case-lambda
       ((g$x$4900$1l2agK) (g$cadar$4834$1l2agK (cdr g$x$4900$1l2agK)))))
   (g$caddar$4846$1l2agK
     g$caddar$5039$1l2agK
     (case-lambda
       ((g$x$4901$1l2agK) (g$caddr$4835$1l2agK (car g$x$4901$1l2agK)))))
   (g$cadddr$4847$1l2agK
     g$cadddr$5040$1l2agK
     (case-lambda
       ((g$x$4902$1l2agK) (g$caddr$4835$1l2agK (cdr g$x$4902$1l2agK)))))
   (g$cdaaar$4848$1l2agK
     g$cdaaar$5041$1l2agK
     (case-lambda
       ((g$x$4903$1l2agK) (g$cdaar$4836$1l2agK (car g$x$4903$1l2agK)))))
   (g$cdaadr$4849$1l2agK
     g$cdaadr$5042$1l2agK
     (case-lambda
       ((g$x$4904$1l2agK) (g$cdaar$4836$1l2agK (cdr g$x$4904$1l2agK)))))
   (g$cdadar$4850$1l2agK
     g$cdadar$5043$1l2agK
     (case-lambda
       ((g$x$4905$1l2agK) (g$cdadr$4837$1l2agK (car g$x$4905$1l2agK)))))
   (g$cdaddr$4851$1l2agK
     g$cdaddr$5044$1l2agK
     (case-lambda
       ((g$x$4906$1l2agK) (g$cdadr$4837$1l2agK (cdr g$x$4906$1l2agK)))))
   (g$cddaar$4852$1l2agK
     g$cddaar$5045$1l2agK
     (case-lambda
       ((g$x$4907$1l2agK) (g$cddar$4838$1l2agK (car g$x$4907$1l2agK)))))
   (g$cddadr$4853$1l2agK
     g$cddadr$5046$1l2agK
     (case-lambda
       ((g$x$4908$1l2agK) (g$cddar$4838$1l2agK (cdr g$x$4908$1l2agK)))))
   (g$cdddar$4854$1l2agK
     g$cdddar$5047$1l2agK
     (case-lambda
       ((g$x$4909$1l2agK) (g$cdddr$4839$1l2agK (car g$x$4909$1l2agK)))))
   (g$cddddr$4855$1l2agK
     g$cddddr$5048$1l2agK
     (case-lambda
       ((g$x$4910$1l2agK) (g$cdddr$4839$1l2agK (cdr g$x$4910$1l2agK)))))
   (g$string=?$4862$1l2agK
     g$string=?$5049$1l2agK
     (case-lambda
       ((g$a$4911$1l2agK g$b$4912$1l2agK . g$rest$4913$1l2agK)
        (begin
          (if (not (string? g$a$4911$1l2agK))
            (assertion-violation 'string=? '"not a string" g$a$4911$1l2agK)
            (void))
          (if (not (string? g$b$4912$1l2agK))
            (assertion-violation 'string=? '"not a string" g$b$4912$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$4914$1l2agK)
               (if (not (string? g$x$4914$1l2agK))
                 (assertion-violation 'string=? '"not a string" g$x$4914$1l2agK)
                 (void))))
            g$rest$4913$1l2agK)
          ((letrec ((g$f$4915$1l2agK
                      (case-lambda
                        ((g$a$4916$1l2agK g$b$4917$1l2agK g$rest$4918$1l2agK)
                         (if (null? g$rest$4918$1l2agK)
                           (= (string-compare g$a$4916$1l2agK g$b$4917$1l2agK)
                              '0)
                           (if (= (string-compare
                                    g$a$4916$1l2agK
                                    g$b$4917$1l2agK)
                                  '0)
                             (begin
                               '#f
                               (g$f$4915$1l2agK
                                 g$b$4917$1l2agK
                                 (car g$rest$4918$1l2agK)
                                 (cdr g$rest$4918$1l2agK)))
                             '#f))))))
             g$f$4915$1l2agK)
           g$a$4911$1l2agK
           g$b$4912$1l2agK
           g$rest$4913$1l2agK)))))
   (g$string<?$4863$1l2agK
     g$string<?$5050$1l2agK
     (case-lambda
       ((g$a$4919$1l2agK g$b$4920$1l2agK . g$rest$4921$1l2agK)
        (begin
          (if (not (string? g$a$4919$1l2agK))
            (assertion-violation 'string<? '"not a string" g$a$4919$1l2agK)
            (void))
          (if (not (string? g$b$4920$1l2agK))
            (assertion-violation 'string<? '"not a string" g$b$4920$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$4922$1l2agK)
               (if (not (string? g$x$4922$1l2agK))
                 (assertion-violation 'string<? '"not a string" g$x$4922$1l2agK)
                 (void))))
            g$rest$4921$1l2agK)
          ((letrec ((g$f$4923$1l2agK
                      (case-lambda
                        ((g$a$4924$1l2agK g$b$4925$1l2agK g$rest$4926$1l2agK)
                         (if (null? g$rest$4926$1l2agK)
                           (< (string-compare g$a$4924$1l2agK g$b$4925$1l2agK)
                              '0)
                           (if (< (string-compare
                                    g$a$4924$1l2agK
                                    g$b$4925$1l2agK)
                                  '0)
                             (begin
                               '#f
                               (g$f$4923$1l2agK
                                 g$b$4925$1l2agK
                                 (car g$rest$4926$1l2agK)
                                 (cdr g$rest$4926$1l2agK)))
                             '#f))))))
             g$f$4923$1l2agK)
           g$a$4919$1l2agK
           g$b$4920$1l2agK
           g$rest$4921$1l2agK)))))
   (g$string>?$4864$1l2agK
     g$string>?$5051$1l2agK
     (case-lambda
       ((g$a$4927$1l2agK g$b$4928$1l2agK . g$rest$4929$1l2agK)
        (begin
          (if (not (string? g$a$4927$1l2agK))
            (assertion-violation 'string>? '"not a string" g$a$4927$1l2agK)
            (void))
          (if (not (string? g$b$4928$1l2agK))
            (assertion-violation 'string>? '"not a string" g$b$4928$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$4930$1l2agK)
               (if (not (string? g$x$4930$1l2agK))
                 (assertion-violation 'string>? '"not a string" g$x$4930$1l2agK)
                 (void))))
            g$rest$4929$1l2agK)
          ((letrec ((g$f$4931$1l2agK
                      (case-lambda
                        ((g$a$4932$1l2agK g$b$4933$1l2agK g$rest$4934$1l2agK)
                         (if (null? g$rest$4934$1l2agK)
                           (> (string-compare g$a$4932$1l2agK g$b$4933$1l2agK)
                              '0)
                           (if (> (string-compare
                                    g$a$4932$1l2agK
                                    g$b$4933$1l2agK)
                                  '0)
                             (begin
                               '#f
                               (g$f$4931$1l2agK
                                 g$b$4933$1l2agK
                                 (car g$rest$4934$1l2agK)
                                 (cdr g$rest$4934$1l2agK)))
                             '#f))))))
             g$f$4931$1l2agK)
           g$a$4927$1l2agK
           g$b$4928$1l2agK
           g$rest$4929$1l2agK)))))
   (g$string<=?$4865$1l2agK
     g$string<=?$5052$1l2agK
     (case-lambda
       ((g$a$4935$1l2agK g$b$4936$1l2agK . g$rest$4937$1l2agK)
        (begin
          (if (not (string? g$a$4935$1l2agK))
            (assertion-violation 'string<=? '"not a string" g$a$4935$1l2agK)
            (void))
          (if (not (string? g$b$4936$1l2agK))
            (assertion-violation 'string<=? '"not a string" g$b$4936$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$4938$1l2agK)
               (if (not (string? g$x$4938$1l2agK))
                 (assertion-violation
                   'string<=?
                   '"not a string"
                   g$x$4938$1l2agK)
                 (void))))
            g$rest$4937$1l2agK)
          ((letrec ((g$f$4939$1l2agK
                      (case-lambda
                        ((g$a$4940$1l2agK g$b$4941$1l2agK g$rest$4942$1l2agK)
                         (if (null? g$rest$4942$1l2agK)
                           (<= (string-compare g$a$4940$1l2agK g$b$4941$1l2agK)
                               '0)
                           (if (<= (string-compare
                                     g$a$4940$1l2agK
                                     g$b$4941$1l2agK)
                                   '0)
                             (begin
                               '#f
                               (g$f$4939$1l2agK
                                 g$b$4941$1l2agK
                                 (car g$rest$4942$1l2agK)
                                 (cdr g$rest$4942$1l2agK)))
                             '#f))))))
             g$f$4939$1l2agK)
           g$a$4935$1l2agK
           g$b$4936$1l2agK
           g$rest$4937$1l2agK)))))
   (g$string>=?$4866$1l2agK
     g$string>=?$5053$1l2agK
     (case-lambda
       ((g$a$4943$1l2agK g$b$4944$1l2agK . g$rest$4945$1l2agK)
        (begin
          (if (not (string? g$a$4943$1l2agK))
            (assertion-violation 'string>=? '"not a string" g$a$4943$1l2agK)
            (void))
          (if (not (string? g$b$4944$1l2agK))
            (assertion-violation 'string>=? '"not a string" g$b$4944$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$4946$1l2agK)
               (if (not (string? g$x$4946$1l2agK))
                 (assertion-violation
                   'string>=?
                   '"not a string"
                   g$x$4946$1l2agK)
                 (void))))
            g$rest$4945$1l2agK)
          ((letrec ((g$f$4947$1l2agK
                      (case-lambda
                        ((g$a$4948$1l2agK g$b$4949$1l2agK g$rest$4950$1l2agK)
                         (if (null? g$rest$4950$1l2agK)
                           (>= (string-compare g$a$4948$1l2agK g$b$4949$1l2agK)
                               '0)
                           (if (>= (string-compare
                                     g$a$4948$1l2agK
                                     g$b$4949$1l2agK)
                                   '0)
                             (begin
                               '#f
                               (g$f$4947$1l2agK
                                 g$b$4949$1l2agK
                                 (car g$rest$4950$1l2agK)
                                 (cdr g$rest$4950$1l2agK)))
                             '#f))))))
             g$f$4947$1l2agK)
           g$a$4943$1l2agK
           g$b$4944$1l2agK
           g$rest$4945$1l2agK)))))
   (g$symbol=?$4867$1l2agK
     g$symbol=?$5054$1l2agK
     (case-lambda
       ((g$a$4951$1l2agK g$b$4952$1l2agK . g$rest$4953$1l2agK)
        (begin
          (if (not (symbol? g$a$4951$1l2agK))
            (assertion-violation 'symbol=? '"not a symbol" g$a$4951$1l2agK)
            (void))
          (if (not (symbol? g$b$4952$1l2agK))
            (assertion-violation 'symbol=? '"not a symbol" g$b$4952$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$4954$1l2agK)
               (if (not (symbol? g$x$4954$1l2agK))
                 (assertion-violation 'symbol=? '"not a symbol" g$x$4954$1l2agK)
                 (void))))
            g$rest$4953$1l2agK)
          ((letrec ((g$f$4955$1l2agK
                      (case-lambda
                        ((g$a$4956$1l2agK g$b$4957$1l2agK g$rest$4958$1l2agK)
                         (if (null? g$rest$4958$1l2agK)
                           (eq? g$a$4956$1l2agK g$b$4957$1l2agK)
                           (if (eq? g$a$4956$1l2agK g$b$4957$1l2agK)
                             (begin
                               '#f
                               (g$f$4955$1l2agK
                                 g$b$4957$1l2agK
                                 (car g$rest$4958$1l2agK)
                                 (cdr g$rest$4958$1l2agK)))
                             '#f))))))
             g$f$4955$1l2agK)
           g$a$4951$1l2agK
           g$b$4952$1l2agK
           g$rest$4953$1l2agK)))))
   (g$boolean=?$4868$1l2agK
     g$boolean=?$5055$1l2agK
     (case-lambda
       ((g$a$4959$1l2agK g$b$4960$1l2agK . g$rest$4961$1l2agK)
        (begin
          (if (not (boolean? g$a$4959$1l2agK))
            (assertion-violation 'boolean=? '"not a boolean" g$a$4959$1l2agK)
            (void))
          (if (not (boolean? g$b$4960$1l2agK))
            (assertion-violation 'boolean=? '"not a boolean" g$b$4960$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$4962$1l2agK)
               (if (not (boolean? g$x$4962$1l2agK))
                 (assertion-violation
                   'boolean=?
                   '"not a boolean"
                   g$x$4962$1l2agK)
                 (void))))
            g$rest$4961$1l2agK)
          ((letrec ((g$f$4963$1l2agK
                      (case-lambda
                        ((g$a$4964$1l2agK g$b$4965$1l2agK g$rest$4966$1l2agK)
                         (if (null? g$rest$4966$1l2agK)
                           (eq? g$a$4964$1l2agK g$b$4965$1l2agK)
                           (if (eq? g$a$4964$1l2agK g$b$4965$1l2agK)
                             (begin
                               '#f
                               (g$f$4963$1l2agK
                                 g$b$4965$1l2agK
                                 (car g$rest$4966$1l2agK)
                                 (cdr g$rest$4966$1l2agK)))
                             '#f))))))
             g$f$4963$1l2agK)
           g$a$4959$1l2agK
           g$b$4960$1l2agK
           g$rest$4961$1l2agK)))))
   (g$char=?$4875$1l2agK
     g$char=?$5056$1l2agK
     (case-lambda
       ((g$a$4967$1l2agK g$b$4968$1l2agK . g$rest$4969$1l2agK)
        (begin
          (if (not (char? g$a$4967$1l2agK))
            (assertion-violation 'char=? '"not a char" g$a$4967$1l2agK)
            (void))
          (if (not (char? g$b$4968$1l2agK))
            (assertion-violation 'char=? '"not a char" g$b$4968$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$4970$1l2agK)
               (if (not (char? g$x$4970$1l2agK))
                 (assertion-violation 'char=? '"not a char" g$x$4970$1l2agK)
                 (void))))
            g$rest$4969$1l2agK)
          ((letrec ((g$f$4971$1l2agK
                      (case-lambda
                        ((g$a$4972$1l2agK g$b$4973$1l2agK g$rest$4974$1l2agK)
                         (if (null? g$rest$4974$1l2agK)
                           (= (char->integer g$a$4972$1l2agK)
                              (char->integer g$b$4973$1l2agK))
                           (if (= (char->integer g$a$4972$1l2agK)
                                  (char->integer g$b$4973$1l2agK))
                             (begin
                               '#f
                               (g$f$4971$1l2agK
                                 g$b$4973$1l2agK
                                 (car g$rest$4974$1l2agK)
                                 (cdr g$rest$4974$1l2agK)))
                             '#f))))))
             g$f$4971$1l2agK)
           g$a$4967$1l2agK
           g$b$4968$1l2agK
           g$rest$4969$1l2agK)))))
   (g$char<?$4876$1l2agK
     g$char<?$5057$1l2agK
     (case-lambda
       ((g$a$4975$1l2agK g$b$4976$1l2agK . g$rest$4977$1l2agK)
        (begin
          (if (not (char? g$a$4975$1l2agK))
            (assertion-violation 'char<? '"not a char" g$a$4975$1l2agK)
            (void))
          (if (not (char? g$b$4976$1l2agK))
            (assertion-violation 'char<? '"not a char" g$b$4976$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$4978$1l2agK)
               (if (not (char? g$x$4978$1l2agK))
                 (assertion-violation 'char<? '"not a char" g$x$4978$1l2agK)
                 (void))))
            g$rest$4977$1l2agK)
          ((letrec ((g$f$4979$1l2agK
                      (case-lambda
                        ((g$a$4980$1l2agK g$b$4981$1l2agK g$rest$4982$1l2agK)
                         (if (null? g$rest$4982$1l2agK)
                           (< (char->integer g$a$4980$1l2agK)
                              (char->integer g$b$4981$1l2agK))
                           (if (< (char->integer g$a$4980$1l2agK)
                                  (char->integer g$b$4981$1l2agK))
                             (begin
                               '#f
                               (g$f$4979$1l2agK
                                 g$b$4981$1l2agK
                                 (car g$rest$4982$1l2agK)
                                 (cdr g$rest$4982$1l2agK)))
                             '#f))))))
             g$f$4979$1l2agK)
           g$a$4975$1l2agK
           g$b$4976$1l2agK
           g$rest$4977$1l2agK)))))
   (g$char>?$4877$1l2agK
     g$char>?$5058$1l2agK
     (case-lambda
       ((g$a$4983$1l2agK g$b$4984$1l2agK . g$rest$4985$1l2agK)
        (begin
          (if (not (char? g$a$4983$1l2agK))
            (assertion-violation 'char>? '"not a char" g$a$4983$1l2agK)
            (void))
          (if (not (char? g$b$4984$1l2agK))
            (assertion-violation 'char>? '"not a char" g$b$4984$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$4986$1l2agK)
               (if (not (char? g$x$4986$1l2agK))
                 (assertion-violation 'char>? '"not a char" g$x$4986$1l2agK)
                 (void))))
            g$rest$4985$1l2agK)
          ((letrec ((g$f$4987$1l2agK
                      (case-lambda
                        ((g$a$4988$1l2agK g$b$4989$1l2agK g$rest$4990$1l2agK)
                         (if (null? g$rest$4990$1l2agK)
                           (> (char->integer g$a$4988$1l2agK)
                              (char->integer g$b$4989$1l2agK))
                           (if (> (char->integer g$a$4988$1l2agK)
                                  (char->integer g$b$4989$1l2agK))
                             (begin
                               '#f
                               (g$f$4987$1l2agK
                                 g$b$4989$1l2agK
                                 (car g$rest$4990$1l2agK)
                                 (cdr g$rest$4990$1l2agK)))
                             '#f))))))
             g$f$4987$1l2agK)
           g$a$4983$1l2agK
           g$b$4984$1l2agK
           g$rest$4985$1l2agK)))))
   (g$char<=?$4878$1l2agK
     g$char<=?$5059$1l2agK
     (case-lambda
       ((g$a$4991$1l2agK g$b$4992$1l2agK . g$rest$4993$1l2agK)
        (begin
          (if (not (char? g$a$4991$1l2agK))
            (assertion-violation 'char<=? '"not a char" g$a$4991$1l2agK)
            (void))
          (if (not (char? g$b$4992$1l2agK))
            (assertion-violation 'char<=? '"not a char" g$b$4992$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$4994$1l2agK)
               (if (not (char? g$x$4994$1l2agK))
                 (assertion-violation 'char<=? '"not a char" g$x$4994$1l2agK)
                 (void))))
            g$rest$4993$1l2agK)
          ((letrec ((g$f$4995$1l2agK
                      (case-lambda
                        ((g$a$4996$1l2agK g$b$4997$1l2agK g$rest$4998$1l2agK)
                         (if (null? g$rest$4998$1l2agK)
                           (<= (char->integer g$a$4996$1l2agK)
                               (char->integer g$b$4997$1l2agK))
                           (if (<= (char->integer g$a$4996$1l2agK)
                                   (char->integer g$b$4997$1l2agK))
                             (begin
                               '#f
                               (g$f$4995$1l2agK
                                 g$b$4997$1l2agK
                                 (car g$rest$4998$1l2agK)
                                 (cdr g$rest$4998$1l2agK)))
                             '#f))))))
             g$f$4995$1l2agK)
           g$a$4991$1l2agK
           g$b$4992$1l2agK
           g$rest$4993$1l2agK)))))
   (g$char>=?$4879$1l2agK
     g$char>=?$5060$1l2agK
     (case-lambda
       ((g$a$4999$1l2agK g$b$5000$1l2agK . g$rest$5001$1l2agK)
        (begin
          (if (not (char? g$a$4999$1l2agK))
            (assertion-violation 'char>=? '"not a char" g$a$4999$1l2agK)
            (void))
          (if (not (char? g$b$5000$1l2agK))
            (assertion-violation 'char>=? '"not a char" g$b$5000$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$5002$1l2agK)
               (if (not (char? g$x$5002$1l2agK))
                 (assertion-violation 'char>=? '"not a char" g$x$5002$1l2agK)
                 (void))))
            g$rest$5001$1l2agK)
          ((letrec ((g$f$5003$1l2agK
                      (case-lambda
                        ((g$a$5004$1l2agK g$b$5005$1l2agK g$rest$5006$1l2agK)
                         (if (null? g$rest$5006$1l2agK)
                           (>= (char->integer g$a$5004$1l2agK)
                               (char->integer g$b$5005$1l2agK))
                           (if (>= (char->integer g$a$5004$1l2agK)
                                   (char->integer g$b$5005$1l2agK))
                             (begin
                               '#f
                               (g$f$5003$1l2agK
                                 g$b$5005$1l2agK
                                 (car g$rest$5006$1l2agK)
                                 (cdr g$rest$5006$1l2agK)))
                             '#f))))))
             g$f$5003$1l2agK)
           g$a$4999$1l2agK
           g$b$5000$1l2agK
           g$rest$5001$1l2agK)))))
   (g$rationalize$4880$1l2agK
     g$rationalize$5061$1l2agK
     (case-lambda
       ((g$x$5007$1l2agK g$e$5008$1l2agK)
        (if (if (infinite? g$x$5007$1l2agK)
              (begin '#f (infinite? g$e$5008$1l2agK))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5009$1l2agK)
              (if (if (exact? g$x$5007$1l2agK)
                    (begin '#f (exact? g$e$5008$1l2agK))
                    '#f)
                g$r$5009$1l2agK
                (inexact g$r$5009$1l2agK))))
           (apply
             /
             (g$find-ratio$4881$1l2agK g$x$5007$1l2agK g$e$5008$1l2agK)))))))
   (g$find-ratio$4881$1l2agK
     g$find-ratio$5062$1l2agK
     (case-lambda
       ((g$x$5010$1l2agK g$e$5011$1l2agK)
        (g$find-ratio-between$4882$1l2agK
          (- g$x$5010$1l2agK g$e$5011$1l2agK)
          (+ g$x$5010$1l2agK g$e$5011$1l2agK)))))
   (g$find-ratio-between$4882$1l2agK
     g$find-ratio-between$5063$1l2agK
     (case-lambda
       ((g$x$5012$1l2agK g$y$5013$1l2agK)
        (letrec* ((g$sr$5014$1l2agK
                    (case-lambda
                      ((g$x$5016$1l2agK g$y$5017$1l2agK)
                       ((case-lambda
                          ((g$fx$5018$1l2agK g$fy$5019$1l2agK)
                           (if (>= g$fx$5018$1l2agK g$x$5016$1l2agK)
                             (list g$fx$5018$1l2agK '1)
                             (if (= g$fx$5018$1l2agK g$fy$5019$1l2agK)
                               ((case-lambda
                                  ((g$rat$5020$1l2agK)
                                   (list
                                     (+ (g$cadr$4829$1l2agK g$rat$5020$1l2agK)
                                        (* g$fx$5018$1l2agK
                                           (car g$rat$5020$1l2agK)))
                                     (car g$rat$5020$1l2agK))))
                                (g$sr$5014$1l2agK
                                  (/ (- g$y$5017$1l2agK g$fy$5019$1l2agK))
                                  (/ (- g$x$5016$1l2agK g$fx$5018$1l2agK))))
                               (list (+ '1 g$fx$5018$1l2agK) '1)))))
                        (exact (floor g$x$5016$1l2agK))
                        (exact (floor g$y$5017$1l2agK)))))))
          (if (< g$y$5013$1l2agK g$x$5012$1l2agK)
            (g$find-ratio-between$4882$1l2agK g$y$5013$1l2agK g$x$5012$1l2agK)
            (if (>= g$x$5012$1l2agK g$y$5013$1l2agK)
              (list g$x$5012$1l2agK '1)
              (if (positive? g$x$5012$1l2agK)
                (g$sr$5014$1l2agK g$x$5012$1l2agK g$y$5013$1l2agK)
                (if (negative? g$y$5013$1l2agK)
                  ((case-lambda
                     ((g$rat$5015$1l2agK)
                      (list
                        (- (car g$rat$5015$1l2agK))
                        (g$cadr$4829$1l2agK g$rat$5015$1l2agK))))
                   (g$sr$5014$1l2agK (- g$y$5013$1l2agK) (- g$x$5012$1l2agK)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5259$1l2agK g$using$5294$1l2agK (clr-using-internal 'system))
   (g$using$5261$1l2agK
     g$using$5295$1l2agK
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5262$1l2agK
     g$make-eq-hashtable$5296$1l2agK
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5273$1l2agK)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5273$1l2agK)))))
   (g$make-eqv-hashtable$5263$1l2agK
     g$make-eqv-hashtable$5297$1l2agK
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5274$1l2agK) (make-hashtable eqv-hash eqv? g$k$5274$1l2agK))))
   (g$hashtable-size$5264$1l2agK
     g$hashtable-size$5298$1l2agK
     (case-lambda
       ((g$ht$5275$1l2agK)
        (clr-call-internal 'hashtable 'get_count g$ht$5275$1l2agK))))
   (g$hashtable-ref$5265$1l2agK
     g$hashtable-ref$5299$1l2agK
     (case-lambda
       ((g$ht$5276$1l2agK g$key$5277$1l2agK g$default$5278$1l2agK)
        (letrec* ((g$r$5279$1l2agK
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5276$1l2agK
                      g$key$5277$1l2agK)))
          (if (not (null? g$r$5279$1l2agK))
            g$r$5279$1l2agK
            g$default$5278$1l2agK)))))
   (g$hashtable-set!$5266$1l2agK
     g$hashtable-set!$5300$1l2agK
     (case-lambda
       ((g$ht$5280$1l2agK g$key$5281$1l2agK g$obj$5282$1l2agK)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5280$1l2agK
          g$key$5281$1l2agK
          g$obj$5282$1l2agK))))
   (g$hashtable-delete!$5267$1l2agK
     g$hashtable-delete!$5301$1l2agK
     (case-lambda
       ((g$ht$5283$1l2agK g$key$5284$1l2agK)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5283$1l2agK
          g$key$5284$1l2agK))))
   (g$hashtable-contains?$5268$1l2agK
     g$hashtable-contains?$5302$1l2agK
     (case-lambda
       ((g$ht$5285$1l2agK g$key$5286$1l2agK)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5285$1l2agK
          g$key$5286$1l2agK))))
   (g$hashtable-update!$5269$1l2agK
     g$hashtable-update!$5303$1l2agK
     (case-lambda
       ((g$ht$5287$1l2agK
          g$key$5288$1l2agK
          g$proc$5289$1l2agK
          g$default$5290$1l2agK)
        (g$hashtable-set!$5266$1l2agK
          g$ht$5287$1l2agK
          g$key$5288$1l2agK
          (g$proc$5289$1l2agK
            (g$hashtable-ref$5265$1l2agK
              g$ht$5287$1l2agK
              g$key$5288$1l2agK
              g$default$5290$1l2agK))))))
   (g$hashtable-clear!$5270$1l2agK
     g$hashtable-clear!$5304$1l2agK
     (case-lambda
       ((g$ht$5291$1l2agK)
        (clr-call-internal 'hashtable 'clear g$ht$5291$1l2agK))
       ((g$ht$5292$1l2agK g$k$5293$1l2agK)
        (clr-call-internal 'hashtable 'clear g$ht$5292$1l2agK))))
   (g$clear-usings$5272$1l2agK
     g$clear-usings$5305$1l2agK
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5307$1l2agK
     g$using$5373$1l2agK
     (clr-using-internal 'system.io))
   (g$file-exists?$5308$1l2agK
     g$file-exists?$5374$1l2agK
     (case-lambda
       ((g$fn$5336$1l2agK)
        (clr-call-internal 'file 'exists '() g$fn$5336$1l2agK))))
   (g$delete-file$5309$1l2agK
     g$delete-file$5375$1l2agK
     (case-lambda
       ((g$fn$5337$1l2agK)
        (clr-call-internal 'file 'delete '() g$fn$5337$1l2agK))))
   (g$file-copy$5310$1l2agK
     g$file-copy$5376$1l2agK
     (case-lambda
       ((g$from$5338$1l2agK g$to$5339$1l2agK)
        (g$file-copy$5310$1l2agK g$from$5338$1l2agK g$to$5339$1l2agK '#f))
       ((g$from$5340$1l2agK g$to$5341$1l2agK g$overwrite?$5342$1l2agK)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5340$1l2agK
          g$to$5341$1l2agK
          g$overwrite?$5342$1l2agK))))
   (g$file-move$5311$1l2agK
     g$file-move$5377$1l2agK
     (case-lambda
       ((g$from$5343$1l2agK g$to$5344$1l2agK)
        (clr-call-internal
          'file
          'move
          '()
          g$from$5343$1l2agK
          g$to$5344$1l2agK))))
   (g$file-create-time$5312$1l2agK
     g$file-create-time$5378$1l2agK
     (case-lambda
       ((g$fn$5345$1l2agK)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5345$1l2agK))))
   (g$file-access-time$5313$1l2agK
     g$file-access-time$5379$1l2agK
     (case-lambda
       ((g$fn$5346$1l2agK)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5346$1l2agK))))
   (g$file-modified-time$5314$1l2agK
     g$file-modified-time$5380$1l2agK
     (case-lambda
       ((g$fn$5347$1l2agK)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5347$1l2agK))))
   (g$directory-exists?$5315$1l2agK
     g$directory-exists?$5381$1l2agK
     (case-lambda
       ((g$fn$5348$1l2agK)
        (clr-call-internal 'directory 'exists '() g$fn$5348$1l2agK))))
   (g$delete-directory$5316$1l2agK
     g$delete-directory$5382$1l2agK
     (case-lambda
       ((g$dir$5349$1l2agK)
        (g$delete-directory$5316$1l2agK g$dir$5349$1l2agK '#f))
       ((g$dir$5350$1l2agK g$recursive?$5351$1l2agK)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5350$1l2agK
          g$recursive?$5351$1l2agK))))
   (g$directory-move$5317$1l2agK
     g$directory-move$5383$1l2agK
     (case-lambda
       ((g$from$5352$1l2agK g$to$5353$1l2agK)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5352$1l2agK
          g$to$5353$1l2agK))))
   (g$create-directory$5318$1l2agK
     g$create-directory$5384$1l2agK
     (case-lambda
       ((g$name$5354$1l2agK)
        (clr-call-internal
          'directory
          'createdirectory
          '()
          g$name$5354$1l2agK))))
   (g$get-files$5319$1l2agK
     g$get-files$5385$1l2agK
     (case-lambda
       ((g$dir$5355$1l2agK) (g$get-files$5319$1l2agK g$dir$5355$1l2agK '"*"))
       ((g$dir$5356$1l2agK g$pattern$5357$1l2agK)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5356$1l2agK
          g$pattern$5357$1l2agK))))
   (g$get-directories$5320$1l2agK
     g$get-directories$5386$1l2agK
     (case-lambda
       ((g$dir$5358$1l2agK)
        (g$get-directories$5320$1l2agK g$dir$5358$1l2agK '"*"))
       ((g$dir$5359$1l2agK g$pattern$5360$1l2agK)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5359$1l2agK
          g$pattern$5360$1l2agK))))
   (g$change-extension$5321$1l2agK
     g$change-extension$5387$1l2agK
     (case-lambda
       ((g$path$5361$1l2agK g$extension$5362$1l2agK)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5361$1l2agK
          g$extension$5362$1l2agK))))
   (g$path-combine$5322$1l2agK
     g$path-combine$5388$1l2agK
     (case-lambda
       ((g$path1$5363$1l2agK g$path2$5364$1l2agK)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5363$1l2agK
          g$path2$5364$1l2agK))))
   (g$get-directory-name$5323$1l2agK
     g$get-directory-name$5389$1l2agK
     (case-lambda
       ((g$path$5365$1l2agK)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5365$1l2agK))))
   (g$get-extension$5324$1l2agK
     g$get-extension$5390$1l2agK
     (case-lambda
       ((g$path$5366$1l2agK)
        (clr-call-internal 'path 'getextension '() g$path$5366$1l2agK))))
   (g$get-filename$5325$1l2agK
     g$get-filename$5391$1l2agK
     (case-lambda
       ((g$path$5367$1l2agK)
        (clr-call-internal 'path 'getfilename '() g$path$5367$1l2agK))))
   (g$get-filename-without-extension$5326$1l2agK
     g$get-filename-without-extension$5392$1l2agK
     (case-lambda
       ((g$path$5368$1l2agK)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5368$1l2agK))))
   (g$get-full-path$5327$1l2agK
     g$get-full-path$5393$1l2agK
     (case-lambda
       ((g$path$5369$1l2agK)
        (clr-call-internal 'path 'getfullpath '() g$path$5369$1l2agK))))
   (g$get-path-root$5328$1l2agK
     g$get-path-root$5394$1l2agK
     (case-lambda
       ((g$path$5370$1l2agK)
        (clr-call-internal 'path 'getpathroot '() g$path$5370$1l2agK))))
   (g$get-random-filename$5329$1l2agK
     g$get-random-filename$5395$1l2agK
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5330$1l2agK
     g$get-temp-filename$5396$1l2agK
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5331$1l2agK
     g$get-temp-path$5397$1l2agK
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5332$1l2agK
     g$path-rooted?$5398$1l2agK
     (case-lambda
       ((g$path$5371$1l2agK)
        (clr-call-internal 'path 'ispathrooted '() g$path$5371$1l2agK))))
   (g$path-has-extension?$5333$1l2agK
     g$path-has-extension?$5399$1l2agK
     (case-lambda
       ((g$path$5372$1l2agK)
        (clr-call-internal 'path 'hasextension '() g$path$5372$1l2agK))))
   (g$clear-usings$5335$1l2agK
     g$clear-usings$5400$1l2agK
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5401$1l2agK
     g$find$5492$1l2agK
     (case-lambda
       ((g$proc$5420$1l2agK g$l$5421$1l2agK)
        (if (null? g$l$5421$1l2agK)
          '#f
          ((case-lambda
             ((g$e$5422$1l2agK)
              (if (g$proc$5420$1l2agK g$e$5422$1l2agK)
                g$e$5422$1l2agK
                (g$find$5401$1l2agK g$proc$5420$1l2agK (cdr g$l$5421$1l2agK)))))
           (car g$l$5421$1l2agK))))))
   (g$partition$5402$1l2agK
     g$partition$5493$1l2agK
     (case-lambda
       ((g$proc$5423$1l2agK g$l$5424$1l2agK)
        ((letrec ((g$f$5425$1l2agK
                    (case-lambda
                      ((g$l$5426$1l2agK g$a$5427$1l2agK g$b$5428$1l2agK)
                       (if (null? g$l$5426$1l2agK)
                         (values
                           (reverse! g$a$5427$1l2agK)
                           (reverse! g$b$5428$1l2agK))
                         ((case-lambda
                            ((g$e$5429$1l2agK)
                             (if (g$proc$5423$1l2agK g$e$5429$1l2agK)
                               (g$f$5425$1l2agK
                                 (cdr g$l$5426$1l2agK)
                                 (cons g$e$5429$1l2agK g$a$5427$1l2agK)
                                 g$b$5428$1l2agK)
                               (g$f$5425$1l2agK
                                 (cdr g$l$5426$1l2agK)
                                 g$a$5427$1l2agK
                                 (cons g$e$5429$1l2agK g$b$5428$1l2agK)))))
                          (car g$l$5426$1l2agK)))))))
           g$f$5425$1l2agK)
         g$l$5424$1l2agK
         '()
         '()))))
   (g$remp$5403$1l2agK
     g$remp$5494$1l2agK
     (case-lambda
       ((g$proc$5430$1l2agK g$l$5431$1l2agK)
        ((letrec ((g$f$5432$1l2agK
                    (case-lambda
                      ((g$l$5433$1l2agK g$a$5434$1l2agK)
                       (if (null? g$l$5433$1l2agK)
                         (reverse! g$a$5434$1l2agK)
                         ((case-lambda
                            ((g$e$5435$1l2agK)
                             (if (g$proc$5430$1l2agK g$e$5435$1l2agK)
                               (g$f$5432$1l2agK
                                 (cdr g$l$5433$1l2agK)
                                 g$a$5434$1l2agK)
                               (g$f$5432$1l2agK
                                 (cdr g$l$5433$1l2agK)
                                 (cons g$e$5435$1l2agK g$a$5434$1l2agK)))))
                          (car g$l$5433$1l2agK)))))))
           g$f$5432$1l2agK)
         g$l$5431$1l2agK
         '()))))
   (g$filter$5404$1l2agK
     g$filter$5495$1l2agK
     (case-lambda
       ((g$proc$5436$1l2agK g$l$5437$1l2agK)
        ((letrec ((g$f$5438$1l2agK
                    (case-lambda
                      ((g$l$5439$1l2agK g$a$5440$1l2agK)
                       (if (null? g$l$5439$1l2agK)
                         (reverse! g$a$5440$1l2agK)
                         ((case-lambda
                            ((g$e$5441$1l2agK)
                             (if (g$proc$5436$1l2agK g$e$5441$1l2agK)
                               (g$f$5438$1l2agK
                                 (cdr g$l$5439$1l2agK)
                                 (cons g$e$5441$1l2agK g$a$5440$1l2agK))
                               (g$f$5438$1l2agK
                                 (cdr g$l$5439$1l2agK)
                                 g$a$5440$1l2agK))))
                          (car g$l$5439$1l2agK)))))))
           g$f$5438$1l2agK)
         g$l$5437$1l2agK
         '()))))
   (g$assv$5405$1l2agK
     g$assv$5496$1l2agK
     (case-lambda
       ((g$obj$5442$1l2agK g$lst$5443$1l2agK)
        (if (null? g$lst$5443$1l2agK)
          '#f
          ((case-lambda
             ((g$c$5444$1l2agK)
              (if (eqv? g$obj$5442$1l2agK (car g$c$5444$1l2agK))
                g$c$5444$1l2agK
                (g$assv$5405$1l2agK
                  g$obj$5442$1l2agK
                  (cdr g$lst$5443$1l2agK)))))
           (car g$lst$5443$1l2agK))))))
   (g$assoc$5406$1l2agK
     g$assoc$5497$1l2agK
     (case-lambda
       ((g$obj$5445$1l2agK g$lst$5446$1l2agK)
        (if (null? g$lst$5446$1l2agK)
          '#f
          ((case-lambda
             ((g$c$5447$1l2agK)
              (if (equal? g$obj$5445$1l2agK (car g$c$5447$1l2agK))
                g$c$5447$1l2agK
                (g$assoc$5406$1l2agK
                  g$obj$5445$1l2agK
                  (cdr g$lst$5446$1l2agK)))))
           (car g$lst$5446$1l2agK))))))
   (g$assp$5407$1l2agK
     g$assp$5498$1l2agK
     (case-lambda
       ((g$p?$5448$1l2agK g$lst$5449$1l2agK)
        (if (null? g$lst$5449$1l2agK)
          '#f
          ((case-lambda
             ((g$c$5450$1l2agK)
              (if (g$p?$5448$1l2agK (car g$c$5450$1l2agK))
                g$c$5450$1l2agK
                (g$assp$5407$1l2agK g$p?$5448$1l2agK (cdr g$lst$5449$1l2agK)))))
           (car g$lst$5449$1l2agK))))))
   (g$member$5408$1l2agK
     g$member$5499$1l2agK
     (case-lambda
       ((g$obj$5451$1l2agK g$lst$5452$1l2agK)
        (if (null? g$lst$5452$1l2agK)
          '#f
          (if (equal? g$obj$5451$1l2agK (car g$lst$5452$1l2agK))
            g$lst$5452$1l2agK
            (g$member$5408$1l2agK
              g$obj$5451$1l2agK
              (cdr g$lst$5452$1l2agK)))))))
   (g$memp$5409$1l2agK
     g$memp$5500$1l2agK
     (case-lambda
       ((g$p?$5453$1l2agK g$lst$5454$1l2agK)
        (if (null? g$lst$5454$1l2agK)
          '#f
          (if (g$p?$5453$1l2agK (car g$lst$5454$1l2agK))
            g$lst$5454$1l2agK
            (g$memp$5409$1l2agK g$p?$5453$1l2agK (cdr g$lst$5454$1l2agK)))))))
   (g$all-empty?$5410$1l2agK
     g$all-empty?$5501$1l2agK
     (case-lambda
       ((g$ls$5455$1l2agK)
        ((case-lambda
           ((g$t$5456$1l2agK)
            (if g$t$5456$1l2agK
              g$t$5456$1l2agK
              (begin
                '#f
                (if (null? (car g$ls$5455$1l2agK))
                  (begin '#f (g$all-empty?$5410$1l2agK (cdr g$ls$5455$1l2agK)))
                  '#f)))))
         (null? g$ls$5455$1l2agK)))))
   (g$split$5411$1l2agK
     g$split$5502$1l2agK
     (case-lambda
       ((g$ls$5457$1l2agK)
        (if (null? g$ls$5457$1l2agK)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5411$1l2agK (cdr g$ls$5457$1l2agK))))
            (case-lambda
              ((g$cars$5458$1l2agK g$cdrs$5459$1l2agK)
               ((case-lambda
                  ((g$a$5460$1l2agK)
                   (values
                     (cons (car g$a$5460$1l2agK) g$cars$5458$1l2agK)
                     (cons (cdr g$a$5460$1l2agK) g$cdrs$5459$1l2agK))))
                (car g$ls$5457$1l2agK)))))))))
   (g$for-all$5412$1l2agK
     g$for-all$5503$1l2agK
     (case-lambda
       ((g$f$5461$1l2agK . g$args$5462$1l2agK)
        (if (g$all-empty?$5410$1l2agK g$args$5462$1l2agK)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5411$1l2agK g$args$5462$1l2agK)))
            (case-lambda
              ((g$cars$5463$1l2agK g$cdrs$5464$1l2agK)
               (if (g$all-empty?$5410$1l2agK g$cdrs$5464$1l2agK)
                 (apply g$f$5461$1l2agK g$cars$5463$1l2agK)
                 (if (apply g$f$5461$1l2agK g$cars$5463$1l2agK)
                   (begin
                     '#f
                     (apply
                       g$for-all$5412$1l2agK
                       g$f$5461$1l2agK
                       g$cdrs$5464$1l2agK))
                   '#f)))))))))
   (g$exists$5413$1l2agK
     g$exists$5504$1l2agK
     (case-lambda
       ((g$f$5465$1l2agK . g$args$5466$1l2agK)
        (if (g$all-empty?$5410$1l2agK g$args$5466$1l2agK)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5411$1l2agK g$args$5466$1l2agK)))
            (case-lambda
              ((g$cars$5467$1l2agK g$cdrs$5468$1l2agK)
               ((case-lambda
                  ((g$t$5469$1l2agK)
                   (if g$t$5469$1l2agK
                     g$t$5469$1l2agK
                     (begin
                       '#f
                       (apply
                         g$exists$5413$1l2agK
                         g$f$5465$1l2agK
                         g$cdrs$5468$1l2agK)))))
                (apply g$f$5465$1l2agK g$cars$5467$1l2agK)))))))))
   (g$cons*$5414$1l2agK
     g$cons*$5505$1l2agK
     (case-lambda
       ((g$a$5470$1l2agK . g$rest$5471$1l2agK)
        ((letrec ((g$f$5472$1l2agK
                    (case-lambda
                      ((g$a$5473$1l2agK g$rest$5474$1l2agK)
                       (if (null? g$rest$5474$1l2agK)
                         g$a$5473$1l2agK
                         (cons
                           g$a$5473$1l2agK
                           (g$f$5472$1l2agK
                             (car g$rest$5474$1l2agK)
                             (cdr g$rest$5474$1l2agK))))))))
           g$f$5472$1l2agK)
         g$a$5470$1l2agK
         g$rest$5471$1l2agK))))
   (g$fold-left$5415$1l2agK
     g$fold-left$5506$1l2agK
     (case-lambda
       ((g$combine$5475$1l2agK
          g$nil$5476$1l2agK
          g$list1$5477$1l2agK
          .
          g$lists$5478$1l2agK)
        (if (null? g$list1$5477$1l2agK)
          g$nil$5476$1l2agK
          (apply
            g$fold-left$5415$1l2agK
            (g$cons*$5414$1l2agK
              g$combine$5475$1l2agK
              (apply
                g$combine$5475$1l2agK
                (g$cons*$5414$1l2agK
                  g$nil$5476$1l2agK
                  (car g$list1$5477$1l2agK)
                  (map car g$lists$5478$1l2agK)))
              (cdr g$list1$5477$1l2agK)
              (map cdr g$lists$5478$1l2agK)))))))
   (g$fold-right$5416$1l2agK
     g$fold-right$5507$1l2agK
     (case-lambda
       ((g$combine$5479$1l2agK
          g$nil$5480$1l2agK
          g$list1$5481$1l2agK
          .
          g$lists$5482$1l2agK)
        (if (null? g$list1$5481$1l2agK)
          g$nil$5480$1l2agK
          (apply
            g$combine$5479$1l2agK
            (append
              (list (car g$list1$5481$1l2agK))
              (map car g$lists$5482$1l2agK)
              (list
                (apply
                  g$fold-right$5416$1l2agK
                  (g$cons*$5414$1l2agK
                    g$combine$5479$1l2agK
                    g$nil$5480$1l2agK
                    (cdr g$list1$5481$1l2agK)
                    (map cdr g$lists$5482$1l2agK))))))))))
   (g$remove$5417$1l2agK
     g$remove$5508$1l2agK
     (case-lambda
       ((g$obj$5483$1l2agK g$list$5484$1l2agK)
        (g$remp$5403$1l2agK
          (case-lambda
            ((g$x$5485$1l2agK) (equal? g$obj$5483$1l2agK g$x$5485$1l2agK)))
          g$list$5484$1l2agK))))
   (g$remv$5418$1l2agK
     g$remv$5509$1l2agK
     (case-lambda
       ((g$obj$5486$1l2agK g$list$5487$1l2agK)
        (g$remp$5403$1l2agK
          (case-lambda
            ((g$x$5488$1l2agK) (eqv? g$obj$5486$1l2agK g$x$5488$1l2agK)))
          g$list$5487$1l2agK))))
   (g$remq$5419$1l2agK
     g$remq$5510$1l2agK
     (case-lambda
       ((g$obj$5489$1l2agK g$list$5490$1l2agK)
        (g$remp$5403$1l2agK
          (case-lambda
            ((g$x$5491$1l2agK) (eq? g$obj$5489$1l2agK g$x$5491$1l2agK)))
          g$list$5490$1l2agK)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5511$1l2agK
     g$native-endianness$5622$1l2agK
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5512$1l2agK
     g$bytevector-u16-ref$5623$1l2agK
     (case-lambda
       ((g$bytevector$5540$1l2agK g$k$5541$1l2agK g$endianness$5542$1l2agK)
        (bytevector-uint-ref
          g$bytevector$5540$1l2agK
          g$k$5541$1l2agK
          g$endianness$5542$1l2agK
          '2))))
   (g$bytevector-s16-ref$5513$1l2agK
     g$bytevector-s16-ref$5624$1l2agK
     (case-lambda
       ((g$bytevector$5543$1l2agK g$k$5544$1l2agK g$endianness$5545$1l2agK)
        (bytevector-sint-ref
          g$bytevector$5543$1l2agK
          g$k$5544$1l2agK
          g$endianness$5545$1l2agK
          '2))))
   (g$bytevector-u16-native-ref$5514$1l2agK
     g$bytevector-u16-native-ref$5625$1l2agK
     (case-lambda
       ((g$bytevector$5546$1l2agK g$k$5547$1l2agK)
        (bytevector-uint-ref
          g$bytevector$5546$1l2agK
          g$k$5547$1l2agK
          (g$native-endianness$5511$1l2agK)
          '2))))
   (g$bytevector-s16-native-ref$5515$1l2agK
     g$bytevector-s16-native-ref$5626$1l2agK
     (case-lambda
       ((g$bytevector$5548$1l2agK g$k$5549$1l2agK)
        (bytevector-sint-ref
          g$bytevector$5548$1l2agK
          g$k$5549$1l2agK
          (g$native-endianness$5511$1l2agK)
          '2))))
   (g$bytevector-u16-set!$5516$1l2agK
     g$bytevector-u16-set!$5627$1l2agK
     (case-lambda
       ((g$bytevector$5550$1l2agK
          g$k$5551$1l2agK
          g$n$5552$1l2agK
          g$endianness$5553$1l2agK)
        (bytevector-uint-set!
          g$bytevector$5550$1l2agK
          g$k$5551$1l2agK
          g$n$5552$1l2agK
          g$endianness$5553$1l2agK
          '2))))
   (g$bytevector-s16-set!$5517$1l2agK
     g$bytevector-s16-set!$5628$1l2agK
     (case-lambda
       ((g$bytevector$5554$1l2agK
          g$k$5555$1l2agK
          g$n$5556$1l2agK
          g$endianness$5557$1l2agK)
        (bytevector-sint-set!
          g$bytevector$5554$1l2agK
          g$k$5555$1l2agK
          g$n$5556$1l2agK
          g$endianness$5557$1l2agK
          '2))))
   (g$bytevector-u16-native-set!$5518$1l2agK
     g$bytevector-u16-native-set!$5629$1l2agK
     (case-lambda
       ((g$bytevector$5558$1l2agK g$k$5559$1l2agK g$n$5560$1l2agK)
        (bytevector-uint-set!
          g$bytevector$5558$1l2agK
          g$k$5559$1l2agK
          g$n$5560$1l2agK
          (g$native-endianness$5511$1l2agK)
          '2))))
   (g$bytevector-s16-native-set!$5519$1l2agK
     g$bytevector-s16-native-set!$5630$1l2agK
     (case-lambda
       ((g$bytevector$5561$1l2agK g$k$5562$1l2agK g$n$5563$1l2agK)
        (bytevector-sint-set!
          g$bytevector$5561$1l2agK
          g$k$5562$1l2agK
          g$n$5563$1l2agK
          (g$native-endianness$5511$1l2agK)
          '2))))
   (g$bytevector-u32-ref$5520$1l2agK
     g$bytevector-u32-ref$5631$1l2agK
     (case-lambda
       ((g$bytevector$5564$1l2agK g$k$5565$1l2agK g$endianness$5566$1l2agK)
        (bytevector-uint-ref
          g$bytevector$5564$1l2agK
          g$k$5565$1l2agK
          g$endianness$5566$1l2agK
          '4))))
   (g$bytevector-s32-ref$5521$1l2agK
     g$bytevector-s32-ref$5632$1l2agK
     (case-lambda
       ((g$bytevector$5567$1l2agK g$k$5568$1l2agK g$endianness$5569$1l2agK)
        (bytevector-sint-ref
          g$bytevector$5567$1l2agK
          g$k$5568$1l2agK
          g$endianness$5569$1l2agK
          '4))))
   (g$bytevector-u32-native-ref$5522$1l2agK
     g$bytevector-u32-native-ref$5633$1l2agK
     (case-lambda
       ((g$bytevector$5570$1l2agK g$k$5571$1l2agK)
        (bytevector-uint-ref
          g$bytevector$5570$1l2agK
          g$k$5571$1l2agK
          (g$native-endianness$5511$1l2agK)
          '4))))
   (g$bytevector-s32-native-ref$5523$1l2agK
     g$bytevector-s32-native-ref$5634$1l2agK
     (case-lambda
       ((g$bytevector$5572$1l2agK g$k$5573$1l2agK)
        (bytevector-sint-ref
          g$bytevector$5572$1l2agK
          g$k$5573$1l2agK
          (g$native-endianness$5511$1l2agK)
          '4))))
   (g$bytevector-u32-set!$5524$1l2agK
     g$bytevector-u32-set!$5635$1l2agK
     (case-lambda
       ((g$bytevector$5574$1l2agK
          g$k$5575$1l2agK
          g$n$5576$1l2agK
          g$endianness$5577$1l2agK)
        (bytevector-uint-set!
          g$bytevector$5574$1l2agK
          g$k$5575$1l2agK
          g$n$5576$1l2agK
          g$endianness$5577$1l2agK
          '4))))
   (g$bytevector-s32-set!$5525$1l2agK
     g$bytevector-s32-set!$5636$1l2agK
     (case-lambda
       ((g$bytevector$5578$1l2agK
          g$k$5579$1l2agK
          g$n$5580$1l2agK
          g$endianness$5581$1l2agK)
        (bytevector-sint-set!
          g$bytevector$5578$1l2agK
          g$k$5579$1l2agK
          g$n$5580$1l2agK
          g$endianness$5581$1l2agK
          '4))))
   (g$bytevector-u32-native-set!$5526$1l2agK
     g$bytevector-u32-native-set!$5637$1l2agK
     (case-lambda
       ((g$bytevector$5582$1l2agK g$k$5583$1l2agK g$n$5584$1l2agK)
        (bytevector-uint-set!
          g$bytevector$5582$1l2agK
          g$k$5583$1l2agK
          g$n$5584$1l2agK
          (g$native-endianness$5511$1l2agK)
          '4))))
   (g$bytevector-s32-native-set!$5527$1l2agK
     g$bytevector-s32-native-set!$5638$1l2agK
     (case-lambda
       ((g$bytevector$5585$1l2agK g$k$5586$1l2agK g$n$5587$1l2agK)
        (bytevector-sint-set!
          g$bytevector$5585$1l2agK
          g$k$5586$1l2agK
          g$n$5587$1l2agK
          (g$native-endianness$5511$1l2agK)
          '4))))
   (g$bytevector-u64-ref$5528$1l2agK
     g$bytevector-u64-ref$5639$1l2agK
     (case-lambda
       ((g$bytevector$5588$1l2agK g$k$5589$1l2agK g$endianness$5590$1l2agK)
        (bytevector-uint-ref
          g$bytevector$5588$1l2agK
          g$k$5589$1l2agK
          g$endianness$5590$1l2agK
          '8))))
   (g$bytevector-s64-ref$5529$1l2agK
     g$bytevector-s64-ref$5640$1l2agK
     (case-lambda
       ((g$bytevector$5591$1l2agK g$k$5592$1l2agK g$endianness$5593$1l2agK)
        (bytevector-sint-ref
          g$bytevector$5591$1l2agK
          g$k$5592$1l2agK
          g$endianness$5593$1l2agK
          '8))))
   (g$bytevector-u64-native-ref$5530$1l2agK
     g$bytevector-u64-native-ref$5641$1l2agK
     (case-lambda
       ((g$bytevector$5594$1l2agK g$k$5595$1l2agK)
        (bytevector-uint-ref
          g$bytevector$5594$1l2agK
          g$k$5595$1l2agK
          (g$native-endianness$5511$1l2agK)
          '8))))
   (g$bytevector-s64-native-ref$5531$1l2agK
     g$bytevector-s64-native-ref$5642$1l2agK
     (case-lambda
       ((g$bytevector$5596$1l2agK g$k$5597$1l2agK)
        (bytevector-sint-ref
          g$bytevector$5596$1l2agK
          g$k$5597$1l2agK
          (g$native-endianness$5511$1l2agK)
          '8))))
   (g$bytevector-u64-set!$5532$1l2agK
     g$bytevector-u64-set!$5643$1l2agK
     (case-lambda
       ((g$bytevector$5598$1l2agK
          g$k$5599$1l2agK
          g$n$5600$1l2agK
          g$endianness$5601$1l2agK)
        (bytevector-uint-set!
          g$bytevector$5598$1l2agK
          g$k$5599$1l2agK
          g$n$5600$1l2agK
          g$endianness$5601$1l2agK
          '8))))
   (g$bytevector-s64-set!$5533$1l2agK
     g$bytevector-s64-set!$5644$1l2agK
     (case-lambda
       ((g$bytevector$5602$1l2agK
          g$k$5603$1l2agK
          g$n$5604$1l2agK
          g$endianness$5605$1l2agK)
        (bytevector-sint-set!
          g$bytevector$5602$1l2agK
          g$k$5603$1l2agK
          g$n$5604$1l2agK
          g$endianness$5605$1l2agK
          '8))))
   (g$bytevector-u64-native-set!$5534$1l2agK
     g$bytevector-u64-native-set!$5645$1l2agK
     (case-lambda
       ((g$bytevector$5606$1l2agK g$k$5607$1l2agK g$n$5608$1l2agK)
        (bytevector-uint-set!
          g$bytevector$5606$1l2agK
          g$k$5607$1l2agK
          g$n$5608$1l2agK
          (g$native-endianness$5511$1l2agK)
          '8))))
   (g$bytevector-s64-native-set!$5535$1l2agK
     g$bytevector-s64-native-set!$5646$1l2agK
     (case-lambda
       ((g$bytevector$5609$1l2agK g$k$5610$1l2agK g$n$5611$1l2agK)
        (bytevector-sint-set!
          g$bytevector$5609$1l2agK
          g$k$5610$1l2agK
          g$n$5611$1l2agK
          (g$native-endianness$5511$1l2agK)
          '8))))
   (g$bytevector-ieee-single-native-ref$5536$1l2agK
     g$bytevector-ieee-single-native-ref$5647$1l2agK
     (case-lambda
       ((g$bytevector$5612$1l2agK g$k$5613$1l2agK)
        (if (not (zero? (mod g$k$5613$1l2agK '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5613$1l2agK)
          (bytevector-ieee-single-ref
            g$bytevector$5612$1l2agK
            g$k$5613$1l2agK
            (g$native-endianness$5511$1l2agK))))))
   (g$bytevector-ieee-double-native-ref$5537$1l2agK
     g$bytevector-ieee-double-native-ref$5648$1l2agK
     (case-lambda
       ((g$bytevector$5614$1l2agK g$k$5615$1l2agK)
        (if (not (zero? (mod g$k$5615$1l2agK '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5615$1l2agK)
          (bytevector-ieee-double-ref
            g$bytevector$5614$1l2agK
            g$k$5615$1l2agK
            (g$native-endianness$5511$1l2agK))))))
   (g$bytevector-ieee-single-native-set!$5538$1l2agK
     g$bytevector-ieee-single-native-set!$5649$1l2agK
     (case-lambda
       ((g$bytevector$5616$1l2agK g$k$5617$1l2agK g$x$5618$1l2agK)
        (if (not (zero? (mod g$k$5617$1l2agK '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5617$1l2agK)
          (bytevector-ieee-single-set!
            g$bytevector$5616$1l2agK
            g$k$5617$1l2agK
            g$x$5618$1l2agK
            (g$native-endianness$5511$1l2agK))))))
   (g$bytevector-ieee-double-native-set!$5539$1l2agK
     g$bytevector-ieee-double-native-set!$5650$1l2agK
     (case-lambda
       ((g$bytevector$5619$1l2agK g$k$5620$1l2agK g$x$5621$1l2agK)
        (if (not (zero? (mod g$k$5620$1l2agK '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5620$1l2agK)
          (bytevector-ieee-double-set!
            g$bytevector$5619$1l2agK
            g$k$5620$1l2agK
            g$x$5621$1l2agK
            (g$native-endianness$5511$1l2agK)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6678$5651$1l2agK
     g$6678$5746$1l2agK
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6681$1l2agK
       '#f
       '#f
       '#()))
   (g$6680$5652$1l2agK g$6680$5747$1l2agK '#f)
   (g$6679$5653$1l2agK
     g$6679$5748$1l2agK
     (make-record-constructor-descriptor
       g$6678$5651$1l2agK
       '#f
       g$6680$5652$1l2agK))
   (g$&condition?$5654$1l2agK
     g$&condition?$5749$1l2agK
     (record-predicate g$6678$5651$1l2agK))
   (g$make-&condition$5655$1l2agK
     g$make-&condition$5750$1l2agK
     (record-constructor g$6679$5653$1l2agK))
   (g$&condition-rtd$5656$1l2agK
     g$&condition-rtd$5751$1l2agK
     g$6678$5651$1l2agK)
   (g$&condition-rcd$5657$1l2agK
     g$&condition-rcd$5752$1l2agK
     g$6679$5653$1l2agK)
   (g$6694$5658$1l2agK
     g$6694$5753$1l2agK
     (make-record-type-descriptor
       '&message
       g$6678$5651$1l2agK
       'g$6697$1l2agK
       '#f
       '#f
       '#((immutable message))))
   (g$6696$5659$1l2agK g$6696$5754$1l2agK '#f)
   (g$6695$5660$1l2agK
     g$6695$5755$1l2agK
     (make-record-constructor-descriptor
       g$6694$5658$1l2agK
       g$6679$5653$1l2agK
       g$6696$5659$1l2agK))
   (g$6693$5661$1l2agK
     g$6693$5756$1l2agK
     (record-predicate g$6694$5658$1l2agK))
   (g$make-message-condition$5662$1l2agK
     g$make-message-condition$5757$1l2agK
     (record-constructor g$6695$5660$1l2agK))
   (g$6692$5663$1l2agK
     g$6692$5758$1l2agK
     (record-accessor g$6694$5658$1l2agK '0))
   (g$message-condition?$5664$1l2agK
     g$message-condition?$5759$1l2agK
     (condition-predicate g$6694$5658$1l2agK))
   (g$condition-message$5665$1l2agK
     g$condition-message$5760$1l2agK
     (condition-accessor g$6694$5658$1l2agK g$6692$5663$1l2agK))
   (g$6710$5666$1l2agK
     g$6710$5761$1l2agK
     (make-record-type-descriptor
       '&warning
       g$6678$5651$1l2agK
       'g$6713$1l2agK
       '#f
       '#f
       '#()))
   (g$6712$5667$1l2agK g$6712$5762$1l2agK '#f)
   (g$6711$5668$1l2agK
     g$6711$5763$1l2agK
     (make-record-constructor-descriptor
       g$6710$5666$1l2agK
       g$6679$5653$1l2agK
       g$6712$5667$1l2agK))
   (g$6709$5669$1l2agK
     g$6709$5764$1l2agK
     (record-predicate g$6710$5666$1l2agK))
   (g$make-warning$5670$1l2agK
     g$make-warning$5765$1l2agK
     (record-constructor g$6711$5668$1l2agK))
   (g$warning?$5671$1l2agK
     g$warning?$5766$1l2agK
     (condition-predicate g$6710$5666$1l2agK))
   (g$6724$5672$1l2agK
     g$6724$5767$1l2agK
     (make-record-type-descriptor
       '&serious
       g$6678$5651$1l2agK
       'g$6727$1l2agK
       '#f
       '#f
       '#()))
   (g$6726$5673$1l2agK g$6726$5768$1l2agK '#f)
   (g$6725$5674$1l2agK
     g$6725$5769$1l2agK
     (make-record-constructor-descriptor
       g$6724$5672$1l2agK
       g$6679$5653$1l2agK
       g$6726$5673$1l2agK))
   (g$6723$5675$1l2agK
     g$6723$5770$1l2agK
     (record-predicate g$6724$5672$1l2agK))
   (g$make-serious-condition$5676$1l2agK
     g$make-serious-condition$5771$1l2agK
     (record-constructor g$6725$5674$1l2agK))
   (g$serious-condition?$5677$1l2agK
     g$serious-condition?$5772$1l2agK
     (condition-predicate g$6724$5672$1l2agK))
   (g$6738$5678$1l2agK
     g$6738$5773$1l2agK
     (make-record-type-descriptor
       '&error
       g$6724$5672$1l2agK
       'g$6741$1l2agK
       '#f
       '#f
       '#()))
   (g$6740$5679$1l2agK g$6740$5774$1l2agK '#f)
   (g$6739$5680$1l2agK
     g$6739$5775$1l2agK
     (make-record-constructor-descriptor
       g$6738$5678$1l2agK
       g$6725$5674$1l2agK
       g$6740$5679$1l2agK))
   (g$6737$5681$1l2agK
     g$6737$5776$1l2agK
     (record-predicate g$6738$5678$1l2agK))
   (g$make-error$5682$1l2agK
     g$make-error$5777$1l2agK
     (record-constructor g$6739$5680$1l2agK))
   (g$error?$5683$1l2agK
     g$error?$5778$1l2agK
     (condition-predicate g$6738$5678$1l2agK))
   (g$6752$5684$1l2agK
     g$6752$5779$1l2agK
     (make-record-type-descriptor
       '&violation
       g$6724$5672$1l2agK
       'g$6755$1l2agK
       '#f
       '#f
       '#()))
   (g$6754$5685$1l2agK g$6754$5780$1l2agK '#f)
   (g$6753$5686$1l2agK
     g$6753$5781$1l2agK
     (make-record-constructor-descriptor
       g$6752$5684$1l2agK
       g$6725$5674$1l2agK
       g$6754$5685$1l2agK))
   (g$6751$5687$1l2agK
     g$6751$5782$1l2agK
     (record-predicate g$6752$5684$1l2agK))
   (g$make-violation$5688$1l2agK
     g$make-violation$5783$1l2agK
     (record-constructor g$6753$5686$1l2agK))
   (g$violation?$5689$1l2agK
     g$violation?$5784$1l2agK
     (condition-predicate g$6752$5684$1l2agK))
   (g$6766$5690$1l2agK
     g$6766$5785$1l2agK
     (make-record-type-descriptor
       '&assertion
       g$6752$5684$1l2agK
       'g$6769$1l2agK
       '#f
       '#f
       '#()))
   (g$6768$5691$1l2agK g$6768$5786$1l2agK '#f)
   (g$6767$5692$1l2agK
     g$6767$5787$1l2agK
     (make-record-constructor-descriptor
       g$6766$5690$1l2agK
       g$6753$5686$1l2agK
       g$6768$5691$1l2agK))
   (g$6765$5693$1l2agK
     g$6765$5788$1l2agK
     (record-predicate g$6766$5690$1l2agK))
   (g$make-assertion-violation$5694$1l2agK
     g$make-assertion-violation$5789$1l2agK
     (record-constructor g$6767$5692$1l2agK))
   (g$assertion-violation?$5695$1l2agK
     g$assertion-violation?$5790$1l2agK
     (condition-predicate g$6766$5690$1l2agK))
   (g$6781$5696$1l2agK
     g$6781$5791$1l2agK
     (make-record-type-descriptor
       '&irritants
       g$6678$5651$1l2agK
       'g$6784$1l2agK
       '#f
       '#f
       '#((immutable irritants))))
   (g$6783$5697$1l2agK g$6783$5792$1l2agK '#f)
   (g$6782$5698$1l2agK
     g$6782$5793$1l2agK
     (make-record-constructor-descriptor
       g$6781$5696$1l2agK
       g$6679$5653$1l2agK
       g$6783$5697$1l2agK))
   (g$6780$5699$1l2agK
     g$6780$5794$1l2agK
     (record-predicate g$6781$5696$1l2agK))
   (g$make-irritants-condition$5700$1l2agK
     g$make-irritants-condition$5795$1l2agK
     (record-constructor g$6782$5698$1l2agK))
   (g$6779$5701$1l2agK
     g$6779$5796$1l2agK
     (record-accessor g$6781$5696$1l2agK '0))
   (g$irritants-condition?$5702$1l2agK
     g$irritants-condition?$5797$1l2agK
     (condition-predicate g$6781$5696$1l2agK))
   (g$condition-irritants$5703$1l2agK
     g$condition-irritants$5798$1l2agK
     (condition-accessor g$6781$5696$1l2agK g$6779$5701$1l2agK))
   (g$6798$5704$1l2agK
     g$6798$5799$1l2agK
     (make-record-type-descriptor
       '&who
       g$6678$5651$1l2agK
       'g$6801$1l2agK
       '#f
       '#f
       '#((immutable who))))
   (g$6800$5705$1l2agK g$6800$5800$1l2agK '#f)
   (g$6799$5706$1l2agK
     g$6799$5801$1l2agK
     (make-record-constructor-descriptor
       g$6798$5704$1l2agK
       g$6679$5653$1l2agK
       g$6800$5705$1l2agK))
   (g$6797$5707$1l2agK
     g$6797$5802$1l2agK
     (record-predicate g$6798$5704$1l2agK))
   (g$make-who-condition$5708$1l2agK
     g$make-who-condition$5803$1l2agK
     (record-constructor g$6799$5706$1l2agK))
   (g$6796$5709$1l2agK
     g$6796$5804$1l2agK
     (record-accessor g$6798$5704$1l2agK '0))
   (g$who-condition?$5710$1l2agK
     g$who-condition?$5805$1l2agK
     (condition-predicate g$6798$5704$1l2agK))
   (g$condition-who$5711$1l2agK
     g$condition-who$5806$1l2agK
     (condition-accessor g$6798$5704$1l2agK g$6796$5709$1l2agK))
   (g$6814$5712$1l2agK
     g$6814$5807$1l2agK
     (make-record-type-descriptor
       '&non-continuable
       g$6752$5684$1l2agK
       'g$6817$1l2agK
       '#f
       '#f
       '#()))
   (g$6816$5713$1l2agK g$6816$5808$1l2agK '#f)
   (g$6815$5714$1l2agK
     g$6815$5809$1l2agK
     (make-record-constructor-descriptor
       g$6814$5712$1l2agK
       g$6753$5686$1l2agK
       g$6816$5713$1l2agK))
   (g$6813$5715$1l2agK
     g$6813$5810$1l2agK
     (record-predicate g$6814$5712$1l2agK))
   (g$make-non-continuable-violation$5716$1l2agK
     g$make-non-continuable-violation$5811$1l2agK
     (record-constructor g$6815$5714$1l2agK))
   (g$non-continuable-violation?$5717$1l2agK
     g$non-continuable-violation?$5812$1l2agK
     (condition-predicate g$6814$5712$1l2agK))
   (g$6828$5718$1l2agK
     g$6828$5813$1l2agK
     (make-record-type-descriptor
       '&implementation-restriction
       g$6752$5684$1l2agK
       'g$6831$1l2agK
       '#f
       '#f
       '#()))
   (g$6830$5719$1l2agK g$6830$5814$1l2agK '#f)
   (g$6829$5720$1l2agK
     g$6829$5815$1l2agK
     (make-record-constructor-descriptor
       g$6828$5718$1l2agK
       g$6753$5686$1l2agK
       g$6830$5719$1l2agK))
   (g$6827$5721$1l2agK
     g$6827$5816$1l2agK
     (record-predicate g$6828$5718$1l2agK))
   (g$make-implementation-restriction-violation$5722$1l2agK
     g$make-implementation-restriction-violation$5817$1l2agK
     (record-constructor g$6829$5720$1l2agK))
   (g$implementation-restriction-violation?$5723$1l2agK
     g$implementation-restriction-violation?$5818$1l2agK
     (condition-predicate g$6828$5718$1l2agK))
   (g$6842$5724$1l2agK
     g$6842$5819$1l2agK
     (make-record-type-descriptor
       '&lexical
       g$6752$5684$1l2agK
       'g$6845$1l2agK
       '#f
       '#f
       '#()))
   (g$6844$5725$1l2agK g$6844$5820$1l2agK '#f)
   (g$6843$5726$1l2agK
     g$6843$5821$1l2agK
     (make-record-constructor-descriptor
       g$6842$5724$1l2agK
       g$6753$5686$1l2agK
       g$6844$5725$1l2agK))
   (g$6841$5727$1l2agK
     g$6841$5822$1l2agK
     (record-predicate g$6842$5724$1l2agK))
   (g$make-lexical-violation$5728$1l2agK
     g$make-lexical-violation$5823$1l2agK
     (record-constructor g$6843$5726$1l2agK))
   (g$lexical-violation?$5729$1l2agK
     g$lexical-violation?$5824$1l2agK
     (condition-predicate g$6842$5724$1l2agK))
   (g$6858$5730$1l2agK
     g$6858$5825$1l2agK
     (make-record-type-descriptor
       '&syntax
       g$6752$5684$1l2agK
       'g$6861$1l2agK
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6860$5731$1l2agK g$6860$5826$1l2agK '#f)
   (g$6859$5732$1l2agK
     g$6859$5827$1l2agK
     (make-record-constructor-descriptor
       g$6858$5730$1l2agK
       g$6753$5686$1l2agK
       g$6860$5731$1l2agK))
   (g$6857$5733$1l2agK
     g$6857$5828$1l2agK
     (record-predicate g$6858$5730$1l2agK))
   (g$make-syntax-violation$5734$1l2agK
     g$make-syntax-violation$5829$1l2agK
     (record-constructor g$6859$5732$1l2agK))
   (g$6855$5735$1l2agK
     g$6855$5830$1l2agK
     (record-accessor g$6858$5730$1l2agK '0))
   (g$6856$5736$1l2agK
     g$6856$5831$1l2agK
     (record-accessor g$6858$5730$1l2agK '1))
   (g$syntax-violation?$5737$1l2agK
     g$syntax-violation?$5832$1l2agK
     (condition-predicate g$6858$5730$1l2agK))
   (g$syntax-violation-form$5738$1l2agK
     g$syntax-violation-form$5833$1l2agK
     (condition-accessor g$6858$5730$1l2agK g$6855$5735$1l2agK))
   (g$syntax-violation-subform$5739$1l2agK
     g$syntax-violation-subform$5834$1l2agK
     (condition-accessor g$6858$5730$1l2agK g$6856$5736$1l2agK))
   (g$6876$5740$1l2agK
     g$6876$5835$1l2agK
     (make-record-type-descriptor
       '&undefined
       g$6752$5684$1l2agK
       'g$6879$1l2agK
       '#f
       '#f
       '#()))
   (g$6878$5741$1l2agK g$6878$5836$1l2agK '#f)
   (g$6877$5742$1l2agK
     g$6877$5837$1l2agK
     (make-record-constructor-descriptor
       g$6876$5740$1l2agK
       g$6753$5686$1l2agK
       g$6878$5741$1l2agK))
   (g$6875$5743$1l2agK
     g$6875$5838$1l2agK
     (record-predicate g$6876$5740$1l2agK))
   (g$make-undefined-violation$5744$1l2agK
     g$make-undefined-violation$5839$1l2agK
     (record-constructor g$6877$5742$1l2agK))
   (g$undefined-violation?$5745$1l2agK
     g$undefined-violation?$5840$1l2agK
     (condition-predicate g$6876$5740$1l2agK)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5841$1l2agK
     g$append!$5847$1l2agK
     (case-lambda
       ((g$a$5842$1l2agK . g$b$5843$1l2agK)
        (if (null? g$a$5842$1l2agK)
          g$b$5843$1l2agK
          (if (null? g$b$5843$1l2agK)
            g$a$5842$1l2agK
            (begin
              ((letrec ((g$f$5844$1l2agK
                          (case-lambda
                            ((g$a$5845$1l2agK)
                             ((case-lambda
                                ((g$n$5846$1l2agK)
                                 (if (null? g$n$5846$1l2agK)
                                   (set-cdr! g$a$5845$1l2agK g$b$5843$1l2agK)
                                   (g$f$5844$1l2agK g$n$5846$1l2agK))))
                              (cdr g$a$5845$1l2agK))))))
                 g$f$5844$1l2agK)
               g$a$5842$1l2agK)
              g$a$5842$1l2agK)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5848$1l2agK
     g$sign$5866$1l2agK
     (case-lambda
       ((g$n$5854$1l2agK)
        (if (> g$n$5854$1l2agK '0) '1 (if (< g$n$5854$1l2agK '0) '-1 '0)))))
   (g$quotient$5849$1l2agK
     g$quotient$5867$1l2agK
     (case-lambda
       ((g$n1$5855$1l2agK g$n2$5856$1l2agK)
        (begin
          (if (not (integer-valued? g$n1$5855$1l2agK))
            (assertion-violation 'quotient '"not an integer" g$n1$5855$1l2agK)
            (void))
          (if (not (integer-valued? g$n2$5856$1l2agK))
            (assertion-violation 'quotient '"not an integer" g$n2$5856$1l2agK)
            (void))
          (* (g$sign$5848$1l2agK g$n1$5855$1l2agK)
             (g$sign$5848$1l2agK g$n2$5856$1l2agK)
             (div (abs g$n1$5855$1l2agK) (abs g$n2$5856$1l2agK)))))))
   (g$remainder$5850$1l2agK
     g$remainder$5868$1l2agK
     (case-lambda
       ((g$n1$5857$1l2agK g$n2$5858$1l2agK)
        (begin
          (if (not (integer-valued? g$n1$5857$1l2agK))
            (assertion-violation 'remainder '"not an integer" g$n1$5857$1l2agK)
            (void))
          (if (not (integer-valued? g$n2$5858$1l2agK))
            (assertion-violation 'remainder '"not an integer" g$n2$5858$1l2agK)
            (void))
          (* (g$sign$5848$1l2agK g$n1$5857$1l2agK)
             (mod (abs g$n1$5857$1l2agK) (abs g$n2$5858$1l2agK)))))))
   (g$modulo$5851$1l2agK
     g$modulo$5869$1l2agK
     (case-lambda
       ((g$n1$5859$1l2agK g$n2$5860$1l2agK)
        (begin
          (if (not (integer-valued? g$n1$5859$1l2agK))
            (assertion-violation 'modulo '"not an integer" g$n1$5859$1l2agK)
            (void))
          (if (not (integer-valued? g$n2$5860$1l2agK))
            (assertion-violation 'modulo '"not an integer" g$n2$5860$1l2agK)
            (void))
          (* (g$sign$5848$1l2agK g$n2$5860$1l2agK)
             (mod (* (g$sign$5848$1l2agK g$n2$5860$1l2agK) g$n1$5859$1l2agK)
                  (abs g$n2$5860$1l2agK)))))))
   (g$make-promise$5852$1l2agK
     g$make-promise$5870$1l2agK
     (case-lambda
       ((g$proc$5861$1l2agK)
        ((case-lambda
           ((g$result-ready?$5862$1l2agK g$result$5863$1l2agK)
            (case-lambda
              (()
               (if g$result-ready?$5862$1l2agK
                 g$result$5863$1l2agK
                 ((case-lambda
                    ((g$x$5864$1l2agK)
                     (if g$result-ready?$5862$1l2agK
                       g$result$5863$1l2agK
                       (begin
                         (set! g$result-ready?$5862$1l2agK '#t)
                         (set! g$result$5863$1l2agK g$x$5864$1l2agK)
                         g$result$5863$1l2agK))))
                  (g$proc$5861$1l2agK)))))))
         '#f
         '#f))))
   (g$force$5853$1l2agK
     g$force$5871$1l2agK
     (case-lambda ((g$object$5865$1l2agK) (g$object$5865$1l2agK)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5872$1l2agK
     g$split$5898$1l2agK
     (case-lambda
       ((g$ls$5875$1l2agK)
        ((letrec ((g$loop$5876$1l2agK
                    (case-lambda
                      ((g$rest$5877$1l2agK
                         g$left$5878$1l2agK
                         g$right$5879$1l2agK)
                       (if (null? g$rest$5877$1l2agK)
                         (cons g$left$5878$1l2agK g$right$5879$1l2agK)
                         (if (null? (cdr g$rest$5877$1l2agK))
                           (cons
                             (cons (car g$rest$5877$1l2agK) g$left$5878$1l2agK)
                             g$right$5879$1l2agK)
                           (g$loop$5876$1l2agK
                             (g$cddr$5024$1l2agK g$rest$5877$1l2agK)
                             (cons (car g$rest$5877$1l2agK) g$left$5878$1l2agK)
                             (cons
                               (g$cadr$5022$1l2agK g$rest$5877$1l2agK)
                               g$right$5879$1l2agK))))))))
           g$loop$5876$1l2agK)
         g$ls$5875$1l2agK
         '()
         '()))))
   (g$reverse-it$5873$1l2agK
     g$reverse-it$5899$1l2agK
     (case-lambda
       ((g$head$5880$1l2agK g$tail$5881$1l2agK)
        (if (null? g$head$5880$1l2agK)
          g$tail$5881$1l2agK
          ((case-lambda
             ((g$hd$5882$1l2agK g$tl$5883$1l2agK)
              (g$reverse-it$5873$1l2agK
                g$tl$5883$1l2agK
                (cons g$hd$5882$1l2agK g$tail$5881$1l2agK))))
           (car g$head$5880$1l2agK)
           (cdr g$head$5880$1l2agK))))))
   (g$list-sort$5874$1l2agK
     g$list-sort$5900$1l2agK
     (case-lambda
       ((g$precedes?$5884$1l2agK g$ls$5885$1l2agK)
        ((case-lambda
           ((g$merge$5886$1l2agK)
            ((case-lambda
               (()
                (if (null? g$ls$5885$1l2agK)
                  '()
                  ((letrec ((g$helper$5887$1l2agK
                              (case-lambda
                                ((g$piece$5888$1l2agK)
                                 (if (null? (cdr g$piece$5888$1l2agK))
                                   g$piece$5888$1l2agK
                                   ((case-lambda
                                      ((g$parts$5889$1l2agK)
                                       (g$merge$5886$1l2agK
                                         (g$helper$5887$1l2agK
                                           (car g$parts$5889$1l2agK))
                                         (g$helper$5887$1l2agK
                                           (cdr g$parts$5889$1l2agK)))))
                                    (g$split$5872$1l2agK
                                      g$piece$5888$1l2agK)))))))
                     g$helper$5887$1l2agK)
                   g$ls$5885$1l2agK)))))))
         (case-lambda
           ((g$list-1$5890$1l2agK g$list-2$5891$1l2agK)
            ((letrec ((g$loop$5892$1l2agK
                        (case-lambda
                          ((g$source-1$5893$1l2agK
                             g$source-2$5894$1l2agK
                             g$so-far$5895$1l2agK)
                           (if (null? g$source-1$5893$1l2agK)
                             (g$reverse-it$5873$1l2agK
                               g$so-far$5895$1l2agK
                               g$source-2$5894$1l2agK)
                             (if (null? g$source-2$5894$1l2agK)
                               (g$reverse-it$5873$1l2agK
                                 g$so-far$5895$1l2agK
                                 g$source-1$5893$1l2agK)
                               ((case-lambda
                                  ((g$car-1$5896$1l2agK g$car-2$5897$1l2agK)
                                   (if (g$precedes?$5884$1l2agK
                                         g$car-2$5897$1l2agK
                                         g$car-1$5896$1l2agK)
                                     (g$loop$5892$1l2agK
                                       g$source-1$5893$1l2agK
                                       (cdr g$source-2$5894$1l2agK)
                                       (cons
                                         g$car-2$5897$1l2agK
                                         g$so-far$5895$1l2agK))
                                     (g$loop$5892$1l2agK
                                       g$source-2$5894$1l2agK
                                       (cdr g$source-1$5893$1l2agK)
                                       (cons
                                         g$car-1$5896$1l2agK
                                         g$so-far$5895$1l2agK)))))
                                (car g$source-1$5893$1l2agK)
                                (car g$source-2$5894$1l2agK))))))))
               g$loop$5892$1l2agK)
             g$list-1$5890$1l2agK
             g$list-2$5891$1l2agK
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$5944$1l2agK
     g$string-ci=?$6040$1l2agK
     (case-lambda
       ((g$a$5960$1l2agK g$b$5961$1l2agK . g$rest$5962$1l2agK)
        (begin
          (if (not (string? g$a$5960$1l2agK))
            (assertion-violation 'string-ci=? '"not a string" g$a$5960$1l2agK)
            (void))
          (if (not (string? g$b$5961$1l2agK))
            (assertion-violation 'string-ci=? '"not a string" g$b$5961$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$5963$1l2agK)
               (if (not (string? g$x$5963$1l2agK))
                 (assertion-violation
                   'string-ci=?
                   '"not a string"
                   g$x$5963$1l2agK)
                 (void))))
            g$rest$5962$1l2agK)
          ((letrec ((g$f$5964$1l2agK
                      (case-lambda
                        ((g$a$5965$1l2agK g$b$5966$1l2agK g$rest$5967$1l2agK)
                         (if (null? g$rest$5967$1l2agK)
                           (= (string-ci-compare
                                g$a$5965$1l2agK
                                g$b$5966$1l2agK)
                              '0)
                           (if (= (string-compare
                                    g$a$5965$1l2agK
                                    g$b$5966$1l2agK)
                                  '0)
                             (begin
                               '#f
                               (g$f$5964$1l2agK
                                 g$b$5966$1l2agK
                                 (car g$rest$5967$1l2agK)
                                 (cdr g$rest$5967$1l2agK)))
                             '#f))))))
             g$f$5964$1l2agK)
           g$a$5960$1l2agK
           g$b$5961$1l2agK
           g$rest$5962$1l2agK)))))
   (g$string-ci<?$5945$1l2agK
     g$string-ci<?$6041$1l2agK
     (case-lambda
       ((g$a$5968$1l2agK g$b$5969$1l2agK . g$rest$5970$1l2agK)
        (begin
          (if (not (string? g$a$5968$1l2agK))
            (assertion-violation 'string-ci<? '"not a string" g$a$5968$1l2agK)
            (void))
          (if (not (string? g$b$5969$1l2agK))
            (assertion-violation 'string-ci<? '"not a string" g$b$5969$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$5971$1l2agK)
               (if (not (string? g$x$5971$1l2agK))
                 (assertion-violation
                   'string-ci<?
                   '"not a string"
                   g$x$5971$1l2agK)
                 (void))))
            g$rest$5970$1l2agK)
          ((letrec ((g$f$5972$1l2agK
                      (case-lambda
                        ((g$a$5973$1l2agK g$b$5974$1l2agK g$rest$5975$1l2agK)
                         (if (null? g$rest$5975$1l2agK)
                           (< (string-ci-compare
                                g$a$5973$1l2agK
                                g$b$5974$1l2agK)
                              '0)
                           (if (< (string-compare
                                    g$a$5973$1l2agK
                                    g$b$5974$1l2agK)
                                  '0)
                             (begin
                               '#f
                               (g$f$5972$1l2agK
                                 g$b$5974$1l2agK
                                 (car g$rest$5975$1l2agK)
                                 (cdr g$rest$5975$1l2agK)))
                             '#f))))))
             g$f$5972$1l2agK)
           g$a$5968$1l2agK
           g$b$5969$1l2agK
           g$rest$5970$1l2agK)))))
   (g$string-ci>?$5946$1l2agK
     g$string-ci>?$6042$1l2agK
     (case-lambda
       ((g$a$5976$1l2agK g$b$5977$1l2agK . g$rest$5978$1l2agK)
        (begin
          (if (not (string? g$a$5976$1l2agK))
            (assertion-violation 'string-ci>? '"not a string" g$a$5976$1l2agK)
            (void))
          (if (not (string? g$b$5977$1l2agK))
            (assertion-violation 'string-ci>? '"not a string" g$b$5977$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$5979$1l2agK)
               (if (not (string? g$x$5979$1l2agK))
                 (assertion-violation
                   'string-ci>?
                   '"not a string"
                   g$x$5979$1l2agK)
                 (void))))
            g$rest$5978$1l2agK)
          ((letrec ((g$f$5980$1l2agK
                      (case-lambda
                        ((g$a$5981$1l2agK g$b$5982$1l2agK g$rest$5983$1l2agK)
                         (if (null? g$rest$5983$1l2agK)
                           (> (string-ci-compare
                                g$a$5981$1l2agK
                                g$b$5982$1l2agK)
                              '0)
                           (if (> (string-compare
                                    g$a$5981$1l2agK
                                    g$b$5982$1l2agK)
                                  '0)
                             (begin
                               '#f
                               (g$f$5980$1l2agK
                                 g$b$5982$1l2agK
                                 (car g$rest$5983$1l2agK)
                                 (cdr g$rest$5983$1l2agK)))
                             '#f))))))
             g$f$5980$1l2agK)
           g$a$5976$1l2agK
           g$b$5977$1l2agK
           g$rest$5978$1l2agK)))))
   (g$string-ci<=?$5947$1l2agK
     g$string-ci<=?$6043$1l2agK
     (case-lambda
       ((g$a$5984$1l2agK g$b$5985$1l2agK . g$rest$5986$1l2agK)
        (begin
          (if (not (string? g$a$5984$1l2agK))
            (assertion-violation 'string-ci<=? '"not a string" g$a$5984$1l2agK)
            (void))
          (if (not (string? g$b$5985$1l2agK))
            (assertion-violation 'string-ci<=? '"not a string" g$b$5985$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$5987$1l2agK)
               (if (not (string? g$x$5987$1l2agK))
                 (assertion-violation
                   'string-ci<=?
                   '"not a string"
                   g$x$5987$1l2agK)
                 (void))))
            g$rest$5986$1l2agK)
          ((letrec ((g$f$5988$1l2agK
                      (case-lambda
                        ((g$a$5989$1l2agK g$b$5990$1l2agK g$rest$5991$1l2agK)
                         (if (null? g$rest$5991$1l2agK)
                           (<= (string-ci-compare
                                 g$a$5989$1l2agK
                                 g$b$5990$1l2agK)
                               '0)
                           (if (<= (string-compare
                                     g$a$5989$1l2agK
                                     g$b$5990$1l2agK)
                                   '0)
                             (begin
                               '#f
                               (g$f$5988$1l2agK
                                 g$b$5990$1l2agK
                                 (car g$rest$5991$1l2agK)
                                 (cdr g$rest$5991$1l2agK)))
                             '#f))))))
             g$f$5988$1l2agK)
           g$a$5984$1l2agK
           g$b$5985$1l2agK
           g$rest$5986$1l2agK)))))
   (g$string-ci>=?$5948$1l2agK
     g$string-ci>=?$6044$1l2agK
     (case-lambda
       ((g$a$5992$1l2agK g$b$5993$1l2agK . g$rest$5994$1l2agK)
        (begin
          (if (not (string? g$a$5992$1l2agK))
            (assertion-violation 'string-ci>=? '"not a string" g$a$5992$1l2agK)
            (void))
          (if (not (string? g$b$5993$1l2agK))
            (assertion-violation 'string-ci>=? '"not a string" g$b$5993$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$5995$1l2agK)
               (if (not (string? g$x$5995$1l2agK))
                 (assertion-violation
                   'string-ci>=?
                   '"not a string"
                   g$x$5995$1l2agK)
                 (void))))
            g$rest$5994$1l2agK)
          ((letrec ((g$f$5996$1l2agK
                      (case-lambda
                        ((g$a$5997$1l2agK g$b$5998$1l2agK g$rest$5999$1l2agK)
                         (if (null? g$rest$5999$1l2agK)
                           (>= (string-ci-compare
                                 g$a$5997$1l2agK
                                 g$b$5998$1l2agK)
                               '0)
                           (if (>= (string-compare
                                     g$a$5997$1l2agK
                                     g$b$5998$1l2agK)
                                   '0)
                             (begin
                               '#f
                               (g$f$5996$1l2agK
                                 g$b$5998$1l2agK
                                 (car g$rest$5999$1l2agK)
                                 (cdr g$rest$5999$1l2agK)))
                             '#f))))))
             g$f$5996$1l2agK)
           g$a$5992$1l2agK
           g$b$5993$1l2agK
           g$rest$5994$1l2agK)))))
   (g$char-ci=?$5955$1l2agK
     g$char-ci=?$6045$1l2agK
     (case-lambda
       ((g$a$6000$1l2agK g$b$6001$1l2agK . g$rest$6002$1l2agK)
        (begin
          (if (not (char? g$a$6000$1l2agK))
            (assertion-violation 'char-ci=? '"not a char" g$a$6000$1l2agK)
            (void))
          (if (not (char? g$b$6001$1l2agK))
            (assertion-violation 'char-ci=? '"not a char" g$b$6001$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$6003$1l2agK)
               (if (not (char? g$x$6003$1l2agK))
                 (assertion-violation 'char-ci=? '"not a char" g$x$6003$1l2agK)
                 (void))))
            g$rest$6002$1l2agK)
          ((letrec ((g$f$6004$1l2agK
                      (case-lambda
                        ((g$a$6005$1l2agK g$b$6006$1l2agK g$rest$6007$1l2agK)
                         (if (null? g$rest$6007$1l2agK)
                           (= (char->integer (char-upcase g$a$6005$1l2agK))
                              (char->integer (char-upcase g$b$6006$1l2agK)))
                           (if (= (char->integer (char-upcase g$a$6005$1l2agK))
                                  (char->integer (char-upcase g$b$6006$1l2agK)))
                             (begin
                               '#f
                               (g$f$6004$1l2agK
                                 g$b$6006$1l2agK
                                 (car g$rest$6007$1l2agK)
                                 (cdr g$rest$6007$1l2agK)))
                             '#f))))))
             g$f$6004$1l2agK)
           g$a$6000$1l2agK
           g$b$6001$1l2agK
           g$rest$6002$1l2agK)))))
   (g$char-ci<?$5956$1l2agK
     g$char-ci<?$6046$1l2agK
     (case-lambda
       ((g$a$6008$1l2agK g$b$6009$1l2agK . g$rest$6010$1l2agK)
        (begin
          (if (not (char? g$a$6008$1l2agK))
            (assertion-violation 'char-ci<? '"not a char" g$a$6008$1l2agK)
            (void))
          (if (not (char? g$b$6009$1l2agK))
            (assertion-violation 'char-ci<? '"not a char" g$b$6009$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$6011$1l2agK)
               (if (not (char? g$x$6011$1l2agK))
                 (assertion-violation 'char-ci<? '"not a char" g$x$6011$1l2agK)
                 (void))))
            g$rest$6010$1l2agK)
          ((letrec ((g$f$6012$1l2agK
                      (case-lambda
                        ((g$a$6013$1l2agK g$b$6014$1l2agK g$rest$6015$1l2agK)
                         (if (null? g$rest$6015$1l2agK)
                           (< (char->integer (char-upcase g$a$6013$1l2agK))
                              (char->integer (char-upcase g$b$6014$1l2agK)))
                           (if (< (char->integer (char-upcase g$a$6013$1l2agK))
                                  (char->integer (char-upcase g$b$6014$1l2agK)))
                             (begin
                               '#f
                               (g$f$6012$1l2agK
                                 g$b$6014$1l2agK
                                 (car g$rest$6015$1l2agK)
                                 (cdr g$rest$6015$1l2agK)))
                             '#f))))))
             g$f$6012$1l2agK)
           g$a$6008$1l2agK
           g$b$6009$1l2agK
           g$rest$6010$1l2agK)))))
   (g$char-ci>?$5957$1l2agK
     g$char-ci>?$6047$1l2agK
     (case-lambda
       ((g$a$6016$1l2agK g$b$6017$1l2agK . g$rest$6018$1l2agK)
        (begin
          (if (not (char? g$a$6016$1l2agK))
            (assertion-violation 'char-ci>? '"not a char" g$a$6016$1l2agK)
            (void))
          (if (not (char? g$b$6017$1l2agK))
            (assertion-violation 'char-ci>? '"not a char" g$b$6017$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$6019$1l2agK)
               (if (not (char? g$x$6019$1l2agK))
                 (assertion-violation 'char-ci>? '"not a char" g$x$6019$1l2agK)
                 (void))))
            g$rest$6018$1l2agK)
          ((letrec ((g$f$6020$1l2agK
                      (case-lambda
                        ((g$a$6021$1l2agK g$b$6022$1l2agK g$rest$6023$1l2agK)
                         (if (null? g$rest$6023$1l2agK)
                           (> (char->integer (char-upcase g$a$6021$1l2agK))
                              (char->integer (char-upcase g$b$6022$1l2agK)))
                           (if (> (char->integer (char-upcase g$a$6021$1l2agK))
                                  (char->integer (char-upcase g$b$6022$1l2agK)))
                             (begin
                               '#f
                               (g$f$6020$1l2agK
                                 g$b$6022$1l2agK
                                 (car g$rest$6023$1l2agK)
                                 (cdr g$rest$6023$1l2agK)))
                             '#f))))))
             g$f$6020$1l2agK)
           g$a$6016$1l2agK
           g$b$6017$1l2agK
           g$rest$6018$1l2agK)))))
   (g$char-ci<=?$5958$1l2agK
     g$char-ci<=?$6048$1l2agK
     (case-lambda
       ((g$a$6024$1l2agK g$b$6025$1l2agK . g$rest$6026$1l2agK)
        (begin
          (if (not (char? g$a$6024$1l2agK))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6024$1l2agK)
            (void))
          (if (not (char? g$b$6025$1l2agK))
            (assertion-violation 'char-ci<=? '"not a char" g$b$6025$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$6027$1l2agK)
               (if (not (char? g$x$6027$1l2agK))
                 (assertion-violation 'char-ci<=? '"not a char" g$x$6027$1l2agK)
                 (void))))
            g$rest$6026$1l2agK)
          ((letrec ((g$f$6028$1l2agK
                      (case-lambda
                        ((g$a$6029$1l2agK g$b$6030$1l2agK g$rest$6031$1l2agK)
                         (if (null? g$rest$6031$1l2agK)
                           (<= (char->integer (char-upcase g$a$6029$1l2agK))
                               (char->integer (char-upcase g$b$6030$1l2agK)))
                           (if (<= (char->integer (char-upcase g$a$6029$1l2agK))
                                   (char->integer
                                     (char-upcase g$b$6030$1l2agK)))
                             (begin
                               '#f
                               (g$f$6028$1l2agK
                                 g$b$6030$1l2agK
                                 (car g$rest$6031$1l2agK)
                                 (cdr g$rest$6031$1l2agK)))
                             '#f))))))
             g$f$6028$1l2agK)
           g$a$6024$1l2agK
           g$b$6025$1l2agK
           g$rest$6026$1l2agK)))))
   (g$char-ci>=?$5959$1l2agK
     g$char-ci>=?$6049$1l2agK
     (case-lambda
       ((g$a$6032$1l2agK g$b$6033$1l2agK . g$rest$6034$1l2agK)
        (begin
          (if (not (char? g$a$6032$1l2agK))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6032$1l2agK)
            (void))
          (if (not (char? g$b$6033$1l2agK))
            (assertion-violation 'char-ci>=? '"not a char" g$b$6033$1l2agK)
            (void))
          (for-each
            (case-lambda
              ((g$x$6035$1l2agK)
               (if (not (char? g$x$6035$1l2agK))
                 (assertion-violation 'char-ci>=? '"not a char" g$x$6035$1l2agK)
                 (void))))
            g$rest$6034$1l2agK)
          ((letrec ((g$f$6036$1l2agK
                      (case-lambda
                        ((g$a$6037$1l2agK g$b$6038$1l2agK g$rest$6039$1l2agK)
                         (if (null? g$rest$6039$1l2agK)
                           (>= (char->integer (char-upcase g$a$6037$1l2agK))
                               (char->integer (char-upcase g$b$6038$1l2agK)))
                           (if (>= (char->integer (char-upcase g$a$6037$1l2agK))
                                   (char->integer
                                     (char-upcase g$b$6038$1l2agK)))
                             (begin
                               '#f
                               (g$f$6036$1l2agK
                                 g$b$6038$1l2agK
                                 (car g$rest$6039$1l2agK)
                                 (cdr g$rest$6039$1l2agK)))
                             '#f))))))
             g$f$6036$1l2agK)
           g$a$6032$1l2agK
           g$b$6033$1l2agK
           g$rest$6034$1l2agK))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6050$1l2agK
     g$bitwise-if$6097$1l2agK
     (case-lambda
       ((g$ei1$6057$1l2agK g$ei2$6058$1l2agK g$ei3$6059$1l2agK)
        (bitwise-ior
          (bitwise-and g$ei1$6057$1l2agK g$ei2$6058$1l2agK)
          (bitwise-and (bitwise-not g$ei1$6057$1l2agK) g$ei3$6059$1l2agK)))))
   (g$bitwise-copy-bit$6051$1l2agK
     g$bitwise-copy-bit$6098$1l2agK
     (case-lambda
       ((g$ei1$6060$1l2agK g$ei2$6061$1l2agK g$ei3$6062$1l2agK)
        ((case-lambda
           ((g$mask$6063$1l2agK)
            ((case-lambda
               (()
                (g$bitwise-if$6050$1l2agK
                  g$mask$6063$1l2agK
                  (g$bitwise-arithmetic-shift-left$6054$1l2agK
                    g$ei3$6062$1l2agK
                    g$ei2$6061$1l2agK)
                  g$ei1$6060$1l2agK))))))
         (g$bitwise-arithmetic-shift-left$6054$1l2agK '1 g$ei2$6061$1l2agK)))))
   (g$bitwise-bit-field$6052$1l2agK
     g$bitwise-bit-field$6099$1l2agK
     (case-lambda
       ((g$ei1$6064$1l2agK g$ei2$6065$1l2agK g$ei3$6066$1l2agK)
        ((case-lambda
           ((g$mask$6067$1l2agK)
            (g$bitwise-arithmetic-shift-right$6055$1l2agK
              (bitwise-and g$ei1$6064$1l2agK g$mask$6067$1l2agK)
              g$ei2$6065$1l2agK)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$6054$1l2agK
             '-1
             g$ei3$6066$1l2agK))))))
   (g$bitwise-copy-bit-field$6053$1l2agK
     g$bitwise-copy-bit-field$6100$1l2agK
     (case-lambda
       ((g$ei1$6068$1l2agK
          g$ei2$6069$1l2agK
          g$ei3$6070$1l2agK
          g$ei4$6071$1l2agK)
        ((case-lambda
           ((g$to$6072$1l2agK)
            ((case-lambda
               ((g$start$6073$1l2agK)
                ((case-lambda
                   ((g$end$6074$1l2agK)
                    ((case-lambda
                       ((g$from$6075$1l2agK)
                        ((case-lambda
                           ((g$mask1$6076$1l2agK)
                            ((case-lambda
                               ((g$mask2$6077$1l2agK)
                                ((case-lambda
                                   ((g$mask$6078$1l2agK)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$6050$1l2agK
                                          g$mask$6078$1l2agK
                                          (g$bitwise-arithmetic-shift-left$6054$1l2agK
                                            g$from$6075$1l2agK
                                            g$start$6073$1l2agK)
                                          g$to$6072$1l2agK))))))
                                 (bitwise-and
                                   g$mask1$6076$1l2agK
                                   g$mask2$6077$1l2agK))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$6054$1l2agK
                                 '-1
                                 g$end$6074$1l2agK)))))
                         (g$bitwise-arithmetic-shift-left$6054$1l2agK
                           '-1
                           g$start$6073$1l2agK))))
                     g$ei4$6071$1l2agK)))
                 g$ei3$6070$1l2agK)))
             g$ei2$6069$1l2agK)))
         g$ei1$6068$1l2agK))))
   (g$bitwise-arithmetic-shift-left$6054$1l2agK
     g$bitwise-arithmetic-shift-left$6101$1l2agK
     (case-lambda
       ((g$ei1$6079$1l2agK g$ei2$6080$1l2agK)
        (bitwise-arithmetic-shift g$ei1$6079$1l2agK g$ei2$6080$1l2agK))))
   (g$bitwise-arithmetic-shift-right$6055$1l2agK
     g$bitwise-arithmetic-shift-right$6102$1l2agK
     (case-lambda
       ((g$ei1$6081$1l2agK g$ei2$6082$1l2agK)
        (bitwise-arithmetic-shift g$ei1$6081$1l2agK (- g$ei2$6082$1l2agK)))))
   (g$bitwise-rotate-bit-field$6056$1l2agK
     g$bitwise-rotate-bit-field$6103$1l2agK
     (case-lambda
       ((g$ei1$6083$1l2agK
          g$ei2$6084$1l2agK
          g$ei3$6085$1l2agK
          g$ei4$6086$1l2agK)
        ((case-lambda
           ((g$n$6087$1l2agK)
            ((case-lambda
               ((g$start$6088$1l2agK)
                ((case-lambda
                   ((g$end$6089$1l2agK)
                    ((case-lambda
                       ((g$count$6090$1l2agK)
                        ((case-lambda
                           ((g$width$6091$1l2agK)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6091$1l2agK)
                                  ((case-lambda
                                     ((g$count$6092$1l2agK)
                                      ((case-lambda
                                         ((g$field0$6093$1l2agK)
                                          ((case-lambda
                                             ((g$field1$6094$1l2agK)
                                              ((case-lambda
                                                 ((g$field2$6095$1l2agK)
                                                  ((case-lambda
                                                     ((g$field$6096$1l2agK)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$6053$1l2agK
                                                            g$n$6087$1l2agK
                                                            g$start$6088$1l2agK
                                                            g$end$6089$1l2agK
                                                            g$field$6096$1l2agK))))))
                                                   (bitwise-ior
                                                     g$field1$6094$1l2agK
                                                     g$field2$6095$1l2agK))))
                                               (g$bitwise-arithmetic-shift-right$6055$1l2agK
                                                 g$field0$6093$1l2agK
                                                 (- g$width$6091$1l2agK
                                                    g$count$6092$1l2agK)))))
                                           (g$bitwise-arithmetic-shift-left$6054$1l2agK
                                             g$field0$6093$1l2agK
                                             g$count$6092$1l2agK))))
                                       (g$bitwise-bit-field$6052$1l2agK
                                         g$n$6087$1l2agK
                                         g$start$6088$1l2agK
                                         g$end$6089$1l2agK))))
                                   (mod g$count$6090$1l2agK
                                        g$width$6091$1l2agK))
                                  g$n$6087$1l2agK))))))
                         (- g$end$6089$1l2agK g$start$6088$1l2agK))))
                     g$ei4$6086$1l2agK)))
                 g$ei3$6085$1l2agK)))
             g$ei2$6084$1l2agK)))
         g$ei1$6083$1l2agK)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$6104$1l2agK
     g$fxif$6151$1l2agK
     (case-lambda
       ((g$fx1$6111$1l2agK g$fx2$6112$1l2agK g$fx3$6113$1l2agK)
        (fxior
          (fxand g$fx1$6111$1l2agK g$fx2$6112$1l2agK)
          (fxand (fxnot g$fx1$6111$1l2agK) g$fx3$6113$1l2agK)))))
   (g$fxcopy-bit$6105$1l2agK
     g$fxcopy-bit$6152$1l2agK
     (case-lambda
       ((g$fx1$6114$1l2agK g$fx2$6115$1l2agK g$fx3$6116$1l2agK)
        ((case-lambda
           ((g$mask$6117$1l2agK)
            ((case-lambda
               (()
                (g$fxif$6104$1l2agK
                  g$mask$6117$1l2agK
                  (g$fxarithmetic-shift-left$6108$1l2agK
                    g$fx3$6116$1l2agK
                    g$fx2$6115$1l2agK)
                  g$fx1$6114$1l2agK))))))
         (g$fxarithmetic-shift-left$6108$1l2agK '1 g$fx2$6115$1l2agK)))))
   (g$fxbit-field$6106$1l2agK
     g$fxbit-field$6153$1l2agK
     (case-lambda
       ((g$fx1$6118$1l2agK g$fx2$6119$1l2agK g$fx3$6120$1l2agK)
        ((case-lambda
           ((g$mask$6121$1l2agK)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$6109$1l2agK
                  (fxand g$fx1$6118$1l2agK g$mask$6121$1l2agK)
                  g$fx2$6119$1l2agK))))))
         (fxnot
           (g$fxarithmetic-shift-left$6108$1l2agK '-1 g$fx3$6120$1l2agK))))))
   (g$fxcopy-bit-field$6107$1l2agK
     g$fxcopy-bit-field$6154$1l2agK
     (case-lambda
       ((g$fx1$6122$1l2agK
          g$fx2$6123$1l2agK
          g$fx3$6124$1l2agK
          g$fx4$6125$1l2agK)
        ((case-lambda
           ((g$to$6126$1l2agK)
            ((case-lambda
               ((g$start$6127$1l2agK)
                ((case-lambda
                   ((g$end$6128$1l2agK)
                    ((case-lambda
                       ((g$from$6129$1l2agK)
                        ((case-lambda
                           ((g$mask1$6130$1l2agK)
                            ((case-lambda
                               ((g$mask2$6131$1l2agK)
                                ((case-lambda
                                   ((g$mask$6132$1l2agK)
                                    ((case-lambda
                                       (()
                                        (g$fxif$6104$1l2agK
                                          g$mask$6132$1l2agK
                                          (g$fxarithmetic-shift-left$6108$1l2agK
                                            g$from$6129$1l2agK
                                            g$start$6127$1l2agK)
                                          g$to$6126$1l2agK))))))
                                 (fxand
                                   g$mask1$6130$1l2agK
                                   g$mask2$6131$1l2agK))))
                             (fxnot
                               (g$fxarithmetic-shift-left$6108$1l2agK
                                 '-1
                                 g$end$6128$1l2agK)))))
                         (g$fxarithmetic-shift-left$6108$1l2agK
                           '-1
                           g$start$6127$1l2agK))))
                     g$fx4$6125$1l2agK)))
                 g$fx3$6124$1l2agK)))
             g$fx2$6123$1l2agK)))
         g$fx1$6122$1l2agK))))
   (g$fxarithmetic-shift-left$6108$1l2agK
     g$fxarithmetic-shift-left$6155$1l2agK
     (case-lambda
       ((g$fx1$6133$1l2agK g$fx2$6134$1l2agK)
        (fxarithmetic-shift g$fx1$6133$1l2agK g$fx2$6134$1l2agK))))
   (g$fxarithmetic-shift-right$6109$1l2agK
     g$fxarithmetic-shift-right$6156$1l2agK
     (case-lambda
       ((g$fx1$6135$1l2agK g$fx2$6136$1l2agK)
        (fxarithmetic-shift g$fx1$6135$1l2agK (- g$fx2$6136$1l2agK)))))
   (g$fxrotate-bit-field$6110$1l2agK
     g$fxrotate-bit-field$6157$1l2agK
     (case-lambda
       ((g$fx1$6137$1l2agK
          g$fx2$6138$1l2agK
          g$fx3$6139$1l2agK
          g$fx4$6140$1l2agK)
        ((case-lambda
           ((g$n$6141$1l2agK)
            ((case-lambda
               ((g$start$6142$1l2agK)
                ((case-lambda
                   ((g$end$6143$1l2agK)
                    ((case-lambda
                       ((g$count$6144$1l2agK)
                        ((case-lambda
                           ((g$width$6145$1l2agK)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6145$1l2agK)
                                  ((case-lambda
                                     ((g$count$6146$1l2agK)
                                      ((case-lambda
                                         ((g$field0$6147$1l2agK)
                                          ((case-lambda
                                             ((g$field1$6148$1l2agK)
                                              ((case-lambda
                                                 ((g$field2$6149$1l2agK)
                                                  ((case-lambda
                                                     ((g$field$6150$1l2agK)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$6107$1l2agK
                                                            g$n$6141$1l2agK
                                                            g$start$6142$1l2agK
                                                            g$end$6143$1l2agK
                                                            g$field$6150$1l2agK))))))
                                                   (fxior
                                                     g$field1$6148$1l2agK
                                                     g$field2$6149$1l2agK))))
                                               (g$fxarithmetic-shift-right$6109$1l2agK
                                                 g$field0$6147$1l2agK
                                                 (- g$width$6145$1l2agK
                                                    g$count$6146$1l2agK)))))
                                           (g$fxarithmetic-shift-left$6108$1l2agK
                                             g$field0$6147$1l2agK
                                             g$count$6146$1l2agK))))
                                       (g$fxbit-field$6106$1l2agK
                                         g$n$6141$1l2agK
                                         g$start$6142$1l2agK
                                         g$end$6143$1l2agK))))
                                   (mod g$count$6144$1l2agK
                                        g$width$6145$1l2agK))
                                  g$n$6141$1l2agK))))))
                         (- g$end$6143$1l2agK g$start$6142$1l2agK))))
                     g$fx4$6140$1l2agK)))
                 g$fx3$6139$1l2agK)))
             g$fx2$6138$1l2agK)))
         g$fx1$6137$1l2agK)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7280$6158$1l2agK
     g$7280$6170$1l2agK
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7283$1l2agK
       '#f
       '#f
       '#()))
   (g$7282$6159$1l2agK g$7282$6171$1l2agK '#f)
   (g$7281$6160$1l2agK
     g$7281$6172$1l2agK
     (make-record-constructor-descriptor
       g$7280$6158$1l2agK
       &implementation-restriction-rcd
       g$7282$6159$1l2agK))
   (g$7279$6161$1l2agK
     g$7279$6173$1l2agK
     (record-predicate g$7280$6158$1l2agK))
   (g$make-no-infinities-violation$6162$1l2agK
     g$make-no-infinities-violation$6174$1l2agK
     (record-constructor g$7281$6160$1l2agK))
   (g$no-infinities-violation?$6163$1l2agK
     g$no-infinities-violation?$6175$1l2agK
     (condition-predicate g$7280$6158$1l2agK))
   (g$7294$6164$1l2agK
     g$7294$6176$1l2agK
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7297$1l2agK
       '#f
       '#f
       '#()))
   (g$7296$6165$1l2agK g$7296$6177$1l2agK '#f)
   (g$7295$6166$1l2agK
     g$7295$6178$1l2agK
     (make-record-constructor-descriptor
       g$7294$6164$1l2agK
       &implementation-restriction-rcd
       g$7296$6165$1l2agK))
   (g$7293$6167$1l2agK
     g$7293$6179$1l2agK
     (record-predicate g$7294$6164$1l2agK))
   (g$make-no-nans-violation$6168$1l2agK
     g$make-no-nans-violation$6180$1l2agK
     (record-constructor g$7295$6166$1l2agK))
   (g$no-nans-violation?$6169$1l2agK
     g$no-nans-violation?$6181$1l2agK
     (condition-predicate g$7294$6164$1l2agK)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7309$6182$1l2agK
     g$7309$6262$1l2agK
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7312$1l2agK
       '#f
       '#f
       '#()))
   (g$7311$6183$1l2agK g$7311$6263$1l2agK '#f)
   (g$7310$6184$1l2agK
     g$7310$6264$1l2agK
     (make-record-constructor-descriptor
       g$7309$6182$1l2agK
       &error-rcd
       g$7311$6183$1l2agK))
   (g$7308$6185$1l2agK
     g$7308$6265$1l2agK
     (record-predicate g$7309$6182$1l2agK))
   (g$make-i/o-error$6186$1l2agK
     g$make-i/o-error$6266$1l2agK
     (record-constructor g$7310$6184$1l2agK))
   (g$i/o-error?$6187$1l2agK
     g$i/o-error?$6267$1l2agK
     (condition-predicate g$7309$6182$1l2agK))
   (g$7323$6188$1l2agK
     g$7323$6268$1l2agK
     (make-record-type-descriptor
       '&i/o-read
       g$7309$6182$1l2agK
       'g$7326$1l2agK
       '#f
       '#f
       '#()))
   (g$7325$6189$1l2agK g$7325$6269$1l2agK '#f)
   (g$7324$6190$1l2agK
     g$7324$6270$1l2agK
     (make-record-constructor-descriptor
       g$7323$6188$1l2agK
       g$7310$6184$1l2agK
       g$7325$6189$1l2agK))
   (g$7322$6191$1l2agK
     g$7322$6271$1l2agK
     (record-predicate g$7323$6188$1l2agK))
   (g$make-i/o-read-error$6192$1l2agK
     g$make-i/o-read-error$6272$1l2agK
     (record-constructor g$7324$6190$1l2agK))
   (g$i/o-read-error?$6193$1l2agK
     g$i/o-read-error?$6273$1l2agK
     (condition-predicate g$7323$6188$1l2agK))
   (g$7337$6194$1l2agK
     g$7337$6274$1l2agK
     (make-record-type-descriptor
       '&i/o-write
       g$7309$6182$1l2agK
       'g$7340$1l2agK
       '#f
       '#f
       '#()))
   (g$7339$6195$1l2agK g$7339$6275$1l2agK '#f)
   (g$7338$6196$1l2agK
     g$7338$6276$1l2agK
     (make-record-constructor-descriptor
       g$7337$6194$1l2agK
       g$7310$6184$1l2agK
       g$7339$6195$1l2agK))
   (g$7336$6197$1l2agK
     g$7336$6277$1l2agK
     (record-predicate g$7337$6194$1l2agK))
   (g$make-i/o-write-error$6198$1l2agK
     g$make-i/o-write-error$6278$1l2agK
     (record-constructor g$7338$6196$1l2agK))
   (g$i/o-write-error?$6199$1l2agK
     g$i/o-write-error?$6279$1l2agK
     (condition-predicate g$7337$6194$1l2agK))
   (g$7352$6200$1l2agK
     g$7352$6280$1l2agK
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7309$6182$1l2agK
       'g$7355$1l2agK
       '#f
       '#f
       '#((immutable position))))
   (g$7354$6201$1l2agK g$7354$6281$1l2agK '#f)
   (g$7353$6202$1l2agK
     g$7353$6282$1l2agK
     (make-record-constructor-descriptor
       g$7352$6200$1l2agK
       g$7310$6184$1l2agK
       g$7354$6201$1l2agK))
   (g$7351$6203$1l2agK
     g$7351$6283$1l2agK
     (record-predicate g$7352$6200$1l2agK))
   (g$make-i/o-invalid-position-error$6204$1l2agK
     g$make-i/o-invalid-position-error$6284$1l2agK
     (record-constructor g$7353$6202$1l2agK))
   (g$7350$6205$1l2agK
     g$7350$6285$1l2agK
     (record-accessor g$7352$6200$1l2agK '0))
   (g$i/o-invalid-position-error?$6206$1l2agK
     g$i/o-invalid-position-error?$6286$1l2agK
     (condition-predicate g$7352$6200$1l2agK))
   (g$i/o-error-position$6207$1l2agK
     g$i/o-error-position$6287$1l2agK
     (condition-accessor g$7352$6200$1l2agK g$7350$6205$1l2agK))
   (g$7369$6208$1l2agK
     g$7369$6288$1l2agK
     (make-record-type-descriptor
       '&i/o-filename
       g$7309$6182$1l2agK
       'g$7372$1l2agK
       '#f
       '#f
       '#((immutable filename))))
   (g$7371$6209$1l2agK g$7371$6289$1l2agK '#f)
   (g$7370$6210$1l2agK
     g$7370$6290$1l2agK
     (make-record-constructor-descriptor
       g$7369$6208$1l2agK
       g$7310$6184$1l2agK
       g$7371$6209$1l2agK))
   (g$7368$6211$1l2agK
     g$7368$6291$1l2agK
     (record-predicate g$7369$6208$1l2agK))
   (g$make-i/o-filename-error$6212$1l2agK
     g$make-i/o-filename-error$6292$1l2agK
     (record-constructor g$7370$6210$1l2agK))
   (g$7367$6213$1l2agK
     g$7367$6293$1l2agK
     (record-accessor g$7369$6208$1l2agK '0))
   (g$i/o-filename-error?$6214$1l2agK
     g$i/o-filename-error?$6294$1l2agK
     (condition-predicate g$7369$6208$1l2agK))
   (g$i/o-error-filename$6215$1l2agK
     g$i/o-error-filename$6295$1l2agK
     (condition-accessor g$7369$6208$1l2agK g$7367$6213$1l2agK))
   (g$7385$6216$1l2agK
     g$7385$6296$1l2agK
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7369$6208$1l2agK
       'g$7388$1l2agK
       '#f
       '#f
       '#()))
   (g$7387$6217$1l2agK g$7387$6297$1l2agK '#f)
   (g$7386$6218$1l2agK
     g$7386$6298$1l2agK
     (make-record-constructor-descriptor
       g$7385$6216$1l2agK
       g$7370$6210$1l2agK
       g$7387$6217$1l2agK))
   (g$7384$6219$1l2agK
     g$7384$6299$1l2agK
     (record-predicate g$7385$6216$1l2agK))
   (g$make-i/o-file-protection-error$6220$1l2agK
     g$make-i/o-file-protection-error$6300$1l2agK
     (record-constructor g$7386$6218$1l2agK))
   (g$i/o-file-protection-error?$6221$1l2agK
     g$i/o-file-protection-error?$6301$1l2agK
     (condition-predicate g$7385$6216$1l2agK))
   (g$7399$6222$1l2agK
     g$7399$6302$1l2agK
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7385$6216$1l2agK
       'g$7402$1l2agK
       '#f
       '#f
       '#()))
   (g$7401$6223$1l2agK g$7401$6303$1l2agK '#f)
   (g$7400$6224$1l2agK
     g$7400$6304$1l2agK
     (make-record-constructor-descriptor
       g$7399$6222$1l2agK
       g$7386$6218$1l2agK
       g$7401$6223$1l2agK))
   (g$7398$6225$1l2agK
     g$7398$6305$1l2agK
     (record-predicate g$7399$6222$1l2agK))
   (g$make-i/o-file-is-read-only-error$6226$1l2agK
     g$make-i/o-file-is-read-only-error$6306$1l2agK
     (record-constructor g$7400$6224$1l2agK))
   (g$i/o-file-is-read-only-error?$6227$1l2agK
     g$i/o-file-is-read-only-error?$6307$1l2agK
     (condition-predicate g$7399$6222$1l2agK))
   (g$7413$6228$1l2agK
     g$7413$6308$1l2agK
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7369$6208$1l2agK
       'g$7416$1l2agK
       '#f
       '#f
       '#()))
   (g$7415$6229$1l2agK g$7415$6309$1l2agK '#f)
   (g$7414$6230$1l2agK
     g$7414$6310$1l2agK
     (make-record-constructor-descriptor
       g$7413$6228$1l2agK
       g$7370$6210$1l2agK
       g$7415$6229$1l2agK))
   (g$7412$6231$1l2agK
     g$7412$6311$1l2agK
     (record-predicate g$7413$6228$1l2agK))
   (g$make-i/o-file-already-exists-error$6232$1l2agK
     g$make-i/o-file-already-exists-error$6312$1l2agK
     (record-constructor g$7414$6230$1l2agK))
   (g$i/o-file-already-exists-error?$6233$1l2agK
     g$i/o-file-already-exists-error?$6313$1l2agK
     (condition-predicate g$7413$6228$1l2agK))
   (g$7427$6234$1l2agK
     g$7427$6314$1l2agK
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7369$6208$1l2agK
       'g$7430$1l2agK
       '#f
       '#f
       '#()))
   (g$7429$6235$1l2agK g$7429$6315$1l2agK '#f)
   (g$7428$6236$1l2agK
     g$7428$6316$1l2agK
     (make-record-constructor-descriptor
       g$7427$6234$1l2agK
       g$7370$6210$1l2agK
       g$7429$6235$1l2agK))
   (g$7426$6237$1l2agK
     g$7426$6317$1l2agK
     (record-predicate g$7427$6234$1l2agK))
   (g$make-i/o-file-does-not-exist-error$6238$1l2agK
     g$make-i/o-file-does-not-exist-error$6318$1l2agK
     (record-constructor g$7428$6236$1l2agK))
   (g$i/o-file-does-not-exist-error?$6239$1l2agK
     g$i/o-file-does-not-exist-error?$6319$1l2agK
     (condition-predicate g$7427$6234$1l2agK))
   (g$7442$6240$1l2agK
     g$7442$6320$1l2agK
     (make-record-type-descriptor
       '&i/o-port
       g$7309$6182$1l2agK
       'g$7445$1l2agK
       '#f
       '#f
       '#((immutable port))))
   (g$7444$6241$1l2agK g$7444$6321$1l2agK '#f)
   (g$7443$6242$1l2agK
     g$7443$6322$1l2agK
     (make-record-constructor-descriptor
       g$7442$6240$1l2agK
       g$7310$6184$1l2agK
       g$7444$6241$1l2agK))
   (g$7441$6243$1l2agK
     g$7441$6323$1l2agK
     (record-predicate g$7442$6240$1l2agK))
   (g$make-i/o-port-error$6244$1l2agK
     g$make-i/o-port-error$6324$1l2agK
     (record-constructor g$7443$6242$1l2agK))
   (g$7440$6245$1l2agK
     g$7440$6325$1l2agK
     (record-accessor g$7442$6240$1l2agK '0))
   (g$i/o-port-error?$6246$1l2agK
     g$i/o-port-error?$6326$1l2agK
     (condition-predicate g$7442$6240$1l2agK))
   (g$i/o-error-port$6247$1l2agK
     g$i/o-error-port$6327$1l2agK
     (condition-accessor g$7442$6240$1l2agK g$7440$6245$1l2agK))
   (g$7458$6248$1l2agK
     g$7458$6328$1l2agK
     (make-record-type-descriptor
       '&i/o-decoding
       g$7442$6240$1l2agK
       'g$7461$1l2agK
       '#f
       '#f
       '#()))
   (g$7460$6249$1l2agK g$7460$6329$1l2agK '#f)
   (g$7459$6250$1l2agK
     g$7459$6330$1l2agK
     (make-record-constructor-descriptor
       g$7458$6248$1l2agK
       g$7443$6242$1l2agK
       g$7460$6249$1l2agK))
   (g$7457$6251$1l2agK
     g$7457$6331$1l2agK
     (record-predicate g$7458$6248$1l2agK))
   (g$make-i/o-decoding-error$6252$1l2agK
     g$make-i/o-decoding-error$6332$1l2agK
     (record-constructor g$7459$6250$1l2agK))
   (g$i/o-decoding-error?$6253$1l2agK
     g$i/o-decoding-error?$6333$1l2agK
     (condition-predicate g$7458$6248$1l2agK))
   (g$7473$6254$1l2agK
     g$7473$6334$1l2agK
     (make-record-type-descriptor
       '&i/o-encoding
       g$7442$6240$1l2agK
       'g$7476$1l2agK
       '#f
       '#f
       '#((immutable char))))
   (g$7475$6255$1l2agK g$7475$6335$1l2agK '#f)
   (g$7474$6256$1l2agK
     g$7474$6336$1l2agK
     (make-record-constructor-descriptor
       g$7473$6254$1l2agK
       g$7443$6242$1l2agK
       g$7475$6255$1l2agK))
   (g$7472$6257$1l2agK
     g$7472$6337$1l2agK
     (record-predicate g$7473$6254$1l2agK))
   (g$make-i/o-encoding-error$6258$1l2agK
     g$make-i/o-encoding-error$6338$1l2agK
     (record-constructor g$7474$6256$1l2agK))
   (g$7471$6259$1l2agK
     g$7471$6339$1l2agK
     (record-accessor g$7473$6254$1l2agK '0))
   (g$i/o-encoding-error?$6260$1l2agK
     g$i/o-encoding-error?$6340$1l2agK
     (condition-predicate g$7473$6254$1l2agK))
   (g$i/o-encoding-error-char$6261$1l2agK
     g$i/o-encoding-error-char$6341$1l2agK
     (condition-accessor g$7473$6254$1l2agK g$7471$6259$1l2agK)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6342$1l2agK
     g$get-output-string$6350$1l2agK
     (case-lambda
       ((g$port$6346$1l2agK)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6346$1l2agK))))
   (g$open-output-string$6343$1l2agK
     g$open-output-string$6351$1l2agK
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6344$1l2agK
     g$open-string-output-port$6352$1l2agK
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6347$1l2agK)
            (values
              g$p$6347$1l2agK
              (case-lambda
                (() (g$get-output-string$6342$1l2agK g$p$6347$1l2agK))))))
         (g$open-output-string$6343$1l2agK)))))
   (g$port?$6345$1l2agK
     g$port?$6353$1l2agK
     (case-lambda
       ((g$obj$6348$1l2agK)
        ((case-lambda
           ((g$t$6349$1l2agK)
            (if g$t$6349$1l2agK
              g$t$6349$1l2agK
              (begin '#f (binary-port? g$obj$6348$1l2agK)))))
         (textual-port? g$obj$6348$1l2agK))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6360$1l2agK
     g$with-input-from-file$6386$1l2agK
     (case-lambda
       ((g$filename$6364$1l2agK g$thunk$6365$1l2agK)
        ((case-lambda
           ((g$current-input-port$6368$1l2agK g$t$6369$1l2agK)
            ((case-lambda
               ((g$swap$6370$1l2agK)
                (dynamic-wind
                  g$swap$6370$1l2agK
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6365$1l2agK)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6370$1l2agK)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6371$1l2agK)
                    (begin
                      (g$current-input-port$6368$1l2agK g$t$6369$1l2agK)
                      (set! g$t$6369$1l2agK g$t$6371$1l2agK))))
                 (g$current-input-port$6368$1l2agK)))))))
         current-input-port
         (open-input-file g$filename$6364$1l2agK)))))
   (g$with-output-to-file$6361$1l2agK
     g$with-output-to-file$6387$1l2agK
     (case-lambda
       ((g$filename$6372$1l2agK g$thunk$6373$1l2agK)
        ((case-lambda
           ((g$current-output-port$6376$1l2agK g$t$6377$1l2agK)
            ((case-lambda
               ((g$swap$6378$1l2agK)
                (dynamic-wind
                  g$swap$6378$1l2agK
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6373$1l2agK)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6378$1l2agK)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6379$1l2agK)
                    (begin
                      (g$current-output-port$6376$1l2agK g$t$6377$1l2agK)
                      (set! g$t$6377$1l2agK g$t$6379$1l2agK))))
                 (g$current-output-port$6376$1l2agK)))))))
         current-output-port
         (open-output-file g$filename$6372$1l2agK)))))
   (g$call-with-input-file$6362$1l2agK
     g$call-with-input-file$6388$1l2agK
     (case-lambda
       ((g$filename$6380$1l2agK g$proc$6381$1l2agK)
        ((case-lambda
           ((g$p$6382$1l2agK)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6381$1l2agK g$p$6382$1l2agK)))
              (case-lambda (() (close-input-port g$p$6382$1l2agK))))))
         (open-input-file g$filename$6380$1l2agK)))))
   (g$call-with-output-file$6363$1l2agK
     g$call-with-output-file$6389$1l2agK
     (case-lambda
       ((g$filename$6383$1l2agK g$proc$6384$1l2agK)
        ((case-lambda
           ((g$p$6385$1l2agK)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6384$1l2agK g$p$6385$1l2agK)))
              (case-lambda (() (close-output-port g$p$6385$1l2agK))))))
         (open-output-file g$filename$6383$1l2agK))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7540$6390$1l2agK
     g$7540$6496$1l2agK
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7542$6391$1l2agK g$7542$6497$1l2agK '#f)
   (g$7541$6392$1l2agK
     g$7541$6498$1l2agK
     (make-record-constructor-descriptor
       g$7540$6390$1l2agK
       '#f
       g$7542$6391$1l2agK))
   (g$enum?$6393$1l2agK
     g$enum?$6499$1l2agK
     (record-predicate g$7540$6390$1l2agK))
   (g$make-enum$6394$1l2agK
     g$make-enum$6500$1l2agK
     (record-constructor g$7541$6392$1l2agK))
   (g$enum-value$6395$1l2agK
     g$enum-value$6501$1l2agK
     (record-accessor g$7540$6390$1l2agK '0))
   (g$enum-info$6396$1l2agK
     g$enum-info$6502$1l2agK
     (record-accessor g$7540$6390$1l2agK '1))
   (g$7553$6397$1l2agK
     g$7553$6503$1l2agK
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7555$6398$1l2agK g$7555$6504$1l2agK '#f)
   (g$7554$6399$1l2agK
     g$7554$6505$1l2agK
     (make-record-constructor-descriptor
       g$7553$6397$1l2agK
       '#f
       g$7555$6398$1l2agK))
   (g$enum-universe?$6400$1l2agK
     g$enum-universe?$6506$1l2agK
     (record-predicate g$7553$6397$1l2agK))
   (g$make-enum-universe$6401$1l2agK
     g$make-enum-universe$6507$1l2agK
     (record-constructor g$7554$6399$1l2agK))
   (g$enum-universe-id$6402$1l2agK
     g$enum-universe-id$6508$1l2agK
     (record-accessor g$7553$6397$1l2agK '0))
   (g$enum-universe-symbols$6403$1l2agK
     g$enum-universe-symbols$6509$1l2agK
     (record-accessor g$7553$6397$1l2agK '1))
   (g$enum-universe-mapping$6404$1l2agK
     g$enum-universe-mapping$6510$1l2agK
     (record-accessor g$7553$6397$1l2agK '2))
   (g$enum-universe-value$6405$1l2agK
     g$enum-universe-value$6511$1l2agK
     (record-accessor g$7553$6397$1l2agK '3))
   (g$enum-type=?$6406$1l2agK
     g$enum-type=?$6512$1l2agK
     (case-lambda
       ((g$enumset1$6426$1l2agK g$enumset2$6427$1l2agK)
        (eq? (g$enum-universe-id$6402$1l2agK
               (g$enum-info$6396$1l2agK g$enumset1$6426$1l2agK))
             (g$enum-universe-id$6402$1l2agK
               (g$enum-info$6396$1l2agK g$enumset2$6427$1l2agK))))))
   (g$get-symbols$6407$1l2agK
     g$get-symbols$6513$1l2agK
     (case-lambda
       ((g$enumset$6428$1l2agK)
        (g$enum-universe-symbols$6403$1l2agK
          (g$enum-info$6396$1l2agK g$enumset$6428$1l2agK)))))
   (g$get-value$6408$1l2agK
     g$get-value$6514$1l2agK
     (case-lambda
       ((g$enumset$6429$1l2agK g$s$6430$1l2agK)
        (g$hashtable-ref$5299$1l2agK
          (g$enum-universe-mapping$6404$1l2agK
            (g$enum-info$6396$1l2agK g$enumset$6429$1l2agK))
          g$s$6430$1l2agK
          '#f))))
   (g$assert-enum$6409$1l2agK
     g$assert-enum$6515$1l2agK
     (case-lambda
       ((g$who$6431$1l2agK g$enumset$6432$1l2agK)
        (if (not (g$enum?$6393$1l2agK g$enumset$6432$1l2agK))
          (assertion-violation
            g$who$6431$1l2agK
            '"not an enumeration"
            g$enumset$6432$1l2agK)
          (void)))))
   (g$make-info$6410$1l2agK
     g$make-info$6516$1l2agK
     (case-lambda
       ((g$symbols$6433$1l2agK)
        ((case-lambda
           ((g$ht$6434$1l2agK)
            ((letrec ((g$f$6435$1l2agK
                        (case-lambda
                          ((g$s$6436$1l2agK g$a$6437$1l2agK g$mask$6438$1l2agK)
                           (if (null? g$s$6436$1l2agK)
                             (values
                               (reverse! g$a$6437$1l2agK)
                               g$ht$6434$1l2agK
                               (- g$mask$6438$1l2agK '1))
                             ((case-lambda
                                ((g$n$6439$1l2agK)
                                 (if (symbol? g$n$6439$1l2agK)
                                   (if (g$hashtable-contains?$5302$1l2agK
                                         g$ht$6434$1l2agK
                                         g$n$6439$1l2agK)
                                     (g$f$6435$1l2agK
                                       (cdr g$s$6436$1l2agK)
                                       g$a$6437$1l2agK
                                       g$mask$6438$1l2agK)
                                     (begin
                                       (g$hashtable-set!$5300$1l2agK
                                         g$ht$6434$1l2agK
                                         g$n$6439$1l2agK
                                         g$mask$6438$1l2agK)
                                       (g$f$6435$1l2agK
                                         (cdr g$s$6436$1l2agK)
                                         (cons g$n$6439$1l2agK g$a$6437$1l2agK)
                                         (g$bitwise-arithmetic-shift-left$6101$1l2agK
                                           g$mask$6438$1l2agK
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6439$1l2agK))))
                              (car g$s$6436$1l2agK)))))))
               g$f$6435$1l2agK)
             g$symbols$6433$1l2agK
             '()
             '1)))
         (g$make-eq-hashtable$5296$1l2agK)))))
   (g$make-enumeration$6411$1l2agK
     g$make-enumeration$6517$1l2agK
     (case-lambda
       ((g$symbols$6440$1l2agK)
        (call-with-values
          (case-lambda (() (g$make-info$6410$1l2agK g$symbols$6440$1l2agK)))
          (case-lambda
            ((g$s$6444$1l2agK g$mapping$6445$1l2agK g$mask$6446$1l2agK)
             ((case-lambda
                ((g$mask$6447$1l2agK g$mapping$6448$1l2agK g$s$6449$1l2agK)
                 (g$make-enum$6394$1l2agK
                   g$mask$6447$1l2agK
                   (g$make-enum-universe$6401$1l2agK
                     (gensym)
                     g$s$6449$1l2agK
                     g$mapping$6448$1l2agK
                     g$mask$6447$1l2agK))))
              g$mask$6446$1l2agK
              g$mapping$6445$1l2agK
              g$s$6444$1l2agK)))))))
   (g$enum-set-universe$6412$1l2agK
     g$enum-set-universe$6518$1l2agK
     (case-lambda
       ((g$enumset$6450$1l2agK)
        (begin
          (g$assert-enum$6409$1l2agK 'enum-set-universe g$enumset$6450$1l2agK)
          ((case-lambda
             ((g$ei$6451$1l2agK)
              (g$make-enum$6394$1l2agK
                (g$enum-universe-value$6405$1l2agK g$ei$6451$1l2agK)
                g$ei$6451$1l2agK)))
           (g$enum-info$6396$1l2agK g$enumset$6450$1l2agK))))))
   (g$enum-set-indexer$6413$1l2agK
     g$enum-set-indexer$6519$1l2agK
     (case-lambda
       ((g$enumset$6452$1l2agK)
        (begin
          (g$assert-enum$6409$1l2agK 'enum-set-indexer g$enumset$6452$1l2agK)
          (case-lambda
            ((g$symbol$6453$1l2agK)
             (begin
               (if (not (symbol? g$symbol$6453$1l2agK))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6453$1l2agK)
                 (void))
               ((case-lambda
                  ((g$v$6454$1l2agK)
                   (if g$v$6454$1l2agK
                     (- (bitwise-length g$v$6454$1l2agK) '1)
                     '#f)))
                (g$get-value$6408$1l2agK
                  g$enumset$6452$1l2agK
                  g$symbol$6453$1l2agK)))))))))
   (g$enum-set-constructor$6414$1l2agK
     g$enum-set-constructor$6520$1l2agK
     (case-lambda
       ((g$enumset$6455$1l2agK)
        (begin
          (g$assert-enum$6409$1l2agK
            'enum-set-constructor
            g$enumset$6455$1l2agK)
          (case-lambda
            ((g$symbols$6456$1l2agK)
             ((letrec ((g$f$6457$1l2agK
                         (case-lambda
                           ((g$v$6458$1l2agK g$s$6459$1l2agK)
                            (if (null? g$s$6459$1l2agK)
                              (g$make-enum$6394$1l2agK
                                g$v$6458$1l2agK
                                (g$enum-info$6396$1l2agK g$enumset$6455$1l2agK))
                              ((case-lambda
                                 ((g$n$6460$1l2agK)
                                  (if (symbol? g$n$6460$1l2agK)
                                    ((case-lambda
                                       ((g$v*$6461$1l2agK)
                                        (if g$v*$6461$1l2agK
                                          (g$f$6457$1l2agK
                                            (bitwise-ior
                                              g$v$6458$1l2agK
                                              g$v*$6461$1l2agK)
                                            (cdr g$s$6459$1l2agK))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6460$1l2agK))))
                                     (g$get-value$6408$1l2agK
                                       g$enumset$6455$1l2agK
                                       g$n$6460$1l2agK))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6460$1l2agK))))
                               (car g$s$6459$1l2agK)))))))
                g$f$6457$1l2agK)
              '0
              g$symbols$6456$1l2agK)))))))
   (g$enum-set->list$6415$1l2agK
     g$enum-set->list$6521$1l2agK
     (case-lambda
       ((g$enumset$6462$1l2agK)
        (begin
          (g$assert-enum$6409$1l2agK 'enum-set->list g$enumset$6462$1l2agK)
          ((case-lambda
             ((g$value$6463$1l2agK)
              ((letrec ((g$f$6464$1l2agK
                          (case-lambda
                            ((g$s$6465$1l2agK g$l$6466$1l2agK)
                             (if (null? g$s$6465$1l2agK)
                               (reverse! g$l$6466$1l2agK)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6408$1l2agK
                                         g$enumset$6462$1l2agK
                                         (car g$s$6465$1l2agK))
                                       g$value$6463$1l2agK))
                                 (g$f$6464$1l2agK
                                   (cdr g$s$6465$1l2agK)
                                   g$l$6466$1l2agK)
                                 (g$f$6464$1l2agK
                                   (cdr g$s$6465$1l2agK)
                                   (cons
                                     (car g$s$6465$1l2agK)
                                     g$l$6466$1l2agK))))))))
                 g$f$6464$1l2agK)
               (g$get-symbols$6407$1l2agK g$enumset$6462$1l2agK)
               '())))
           (g$enum-value$6395$1l2agK g$enumset$6462$1l2agK))))))
   (g$enum-set-member?$6416$1l2agK
     g$enum-set-member?$6522$1l2agK
     (case-lambda
       ((g$symbol$6467$1l2agK g$enumset$6468$1l2agK)
        (begin
          (if (not (symbol? g$symbol$6467$1l2agK))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6467$1l2agK)
            (void))
          (g$assert-enum$6409$1l2agK 'enum-set-member? g$enumset$6468$1l2agK)
          ((case-lambda
             ((g$v$6469$1l2agK)
              (if g$v$6469$1l2agK
                (not (zero?
                       (bitwise-and
                         g$v$6469$1l2agK
                         (g$enum-value$6395$1l2agK g$enumset$6468$1l2agK))))
                '#f)))
           (g$get-value$6408$1l2agK
             g$enumset$6468$1l2agK
             g$symbol$6467$1l2agK))))))
   (g$enum-set-subset?$6417$1l2agK
     g$enum-set-subset?$6523$1l2agK
     (case-lambda
       ((g$enumset1$6470$1l2agK g$enumset2$6471$1l2agK)
        (begin
          (g$assert-enum$6409$1l2agK 'enum-set-subset? g$enumset1$6470$1l2agK)
          (g$assert-enum$6409$1l2agK 'enum-set-subset? g$enumset2$6471$1l2agK)
          ((case-lambda
             ((g$v1$6472$1l2agK g$v2$6473$1l2agK)
              (if (g$enum-type=?$6406$1l2agK
                    g$enumset1$6470$1l2agK
                    g$enumset2$6471$1l2agK)
                (= (bitwise-and g$v1$6472$1l2agK g$v2$6473$1l2agK)
                   g$v1$6472$1l2agK)
                ((letrec ((g$f$6474$1l2agK
                            (case-lambda
                              ((g$s$6475$1l2agK)
                               (if (null? g$s$6475$1l2agK)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6476$1l2agK g$v2*$6477$1l2agK)
                                     (if g$v2*$6477$1l2agK
                                       ((case-lambda
                                          ((g$has1$6478$1l2agK
                                             g$has2$6479$1l2agK)
                                           (if (if g$has1$6478$1l2agK
                                                 (begin
                                                   '#f
                                                   (not g$has2$6479$1l2agK))
                                                 '#f)
                                             '#f
                                             (g$f$6474$1l2agK
                                               (cdr g$s$6475$1l2agK)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6472$1l2agK
                                                 g$v1*$6476$1l2agK)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6473$1l2agK
                                                 g$v2*$6477$1l2agK))))
                                       '#f)))
                                  (g$get-value$6408$1l2agK
                                    g$enumset1$6470$1l2agK
                                    (car g$s$6475$1l2agK))
                                  (g$get-value$6408$1l2agK
                                    g$enumset2$6471$1l2agK
                                    (car g$s$6475$1l2agK))))))))
                   g$f$6474$1l2agK)
                 (g$get-symbols$6407$1l2agK g$enumset1$6470$1l2agK)))))
           (g$enum-value$6395$1l2agK g$enumset1$6470$1l2agK)
           (g$enum-value$6395$1l2agK g$enumset2$6471$1l2agK))))))
   (g$enum-set=?$6418$1l2agK
     g$enum-set=?$6524$1l2agK
     (case-lambda
       ((g$enumset1$6480$1l2agK g$enumset2$6481$1l2agK)
        (begin
          (g$assert-enum$6409$1l2agK 'enum-set=? g$enumset1$6480$1l2agK)
          (g$assert-enum$6409$1l2agK 'enum-set=? g$enumset2$6481$1l2agK)
          (if (g$enum-set-subset?$6417$1l2agK
                g$enumset1$6480$1l2agK
                g$enumset2$6481$1l2agK)
            (begin
              '#f
              (g$enum-set-subset?$6417$1l2agK
                g$enumset2$6481$1l2agK
                g$enumset1$6480$1l2agK))
            '#f)))))
   (g$enum-set-union$6419$1l2agK
     g$enum-set-union$6525$1l2agK
     (case-lambda
       ((g$enumset1$6482$1l2agK g$enumset2$6483$1l2agK)
        (begin
          (g$assert-enum$6409$1l2agK 'enum-set-union g$enumset1$6482$1l2agK)
          (g$assert-enum$6409$1l2agK 'enum-set-union g$enumset2$6483$1l2agK)
          (if (g$enum-type=?$6406$1l2agK
                g$enumset1$6482$1l2agK
                g$enumset2$6483$1l2agK)
            (g$make-enum$6394$1l2agK
              (bitwise-ior
                (g$enum-value$6395$1l2agK g$enumset1$6482$1l2agK)
                (g$enum-value$6395$1l2agK g$enumset2$6483$1l2agK))
              (g$enum-info$6396$1l2agK g$enumset1$6482$1l2agK))
            '#f)))))
   (g$enum-set-intersection$6420$1l2agK
     g$enum-set-intersection$6526$1l2agK
     (case-lambda
       ((g$enumset1$6484$1l2agK g$enumset2$6485$1l2agK)
        (begin
          (g$assert-enum$6409$1l2agK
            'enum-set-intersection
            g$enumset1$6484$1l2agK)
          (g$assert-enum$6409$1l2agK
            'enum-set-intersection
            g$enumset2$6485$1l2agK)
          (if (g$enum-type=?$6406$1l2agK
                g$enumset1$6484$1l2agK
                g$enumset2$6485$1l2agK)
            (g$make-enum$6394$1l2agK
              (bitwise-and
                (g$enum-value$6395$1l2agK g$enumset1$6484$1l2agK)
                (g$enum-value$6395$1l2agK g$enumset2$6485$1l2agK))
              (g$enum-info$6396$1l2agK g$enumset1$6484$1l2agK))
            '#f)))))
   (g$enum-set-difference$6421$1l2agK
     g$enum-set-difference$6527$1l2agK
     (case-lambda
       ((g$enumset1$6486$1l2agK g$enumset2$6487$1l2agK)
        (begin
          (g$assert-enum$6409$1l2agK
            'enum-set-difference
            g$enumset1$6486$1l2agK)
          (g$assert-enum$6409$1l2agK
            'enum-set-difference
            g$enumset2$6487$1l2agK)
          (if (g$enum-type=?$6406$1l2agK
                g$enumset1$6486$1l2agK
                g$enumset2$6487$1l2agK)
            (g$make-enum$6394$1l2agK
              (bitwise-and
                (g$enum-value$6395$1l2agK g$enumset1$6486$1l2agK)
                (bitwise-not (g$enum-value$6395$1l2agK g$enumset2$6487$1l2agK)))
              (g$enum-info$6396$1l2agK g$enumset1$6486$1l2agK))
            '#f)))))
   (g$enum-set-complement$6422$1l2agK
     g$enum-set-complement$6528$1l2agK
     (case-lambda
       ((g$enumset$6488$1l2agK)
        (begin
          (g$assert-enum$6409$1l2agK 'enum-set-complement g$enumset$6488$1l2agK)
          (g$make-enum$6394$1l2agK
            (bitwise-not (g$enum-value$6395$1l2agK g$enumset$6488$1l2agK))
            (g$enum-info$6396$1l2agK g$enumset$6488$1l2agK))))))
   (g$enum-set-projection$6423$1l2agK
     g$enum-set-projection$6529$1l2agK
     (case-lambda
       ((g$enumset1$6489$1l2agK g$enumset2$6490$1l2agK)
        (begin
          (g$assert-enum$6409$1l2agK
            'enum-set-projection
            g$enumset1$6489$1l2agK)
          (g$assert-enum$6409$1l2agK
            'enum-set-projection
            g$enumset2$6490$1l2agK)
          ((case-lambda
             ((g$v1$6491$1l2agK)
              ((letrec ((g$f$6492$1l2agK
                          (case-lambda
                            ((g$s$6493$1l2agK g$v$6494$1l2agK)
                             (if (null? g$s$6493$1l2agK)
                               (g$make-enum$6394$1l2agK
                                 g$v$6494$1l2agK
                                 (g$enum-info$6396$1l2agK
                                   g$enumset2$6490$1l2agK))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6491$1l2agK
                                       (g$get-value$6408$1l2agK
                                         g$enumset1$6489$1l2agK
                                         (car g$s$6493$1l2agK))))
                                 (g$f$6492$1l2agK
                                   (cdr g$s$6493$1l2agK)
                                   g$v$6494$1l2agK)
                                 ((case-lambda
                                    ((g$v2$6495$1l2agK)
                                     (if g$v2$6495$1l2agK
                                       (g$f$6492$1l2agK
                                         (cdr g$s$6493$1l2agK)
                                         (bitwise-ior
                                           g$v$6494$1l2agK
                                           g$v2$6495$1l2agK))
                                       (g$f$6492$1l2agK
                                         (cdr g$s$6493$1l2agK)
                                         g$v$6494$1l2agK))))
                                  (g$get-value$6408$1l2agK
                                    g$enumset2$6490$1l2agK
                                    (car g$s$6493$1l2agK)))))))))
                 g$f$6492$1l2agK)
               (g$get-symbols$6407$1l2agK g$enumset1$6489$1l2agK)
               '0)))
           (g$enum-value$6395$1l2agK g$enumset1$6489$1l2agK)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6424$1l2agK g$p$6425$1l2agK)
       (g$fprintf$6554$1l2agK
         g$p$6425$1l2agK
         '"#[enum-set ~a]"
         (g$enum-set->list$6415$1l2agK g$x$6424$1l2agK))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6530$1l2agK
     g$dofmt$6552$1l2agK
     (case-lambda
       ((g$p$6534$1l2agK g$cntl$6535$1l2agK g$args$6536$1l2agK)
        ((case-lambda
           ((g$nmax$6537$1l2agK)
            ((letrec ((g$loop$6538$1l2agK
                        (case-lambda
                          ((g$n$6539$1l2agK g$a$6540$1l2agK)
                           (if (fx<=? g$n$6539$1l2agK g$nmax$6537$1l2agK)
                             ((case-lambda
                                ((g$c$6541$1l2agK)
                                 (if (if (g$char=?$5056$1l2agK
                                           g$c$6541$1l2agK
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6539$1l2agK
                                           g$nmax$6537$1l2agK))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6542$1l2agK)
                                       (if (memv g$t$6542$1l2agK '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6540$1l2agK)
                                             g$p$6534$1l2agK)
                                           (g$loop$6538$1l2agK
                                             (fx+ g$n$6539$1l2agK '2)
                                             (cdr g$a$6540$1l2agK)))
                                         (if (memv g$t$6542$1l2agK '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6540$1l2agK)
                                               g$p$6534$1l2agK)
                                             (g$loop$6538$1l2agK
                                               (fx+ g$n$6539$1l2agK '2)
                                               (cdr g$a$6540$1l2agK)))
                                           (if (memv g$t$6542$1l2agK '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6540$1l2agK)
                                                   '2)
                                                 g$p$6534$1l2agK)
                                               (g$loop$6538$1l2agK
                                                 (fx+ g$n$6539$1l2agK '2)
                                                 (cdr g$a$6540$1l2agK)))
                                             (if (memv g$t$6542$1l2agK '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6540$1l2agK)
                                                     '8)
                                                   g$p$6534$1l2agK)
                                                 (g$loop$6538$1l2agK
                                                   (fx+ g$n$6539$1l2agK '2)
                                                   (cdr g$a$6540$1l2agK)))
                                               (if (memv g$t$6542$1l2agK '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6540$1l2agK)
                                                       '16)
                                                     g$p$6534$1l2agK)
                                                   (g$loop$6538$1l2agK
                                                     (fx+ g$n$6539$1l2agK '2)
                                                     (cdr g$a$6540$1l2agK)))
                                                 (if (memv
                                                       g$t$6542$1l2agK
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6540$1l2agK)
                                                         '10)
                                                       g$p$6534$1l2agK)
                                                     (g$loop$6538$1l2agK
                                                       (fx+ g$n$6539$1l2agK '2)
                                                       (cdr g$a$6540$1l2agK)))
                                                   (if (memv
                                                         g$t$6542$1l2agK
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6534$1l2agK)
                                                       (g$loop$6538$1l2agK
                                                         (fx+ g$n$6539$1l2agK
                                                              '2)
                                                         g$a$6540$1l2agK))
                                                     (begin
                                                       (write-char
                                                         g$c$6541$1l2agK
                                                         g$p$6534$1l2agK)
                                                       (g$loop$6538$1l2agK
                                                         (fx+ g$n$6539$1l2agK
                                                              '1)
                                                         g$a$6540$1l2agK)))))))))))
                                    (string-ref
                                      g$cntl$6535$1l2agK
                                      (fx+ g$n$6539$1l2agK '1)))
                                   (begin
                                     (write-char
                                       g$c$6541$1l2agK
                                       g$p$6534$1l2agK)
                                     (g$loop$6538$1l2agK
                                       (fx+ g$n$6539$1l2agK '1)
                                       g$a$6540$1l2agK)))))
                              (string-ref g$cntl$6535$1l2agK g$n$6539$1l2agK))
                             (void))))))
               g$loop$6538$1l2agK)
             '0
             g$args$6536$1l2agK)))
         (fx- (string-length g$cntl$6535$1l2agK) '1)))))
   (g$printf$6531$1l2agK
     g$printf$6553$1l2agK
     (case-lambda
       ((g$control$6543$1l2agK . g$args$6544$1l2agK)
        (g$dofmt$6530$1l2agK
          (current-output-port)
          g$control$6543$1l2agK
          g$args$6544$1l2agK))))
   (g$fprintf$6532$1l2agK
     g$fprintf$6554$1l2agK
     (case-lambda
       ((g$p$6545$1l2agK g$control$6546$1l2agK . g$args$6547$1l2agK)
        (g$dofmt$6530$1l2agK
          g$p$6545$1l2agK
          g$control$6546$1l2agK
          g$args$6547$1l2agK))))
   (g$format$6533$1l2agK
     g$format$6555$1l2agK
     (case-lambda
       ((g$control$6548$1l2agK . g$args$6549$1l2agK)
        (call-with-values
          g$open-string-output-port$6352$1l2agK
          (case-lambda
            ((g$p$6550$1l2agK g$c$6551$1l2agK)
             (begin
               (g$dofmt$6530$1l2agK
                 g$p$6550$1l2agK
                 g$control$6548$1l2agK
                 g$args$6549$1l2agK)
               (g$c$6551$1l2agK)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6556$1l2agK
     g$make-traced-macro$6559$1l2agK
     (case-lambda
       ((g$name$6557$1l2agK g$x$6558$1l2agK)
        (if (procedure? g$x$6558$1l2agK)
          (make-traced-procedure
            g$name$6557$1l2agK
            g$x$6558$1l2agK
            g$syntax->datum$11211$1l2agK)
          (if (g$variable-transformer?$11034$1l2agK g$x$6558$1l2agK)
            (g$make-variable-transformer$11033$1l2agK
              (make-traced-procedure
                g$name$6557$1l2agK
                (g$variable-transformer-procedure$11035$1l2agK g$x$6558$1l2agK)
                g$syntax->datum$11211$1l2agK))
            g$x$6558$1l2agK))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6560$1l2agK
     g$read-library-source-file$6639$1l2agK
     (case-lambda
       ((g$file-name$6631$1l2agK)
        (g$with-input-from-file$6386$1l2agK
          g$file-name$6631$1l2agK
          read-annotated))))
   (g$make-parameter$6561$1l2agK
     g$make-parameter$6640$1l2agK
     (case-lambda
       ((g$x$6632$1l2agK)
        (g$make-parameter$6561$1l2agK
          g$x$6632$1l2agK
          (case-lambda ((g$x$6633$1l2agK) g$x$6633$1l2agK))))
       ((g$x$6634$1l2agK g$fender$6635$1l2agK)
        (begin
          (if (not (procedure? g$fender$6635$1l2agK))
            (g$assertion-error$11204$1l2agK
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(51,8) - (51,36)"))
            (void))
          ((case-lambda
             ((g$x$6636$1l2agK)
              (case-lambda
                (() g$x$6636$1l2agK)
                ((g$v$6637$1l2agK)
                 (set! g$x$6636$1l2agK
                   (g$fender$6635$1l2agK g$v$6637$1l2agK))))))
           (g$fender$6635$1l2agK g$x$6634$1l2agK))))))
   (g$file-options-constructor$6629$1l2agK
     g$file-options-constructor$6641$1l2agK
     (g$make-parameter$6561$1l2agK '#f))
   (g$file-options-spec$6630$1l2agK
     g$file-options-spec$6642$1l2agK
     (case-lambda
       ((g$x$6638$1l2agK)
        ((g$file-options-constructor$6629$1l2agK) g$x$6638$1l2agK)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6839$1l2agK
     g$current-primitive-locations$6884$1l2agK
     (g$make-parameter$6640$1l2agK
       (case-lambda ((g$x$6845$1l2agK) '#f))
       (case-lambda
         ((g$p$6846$1l2agK)
          (begin
            (if (not (procedure? g$p$6846$1l2agK))
              (g$assertion-error$11204$1l2agK
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$6846$1l2agK)))))
   (g$mutable?$6840$1l2agK
     g$mutable?$6885$1l2agK
     (case-lambda
       ((g$x$6847$1l2agK)
        (letrec* ((g$simple?$6848$1l2agK
                    (case-lambda
                      ((g$x$6849$1l2agK)
                       ((case-lambda
                          ((g$t$6850$1l2agK)
                           (if g$t$6850$1l2agK
                             g$t$6850$1l2agK
                             ((case-lambda
                                ((g$t$6851$1l2agK)
                                 (if g$t$6851$1l2agK
                                   g$t$6851$1l2agK
                                   ((case-lambda
                                      ((g$t$6852$1l2agK)
                                       (if g$t$6852$1l2agK
                                         g$t$6852$1l2agK
                                         ((case-lambda
                                            ((g$t$6853$1l2agK)
                                             (if g$t$6853$1l2agK
                                               g$t$6853$1l2agK
                                               ((case-lambda
                                                  ((g$t$6854$1l2agK)
                                                   (if g$t$6854$1l2agK
                                                     g$t$6854$1l2agK
                                                     ((case-lambda
                                                        ((g$t$6855$1l2agK)
                                                         (if g$t$6855$1l2agK
                                                           g$t$6855$1l2agK
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6849$1l2agK)))))
                                                      (bytevector?
                                                        g$x$6849$1l2agK)))))
                                                (string? g$x$6849$1l2agK)))))
                                          (boolean? g$x$6849$1l2agK)))))
                                    (symbol? g$x$6849$1l2agK)))))
                              (char? g$x$6849$1l2agK)))))
                        (null? g$x$6849$1l2agK))))))
          (not (g$simple?$6848$1l2agK g$x$6847$1l2agK))))))
   (g$rewriter$6841$1l2agK
     g$rewriter$6886$1l2agK
     (case-lambda
       ((g$quote-hack?$6856$1l2agK)
        (letrec* ((g$f$6857$1l2agK
                    (case-lambda
                      ((g$x$6858$1l2agK)
                       (if (pair? g$x$6858$1l2agK)
                         ((case-lambda
                            ((g$t$6859$1l2agK)
                             (if (memv g$t$6859$1l2agK '(quote))
                               (if (if g$quote-hack?$6856$1l2agK
                                     (begin
                                       '#f
                                       (g$mutable?$6840$1l2agK
                                         (g$cadr$5022$1l2agK g$x$6858$1l2agK)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6860$1l2agK)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6860$1l2agK
                                         (g$cadr$5022$1l2agK g$x$6858$1l2agK))
                                       g$g$6860$1l2agK)))
                                  (gensym))
                                 g$x$6858$1l2agK)
                               (if (memv g$t$6859$1l2agK '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6861$1l2agK)
                                           (cons
                                             (car g$x$6861$1l2agK)
                                             (map g$f$6857$1l2agK
                                                  (cdr g$x$6861$1l2agK)))))
                                        (cdr g$x$6858$1l2agK)))
                                 (if (memv g$t$6859$1l2agK '(lambda))
                                   (g$cons*$5505$1l2agK
                                     'lambda
                                     (g$cadr$5022$1l2agK g$x$6858$1l2agK)
                                     (map g$f$6857$1l2agK
                                          (g$cddr$5024$1l2agK g$x$6858$1l2agK)))
                                   (if (memv g$t$6859$1l2agK '(letrec))
                                     ((case-lambda
                                        ((g$bindings$6862$1l2agK
                                           g$body*$6863$1l2agK)
                                         ((case-lambda
                                            ((g$lhs*$6864$1l2agK
                                               g$rhs*$6865$1l2agK)
                                             (g$cons*$5505$1l2agK
                                               'letrec
                                               (map list
                                                    g$lhs*$6864$1l2agK
                                                    (map g$f$6857$1l2agK
                                                         g$rhs*$6865$1l2agK))
                                               (map g$f$6857$1l2agK
                                                    g$body*$6863$1l2agK))))
                                          (map car g$bindings$6862$1l2agK)
                                          (map g$cadr$5022$1l2agK
                                               g$bindings$6862$1l2agK))))
                                      (g$cadr$5022$1l2agK g$x$6858$1l2agK)
                                      (g$cddr$5024$1l2agK g$x$6858$1l2agK))
                                     (if (memv g$t$6859$1l2agK '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$6866$1l2agK
                                             g$body*$6867$1l2agK)
                                           ((case-lambda
                                              ((g$lhs*$6868$1l2agK
                                                 g$rhs*$6869$1l2agK)
                                               (g$cons*$5505$1l2agK
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6868$1l2agK
                                                      (map g$f$6857$1l2agK
                                                           g$rhs*$6869$1l2agK))
                                                 (map g$f$6857$1l2agK
                                                      g$body*$6867$1l2agK))))
                                            (map car g$bindings$6866$1l2agK)
                                            (map g$cadr$5022$1l2agK
                                                 g$bindings$6866$1l2agK))))
                                        (g$cadr$5022$1l2agK g$x$6858$1l2agK)
                                        (g$cddr$5024$1l2agK g$x$6858$1l2agK))
                                       (if (memv
                                             g$t$6859$1l2agK
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$6870$1l2agK
                                               g$x$6871$1l2agK)
                                             ((case-lambda
                                                ((g$bindings$6872$1l2agK
                                                   g$body*$6873$1l2agK)
                                                 ((case-lambda
                                                    ((g$lhs*$6874$1l2agK
                                                       g$lhs**$6875$1l2agK
                                                       g$rhs*$6876$1l2agK)
                                                     (g$cons*$5505$1l2agK
                                                       'library-letrec*
                                                       g$name$6870$1l2agK
                                                       (map list
                                                            g$lhs*$6874$1l2agK
                                                            g$lhs**$6875$1l2agK
                                                            (map g$f$6857$1l2agK
                                                                 g$rhs*$6876$1l2agK))
                                                       (map g$f$6857$1l2agK
                                                            g$body*$6873$1l2agK))))
                                                  (map car
                                                       g$bindings$6872$1l2agK)
                                                  (map g$cadr$5022$1l2agK
                                                       g$bindings$6872$1l2agK)
                                                  (map g$caddr$5028$1l2agK
                                                       g$bindings$6872$1l2agK))))
                                              (g$cadr$5022$1l2agK
                                                g$x$6871$1l2agK)
                                              (g$cddr$5024$1l2agK
                                                g$x$6871$1l2agK))))
                                          (g$cadr$5022$1l2agK g$x$6858$1l2agK)
                                          (cdr g$x$6858$1l2agK))
                                         (if (memv g$t$6859$1l2agK '(begin))
                                           (cons
                                             'begin
                                             (map g$f$6857$1l2agK
                                                  (cdr g$x$6858$1l2agK)))
                                           (if (memv g$t$6859$1l2agK '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5022$1l2agK
                                                 g$x$6858$1l2agK)
                                               (g$f$6857$1l2agK
                                                 (g$caddr$5028$1l2agK
                                                   g$x$6858$1l2agK)))
                                             (if (memv
                                                   g$t$6859$1l2agK
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$6877$1l2agK)
                                                   ((case-lambda
                                                      ((g$t$6878$1l2agK)
                                                       (if g$t$6878$1l2agK
                                                         ((case-lambda
                                                            ((g$loc$6879$1l2agK)
                                                             g$loc$6879$1l2agK))
                                                          g$t$6878$1l2agK)
                                                         g$op$6877$1l2agK)))
                                                    ((g$current-primitive-locations$6839$1l2agK)
                                                     g$op$6877$1l2agK))))
                                                (g$cadr$5022$1l2agK
                                                  g$x$6858$1l2agK))
                                               (if (memv
                                                     g$t$6859$1l2agK
                                                     '(define))
                                                 g$x$6858$1l2agK
                                                 (if (list? g$x$6858$1l2agK)
                                                   (map g$f$6857$1l2agK
                                                        g$x$6858$1l2agK)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6858$1l2agK
                                                     (list?
                                                       g$x$6858$1l2agK)))))))))))))))
                          (car g$x$6858$1l2agK))
                         g$x$6858$1l2agK)))))
          g$f$6857$1l2agK))))
   (g$expanded->core$6842$1l2agK
     g$expanded->core$6887$1l2agK
     (case-lambda
       ((g$x$6880$1l2agK) ((g$rewriter$6841$1l2agK '#t) g$x$6880$1l2agK))))
   (g$compile-core-expr$6843$1l2agK
     g$compile-core-expr$6888$1l2agK
     (case-lambda
       ((g$x$6881$1l2agK) ((g$rewriter$6841$1l2agK '#f) g$x$6881$1l2agK))))
   (g$compile-core-expr-to-port$6844$1l2agK
     g$compile-core-expr-to-port$6889$1l2agK
     (case-lambda
       ((g$x$6882$1l2agK g$p$6883$1l2agK)
        (g$pretty-print$6838$1l2agK
          ((g$rewriter$6841$1l2agK '#f) g$x$6882$1l2agK)
          g$p$6883$1l2agK)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6928$1l2agK
     g$make-collection$7132$1l2agK
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6989$1l2agK)
            (letrec* ((g$set-cons$6990$1l2agK
                        (case-lambda
                          ((g$x$6992$1l2agK g$ls$6993$1l2agK)
                           (if (memq g$x$6992$1l2agK g$ls$6993$1l2agK)
                             g$ls$6993$1l2agK
                             (cons g$x$6992$1l2agK g$ls$6993$1l2agK))))))
              (case-lambda
                (() g$set$6989$1l2agK)
                ((g$x$6991$1l2agK)
                 (set! g$set$6989$1l2agK
                   (g$set-cons$6990$1l2agK
                     g$x$6991$1l2agK
                     g$set$6989$1l2agK)))))))
         '()))))
   (g$current-library-collection$6929$1l2agK
     g$current-library-collection$7133$1l2agK
     (g$make-parameter$6640$1l2agK
       (g$make-collection$6928$1l2agK)
       (case-lambda
         ((g$x$6994$1l2agK)
          (begin
            (if (not (procedure? g$x$6994$1l2agK))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6994$1l2agK)
              (void))
            g$x$6994$1l2agK)))))
   (g$8072$6930$1l2agK
     g$8072$7134$1l2agK
     (make-record-type-descriptor
       'library
       '#f
       'g$8075$1l2agK
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8074$6931$1l2agK g$8074$7135$1l2agK '#f)
   (g$8073$6932$1l2agK
     g$8073$7136$1l2agK
     (make-record-constructor-descriptor
       g$8072$6930$1l2agK
       '#f
       g$8074$6931$1l2agK))
   (g$library?$6933$1l2agK
     g$library?$7137$1l2agK
     (record-predicate g$8072$6930$1l2agK))
   (g$make-library$6934$1l2agK
     g$make-library$7138$1l2agK
     (record-constructor g$8073$6932$1l2agK))
   (g$library-id$6935$1l2agK
     g$library-id$7139$1l2agK
     (record-accessor g$8072$6930$1l2agK '0))
   (g$library-name$6936$1l2agK
     g$library-name$7140$1l2agK
     (record-accessor g$8072$6930$1l2agK '1))
   (g$library-version$6937$1l2agK
     g$library-version$7141$1l2agK
     (record-accessor g$8072$6930$1l2agK '2))
   (g$library-imp*$6938$1l2agK
     g$library-imp*$7142$1l2agK
     (record-accessor g$8072$6930$1l2agK '3))
   (g$library-vis*$6939$1l2agK
     g$library-vis*$7143$1l2agK
     (record-accessor g$8072$6930$1l2agK '4))
   (g$library-inv*$6940$1l2agK
     g$library-inv*$7144$1l2agK
     (record-accessor g$8072$6930$1l2agK '5))
   (g$library-subst$6941$1l2agK
     g$library-subst$7145$1l2agK
     (record-accessor g$8072$6930$1l2agK '6))
   (g$library-env$6942$1l2agK
     g$library-env$7146$1l2agK
     (record-accessor g$8072$6930$1l2agK '7))
   (g$library-visit-state$6943$1l2agK
     g$library-visit-state$7147$1l2agK
     (record-accessor g$8072$6930$1l2agK '8))
   (g$library-invoke-state$6944$1l2agK
     g$library-invoke-state$7148$1l2agK
     (record-accessor g$8072$6930$1l2agK '9))
   (g$library-visit-code$6945$1l2agK
     g$library-visit-code$7149$1l2agK
     (record-accessor g$8072$6930$1l2agK '10))
   (g$library-invoke-code$6946$1l2agK
     g$library-invoke-code$7150$1l2agK
     (record-accessor g$8072$6930$1l2agK '11))
   (g$library-visible?$6947$1l2agK
     g$library-visible?$7151$1l2agK
     (record-accessor g$8072$6930$1l2agK '12))
   (g$library-source-file-name$6948$1l2agK
     g$library-source-file-name$7152$1l2agK
     (record-accessor g$8072$6930$1l2agK '13))
   (g$set-library-id!$6949$1l2agK
     g$set-library-id!$7153$1l2agK
     (record-mutator g$8072$6930$1l2agK '0))
   (g$set-library-name!$6950$1l2agK
     g$set-library-name!$7154$1l2agK
     (record-mutator g$8072$6930$1l2agK '1))
   (g$set-library-version!$6951$1l2agK
     g$set-library-version!$7155$1l2agK
     (record-mutator g$8072$6930$1l2agK '2))
   (g$set-library-imp*!$6952$1l2agK
     g$set-library-imp*!$7156$1l2agK
     (record-mutator g$8072$6930$1l2agK '3))
   (g$set-library-vis*!$6953$1l2agK
     g$set-library-vis*!$7157$1l2agK
     (record-mutator g$8072$6930$1l2agK '4))
   (g$set-library-inv*!$6954$1l2agK
     g$set-library-inv*!$7158$1l2agK
     (record-mutator g$8072$6930$1l2agK '5))
   (g$set-library-subst!$6955$1l2agK
     g$set-library-subst!$7159$1l2agK
     (record-mutator g$8072$6930$1l2agK '6))
   (g$set-library-env!$6956$1l2agK
     g$set-library-env!$7160$1l2agK
     (record-mutator g$8072$6930$1l2agK '7))
   (g$set-library-visit-state!$6957$1l2agK
     g$set-library-visit-state!$7161$1l2agK
     (record-mutator g$8072$6930$1l2agK '8))
   (g$set-library-invoke-state!$6958$1l2agK
     g$set-library-invoke-state!$7162$1l2agK
     (record-mutator g$8072$6930$1l2agK '9))
   (g$set-library-visit-code!$6959$1l2agK
     g$set-library-visit-code!$7163$1l2agK
     (record-mutator g$8072$6930$1l2agK '10))
   (g$set-library-invoke-code!$6960$1l2agK
     g$set-library-invoke-code!$7164$1l2agK
     (record-mutator g$8072$6930$1l2agK '11))
   (g$set-library-visible?!$6961$1l2agK
     g$set-library-visible?!$7165$1l2agK
     (record-mutator g$8072$6930$1l2agK '12))
   (g$set-library-source-file-name!$6962$1l2agK
     g$set-library-source-file-name!$7166$1l2agK
     (record-mutator g$8072$6930$1l2agK '13))
   (g$rp$6963$1l2agK
     g$rp$7167$1l2agK
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6995$1l2agK g$p$6996$1l2agK)
          (begin
            (if (not (g$library?$6933$1l2agK g$x$6995$1l2agK))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6555$1l2agK
                '"#<library ~s>"
                (if (null? (g$library-version$6937$1l2agK g$x$6995$1l2agK))
                  (g$library-name$6936$1l2agK g$x$6995$1l2agK)
                  (append
                    (g$library-name$6936$1l2agK g$x$6995$1l2agK)
                    (list (g$library-version$6937$1l2agK g$x$6995$1l2agK)))))
              g$p$6996$1l2agK))))))
   (g$find-dependencies$6964$1l2agK
     g$find-dependencies$7168$1l2agK
     (case-lambda
       ((g$ls$6997$1l2agK)
        (if (null? g$ls$6997$1l2agK)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6965$1l2agK
     g$find-library-by$7169$1l2agK
     (case-lambda
       ((g$pred$6998$1l2agK)
        ((letrec ((g$f$6999$1l2agK
                    (case-lambda
                      ((g$ls$7000$1l2agK)
                       (if (null? g$ls$7000$1l2agK)
                         '#f
                         (if (g$pred$6998$1l2agK (car g$ls$7000$1l2agK))
                           (car g$ls$7000$1l2agK)
                           (g$f$6999$1l2agK (cdr g$ls$7000$1l2agK))))))))
           g$f$6999$1l2agK)
         ((g$current-library-collection$6929$1l2agK))))))
   (g$library-path$6966$1l2agK
     g$library-path$7170$1l2agK
     (g$make-parameter$6640$1l2agK
       '(".")
       (case-lambda
         ((g$x$7001$1l2agK)
          (if (if (list? g$x$7001$1l2agK)
                (begin '#f (g$for-all$5503$1l2agK string? g$x$7001$1l2agK))
                '#f)
            (map (case-lambda ((g$x$7002$1l2agK) g$x$7002$1l2agK))
                 g$x$7001$1l2agK)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7001$1l2agK))))))
   (g$library-extensions$6967$1l2agK
     g$library-extensions$7171$1l2agK
     (g$make-parameter$6640$1l2agK
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7003$1l2agK)
          (if (if (list? g$x$7003$1l2agK)
                (begin '#f (g$for-all$5503$1l2agK string? g$x$7003$1l2agK))
                '#f)
            (map (case-lambda ((g$x$7004$1l2agK) g$x$7004$1l2agK))
                 g$x$7003$1l2agK)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7003$1l2agK))))))
   (g$library-name->file-name$6968$1l2agK
     g$library-name->file-name$7172$1l2agK
     (case-lambda
       ((g$x$7005$1l2agK)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6352$1l2agK)))
          (case-lambda
            ((g$p$7008$1l2agK g$extract$7009$1l2agK)
             ((case-lambda
                ((g$extract$7010$1l2agK g$p$7011$1l2agK)
                 (letrec* ((g$display-hex$7012$1l2agK
                             (case-lambda
                               ((g$n$7020$1l2agK)
                                (if (<= '0 g$n$7020$1l2agK '9)
                                  (display g$n$7020$1l2agK g$p$7011$1l2agK)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7020$1l2agK '10)))
                                    g$p$7011$1l2agK))))))
                   (begin
                     ((letrec ((g$f$7013$1l2agK
                                 (case-lambda
                                   ((g$ls$7014$1l2agK)
                                    (if (not (null? g$ls$7014$1l2agK))
                                      (begin
                                        (display '"/" g$p$7011$1l2agK)
                                        (for-each
                                          (case-lambda
                                            ((g$c$7015$1l2agK)
                                             (if ((case-lambda
                                                    ((g$t$7016$1l2agK)
                                                     (if g$t$7016$1l2agK
                                                       g$t$7016$1l2agK
                                                       ((case-lambda
                                                          ((g$t$7017$1l2agK)
                                                           (if g$t$7017$1l2agK
                                                             g$t$7017$1l2agK
                                                             ((case-lambda
                                                                ((g$t$7018$1l2agK)
                                                                 (if g$t$7018$1l2agK
                                                                   g$t$7018$1l2agK
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$7015$1l2agK
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5059$1l2agK
                                                                '#\0
                                                                g$c$7015$1l2agK
                                                                '#\9)))))
                                                        (g$char<=?$5059$1l2agK
                                                          '#\A
                                                          g$c$7015$1l2agK
                                                          '#\Z)))))
                                                  (g$char<=?$5059$1l2agK
                                                    '#\a
                                                    g$c$7015$1l2agK
                                                    '#\z))
                                               (display
                                                 g$c$7015$1l2agK
                                                 g$p$7011$1l2agK)
                                               (begin
                                                 (display '"%" g$p$7011$1l2agK)
                                                 ((case-lambda
                                                    ((g$n$7019$1l2agK)
                                                     (begin
                                                       (g$display-hex$7012$1l2agK
                                                         (g$quotient$5867$1l2agK
                                                           g$n$7019$1l2agK
                                                           '16))
                                                       (g$display-hex$7012$1l2agK
                                                         (g$remainder$5868$1l2agK
                                                           g$n$7019$1l2agK
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7015$1l2agK))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7014$1l2agK))))
                                        (g$f$7013$1l2agK
                                          (cdr g$ls$7014$1l2agK)))
                                      (void))))))
                        g$f$7013$1l2agK)
                      g$x$7005$1l2agK)
                     (g$extract$7010$1l2agK)))))
              g$extract$7009$1l2agK
              g$p$7008$1l2agK)))))))
   (g$file-locator$6969$1l2agK
     g$file-locator$7173$1l2agK
     (g$make-parameter$6640$1l2agK
       (case-lambda
         ((g$x$7021$1l2agK)
          ((case-lambda
             ((g$str$7022$1l2agK)
              ((letrec ((g$f$7023$1l2agK
                          (case-lambda
                            ((g$ls$7024$1l2agK
                               g$exts$7025$1l2agK
                               g$failed-list$7026$1l2agK)
                             (if (null? g$ls$7024$1l2agK)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8177$7027$1l2agK
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8180$1l2agK
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8179$7028$1l2agK '#f)
                                             (g$8178$7029$1l2agK
                                               (make-record-constructor-descriptor
                                                 g$8177$7027$1l2agK
                                                 &condition-rcd
                                                 g$8179$7028$1l2agK))
                                             (g$8176$7030$1l2agK
                                               (record-predicate
                                                 g$8177$7027$1l2agK))
                                             (g$make-library-resolution-condition$7031$1l2agK
                                               (record-constructor
                                                 g$8178$7029$1l2agK))
                                             (g$8174$7032$1l2agK
                                               (record-accessor
                                                 g$8177$7027$1l2agK
                                                 '0))
                                             (g$8175$7033$1l2agK
                                               (record-accessor
                                                 g$8177$7027$1l2agK
                                                 '1))
                                             (g$library-resolution-condition?$7034$1l2agK
                                               (condition-predicate
                                                 g$8177$7027$1l2agK))
                                             (g$condition-library$7035$1l2agK
                                               (condition-accessor
                                                 g$8177$7027$1l2agK
                                                 g$8174$7032$1l2agK))
                                             (g$condition-files$7036$1l2agK
                                               (condition-accessor
                                                 g$8177$7027$1l2agK
                                                 g$8175$7033$1l2agK)))
                                     (raise
                                       (condition
                                         (g$make-error$5777$1l2agK)
                                         (g$make-who-condition$5803$1l2agK
                                           'expander)
                                         (g$make-message-condition$5757$1l2agK
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$7031$1l2agK
                                           g$x$7021$1l2agK
                                           (reverse
                                             g$failed-list$7026$1l2agK))))))))
                               (if (null? g$exts$7025$1l2agK)
                                 (g$f$7023$1l2agK
                                   (cdr g$ls$7024$1l2agK)
                                   (g$library-extensions$6967$1l2agK)
                                   g$failed-list$7026$1l2agK)
                                 ((case-lambda
                                    ((g$name$7037$1l2agK)
                                     (if (g$file-exists?$5374$1l2agK
                                           g$name$7037$1l2agK)
                                       g$name$7037$1l2agK
                                       (g$f$7023$1l2agK
                                         g$ls$7024$1l2agK
                                         (cdr g$exts$7025$1l2agK)
                                         (cons
                                           g$name$7037$1l2agK
                                           g$failed-list$7026$1l2agK)))))
                                  (string-append
                                    (car g$ls$7024$1l2agK)
                                    g$str$7022$1l2agK
                                    (car g$exts$7025$1l2agK)))))))))
                 g$f$7023$1l2agK)
               (g$library-path$6966$1l2agK)
               (g$library-extensions$6967$1l2agK)
               '())))
           (g$library-name->file-name$6968$1l2agK g$x$7021$1l2agK))))
       (case-lambda
         ((g$f$7038$1l2agK)
          (if (procedure? g$f$7038$1l2agK)
            g$f$7038$1l2agK
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7038$1l2agK))))))
   (g$serialize-all$6970$1l2agK
     g$serialize-all$7174$1l2agK
     (case-lambda
       ((g$serialize$7039$1l2agK g$compile$7040$1l2agK)
        (letrec* ((g$library-desc$7041$1l2agK
                    (case-lambda
                      ((g$x$7043$1l2agK)
                       (list
                         (g$library-id$6935$1l2agK g$x$7043$1l2agK)
                         (g$library-name$6936$1l2agK g$x$7043$1l2agK))))))
          (for-each
            (case-lambda
              ((g$x$7042$1l2agK)
               (if (g$library-source-file-name$6948$1l2agK g$x$7042$1l2agK)
                 (g$serialize$7039$1l2agK
                   (g$library-source-file-name$6948$1l2agK g$x$7042$1l2agK)
                   (list
                     (g$library-id$6935$1l2agK g$x$7042$1l2agK)
                     (g$library-name$6936$1l2agK g$x$7042$1l2agK)
                     (g$library-version$6937$1l2agK g$x$7042$1l2agK)
                     (map g$library-desc$7041$1l2agK
                          (g$library-imp*$6938$1l2agK g$x$7042$1l2agK))
                     (map g$library-desc$7041$1l2agK
                          (g$library-vis*$6939$1l2agK g$x$7042$1l2agK))
                     (map g$library-desc$7041$1l2agK
                          (g$library-inv*$6940$1l2agK g$x$7042$1l2agK))
                     (g$library-subst$6941$1l2agK g$x$7042$1l2agK)
                     (g$library-env$6942$1l2agK g$x$7042$1l2agK)
                     (g$compile$7040$1l2agK
                       (g$library-visit-code$6945$1l2agK g$x$7042$1l2agK))
                     (g$compile$7040$1l2agK
                       (g$library-invoke-code$6946$1l2agK g$x$7042$1l2agK))
                     (g$library-visible?$6947$1l2agK g$x$7042$1l2agK)))
                 (void))))
            ((g$current-library-collection$6929$1l2agK)))))))
   (g$current-precompiled-library-loader$6971$1l2agK
     g$current-precompiled-library-loader$7175$1l2agK
     (g$make-parameter$6640$1l2agK
       (case-lambda ((g$filename$7044$1l2agK g$sk$7045$1l2agK) '#f))))
   (g$try-load-from-file$6972$1l2agK
     g$try-load-from-file$7176$1l2agK
     (case-lambda
       ((g$filename$7046$1l2agK)
        ((g$current-precompiled-library-loader$6971$1l2agK)
         g$filename$7046$1l2agK
         (case-lambda
           ((g$id$7047$1l2agK
              g$name$7048$1l2agK
              g$ver$7049$1l2agK
              g$imp*$7050$1l2agK
              g$vis*$7051$1l2agK
              g$inv*$7052$1l2agK
              g$exp-subst$7053$1l2agK
              g$exp-env$7054$1l2agK
              g$visit-proc$7055$1l2agK
              g$invoke-proc$7056$1l2agK
              g$visible?$7057$1l2agK)
            ((letrec ((g$f$7058$1l2agK
                        (case-lambda
                          ((g$deps$7059$1l2agK)
                           (if (null? g$deps$7059$1l2agK)
                             (begin
                               (g$install-library$6982$1l2agK
                                 g$id$7047$1l2agK
                                 g$name$7048$1l2agK
                                 g$ver$7049$1l2agK
                                 g$imp*$7050$1l2agK
                                 g$vis*$7051$1l2agK
                                 g$inv*$7052$1l2agK
                                 g$exp-subst$7053$1l2agK
                                 g$exp-env$7054$1l2agK
                                 g$visit-proc$7055$1l2agK
                                 g$invoke-proc$7056$1l2agK
                                 '#f
                                 '#f
                                 g$visible?$7057$1l2agK
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7060$1l2agK)
                                 ((case-lambda
                                    ((g$label$7061$1l2agK g$dname$7062$1l2agK)
                                     ((case-lambda
                                        ((g$l$7063$1l2agK)
                                         (if (if (g$library?$6933$1l2agK
                                                   g$l$7063$1l2agK)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7061$1l2agK
                                                      (g$library-id$6935$1l2agK
                                                        g$l$7063$1l2agK)))
                                               '#f)
                                           (g$f$7058$1l2agK
                                             (cdr g$deps$7059$1l2agK))
                                           (begin
                                             (g$fprintf$6554$1l2agK
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
                                               g$name$7048$1l2agK
                                               g$dname$7062$1l2agK
                                               g$filename$7046$1l2agK)
                                             '#f))))
                                      (g$find-library-by-name$6977$1l2agK
                                        g$dname$7062$1l2agK))))
                                  (car g$d$7060$1l2agK)
                                  (g$cadr$5022$1l2agK g$d$7060$1l2agK))))
                              (car g$deps$7059$1l2agK)))))))
               g$f$7058$1l2agK)
             (append g$imp*$7050$1l2agK g$vis*$7051$1l2agK g$inv*$7052$1l2agK)))
           (g$others$7064$1l2agK '#f))))))
   (g$library-loader$6973$1l2agK
     g$library-loader$7177$1l2agK
     (g$make-parameter$6640$1l2agK
       (case-lambda
         ((g$x$7065$1l2agK)
          ((case-lambda
             ((g$file-name$7066$1l2agK)
              (if (not g$file-name$7066$1l2agK)
                (assertion-violation '#f '"cannot file library" g$x$7065$1l2agK)
                ((case-lambda
                   ((g$t$7067$1l2agK)
                    (if g$t$7067$1l2agK
                      g$t$7067$1l2agK
                      (begin
                        '#f
                        ((g$current-library-expander$6974$1l2agK)
                         (g$read-library-source-file$6639$1l2agK
                           g$file-name$7066$1l2agK)
                         g$file-name$7066$1l2agK
                         (case-lambda
                           ((g$name$7068$1l2agK)
                            (if (not (equal?
                                       g$name$7068$1l2agK
                                       g$x$7065$1l2agK))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6352$1l2agK)))
                                  (case-lambda
                                    ((g$p$7071$1l2agK g$e$7072$1l2agK)
                                     ((case-lambda
                                        ((g$e$7073$1l2agK g$p$7074$1l2agK)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7074$1l2agK)
                                           (write
                                             g$x$7065$1l2agK
                                             g$p$7074$1l2agK)
                                           (display
                                             '" in file "
                                             g$p$7074$1l2agK)
                                           (display
                                             g$file-name$7066$1l2agK
                                             g$p$7074$1l2agK)
                                           (display '", found " g$p$7074$1l2agK)
                                           (write
                                             g$name$7068$1l2agK
                                             g$p$7074$1l2agK)
                                           (display '" instead" g$p$7074$1l2agK)
                                           (g$e$7073$1l2agK))))
                                      g$e$7072$1l2agK
                                      g$p$7071$1l2agK)))))
                              (void)))))))))
                 (g$try-load-from-file$6972$1l2agK g$file-name$7066$1l2agK)))))
           ((g$file-locator$6969$1l2agK) g$x$7065$1l2agK))))
       (case-lambda
         ((g$f$7075$1l2agK)
          (if (procedure? g$f$7075$1l2agK)
            g$f$7075$1l2agK
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7075$1l2agK))))))
   (g$current-library-expander$6974$1l2agK
     g$current-library-expander$7178$1l2agK
     (g$make-parameter$6640$1l2agK
       (case-lambda
         ((g$x$7076$1l2agK)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7077$1l2agK)
          (if (procedure? g$f$7077$1l2agK)
            g$f$7077$1l2agK
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7077$1l2agK))))))
   (g$external-pending-libraries$6975$1l2agK
     g$external-pending-libraries$7179$1l2agK
     (g$make-parameter$6640$1l2agK '()))
   (g$find-external-library$6976$1l2agK
     g$find-external-library$7180$1l2agK
     (case-lambda
       ((g$name$7078$1l2agK)
        (begin
          (if (g$member$5499$1l2agK
                g$name$7078$1l2agK
                (g$external-pending-libraries$6975$1l2agK))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7078$1l2agK)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7081$1l2agK
                g$external-pending-libraries$7082$1l2agK)
              ((case-lambda
                 ((g$swap$7083$1l2agK)
                  (dynamic-wind
                    g$swap$7083$1l2agK
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6973$1l2agK) g$name$7078$1l2agK)
                         ((case-lambda
                            ((g$t$7084$1l2agK)
                             (if g$t$7084$1l2agK
                               g$t$7084$1l2agK
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7078$1l2agK)))))
                          (g$find-library-by$6965$1l2agK
                            (case-lambda
                              ((g$x$7085$1l2agK)
                               (equal?
                                 (g$library-name$6936$1l2agK g$x$7085$1l2agK)
                                 g$name$7078$1l2agK))))))))
                    g$swap$7083$1l2agK)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7086$1l2agK)
                      (begin
                        (g$external-pending-libraries$7081$1l2agK
                          g$external-pending-libraries$7082$1l2agK)
                        (set! g$external-pending-libraries$7082$1l2agK
                          g$t$7086$1l2agK))))
                   (g$external-pending-libraries$7081$1l2agK)))))))
           g$external-pending-libraries$6975$1l2agK
           (cons
             g$name$7078$1l2agK
             (g$external-pending-libraries$6975$1l2agK)))))))
   (g$find-library-by-name$6977$1l2agK
     g$find-library-by-name$7181$1l2agK
     (case-lambda
       ((g$name$7087$1l2agK)
        ((case-lambda
           ((g$t$7088$1l2agK)
            (if g$t$7088$1l2agK
              g$t$7088$1l2agK
              (begin
                '#f
                (g$find-external-library$6976$1l2agK g$name$7087$1l2agK)))))
         (g$find-library-by$6965$1l2agK
           (case-lambda
             ((g$x$7089$1l2agK)
              (equal?
                (g$library-name$6936$1l2agK g$x$7089$1l2agK)
                g$name$7087$1l2agK))))))))
   (g$library-exists?$6978$1l2agK
     g$library-exists?$7182$1l2agK
     (case-lambda
       ((g$name$7090$1l2agK)
        (if (g$find-library-by$6965$1l2agK
              (case-lambda
                ((g$x$7091$1l2agK)
                 (equal?
                   (g$library-name$6936$1l2agK g$x$7091$1l2agK)
                   g$name$7090$1l2agK))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6979$1l2agK
     g$find-library-by-spec/die$7183$1l2agK
     (case-lambda
       ((g$spec$7092$1l2agK)
        ((case-lambda
           ((g$id$7093$1l2agK)
            ((case-lambda
               ((g$t$7094$1l2agK)
                (if g$t$7094$1l2agK
                  g$t$7094$1l2agK
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7092$1l2agK)))))
             (g$find-library-by$6965$1l2agK
               (case-lambda
                 ((g$x$7095$1l2agK)
                  (eq? g$id$7093$1l2agK
                       (g$library-id$6935$1l2agK g$x$7095$1l2agK))))))))
         (car g$spec$7092$1l2agK)))))
   (g$label->binding-table$6980$1l2agK
     g$label->binding-table$7184$1l2agK
     (g$make-eq-hashtable$5296$1l2agK))
   (g$install-library-record$6981$1l2agK
     g$install-library-record$7185$1l2agK
     (case-lambda
       ((g$lib$7096$1l2agK)
        (begin
          ((case-lambda
             ((g$exp-env$7097$1l2agK)
              (for-each
                (case-lambda
                  ((g$x$7098$1l2agK)
                   ((case-lambda
                      ((g$label$7099$1l2agK g$binding$7100$1l2agK)
                       ((case-lambda
                          ((g$binding$7101$1l2agK)
                           (g$hashtable-set!$5300$1l2agK
                             g$label->binding-table$6980$1l2agK
                             g$label$7099$1l2agK
                             g$binding$7101$1l2agK)))
                        ((case-lambda
                           ((g$t$7102$1l2agK)
                            (if (memv g$t$7102$1l2agK '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7096$1l2agK
                                  (cdr g$binding$7100$1l2agK)))
                              (if (memv g$t$7102$1l2agK '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7096$1l2agK
                                    (cdr g$binding$7100$1l2agK)))
                                (if (memv g$t$7102$1l2agK '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7096$1l2agK
                                      (cdr g$binding$7100$1l2agK)))
                                  g$binding$7100$1l2agK)))))
                         (car g$binding$7100$1l2agK)))))
                    (car g$x$7098$1l2agK)
                    (cdr g$x$7098$1l2agK))))
                g$exp-env$7097$1l2agK)))
           (g$library-env$6942$1l2agK g$lib$7096$1l2agK))
          ((g$current-library-collection$6929$1l2agK) g$lib$7096$1l2agK)))))
   (g$install-library$6982$1l2agK
     g$install-library$7186$1l2agK
     (case-lambda
       ((g$id$7103$1l2agK
          g$name$7104$1l2agK
          g$ver$7105$1l2agK
          g$imp*$7106$1l2agK
          g$vis*$7107$1l2agK
          g$inv*$7108$1l2agK
          g$exp-subst$7109$1l2agK
          g$exp-env$7110$1l2agK
          g$visit-proc$7111$1l2agK
          g$invoke-proc$7112$1l2agK
          g$visit-code$7113$1l2agK
          g$invoke-code$7114$1l2agK
          g$visible?$7115$1l2agK
          g$source-file-name$7116$1l2agK)
        ((case-lambda
           ((g$imp-lib*$7117$1l2agK
              g$vis-lib*$7118$1l2agK
              g$inv-lib*$7119$1l2agK)
            (begin
              (if (not (if (symbol? g$id$7103$1l2agK)
                         (if (list? g$name$7104$1l2agK)
                           (begin '#f (list? g$ver$7105$1l2agK))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7103$1l2agK
                  g$name$7104$1l2agK
                  g$ver$7105$1l2agK)
                (void))
              (if (g$library-exists?$6978$1l2agK g$name$7104$1l2agK)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7104$1l2agK)
                (void))
              ((case-lambda
                 ((g$lib$7120$1l2agK)
                  (g$install-library-record$6981$1l2agK g$lib$7120$1l2agK)))
               (g$make-library$6934$1l2agK
                 g$id$7103$1l2agK
                 g$name$7104$1l2agK
                 g$ver$7105$1l2agK
                 g$imp-lib*$7117$1l2agK
                 g$vis-lib*$7118$1l2agK
                 g$inv-lib*$7119$1l2agK
                 g$exp-subst$7109$1l2agK
                 g$exp-env$7110$1l2agK
                 g$visit-proc$7111$1l2agK
                 g$invoke-proc$7112$1l2agK
                 g$visit-code$7113$1l2agK
                 g$invoke-code$7114$1l2agK
                 g$visible?$7115$1l2agK
                 g$source-file-name$7116$1l2agK)))))
         (map g$find-library-by-spec/die$6979$1l2agK g$imp*$7106$1l2agK)
         (map g$find-library-by-spec/die$6979$1l2agK g$vis*$7107$1l2agK)
         (map g$find-library-by-spec/die$6979$1l2agK g$inv*$7108$1l2agK)))))
   (g$imported-label->binding$6983$1l2agK
     g$imported-label->binding$7187$1l2agK
     (case-lambda
       ((g$lab$7121$1l2agK)
        (g$hashtable-ref$5299$1l2agK
          g$label->binding-table$6980$1l2agK
          g$lab$7121$1l2agK
          '#f))))
   (g$invoke-library$6984$1l2agK
     g$invoke-library$7188$1l2agK
     (case-lambda
       ((g$lib$7122$1l2agK)
        ((case-lambda
           ((g$invoke$7123$1l2agK)
            (if (procedure? g$invoke$7123$1l2agK)
              (begin
                (g$set-library-invoke-state!$6958$1l2agK
                  g$lib$7122$1l2agK
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7122$1l2agK))))
                (for-each
                  g$invoke-library$6984$1l2agK
                  (g$library-inv*$6940$1l2agK g$lib$7122$1l2agK))
                (g$set-library-invoke-state!$6958$1l2agK
                  g$lib$7122$1l2agK
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7122$1l2agK))))
                (g$invoke$7123$1l2agK)
                (g$set-library-invoke-state!$6958$1l2agK g$lib$7122$1l2agK '#t))
              (void))))
         (g$library-invoke-state$6944$1l2agK g$lib$7122$1l2agK)))))
   (g$visit-library$6985$1l2agK
     g$visit-library$7189$1l2agK
     (case-lambda
       ((g$lib$7124$1l2agK)
        ((case-lambda
           ((g$visit$7125$1l2agK)
            (if (procedure? g$visit$7125$1l2agK)
              (begin
                (g$set-library-visit-state!$6957$1l2agK
                  g$lib$7124$1l2agK
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7124$1l2agK))))
                (for-each
                  g$invoke-library$6984$1l2agK
                  (g$library-vis*$6939$1l2agK g$lib$7124$1l2agK))
                (g$set-library-visit-state!$6957$1l2agK
                  g$lib$7124$1l2agK
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7124$1l2agK))))
                (g$visit$7125$1l2agK)
                (g$set-library-visit-state!$6957$1l2agK g$lib$7124$1l2agK '#t))
              (void))))
         (g$library-visit-state$6943$1l2agK g$lib$7124$1l2agK)))))
   (g$invoke-library-by-spec$6986$1l2agK
     g$invoke-library-by-spec$7190$1l2agK
     (case-lambda
       ((g$spec$7126$1l2agK)
        (g$invoke-library$6984$1l2agK
          (g$find-library-by-spec/die$6979$1l2agK g$spec$7126$1l2agK)))))
   (g$installed-libraries$6987$1l2agK
     g$installed-libraries$7191$1l2agK
     (case-lambda
       ((g$all?$7127$1l2agK)
        ((letrec ((g$f$7128$1l2agK
                    (case-lambda
                      ((g$ls$7129$1l2agK)
                       (if (null? g$ls$7129$1l2agK)
                         '()
                         (if ((case-lambda
                                ((g$t$7130$1l2agK)
                                 (if g$t$7130$1l2agK
                                   g$t$7130$1l2agK
                                   (begin
                                     '#f
                                     (g$library-visible?$6947$1l2agK
                                       (car g$ls$7129$1l2agK))))))
                              g$all?$7127$1l2agK)
                           (cons
                             (car g$ls$7129$1l2agK)
                             (g$f$7128$1l2agK (cdr g$ls$7129$1l2agK)))
                           (g$f$7128$1l2agK (cdr g$ls$7129$1l2agK))))))))
           g$f$7128$1l2agK)
         ((g$current-library-collection$6929$1l2agK))))
       (() (g$installed-libraries$6987$1l2agK '#f))))
   (g$library-spec$6988$1l2agK
     g$library-spec$7192$1l2agK
     (case-lambda
       ((g$x$7131$1l2agK)
        (begin
          (if (not (g$library?$6933$1l2agK g$x$7131$1l2agK))
            (assertion-violation 'library-spec '"not a library" g$x$7131$1l2agK)
            (void))
          (list
            (g$library-id$6935$1l2agK g$x$7131$1l2agK)
            (g$library-name$6936$1l2agK g$x$7131$1l2agK)
            (g$library-version$6937$1l2agK g$x$7131$1l2agK)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7193$1l2agK
     g$build-global-define$7303$1l2agK
     (case-lambda ((g$x$7274$1l2agK) (g$build-void$7270$1l2agK))))
   (g$build-lambda$7242$1l2agK
     g$build-lambda$7304$1l2agK
     (case-lambda
       ((g$ae$7275$1l2agK g$vars$7276$1l2agK g$exp$7277$1l2agK)
        (list 'case-lambda (list g$vars$7276$1l2agK g$exp$7277$1l2agK)))))
   (g$build-case-lambda$7243$1l2agK
     g$build-case-lambda$7305$1l2agK
     (case-lambda
       ((g$ae$7278$1l2agK g$vars*$7279$1l2agK g$exp*$7280$1l2agK)
        (cons 'case-lambda (map list g$vars*$7279$1l2agK g$exp*$7280$1l2agK)))))
   (g$build-let$7244$1l2agK
     g$build-let$7306$1l2agK
     (case-lambda
       ((g$ae$7281$1l2agK
          g$lhs*$7282$1l2agK
          g$rhs*$7283$1l2agK
          g$body$7284$1l2agK)
        (cons
          (g$build-lambda$7242$1l2agK
            g$ae$7281$1l2agK
            g$lhs*$7282$1l2agK
            g$body$7284$1l2agK)
          g$rhs*$7283$1l2agK))))
   (g$build-sequence$7269$1l2agK
     g$build-sequence$7307$1l2agK
     (case-lambda
       ((g$ae$7285$1l2agK g$exps$7286$1l2agK)
        ((letrec ((g$loop$7287$1l2agK
                    (case-lambda
                      ((g$exps$7288$1l2agK)
                       (if (null? (cdr g$exps$7288$1l2agK))
                         (car g$exps$7288$1l2agK)
                         (if (equal?
                               (car g$exps$7288$1l2agK)
                               (g$build-void$7270$1l2agK))
                           (g$loop$7287$1l2agK (cdr g$exps$7288$1l2agK))
                           (cons 'begin g$exps$7288$1l2agK)))))))
           g$loop$7287$1l2agK)
         g$exps$7286$1l2agK))))
   (g$build-void$7270$1l2agK
     g$build-void$7308$1l2agK
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7271$1l2agK
     g$build-letrec$7309$1l2agK
     (case-lambda
       ((g$ae$7289$1l2agK
          g$vars$7290$1l2agK
          g$val-exps$7291$1l2agK
          g$body-exp$7292$1l2agK)
        (if (null? g$vars$7290$1l2agK)
          g$body-exp$7292$1l2agK
          (list
            'letrec
            (map list g$vars$7290$1l2agK g$val-exps$7291$1l2agK)
            g$body-exp$7292$1l2agK)))))
   (g$build-letrec*$7272$1l2agK
     g$build-letrec*$7310$1l2agK
     (case-lambda
       ((g$ae$7293$1l2agK
          g$vars$7294$1l2agK
          g$val-exps$7295$1l2agK
          g$body-exp$7296$1l2agK)
        (if (null? g$vars$7294$1l2agK)
          g$body-exp$7296$1l2agK
          (list
            'letrec*
            (map list g$vars$7294$1l2agK g$val-exps$7295$1l2agK)
            g$body-exp$7296$1l2agK)))))
   (g$build-library-letrec*$7273$1l2agK
     g$build-library-letrec*$7311$1l2agK
     (case-lambda
       ((g$ae$7297$1l2agK
          g$name$7298$1l2agK
          g$vars$7299$1l2agK
          g$locs$7300$1l2agK
          g$val-exps$7301$1l2agK
          g$body-exp$7302$1l2agK)
        (list
          'library-letrec*
          g$name$7298$1l2agK
          (map list
               g$vars$7299$1l2agK
               g$locs$7300$1l2agK
               g$val-exps$7301$1l2agK)
          g$body-exp$7302$1l2agK)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7312$1l2agK
     g$set-cons$10951$1l2agK
     (case-lambda
       ((g$x$7770$1l2agK g$ls$7771$1l2agK)
        (if (memq g$x$7770$1l2agK g$ls$7771$1l2agK)
          g$ls$7771$1l2agK
          (cons g$x$7770$1l2agK g$ls$7771$1l2agK)))))
   (g$set-union$7313$1l2agK
     g$set-union$10952$1l2agK
     (case-lambda
       ((g$ls1$7772$1l2agK g$ls2$7773$1l2agK)
        (if (null? g$ls1$7772$1l2agK)
          g$ls2$7773$1l2agK
          (if (memq (car g$ls1$7772$1l2agK) g$ls2$7773$1l2agK)
            (g$set-union$7313$1l2agK (cdr g$ls1$7772$1l2agK) g$ls2$7773$1l2agK)
            (cons
              (car g$ls1$7772$1l2agK)
              (g$set-union$7313$1l2agK
                (cdr g$ls1$7772$1l2agK)
                g$ls2$7773$1l2agK)))))))
   (g$top-mark*$7315$1l2agK g$top-mark*$10953$1l2agK '(top))
   (g$top-marked?$7316$1l2agK
     g$top-marked?$10954$1l2agK
     (case-lambda ((g$m*$7774$1l2agK) (memq 'top g$m*$7774$1l2agK))))
   (g$gen-lexical$7317$1l2agK
     g$gen-lexical$10955$1l2agK
     (case-lambda
       ((g$sym$7775$1l2agK)
        (if (symbol? g$sym$7775$1l2agK)
          (gensym g$sym$7775$1l2agK)
          (if (g$stx?$7345$1l2agK g$sym$7775$1l2agK)
            (g$gen-lexical$7317$1l2agK
              (g$id->sym$7374$1l2agK g$sym$7775$1l2agK))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7775$1l2agK))))))
   (g$gen-global$7318$1l2agK
     g$gen-global$10956$1l2agK
     (case-lambda
       ((g$x$7776$1l2agK) (g$gen-lexical$7317$1l2agK g$x$7776$1l2agK))))
   (g$gen-label$7319$1l2agK
     g$gen-label$10957$1l2agK
     (case-lambda ((g$_$7777$1l2agK) (gensym))))
   (g$gen-top-level-label$7320$1l2agK
     g$gen-top-level-label$10958$1l2agK
     (case-lambda
       ((g$id$7778$1l2agK g$rib$7779$1l2agK)
        (letrec* ((g$find$7780$1l2agK
                    (case-lambda
                      ((g$sym$7786$1l2agK
                         g$mark*$7787$1l2agK
                         g$sym*$7788$1l2agK
                         g$mark**$7789$1l2agK
                         g$label*$7790$1l2agK)
                       (if (pair? g$sym*$7788$1l2agK)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7786$1l2agK
                                        (car g$sym*$7788$1l2agK))
                                 (begin
                                   '#f
                                   (g$same-marks?$7375$1l2agK
                                     g$mark*$7787$1l2agK
                                     (car g$mark**$7789$1l2agK)))
                                 '#f)
                             (car g$label*$7790$1l2agK)
                             (g$find$7780$1l2agK
                               g$sym$7786$1l2agK
                               g$mark*$7787$1l2agK
                               (cdr g$sym*$7788$1l2agK)
                               (cdr g$mark**$7789$1l2agK)
                               (cdr g$label*$7790$1l2agK))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7781$1l2agK g$mark*$7782$1l2agK)
              ((case-lambda
                 ((g$sym*$7783$1l2agK)
                  ((case-lambda
                     ((g$t$7784$1l2agK)
                      (if g$t$7784$1l2agK
                        ((case-lambda
                           ((g$label$7785$1l2agK)
                            (if (g$imported-label->binding$7187$1l2agK
                                  g$label$7785$1l2agK)
                              (gensym)
                              g$label$7785$1l2agK)))
                         g$t$7784$1l2agK)
                        (gensym))))
                   (if (memq
                         g$sym$7781$1l2agK
                         (g$rib-sym*$7328$1l2agK g$rib$7779$1l2agK))
                     (begin
                       '#f
                       (g$find$7780$1l2agK
                         g$sym$7781$1l2agK
                         g$mark*$7782$1l2agK
                         g$sym*$7783$1l2agK
                         (g$rib-mark**$7329$1l2agK g$rib$7779$1l2agK)
                         (g$rib-label*$7330$1l2agK g$rib$7779$1l2agK)))
                     '#f))))
               (g$rib-sym*$7328$1l2agK g$rib$7779$1l2agK))))
           (g$id->sym$7374$1l2agK g$id$7778$1l2agK)
           (g$stx-mark*$7348$1l2agK g$id$7778$1l2agK))))))
   (g$gen-define-label+loc$7321$1l2agK
     g$gen-define-label+loc$10959$1l2agK
     (case-lambda
       ((g$id$7791$1l2agK g$rib$7792$1l2agK)
        ((case-lambda
           ((g$t$7793$1l2agK)
            (if g$t$7793$1l2agK
              ((case-lambda
                 ((g$env$7794$1l2agK)
                  ((case-lambda
                     ((g$label$7795$1l2agK g$locs$7796$1l2agK)
                      (values
                        g$label$7795$1l2agK
                        ((case-lambda
                           ((g$t$7797$1l2agK)
                            (if g$t$7797$1l2agK
                              (cdr g$t$7797$1l2agK)
                              ((case-lambda
                                 ((g$loc$7798$1l2agK)
                                  (begin
                                    (g$set-interaction-env-locs!$7734$1l2agK
                                      g$env$7794$1l2agK
                                      (cons
                                        (cons
                                          g$label$7795$1l2agK
                                          g$loc$7798$1l2agK)
                                        g$locs$7796$1l2agK))
                                    g$loc$7798$1l2agK)))
                               (g$gen-lexical$7317$1l2agK g$id$7791$1l2agK)))))
                         (assq g$label$7795$1l2agK g$locs$7796$1l2agK)))))
                   (g$gen-top-level-label$7320$1l2agK
                     g$id$7791$1l2agK
                     g$rib$7792$1l2agK)
                   (g$interaction-env-locs$7731$1l2agK g$env$7794$1l2agK))))
               g$t$7793$1l2agK)
              (values (gensym) (g$gen-lexical$7317$1l2agK g$id$7791$1l2agK)))))
         (g$top-level-context$7769$1l2agK)))))
   (g$gen-define-label$7322$1l2agK
     g$gen-define-label$10960$1l2agK
     (case-lambda
       ((g$id$7799$1l2agK g$rib$7800$1l2agK)
        (if (g$top-level-context$7769$1l2agK)
          (g$gen-top-level-label$7320$1l2agK g$id$7799$1l2agK g$rib$7800$1l2agK)
          (gensym)))))
   (g$8475$7323$1l2agK
     g$8475$10961$1l2agK
     (make-record-type-descriptor
       'rib
       '#f
       'g$8478$1l2agK
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8477$7324$1l2agK g$8477$10962$1l2agK '#f)
   (g$8476$7325$1l2agK
     g$8476$10963$1l2agK
     (make-record-constructor-descriptor
       g$8475$7323$1l2agK
       '#f
       g$8477$7324$1l2agK))
   (g$rib?$7326$1l2agK
     g$rib?$10964$1l2agK
     (record-predicate g$8475$7323$1l2agK))
   (g$make-rib$7327$1l2agK
     g$make-rib$10965$1l2agK
     (record-constructor g$8476$7325$1l2agK))
   (g$rib-sym*$7328$1l2agK
     g$rib-sym*$10966$1l2agK
     (record-accessor g$8475$7323$1l2agK '0))
   (g$rib-mark**$7329$1l2agK
     g$rib-mark**$10967$1l2agK
     (record-accessor g$8475$7323$1l2agK '1))
   (g$rib-label*$7330$1l2agK
     g$rib-label*$10968$1l2agK
     (record-accessor g$8475$7323$1l2agK '2))
   (g$rib-sealed/freq$7331$1l2agK
     g$rib-sealed/freq$10969$1l2agK
     (record-accessor g$8475$7323$1l2agK '3))
   (g$set-rib-sym*!$7332$1l2agK
     g$set-rib-sym*!$10970$1l2agK
     (record-mutator g$8475$7323$1l2agK '0))
   (g$set-rib-mark**!$7333$1l2agK
     g$set-rib-mark**!$10971$1l2agK
     (record-mutator g$8475$7323$1l2agK '1))
   (g$set-rib-label*!$7334$1l2agK
     g$set-rib-label*!$10972$1l2agK
     (record-mutator g$8475$7323$1l2agK '2))
   (g$set-rib-sealed/freq!$7335$1l2agK
     g$set-rib-sealed/freq!$10973$1l2agK
     (record-mutator g$8475$7323$1l2agK '3))
   (g$make-empty-rib$7336$1l2agK
     g$make-empty-rib$10974$1l2agK
     (case-lambda (() (g$make-rib$7327$1l2agK '() '() '() '#f))))
   (g$extend-rib!$7337$1l2agK
     g$extend-rib!$10975$1l2agK
     (case-lambda
       ((g$rib$7801$1l2agK g$id$7802$1l2agK g$label$7803$1l2agK)
        (letrec* ((g$find$7804$1l2agK
                    (case-lambda
                      ((g$sym$7810$1l2agK
                         g$mark*$7811$1l2agK
                         g$sym*$7812$1l2agK
                         g$mark**$7813$1l2agK
                         g$label*$7814$1l2agK)
                       (if (pair? g$sym*$7812$1l2agK)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7810$1l2agK
                                        (car g$sym*$7812$1l2agK))
                                 (begin
                                   '#f
                                   (g$same-marks?$7375$1l2agK
                                     g$mark*$7811$1l2agK
                                     (car g$mark**$7813$1l2agK)))
                                 '#f)
                             g$label*$7814$1l2agK
                             (g$find$7804$1l2agK
                               g$sym$7810$1l2agK
                               g$mark*$7811$1l2agK
                               (cdr g$sym*$7812$1l2agK)
                               (cdr g$mark**$7813$1l2agK)
                               (cdr g$label*$7814$1l2agK))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7331$1l2agK g$rib$7801$1l2agK)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7801$1l2agK)
              (void))
            ((case-lambda
               ((g$sym$7805$1l2agK g$mark*$7806$1l2agK)
                ((case-lambda
                   ((g$sym*$7807$1l2agK)
                    ((case-lambda
                       ((g$t$7808$1l2agK)
                        (if g$t$7808$1l2agK
                          ((case-lambda
                             ((g$p$7809$1l2agK)
                              (if (not (eq? g$label$7803$1l2agK
                                            (car g$p$7809$1l2agK)))
                                (if (g$top-level-context$7769$1l2agK)
                                  (set-car! g$p$7809$1l2agK g$label$7803$1l2agK)
                                  (g$syntax-violation$7762$1l2agK
                                    '#f
                                    '"cannot redefine"
                                    g$id$7802$1l2agK))
                                (void))))
                           g$t$7808$1l2agK)
                          (begin
                            (g$set-rib-sym*!$7332$1l2agK
                              g$rib$7801$1l2agK
                              (cons g$sym$7805$1l2agK g$sym*$7807$1l2agK))
                            (g$set-rib-mark**!$7333$1l2agK
                              g$rib$7801$1l2agK
                              (cons
                                g$mark*$7806$1l2agK
                                (g$rib-mark**$7329$1l2agK g$rib$7801$1l2agK)))
                            (g$set-rib-label*!$7334$1l2agK
                              g$rib$7801$1l2agK
                              (cons
                                g$label$7803$1l2agK
                                (g$rib-label*$7330$1l2agK
                                  g$rib$7801$1l2agK)))))))
                     (if (memq
                           g$sym$7805$1l2agK
                           (g$rib-sym*$7328$1l2agK g$rib$7801$1l2agK))
                       (begin
                         '#f
                         (g$find$7804$1l2agK
                           g$sym$7805$1l2agK
                           g$mark*$7806$1l2agK
                           g$sym*$7807$1l2agK
                           (g$rib-mark**$7329$1l2agK g$rib$7801$1l2agK)
                           (g$rib-label*$7330$1l2agK g$rib$7801$1l2agK)))
                       '#f))))
                 (g$rib-sym*$7328$1l2agK g$rib$7801$1l2agK))))
             (g$id->sym$7374$1l2agK g$id$7802$1l2agK)
             (g$stx-mark*$7348$1l2agK g$id$7802$1l2agK)))))))
   (g$make-rib-map$7338$1l2agK
     g$make-rib-map$10976$1l2agK
     (case-lambda
       ((g$sym*$7815$1l2agK)
        ((case-lambda
           ((g$ht$7816$1l2agK)
            ((letrec ((g$f$7817$1l2agK
                        (case-lambda
                          ((g$i$7818$1l2agK g$sym*$7819$1l2agK)
                           (if (null? g$sym*$7819$1l2agK)
                             g$ht$7816$1l2agK
                             (begin
                               (g$hashtable-update!$5303$1l2agK
                                 g$ht$7816$1l2agK
                                 (car g$sym*$7819$1l2agK)
                                 (case-lambda
                                   ((g$x$7820$1l2agK)
                                    (cons g$i$7818$1l2agK g$x$7820$1l2agK)))
                                 '())
                               (g$f$7817$1l2agK
                                 (+ g$i$7818$1l2agK '1)
                                 (cdr g$sym*$7819$1l2agK))))))))
               g$f$7817$1l2agK)
             '0
             g$sym*$7815$1l2agK)))
         (g$make-eq-hashtable$5296$1l2agK)))))
   (g$seal-rib!$7339$1l2agK
     g$seal-rib!$10977$1l2agK
     (case-lambda
       ((g$rib$7821$1l2agK)
        ((case-lambda
           ((g$sym*$7822$1l2agK)
            (if (not (null? g$sym*$7822$1l2agK))
              (begin
                (g$set-rib-sym*!$7332$1l2agK
                  g$rib$7821$1l2agK
                  (list->vector g$sym*$7822$1l2agK))
                (g$set-rib-mark**!$7333$1l2agK
                  g$rib$7821$1l2agK
                  (list->vector (g$rib-mark**$7329$1l2agK g$rib$7821$1l2agK)))
                (g$set-rib-label*!$7334$1l2agK
                  g$rib$7821$1l2agK
                  (list->vector (g$rib-label*$7330$1l2agK g$rib$7821$1l2agK)))
                (g$set-rib-sealed/freq!$7335$1l2agK
                  g$rib$7821$1l2agK
                  (g$make-rib-map$7338$1l2agK g$sym*$7822$1l2agK)))
              (void))))
         (g$rib-sym*$7328$1l2agK g$rib$7821$1l2agK)))))
   (g$unseal-rib!$7340$1l2agK
     g$unseal-rib!$10978$1l2agK
     (case-lambda
       ((g$rib$7823$1l2agK)
        (if (g$rib-sealed/freq$7331$1l2agK g$rib$7823$1l2agK)
          (begin
            (g$set-rib-sealed/freq!$7335$1l2agK g$rib$7823$1l2agK '#f)
            (g$set-rib-sym*!$7332$1l2agK
              g$rib$7823$1l2agK
              (vector->list (g$rib-sym*$7328$1l2agK g$rib$7823$1l2agK)))
            (g$set-rib-mark**!$7333$1l2agK
              g$rib$7823$1l2agK
              (vector->list (g$rib-mark**$7329$1l2agK g$rib$7823$1l2agK)))
            (g$set-rib-label*!$7334$1l2agK
              g$rib$7823$1l2agK
              (vector->list (g$rib-label*$7330$1l2agK g$rib$7823$1l2agK))))
          (void)))))
   (g$make-full-rib$7341$1l2agK
     g$make-full-rib$10979$1l2agK
     (case-lambda
       ((g$id*$7824$1l2agK g$label*$7825$1l2agK)
        ((case-lambda
           ((g$r$7826$1l2agK)
            (begin (g$seal-rib!$7339$1l2agK g$r$7826$1l2agK) g$r$7826$1l2agK)))
         (g$make-rib$7327$1l2agK
           (map g$id->sym$7374$1l2agK g$id*$7824$1l2agK)
           (map g$stx-mark*$7348$1l2agK g$id*$7824$1l2agK)
           g$label*$7825$1l2agK
           '#f)))))
   (g$8501$7342$1l2agK
     g$8501$10980$1l2agK
     (make-record-type-descriptor
       'stx
       '#f
       'g$8504$1l2agK
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8503$7343$1l2agK g$8503$10981$1l2agK '#f)
   (g$8502$7344$1l2agK
     g$8502$10982$1l2agK
     (make-record-constructor-descriptor
       g$8501$7342$1l2agK
       '#f
       g$8503$7343$1l2agK))
   (g$stx?$7345$1l2agK
     g$stx?$10983$1l2agK
     (record-predicate g$8501$7342$1l2agK))
   (g$make-stx$7346$1l2agK
     g$make-stx$10984$1l2agK
     (record-constructor g$8502$7344$1l2agK))
   (g$stx-expr$7347$1l2agK
     g$stx-expr$10985$1l2agK
     (record-accessor g$8501$7342$1l2agK '0))
   (g$stx-mark*$7348$1l2agK
     g$stx-mark*$10986$1l2agK
     (record-accessor g$8501$7342$1l2agK '1))
   (g$stx-subst*$7349$1l2agK
     g$stx-subst*$10987$1l2agK
     (record-accessor g$8501$7342$1l2agK '2))
   (g$stx-ae*$7350$1l2agK
     g$stx-ae*$10988$1l2agK
     (record-accessor g$8501$7342$1l2agK '3))
   (g$set-stx-expr!$7351$1l2agK
     g$set-stx-expr!$10989$1l2agK
     (record-mutator g$8501$7342$1l2agK '0))
   (g$set-stx-mark*!$7352$1l2agK
     g$set-stx-mark*!$10990$1l2agK
     (record-mutator g$8501$7342$1l2agK '1))
   (g$set-stx-subst*!$7353$1l2agK
     g$set-stx-subst*!$10991$1l2agK
     (record-mutator g$8501$7342$1l2agK '2))
   (g$set-stx-ae*!$7354$1l2agK
     g$set-stx-ae*!$10992$1l2agK
     (record-mutator g$8501$7342$1l2agK '3))
   (g$rp$7355$1l2agK
     g$rp$10993$1l2agK
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7827$1l2agK g$p$7828$1l2agK)
          (begin
            (display '"#<syntax " g$p$7828$1l2agK)
            (write (g$stx->datum$7384$1l2agK g$x$7827$1l2agK) g$p$7828$1l2agK)
            ((case-lambda
               ((g$expr$7829$1l2agK)
                (if (annotation? g$expr$7829$1l2agK)
                  ((case-lambda
                     ((g$src$7830$1l2agK)
                      (if (pair? g$src$7830$1l2agK)
                        (begin
                          (display '" [" g$p$7828$1l2agK)
                          (display (cdr g$src$7830$1l2agK) g$p$7828$1l2agK)
                          (display '" of " g$p$7828$1l2agK)
                          (display (car g$src$7830$1l2agK) g$p$7828$1l2agK)
                          (display '"]" g$p$7828$1l2agK))
                        (void))))
                   (annotation-source g$expr$7829$1l2agK))
                  (void))))
             (g$stx-expr$7347$1l2agK g$x$7827$1l2agK))
            (display '">" g$p$7828$1l2agK))))))
   (g$datum->stx$7356$1l2agK
     g$datum->stx$10994$1l2agK
     (case-lambda
       ((g$id$7831$1l2agK g$datum$7832$1l2agK)
        (g$make-stx$7346$1l2agK
          g$datum$7832$1l2agK
          (g$stx-mark*$7348$1l2agK g$id$7831$1l2agK)
          (g$stx-subst*$7349$1l2agK g$id$7831$1l2agK)
          (g$stx-ae*$7350$1l2agK g$id$7831$1l2agK)))))
   (g$gen-mark$7357$1l2agK
     g$gen-mark$10995$1l2agK
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7358$1l2agK g$anti-mark$10996$1l2agK '#f)
   (g$anti-mark?$7359$1l2agK g$anti-mark?$10997$1l2agK not)
   (g$join-wraps$7360$1l2agK
     g$join-wraps$10998$1l2agK
     (case-lambda
       ((g$m1*$7833$1l2agK
          g$s1*$7834$1l2agK
          g$ae1*$7835$1l2agK
          g$e$7836$1l2agK)
        (letrec* ((g$cancel$7837$1l2agK
                    (case-lambda
                      ((g$ls1$7841$1l2agK g$ls2$7842$1l2agK)
                       ((letrec ((g$f$7843$1l2agK
                                   (case-lambda
                                     ((g$x$7844$1l2agK g$ls1$7845$1l2agK)
                                      (if (null? g$ls1$7845$1l2agK)
                                        (cdr g$ls2$7842$1l2agK)
                                        (cons
                                          g$x$7844$1l2agK
                                          (g$f$7843$1l2agK
                                            (car g$ls1$7845$1l2agK)
                                            (cdr g$ls1$7845$1l2agK))))))))
                          g$f$7843$1l2agK)
                        (car g$ls1$7841$1l2agK)
                        (cdr g$ls1$7841$1l2agK))))))
          ((case-lambda
             ((g$m2*$7838$1l2agK g$s2*$7839$1l2agK g$ae2*$7840$1l2agK)
              (if (if (not (null? g$m1*$7833$1l2agK))
                    (if (not (null? g$m2*$7838$1l2agK))
                      (begin
                        '#f
                        (g$anti-mark?$7359$1l2agK (car g$m2*$7838$1l2agK)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7837$1l2agK g$m1*$7833$1l2agK g$m2*$7838$1l2agK)
                  (g$cancel$7837$1l2agK g$s1*$7834$1l2agK g$s2*$7839$1l2agK)
                  (g$cancel$7837$1l2agK g$ae1*$7835$1l2agK g$ae2*$7840$1l2agK))
                (values
                  (append g$m1*$7833$1l2agK g$m2*$7838$1l2agK)
                  (append g$s1*$7834$1l2agK g$s2*$7839$1l2agK)
                  (append g$ae1*$7835$1l2agK g$ae2*$7840$1l2agK)))))
           (g$stx-mark*$7348$1l2agK g$e$7836$1l2agK)
           (g$stx-subst*$7349$1l2agK g$e$7836$1l2agK)
           (g$stx-ae*$7350$1l2agK g$e$7836$1l2agK))))))
   (g$mkstx$7361$1l2agK
     g$mkstx$10999$1l2agK
     (case-lambda
       ((g$e$7846$1l2agK g$m*$7847$1l2agK g$s*$7848$1l2agK g$ae*$7849$1l2agK)
        (if (if (g$stx?$7345$1l2agK g$e$7846$1l2agK)
              (begin '#f (not (g$top-marked?$7316$1l2agK g$m*$7847$1l2agK)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7360$1l2agK
                 g$m*$7847$1l2agK
                 g$s*$7848$1l2agK
                 g$ae*$7849$1l2agK
                 g$e$7846$1l2agK)))
            (case-lambda
              ((g$m*$7853$1l2agK g$s*$7854$1l2agK g$ae*$7855$1l2agK)
               ((case-lambda
                  ((g$ae*$7856$1l2agK g$s*$7857$1l2agK g$m*$7858$1l2agK)
                   (g$make-stx$7346$1l2agK
                     (g$stx-expr$7347$1l2agK g$e$7846$1l2agK)
                     g$m*$7858$1l2agK
                     g$s*$7857$1l2agK
                     g$ae*$7856$1l2agK)))
                g$ae*$7855$1l2agK
                g$s*$7854$1l2agK
                g$m*$7853$1l2agK))))
          (g$make-stx$7346$1l2agK
            g$e$7846$1l2agK
            g$m*$7847$1l2agK
            g$s*$7848$1l2agK
            g$ae*$7849$1l2agK)))))
   (g$add-mark$7362$1l2agK
     g$add-mark$11000$1l2agK
     (case-lambda
       ((g$m$7859$1l2agK g$e$7860$1l2agK g$ae$7861$1l2agK)
        (g$mkstx$7361$1l2agK
          g$e$7860$1l2agK
          (list g$m$7859$1l2agK)
          '(shift)
          (list g$ae$7861$1l2agK)))))
   (g$add-subst$7363$1l2agK
     g$add-subst$11001$1l2agK
     (case-lambda
       ((g$subst$7862$1l2agK g$e$7863$1l2agK)
        (g$mkstx$7361$1l2agK
          g$e$7863$1l2agK
          '()
          (list g$subst$7862$1l2agK)
          '()))))
   (g$syntax-kind?$7364$1l2agK
     g$syntax-kind?$11002$1l2agK
     (case-lambda
       ((g$x$7864$1l2agK g$p?$7865$1l2agK)
        (if (g$stx?$7345$1l2agK g$x$7864$1l2agK)
          (g$syntax-kind?$7364$1l2agK
            (g$stx-expr$7347$1l2agK g$x$7864$1l2agK)
            g$p?$7865$1l2agK)
          (if (annotation? g$x$7864$1l2agK)
            (g$syntax-kind?$7364$1l2agK
              (annotation-expression g$x$7864$1l2agK)
              g$p?$7865$1l2agK)
            (g$p?$7865$1l2agK g$x$7864$1l2agK))))))
   (g$syntax-vector->list$7365$1l2agK
     g$syntax-vector->list$11003$1l2agK
     (case-lambda
       ((g$x$7866$1l2agK)
        (if (g$stx?$7345$1l2agK g$x$7866$1l2agK)
          ((case-lambda
             ((g$ls$7867$1l2agK
                g$m*$7868$1l2agK
                g$s*$7869$1l2agK
                g$ae*$7870$1l2agK)
              (map (case-lambda
                     ((g$x$7871$1l2agK)
                      (g$mkstx$7361$1l2agK
                        g$x$7871$1l2agK
                        g$m*$7868$1l2agK
                        g$s*$7869$1l2agK
                        g$ae*$7870$1l2agK)))
                   g$ls$7867$1l2agK)))
           (g$syntax-vector->list$7365$1l2agK
             (g$stx-expr$7347$1l2agK g$x$7866$1l2agK))
           (g$stx-mark*$7348$1l2agK g$x$7866$1l2agK)
           (g$stx-subst*$7349$1l2agK g$x$7866$1l2agK)
           (g$stx-ae*$7350$1l2agK g$x$7866$1l2agK))
          (if (annotation? g$x$7866$1l2agK)
            (g$syntax-vector->list$7365$1l2agK
              (annotation-expression g$x$7866$1l2agK))
            (if (vector? g$x$7866$1l2agK)
              (vector->list g$x$7866$1l2agK)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7866$1l2agK)))))))
   (g$syntax-pair?$7366$1l2agK
     g$syntax-pair?$11004$1l2agK
     (case-lambda
       ((g$x$7872$1l2agK) (g$syntax-kind?$7364$1l2agK g$x$7872$1l2agK pair?))))
   (g$syntax-vector?$7367$1l2agK
     g$syntax-vector?$11005$1l2agK
     (case-lambda
       ((g$x$7873$1l2agK)
        (g$syntax-kind?$7364$1l2agK g$x$7873$1l2agK vector?))))
   (g$syntax-null?$7368$1l2agK
     g$syntax-null?$11006$1l2agK
     (case-lambda
       ((g$x$7874$1l2agK) (g$syntax-kind?$7364$1l2agK g$x$7874$1l2agK null?))))
   (g$syntax-list?$7369$1l2agK
     g$syntax-list?$11007$1l2agK
     (case-lambda
       ((g$x$7875$1l2agK)
        ((case-lambda
           ((g$t$7876$1l2agK)
            (if g$t$7876$1l2agK
              g$t$7876$1l2agK
              (begin
                '#f
                (if (g$syntax-pair?$7366$1l2agK g$x$7875$1l2agK)
                  (begin
                    '#f
                    (g$syntax-list?$7369$1l2agK
                      (g$syntax-cdr$7371$1l2agK g$x$7875$1l2agK)))
                  '#f)))))
         (g$syntax-null?$7368$1l2agK g$x$7875$1l2agK)))))
   (g$syntax-car$7370$1l2agK
     g$syntax-car$11008$1l2agK
     (case-lambda
       ((g$x$7877$1l2agK)
        (if (g$stx?$7345$1l2agK g$x$7877$1l2agK)
          (g$mkstx$7361$1l2agK
            (g$syntax-car$7370$1l2agK (g$stx-expr$7347$1l2agK g$x$7877$1l2agK))
            (g$stx-mark*$7348$1l2agK g$x$7877$1l2agK)
            (g$stx-subst*$7349$1l2agK g$x$7877$1l2agK)
            (g$stx-ae*$7350$1l2agK g$x$7877$1l2agK))
          (if (annotation? g$x$7877$1l2agK)
            (g$syntax-car$7370$1l2agK (annotation-expression g$x$7877$1l2agK))
            (if (pair? g$x$7877$1l2agK)
              (car g$x$7877$1l2agK)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7877$1l2agK)))))))
   (g$syntax-cdr$7371$1l2agK
     g$syntax-cdr$11009$1l2agK
     (case-lambda
       ((g$x$7878$1l2agK)
        (if (g$stx?$7345$1l2agK g$x$7878$1l2agK)
          (g$mkstx$7361$1l2agK
            (g$syntax-cdr$7371$1l2agK (g$stx-expr$7347$1l2agK g$x$7878$1l2agK))
            (g$stx-mark*$7348$1l2agK g$x$7878$1l2agK)
            (g$stx-subst*$7349$1l2agK g$x$7878$1l2agK)
            (g$stx-ae*$7350$1l2agK g$x$7878$1l2agK))
          (if (annotation? g$x$7878$1l2agK)
            (g$syntax-cdr$7371$1l2agK (annotation-expression g$x$7878$1l2agK))
            (if (pair? g$x$7878$1l2agK)
              (cdr g$x$7878$1l2agK)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7878$1l2agK)))))))
   (g$syntax->list$7372$1l2agK
     g$syntax->list$11010$1l2agK
     (case-lambda
       ((g$x$7879$1l2agK)
        (if (g$syntax-pair?$7366$1l2agK g$x$7879$1l2agK)
          (cons
            (g$syntax-car$7370$1l2agK g$x$7879$1l2agK)
            (g$syntax->list$7372$1l2agK
              (g$syntax-cdr$7371$1l2agK g$x$7879$1l2agK)))
          (if (g$syntax-null?$7368$1l2agK g$x$7879$1l2agK)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7879$1l2agK))))))
   (g$id?$7373$1l2agK
     g$id?$11011$1l2agK
     (case-lambda
       ((g$x$7880$1l2agK)
        (if (g$stx?$7345$1l2agK g$x$7880$1l2agK)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7881$1l2agK)
                (symbol?
                  (if (annotation? g$expr$7881$1l2agK)
                    (annotation-stripped g$expr$7881$1l2agK)
                    g$expr$7881$1l2agK))))
             (g$stx-expr$7347$1l2agK g$x$7880$1l2agK)))
          '#f))))
   (g$id->sym$7374$1l2agK
     g$id->sym$11012$1l2agK
     (case-lambda
       ((g$x$7882$1l2agK)
        (begin
          (if (not (g$stx?$7345$1l2agK g$x$7882$1l2agK))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7882$1l2agK)
            (void))
          ((case-lambda
             ((g$expr$7883$1l2agK)
              ((case-lambda
                 ((g$sym$7884$1l2agK)
                  (if (symbol? g$sym$7884$1l2agK)
                    g$sym$7884$1l2agK
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7882$1l2agK))))
               (if (annotation? g$expr$7883$1l2agK)
                 (annotation-stripped g$expr$7883$1l2agK)
                 g$expr$7883$1l2agK))))
           (g$stx-expr$7347$1l2agK g$x$7882$1l2agK))))))
   (g$same-marks?$7375$1l2agK
     g$same-marks?$11013$1l2agK
     (case-lambda
       ((g$x$7885$1l2agK g$y$7886$1l2agK)
        ((case-lambda
           ((g$t$7887$1l2agK)
            (if g$t$7887$1l2agK
              g$t$7887$1l2agK
              (begin
                '#f
                (if (pair? g$x$7885$1l2agK)
                  (if (pair? g$y$7886$1l2agK)
                    (if (eq? (car g$x$7885$1l2agK) (car g$y$7886$1l2agK))
                      (begin
                        '#f
                        (g$same-marks?$7375$1l2agK
                          (cdr g$x$7885$1l2agK)
                          (cdr g$y$7886$1l2agK)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7885$1l2agK)
           (begin '#f (null? g$y$7886$1l2agK))
           '#f)))))
   (g$bound-id=?$7376$1l2agK
     g$bound-id=?$11014$1l2agK
     (case-lambda
       ((g$x$7888$1l2agK g$y$7889$1l2agK)
        (if (eq? (g$id->sym$7374$1l2agK g$x$7888$1l2agK)
                 (g$id->sym$7374$1l2agK g$y$7889$1l2agK))
          (begin
            '#f
            (g$same-marks?$7375$1l2agK
              (g$stx-mark*$7348$1l2agK g$x$7888$1l2agK)
              (g$stx-mark*$7348$1l2agK g$y$7889$1l2agK)))
          '#f))))
   (g$free-id=?$7377$1l2agK
     g$free-id=?$11015$1l2agK
     (case-lambda
       ((g$i$7890$1l2agK g$j$7891$1l2agK)
        ((case-lambda
           ((g$t0$7892$1l2agK g$t1$7893$1l2agK)
            (if ((case-lambda
                   ((g$t$7894$1l2agK)
                    (if g$t$7894$1l2agK
                      g$t$7894$1l2agK
                      (begin '#f g$t1$7893$1l2agK))))
                 g$t0$7892$1l2agK)
              (eq? g$t0$7892$1l2agK g$t1$7893$1l2agK)
              (eq? (g$id->sym$7374$1l2agK g$i$7890$1l2agK)
                   (g$id->sym$7374$1l2agK g$j$7891$1l2agK)))))
         (g$id->real-label$7387$1l2agK g$i$7890$1l2agK)
         (g$id->real-label$7387$1l2agK g$j$7891$1l2agK)))))
   (g$valid-bound-ids?$7378$1l2agK
     g$valid-bound-ids?$11016$1l2agK
     (case-lambda
       ((g$id*$7895$1l2agK)
        (if (g$for-all$5503$1l2agK g$id?$7373$1l2agK g$id*$7895$1l2agK)
          (begin '#f (g$distinct-bound-ids?$7379$1l2agK g$id*$7895$1l2agK))
          '#f))))
   (g$distinct-bound-ids?$7379$1l2agK
     g$distinct-bound-ids?$11017$1l2agK
     (case-lambda
       ((g$id*$7896$1l2agK)
        ((case-lambda
           ((g$t$7897$1l2agK)
            (if g$t$7897$1l2agK
              g$t$7897$1l2agK
              (begin
                '#f
                (if (not (g$bound-id-member?$7380$1l2agK
                           (car g$id*$7896$1l2agK)
                           (cdr g$id*$7896$1l2agK)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7379$1l2agK (cdr g$id*$7896$1l2agK)))
                  '#f)))))
         (null? g$id*$7896$1l2agK)))))
   (g$bound-id-member?$7380$1l2agK
     g$bound-id-member?$11018$1l2agK
     (case-lambda
       ((g$id$7898$1l2agK g$id*$7899$1l2agK)
        (if (pair? g$id*$7899$1l2agK)
          (begin
            '#f
            ((case-lambda
               ((g$t$7900$1l2agK)
                (if g$t$7900$1l2agK
                  g$t$7900$1l2agK
                  (begin
                    '#f
                    (g$bound-id-member?$7380$1l2agK
                      g$id$7898$1l2agK
                      (cdr g$id*$7899$1l2agK))))))
             (g$bound-id=?$7376$1l2agK
               g$id$7898$1l2agK
               (car g$id*$7899$1l2agK))))
          '#f))))
   (g$self-evaluating?$7381$1l2agK
     g$self-evaluating?$11019$1l2agK
     (case-lambda
       ((g$x$7901$1l2agK)
        ((case-lambda
           ((g$t$7902$1l2agK)
            (if g$t$7902$1l2agK
              g$t$7902$1l2agK
              ((case-lambda
                 ((g$t$7903$1l2agK)
                  (if g$t$7903$1l2agK
                    g$t$7903$1l2agK
                    ((case-lambda
                       ((g$t$7904$1l2agK)
                        (if g$t$7904$1l2agK
                          g$t$7904$1l2agK
                          ((case-lambda
                             ((g$t$7905$1l2agK)
                              (if g$t$7905$1l2agK
                                g$t$7905$1l2agK
                                (begin '#f (bytevector? g$x$7901$1l2agK)))))
                           (boolean? g$x$7901$1l2agK)))))
                     (char? g$x$7901$1l2agK)))))
               (string? g$x$7901$1l2agK)))))
         (number? g$x$7901$1l2agK)))))
   (g$strip-annotations$7382$1l2agK
     g$strip-annotations$11020$1l2agK
     (case-lambda
       ((g$x$7906$1l2agK)
        (if (pair? g$x$7906$1l2agK)
          (cons
            (g$strip-annotations$7382$1l2agK (car g$x$7906$1l2agK))
            (g$strip-annotations$7382$1l2agK (cdr g$x$7906$1l2agK)))
          (if (vector? g$x$7906$1l2agK)
            (vector-map g$strip-annotations$7382$1l2agK g$x$7906$1l2agK)
            (if (annotation? g$x$7906$1l2agK)
              (annotation-stripped g$x$7906$1l2agK)
              g$x$7906$1l2agK))))))
   (g$strip$7383$1l2agK
     g$strip$11021$1l2agK
     (case-lambda
       ((g$x$7907$1l2agK g$m*$7908$1l2agK)
        (if (g$top-marked?$7316$1l2agK g$m*$7908$1l2agK)
          (if ((case-lambda
                 ((g$t$7909$1l2agK)
                  (if g$t$7909$1l2agK
                    g$t$7909$1l2agK
                    ((case-lambda
                       ((g$t$7910$1l2agK)
                        (if g$t$7910$1l2agK
                          g$t$7910$1l2agK
                          (begin
                            '#f
                            (if (vector? g$x$7907$1l2agK)
                              (if (> (vector-length g$x$7907$1l2agK) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7907$1l2agK '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7907$1l2agK)
                       (begin '#f (annotation? (car g$x$7907$1l2agK)))
                       '#f)))))
               (annotation? g$x$7907$1l2agK))
            (g$strip-annotations$7382$1l2agK g$x$7907$1l2agK)
            g$x$7907$1l2agK)
          ((letrec ((g$f$7911$1l2agK
                      (case-lambda
                        ((g$x$7912$1l2agK)
                         (if (g$stx?$7345$1l2agK g$x$7912$1l2agK)
                           (g$strip$7383$1l2agK
                             (g$stx-expr$7347$1l2agK g$x$7912$1l2agK)
                             (g$stx-mark*$7348$1l2agK g$x$7912$1l2agK))
                           (if (annotation? g$x$7912$1l2agK)
                             (annotation-stripped g$x$7912$1l2agK)
                             (if (pair? g$x$7912$1l2agK)
                               ((case-lambda
                                  ((g$a$7913$1l2agK g$d$7914$1l2agK)
                                   (if (if (eq? g$a$7913$1l2agK
                                                (car g$x$7912$1l2agK))
                                         (begin
                                           '#f
                                           (eq? g$d$7914$1l2agK
                                                (cdr g$x$7912$1l2agK)))
                                         '#f)
                                     g$x$7912$1l2agK
                                     (cons g$a$7913$1l2agK g$d$7914$1l2agK))))
                                (g$f$7911$1l2agK (car g$x$7912$1l2agK))
                                (g$f$7911$1l2agK (cdr g$x$7912$1l2agK)))
                               (if (vector? g$x$7912$1l2agK)
                                 ((case-lambda
                                    ((g$old$7915$1l2agK)
                                     ((case-lambda
                                        ((g$new$7916$1l2agK)
                                         (if (g$for-all$5503$1l2agK
                                               eq?
                                               g$old$7915$1l2agK
                                               g$new$7916$1l2agK)
                                           g$x$7912$1l2agK
                                           (list->vector g$new$7916$1l2agK))))
                                      (map g$f$7911$1l2agK g$old$7915$1l2agK))))
                                  (vector->list g$x$7912$1l2agK))
                                 g$x$7912$1l2agK))))))))
             g$f$7911$1l2agK)
           g$x$7907$1l2agK)))))
   (g$stx->datum$7384$1l2agK
     g$stx->datum$11022$1l2agK
     (case-lambda
       ((g$x$7917$1l2agK) (g$strip$7383$1l2agK g$x$7917$1l2agK '()))))
   (g$same-marks*?$7385$1l2agK
     g$same-marks*?$11023$1l2agK
     (case-lambda
       ((g$mark*$7918$1l2agK g$mark**$7919$1l2agK g$si$7920$1l2agK)
        (if (null? g$si$7920$1l2agK)
          '#f
          (if (g$same-marks?$7375$1l2agK
                g$mark*$7918$1l2agK
                (vector-ref g$mark**$7919$1l2agK (car g$si$7920$1l2agK)))
            (car g$si$7920$1l2agK)
            (g$same-marks*?$7385$1l2agK
              g$mark*$7918$1l2agK
              g$mark**$7919$1l2agK
              (cdr g$si$7920$1l2agK)))))))
   (g$id->label$7386$1l2agK
     g$id->label$11024$1l2agK
     (case-lambda
       ((g$id$7921$1l2agK)
        ((case-lambda
           ((g$t$7922$1l2agK)
            (if g$t$7922$1l2agK
              g$t$7922$1l2agK
              (begin
                '#f
                ((case-lambda
                   ((g$t$7923$1l2agK)
                    (if g$t$7923$1l2agK
                      ((case-lambda
                         ((g$env$7924$1l2agK)
                          ((case-lambda
                             ((g$rib$7925$1l2agK)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7321$1l2agK
                                     g$id$7921$1l2agK
                                     g$rib$7925$1l2agK)))
                                (case-lambda
                                  ((g$lab$7928$1l2agK g$loc_$7929$1l2agK)
                                   ((case-lambda
                                      ((g$loc_$7930$1l2agK g$lab$7931$1l2agK)
                                       (begin
                                         (g$extend-rib!$7337$1l2agK
                                           g$rib$7925$1l2agK
                                           g$id$7921$1l2agK
                                           g$lab$7931$1l2agK)
                                         g$lab$7931$1l2agK)))
                                    g$loc_$7929$1l2agK
                                    g$lab$7928$1l2agK))))))
                           (g$interaction-env-rib$7729$1l2agK
                             g$env$7924$1l2agK))))
                       g$t$7923$1l2agK)
                      '#f)))
                 (g$top-level-context$7769$1l2agK))))))
         (g$id->real-label$7387$1l2agK g$id$7921$1l2agK)))))
   (g$id->real-label$7387$1l2agK
     g$id->real-label$11025$1l2agK
     (case-lambda
       ((g$id$7932$1l2agK)
        ((case-lambda
           ((g$sym$7933$1l2agK)
            ((letrec ((g$search$7934$1l2agK
                        (case-lambda
                          ((g$subst*$7935$1l2agK g$mark*$7936$1l2agK)
                           (if (null? g$subst*$7935$1l2agK)
                             '#f
                             (if (eq? (car g$subst*$7935$1l2agK) 'shift)
                               (g$search$7934$1l2agK
                                 (cdr g$subst*$7935$1l2agK)
                                 (cdr g$mark*$7936$1l2agK))
                               ((case-lambda
                                  ((g$rib$7937$1l2agK)
                                   ((case-lambda
                                      ((g$t$7938$1l2agK)
                                       (if g$t$7938$1l2agK
                                         ((case-lambda
                                            ((g$ht$7939$1l2agK)
                                             ((case-lambda
                                                ((g$si$7940$1l2agK)
                                                 ((case-lambda
                                                    ((g$i$7941$1l2agK)
                                                     (if g$i$7941$1l2agK
                                                       (vector-ref
                                                         (g$rib-label*$7330$1l2agK
                                                           g$rib$7937$1l2agK)
                                                         g$i$7941$1l2agK)
                                                       (g$search$7934$1l2agK
                                                         (cdr g$subst*$7935$1l2agK)
                                                         g$mark*$7936$1l2agK))))
                                                  (if g$si$7940$1l2agK
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7385$1l2agK
                                                        g$mark*$7936$1l2agK
                                                        (g$rib-mark**$7329$1l2agK
                                                          g$rib$7937$1l2agK)
                                                        (reverse
                                                          g$si$7940$1l2agK)))
                                                    '#f))))
                                              (g$hashtable-ref$5299$1l2agK
                                                g$ht$7939$1l2agK
                                                g$sym$7933$1l2agK
                                                '#f))))
                                          g$t$7938$1l2agK)
                                         ((letrec ((g$f$7942$1l2agK
                                                     (case-lambda
                                                       ((g$sym*$7943$1l2agK
                                                          g$mark**$7944$1l2agK
                                                          g$label*$7945$1l2agK)
                                                        (if (null?
                                                              g$sym*$7943$1l2agK)
                                                          (g$search$7934$1l2agK
                                                            (cdr g$subst*$7935$1l2agK)
                                                            g$mark*$7936$1l2agK)
                                                          (if (if (eq? (car g$sym*$7943$1l2agK)
                                                                       g$sym$7933$1l2agK)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7375$1l2agK
                                                                    (car g$mark**$7944$1l2agK)
                                                                    g$mark*$7936$1l2agK))
                                                                '#f)
                                                            (car g$label*$7945$1l2agK)
                                                            (g$f$7942$1l2agK
                                                              (cdr g$sym*$7943$1l2agK)
                                                              (cdr g$mark**$7944$1l2agK)
                                                              (cdr g$label*$7945$1l2agK))))))))
                                            g$f$7942$1l2agK)
                                          (g$rib-sym*$7328$1l2agK
                                            g$rib$7937$1l2agK)
                                          (g$rib-mark**$7329$1l2agK
                                            g$rib$7937$1l2agK)
                                          (g$rib-label*$7330$1l2agK
                                            g$rib$7937$1l2agK)))))
                                    (g$rib-sealed/freq$7331$1l2agK
                                      g$rib$7937$1l2agK))))
                                (car g$subst*$7935$1l2agK))))))))
               g$search$7934$1l2agK)
             (g$stx-subst*$7349$1l2agK g$id$7932$1l2agK)
             (g$stx-mark*$7348$1l2agK g$id$7932$1l2agK))))
         (g$id->sym$7374$1l2agK g$id$7932$1l2agK)))))
   (g$label->binding$7388$1l2agK
     g$label->binding$11026$1l2agK
     (case-lambda
       ((g$x$7946$1l2agK g$r$7947$1l2agK)
        ((case-lambda
           ((g$t$7948$1l2agK)
            (if g$t$7948$1l2agK
              ((case-lambda
                 ((g$b$7949$1l2agK)
                  (if (if (pair? g$b$7949$1l2agK)
                        (begin '#f (eq? (car g$b$7949$1l2agK) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7614$1l2agK (cdr g$b$7949$1l2agK)))
                    (if (if (pair? g$b$7949$1l2agK)
                          (begin '#f (eq? (car g$b$7949$1l2agK) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7950$1l2agK g$loc$7951$1l2agK)
                          (cons '$rtd (symbol-value g$loc$7951$1l2agK))))
                       (g$cadr$5022$1l2agK g$b$7949$1l2agK)
                       (g$cddr$5024$1l2agK g$b$7949$1l2agK))
                      g$b$7949$1l2agK))))
               g$t$7948$1l2agK)
              ((case-lambda
                 ((g$t$7952$1l2agK)
                  (if g$t$7952$1l2agK
                    (cdr g$t$7952$1l2agK)
                    ((case-lambda
                       ((g$t$7953$1l2agK)
                        (if g$t$7953$1l2agK
                          ((case-lambda
                             ((g$env$7954$1l2agK)
                              ((case-lambda
                                 ((g$t$7955$1l2agK)
                                  (if g$t$7955$1l2agK
                                    ((case-lambda
                                       ((g$p$7956$1l2agK)
                                        (g$cons*$5505$1l2agK
                                          'lexical
                                          (cdr g$p$7956$1l2agK)
                                          '#f)))
                                     g$t$7955$1l2agK)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$7946$1l2agK
                                 (g$interaction-env-locs$7731$1l2agK
                                   g$env$7954$1l2agK)))))
                           g$t$7953$1l2agK)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7769$1l2agK)))))
               (assq g$x$7946$1l2agK g$r$7947$1l2agK)))))
         (g$imported-label->binding$7187$1l2agK g$x$7946$1l2agK)))))
   (g$make-binding$7389$1l2agK g$make-binding$11027$1l2agK cons)
   (g$binding-type$7390$1l2agK g$binding-type$11028$1l2agK car)
   (g$binding-value$7391$1l2agK g$binding-value$11029$1l2agK cdr)
   (g$raise-unbound-error$7392$1l2agK
     g$raise-unbound-error$11030$1l2agK
     (case-lambda
       ((g$id$7957$1l2agK)
        (g$syntax-violation*$7761$1l2agK
          '#f
          '"unbound identifier"
          g$id$7957$1l2agK
          (g$make-undefined-violation$5839$1l2agK)))))
   (g$syntax-type$7393$1l2agK
     g$syntax-type$11031$1l2agK
     (case-lambda
       ((g$e$7958$1l2agK g$r$7959$1l2agK)
        (if (g$id?$7373$1l2agK g$e$7958$1l2agK)
          ((case-lambda
             ((g$id$7960$1l2agK)
              ((case-lambda
                 ((g$label$7961$1l2agK)
                  ((case-lambda
                     ((g$b$7962$1l2agK)
                      ((case-lambda
                         ((g$type$7963$1l2agK)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$7961$1l2agK)
                                  (g$raise-unbound-error$7392$1l2agK
                                    g$id$7960$1l2agK)
                                  (void))
                                ((case-lambda
                                   ((g$t$7964$1l2agK)
                                    (if (memv
                                          g$t$7964$1l2agK
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7963$1l2agK
                                        (g$binding-value$7391$1l2agK
                                          g$b$7962$1l2agK)
                                        g$id$7960$1l2agK)
                                      (values 'other '#f '#f))))
                                 g$type$7963$1l2agK)))))))
                       (g$binding-type$7390$1l2agK g$b$7962$1l2agK))))
                   (g$label->binding$7388$1l2agK
                     g$label$7961$1l2agK
                     g$r$7959$1l2agK))))
               (g$id->label$7386$1l2agK g$id$7960$1l2agK))))
           g$e$7958$1l2agK)
          (if (g$syntax-pair?$7366$1l2agK g$e$7958$1l2agK)
            ((case-lambda
               ((g$id$7965$1l2agK)
                (if (g$id?$7373$1l2agK g$id$7965$1l2agK)
                  ((case-lambda
                     ((g$label$7966$1l2agK)
                      ((case-lambda
                         ((g$b$7967$1l2agK)
                          ((case-lambda
                             ((g$type$7968$1l2agK)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$7966$1l2agK)
                                      (g$raise-unbound-error$7392$1l2agK
                                        g$id$7965$1l2agK)
                                      (void))
                                    ((case-lambda
                                       ((g$t$7969$1l2agK)
                                        (if (memv
                                              g$t$7969$1l2agK
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$7968$1l2agK
                                            (g$binding-value$7391$1l2agK
                                              g$b$7967$1l2agK)
                                            g$id$7965$1l2agK)
                                          (values 'call '#f '#f))))
                                     g$type$7968$1l2agK)))))))
                           (g$binding-type$7390$1l2agK g$b$7967$1l2agK))))
                       (g$label->binding$7388$1l2agK
                         g$label$7966$1l2agK
                         g$r$7959$1l2agK))))
                   (g$id->label$7386$1l2agK g$id$7965$1l2agK))
                  (values 'call '#f '#f))))
             (g$syntax-car$7370$1l2agK g$e$7958$1l2agK))
            ((case-lambda
               ((g$d$7970$1l2agK)
                (if (g$self-evaluating?$7381$1l2agK g$d$7970$1l2agK)
                  (values 'constant g$d$7970$1l2agK '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7384$1l2agK g$e$7958$1l2agK)))))))
   (g$sanitize-binding$7401$1l2agK
     g$sanitize-binding$11032$1l2agK
     (case-lambda
       ((g$x$7971$1l2agK g$src$7972$1l2agK)
        (if (procedure? g$x$7971$1l2agK)
          (g$cons*$5505$1l2agK 'local-macro g$x$7971$1l2agK g$src$7972$1l2agK)
          (if (if (pair? g$x$7971$1l2agK)
                (if (eq? (car g$x$7971$1l2agK) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7971$1l2agK)))
                  '#f)
                '#f)
            (g$cons*$5505$1l2agK
              'local-macro!
              (cdr g$x$7971$1l2agK)
              g$src$7972$1l2agK)
            (if (if (pair? g$x$7971$1l2agK)
                  (begin '#f (eq? (car g$x$7971$1l2agK) '$rtd))
                  '#f)
              g$x$7971$1l2agK
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7971$1l2agK)))))))
   (g$make-variable-transformer$7402$1l2agK
     g$make-variable-transformer$11033$1l2agK
     (case-lambda
       ((g$x$7973$1l2agK)
        (if (procedure? g$x$7973$1l2agK)
          (cons 'macro! g$x$7973$1l2agK)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7973$1l2agK)))))
   (g$variable-transformer?$7403$1l2agK
     g$variable-transformer?$11034$1l2agK
     (case-lambda
       ((g$x$7974$1l2agK)
        (if (pair? g$x$7974$1l2agK)
          (if (eq? (car g$x$7974$1l2agK) 'macro!)
            (begin '#f (procedure? (cdr g$x$7974$1l2agK)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7404$1l2agK
     g$variable-transformer-procedure$11035$1l2agK
     (case-lambda
       ((g$x$7975$1l2agK)
        (if (g$variable-transformer?$7403$1l2agK g$x$7975$1l2agK)
          (cdr g$x$7975$1l2agK)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7975$1l2agK)))))
   (g$make-eval-transformer$7405$1l2agK
     g$make-eval-transformer$11036$1l2agK
     (case-lambda
       ((g$x$7976$1l2agK)
        (g$sanitize-binding$7401$1l2agK
          (eval-core (g$expanded->core$6887$1l2agK g$x$7976$1l2agK))
          g$x$7976$1l2agK))))
   (g$parse-define$7591$1l2agK
     g$parse-define$11037$1l2agK
     (case-lambda
       ((g$x$7977$1l2agK)
        ((case-lambda
           ((g$t$7978$1l2agK)
            ((case-lambda
               ((g$ls/false$7979$1l2agK)
                (if (if g$ls/false$7979$1l2agK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7980$1l2agK
                               g$fmls$7981$1l2agK
                               g$b$7982$1l2agK
                               g$b*$7983$1l2agK)
                             (g$id?$7373$1l2agK g$id$7980$1l2agK)))
                          g$ls/false$7979$1l2agK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7984$1l2agK
                         g$fmls$7985$1l2agK
                         g$b$7986$1l2agK
                         g$b*$7987$1l2agK)
                       (begin
                         (g$verify-formals$7671$1l2agK
                           g$fmls$7985$1l2agK
                           g$x$7977$1l2agK)
                         (values
                           g$id$7984$1l2agK
                           (cons
                             'defun
                             (cons
                               g$fmls$7985$1l2agK
                               (cons g$b$7986$1l2agK g$b*$7987$1l2agK)))))))
                    g$ls/false$7979$1l2agK)
                  ((case-lambda
                     ((g$t$7988$1l2agK)
                      ((case-lambda
                         ((g$ls/false$7989$1l2agK)
                          (if (if g$ls/false$7989$1l2agK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7990$1l2agK g$val$7991$1l2agK)
                                       (g$id?$7373$1l2agK g$id$7990$1l2agK)))
                                    g$ls/false$7989$1l2agK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7992$1l2agK g$val$7993$1l2agK)
                                 (values
                                   g$id$7992$1l2agK
                                   (cons 'expr g$val$7993$1l2agK))))
                              g$ls/false$7989$1l2agK)
                            ((case-lambda
                               ((g$t$7994$1l2agK)
                                ((case-lambda
                                   ((g$ls/false$7995$1l2agK)
                                    (if (if g$ls/false$7995$1l2agK
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7996$1l2agK)
                                                 (g$id?$7373$1l2agK
                                                   g$id$7996$1l2agK)))
                                              g$ls/false$7995$1l2agK))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7997$1l2agK)
                                           (values
                                             g$id$7997$1l2agK
                                             (cons
                                               'expr
                                               (g$bless$7614$1l2agK '(void))))))
                                        g$ls/false$7995$1l2agK)
                                      (g$syntax-violation$7762$1l2agK
                                        '#f
                                        '"invalid syntax"
                                        g$t$7994$1l2agK))))
                                 (g$syntax-dispatch$7651$1l2agK
                                   g$t$7994$1l2agK
                                   '(_ any)))))
                             g$t$7988$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$7988$1l2agK
                         '(_ any any)))))
                   g$t$7978$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$7978$1l2agK
               '(_ (any . any) any . each-any)))))
         g$x$7977$1l2agK))))
   (g$parse-define-syntax$7592$1l2agK
     g$parse-define-syntax$11038$1l2agK
     (case-lambda
       ((g$x$7998$1l2agK)
        ((case-lambda
           ((g$t$7999$1l2agK)
            ((case-lambda
               ((g$ls/false$8000$1l2agK)
                (if (if g$ls/false$8000$1l2agK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8001$1l2agK g$val$8002$1l2agK)
                             (g$id?$7373$1l2agK g$id$8001$1l2agK)))
                          g$ls/false$8000$1l2agK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8003$1l2agK g$val$8004$1l2agK)
                       (values g$id$8003$1l2agK g$val$8004$1l2agK)))
                    g$ls/false$8000$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$7999$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$7999$1l2agK '(_ any any)))))
         g$x$7998$1l2agK))))
   (g$scheme-stx-hashtable$7593$1l2agK
     g$scheme-stx-hashtable$11039$1l2agK
     (g$make-eq-hashtable$5296$1l2agK))
   (g$scheme-stx$7594$1l2agK
     g$scheme-stx$11040$1l2agK
     (case-lambda
       ((g$sym$8005$1l2agK)
        ((case-lambda
           ((g$t$8006$1l2agK)
            (if g$t$8006$1l2agK
              g$t$8006$1l2agK
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8007$1l2agK)
                    ((case-lambda
                       ((g$stx$8008$1l2agK)
                        ((case-lambda
                           ((g$stx$8009$1l2agK)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5300$1l2agK
                                    g$scheme-stx-hashtable$7593$1l2agK
                                    g$sym$8005$1l2agK
                                    g$stx$8009$1l2agK)
                                  g$stx$8009$1l2agK))))))
                         ((case-lambda
                            ((g$t$8010$1l2agK)
                             (if g$t$8010$1l2agK
                               ((case-lambda
                                  ((g$x$8011$1l2agK)
                                   ((case-lambda
                                      ((g$name$8012$1l2agK g$label$8013$1l2agK)
                                       (g$add-subst$7363$1l2agK
                                         (g$make-rib$7327$1l2agK
                                           (list g$name$8012$1l2agK)
                                           (list g$top-mark*$7315$1l2agK)
                                           (list g$label$8013$1l2agK)
                                           '#f)
                                         g$stx$8008$1l2agK)))
                                    (car g$x$8011$1l2agK)
                                    (cdr g$x$8011$1l2agK))))
                                g$t$8010$1l2agK)
                               g$stx$8008$1l2agK)))
                          (assq g$sym$8005$1l2agK g$subst$8007$1l2agK)))))
                     (g$make-stx$7346$1l2agK
                       g$sym$8005$1l2agK
                       g$top-mark*$7315$1l2agK
                       '()
                       '()))))
                 (g$library-subst$7145$1l2agK
                   (g$find-library-by-name$7181$1l2agK
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5299$1l2agK
           g$scheme-stx-hashtable$7593$1l2agK
           g$sym$8005$1l2agK
           '#f)))))
   (g$lexical-var$7595$1l2agK g$lexical-var$11041$1l2agK car)
   (g$lexical-mutable?$7596$1l2agK g$lexical-mutable?$11042$1l2agK cdr)
   (g$set-lexical-mutable!$7597$1l2agK
     g$set-lexical-mutable!$11043$1l2agK
     set-cdr!)
   (g$add-lexical$7598$1l2agK
     g$add-lexical$11044$1l2agK
     (case-lambda
       ((g$lab$8014$1l2agK g$lex$8015$1l2agK g$r$8016$1l2agK)
        (cons
          (g$cons*$5505$1l2agK g$lab$8014$1l2agK 'lexical g$lex$8015$1l2agK '#f)
          g$r$8016$1l2agK))))
   (g$add-lexicals$7599$1l2agK
     g$add-lexicals$11045$1l2agK
     (case-lambda
       ((g$lab*$8017$1l2agK g$lex*$8018$1l2agK g$r$8019$1l2agK)
        (if (null? g$lab*$8017$1l2agK)
          g$r$8019$1l2agK
          (g$add-lexicals$7599$1l2agK
            (cdr g$lab*$8017$1l2agK)
            (cdr g$lex*$8018$1l2agK)
            (g$add-lexical$7598$1l2agK
              (car g$lab*$8017$1l2agK)
              (car g$lex*$8018$1l2agK)
              g$r$8019$1l2agK))))))
   (g$letrec-helper$7600$1l2agK
     g$letrec-helper$11046$1l2agK
     (case-lambda
       ((g$e$8020$1l2agK g$r$8021$1l2agK g$mr$8022$1l2agK g$build$8023$1l2agK)
        ((case-lambda
           ((g$t$8024$1l2agK)
            ((case-lambda
               ((g$ls/false$8025$1l2agK)
                (if g$ls/false$8025$1l2agK
                  (apply
                    (case-lambda
                      ((g$lhs*$8026$1l2agK
                         g$rhs*$8027$1l2agK
                         g$b$8028$1l2agK
                         g$b*$8029$1l2agK)
                       (if (not (g$valid-bound-ids?$7378$1l2agK
                                  g$lhs*$8026$1l2agK))
                         (g$invalid-fmls-error$7616$1l2agK
                           g$e$8020$1l2agK
                           g$lhs*$8026$1l2agK)
                         ((case-lambda
                            ((g$lex*$8030$1l2agK g$lab*$8031$1l2agK)
                             ((case-lambda
                                ((g$rib$8032$1l2agK g$r$8033$1l2agK)
                                 ((case-lambda
                                    ((g$body$8034$1l2agK g$rhs*$8035$1l2agK)
                                     (g$build$8023$1l2agK
                                       '#f
                                       g$lex*$8030$1l2agK
                                       g$rhs*$8035$1l2agK
                                       g$body$8034$1l2agK)))
                                  (g$chi-internal$7680$1l2agK
                                    (g$add-subst$7363$1l2agK
                                      g$rib$8032$1l2agK
                                      (cons g$b$8028$1l2agK g$b*$8029$1l2agK))
                                    g$r$8033$1l2agK
                                    g$mr$8022$1l2agK)
                                  (g$chi-expr*$7667$1l2agK
                                    (map (case-lambda
                                           ((g$x$8036$1l2agK)
                                            (g$add-subst$7363$1l2agK
                                              g$rib$8032$1l2agK
                                              g$x$8036$1l2agK)))
                                         g$rhs*$8027$1l2agK)
                                    g$r$8033$1l2agK
                                    g$mr$8022$1l2agK))))
                              (g$make-full-rib$7341$1l2agK
                                g$lhs*$8026$1l2agK
                                g$lab*$8031$1l2agK)
                              (g$add-lexicals$7599$1l2agK
                                g$lab*$8031$1l2agK
                                g$lex*$8030$1l2agK
                                g$r$8021$1l2agK))))
                          (map g$gen-lexical$7317$1l2agK g$lhs*$8026$1l2agK)
                          (map g$gen-label$7319$1l2agK g$lhs*$8026$1l2agK)))))
                    g$ls/false$8025$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8024$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8024$1l2agK
               '(_ #(each (any any)) any . each-any)))))
         g$e$8020$1l2agK))))
   (g$letrec-transformer$7601$1l2agK
     g$letrec-transformer$11047$1l2agK
     (case-lambda
       ((g$e$8037$1l2agK g$r$8038$1l2agK g$mr$8039$1l2agK)
        (g$letrec-helper$7600$1l2agK
          g$e$8037$1l2agK
          g$r$8038$1l2agK
          g$mr$8039$1l2agK
          g$build-letrec$7309$1l2agK))))
   (g$letrec*-transformer$7602$1l2agK
     g$letrec*-transformer$11048$1l2agK
     (case-lambda
       ((g$e$8040$1l2agK g$r$8041$1l2agK g$mr$8042$1l2agK)
        (g$letrec-helper$7600$1l2agK
          g$e$8040$1l2agK
          g$r$8041$1l2agK
          g$mr$8042$1l2agK
          g$build-letrec*$7310$1l2agK))))
   (g$fluid-let-syntax-transformer$7603$1l2agK
     g$fluid-let-syntax-transformer$11049$1l2agK
     (case-lambda
       ((g$e$8043$1l2agK g$r$8044$1l2agK g$mr$8045$1l2agK)
        (letrec* ((g$lookup$8046$1l2agK
                    (case-lambda
                      ((g$x$8056$1l2agK)
                       ((case-lambda
                          ((g$t$8057$1l2agK)
                           (if g$t$8057$1l2agK
                             g$t$8057$1l2agK
                             (begin
                               '#f
                               (g$syntax-violation$7762$1l2agK
                                 '#f
                                 '"unbound identifier"
                                 g$e$8043$1l2agK
                                 g$x$8056$1l2agK)))))
                        (g$id->label$7386$1l2agK g$x$8056$1l2agK))))))
          ((case-lambda
             ((g$t$8047$1l2agK)
              ((case-lambda
                 ((g$ls/false$8048$1l2agK)
                  (if g$ls/false$8048$1l2agK
                    (apply
                      (case-lambda
                        ((g$lhs*$8049$1l2agK
                           g$rhs*$8050$1l2agK
                           g$b$8051$1l2agK
                           g$b*$8052$1l2agK)
                         (if (not (g$valid-bound-ids?$7378$1l2agK
                                    g$lhs*$8049$1l2agK))
                           (g$invalid-fmls-error$7616$1l2agK
                             g$e$8043$1l2agK
                             g$lhs*$8049$1l2agK)
                           ((case-lambda
                              ((g$lab*$8053$1l2agK g$rhs*$8054$1l2agK)
                               (g$chi-internal$7680$1l2agK
                                 (cons g$b$8051$1l2agK g$b*$8052$1l2agK)
                                 (append
                                   (map cons
                                        g$lab*$8053$1l2agK
                                        g$rhs*$8054$1l2agK)
                                   g$r$8044$1l2agK)
                                 (append
                                   (map cons
                                        g$lab*$8053$1l2agK
                                        g$rhs*$8054$1l2agK)
                                   g$mr$8045$1l2agK))))
                            (map g$lookup$8046$1l2agK g$lhs*$8049$1l2agK)
                            (map (case-lambda
                                   ((g$x$8055$1l2agK)
                                    (g$make-eval-transformer$7405$1l2agK
                                      (g$expand-transformer$7696$1l2agK
                                        g$x$8055$1l2agK
                                        g$mr$8045$1l2agK))))
                                 g$rhs*$8050$1l2agK)))))
                      g$ls/false$8048$1l2agK)
                    (g$syntax-violation$7762$1l2agK
                      '#f
                      '"invalid syntax"
                      g$t$8047$1l2agK))))
               (g$syntax-dispatch$7651$1l2agK
                 g$t$8047$1l2agK
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8043$1l2agK)))))
   (g$type-descriptor-transformer$7604$1l2agK
     g$type-descriptor-transformer$11050$1l2agK
     (case-lambda
       ((g$e$8058$1l2agK g$r$8059$1l2agK g$mr$8060$1l2agK)
        ((case-lambda
           ((g$t$8061$1l2agK)
            ((case-lambda
               ((g$ls/false$8062$1l2agK)
                (if (if g$ls/false$8062$1l2agK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8063$1l2agK)
                             (g$id?$7373$1l2agK g$id$8063$1l2agK)))
                          g$ls/false$8062$1l2agK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8064$1l2agK)
                       ((case-lambda
                          ((g$lab$8065$1l2agK)
                           ((case-lambda
                              ((g$b$8066$1l2agK)
                               ((case-lambda
                                  ((g$type$8067$1l2agK)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8065$1l2agK)
                                           (g$raise-unbound-error$7392$1l2agK
                                             g$id$8064$1l2agK)
                                           (void))
                                         (if (not (if (eq? g$type$8067$1l2agK
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$7391$1l2agK
                                                               g$b$8066$1l2agK))))
                                                    '#f))
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"not a record type"
                                             g$e$8058$1l2agK)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$7391$1l2agK
                                             g$b$8066$1l2agK))))))))
                                (g$binding-type$7390$1l2agK g$b$8066$1l2agK))))
                            (g$label->binding$7388$1l2agK
                              g$lab$8065$1l2agK
                              g$r$8059$1l2agK))))
                        (g$id->label$7386$1l2agK g$id$8064$1l2agK))))
                    g$ls/false$8062$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8061$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8061$1l2agK '(_ any)))))
         g$e$8058$1l2agK))))
   (g$record-type-descriptor-transformer$7605$1l2agK
     g$record-type-descriptor-transformer$11051$1l2agK
     (case-lambda
       ((g$e$8068$1l2agK g$r$8069$1l2agK g$mr$8070$1l2agK)
        ((case-lambda
           ((g$t$8071$1l2agK)
            ((case-lambda
               ((g$ls/false$8072$1l2agK)
                (if (if g$ls/false$8072$1l2agK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8073$1l2agK)
                             (g$id?$7373$1l2agK g$id$8073$1l2agK)))
                          g$ls/false$8072$1l2agK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8074$1l2agK)
                       ((case-lambda
                          ((g$lab$8075$1l2agK)
                           ((case-lambda
                              ((g$b$8076$1l2agK)
                               ((case-lambda
                                  ((g$type$8077$1l2agK)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8075$1l2agK)
                                           (g$raise-unbound-error$7392$1l2agK
                                             g$id$8074$1l2agK)
                                           (void))
                                         (if (not (if (eq? g$type$8077$1l2agK
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7391$1l2agK
                                                          g$b$8076$1l2agK)))
                                                    '#f))
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"not a record type"
                                             g$e$8068$1l2agK)
                                           (void))
                                         (g$chi-expr$7669$1l2agK
                                           (car (g$binding-value$7391$1l2agK
                                                  g$b$8076$1l2agK))
                                           g$r$8069$1l2agK
                                           g$mr$8070$1l2agK)))))))
                                (g$binding-type$7390$1l2agK g$b$8076$1l2agK))))
                            (g$label->binding$7388$1l2agK
                              g$lab$8075$1l2agK
                              g$r$8069$1l2agK))))
                        (g$id->label$7386$1l2agK g$id$8074$1l2agK))))
                    g$ls/false$8072$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8071$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8071$1l2agK '(_ any)))))
         g$e$8068$1l2agK))))
   (g$record-constructor-descriptor-transformer$7606$1l2agK
     g$record-constructor-descriptor-transformer$11052$1l2agK
     (case-lambda
       ((g$e$8078$1l2agK g$r$8079$1l2agK g$mr$8080$1l2agK)
        ((case-lambda
           ((g$t$8081$1l2agK)
            ((case-lambda
               ((g$ls/false$8082$1l2agK)
                (if (if g$ls/false$8082$1l2agK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8083$1l2agK)
                             (g$id?$7373$1l2agK g$id$8083$1l2agK)))
                          g$ls/false$8082$1l2agK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8084$1l2agK)
                       ((case-lambda
                          ((g$lab$8085$1l2agK)
                           ((case-lambda
                              ((g$b$8086$1l2agK)
                               ((case-lambda
                                  ((g$type$8087$1l2agK)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8085$1l2agK)
                                           (g$raise-unbound-error$7392$1l2agK
                                             g$id$8084$1l2agK)
                                           (void))
                                         (if (not (if (eq? g$type$8087$1l2agK
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7391$1l2agK
                                                          g$b$8086$1l2agK)))
                                                    '#f))
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"invalid type"
                                             g$e$8078$1l2agK)
                                           (void))
                                         (g$chi-expr$7669$1l2agK
                                           (g$cadr$5022$1l2agK
                                             (g$binding-value$7391$1l2agK
                                               g$b$8086$1l2agK))
                                           g$r$8079$1l2agK
                                           g$mr$8080$1l2agK)))))))
                                (g$binding-type$7390$1l2agK g$b$8086$1l2agK))))
                            (g$label->binding$7388$1l2agK
                              g$lab$8085$1l2agK
                              g$r$8079$1l2agK))))
                        (g$id->label$7386$1l2agK g$id$8084$1l2agK))))
                    g$ls/false$8082$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8081$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8081$1l2agK '(_ any)))))
         g$e$8078$1l2agK))))
   (g$when-macro$7607$1l2agK
     g$when-macro$11053$1l2agK
     (case-lambda
       ((g$e$8088$1l2agK)
        ((case-lambda
           ((g$t$8089$1l2agK)
            ((case-lambda
               ((g$ls/false$8090$1l2agK)
                (if g$ls/false$8090$1l2agK
                  (apply
                    (case-lambda
                      ((g$test$8091$1l2agK g$e$8092$1l2agK g$e*$8093$1l2agK)
                       (g$bless$7614$1l2agK
                         (list
                           'if
                           g$test$8091$1l2agK
                           (cons
                             'begin
                             (cons g$e$8092$1l2agK g$e*$8093$1l2agK))))))
                    g$ls/false$8090$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8089$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8089$1l2agK
               '(_ any any . each-any)))))
         g$e$8088$1l2agK))))
   (g$unless-macro$7608$1l2agK
     g$unless-macro$11054$1l2agK
     (case-lambda
       ((g$e$8094$1l2agK)
        ((case-lambda
           ((g$t$8095$1l2agK)
            ((case-lambda
               ((g$ls/false$8096$1l2agK)
                (if g$ls/false$8096$1l2agK
                  (apply
                    (case-lambda
                      ((g$test$8097$1l2agK g$e$8098$1l2agK g$e*$8099$1l2agK)
                       (g$bless$7614$1l2agK
                         (list
                           'if
                           (list 'not g$test$8097$1l2agK)
                           (cons
                             'begin
                             (cons g$e$8098$1l2agK g$e*$8099$1l2agK))))))
                    g$ls/false$8096$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8095$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8095$1l2agK
               '(_ any any . each-any)))))
         g$e$8094$1l2agK))))
   (g$if-transformer$7609$1l2agK
     g$if-transformer$11055$1l2agK
     (case-lambda
       ((g$e$8100$1l2agK g$r$8101$1l2agK g$mr$8102$1l2agK)
        ((case-lambda
           ((g$t$8103$1l2agK)
            ((case-lambda
               ((g$ls/false$8104$1l2agK)
                (if g$ls/false$8104$1l2agK
                  (apply
                    (case-lambda
                      ((g$e0$8105$1l2agK g$e1$8106$1l2agK g$e2$8107$1l2agK)
                       (list
                         'if
                         (g$chi-expr$7669$1l2agK
                           g$e0$8105$1l2agK
                           g$r$8101$1l2agK
                           g$mr$8102$1l2agK)
                         (g$chi-expr$7669$1l2agK
                           g$e1$8106$1l2agK
                           g$r$8101$1l2agK
                           g$mr$8102$1l2agK)
                         (g$chi-expr$7669$1l2agK
                           g$e2$8107$1l2agK
                           g$r$8101$1l2agK
                           g$mr$8102$1l2agK))))
                    g$ls/false$8104$1l2agK)
                  ((case-lambda
                     ((g$t$8108$1l2agK)
                      ((case-lambda
                         ((g$ls/false$8109$1l2agK)
                          (if g$ls/false$8109$1l2agK
                            (apply
                              (case-lambda
                                ((g$e0$8110$1l2agK g$e1$8111$1l2agK)
                                 (list
                                   'if
                                   (g$chi-expr$7669$1l2agK
                                     g$e0$8110$1l2agK
                                     g$r$8101$1l2agK
                                     g$mr$8102$1l2agK)
                                   (g$chi-expr$7669$1l2agK
                                     g$e1$8111$1l2agK
                                     g$r$8101$1l2agK
                                     g$mr$8102$1l2agK)
                                   (g$build-void$7308$1l2agK))))
                              g$ls/false$8109$1l2agK)
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"invalid syntax"
                              g$t$8108$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$8108$1l2agK
                         '(_ any any)))))
                   g$t$8103$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8103$1l2agK '(_ any any any)))))
         g$e$8100$1l2agK))))
   (g$case-macro$7610$1l2agK
     g$case-macro$11056$1l2agK
     (case-lambda
       ((g$e$8112$1l2agK)
        (letrec* ((g$build-last$8113$1l2agK
                    (case-lambda
                      ((g$cls$8133$1l2agK)
                       ((case-lambda
                          ((g$t$8134$1l2agK)
                           ((case-lambda
                              ((g$ls/false$8135$1l2agK)
                               (if g$ls/false$8135$1l2agK
                                 (apply
                                   (case-lambda
                                     ((g$e$8136$1l2agK g$e*$8137$1l2agK)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$8136$1l2agK
                                          g$e*$8137$1l2agK))))
                                   g$ls/false$8135$1l2agK)
                                 ((case-lambda
                                    ((g$t$8138$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$8139$1l2agK)
                                         (if g$ls/false$8139$1l2agK
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8114$1l2agK
                                                  g$cls$8133$1l2agK
                                                  '(if #f #f))))
                                             g$ls/false$8139$1l2agK)
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"invalid syntax"
                                             g$t$8138$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$8138$1l2agK
                                        '_))))
                                  g$t$8134$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$8134$1l2agK
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8133$1l2agK))))
                  (g$build-one$8114$1l2agK
                    (case-lambda
                      ((g$cls$8126$1l2agK g$k$8127$1l2agK)
                       ((case-lambda
                          ((g$t$8128$1l2agK)
                           ((case-lambda
                              ((g$ls/false$8129$1l2agK)
                               (if g$ls/false$8129$1l2agK
                                 (apply
                                   (case-lambda
                                     ((g$d*$8130$1l2agK
                                        g$e$8131$1l2agK
                                        g$e*$8132$1l2agK)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8130$1l2agK))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$8131$1l2agK
                                            g$e*$8132$1l2agK))
                                        g$k$8127$1l2agK)))
                                   g$ls/false$8129$1l2agK)
                                 (g$syntax-violation$7762$1l2agK
                                   '#f
                                   '"invalid syntax"
                                   g$t$8128$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$8128$1l2agK
                              '(each-any any . each-any)))))
                        g$cls$8126$1l2agK)))))
          ((case-lambda
             ((g$t$8115$1l2agK)
              ((case-lambda
                 ((g$ls/false$8116$1l2agK)
                  (if g$ls/false$8116$1l2agK
                    (apply
                      (case-lambda
                        ((g$expr$8117$1l2agK)
                         (g$bless$7614$1l2agK
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8117$1l2agK))
                               '((if #f #f)))))))
                      g$ls/false$8116$1l2agK)
                    ((case-lambda
                       ((g$t$8118$1l2agK)
                        ((case-lambda
                           ((g$ls/false$8119$1l2agK)
                            (if g$ls/false$8119$1l2agK
                              (apply
                                (case-lambda
                                  ((g$expr$8120$1l2agK
                                     g$cls$8121$1l2agK
                                     g$cls*$8122$1l2agK)
                                   (g$bless$7614$1l2agK
                                     (list
                                       'let
                                       (list (list 't g$expr$8120$1l2agK))
                                       ((letrec ((g$f$8123$1l2agK
                                                   (case-lambda
                                                     ((g$cls$8124$1l2agK
                                                        g$cls*$8125$1l2agK)
                                                      (if (null?
                                                            g$cls*$8125$1l2agK)
                                                        (g$build-last$8113$1l2agK
                                                          g$cls$8124$1l2agK)
                                                        (g$build-one$8114$1l2agK
                                                          g$cls$8124$1l2agK
                                                          (g$f$8123$1l2agK
                                                            (car g$cls*$8125$1l2agK)
                                                            (cdr g$cls*$8125$1l2agK))))))))
                                          g$f$8123$1l2agK)
                                        g$cls$8121$1l2agK
                                        g$cls*$8122$1l2agK)))))
                                g$ls/false$8119$1l2agK)
                              (g$syntax-violation$7762$1l2agK
                                '#f
                                '"invalid syntax"
                                g$t$8118$1l2agK))))
                         (g$syntax-dispatch$7651$1l2agK
                           g$t$8118$1l2agK
                           '(_ any any . each-any)))))
                     g$t$8115$1l2agK))))
               (g$syntax-dispatch$7651$1l2agK g$t$8115$1l2agK '(_ any)))))
           g$e$8112$1l2agK)))))
   (g$quote-transformer$7611$1l2agK
     g$quote-transformer$11057$1l2agK
     (case-lambda
       ((g$e$8140$1l2agK g$r$8141$1l2agK g$mr$8142$1l2agK)
        ((case-lambda
           ((g$t$8143$1l2agK)
            ((case-lambda
               ((g$ls/false$8144$1l2agK)
                (if g$ls/false$8144$1l2agK
                  (apply
                    (case-lambda
                      ((g$datum$8145$1l2agK)
                       (list
                         'quote
                         (g$stx->datum$7384$1l2agK g$datum$8145$1l2agK))))
                    g$ls/false$8144$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8143$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8143$1l2agK '(_ any)))))
         g$e$8140$1l2agK))))
   (g$case-lambda-transformer$7612$1l2agK
     g$case-lambda-transformer$11058$1l2agK
     (case-lambda
       ((g$e$8146$1l2agK g$r$8147$1l2agK g$mr$8148$1l2agK)
        ((case-lambda
           ((g$t$8149$1l2agK)
            ((case-lambda
               ((g$ls/false$8150$1l2agK)
                (if g$ls/false$8150$1l2agK
                  (apply
                    (case-lambda
                      ((g$fmls*$8151$1l2agK g$b*$8152$1l2agK g$b**$8153$1l2agK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7673$1l2agK
                              g$e$8146$1l2agK
                              g$fmls*$8151$1l2agK
                              (map cons g$b*$8152$1l2agK g$b**$8153$1l2agK)
                              g$r$8147$1l2agK
                              g$mr$8148$1l2agK)))
                         (case-lambda
                           ((g$fmls*$8156$1l2agK g$body*$8157$1l2agK)
                            ((case-lambda
                               ((g$body*$8158$1l2agK g$fmls*$8159$1l2agK)
                                (g$build-case-lambda$7305$1l2agK
                                  '#f
                                  g$fmls*$8159$1l2agK
                                  g$body*$8158$1l2agK)))
                             g$body*$8157$1l2agK
                             g$fmls*$8156$1l2agK))))))
                    g$ls/false$8150$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8149$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8149$1l2agK
               '(_ . #(each (any any . each-any)))))))
         g$e$8146$1l2agK))))
   (g$lambda-transformer$7613$1l2agK
     g$lambda-transformer$11059$1l2agK
     (case-lambda
       ((g$e$8160$1l2agK g$r$8161$1l2agK g$mr$8162$1l2agK)
        ((case-lambda
           ((g$t$8163$1l2agK)
            ((case-lambda
               ((g$ls/false$8164$1l2agK)
                (if g$ls/false$8164$1l2agK
                  (apply
                    (case-lambda
                      ((g$fmls$8165$1l2agK g$b$8166$1l2agK g$b*$8167$1l2agK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7672$1l2agK
                              g$e$8160$1l2agK
                              g$fmls$8165$1l2agK
                              (cons g$b$8166$1l2agK g$b*$8167$1l2agK)
                              g$r$8161$1l2agK
                              g$mr$8162$1l2agK)))
                         (case-lambda
                           ((g$fmls$8170$1l2agK g$body$8171$1l2agK)
                            ((case-lambda
                               ((g$body$8172$1l2agK g$fmls$8173$1l2agK)
                                (g$build-lambda$7304$1l2agK
                                  '#f
                                  g$fmls$8173$1l2agK
                                  g$body$8172$1l2agK)))
                             g$body$8171$1l2agK
                             g$fmls$8170$1l2agK))))))
                    g$ls/false$8164$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8163$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8163$1l2agK
               '(_ any any . each-any)))))
         g$e$8160$1l2agK))))
   (g$bless$7614$1l2agK
     g$bless$11060$1l2agK
     (case-lambda
       ((g$x$8174$1l2agK)
        (g$mkstx$7361$1l2agK
          ((letrec ((g$f$8175$1l2agK
                      (case-lambda
                        ((g$x$8176$1l2agK)
                         (if (g$stx?$7345$1l2agK g$x$8176$1l2agK)
                           g$x$8176$1l2agK
                           (if (pair? g$x$8176$1l2agK)
                             (cons
                               (g$f$8175$1l2agK (car g$x$8176$1l2agK))
                               (g$f$8175$1l2agK (cdr g$x$8176$1l2agK)))
                             (if (symbol? g$x$8176$1l2agK)
                               (g$scheme-stx$7594$1l2agK g$x$8176$1l2agK)
                               (if (vector? g$x$8176$1l2agK)
                                 (vector-map g$f$8175$1l2agK g$x$8176$1l2agK)
                                 g$x$8176$1l2agK))))))))
             g$f$8175$1l2agK)
           g$x$8174$1l2agK)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7615$1l2agK
     g$with-syntax-macro$11061$1l2agK
     (case-lambda
       ((g$e$8177$1l2agK)
        ((case-lambda
           ((g$t$8178$1l2agK)
            ((case-lambda
               ((g$ls/false$8179$1l2agK)
                (if g$ls/false$8179$1l2agK
                  (apply
                    (case-lambda
                      ((g$pat*$8180$1l2agK
                         g$expr*$8181$1l2agK
                         g$b$8182$1l2agK
                         g$b*$8183$1l2agK)
                       ((case-lambda
                          ((g$idn*$8184$1l2agK)
                           (begin
                             (g$verify-formals$7671$1l2agK
                               (map car g$idn*$8184$1l2agK)
                               g$e$8177$1l2agK)
                             ((case-lambda
                                ((g$t*$8185$1l2agK)
                                 (g$bless$7614$1l2agK
                                   (list
                                     'let
                                     (map list
                                          g$t*$8185$1l2agK
                                          g$expr*$8181$1l2agK)
                                     ((letrec ((g$f$8186$1l2agK
                                                 (case-lambda
                                                   ((g$pat*$8187$1l2agK
                                                      g$t*$8188$1l2agK)
                                                    (if (null?
                                                          g$pat*$8187$1l2agK)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8182$1l2agK
                                                            g$b*$8183$1l2agK)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8188$1l2agK)
                                                        '()
                                                        (list
                                                          (car g$pat*$8187$1l2agK)
                                                          (g$f$8186$1l2agK
                                                            (cdr g$pat*$8187$1l2agK)
                                                            (cdr g$t*$8188$1l2agK)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8187$1l2agK))
                                                            (car g$t*$8188$1l2agK)))))))))
                                        g$f$8186$1l2agK)
                                      g$pat*$8180$1l2agK
                                      g$t*$8185$1l2agK)))))
                              (g$generate-temporaries$7752$1l2agK
                                g$expr*$8181$1l2agK)))))
                        ((letrec ((g$f$8189$1l2agK
                                    (case-lambda
                                      ((g$pat*$8190$1l2agK)
                                       (if (null? g$pat*$8190$1l2agK)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7650$1l2agK
                                                (car g$pat*$8190$1l2agK)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8193$1l2agK
                                                g$idn*$8194$1l2agK)
                                              ((case-lambda
                                                 ((g$idn*$8195$1l2agK
                                                    g$pat$8196$1l2agK)
                                                  (append
                                                    g$idn*$8195$1l2agK
                                                    (g$f$8189$1l2agK
                                                      (cdr g$pat*$8190$1l2agK)))))
                                               g$idn*$8194$1l2agK
                                               g$pat$8193$1l2agK)))))))))
                           g$f$8189$1l2agK)
                         g$pat*$8180$1l2agK))))
                    g$ls/false$8179$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8178$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8178$1l2agK
               '(_ #(each (any any)) any . each-any)))))
         g$e$8177$1l2agK))))
   (g$invalid-fmls-error$7616$1l2agK
     g$invalid-fmls-error$11062$1l2agK
     (case-lambda
       ((g$stx$8197$1l2agK g$fmls$8198$1l2agK)
        ((case-lambda
           ((g$t$8199$1l2agK)
            ((case-lambda
               ((g$ls/false$8200$1l2agK)
                (if g$ls/false$8200$1l2agK
                  (apply
                    (case-lambda
                      ((g$id*$8201$1l2agK g$last$8202$1l2agK)
                       ((letrec ((g$f$8203$1l2agK
                                   (case-lambda
                                     ((g$id*$8204$1l2agK)
                                      (if (null? g$id*$8204$1l2agK)
                                        (values)
                                        (if (not (g$id?$7373$1l2agK
                                                   (car g$id*$8204$1l2agK)))
                                          (g$syntax-violation$7762$1l2agK
                                            '#f
                                            '"not an identifier"
                                            g$stx$8197$1l2agK
                                            (car g$id*$8204$1l2agK))
                                          (begin
                                            (g$f$8203$1l2agK
                                              (cdr g$id*$8204$1l2agK))
                                            (if (g$bound-id-member?$7380$1l2agK
                                                  (car g$id*$8204$1l2agK)
                                                  (cdr g$id*$8204$1l2agK))
                                              (g$syntax-violation$7762$1l2agK
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8197$1l2agK
                                                (car g$id*$8204$1l2agK))
                                              (void)))))))))
                          g$f$8203$1l2agK)
                        (if (g$id?$7373$1l2agK g$last$8202$1l2agK)
                          (cons g$last$8202$1l2agK g$id*$8201$1l2agK)
                          (if (g$syntax-null?$7368$1l2agK g$last$8202$1l2agK)
                            g$id*$8201$1l2agK
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"not an identifier"
                              g$stx$8197$1l2agK
                              g$last$8202$1l2agK))))))
                    g$ls/false$8200$1l2agK)
                  ((case-lambda
                     ((g$t$8205$1l2agK)
                      ((case-lambda
                         ((g$ls/false$8206$1l2agK)
                          (if g$ls/false$8206$1l2agK
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7762$1l2agK
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8197$1l2agK
                                   g$fmls$8198$1l2agK)))
                              g$ls/false$8206$1l2agK)
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"invalid syntax"
                              g$t$8205$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK g$t$8205$1l2agK '_))))
                   g$t$8199$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8199$1l2agK
               '#(each+ any () any)))))
         g$fmls$8198$1l2agK))))
   (g$let-macro$7617$1l2agK
     g$let-macro$11063$1l2agK
     (case-lambda
       ((g$stx$8207$1l2agK)
        ((case-lambda
           ((g$t$8208$1l2agK)
            ((case-lambda
               ((g$ls/false$8209$1l2agK)
                (if g$ls/false$8209$1l2agK
                  (apply
                    (case-lambda
                      ((g$lhs*$8210$1l2agK
                         g$rhs*$8211$1l2agK
                         g$b$8212$1l2agK
                         g$b*$8213$1l2agK)
                       (if (g$valid-bound-ids?$7378$1l2agK g$lhs*$8210$1l2agK)
                         (g$bless$7614$1l2agK
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8210$1l2agK
                                 (cons g$b$8212$1l2agK g$b*$8213$1l2agK)))
                             g$rhs*$8211$1l2agK))
                         (g$invalid-fmls-error$7616$1l2agK
                           g$stx$8207$1l2agK
                           g$lhs*$8210$1l2agK))))
                    g$ls/false$8209$1l2agK)
                  ((case-lambda
                     ((g$t$8214$1l2agK)
                      ((case-lambda
                         ((g$ls/false$8215$1l2agK)
                          (if (if g$ls/false$8215$1l2agK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8216$1l2agK
                                         g$lhs*$8217$1l2agK
                                         g$rhs*$8218$1l2agK
                                         g$b$8219$1l2agK
                                         g$b*$8220$1l2agK)
                                       (g$id?$7373$1l2agK g$f$8216$1l2agK)))
                                    g$ls/false$8215$1l2agK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8221$1l2agK
                                   g$lhs*$8222$1l2agK
                                   g$rhs*$8223$1l2agK
                                   g$b$8224$1l2agK
                                   g$b*$8225$1l2agK)
                                 (if (g$valid-bound-ids?$7378$1l2agK
                                       g$lhs*$8222$1l2agK)
                                   (g$bless$7614$1l2agK
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8221$1l2agK
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8222$1l2agK
                                                 (cons
                                                   g$b$8224$1l2agK
                                                   g$b*$8225$1l2agK)))))
                                         g$f$8221$1l2agK)
                                       g$rhs*$8223$1l2agK))
                                   (g$invalid-fmls-error$7616$1l2agK
                                     g$stx$8207$1l2agK
                                     g$lhs*$8222$1l2agK))))
                              g$ls/false$8215$1l2agK)
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"invalid syntax"
                              g$t$8214$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$8214$1l2agK
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8208$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8208$1l2agK
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8207$1l2agK))))
   (g$let-values-macro$7618$1l2agK
     g$let-values-macro$11064$1l2agK
     (case-lambda
       ((g$stx$8226$1l2agK)
        (letrec* ((g$rename$8227$1l2agK
                    (case-lambda
                      ((g$x$8278$1l2agK g$old*$8279$1l2agK g$new*$8280$1l2agK)
                       (begin
                         (if (not (g$id?$7373$1l2agK g$x$8278$1l2agK))
                           (g$syntax-violation$7762$1l2agK
                             '#f
                             '"not an indentifier"
                             g$stx$8226$1l2agK
                             g$x$8278$1l2agK)
                           (void))
                         (if (g$bound-id-member?$7380$1l2agK
                               g$x$8278$1l2agK
                               g$old*$8279$1l2agK)
                           (g$syntax-violation$7762$1l2agK
                             '#f
                             '"duplicate binding"
                             g$stx$8226$1l2agK
                             g$x$8278$1l2agK)
                           (void))
                         ((case-lambda
                            ((g$y$8281$1l2agK)
                             (values
                               g$y$8281$1l2agK
                               (cons g$x$8278$1l2agK g$old*$8279$1l2agK)
                               (cons g$y$8281$1l2agK g$new*$8280$1l2agK))))
                          (gensym
                            (g$syntax->datum$7765$1l2agK g$x$8278$1l2agK)))))))
                  (g$rename*$8228$1l2agK
                    (case-lambda
                      ((g$x*$8269$1l2agK g$old*$8270$1l2agK g$new*$8271$1l2agK)
                       (if (null? g$x*$8269$1l2agK)
                         (values '() g$old*$8270$1l2agK g$new*$8271$1l2agK)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8227$1l2agK
                                (car g$x*$8269$1l2agK)
                                g$old*$8270$1l2agK
                                g$new*$8271$1l2agK)))
                           (case-lambda
                             ((g$x$8272$1l2agK
                                g$old*$8273$1l2agK
                                g$new*$8274$1l2agK)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8228$1l2agK
                                     (cdr g$x*$8269$1l2agK)
                                     g$old*$8273$1l2agK
                                     g$new*$8274$1l2agK)))
                                (case-lambda
                                  ((g$x*$8275$1l2agK
                                     g$old*$8276$1l2agK
                                     g$new*$8277$1l2agK)
                                   (values
                                     (cons g$x$8272$1l2agK g$x*$8275$1l2agK)
                                     g$old*$8276$1l2agK
                                     g$new*$8277$1l2agK))))))))))))
          ((case-lambda
             ((g$t$8229$1l2agK)
              ((case-lambda
                 ((g$ls/false$8230$1l2agK)
                  (if g$ls/false$8230$1l2agK
                    (apply
                      (case-lambda
                        ((g$b$8231$1l2agK g$b*$8232$1l2agK)
                         (g$cons*$5505$1l2agK
                           (g$bless$7614$1l2agK 'let)
                           '()
                           g$b$8231$1l2agK
                           g$b*$8232$1l2agK)))
                      g$ls/false$8230$1l2agK)
                    ((case-lambda
                       ((g$t$8233$1l2agK)
                        ((case-lambda
                           ((g$ls/false$8234$1l2agK)
                            (if g$ls/false$8234$1l2agK
                              (apply
                                (case-lambda
                                  ((g$lhs*$8235$1l2agK
                                     g$rhs*$8236$1l2agK
                                     g$b$8237$1l2agK
                                     g$b*$8238$1l2agK)
                                   (g$bless$7614$1l2agK
                                     ((letrec ((g$f$8239$1l2agK
                                                 (case-lambda
                                                   ((g$lhs*$8240$1l2agK
                                                      g$rhs*$8241$1l2agK
                                                      g$old*$8242$1l2agK
                                                      g$new*$8243$1l2agK)
                                                    (if (null?
                                                          g$lhs*$8240$1l2agK)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8242$1l2agK
                                                               g$new*$8243$1l2agK)
                                                          (cons
                                                            g$b$8237$1l2agK
                                                            g$b*$8238$1l2agK)))
                                                      ((case-lambda
                                                         ((g$t$8244$1l2agK)
                                                          ((case-lambda
                                                             ((g$ls/false$8245$1l2agK)
                                                              (if g$ls/false$8245$1l2agK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8246$1l2agK)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8228$1l2agK
                                                                            g$x*$8246$1l2agK
                                                                            g$old*$8242$1l2agK
                                                                            g$new*$8243$1l2agK)))
                                                                       (case-lambda
                                                                         ((g$y*$8250$1l2agK
                                                                            g$old*$8251$1l2agK
                                                                            g$new*$8252$1l2agK)
                                                                          ((case-lambda
                                                                             ((g$new*$8253$1l2agK
                                                                                g$old*$8254$1l2agK
                                                                                g$y*$8255$1l2agK)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8241$1l2agK))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8255$1l2agK
                                                                                  (g$f$8239$1l2agK
                                                                                    (cdr g$lhs*$8240$1l2agK)
                                                                                    (cdr g$rhs*$8241$1l2agK)
                                                                                    g$old*$8254$1l2agK
                                                                                    g$new*$8253$1l2agK)))))
                                                                           g$new*$8252$1l2agK
                                                                           g$old*$8251$1l2agK
                                                                           g$y*$8250$1l2agK))))))
                                                                  g$ls/false$8245$1l2agK)
                                                                ((case-lambda
                                                                   ((g$t$8256$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8257$1l2agK)
                                                                        (if g$ls/false$8257$1l2agK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8258$1l2agK
                                                                                 g$x$8259$1l2agK)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8227$1l2agK
                                                                                      g$x$8259$1l2agK
                                                                                      g$old*$8242$1l2agK
                                                                                      g$new*$8243$1l2agK)))
                                                                                 (case-lambda
                                                                                   ((g$y$8260$1l2agK
                                                                                      g$old*$8261$1l2agK
                                                                                      g$new*$8262$1l2agK)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8228$1l2agK
                                                                                           g$x*$8258$1l2agK
                                                                                           g$old*$8261$1l2agK
                                                                                           g$new*$8262$1l2agK)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8263$1l2agK
                                                                                           g$old*$8264$1l2agK
                                                                                           g$new*$8265$1l2agK)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8241$1l2agK))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8263$1l2agK
                                                                                               g$y$8260$1l2agK)
                                                                                             (g$f$8239$1l2agK
                                                                                               (cdr g$lhs*$8240$1l2agK)
                                                                                               (cdr g$rhs*$8241$1l2agK)
                                                                                               g$old*$8264$1l2agK
                                                                                               g$new*$8265$1l2agK)))))))))))
                                                                            g$ls/false$8257$1l2agK)
                                                                          ((case-lambda
                                                                             ((g$t$8266$1l2agK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8267$1l2agK)
                                                                                  (if g$ls/false$8267$1l2agK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8268$1l2agK)
                                                                                         (g$syntax-violation$7762$1l2agK
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8226$1l2agK
                                                                                           g$others$8268$1l2agK)))
                                                                                      g$ls/false$8267$1l2agK)
                                                                                    (g$syntax-violation$7762$1l2agK
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8266$1l2agK))))
                                                                               (g$syntax-dispatch$7651$1l2agK
                                                                                 g$t$8266$1l2agK
                                                                                 'any))))
                                                                           g$t$8256$1l2agK))))
                                                                     (g$syntax-dispatch$7651$1l2agK
                                                                       g$t$8256$1l2agK
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8244$1l2agK))))
                                                           (g$syntax-dispatch$7651$1l2agK
                                                             g$t$8244$1l2agK
                                                             'each-any))))
                                                       (car g$lhs*$8240$1l2agK)))))))
                                        g$f$8239$1l2agK)
                                      g$lhs*$8235$1l2agK
                                      g$rhs*$8236$1l2agK
                                      '()
                                      '()))))
                                g$ls/false$8234$1l2agK)
                              (g$syntax-violation$7762$1l2agK
                                '#f
                                '"invalid syntax"
                                g$t$8233$1l2agK))))
                         (g$syntax-dispatch$7651$1l2agK
                           g$t$8233$1l2agK
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8229$1l2agK))))
               (g$syntax-dispatch$7651$1l2agK
                 g$t$8229$1l2agK
                 '(_ () any . each-any)))))
           g$stx$8226$1l2agK)))))
   (g$let*-values-macro$7619$1l2agK
     g$let*-values-macro$11065$1l2agK
     (case-lambda
       ((g$stx$8282$1l2agK)
        (letrec* ((g$check$8283$1l2agK
                    (case-lambda
                      ((g$x*$8307$1l2agK)
                       (if (not (null? g$x*$8307$1l2agK))
                         ((case-lambda
                            ((g$x$8308$1l2agK)
                             (begin
                               (if (not (g$id?$7373$1l2agK g$x$8308$1l2agK))
                                 (g$syntax-violation$7762$1l2agK
                                   '#f
                                   '"not an identifier"
                                   g$stx$8282$1l2agK
                                   g$x$8308$1l2agK)
                                 (void))
                               (g$check$8283$1l2agK (cdr g$x*$8307$1l2agK))
                               (if (g$bound-id-member?$7380$1l2agK
                                     g$x$8308$1l2agK
                                     (cdr g$x*$8307$1l2agK))
                                 (g$syntax-violation$7762$1l2agK
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8282$1l2agK
                                   g$x$8308$1l2agK)
                                 (void)))))
                          (car g$x*$8307$1l2agK))
                         (void))))))
          ((case-lambda
             ((g$t$8284$1l2agK)
              ((case-lambda
                 ((g$ls/false$8285$1l2agK)
                  (if g$ls/false$8285$1l2agK
                    (apply
                      (case-lambda
                        ((g$b$8286$1l2agK g$b*$8287$1l2agK)
                         (g$cons*$5505$1l2agK
                           (g$bless$7614$1l2agK 'let)
                           '()
                           g$b$8286$1l2agK
                           g$b*$8287$1l2agK)))
                      g$ls/false$8285$1l2agK)
                    ((case-lambda
                       ((g$t$8288$1l2agK)
                        ((case-lambda
                           ((g$ls/false$8289$1l2agK)
                            (if g$ls/false$8289$1l2agK
                              (apply
                                (case-lambda
                                  ((g$lhs*$8290$1l2agK
                                     g$rhs*$8291$1l2agK
                                     g$b$8292$1l2agK
                                     g$b*$8293$1l2agK)
                                   (g$bless$7614$1l2agK
                                     ((letrec ((g$f$8294$1l2agK
                                                 (case-lambda
                                                   ((g$lhs*$8295$1l2agK
                                                      g$rhs*$8296$1l2agK)
                                                    (if (null?
                                                          g$lhs*$8295$1l2agK)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8292$1l2agK
                                                          g$b*$8293$1l2agK))
                                                      ((case-lambda
                                                         ((g$t$8297$1l2agK)
                                                          ((case-lambda
                                                             ((g$ls/false$8298$1l2agK)
                                                              (if g$ls/false$8298$1l2agK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8299$1l2agK)
                                                                     (begin
                                                                       (g$check$8283$1l2agK
                                                                         g$x*$8299$1l2agK)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8296$1l2agK))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8299$1l2agK
                                                                           (g$f$8294$1l2agK
                                                                             (cdr g$lhs*$8295$1l2agK)
                                                                             (cdr g$rhs*$8296$1l2agK)))))))
                                                                  g$ls/false$8298$1l2agK)
                                                                ((case-lambda
                                                                   ((g$t$8300$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8301$1l2agK)
                                                                        (if g$ls/false$8301$1l2agK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8302$1l2agK
                                                                                 g$x$8303$1l2agK)
                                                                               (begin
                                                                                 (g$check$8283$1l2agK
                                                                                   (cons
                                                                                     g$x$8303$1l2agK
                                                                                     g$x*$8302$1l2agK))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8296$1l2agK))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8302$1l2agK
                                                                                       g$x$8303$1l2agK)
                                                                                     (g$f$8294$1l2agK
                                                                                       (cdr g$lhs*$8295$1l2agK)
                                                                                       (cdr g$rhs*$8296$1l2agK)))))))
                                                                            g$ls/false$8301$1l2agK)
                                                                          ((case-lambda
                                                                             ((g$t$8304$1l2agK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8305$1l2agK)
                                                                                  (if g$ls/false$8305$1l2agK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8306$1l2agK)
                                                                                         (g$syntax-violation$7762$1l2agK
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8282$1l2agK
                                                                                           g$others$8306$1l2agK)))
                                                                                      g$ls/false$8305$1l2agK)
                                                                                    (g$syntax-violation$7762$1l2agK
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8304$1l2agK))))
                                                                               (g$syntax-dispatch$7651$1l2agK
                                                                                 g$t$8304$1l2agK
                                                                                 'any))))
                                                                           g$t$8300$1l2agK))))
                                                                     (g$syntax-dispatch$7651$1l2agK
                                                                       g$t$8300$1l2agK
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8297$1l2agK))))
                                                           (g$syntax-dispatch$7651$1l2agK
                                                             g$t$8297$1l2agK
                                                             'each-any))))
                                                       (car g$lhs*$8295$1l2agK)))))))
                                        g$f$8294$1l2agK)
                                      g$lhs*$8290$1l2agK
                                      g$rhs*$8291$1l2agK))))
                                g$ls/false$8289$1l2agK)
                              (g$syntax-violation$7762$1l2agK
                                '#f
                                '"invalid syntax"
                                g$t$8288$1l2agK))))
                         (g$syntax-dispatch$7651$1l2agK
                           g$t$8288$1l2agK
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8284$1l2agK))))
               (g$syntax-dispatch$7651$1l2agK
                 g$t$8284$1l2agK
                 '(_ () any . each-any)))))
           g$stx$8282$1l2agK)))))
   (g$trace-lambda-macro$7620$1l2agK
     g$trace-lambda-macro$11066$1l2agK
     (case-lambda
       ((g$stx$8309$1l2agK)
        ((case-lambda
           ((g$t$8310$1l2agK)
            ((case-lambda
               ((g$ls/false$8311$1l2agK)
                (if g$ls/false$8311$1l2agK
                  (apply
                    (case-lambda
                      ((g$who$8312$1l2agK
                         g$fmls$8313$1l2agK
                         g$b$8314$1l2agK
                         g$b*$8315$1l2agK)
                       (if (g$valid-bound-ids?$7378$1l2agK g$fmls$8313$1l2agK)
                         (g$bless$7614$1l2agK
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8312$1l2agK)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8313$1l2agK
                                 (cons g$b$8314$1l2agK g$b*$8315$1l2agK)))))
                         (g$invalid-fmls-error$7616$1l2agK
                           g$stx$8309$1l2agK
                           g$fmls$8313$1l2agK))))
                    g$ls/false$8311$1l2agK)
                  ((case-lambda
                     ((g$t$8316$1l2agK)
                      ((case-lambda
                         ((g$ls/false$8317$1l2agK)
                          (if g$ls/false$8317$1l2agK
                            (apply
                              (case-lambda
                                ((g$who$8318$1l2agK
                                   g$fmls$8319$1l2agK
                                   g$last$8320$1l2agK
                                   g$b$8321$1l2agK
                                   g$b*$8322$1l2agK)
                                 (if (g$valid-bound-ids?$7378$1l2agK
                                       (cons
                                         g$last$8320$1l2agK
                                         g$fmls$8319$1l2agK))
                                   (g$bless$7614$1l2agK
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8318$1l2agK)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8319$1l2agK
                                             g$last$8320$1l2agK)
                                           (cons
                                             g$b$8321$1l2agK
                                             g$b*$8322$1l2agK)))))
                                   (g$invalid-fmls-error$7616$1l2agK
                                     g$stx$8309$1l2agK
                                     (append
                                       g$fmls$8319$1l2agK
                                       g$last$8320$1l2agK)))))
                              g$ls/false$8317$1l2agK)
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"invalid syntax"
                              g$t$8316$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$8316$1l2agK
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8310$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8310$1l2agK
               '(_ any each-any any . each-any)))))
         g$stx$8309$1l2agK))))
   (g$trace-define-macro$7621$1l2agK
     g$trace-define-macro$11067$1l2agK
     (case-lambda
       ((g$stx$8323$1l2agK)
        ((case-lambda
           ((g$t$8324$1l2agK)
            ((case-lambda
               ((g$ls/false$8325$1l2agK)
                (if g$ls/false$8325$1l2agK
                  (apply
                    (case-lambda
                      ((g$who$8326$1l2agK
                         g$fmls$8327$1l2agK
                         g$b$8328$1l2agK
                         g$b*$8329$1l2agK)
                       (if (g$valid-bound-ids?$7378$1l2agK g$fmls$8327$1l2agK)
                         (g$bless$7614$1l2agK
                           (list
                             'define
                             g$who$8326$1l2agK
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8326$1l2agK)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8327$1l2agK
                                   (cons g$b$8328$1l2agK g$b*$8329$1l2agK))))))
                         (g$invalid-fmls-error$7616$1l2agK
                           g$stx$8323$1l2agK
                           g$fmls$8327$1l2agK))))
                    g$ls/false$8325$1l2agK)
                  ((case-lambda
                     ((g$t$8330$1l2agK)
                      ((case-lambda
                         ((g$ls/false$8331$1l2agK)
                          (if g$ls/false$8331$1l2agK
                            (apply
                              (case-lambda
                                ((g$who$8332$1l2agK
                                   g$fmls$8333$1l2agK
                                   g$last$8334$1l2agK
                                   g$b$8335$1l2agK
                                   g$b*$8336$1l2agK)
                                 (if (g$valid-bound-ids?$7378$1l2agK
                                       (cons
                                         g$last$8334$1l2agK
                                         g$fmls$8333$1l2agK))
                                   (g$bless$7614$1l2agK
                                     (list
                                       'define
                                       g$who$8332$1l2agK
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8332$1l2agK)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8333$1l2agK
                                               g$last$8334$1l2agK)
                                             (cons
                                               g$b$8335$1l2agK
                                               g$b*$8336$1l2agK))))))
                                   (g$invalid-fmls-error$7616$1l2agK
                                     g$stx$8323$1l2agK
                                     (append
                                       g$fmls$8333$1l2agK
                                       g$last$8334$1l2agK)))))
                              g$ls/false$8331$1l2agK)
                            ((case-lambda
                               ((g$t$8337$1l2agK)
                                ((case-lambda
                                   ((g$ls/false$8338$1l2agK)
                                    (if g$ls/false$8338$1l2agK
                                      (apply
                                        (case-lambda
                                          ((g$who$8339$1l2agK
                                             g$expr$8340$1l2agK)
                                           (if (g$id?$7373$1l2agK
                                                 g$who$8339$1l2agK)
                                             (g$bless$7614$1l2agK
                                               (list
                                                 'define
                                                 g$who$8339$1l2agK
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8340$1l2agK))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8339$1l2agK)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7762$1l2agK
                                               '#f
                                               '"invalid name"
                                               g$stx$8323$1l2agK))))
                                        g$ls/false$8338$1l2agK)
                                      (g$syntax-violation$7762$1l2agK
                                        '#f
                                        '"invalid syntax"
                                        g$t$8337$1l2agK))))
                                 (g$syntax-dispatch$7651$1l2agK
                                   g$t$8337$1l2agK
                                   '(_ any any)))))
                             g$t$8330$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$8330$1l2agK
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8324$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8324$1l2agK
               '(_ (any . each-any) any . each-any)))))
         g$stx$8323$1l2agK))))
   (g$trace-define-syntax-macro$7622$1l2agK
     g$trace-define-syntax-macro$11068$1l2agK
     (case-lambda
       ((g$stx$8341$1l2agK)
        ((case-lambda
           ((g$t$8342$1l2agK)
            ((case-lambda
               ((g$ls/false$8343$1l2agK)
                (if g$ls/false$8343$1l2agK
                  (apply
                    (case-lambda
                      ((g$who$8344$1l2agK g$expr$8345$1l2agK)
                       (if (g$id?$7373$1l2agK g$who$8344$1l2agK)
                         (g$bless$7614$1l2agK
                           (list
                             'define-syntax
                             g$who$8344$1l2agK
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8344$1l2agK)
                               g$expr$8345$1l2agK)))
                         (g$syntax-violation$7762$1l2agK
                           '#f
                           '"invalid name"
                           g$stx$8341$1l2agK))))
                    g$ls/false$8343$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8342$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8342$1l2agK '(_ any any)))))
         g$stx$8341$1l2agK))))
   (g$trace-let/rec-syntax$7623$1l2agK
     g$trace-let/rec-syntax$11069$1l2agK
     (case-lambda
       ((g$who$8346$1l2agK)
        (case-lambda
          ((g$stx$8347$1l2agK)
           ((case-lambda
              ((g$t$8348$1l2agK)
               ((case-lambda
                  ((g$ls/false$8349$1l2agK)
                   (if g$ls/false$8349$1l2agK
                     (apply
                       (case-lambda
                         ((g$lhs*$8350$1l2agK
                            g$rhs*$8351$1l2agK
                            g$b$8352$1l2agK
                            g$b*$8353$1l2agK)
                          (if (g$valid-bound-ids?$7378$1l2agK
                                g$lhs*$8350$1l2agK)
                            ((case-lambda
                               ((g$rhs*$8354$1l2agK)
                                (g$bless$7614$1l2agK
                                  (cons
                                    g$who$8346$1l2agK
                                    (cons
                                      (map list
                                           g$lhs*$8350$1l2agK
                                           g$rhs*$8354$1l2agK)
                                      (cons
                                        g$b$8352$1l2agK
                                        g$b*$8353$1l2agK))))))
                             (map (case-lambda
                                    ((g$lhs$8355$1l2agK g$rhs$8356$1l2agK)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8355$1l2agK)
                                       g$rhs$8356$1l2agK)))
                                  g$lhs*$8350$1l2agK
                                  g$rhs*$8351$1l2agK))
                            (g$invalid-fmls-error$7616$1l2agK
                              g$stx$8347$1l2agK
                              g$lhs*$8350$1l2agK))))
                       g$ls/false$8349$1l2agK)
                     (g$syntax-violation$7762$1l2agK
                       '#f
                       '"invalid syntax"
                       g$t$8348$1l2agK))))
                (g$syntax-dispatch$7651$1l2agK
                  g$t$8348$1l2agK
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8347$1l2agK))))))
   (g$trace-let-syntax-macro$7624$1l2agK
     g$trace-let-syntax-macro$11070$1l2agK
     (g$trace-let/rec-syntax$7623$1l2agK 'let-syntax))
   (g$trace-letrec-syntax-macro$7625$1l2agK
     g$trace-letrec-syntax-macro$11071$1l2agK
     (g$trace-let/rec-syntax$7623$1l2agK 'letrec-syntax))
   (g$guard-macro$7626$1l2agK
     g$guard-macro$11072$1l2agK
     (case-lambda
       ((g$x$8357$1l2agK)
        (letrec* ((g$gen-clauses$8358$1l2agK
                    (case-lambda
                      ((g$con$8370$1l2agK
                         g$outerk$8371$1l2agK
                         g$clause*$8372$1l2agK)
                       (letrec* ((g$f$8373$1l2agK
                                   (case-lambda
                                     ((g$x$8401$1l2agK g$k$8402$1l2agK)
                                      ((case-lambda
                                         ((g$t$8403$1l2agK)
                                          ((case-lambda
                                             ((g$ls/false$8404$1l2agK)
                                              (if g$ls/false$8404$1l2agK
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8405$1l2agK
                                                       g$p$8406$1l2agK)
                                                     ((case-lambda
                                                        ((g$t$8407$1l2agK)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8407$1l2agK
                                                               g$e$8405$1l2agK))
                                                           (list
                                                             'if
                                                             g$t$8407$1l2agK
                                                             (list
                                                               g$p$8406$1l2agK
                                                               g$t$8407$1l2agK)
                                                             g$k$8402$1l2agK))))
                                                      (gensym))))
                                                  g$ls/false$8404$1l2agK)
                                                ((case-lambda
                                                   ((g$t$8408$1l2agK)
                                                    ((case-lambda
                                                       ((g$ls/false$8409$1l2agK)
                                                        (if g$ls/false$8409$1l2agK
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8410$1l2agK)
                                                               ((case-lambda
                                                                  ((g$t$8411$1l2agK)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8411$1l2agK
                                                                         g$e$8410$1l2agK))
                                                                     (list
                                                                       'if
                                                                       g$t$8411$1l2agK
                                                                       g$t$8411$1l2agK
                                                                       g$k$8402$1l2agK))))
                                                                (gensym))))
                                                            g$ls/false$8409$1l2agK)
                                                          ((case-lambda
                                                             ((g$t$8412$1l2agK)
                                                              ((case-lambda
                                                                 ((g$ls/false$8413$1l2agK)
                                                                  (if g$ls/false$8413$1l2agK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8414$1l2agK
                                                                           g$v$8415$1l2agK
                                                                           g$v*$8416$1l2agK)
                                                                         (list
                                                                           'if
                                                                           g$e$8414$1l2agK
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8415$1l2agK
                                                                               g$v*$8416$1l2agK))
                                                                           g$k$8402$1l2agK)))
                                                                      g$ls/false$8413$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$t$8417$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8418$1l2agK)
                                                                            (if g$ls/false$8418$1l2agK
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7762$1l2agK
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8401$1l2agK)))
                                                                                g$ls/false$8418$1l2agK)
                                                                              (g$syntax-violation$7762$1l2agK
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8417$1l2agK))))
                                                                         (g$syntax-dispatch$7651$1l2agK
                                                                           g$t$8417$1l2agK
                                                                           '_))))
                                                                     g$t$8412$1l2agK))))
                                                               (g$syntax-dispatch$7651$1l2agK
                                                                 g$t$8412$1l2agK
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8408$1l2agK))))
                                                     (g$syntax-dispatch$7651$1l2agK
                                                       g$t$8408$1l2agK
                                                       '(any)))))
                                                 g$t$8403$1l2agK))))
                                           (g$syntax-dispatch$7651$1l2agK
                                             g$t$8403$1l2agK
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8401$1l2agK))))
                                 (g$f*$8374$1l2agK
                                   (case-lambda
                                     ((g$x*$8381$1l2agK)
                                      ((case-lambda
                                         ((g$t$8382$1l2agK)
                                          ((case-lambda
                                             ((g$ls/false$8383$1l2agK)
                                              (if g$ls/false$8383$1l2agK
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8370$1l2agK)
                                                       '#t)))
                                                  g$ls/false$8383$1l2agK)
                                                ((case-lambda
                                                   ((g$t$8384$1l2agK)
                                                    ((case-lambda
                                                       ((g$ls/false$8385$1l2agK)
                                                        (if g$ls/false$8385$1l2agK
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8386$1l2agK
                                                                 g$e*$8387$1l2agK)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8386$1l2agK
                                                                     g$e*$8387$1l2agK))
                                                                 '#f)))
                                                            g$ls/false$8385$1l2agK)
                                                          ((case-lambda
                                                             ((g$t$8388$1l2agK)
                                                              ((case-lambda
                                                                 ((g$ls/false$8389$1l2agK)
                                                                  (if g$ls/false$8389$1l2agK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8390$1l2agK
                                                                           g$cls*$8391$1l2agK)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8374$1l2agK
                                                                                g$cls*$8391$1l2agK)))
                                                                           (case-lambda
                                                                             ((g$e$8394$1l2agK
                                                                                g$g$8395$1l2agK)
                                                                              ((case-lambda
                                                                                 ((g$g$8396$1l2agK
                                                                                    g$e$8397$1l2agK)
                                                                                  (values
                                                                                    (g$f$8373$1l2agK
                                                                                      g$cls$8390$1l2agK
                                                                                      g$e$8397$1l2agK)
                                                                                    g$g$8396$1l2agK)))
                                                                               g$g$8395$1l2agK
                                                                               g$e$8394$1l2agK))))))
                                                                      g$ls/false$8389$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$t$8398$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8399$1l2agK)
                                                                            (if g$ls/false$8399$1l2agK
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8400$1l2agK)
                                                                                   (g$syntax-violation$7762$1l2agK
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8400$1l2agK)))
                                                                                g$ls/false$8399$1l2agK)
                                                                              (g$syntax-violation$7762$1l2agK
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8398$1l2agK))))
                                                                         (g$syntax-dispatch$7651$1l2agK
                                                                           g$t$8398$1l2agK
                                                                           'any))))
                                                                     g$t$8388$1l2agK))))
                                                               (g$syntax-dispatch$7651$1l2agK
                                                                 g$t$8388$1l2agK
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8384$1l2agK))))
                                                     (g$syntax-dispatch$7651$1l2agK
                                                       g$t$8384$1l2agK
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8382$1l2agK))))
                                           (g$syntax-dispatch$7651$1l2agK
                                             g$t$8382$1l2agK
                                             '()))))
                                       g$x*$8381$1l2agK)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8374$1l2agK g$clause*$8372$1l2agK)))
                           (case-lambda
                             ((g$code$8377$1l2agK g$raisek$8378$1l2agK)
                              ((case-lambda
                                 ((g$raisek$8379$1l2agK g$code$8380$1l2agK)
                                  (if g$raisek$8379$1l2agK
                                    (list
                                      g$outerk$8371$1l2agK
                                      g$code$8380$1l2agK)
                                    g$code$8380$1l2agK)))
                               g$raisek$8378$1l2agK
                               g$code$8377$1l2agK)))))))))
          ((case-lambda
             ((g$t$8359$1l2agK)
              ((case-lambda
                 ((g$ls/false$8360$1l2agK)
                  (if (if g$ls/false$8360$1l2agK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8361$1l2agK
                                 g$clause*$8362$1l2agK
                                 g$b$8363$1l2agK
                                 g$b*$8364$1l2agK)
                               (g$id?$7373$1l2agK g$con$8361$1l2agK)))
                            g$ls/false$8360$1l2agK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8365$1l2agK
                           g$clause*$8366$1l2agK
                           g$b$8367$1l2agK
                           g$b*$8368$1l2agK)
                         ((case-lambda
                            ((g$outerk$8369$1l2agK)
                             (g$bless$7614$1l2agK
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8369$1l2agK)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8365$1l2agK)
                                           (g$gen-clauses$8358$1l2agK
                                             g$con$8365$1l2agK
                                             g$outerk$8369$1l2agK
                                             g$clause*$8366$1l2agK))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8367$1l2agK
                                                 g$b*$8368$1l2agK))))))))))))
                          (gensym))))
                      g$ls/false$8360$1l2agK)
                    (g$syntax-violation$7762$1l2agK
                      '#f
                      '"invalid syntax"
                      g$t$8359$1l2agK))))
               (g$syntax-dispatch$7651$1l2agK
                 g$t$8359$1l2agK
                 '(_ (any . each-any) any . each-any)))))
           g$x$8357$1l2agK)))))
   (g$define-enumeration-macro$7627$1l2agK
     g$define-enumeration-macro$11073$1l2agK
     (case-lambda
       ((g$stx$8419$1l2agK)
        (letrec* ((g$set?$8420$1l2agK
                    (case-lambda
                      ((g$x$8433$1l2agK)
                       ((case-lambda
                          ((g$t$8434$1l2agK)
                           (if g$t$8434$1l2agK
                             g$t$8434$1l2agK
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8433$1l2agK)
                                          (cdr g$x$8433$1l2agK)))
                                 (begin
                                   '#f
                                   (g$set?$8420$1l2agK (cdr g$x$8433$1l2agK)))
                                 '#f)))))
                        (null? g$x$8433$1l2agK)))))
                  (g$remove-dups$8421$1l2agK
                    (case-lambda
                      ((g$ls$8432$1l2agK)
                       (if (null? g$ls$8432$1l2agK)
                         '()
                         (cons
                           (car g$ls$8432$1l2agK)
                           (g$remove-dups$8421$1l2agK
                             (g$remq$5510$1l2agK
                               (car g$ls$8432$1l2agK)
                               (cdr g$ls$8432$1l2agK)))))))))
          ((case-lambda
             ((g$t$8422$1l2agK)
              ((case-lambda
                 ((g$ls/false$8423$1l2agK)
                  (if (if g$ls/false$8423$1l2agK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8424$1l2agK
                                 g$id*$8425$1l2agK
                                 g$maker$8426$1l2agK)
                               (if (g$id?$7373$1l2agK g$name$8424$1l2agK)
                                 (if (g$id?$7373$1l2agK g$maker$8426$1l2agK)
                                   (begin
                                     '#f
                                     (g$for-all$5503$1l2agK
                                       g$id?$7373$1l2agK
                                       g$id*$8425$1l2agK))
                                   '#f)
                                 '#f)))
                            g$ls/false$8423$1l2agK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8427$1l2agK
                           g$id*$8428$1l2agK
                           g$maker$8429$1l2agK)
                         ((case-lambda
                            ((g$name*$8430$1l2agK g$mk$8431$1l2agK)
                             (g$bless$7614$1l2agK
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8431$1l2agK
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8430$1l2agK))))
                                 (list
                                   'define-syntax
                                   g$name$8427$1l2agK
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8430$1l2agK))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8427$1l2agK)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8429$1l2agK
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8429$1l2agK)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8430$1l2agK))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8429$1l2agK)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8431$1l2agK
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8421$1l2agK
                            (g$syntax->datum$7765$1l2agK g$id*$8428$1l2agK))
                          (gensym))))
                      g$ls/false$8423$1l2agK)
                    (g$syntax-violation$7762$1l2agK
                      '#f
                      '"invalid syntax"
                      g$t$8422$1l2agK))))
               (g$syntax-dispatch$7651$1l2agK
                 g$t$8422$1l2agK
                 '(_ any each-any any)))))
           g$stx$8419$1l2agK)))))
   (g$time-macro$7628$1l2agK
     g$time-macro$11074$1l2agK
     (case-lambda
       ((g$stx$8435$1l2agK)
        ((case-lambda
           ((g$t$8436$1l2agK)
            ((case-lambda
               ((g$ls/false$8437$1l2agK)
                (if g$ls/false$8437$1l2agK
                  (apply
                    (case-lambda
                      ((g$expr$8438$1l2agK)
                       ((case-lambda
                          ((g$str$8439$1l2agK)
                           (g$bless$7614$1l2agK
                             (list
                               'time-it
                               g$str$8439$1l2agK
                               (list 'lambda '() g$expr$8438$1l2agK)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6352$1l2agK)))
                          (case-lambda
                            ((g$p$8442$1l2agK g$e$8443$1l2agK)
                             ((case-lambda
                                ((g$e$8444$1l2agK g$p$8445$1l2agK)
                                 (begin
                                   (write
                                     (g$syntax->datum$7765$1l2agK
                                       g$expr$8438$1l2agK)
                                     g$p$8445$1l2agK)
                                   (g$e$8444$1l2agK))))
                              g$e$8443$1l2agK
                              g$p$8442$1l2agK)))))))
                    g$ls/false$8437$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8436$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8436$1l2agK '(_ any)))))
         g$stx$8435$1l2agK))))
   (g$delay-macro$7629$1l2agK
     g$delay-macro$11075$1l2agK
     (case-lambda
       ((g$stx$8446$1l2agK)
        ((case-lambda
           ((g$t$8447$1l2agK)
            ((case-lambda
               ((g$ls/false$8448$1l2agK)
                (if g$ls/false$8448$1l2agK
                  (apply
                    (case-lambda
                      ((g$expr$8449$1l2agK)
                       (g$bless$7614$1l2agK
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8449$1l2agK)))))
                    g$ls/false$8448$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8447$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8447$1l2agK '(_ any)))))
         g$stx$8446$1l2agK))))
   (g$assert-macro$7630$1l2agK
     g$assert-macro$11076$1l2agK
     (case-lambda
       ((g$stx$8450$1l2agK)
        ((case-lambda
           ((g$t$8451$1l2agK)
            ((case-lambda
               ((g$ls/false$8452$1l2agK)
                (if g$ls/false$8452$1l2agK
                  (apply
                    (case-lambda
                      ((g$expr$8453$1l2agK)
                       ((case-lambda
                          ((g$pos$8454$1l2agK)
                           (g$bless$7614$1l2agK
                             (list
                               'unless
                               g$expr$8453$1l2agK
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8453$1l2agK)
                                 (list 'quote g$pos$8454$1l2agK))))))
                        ((case-lambda
                           ((g$t$8455$1l2agK)
                            (if g$t$8455$1l2agK
                              g$t$8455$1l2agK
                              (begin
                                '#f
                                (g$expression-position$7757$1l2agK
                                  g$expr$8453$1l2agK)))))
                         (g$expression-position$7757$1l2agK
                           g$stx$8450$1l2agK)))))
                    g$ls/false$8452$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8451$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8451$1l2agK '(_ any)))))
         g$stx$8450$1l2agK))))
   (g$endianness-macro$7631$1l2agK
     g$endianness-macro$11077$1l2agK
     (case-lambda
       ((g$stx$8456$1l2agK)
        ((case-lambda
           ((g$t$8457$1l2agK)
            ((case-lambda
               ((g$ls/false$8458$1l2agK)
                (if g$ls/false$8458$1l2agK
                  (apply
                    (case-lambda
                      ((g$e$8459$1l2agK)
                       ((case-lambda
                          ((g$t$8460$1l2agK)
                           (if (memv g$t$8460$1l2agK '(little))
                             (g$bless$7614$1l2agK ''little)
                             (if (memv g$t$8460$1l2agK '(big))
                               (g$bless$7614$1l2agK ''big)
                               (g$syntax-violation$7762$1l2agK
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8456$1l2agK)))))
                        (g$syntax->datum$7765$1l2agK g$e$8459$1l2agK))))
                    g$ls/false$8458$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8457$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8457$1l2agK '(_ any)))))
         g$stx$8456$1l2agK))))
   (g$identifier-syntax-macro$7632$1l2agK
     g$identifier-syntax-macro$11078$1l2agK
     (case-lambda
       ((g$stx$8461$1l2agK)
        ((case-lambda
           ((g$t$8462$1l2agK)
            ((case-lambda
               ((g$ls/false$8463$1l2agK)
                (if g$ls/false$8463$1l2agK
                  (apply
                    (case-lambda
                      ((g$expr$8464$1l2agK)
                       (g$bless$7614$1l2agK
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8464$1l2agK))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8464$1l2agK)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8463$1l2agK)
                  ((case-lambda
                     ((g$t$8465$1l2agK)
                      ((case-lambda
                         ((g$ls/false$8466$1l2agK)
                          (if (if g$ls/false$8466$1l2agK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8467$1l2agK
                                         g$expr1$8468$1l2agK
                                         g$id2$8469$1l2agK
                                         g$expr2$8470$1l2agK
                                         g$expr3$8471$1l2agK)
                                       (if (g$id?$7373$1l2agK g$id1$8467$1l2agK)
                                         (if (g$id?$7373$1l2agK
                                               g$id2$8469$1l2agK)
                                           (begin
                                             '#f
                                             (g$id?$7373$1l2agK
                                               g$expr2$8470$1l2agK))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8466$1l2agK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8472$1l2agK
                                   g$expr1$8473$1l2agK
                                   g$id2$8474$1l2agK
                                   g$expr2$8475$1l2agK
                                   g$expr3$8476$1l2agK)
                                 (g$bless$7614$1l2agK
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8473$1l2agK))
                                         (list
                                           (list 'set! 'id g$expr2$8475$1l2agK)
                                           (list 'syntax g$expr3$8476$1l2agK))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8473$1l2agK
                                               '(e* ...))))))))))
                              g$ls/false$8466$1l2agK)
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"invalid syntax"
                              g$t$8465$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$8465$1l2agK
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8462$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8462$1l2agK '(_ any)))))
         g$stx$8461$1l2agK))))
   (g$do-macro$7633$1l2agK
     g$do-macro$11079$1l2agK
     (case-lambda
       ((g$stx$8477$1l2agK)
        (letrec* ((g$bind$8478$1l2agK
                    (case-lambda
                      ((g$x$8490$1l2agK)
                       ((case-lambda
                          ((g$t$8491$1l2agK)
                           ((case-lambda
                              ((g$ls/false$8492$1l2agK)
                               (if g$ls/false$8492$1l2agK
                                 (apply
                                   (case-lambda
                                     ((g$x$8493$1l2agK g$init$8494$1l2agK)
                                      (list
                                        g$x$8493$1l2agK
                                        g$init$8494$1l2agK
                                        g$x$8493$1l2agK)))
                                   g$ls/false$8492$1l2agK)
                                 ((case-lambda
                                    ((g$t$8495$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$8496$1l2agK)
                                         (if g$ls/false$8496$1l2agK
                                           (apply
                                             (case-lambda
                                               ((g$x$8497$1l2agK
                                                  g$init$8498$1l2agK
                                                  g$step$8499$1l2agK)
                                                (list
                                                  g$x$8497$1l2agK
                                                  g$init$8498$1l2agK
                                                  g$step$8499$1l2agK)))
                                             g$ls/false$8496$1l2agK)
                                           ((case-lambda
                                              ((g$t$8500$1l2agK)
                                               ((case-lambda
                                                  ((g$ls/false$8501$1l2agK)
                                                   (if g$ls/false$8501$1l2agK
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7762$1l2agK
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8477$1l2agK)))
                                                       g$ls/false$8501$1l2agK)
                                                     (g$syntax-violation$7762$1l2agK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8500$1l2agK))))
                                                (g$syntax-dispatch$7651$1l2agK
                                                  g$t$8500$1l2agK
                                                  '_))))
                                            g$t$8495$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$8495$1l2agK
                                        '(any any any)))))
                                  g$t$8491$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$8491$1l2agK
                              '(any any)))))
                        g$x$8490$1l2agK)))))
          ((case-lambda
             ((g$t$8479$1l2agK)
              ((case-lambda
                 ((g$ls/false$8480$1l2agK)
                  (if g$ls/false$8480$1l2agK
                    (apply
                      (case-lambda
                        ((g$binding*$8481$1l2agK
                           g$test$8482$1l2agK
                           g$expr*$8483$1l2agK
                           g$command*$8484$1l2agK)
                         ((case-lambda
                            ((g$t$8485$1l2agK)
                             ((case-lambda
                                ((g$ls/false$8486$1l2agK)
                                 (if g$ls/false$8486$1l2agK
                                   (apply
                                     (case-lambda
                                       ((g$x*$8487$1l2agK
                                          g$init*$8488$1l2agK
                                          g$step*$8489$1l2agK)
                                        (if (g$valid-bound-ids?$7378$1l2agK
                                              g$x*$8487$1l2agK)
                                          (g$bless$7614$1l2agK
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8487$1l2agK
                                                    (list
                                                      'if
                                                      g$test$8482$1l2agK
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8483$1l2agK))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8484$1l2agK
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8489$1l2agK))))))))
                                              (cons 'loop g$init*$8488$1l2agK)))
                                          (g$syntax-violation$7762$1l2agK
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8477$1l2agK))))
                                     g$ls/false$8486$1l2agK)
                                   (g$syntax-violation$7762$1l2agK
                                     '#f
                                     '"invalid syntax"
                                     g$t$8485$1l2agK))))
                              (g$syntax-dispatch$7651$1l2agK
                                g$t$8485$1l2agK
                                '#(each (any any any))))))
                          (map g$bind$8478$1l2agK g$binding*$8481$1l2agK))))
                      g$ls/false$8480$1l2agK)
                    (g$syntax-violation$7762$1l2agK
                      '#f
                      '"invalid syntax"
                      g$t$8479$1l2agK))))
               (g$syntax-dispatch$7651$1l2agK
                 g$t$8479$1l2agK
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8477$1l2agK)))))
   (g$let*-macro$7634$1l2agK
     g$let*-macro$11080$1l2agK
     (case-lambda
       ((g$stx$8502$1l2agK)
        ((case-lambda
           ((g$t$8503$1l2agK)
            ((case-lambda
               ((g$ls/false$8504$1l2agK)
                (if (if g$ls/false$8504$1l2agK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8505$1l2agK
                               g$rhs*$8506$1l2agK
                               g$b$8507$1l2agK
                               g$b*$8508$1l2agK)
                             (g$for-all$5503$1l2agK
                               g$id?$7373$1l2agK
                               g$lhs*$8505$1l2agK)))
                          g$ls/false$8504$1l2agK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8509$1l2agK
                         g$rhs*$8510$1l2agK
                         g$b$8511$1l2agK
                         g$b*$8512$1l2agK)
                       (g$bless$7614$1l2agK
                         ((letrec ((g$f$8513$1l2agK
                                     (case-lambda
                                       ((g$x*$8514$1l2agK)
                                        (if (null? g$x*$8514$1l2agK)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8511$1l2agK
                                                g$b*$8512$1l2agK)))
                                          (list
                                            'let
                                            (list (car g$x*$8514$1l2agK))
                                            (g$f$8513$1l2agK
                                              (cdr g$x*$8514$1l2agK))))))))
                            g$f$8513$1l2agK)
                          (map list g$lhs*$8509$1l2agK g$rhs*$8510$1l2agK)))))
                    g$ls/false$8504$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8503$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8503$1l2agK
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8502$1l2agK))))
   (g$or-macro$7635$1l2agK
     g$or-macro$11081$1l2agK
     (case-lambda
       ((g$stx$8515$1l2agK)
        ((case-lambda
           ((g$t$8516$1l2agK)
            ((case-lambda
               ((g$ls/false$8517$1l2agK)
                (if g$ls/false$8517$1l2agK
                  (apply (case-lambda (() '#f)) g$ls/false$8517$1l2agK)
                  ((case-lambda
                     ((g$t$8518$1l2agK)
                      ((case-lambda
                         ((g$ls/false$8519$1l2agK)
                          (if g$ls/false$8519$1l2agK
                            (apply
                              (case-lambda
                                ((g$e$8520$1l2agK g$e*$8521$1l2agK)
                                 (g$bless$7614$1l2agK
                                   ((letrec ((g$f$8522$1l2agK
                                               (case-lambda
                                                 ((g$e$8523$1l2agK
                                                    g$e*$8524$1l2agK)
                                                  (if (null? g$e*$8524$1l2agK)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8523$1l2agK)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8523$1l2agK))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8522$1l2agK
                                                          (car g$e*$8524$1l2agK)
                                                          (cdr g$e*$8524$1l2agK)))))))))
                                      g$f$8522$1l2agK)
                                    g$e$8520$1l2agK
                                    g$e*$8521$1l2agK))))
                              g$ls/false$8519$1l2agK)
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"invalid syntax"
                              g$t$8518$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$8518$1l2agK
                         '(_ any . each-any)))))
                   g$t$8516$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8516$1l2agK '(_)))))
         g$stx$8515$1l2agK))))
   (g$and-macro$7636$1l2agK
     g$and-macro$11082$1l2agK
     (case-lambda
       ((g$stx$8525$1l2agK)
        ((case-lambda
           ((g$t$8526$1l2agK)
            ((case-lambda
               ((g$ls/false$8527$1l2agK)
                (if g$ls/false$8527$1l2agK
                  (apply (case-lambda (() '#t)) g$ls/false$8527$1l2agK)
                  ((case-lambda
                     ((g$t$8528$1l2agK)
                      ((case-lambda
                         ((g$ls/false$8529$1l2agK)
                          (if g$ls/false$8529$1l2agK
                            (apply
                              (case-lambda
                                ((g$e$8530$1l2agK g$e*$8531$1l2agK)
                                 (g$bless$7614$1l2agK
                                   ((letrec ((g$f$8532$1l2agK
                                               (case-lambda
                                                 ((g$e$8533$1l2agK
                                                    g$e*$8534$1l2agK)
                                                  (if (null? g$e*$8534$1l2agK)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8533$1l2agK)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8533$1l2agK
                                                        (cons
                                                          (g$f$8532$1l2agK
                                                            (car g$e*$8534$1l2agK)
                                                            (cdr g$e*$8534$1l2agK))
                                                          '(#f)))))))))
                                      g$f$8532$1l2agK)
                                    g$e$8530$1l2agK
                                    g$e*$8531$1l2agK))))
                              g$ls/false$8529$1l2agK)
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"invalid syntax"
                              g$t$8528$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$8528$1l2agK
                         '(_ any . each-any)))))
                   g$t$8526$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8526$1l2agK '(_)))))
         g$stx$8525$1l2agK))))
   (g$cond-macro$7637$1l2agK
     g$cond-macro$11083$1l2agK
     (case-lambda
       ((g$stx$8535$1l2agK)
        ((case-lambda
           ((g$t$8536$1l2agK)
            ((case-lambda
               ((g$ls/false$8537$1l2agK)
                (if g$ls/false$8537$1l2agK
                  (apply
                    (case-lambda
                      ((g$cls$8538$1l2agK g$cls*$8539$1l2agK)
                       (g$bless$7614$1l2agK
                         ((letrec ((g$f$8540$1l2agK
                                     (case-lambda
                                       ((g$cls$8541$1l2agK g$cls*$8542$1l2agK)
                                        (if (null? g$cls*$8542$1l2agK)
                                          ((case-lambda
                                             ((g$t$8543$1l2agK)
                                              ((case-lambda
                                                 ((g$ls/false$8544$1l2agK)
                                                  (if g$ls/false$8544$1l2agK
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8545$1l2agK
                                                           g$e*$8546$1l2agK)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8545$1l2agK
                                                             g$e*$8546$1l2agK))))
                                                      g$ls/false$8544$1l2agK)
                                                    ((case-lambda
                                                       ((g$t$8547$1l2agK)
                                                        ((case-lambda
                                                           ((g$ls/false$8548$1l2agK)
                                                            (if g$ls/false$8548$1l2agK
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8549$1l2agK
                                                                     g$p$8550$1l2agK)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8549$1l2agK))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8550$1l2agK
                                                                         '(t))))))
                                                                g$ls/false$8548$1l2agK)
                                                              ((case-lambda
                                                                 ((g$t$8551$1l2agK)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8552$1l2agK)
                                                                      (if g$ls/false$8552$1l2agK
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8553$1l2agK)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8553$1l2agK
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8552$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$t$8554$1l2agK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8555$1l2agK)
                                                                                (if g$ls/false$8555$1l2agK
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8556$1l2agK
                                                                                         g$e*$8557$1l2agK)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8556$1l2agK
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8557$1l2agK))))
                                                                                    g$ls/false$8555$1l2agK)
                                                                                  ((case-lambda
                                                                                     ((g$t$8558$1l2agK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8559$1l2agK)
                                                                                          (if g$ls/false$8559$1l2agK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7762$1l2agK
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8535$1l2agK)))
                                                                                              g$ls/false$8559$1l2agK)
                                                                                            (g$syntax-violation$7762$1l2agK
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8558$1l2agK))))
                                                                                       (g$syntax-dispatch$7651$1l2agK
                                                                                         g$t$8558$1l2agK
                                                                                         '_))))
                                                                                   g$t$8554$1l2agK))))
                                                                             (g$syntax-dispatch$7651$1l2agK
                                                                               g$t$8554$1l2agK
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8551$1l2agK))))
                                                                   (g$syntax-dispatch$7651$1l2agK
                                                                     g$t$8551$1l2agK
                                                                     '(any)))))
                                                               g$t$8547$1l2agK))))
                                                         (g$syntax-dispatch$7651$1l2agK
                                                           g$t$8547$1l2agK
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8543$1l2agK))))
                                               (g$syntax-dispatch$7651$1l2agK
                                                 g$t$8543$1l2agK
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8541$1l2agK)
                                          ((case-lambda
                                             ((g$t$8560$1l2agK)
                                              ((case-lambda
                                                 ((g$ls/false$8561$1l2agK)
                                                  (if g$ls/false$8561$1l2agK
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8562$1l2agK
                                                           g$e*$8563$1l2agK)
                                                         (g$syntax-violation$7762$1l2agK
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8535$1l2agK)))
                                                      g$ls/false$8561$1l2agK)
                                                    ((case-lambda
                                                       ((g$t$8564$1l2agK)
                                                        ((case-lambda
                                                           ((g$ls/false$8565$1l2agK)
                                                            (if g$ls/false$8565$1l2agK
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8566$1l2agK
                                                                     g$p$8567$1l2agK)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8566$1l2agK))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8567$1l2agK
                                                                         '(t))
                                                                       (g$f$8540$1l2agK
                                                                         (car g$cls*$8542$1l2agK)
                                                                         (cdr g$cls*$8542$1l2agK))))))
                                                                g$ls/false$8565$1l2agK)
                                                              ((case-lambda
                                                                 ((g$t$8568$1l2agK)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8569$1l2agK)
                                                                      (if g$ls/false$8569$1l2agK
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8570$1l2agK)
                                                                             (list
                                                                               'or
                                                                               g$e$8570$1l2agK
                                                                               (g$f$8540$1l2agK
                                                                                 (car g$cls*$8542$1l2agK)
                                                                                 (cdr g$cls*$8542$1l2agK)))))
                                                                          g$ls/false$8569$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$t$8571$1l2agK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8572$1l2agK)
                                                                                (if g$ls/false$8572$1l2agK
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8573$1l2agK
                                                                                         g$e*$8574$1l2agK)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8573$1l2agK
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8574$1l2agK)
                                                                                         (g$f$8540$1l2agK
                                                                                           (car g$cls*$8542$1l2agK)
                                                                                           (cdr g$cls*$8542$1l2agK)))))
                                                                                    g$ls/false$8572$1l2agK)
                                                                                  ((case-lambda
                                                                                     ((g$t$8575$1l2agK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8576$1l2agK)
                                                                                          (if g$ls/false$8576$1l2agK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7762$1l2agK
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8535$1l2agK)))
                                                                                              g$ls/false$8576$1l2agK)
                                                                                            (g$syntax-violation$7762$1l2agK
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8575$1l2agK))))
                                                                                       (g$syntax-dispatch$7651$1l2agK
                                                                                         g$t$8575$1l2agK
                                                                                         '_))))
                                                                                   g$t$8571$1l2agK))))
                                                                             (g$syntax-dispatch$7651$1l2agK
                                                                               g$t$8571$1l2agK
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8568$1l2agK))))
                                                                   (g$syntax-dispatch$7651$1l2agK
                                                                     g$t$8568$1l2agK
                                                                     '(any)))))
                                                               g$t$8564$1l2agK))))
                                                         (g$syntax-dispatch$7651$1l2agK
                                                           g$t$8564$1l2agK
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8560$1l2agK))))
                                               (g$syntax-dispatch$7651$1l2agK
                                                 g$t$8560$1l2agK
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8541$1l2agK))))))
                            g$f$8540$1l2agK)
                          g$cls$8538$1l2agK
                          g$cls*$8539$1l2agK))))
                    g$ls/false$8537$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8536$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8536$1l2agK
               '(_ any . each-any)))))
         g$stx$8535$1l2agK))))
   (g$do-include$7638$1l2agK
     g$do-include$11084$1l2agK
     (case-lambda
       ((g$stx$8577$1l2agK g$id$8578$1l2agK g$filename$8579$1l2agK)
        ((case-lambda
           ((g$filename$8580$1l2agK)
            (begin
              (if (not (if (string? g$filename$8580$1l2agK)
                         (begin '#f (g$id?$7373$1l2agK g$id$8578$1l2agK))
                         '#f))
                (g$syntax-violation$7762$1l2agK
                  '#f
                  '"invalid syntax"
                  g$stx$8577$1l2agK)
                (void))
              (cons
                (g$bless$7614$1l2agK 'begin)
                (g$with-input-from-file$6386$1l2agK
                  g$filename$8580$1l2agK
                  (case-lambda
                    (()
                     ((letrec ((g$f$8581$1l2agK
                                 (case-lambda
                                   ((g$ls$8582$1l2agK)
                                    ((case-lambda
                                       ((g$x$8583$1l2agK)
                                        (if (eof-object? g$x$8583$1l2agK)
                                          (reverse g$ls$8582$1l2agK)
                                          (g$f$8581$1l2agK
                                            (cons
                                              (g$datum->stx$7356$1l2agK
                                                g$id$8578$1l2agK
                                                g$x$8583$1l2agK)
                                              g$ls$8582$1l2agK)))))
                                     (read-annotated))))))
                        g$f$8581$1l2agK)
                      '()))))))))
         (g$stx->datum$7384$1l2agK g$filename$8579$1l2agK)))))
   (g$include-macro$7639$1l2agK
     g$include-macro$11085$1l2agK
     (case-lambda
       ((g$e$8584$1l2agK)
        ((case-lambda
           ((g$t$8585$1l2agK)
            ((case-lambda
               ((g$ls/false$8586$1l2agK)
                (if g$ls/false$8586$1l2agK
                  (apply
                    (case-lambda
                      ((g$id$8587$1l2agK g$filename$8588$1l2agK)
                       (g$do-include$7638$1l2agK
                         g$e$8584$1l2agK
                         g$id$8587$1l2agK
                         g$filename$8588$1l2agK)))
                    g$ls/false$8586$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8585$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8585$1l2agK '(any any)))))
         g$e$8584$1l2agK))))
   (g$include-into-macro$7640$1l2agK
     g$include-into-macro$11086$1l2agK
     (case-lambda
       ((g$e$8589$1l2agK)
        ((case-lambda
           ((g$t$8590$1l2agK)
            ((case-lambda
               ((g$ls/false$8591$1l2agK)
                (if g$ls/false$8591$1l2agK
                  (apply
                    (case-lambda
                      ((g$id$8592$1l2agK g$filename$8593$1l2agK)
                       (g$do-include$7638$1l2agK
                         g$e$8589$1l2agK
                         g$id$8592$1l2agK
                         g$filename$8593$1l2agK)))
                    g$ls/false$8591$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8590$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$8590$1l2agK '(_ any any)))))
         g$e$8589$1l2agK))))
   (g$syntax-rules-macro$7641$1l2agK
     g$syntax-rules-macro$11087$1l2agK
     (case-lambda
       ((g$e$8594$1l2agK)
        ((case-lambda
           ((g$t$8595$1l2agK)
            ((case-lambda
               ((g$ls/false$8596$1l2agK)
                (if g$ls/false$8596$1l2agK
                  (apply
                    (case-lambda
                      ((g$lits$8597$1l2agK
                         g$pat*$8598$1l2agK
                         g$tmp*$8599$1l2agK)
                       (begin
                         (g$verify-literals$7654$1l2agK
                           g$lits$8597$1l2agK
                           g$e$8594$1l2agK)
                         (g$bless$7614$1l2agK
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8597$1l2agK
                                   (map (case-lambda
                                          ((g$pat$8600$1l2agK g$tmp$8601$1l2agK)
                                           ((case-lambda
                                              ((g$t$8602$1l2agK)
                                               ((case-lambda
                                                  ((g$ls/false$8603$1l2agK)
                                                   (if g$ls/false$8603$1l2agK
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8604$1l2agK)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8604$1l2agK)
                                                            (list
                                                              'syntax
                                                              g$tmp$8601$1l2agK))))
                                                       g$ls/false$8603$1l2agK)
                                                     ((case-lambda
                                                        ((g$t$8605$1l2agK)
                                                         ((case-lambda
                                                            ((g$ls/false$8606$1l2agK)
                                                             (if g$ls/false$8606$1l2agK
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7762$1l2agK
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8594$1l2agK
                                                                      g$pat$8600$1l2agK)))
                                                                 g$ls/false$8606$1l2agK)
                                                               (g$syntax-violation$7762$1l2agK
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8605$1l2agK))))
                                                          (g$syntax-dispatch$7651$1l2agK
                                                            g$t$8605$1l2agK
                                                            '_))))
                                                      g$t$8602$1l2agK))))
                                                (g$syntax-dispatch$7651$1l2agK
                                                  g$t$8602$1l2agK
                                                  '(_ . any)))))
                                            g$pat$8600$1l2agK)))
                                        g$pat*$8598$1l2agK
                                        g$tmp*$8599$1l2agK)))))))))
                    g$ls/false$8596$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$8595$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$8595$1l2agK
               '(_ each-any . #(each (any any)))))))
         g$e$8594$1l2agK))))
   (g$quasiquote-macro$7642$1l2agK
     g$quasiquote-macro$11088$1l2agK
     ((case-lambda
        (()
         (letrec* ((g$datum$8607$1l2agK
                     (case-lambda
                       ((g$x$8738$1l2agK)
                        (list
                          (g$scheme-stx$7594$1l2agK 'quote)
                          (g$mkstx$7361$1l2agK g$x$8738$1l2agK '() '() '())))))
                   (g$quasicons*$8623$1l2agK
                     (case-lambda
                       ((g$x$8734$1l2agK g$y$8735$1l2agK)
                        ((letrec ((g$f$8736$1l2agK
                                    (case-lambda
                                      ((g$x$8737$1l2agK)
                                       (if (null? g$x$8737$1l2agK)
                                         g$y$8735$1l2agK
                                         (g$quasicons$8624$1l2agK
                                           (car g$x$8737$1l2agK)
                                           (g$f$8736$1l2agK
                                             (cdr g$x$8737$1l2agK))))))))
                           g$f$8736$1l2agK)
                         g$x$8734$1l2agK))))
                   (g$quasicons$8624$1l2agK
                     (case-lambda
                       ((g$x$8715$1l2agK g$y$8716$1l2agK)
                        ((case-lambda
                           ((g$t$8717$1l2agK)
                            ((case-lambda
                               ((g$ls/false$8718$1l2agK)
                                (if g$ls/false$8718$1l2agK
                                  (apply
                                    (case-lambda
                                      ((g$dy$8719$1l2agK)
                                       ((case-lambda
                                          ((g$t$8720$1l2agK)
                                           ((case-lambda
                                              ((g$ls/false$8721$1l2agK)
                                               (if g$ls/false$8721$1l2agK
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8722$1l2agK)
                                                      (list
                                                        (g$scheme-stx$7594$1l2agK
                                                          'quote)
                                                        (cons
                                                          g$dx$8722$1l2agK
                                                          g$dy$8719$1l2agK))))
                                                   g$ls/false$8721$1l2agK)
                                                 ((case-lambda
                                                    ((g$t$8723$1l2agK)
                                                     ((case-lambda
                                                        ((g$ls/false$8724$1l2agK)
                                                         (if g$ls/false$8724$1l2agK
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8725$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8726$1l2agK)
                                                                        (if g$ls/false$8726$1l2agK
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7594$1l2agK
                                                                                   'list)
                                                                                 g$x$8715$1l2agK)))
                                                                            g$ls/false$8726$1l2agK)
                                                                          ((case-lambda
                                                                             ((g$t$8727$1l2agK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8728$1l2agK)
                                                                                  (if g$ls/false$8728$1l2agK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7594$1l2agK
                                                                                             'cons)
                                                                                           g$x$8715$1l2agK
                                                                                           g$y$8716$1l2agK)))
                                                                                      g$ls/false$8728$1l2agK)
                                                                                    (g$syntax-violation$7762$1l2agK
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8727$1l2agK))))
                                                                               (g$syntax-dispatch$7651$1l2agK
                                                                                 g$t$8727$1l2agK
                                                                                 '_))))
                                                                           g$t$8725$1l2agK))))
                                                                     (g$syntax-dispatch$7651$1l2agK
                                                                       g$t$8725$1l2agK
                                                                       '()))))
                                                                 g$dy$8719$1l2agK)))
                                                             g$ls/false$8724$1l2agK)
                                                           (g$syntax-violation$7762$1l2agK
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8723$1l2agK))))
                                                      (g$syntax-dispatch$7651$1l2agK
                                                        g$t$8723$1l2agK
                                                        '_))))
                                                  g$t$8720$1l2agK))))
                                            (g$syntax-dispatch$7651$1l2agK
                                              g$t$8720$1l2agK
                                              '(#(scheme-id quote) any)))))
                                        g$x$8715$1l2agK)))
                                    g$ls/false$8718$1l2agK)
                                  ((case-lambda
                                     ((g$t$8729$1l2agK)
                                      ((case-lambda
                                         ((g$ls/false$8730$1l2agK)
                                          (if g$ls/false$8730$1l2agK
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8731$1l2agK)
                                                 (g$cons*$5505$1l2agK
                                                   (g$scheme-stx$7594$1l2agK
                                                     'list)
                                                   g$x$8715$1l2agK
                                                   g$stuff$8731$1l2agK)))
                                              g$ls/false$8730$1l2agK)
                                            ((case-lambda
                                               ((g$t$8732$1l2agK)
                                                ((case-lambda
                                                   ((g$ls/false$8733$1l2agK)
                                                    (if g$ls/false$8733$1l2agK
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7594$1l2agK
                                                               'cons)
                                                             g$x$8715$1l2agK
                                                             g$y$8716$1l2agK)))
                                                        g$ls/false$8733$1l2agK)
                                                      (g$syntax-violation$7762$1l2agK
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8732$1l2agK))))
                                                 (g$syntax-dispatch$7651$1l2agK
                                                   g$t$8732$1l2agK
                                                   '_))))
                                             g$t$8729$1l2agK))))
                                       (g$syntax-dispatch$7651$1l2agK
                                         g$t$8729$1l2agK
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8717$1l2agK))))
                             (g$syntax-dispatch$7651$1l2agK
                               g$t$8717$1l2agK
                               '(#(scheme-id quote) any)))))
                         g$y$8716$1l2agK))))
                   (g$quasiappend$8625$1l2agK
                     (case-lambda
                       ((g$x$8702$1l2agK g$y$8703$1l2agK)
                        ((case-lambda
                           ((g$ls$8704$1l2agK)
                            (if (null? g$ls$8704$1l2agK)
                              (list (g$scheme-stx$7594$1l2agK 'quote) '())
                              (if (null? (cdr g$ls$8704$1l2agK))
                                (car g$ls$8704$1l2agK)
                                (g$cons*$5505$1l2agK
                                  (g$scheme-stx$7594$1l2agK 'append)
                                  g$ls$8704$1l2agK)))))
                         ((letrec ((g$f$8705$1l2agK
                                     (case-lambda
                                       ((g$x$8706$1l2agK)
                                        (if (null? g$x$8706$1l2agK)
                                          ((case-lambda
                                             ((g$t$8707$1l2agK)
                                              ((case-lambda
                                                 ((g$ls/false$8708$1l2agK)
                                                  (if g$ls/false$8708$1l2agK
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8708$1l2agK)
                                                    ((case-lambda
                                                       ((g$t$8709$1l2agK)
                                                        ((case-lambda
                                                           ((g$ls/false$8710$1l2agK)
                                                            (if g$ls/false$8710$1l2agK
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8703$1l2agK)))
                                                                g$ls/false$8710$1l2agK)
                                                              (g$syntax-violation$7762$1l2agK
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8709$1l2agK))))
                                                         (g$syntax-dispatch$7651$1l2agK
                                                           g$t$8709$1l2agK
                                                           '_))))
                                                     g$t$8707$1l2agK))))
                                               (g$syntax-dispatch$7651$1l2agK
                                                 g$t$8707$1l2agK
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8703$1l2agK)
                                          ((case-lambda
                                             ((g$t$8711$1l2agK)
                                              ((case-lambda
                                                 ((g$ls/false$8712$1l2agK)
                                                  (if g$ls/false$8712$1l2agK
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8705$1l2agK
                                                           (cdr g$x$8706$1l2agK))))
                                                      g$ls/false$8712$1l2agK)
                                                    ((case-lambda
                                                       ((g$t$8713$1l2agK)
                                                        ((case-lambda
                                                           ((g$ls/false$8714$1l2agK)
                                                            (if g$ls/false$8714$1l2agK
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8706$1l2agK)
                                                                     (g$f$8705$1l2agK
                                                                       (cdr g$x$8706$1l2agK)))))
                                                                g$ls/false$8714$1l2agK)
                                                              (g$syntax-violation$7762$1l2agK
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8713$1l2agK))))
                                                         (g$syntax-dispatch$7651$1l2agK
                                                           g$t$8713$1l2agK
                                                           '_))))
                                                     g$t$8711$1l2agK))))
                                               (g$syntax-dispatch$7651$1l2agK
                                                 g$t$8711$1l2agK
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8706$1l2agK)))))))
                            g$f$8705$1l2agK)
                          g$x$8702$1l2agK)))))
                   (g$quasivector$8626$1l2agK
                     (case-lambda
                       ((g$x$8677$1l2agK)
                        ((case-lambda
                           ((g$pat-x$8678$1l2agK)
                            ((case-lambda
                               ((g$t$8679$1l2agK)
                                ((case-lambda
                                   ((g$ls/false$8680$1l2agK)
                                    (if g$ls/false$8680$1l2agK
                                      (apply
                                        (case-lambda
                                          ((g$x*$8681$1l2agK)
                                           (list
                                             (g$scheme-stx$7594$1l2agK 'quote)
                                             (list->vector g$x*$8681$1l2agK))))
                                        g$ls/false$8680$1l2agK)
                                      ((case-lambda
                                         ((g$t$8682$1l2agK)
                                          ((case-lambda
                                             ((g$ls/false$8683$1l2agK)
                                              (if g$ls/false$8683$1l2agK
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8684$1l2agK
                                                                 (case-lambda
                                                                   ((g$x$8685$1l2agK
                                                                      g$k$8686$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$t$8687$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8688$1l2agK)
                                                                            (if g$ls/false$8688$1l2agK
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8689$1l2agK)
                                                                                   (g$k$8686$1l2agK
                                                                                     (map (case-lambda
                                                                                            ((g$x$8690$1l2agK)
                                                                                             (list
                                                                                               (g$scheme-stx$7594$1l2agK
                                                                                                 'quote)
                                                                                               g$x$8690$1l2agK)))
                                                                                          g$x*$8689$1l2agK))))
                                                                                g$ls/false$8688$1l2agK)
                                                                              ((case-lambda
                                                                                 ((g$t$8691$1l2agK)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8692$1l2agK)
                                                                                      (if g$ls/false$8692$1l2agK
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8693$1l2agK)
                                                                                             (g$k$8686$1l2agK
                                                                                               g$x*$8693$1l2agK)))
                                                                                          g$ls/false$8692$1l2agK)
                                                                                        ((case-lambda
                                                                                           ((g$t$8694$1l2agK)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8695$1l2agK)
                                                                                                (if g$ls/false$8695$1l2agK
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8696$1l2agK
                                                                                                         g$y$8697$1l2agK)
                                                                                                       (g$f$8684$1l2agK
                                                                                                         g$y$8697$1l2agK
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8698$1l2agK)
                                                                                                            (g$k$8686$1l2agK
                                                                                                              (cons
                                                                                                                g$x$8696$1l2agK
                                                                                                                g$ls$8698$1l2agK)))))))
                                                                                                    g$ls/false$8695$1l2agK)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8699$1l2agK)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8700$1l2agK)
                                                                                                          (if g$ls/false$8700$1l2agK
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7594$1l2agK
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8678$1l2agK)))
                                                                                                              g$ls/false$8700$1l2agK)
                                                                                                            (g$syntax-violation$7762$1l2agK
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8699$1l2agK))))
                                                                                                       (g$syntax-dispatch$7651$1l2agK
                                                                                                         g$t$8699$1l2agK
                                                                                                         '_))))
                                                                                                   g$t$8694$1l2agK))))
                                                                                             (g$syntax-dispatch$7651$1l2agK
                                                                                               g$t$8694$1l2agK
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8691$1l2agK))))
                                                                                   (g$syntax-dispatch$7651$1l2agK
                                                                                     g$t$8691$1l2agK
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8687$1l2agK))))
                                                                         (g$syntax-dispatch$7651$1l2agK
                                                                           g$t$8687$1l2agK
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8685$1l2agK)))))
                                                        g$f$8684$1l2agK)
                                                      g$x$8677$1l2agK
                                                      (case-lambda
                                                        ((g$ls$8701$1l2agK)
                                                         (g$cons*$5505$1l2agK
                                                           (g$scheme-stx$7594$1l2agK
                                                             'vector)
                                                           g$ls$8701$1l2agK))))))
                                                  g$ls/false$8683$1l2agK)
                                                (g$syntax-violation$7762$1l2agK
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8682$1l2agK))))
                                           (g$syntax-dispatch$7651$1l2agK
                                             g$t$8682$1l2agK
                                             '_))))
                                       g$t$8679$1l2agK))))
                                 (g$syntax-dispatch$7651$1l2agK
                                   g$t$8679$1l2agK
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8678$1l2agK)))
                         g$x$8677$1l2agK))))
                   (g$vquasi$8627$1l2agK
                     (case-lambda
                       ((g$p$8660$1l2agK g$lev$8661$1l2agK)
                        ((case-lambda
                           ((g$t$8662$1l2agK)
                            ((case-lambda
                               ((g$ls/false$8663$1l2agK)
                                (if g$ls/false$8663$1l2agK
                                  (apply
                                    (case-lambda
                                      ((g$p$8664$1l2agK g$q$8665$1l2agK)
                                       ((case-lambda
                                          ((g$t$8666$1l2agK)
                                           ((case-lambda
                                              ((g$ls/false$8667$1l2agK)
                                               (if g$ls/false$8667$1l2agK
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8668$1l2agK)
                                                      (if (= g$lev$8661$1l2agK
                                                             '0)
                                                        (g$quasicons*$8623$1l2agK
                                                          g$p$8668$1l2agK
                                                          (g$vquasi$8627$1l2agK
                                                            g$q$8665$1l2agK
                                                            g$lev$8661$1l2agK))
                                                        (g$quasicons$8624$1l2agK
                                                          (g$quasicons$8624$1l2agK
                                                            (g$datum$8607$1l2agK
                                                              'unquote)
                                                            (g$quasi$8628$1l2agK
                                                              g$p$8668$1l2agK
                                                              (- g$lev$8661$1l2agK
                                                                 '1)))
                                                          (g$vquasi$8627$1l2agK
                                                            g$q$8665$1l2agK
                                                            g$lev$8661$1l2agK)))))
                                                   g$ls/false$8667$1l2agK)
                                                 ((case-lambda
                                                    ((g$t$8669$1l2agK)
                                                     ((case-lambda
                                                        ((g$ls/false$8670$1l2agK)
                                                         (if g$ls/false$8670$1l2agK
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8671$1l2agK)
                                                                (if (= g$lev$8661$1l2agK
                                                                       '0)
                                                                  (g$quasiappend$8625$1l2agK
                                                                    g$p$8671$1l2agK
                                                                    (g$vquasi$8627$1l2agK
                                                                      g$q$8665$1l2agK
                                                                      g$lev$8661$1l2agK))
                                                                  (g$quasicons$8624$1l2agK
                                                                    (g$quasicons$8624$1l2agK
                                                                      (g$datum$8607$1l2agK
                                                                        'unquote-splicing)
                                                                      (g$quasi$8628$1l2agK
                                                                        g$p$8671$1l2agK
                                                                        (- g$lev$8661$1l2agK
                                                                           '1)))
                                                                    (g$vquasi$8627$1l2agK
                                                                      g$q$8665$1l2agK
                                                                      g$lev$8661$1l2agK)))))
                                                             g$ls/false$8670$1l2agK)
                                                           ((case-lambda
                                                              ((g$t$8672$1l2agK)
                                                               ((case-lambda
                                                                  ((g$ls/false$8673$1l2agK)
                                                                   (if g$ls/false$8673$1l2agK
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8674$1l2agK)
                                                                          (g$quasicons$8624$1l2agK
                                                                            (g$quasi$8628$1l2agK
                                                                              g$p$8674$1l2agK
                                                                              g$lev$8661$1l2agK)
                                                                            (g$vquasi$8627$1l2agK
                                                                              g$q$8665$1l2agK
                                                                              g$lev$8661$1l2agK))))
                                                                       g$ls/false$8673$1l2agK)
                                                                     (g$syntax-violation$7762$1l2agK
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8672$1l2agK))))
                                                                (g$syntax-dispatch$7651$1l2agK
                                                                  g$t$8672$1l2agK
                                                                  'any))))
                                                            g$t$8669$1l2agK))))
                                                      (g$syntax-dispatch$7651$1l2agK
                                                        g$t$8669$1l2agK
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8666$1l2agK))))
                                            (g$syntax-dispatch$7651$1l2agK
                                              g$t$8666$1l2agK
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8664$1l2agK)))
                                    g$ls/false$8663$1l2agK)
                                  ((case-lambda
                                     ((g$t$8675$1l2agK)
                                      ((case-lambda
                                         ((g$ls/false$8676$1l2agK)
                                          (if g$ls/false$8676$1l2agK
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7594$1l2agK
                                                     'quote)
                                                   '())))
                                              g$ls/false$8676$1l2agK)
                                            (g$syntax-violation$7762$1l2agK
                                              '#f
                                              '"invalid syntax"
                                              g$t$8675$1l2agK))))
                                       (g$syntax-dispatch$7651$1l2agK
                                         g$t$8675$1l2agK
                                         '()))))
                                   g$t$8662$1l2agK))))
                             (g$syntax-dispatch$7651$1l2agK
                               g$t$8662$1l2agK
                               '(any . any)))))
                         g$p$8660$1l2agK))))
                   (g$quasi$8628$1l2agK
                     (case-lambda
                       ((g$p$8633$1l2agK g$lev$8634$1l2agK)
                        ((case-lambda
                           ((g$t$8635$1l2agK)
                            ((case-lambda
                               ((g$ls/false$8636$1l2agK)
                                (if g$ls/false$8636$1l2agK
                                  (apply
                                    (case-lambda
                                      ((g$p$8637$1l2agK)
                                       (if (= g$lev$8634$1l2agK '0)
                                         g$p$8637$1l2agK
                                         (g$quasicons$8624$1l2agK
                                           (g$datum$8607$1l2agK 'unquote)
                                           (g$quasi$8628$1l2agK
                                             (list g$p$8637$1l2agK)
                                             (- g$lev$8634$1l2agK '1))))))
                                    g$ls/false$8636$1l2agK)
                                  ((case-lambda
                                     ((g$t$8638$1l2agK)
                                      ((case-lambda
                                         ((g$ls/false$8639$1l2agK)
                                          (if g$ls/false$8639$1l2agK
                                            (apply
                                              (case-lambda
                                                ((g$p$8640$1l2agK
                                                   g$q$8641$1l2agK)
                                                 (if (= g$lev$8634$1l2agK '0)
                                                   (g$quasicons*$8623$1l2agK
                                                     g$p$8640$1l2agK
                                                     (g$quasi$8628$1l2agK
                                                       g$q$8641$1l2agK
                                                       g$lev$8634$1l2agK))
                                                   (g$quasicons$8624$1l2agK
                                                     (g$quasicons$8624$1l2agK
                                                       (g$datum$8607$1l2agK
                                                         'unquote)
                                                       (g$quasi$8628$1l2agK
                                                         g$p$8640$1l2agK
                                                         (- g$lev$8634$1l2agK
                                                            '1)))
                                                     (g$quasi$8628$1l2agK
                                                       g$q$8641$1l2agK
                                                       g$lev$8634$1l2agK)))))
                                              g$ls/false$8639$1l2agK)
                                            ((case-lambda
                                               ((g$t$8642$1l2agK)
                                                ((case-lambda
                                                   ((g$ls/false$8643$1l2agK)
                                                    (if g$ls/false$8643$1l2agK
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8644$1l2agK
                                                             g$q$8645$1l2agK)
                                                           (if (= g$lev$8634$1l2agK
                                                                  '0)
                                                             (g$quasiappend$8625$1l2agK
                                                               g$p$8644$1l2agK
                                                               (g$quasi$8628$1l2agK
                                                                 g$q$8645$1l2agK
                                                                 g$lev$8634$1l2agK))
                                                             (g$quasicons$8624$1l2agK
                                                               (g$quasicons$8624$1l2agK
                                                                 (g$datum$8607$1l2agK
                                                                   'unquote-splicing)
                                                                 (g$quasi$8628$1l2agK
                                                                   g$p$8644$1l2agK
                                                                   (- g$lev$8634$1l2agK
                                                                      '1)))
                                                               (g$quasi$8628$1l2agK
                                                                 g$q$8645$1l2agK
                                                                 g$lev$8634$1l2agK)))))
                                                        g$ls/false$8643$1l2agK)
                                                      ((case-lambda
                                                         ((g$t$8646$1l2agK)
                                                          ((case-lambda
                                                             ((g$ls/false$8647$1l2agK)
                                                              (if g$ls/false$8647$1l2agK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8648$1l2agK)
                                                                     (g$quasicons$8624$1l2agK
                                                                       (g$datum$8607$1l2agK
                                                                         'quasiquote)
                                                                       (g$quasi$8628$1l2agK
                                                                         (list
                                                                           g$p$8648$1l2agK)
                                                                         (+ g$lev$8634$1l2agK
                                                                            '1)))))
                                                                  g$ls/false$8647$1l2agK)
                                                                ((case-lambda
                                                                   ((g$t$8649$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8650$1l2agK)
                                                                        (if g$ls/false$8650$1l2agK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8651$1l2agK
                                                                                 g$q$8652$1l2agK)
                                                                               (g$quasicons$8624$1l2agK
                                                                                 (g$quasi$8628$1l2agK
                                                                                   g$p$8651$1l2agK
                                                                                   g$lev$8634$1l2agK)
                                                                                 (g$quasi$8628$1l2agK
                                                                                   g$q$8652$1l2agK
                                                                                   g$lev$8634$1l2agK))))
                                                                            g$ls/false$8650$1l2agK)
                                                                          ((case-lambda
                                                                             ((g$t$8653$1l2agK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8654$1l2agK)
                                                                                  (if (if g$ls/false$8654$1l2agK
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8655$1l2agK)
                                                                                               (not (g$stx?$7345$1l2agK
                                                                                                      g$x$8655$1l2agK))))
                                                                                            g$ls/false$8654$1l2agK))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8656$1l2agK)
                                                                                         (g$quasivector$8626$1l2agK
                                                                                           (g$vquasi$8627$1l2agK
                                                                                             g$x$8656$1l2agK
                                                                                             g$lev$8634$1l2agK))))
                                                                                      g$ls/false$8654$1l2agK)
                                                                                    ((case-lambda
                                                                                       ((g$t$8657$1l2agK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8658$1l2agK)
                                                                                            (if g$ls/false$8658$1l2agK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8659$1l2agK)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7594$1l2agK
                                                                                                       'quote)
                                                                                                     g$p$8659$1l2agK)))
                                                                                                g$ls/false$8658$1l2agK)
                                                                                              (g$syntax-violation$7762$1l2agK
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8657$1l2agK))))
                                                                                         (g$syntax-dispatch$7651$1l2agK
                                                                                           g$t$8657$1l2agK
                                                                                           'any))))
                                                                                     g$t$8653$1l2agK))))
                                                                               (g$syntax-dispatch$7651$1l2agK
                                                                                 g$t$8653$1l2agK
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8649$1l2agK))))
                                                                     (g$syntax-dispatch$7651$1l2agK
                                                                       g$t$8649$1l2agK
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8646$1l2agK))))
                                                           (g$syntax-dispatch$7651$1l2agK
                                                             g$t$8646$1l2agK
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8642$1l2agK))))
                                                 (g$syntax-dispatch$7651$1l2agK
                                                   g$t$8642$1l2agK
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8638$1l2agK))))
                                       (g$syntax-dispatch$7651$1l2agK
                                         g$t$8638$1l2agK
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8635$1l2agK))))
                             (g$syntax-dispatch$7651$1l2agK
                               g$t$8635$1l2agK
                               '(#(scheme-id unquote) any)))))
                         g$p$8633$1l2agK)))))
           (case-lambda
             ((g$x$8629$1l2agK)
              ((case-lambda
                 ((g$t$8630$1l2agK)
                  ((case-lambda
                     ((g$ls/false$8631$1l2agK)
                      (if g$ls/false$8631$1l2agK
                        (apply
                          (case-lambda
                            ((g$e$8632$1l2agK)
                             (g$quasi$8628$1l2agK g$e$8632$1l2agK '0)))
                          g$ls/false$8631$1l2agK)
                        (g$syntax-violation$7762$1l2agK
                          '#f
                          '"invalid syntax"
                          g$t$8630$1l2agK))))
                   (g$syntax-dispatch$7651$1l2agK g$t$8630$1l2agK '(_ any)))))
               g$x$8629$1l2agK))))))))
   (g$quasisyntax-macro$7643$1l2agK
     g$quasisyntax-macro$11089$1l2agK
     ((case-lambda
        (()
         (letrec* ((g$quasi$8739$1l2agK
                     (case-lambda
                       ((g$p$8753$1l2agK g$lev$8754$1l2agK)
                        ((case-lambda
                           ((g$t$8755$1l2agK)
                            ((case-lambda
                               ((g$ls/false$8756$1l2agK)
                                (if g$ls/false$8756$1l2agK
                                  (apply
                                    (case-lambda
                                      ((g$p$8757$1l2agK)
                                       (if (= g$lev$8754$1l2agK '0)
                                         ((case-lambda
                                            ((g$g$8758$1l2agK)
                                             (values
                                               (list g$g$8758$1l2agK)
                                               (list g$p$8757$1l2agK)
                                               g$g$8758$1l2agK)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8739$1l2agK
                                                g$p$8757$1l2agK
                                                (- g$lev$8754$1l2agK '1))))
                                           (case-lambda
                                             ((g$lhs*$8762$1l2agK
                                                g$rhs*$8763$1l2agK
                                                g$p$8764$1l2agK)
                                              ((case-lambda
                                                 ((g$p$8765$1l2agK
                                                    g$rhs*$8766$1l2agK
                                                    g$lhs*$8767$1l2agK)
                                                  (values
                                                    g$lhs*$8767$1l2agK
                                                    g$rhs*$8766$1l2agK
                                                    (list
                                                      'unsyntax
                                                      g$p$8765$1l2agK))))
                                               g$p$8764$1l2agK
                                               g$rhs*$8763$1l2agK
                                               g$lhs*$8762$1l2agK)))))))
                                    g$ls/false$8756$1l2agK)
                                  ((case-lambda
                                     ((g$t$8768$1l2agK)
                                      ((case-lambda
                                         ((g$ls/false$8769$1l2agK)
                                          (if (if g$ls/false$8769$1l2agK
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8754$1l2agK
                                                          '0)))
                                                    g$ls/false$8769$1l2agK))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7762$1l2agK
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8753$1l2agK)))
                                              g$ls/false$8769$1l2agK)
                                            ((case-lambda
                                               ((g$t$8770$1l2agK)
                                                ((case-lambda
                                                   ((g$ls/false$8771$1l2agK)
                                                    (if g$ls/false$8771$1l2agK
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$8772$1l2agK
                                                             g$q$8773$1l2agK)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8739$1l2agK
                                                                  g$q$8773$1l2agK
                                                                  g$lev$8754$1l2agK)))
                                                             (case-lambda
                                                               ((g$lhs*$8777$1l2agK
                                                                  g$rhs*$8778$1l2agK
                                                                  g$q$8779$1l2agK)
                                                                ((case-lambda
                                                                   ((g$q$8780$1l2agK
                                                                      g$rhs*$8781$1l2agK
                                                                      g$lhs*$8782$1l2agK)
                                                                    (if (= g$lev$8754$1l2agK
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$8783$1l2agK)
                                                                          (values
                                                                            (append
                                                                              g$g*$8783$1l2agK
                                                                              g$lhs*$8782$1l2agK)
                                                                            (append
                                                                              g$p*$8772$1l2agK
                                                                              g$rhs*$8781$1l2agK)
                                                                            (append
                                                                              g$g*$8783$1l2agK
                                                                              g$q$8780$1l2agK))))
                                                                       (map (case-lambda
                                                                              ((g$x$8784$1l2agK)
                                                                               (gensym)))
                                                                            g$p*$8772$1l2agK))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8739$1l2agK
                                                                             g$p*$8772$1l2agK
                                                                             (- g$lev$8754$1l2agK
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8788$1l2agK
                                                                             g$rhs2*$8789$1l2agK
                                                                             g$p*$8790$1l2agK)
                                                                           ((case-lambda
                                                                              ((g$p*$8791$1l2agK
                                                                                 g$rhs2*$8792$1l2agK
                                                                                 g$lhs2*$8793$1l2agK)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8793$1l2agK
                                                                                   g$lhs*$8782$1l2agK)
                                                                                 (append
                                                                                   g$rhs2*$8792$1l2agK
                                                                                   g$rhs*$8781$1l2agK)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$8791$1l2agK)
                                                                                   g$q$8780$1l2agK))))
                                                                            g$p*$8790$1l2agK
                                                                            g$rhs2*$8789$1l2agK
                                                                            g$lhs2*$8788$1l2agK)))))))
                                                                 g$q$8779$1l2agK
                                                                 g$rhs*$8778$1l2agK
                                                                 g$lhs*$8777$1l2agK))))))
                                                        g$ls/false$8771$1l2agK)
                                                      ((case-lambda
                                                         ((g$t$8794$1l2agK)
                                                          ((case-lambda
                                                             ((g$ls/false$8795$1l2agK)
                                                              (if g$ls/false$8795$1l2agK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$8796$1l2agK
                                                                       g$q$8797$1l2agK)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$8739$1l2agK
                                                                            g$q$8797$1l2agK
                                                                            g$lev$8754$1l2agK)))
                                                                       (case-lambda
                                                                         ((g$lhs*$8801$1l2agK
                                                                            g$rhs*$8802$1l2agK
                                                                            g$q$8803$1l2agK)
                                                                          ((case-lambda
                                                                             ((g$q$8804$1l2agK
                                                                                g$rhs*$8805$1l2agK
                                                                                g$lhs*$8806$1l2agK)
                                                                              (if (= g$lev$8754$1l2agK
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$8807$1l2agK)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$8808$1l2agK)
                                                                                                (cons
                                                                                                  g$g$8808$1l2agK
                                                                                                  '(...))))
                                                                                             g$g*$8807$1l2agK)
                                                                                        g$lhs*$8806$1l2agK)
                                                                                      (append
                                                                                        g$p*$8796$1l2agK
                                                                                        g$rhs*$8805$1l2agK)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$8809$1l2agK)
                                                                                                  (cons
                                                                                                    g$g$8809$1l2agK
                                                                                                    '(...))))
                                                                                               g$g*$8807$1l2agK))
                                                                                        g$q$8804$1l2agK))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$8810$1l2agK)
                                                                                         (gensym)))
                                                                                      g$p*$8796$1l2agK))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$8739$1l2agK
                                                                                       g$p*$8796$1l2agK
                                                                                       (- g$lev$8754$1l2agK
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$8814$1l2agK
                                                                                       g$rhs2*$8815$1l2agK
                                                                                       g$p*$8816$1l2agK)
                                                                                     ((case-lambda
                                                                                        ((g$p*$8817$1l2agK
                                                                                           g$rhs2*$8818$1l2agK
                                                                                           g$lhs2*$8819$1l2agK)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$8819$1l2agK
                                                                                             g$lhs*$8806$1l2agK)
                                                                                           (append
                                                                                             g$rhs2*$8818$1l2agK
                                                                                             g$rhs*$8805$1l2agK)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$8817$1l2agK)
                                                                                             g$q$8804$1l2agK))))
                                                                                      g$p*$8816$1l2agK
                                                                                      g$rhs2*$8815$1l2agK
                                                                                      g$lhs2*$8814$1l2agK)))))))
                                                                           g$q$8803$1l2agK
                                                                           g$rhs*$8802$1l2agK
                                                                           g$lhs*$8801$1l2agK))))))
                                                                  g$ls/false$8795$1l2agK)
                                                                ((case-lambda
                                                                   ((g$t$8820$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8821$1l2agK)
                                                                        (if (if g$ls/false$8821$1l2agK
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$8754$1l2agK
                                                                                        '0)))
                                                                                  g$ls/false$8821$1l2agK))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$7762$1l2agK
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$8753$1l2agK)))
                                                                            g$ls/false$8821$1l2agK)
                                                                          ((case-lambda
                                                                             ((g$t$8822$1l2agK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8823$1l2agK)
                                                                                  (if g$ls/false$8823$1l2agK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8824$1l2agK)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8739$1l2agK
                                                                                                g$p$8824$1l2agK
                                                                                                (+ g$lev$8754$1l2agK
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8828$1l2agK
                                                                                                g$rhs*$8829$1l2agK
                                                                                                g$p$8830$1l2agK)
                                                                                              ((case-lambda
                                                                                                 ((g$p$8831$1l2agK
                                                                                                    g$rhs*$8832$1l2agK
                                                                                                    g$lhs*$8833$1l2agK)
                                                                                                  (values
                                                                                                    g$lhs*$8833$1l2agK
                                                                                                    g$rhs*$8832$1l2agK
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$8831$1l2agK))))
                                                                                               g$p$8830$1l2agK
                                                                                               g$rhs*$8829$1l2agK
                                                                                               g$lhs*$8828$1l2agK))))))
                                                                                      g$ls/false$8823$1l2agK)
                                                                                    ((case-lambda
                                                                                       ((g$t$8834$1l2agK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8835$1l2agK)
                                                                                            (if g$ls/false$8835$1l2agK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8836$1l2agK
                                                                                                     g$q$8837$1l2agK)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$8739$1l2agK
                                                                                                          g$p$8836$1l2agK
                                                                                                          g$lev$8754$1l2agK)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8844$1l2agK
                                                                                                          g$rhs*$8845$1l2agK
                                                                                                          g$p$8846$1l2agK)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$8739$1l2agK
                                                                                                               g$q$8837$1l2agK
                                                                                                               g$lev$8754$1l2agK)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$8847$1l2agK
                                                                                                               g$rhs2*$8848$1l2agK
                                                                                                               g$q$8849$1l2agK)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$8850$1l2agK
                                                                                                                   g$rhs2*$8851$1l2agK
                                                                                                                   g$lhs2*$8852$1l2agK
                                                                                                                   g$p$8853$1l2agK
                                                                                                                   g$rhs*$8854$1l2agK
                                                                                                                   g$lhs*$8855$1l2agK)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$8852$1l2agK
                                                                                                                     g$lhs*$8855$1l2agK)
                                                                                                                   (append
                                                                                                                     g$rhs2*$8851$1l2agK
                                                                                                                     g$rhs*$8854$1l2agK)
                                                                                                                   (cons
                                                                                                                     g$p$8853$1l2agK
                                                                                                                     g$q$8850$1l2agK))))
                                                                                                              g$q$8849$1l2agK
                                                                                                              g$rhs2*$8848$1l2agK
                                                                                                              g$lhs2*$8847$1l2agK
                                                                                                              g$p$8846$1l2agK
                                                                                                              g$rhs*$8845$1l2agK
                                                                                                              g$lhs*$8844$1l2agK)))))))))
                                                                                                g$ls/false$8835$1l2agK)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8856$1l2agK)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8857$1l2agK)
                                                                                                      (if g$ls/false$8857$1l2agK
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$8858$1l2agK)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$8739$1l2agK
                                                                                                                    g$x*$8858$1l2agK
                                                                                                                    g$lev$8754$1l2agK)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$8862$1l2agK
                                                                                                                    g$rhs*$8863$1l2agK
                                                                                                                    g$x*$8864$1l2agK)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$8865$1l2agK
                                                                                                                        g$rhs*$8866$1l2agK
                                                                                                                        g$lhs*$8867$1l2agK)
                                                                                                                      (values
                                                                                                                        g$lhs*$8867$1l2agK
                                                                                                                        g$rhs*$8866$1l2agK
                                                                                                                        (list->vector
                                                                                                                          g$x*$8865$1l2agK))))
                                                                                                                   g$x*$8864$1l2agK
                                                                                                                   g$rhs*$8863$1l2agK
                                                                                                                   g$lhs*$8862$1l2agK))))))
                                                                                                          g$ls/false$8857$1l2agK)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$8868$1l2agK)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$8869$1l2agK)
                                                                                                                (if g$ls/false$8869$1l2agK
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$8753$1l2agK)))
                                                                                                                    g$ls/false$8869$1l2agK)
                                                                                                                  (g$syntax-violation$7762$1l2agK
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$8868$1l2agK))))
                                                                                                             (g$syntax-dispatch$7651$1l2agK
                                                                                                               g$t$8868$1l2agK
                                                                                                               '_))))
                                                                                                         g$t$8856$1l2agK))))
                                                                                                   (g$syntax-dispatch$7651$1l2agK
                                                                                                     g$t$8856$1l2agK
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$8834$1l2agK))))
                                                                                         (g$syntax-dispatch$7651$1l2agK
                                                                                           g$t$8834$1l2agK
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$8822$1l2agK))))
                                                                               (g$syntax-dispatch$7651$1l2agK
                                                                                 g$t$8822$1l2agK
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$8820$1l2agK))))
                                                                     (g$syntax-dispatch$7651$1l2agK
                                                                       g$t$8820$1l2agK
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$8794$1l2agK))))
                                                           (g$syntax-dispatch$7651$1l2agK
                                                             g$t$8794$1l2agK
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$8770$1l2agK))))
                                                 (g$syntax-dispatch$7651$1l2agK
                                                   g$t$8770$1l2agK
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8768$1l2agK))))
                                       (g$syntax-dispatch$7651$1l2agK
                                         g$t$8768$1l2agK
                                         '#(scheme-id unsyntax)))))
                                   g$t$8755$1l2agK))))
                             (g$syntax-dispatch$7651$1l2agK
                               g$t$8755$1l2agK
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8753$1l2agK)))))
           (case-lambda
             ((g$x$8740$1l2agK)
              ((case-lambda
                 ((g$t$8741$1l2agK)
                  ((case-lambda
                     ((g$ls/false$8742$1l2agK)
                      (if g$ls/false$8742$1l2agK
                        (apply
                          (case-lambda
                            ((g$e$8743$1l2agK)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8739$1l2agK g$e$8743$1l2agK '0)))
                               (case-lambda
                                 ((g$lhs*$8747$1l2agK
                                    g$rhs*$8748$1l2agK
                                    g$v$8749$1l2agK)
                                  ((case-lambda
                                     ((g$v$8750$1l2agK
                                        g$rhs*$8751$1l2agK
                                        g$lhs*$8752$1l2agK)
                                      (g$bless$7614$1l2agK
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8751$1l2agK)
                                          '()
                                          (list
                                            g$lhs*$8752$1l2agK
                                            (list 'syntax g$v$8750$1l2agK))))))
                                   g$v$8749$1l2agK
                                   g$rhs*$8748$1l2agK
                                   g$lhs*$8747$1l2agK))))))
                          g$ls/false$8742$1l2agK)
                        (g$syntax-violation$7762$1l2agK
                          '#f
                          '"invalid syntax"
                          g$t$8741$1l2agK))))
                   (g$syntax-dispatch$7651$1l2agK g$t$8741$1l2agK '(_ any)))))
               g$x$8740$1l2agK))))))))
   (g$define-struct-macro$7644$1l2agK
     g$define-struct-macro$11090$1l2agK
     (case-lambda
       ((g$stx$8870$1l2agK)
        (g$syntax-violation$7762$1l2agK
          '#f
          '"define-struct not supported"
          g$stx$8870$1l2agK))))
   (g$define-record-type-macro$7645$1l2agK
     g$define-record-type-macro$11091$1l2agK
     (case-lambda
       ((g$x$8871$1l2agK)
        (letrec* ((g$id$8872$1l2agK
                    (case-lambda
                      ((g$ctxt$9124$1l2agK . g$str*$9125$1l2agK)
                       (g$datum->syntax$7764$1l2agK
                         g$ctxt$9124$1l2agK
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9126$1l2agK)
                                     (if (symbol? g$x$9126$1l2agK)
                                       (symbol->string g$x$9126$1l2agK)
                                       (if (string? g$x$9126$1l2agK)
                                         g$x$9126$1l2agK
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9125$1l2agK)))))))
                  (g$get-record-name$8873$1l2agK
                    (case-lambda
                      ((g$spec$9115$1l2agK)
                       ((case-lambda
                          ((g$t$9116$1l2agK)
                           ((case-lambda
                              ((g$ls/false$9117$1l2agK)
                               (if g$ls/false$9117$1l2agK
                                 (apply
                                   (case-lambda
                                     ((g$foo$9118$1l2agK
                                        g$make-foo$9119$1l2agK
                                        g$foo?$9120$1l2agK)
                                      g$foo$9118$1l2agK))
                                   g$ls/false$9117$1l2agK)
                                 ((case-lambda
                                    ((g$t$9121$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$9122$1l2agK)
                                         (if g$ls/false$9122$1l2agK
                                           (apply
                                             (case-lambda
                                               ((g$foo$9123$1l2agK)
                                                g$foo$9123$1l2agK))
                                             g$ls/false$9122$1l2agK)
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"invalid syntax"
                                             g$t$9121$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$9121$1l2agK
                                        'any))))
                                  g$t$9116$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$9116$1l2agK
                              '(any any any)))))
                        g$spec$9115$1l2agK))))
                  (g$get-record-constructor-name$8874$1l2agK
                    (case-lambda
                      ((g$spec$9105$1l2agK)
                       ((case-lambda
                          ((g$t$9106$1l2agK)
                           ((case-lambda
                              ((g$ls/false$9107$1l2agK)
                               (if g$ls/false$9107$1l2agK
                                 (apply
                                   (case-lambda
                                     ((g$foo$9108$1l2agK
                                        g$make-foo$9109$1l2agK
                                        g$foo?$9110$1l2agK)
                                      g$make-foo$9109$1l2agK))
                                   g$ls/false$9107$1l2agK)
                                 ((case-lambda
                                    ((g$t$9111$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$9112$1l2agK)
                                         (if (if g$ls/false$9112$1l2agK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9113$1l2agK)
                                                      (g$id?$7373$1l2agK
                                                        g$foo$9113$1l2agK)))
                                                   g$ls/false$9112$1l2agK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9114$1l2agK)
                                                (g$id$8872$1l2agK
                                                  g$foo$9114$1l2agK
                                                  '"make-"
                                                  (g$stx->datum$7384$1l2agK
                                                    g$foo$9114$1l2agK))))
                                             g$ls/false$9112$1l2agK)
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"invalid syntax"
                                             g$t$9111$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$9111$1l2agK
                                        'any))))
                                  g$t$9106$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$9106$1l2agK
                              '(any any any)))))
                        g$spec$9105$1l2agK))))
                  (g$get-record-predicate-name$8875$1l2agK
                    (case-lambda
                      ((g$spec$9095$1l2agK)
                       ((case-lambda
                          ((g$t$9096$1l2agK)
                           ((case-lambda
                              ((g$ls/false$9097$1l2agK)
                               (if g$ls/false$9097$1l2agK
                                 (apply
                                   (case-lambda
                                     ((g$foo$9098$1l2agK
                                        g$make-foo$9099$1l2agK
                                        g$foo?$9100$1l2agK)
                                      g$foo?$9100$1l2agK))
                                   g$ls/false$9097$1l2agK)
                                 ((case-lambda
                                    ((g$t$9101$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$9102$1l2agK)
                                         (if (if g$ls/false$9102$1l2agK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9103$1l2agK)
                                                      (g$id?$7373$1l2agK
                                                        g$foo$9103$1l2agK)))
                                                   g$ls/false$9102$1l2agK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9104$1l2agK)
                                                (g$id$8872$1l2agK
                                                  g$foo$9104$1l2agK
                                                  (g$stx->datum$7384$1l2agK
                                                    g$foo$9104$1l2agK)
                                                  '"?")))
                                             g$ls/false$9102$1l2agK)
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"invalid syntax"
                                             g$t$9101$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$9101$1l2agK
                                        'any))))
                                  g$t$9096$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$9096$1l2agK
                              '(any any any)))))
                        g$spec$9095$1l2agK))))
                  (g$get-clause$8876$1l2agK
                    (case-lambda
                      ((g$id$9086$1l2agK g$ls$9087$1l2agK)
                       ((case-lambda
                          ((g$t$9088$1l2agK)
                           ((case-lambda
                              ((g$ls/false$9089$1l2agK)
                               (if g$ls/false$9089$1l2agK
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9089$1l2agK)
                                 ((case-lambda
                                    ((g$t$9090$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$9091$1l2agK)
                                         (if g$ls/false$9091$1l2agK
                                           (apply
                                             (case-lambda
                                               ((g$x$9092$1l2agK
                                                  g$rest$9093$1l2agK
                                                  g$ls$9094$1l2agK)
                                                (if (g$free-id=?$7377$1l2agK
                                                      (g$bless$7614$1l2agK
                                                        g$id$9086$1l2agK)
                                                      g$x$9092$1l2agK)
                                                  (cons
                                                    g$x$9092$1l2agK
                                                    g$rest$9093$1l2agK)
                                                  (g$get-clause$8876$1l2agK
                                                    g$id$9086$1l2agK
                                                    g$ls$9094$1l2agK))))
                                             g$ls/false$9091$1l2agK)
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"invalid syntax"
                                             g$t$9090$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$9090$1l2agK
                                        '((any . any) . any)))))
                                  g$t$9088$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$9088$1l2agK
                              '()))))
                        g$ls$9087$1l2agK))))
                  (g$foo-rtd-code$8877$1l2agK
                    (case-lambda
                      ((g$name$9045$1l2agK
                         g$clause*$9046$1l2agK
                         g$parent-rtd-code$9047$1l2agK)
                       (letrec* ((g$convert-field-spec*$9048$1l2agK
                                   (case-lambda
                                     ((g$ls$9073$1l2agK)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$9074$1l2agK)
                                                ((case-lambda
                                                   ((g$t$9075$1l2agK)
                                                    ((case-lambda
                                                       ((g$ls/false$9076$1l2agK)
                                                        (if g$ls/false$9076$1l2agK
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$9077$1l2agK
                                                                 g$rest$9078$1l2agK)
                                                               (list
                                                                 'mutable
                                                                 g$name$9077$1l2agK)))
                                                            g$ls/false$9076$1l2agK)
                                                          ((case-lambda
                                                             ((g$t$9079$1l2agK)
                                                              ((case-lambda
                                                                 ((g$ls/false$9080$1l2agK)
                                                                  (if g$ls/false$9080$1l2agK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$9081$1l2agK
                                                                           g$rest$9082$1l2agK)
                                                                         (list
                                                                           'immutable
                                                                           g$name$9081$1l2agK)))
                                                                      g$ls/false$9080$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$t$9083$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9084$1l2agK)
                                                                            (if g$ls/false$9084$1l2agK
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$9085$1l2agK)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$9085$1l2agK)))
                                                                                g$ls/false$9084$1l2agK)
                                                                              (g$syntax-violation$7762$1l2agK
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9083$1l2agK))))
                                                                         (g$syntax-dispatch$7651$1l2agK
                                                                           g$t$9083$1l2agK
                                                                           'any))))
                                                                     g$t$9079$1l2agK))))
                                                               (g$syntax-dispatch$7651$1l2agK
                                                                 g$t$9079$1l2agK
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$9075$1l2agK))))
                                                     (g$syntax-dispatch$7651$1l2agK
                                                       g$t$9075$1l2agK
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$9074$1l2agK)))
                                             g$ls$9073$1l2agK))))))
                         ((case-lambda
                            ((g$uid-code$9049$1l2agK
                               g$sealed?$9050$1l2agK
                               g$opaque?$9051$1l2agK
                               g$fields$9052$1l2agK)
                             (g$bless$7614$1l2agK
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9045$1l2agK)
                                 g$parent-rtd-code$9047$1l2agK
                                 g$uid-code$9049$1l2agK
                                 g$sealed?$9050$1l2agK
                                 g$opaque?$9051$1l2agK
                                 g$fields$9052$1l2agK))))
                          ((case-lambda
                             ((g$t$9053$1l2agK)
                              ((case-lambda
                                 ((g$ls/false$9054$1l2agK)
                                  (if g$ls/false$9054$1l2agK
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9054$1l2agK)
                                    ((case-lambda
                                       ((g$t$9055$1l2agK)
                                        ((case-lambda
                                           ((g$ls/false$9056$1l2agK)
                                            (if g$ls/false$9056$1l2agK
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9057$1l2agK)
                                                   (list
                                                     'quote
                                                     g$uid$9057$1l2agK)))
                                                g$ls/false$9056$1l2agK)
                                              ((case-lambda
                                                 ((g$t$9058$1l2agK)
                                                  ((case-lambda
                                                     ((g$ls/false$9059$1l2agK)
                                                      (if g$ls/false$9059$1l2agK
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9059$1l2agK)
                                                        (g$syntax-violation$7762$1l2agK
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9058$1l2agK))))
                                                   (g$syntax-dispatch$7651$1l2agK
                                                     g$t$9058$1l2agK
                                                     '_))))
                                               g$t$9055$1l2agK))))
                                         (g$syntax-dispatch$7651$1l2agK
                                           g$t$9055$1l2agK
                                           '(_ any)))))
                                     g$t$9053$1l2agK))))
                               (g$syntax-dispatch$7651$1l2agK
                                 g$t$9053$1l2agK
                                 '(_)))))
                           (g$get-clause$8876$1l2agK
                             'nongenerative
                             g$clause*$9046$1l2agK))
                          ((case-lambda
                             ((g$t$9060$1l2agK)
                              ((case-lambda
                                 ((g$ls/false$9061$1l2agK)
                                  (if g$ls/false$9061$1l2agK
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9061$1l2agK)
                                    ((case-lambda
                                       ((g$t$9062$1l2agK)
                                        ((case-lambda
                                           ((g$ls/false$9063$1l2agK)
                                            (if g$ls/false$9063$1l2agK
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9063$1l2agK)
                                              (g$syntax-violation$7762$1l2agK
                                                '#f
                                                '"invalid syntax"
                                                g$t$9062$1l2agK))))
                                         (g$syntax-dispatch$7651$1l2agK
                                           g$t$9062$1l2agK
                                           '_))))
                                     g$t$9060$1l2agK))))
                               (g$syntax-dispatch$7651$1l2agK
                                 g$t$9060$1l2agK
                                 '(_ #(atom #t))))))
                           (g$get-clause$8876$1l2agK
                             'sealed
                             g$clause*$9046$1l2agK))
                          ((case-lambda
                             ((g$t$9064$1l2agK)
                              ((case-lambda
                                 ((g$ls/false$9065$1l2agK)
                                  (if g$ls/false$9065$1l2agK
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9065$1l2agK)
                                    ((case-lambda
                                       ((g$t$9066$1l2agK)
                                        ((case-lambda
                                           ((g$ls/false$9067$1l2agK)
                                            (if g$ls/false$9067$1l2agK
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9067$1l2agK)
                                              (g$syntax-violation$7762$1l2agK
                                                '#f
                                                '"invalid syntax"
                                                g$t$9066$1l2agK))))
                                         (g$syntax-dispatch$7651$1l2agK
                                           g$t$9066$1l2agK
                                           '_))))
                                     g$t$9064$1l2agK))))
                               (g$syntax-dispatch$7651$1l2agK
                                 g$t$9064$1l2agK
                                 '(_ #(atom #t))))))
                           (g$get-clause$8876$1l2agK
                             'opaque
                             g$clause*$9046$1l2agK))
                          ((case-lambda
                             ((g$t$9068$1l2agK)
                              ((case-lambda
                                 ((g$ls/false$9069$1l2agK)
                                  (if g$ls/false$9069$1l2agK
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9070$1l2agK)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9048$1l2agK
                                             g$field-spec*$9070$1l2agK))))
                                      g$ls/false$9069$1l2agK)
                                    ((case-lambda
                                       ((g$t$9071$1l2agK)
                                        ((case-lambda
                                           ((g$ls/false$9072$1l2agK)
                                            (if g$ls/false$9072$1l2agK
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9072$1l2agK)
                                              (g$syntax-violation$7762$1l2agK
                                                '#f
                                                '"invalid syntax"
                                                g$t$9071$1l2agK))))
                                         (g$syntax-dispatch$7651$1l2agK
                                           g$t$9071$1l2agK
                                           '_))))
                                     g$t$9068$1l2agK))))
                               (g$syntax-dispatch$7651$1l2agK
                                 g$t$9068$1l2agK
                                 '(_ . each-any)))))
                           (g$get-clause$8876$1l2agK
                             'fields
                             g$clause*$9046$1l2agK)))))))
                  (g$parent-rtd-code$8878$1l2agK
                    (case-lambda
                      ((g$clause*$9033$1l2agK)
                       ((case-lambda
                          ((g$t$9034$1l2agK)
                           ((case-lambda
                              ((g$ls/false$9035$1l2agK)
                               (if g$ls/false$9035$1l2agK
                                 (apply
                                   (case-lambda
                                     ((g$name$9036$1l2agK)
                                      (list
                                        'record-type-descriptor
                                        g$name$9036$1l2agK)))
                                   g$ls/false$9035$1l2agK)
                                 ((case-lambda
                                    ((g$t$9037$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$9038$1l2agK)
                                         (if g$ls/false$9038$1l2agK
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9039$1l2agK)
                                                    ((case-lambda
                                                       ((g$ls/false$9040$1l2agK)
                                                        (if g$ls/false$9040$1l2agK
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9041$1l2agK
                                                                 g$rcd$9042$1l2agK)
                                                               g$rtd$9041$1l2agK))
                                                            g$ls/false$9040$1l2agK)
                                                          ((case-lambda
                                                             ((g$t$9043$1l2agK)
                                                              ((case-lambda
                                                                 ((g$ls/false$9044$1l2agK)
                                                                  (if g$ls/false$9044$1l2agK
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9044$1l2agK)
                                                                    (g$syntax-violation$7762$1l2agK
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9043$1l2agK))))
                                                               (g$syntax-dispatch$7651$1l2agK
                                                                 g$t$9043$1l2agK
                                                                 '#(atom #f)))))
                                                           g$t$9039$1l2agK))))
                                                     (g$syntax-dispatch$7651$1l2agK
                                                       g$t$9039$1l2agK
                                                       '(_ any any)))))
                                                 (g$get-clause$8876$1l2agK
                                                   'parent-rtd
                                                   g$clause*$9033$1l2agK))))
                                             g$ls/false$9038$1l2agK)
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"invalid syntax"
                                             g$t$9037$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$9037$1l2agK
                                        '#(atom #f)))))
                                  g$t$9034$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$9034$1l2agK
                              '(_ any)))))
                        (g$get-clause$8876$1l2agK
                          'parent
                          g$clause*$9033$1l2agK)))))
                  (g$parent-rcd-code$8879$1l2agK
                    (case-lambda
                      ((g$clause*$9021$1l2agK)
                       ((case-lambda
                          ((g$t$9022$1l2agK)
                           ((case-lambda
                              ((g$ls/false$9023$1l2agK)
                               (if g$ls/false$9023$1l2agK
                                 (apply
                                   (case-lambda
                                     ((g$name$9024$1l2agK)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9024$1l2agK)))
                                   g$ls/false$9023$1l2agK)
                                 ((case-lambda
                                    ((g$t$9025$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$9026$1l2agK)
                                         (if g$ls/false$9026$1l2agK
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9027$1l2agK)
                                                    ((case-lambda
                                                       ((g$ls/false$9028$1l2agK)
                                                        (if g$ls/false$9028$1l2agK
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9029$1l2agK
                                                                 g$rcd$9030$1l2agK)
                                                               g$rcd$9030$1l2agK))
                                                            g$ls/false$9028$1l2agK)
                                                          ((case-lambda
                                                             ((g$t$9031$1l2agK)
                                                              ((case-lambda
                                                                 ((g$ls/false$9032$1l2agK)
                                                                  (if g$ls/false$9032$1l2agK
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9032$1l2agK)
                                                                    (g$syntax-violation$7762$1l2agK
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9031$1l2agK))))
                                                               (g$syntax-dispatch$7651$1l2agK
                                                                 g$t$9031$1l2agK
                                                                 '#(atom #f)))))
                                                           g$t$9027$1l2agK))))
                                                     (g$syntax-dispatch$7651$1l2agK
                                                       g$t$9027$1l2agK
                                                       '(_ any any)))))
                                                 (g$get-clause$8876$1l2agK
                                                   'parent-rtd
                                                   g$clause*$9021$1l2agK))))
                                             g$ls/false$9026$1l2agK)
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"invalid syntax"
                                             g$t$9025$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$9025$1l2agK
                                        '#(atom #f)))))
                                  g$t$9022$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$9022$1l2agK
                              '(_ any)))))
                        (g$get-clause$8876$1l2agK
                          'parent
                          g$clause*$9021$1l2agK)))))
                  (g$foo-rcd-code$8880$1l2agK
                    (case-lambda
                      ((g$clause*$9017$1l2agK
                         g$foo-rtd$9018$1l2agK
                         g$protocol$9019$1l2agK
                         g$parent-rcd-code$9020$1l2agK)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9018$1l2agK
                         g$parent-rcd-code$9020$1l2agK
                         g$protocol$9019$1l2agK))))
                  (g$get-protocol-code$8881$1l2agK
                    (case-lambda
                      ((g$clause*$9011$1l2agK)
                       ((case-lambda
                          ((g$t$9012$1l2agK)
                           ((case-lambda
                              ((g$ls/false$9013$1l2agK)
                               (if g$ls/false$9013$1l2agK
                                 (apply
                                   (case-lambda
                                     ((g$expr$9014$1l2agK) g$expr$9014$1l2agK))
                                   g$ls/false$9013$1l2agK)
                                 ((case-lambda
                                    ((g$t$9015$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$9016$1l2agK)
                                         (if g$ls/false$9016$1l2agK
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9016$1l2agK)
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"invalid syntax"
                                             g$t$9015$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$9015$1l2agK
                                        '_))))
                                  g$t$9012$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$9012$1l2agK
                              '(_ any)))))
                        (g$get-clause$8876$1l2agK
                          'protocol
                          g$clause*$9011$1l2agK)))))
                  (g$get-fields$8882$1l2agK
                    (case-lambda
                      ((g$clause*$9002$1l2agK)
                       ((case-lambda
                          ((g$t$9003$1l2agK)
                           ((case-lambda
                              ((g$ls/false$9004$1l2agK)
                               (if g$ls/false$9004$1l2agK
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9004$1l2agK)
                                 ((case-lambda
                                    ((g$t$9005$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$9006$1l2agK)
                                         (if g$ls/false$9006$1l2agK
                                           (apply
                                             (case-lambda
                                               ((g$f*$9007$1l2agK)
                                                g$f*$9007$1l2agK))
                                             g$ls/false$9006$1l2agK)
                                           ((case-lambda
                                              ((g$t$9008$1l2agK)
                                               ((case-lambda
                                                  ((g$ls/false$9009$1l2agK)
                                                   (if g$ls/false$9009$1l2agK
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9010$1l2agK)
                                                          (g$get-fields$8882$1l2agK
                                                            g$rest$9010$1l2agK)))
                                                       g$ls/false$9009$1l2agK)
                                                     (g$syntax-violation$7762$1l2agK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9008$1l2agK))))
                                                (g$syntax-dispatch$7651$1l2agK
                                                  g$t$9008$1l2agK
                                                  '(_ . any)))))
                                            g$t$9005$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$9005$1l2agK
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9003$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$9003$1l2agK
                              '()))))
                        g$clause*$9002$1l2agK))))
                  (g$get-mutator-indices$8883$1l2agK
                    (case-lambda
                      ((g$fields$8990$1l2agK)
                       ((letrec ((g$f$8991$1l2agK
                                   (case-lambda
                                     ((g$fields$8992$1l2agK g$i$8993$1l2agK)
                                      ((case-lambda
                                         ((g$t$8994$1l2agK)
                                          ((case-lambda
                                             ((g$ls/false$8995$1l2agK)
                                              (if g$ls/false$8995$1l2agK
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8995$1l2agK)
                                                ((case-lambda
                                                   ((g$t$8996$1l2agK)
                                                    ((case-lambda
                                                       ((g$ls/false$8997$1l2agK)
                                                        (if g$ls/false$8997$1l2agK
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8998$1l2agK)
                                                               (cons
                                                                 g$i$8993$1l2agK
                                                                 (g$f$8991$1l2agK
                                                                   g$rest$8998$1l2agK
                                                                   (+ g$i$8993$1l2agK
                                                                      '1)))))
                                                            g$ls/false$8997$1l2agK)
                                                          ((case-lambda
                                                             ((g$t$8999$1l2agK)
                                                              ((case-lambda
                                                                 ((g$ls/false$9000$1l2agK)
                                                                  (if g$ls/false$9000$1l2agK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9001$1l2agK)
                                                                         (g$f$8991$1l2agK
                                                                           g$rest$9001$1l2agK
                                                                           (+ g$i$8993$1l2agK
                                                                              '1))))
                                                                      g$ls/false$9000$1l2agK)
                                                                    (g$syntax-violation$7762$1l2agK
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8999$1l2agK))))
                                                               (g$syntax-dispatch$7651$1l2agK
                                                                 g$t$8999$1l2agK
                                                                 '(_ . any)))))
                                                           g$t$8996$1l2agK))))
                                                     (g$syntax-dispatch$7651$1l2agK
                                                       g$t$8996$1l2agK
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8994$1l2agK))))
                                           (g$syntax-dispatch$7651$1l2agK
                                             g$t$8994$1l2agK
                                             '()))))
                                       g$fields$8992$1l2agK)))))
                          g$f$8991$1l2agK)
                        g$fields$8990$1l2agK
                        '0))))
                  (g$get-mutators$8884$1l2agK
                    (case-lambda
                      ((g$foo$8969$1l2agK g$fields$8970$1l2agK)
                       (letrec* ((g$gen-name$8971$1l2agK
                                   (case-lambda
                                     ((g$x$8989$1l2agK)
                                      (g$datum->syntax$7764$1l2agK
                                        g$foo$8969$1l2agK
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7765$1l2agK
                                                g$foo$8969$1l2agK))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7765$1l2agK
                                                g$x$8989$1l2agK))
                                            '"-set!")))))))
                         ((letrec ((g$f$8972$1l2agK
                                     (case-lambda
                                       ((g$fields$8973$1l2agK)
                                        ((case-lambda
                                           ((g$t$8974$1l2agK)
                                            ((case-lambda
                                               ((g$ls/false$8975$1l2agK)
                                                (if g$ls/false$8975$1l2agK
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8975$1l2agK)
                                                  ((case-lambda
                                                     ((g$t$8976$1l2agK)
                                                      ((case-lambda
                                                         ((g$ls/false$8977$1l2agK)
                                                          (if g$ls/false$8977$1l2agK
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8978$1l2agK
                                                                   g$accessor$8979$1l2agK
                                                                   g$mutator$8980$1l2agK
                                                                   g$rest$8981$1l2agK)
                                                                 (cons
                                                                   g$mutator$8980$1l2agK
                                                                   (g$f$8972$1l2agK
                                                                     g$rest$8981$1l2agK))))
                                                              g$ls/false$8977$1l2agK)
                                                            ((case-lambda
                                                               ((g$t$8982$1l2agK)
                                                                ((case-lambda
                                                                   ((g$ls/false$8983$1l2agK)
                                                                    (if g$ls/false$8983$1l2agK
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8984$1l2agK
                                                                             g$rest$8985$1l2agK)
                                                                           (cons
                                                                             (g$gen-name$8971$1l2agK
                                                                               g$name$8984$1l2agK)
                                                                             (g$f$8972$1l2agK
                                                                               g$rest$8985$1l2agK))))
                                                                        g$ls/false$8983$1l2agK)
                                                                      ((case-lambda
                                                                         ((g$t$8986$1l2agK)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8987$1l2agK)
                                                                              (if g$ls/false$8987$1l2agK
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8988$1l2agK)
                                                                                     (g$f$8972$1l2agK
                                                                                       g$rest$8988$1l2agK)))
                                                                                  g$ls/false$8987$1l2agK)
                                                                                (g$syntax-violation$7762$1l2agK
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8986$1l2agK))))
                                                                           (g$syntax-dispatch$7651$1l2agK
                                                                             g$t$8986$1l2agK
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8982$1l2agK))))
                                                                 (g$syntax-dispatch$7651$1l2agK
                                                                   g$t$8982$1l2agK
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8976$1l2agK))))
                                                       (g$syntax-dispatch$7651$1l2agK
                                                         g$t$8976$1l2agK
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8974$1l2agK))))
                                             (g$syntax-dispatch$7651$1l2agK
                                               g$t$8974$1l2agK
                                               '()))))
                                         g$fields$8973$1l2agK)))))
                            g$f$8972$1l2agK)
                          g$fields$8970$1l2agK)))))
                  (g$get-accessors$8885$1l2agK
                    (case-lambda
                      ((g$foo$8935$1l2agK g$fields$8936$1l2agK)
                       (letrec* ((g$gen-name$8937$1l2agK
                                   (case-lambda
                                     ((g$x$8968$1l2agK)
                                      (g$datum->syntax$7764$1l2agK
                                        g$foo$8935$1l2agK
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7765$1l2agK
                                                g$foo$8935$1l2agK))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7765$1l2agK
                                                g$x$8968$1l2agK)))))))))
                         (map (case-lambda
                                ((g$field$8938$1l2agK)
                                 ((case-lambda
                                    ((g$t$8939$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$8940$1l2agK)
                                         (if (if g$ls/false$8940$1l2agK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8941$1l2agK
                                                        g$accessor$8942$1l2agK
                                                        g$mutator$8943$1l2agK)
                                                      (g$id?$7373$1l2agK
                                                        g$accessor$8942$1l2agK)))
                                                   g$ls/false$8940$1l2agK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8944$1l2agK
                                                  g$accessor$8945$1l2agK
                                                  g$mutator$8946$1l2agK)
                                                g$accessor$8945$1l2agK))
                                             g$ls/false$8940$1l2agK)
                                           ((case-lambda
                                              ((g$t$8947$1l2agK)
                                               ((case-lambda
                                                  ((g$ls/false$8948$1l2agK)
                                                   (if (if g$ls/false$8948$1l2agK
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8949$1l2agK
                                                                  g$accessor$8950$1l2agK)
                                                                (g$id?$7373$1l2agK
                                                                  g$accessor$8950$1l2agK)))
                                                             g$ls/false$8948$1l2agK))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8951$1l2agK
                                                            g$accessor$8952$1l2agK)
                                                          g$accessor$8952$1l2agK))
                                                       g$ls/false$8948$1l2agK)
                                                     ((case-lambda
                                                        ((g$t$8953$1l2agK)
                                                         ((case-lambda
                                                            ((g$ls/false$8954$1l2agK)
                                                             (if (if g$ls/false$8954$1l2agK
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8955$1l2agK)
                                                                          (g$id?$7373$1l2agK
                                                                            g$name$8955$1l2agK)))
                                                                       g$ls/false$8954$1l2agK))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8956$1l2agK)
                                                                    (g$gen-name$8937$1l2agK
                                                                      g$name$8956$1l2agK)))
                                                                 g$ls/false$8954$1l2agK)
                                                               ((case-lambda
                                                                  ((g$t$8957$1l2agK)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8958$1l2agK)
                                                                       (if (if g$ls/false$8958$1l2agK
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8959$1l2agK)
                                                                                    (g$id?$7373$1l2agK
                                                                                      g$name$8959$1l2agK)))
                                                                                 g$ls/false$8958$1l2agK))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8960$1l2agK)
                                                                              (g$gen-name$8937$1l2agK
                                                                                g$name$8960$1l2agK)))
                                                                           g$ls/false$8958$1l2agK)
                                                                         ((case-lambda
                                                                            ((g$t$8961$1l2agK)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8962$1l2agK)
                                                                                 (if (if g$ls/false$8962$1l2agK
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8963$1l2agK)
                                                                                              (g$id?$7373$1l2agK
                                                                                                g$name$8963$1l2agK)))
                                                                                           g$ls/false$8962$1l2agK))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8964$1l2agK)
                                                                                        (g$gen-name$8937$1l2agK
                                                                                          g$name$8964$1l2agK)))
                                                                                     g$ls/false$8962$1l2agK)
                                                                                   ((case-lambda
                                                                                      ((g$t$8965$1l2agK)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8966$1l2agK)
                                                                                           (if g$ls/false$8966$1l2agK
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8967$1l2agK)
                                                                                                  (g$syntax-violation$7762$1l2agK
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8938$1l2agK)))
                                                                                               g$ls/false$8966$1l2agK)
                                                                                             (g$syntax-violation$7762$1l2agK
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8965$1l2agK))))
                                                                                        (g$syntax-dispatch$7651$1l2agK
                                                                                          g$t$8965$1l2agK
                                                                                          'any))))
                                                                                    g$t$8961$1l2agK))))
                                                                              (g$syntax-dispatch$7651$1l2agK
                                                                                g$t$8961$1l2agK
                                                                                'any))))
                                                                          g$t$8957$1l2agK))))
                                                                    (g$syntax-dispatch$7651$1l2agK
                                                                      g$t$8957$1l2agK
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8953$1l2agK))))
                                                          (g$syntax-dispatch$7651$1l2agK
                                                            g$t$8953$1l2agK
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8947$1l2agK))))
                                                (g$syntax-dispatch$7651$1l2agK
                                                  g$t$8947$1l2agK
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8939$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$8939$1l2agK
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8938$1l2agK)))
                              g$fields$8936$1l2agK)))))
                  (g$enumerate$8886$1l2agK
                    (case-lambda
                      ((g$ls$8931$1l2agK)
                       ((letrec ((g$f$8932$1l2agK
                                   (case-lambda
                                     ((g$ls$8933$1l2agK g$i$8934$1l2agK)
                                      (if (null? g$ls$8933$1l2agK)
                                        '()
                                        (cons
                                          g$i$8934$1l2agK
                                          (g$f$8932$1l2agK
                                            (cdr g$ls$8933$1l2agK)
                                            (+ g$i$8934$1l2agK '1))))))))
                          g$f$8932$1l2agK)
                        g$ls$8931$1l2agK
                        '0))))
                  (g$do-define-record$8887$1l2agK
                    (case-lambda
                      ((g$namespec$8911$1l2agK g$clause*$8912$1l2agK)
                       ((case-lambda
                          ((g$foo$8913$1l2agK)
                           ((case-lambda
                              ((g$foo-rtd$8914$1l2agK)
                               ((case-lambda
                                  ((g$foo-rcd$8915$1l2agK)
                                   ((case-lambda
                                      ((g$protocol$8916$1l2agK)
                                       ((case-lambda
                                          ((g$make-foo$8917$1l2agK)
                                           ((case-lambda
                                              ((g$fields$8918$1l2agK)
                                               ((case-lambda
                                                  ((g$idx*$8919$1l2agK)
                                                   ((case-lambda
                                                      ((g$foo-x*$8920$1l2agK)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8921$1l2agK)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8922$1l2agK)
                                                               ((case-lambda
                                                                  ((g$foo?$8923$1l2agK)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8924$1l2agK)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8925$1l2agK)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8926$1l2agK)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7614$1l2agK
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8914$1l2agK
                                                                                           g$foo-rtd-code$8924$1l2agK)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8916$1l2agK
                                                                                             g$protocol-code$8926$1l2agK)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8915$1l2agK
                                                                                               g$foo-rcd-code$8925$1l2agK)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8913$1l2agK
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8914$1l2agK)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8915$1l2agK)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8923$1l2agK
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8914$1l2agK))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8917$1l2agK
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8915$1l2agK))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8927$1l2agK
                                                                                                               g$idx$8928$1l2agK)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8927$1l2agK
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8914$1l2agK
                                                                                                                 g$idx$8928$1l2agK))))
                                                                                                          g$foo-x*$8920$1l2agK
                                                                                                          g$idx*$8919$1l2agK)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8929$1l2agK
                                                                                                               g$idx$8930$1l2agK)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8929$1l2agK
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8914$1l2agK
                                                                                                                 g$idx$8930$1l2agK))))
                                                                                                          g$set-foo-x!*$8921$1l2agK
                                                                                                          g$set-foo-idx*$8922$1l2agK)))))))))))))))
                                                                            (g$get-protocol-code$8881$1l2agK
                                                                              g$clause*$8912$1l2agK))))
                                                                        (g$foo-rcd-code$8880$1l2agK
                                                                          g$clause*$8912$1l2agK
                                                                          g$foo-rtd$8914$1l2agK
                                                                          g$protocol$8916$1l2agK
                                                                          (g$parent-rcd-code$8879$1l2agK
                                                                            g$clause*$8912$1l2agK)))))
                                                                    (g$foo-rtd-code$8877$1l2agK
                                                                      g$foo$8913$1l2agK
                                                                      g$clause*$8912$1l2agK
                                                                      (g$parent-rtd-code$8878$1l2agK
                                                                        g$clause*$8912$1l2agK)))))
                                                                (g$get-record-predicate-name$8875$1l2agK
                                                                  g$namespec$8911$1l2agK))))
                                                            (g$get-mutator-indices$8883$1l2agK
                                                              g$fields$8918$1l2agK))))
                                                        (g$get-mutators$8884$1l2agK
                                                          g$foo$8913$1l2agK
                                                          g$fields$8918$1l2agK))))
                                                    (g$get-accessors$8885$1l2agK
                                                      g$foo$8913$1l2agK
                                                      g$fields$8918$1l2agK))))
                                                (g$enumerate$8886$1l2agK
                                                  g$fields$8918$1l2agK))))
                                            (g$get-fields$8882$1l2agK
                                              g$clause*$8912$1l2agK))))
                                        (g$get-record-constructor-name$8874$1l2agK
                                          g$namespec$8911$1l2agK))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8873$1l2agK
                          g$namespec$8911$1l2agK)))))
                  (g$verify-clauses$8888$1l2agK
                    (case-lambda
                      ((g$x$8893$1l2agK g$cls*$8894$1l2agK)
                       (letrec* ((g$valid-kwds$8895$1l2agK
                                   (map g$bless$7614$1l2agK
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8896$1l2agK
                                   (case-lambda
                                     ((g$x$8908$1l2agK g$ls$8909$1l2agK)
                                      (if (pair? g$ls$8909$1l2agK)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8910$1l2agK)
                                              (if g$t$8910$1l2agK
                                                g$t$8910$1l2agK
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8896$1l2agK
                                                    g$x$8908$1l2agK
                                                    (cdr g$ls$8909$1l2agK))))))
                                           (g$free-id=?$7377$1l2agK
                                             g$x$8908$1l2agK
                                             (car g$ls$8909$1l2agK))))
                                        '#f)))))
                         ((letrec ((g$f$8897$1l2agK
                                     (case-lambda
                                       ((g$cls*$8898$1l2agK g$seen*$8899$1l2agK)
                                        (if (not (null? g$cls*$8898$1l2agK))
                                          ((case-lambda
                                             ((g$t$8900$1l2agK)
                                              ((case-lambda
                                                 ((g$ls/false$8901$1l2agK)
                                                  (if g$ls/false$8901$1l2agK
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8902$1l2agK
                                                           g$rest$8903$1l2agK)
                                                         (if ((case-lambda
                                                                ((g$t$8904$1l2agK)
                                                                 (if g$t$8904$1l2agK
                                                                   g$t$8904$1l2agK
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8896$1l2agK
                                                                            g$kwd$8902$1l2agK
                                                                            g$valid-kwds$8895$1l2agK))))))
                                                              (not (g$id?$7373$1l2agK
                                                                     g$kwd$8902$1l2agK)))
                                                           (g$syntax-violation$7762$1l2agK
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8902$1l2agK)
                                                           (if (g$bound-id-member?$7380$1l2agK
                                                                 g$kwd$8902$1l2agK
                                                                 g$seen*$8899$1l2agK)
                                                             (g$syntax-violation$7762$1l2agK
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8893$1l2agK
                                                               g$kwd$8902$1l2agK)
                                                             (g$f$8897$1l2agK
                                                               (cdr g$cls*$8898$1l2agK)
                                                               (cons
                                                                 g$kwd$8902$1l2agK
                                                                 g$seen*$8899$1l2agK))))))
                                                      g$ls/false$8901$1l2agK)
                                                    ((case-lambda
                                                       ((g$t$8905$1l2agK)
                                                        ((case-lambda
                                                           ((g$ls/false$8906$1l2agK)
                                                            (if g$ls/false$8906$1l2agK
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8907$1l2agK)
                                                                   (g$syntax-violation$7762$1l2agK
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8907$1l2agK)))
                                                                g$ls/false$8906$1l2agK)
                                                              (g$syntax-violation$7762$1l2agK
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8905$1l2agK))))
                                                         (g$syntax-dispatch$7651$1l2agK
                                                           g$t$8905$1l2agK
                                                           'any))))
                                                     g$t$8900$1l2agK))))
                                               (g$syntax-dispatch$7651$1l2agK
                                                 g$t$8900$1l2agK
                                                 '(any . any)))))
                                           (car g$cls*$8898$1l2agK))
                                          (void))))))
                            g$f$8897$1l2agK)
                          g$cls*$8894$1l2agK
                          '()))))))
          ((case-lambda
             ((g$t$8889$1l2agK)
              ((case-lambda
                 ((g$ls/false$8890$1l2agK)
                  (if g$ls/false$8890$1l2agK
                    (apply
                      (case-lambda
                        ((g$namespec$8891$1l2agK g$clause*$8892$1l2agK)
                         (begin
                           (g$verify-clauses$8888$1l2agK
                             g$x$8871$1l2agK
                             g$clause*$8892$1l2agK)
                           (g$do-define-record$8887$1l2agK
                             g$namespec$8891$1l2agK
                             g$clause*$8892$1l2agK))))
                      g$ls/false$8890$1l2agK)
                    (g$syntax-violation$7762$1l2agK
                      '#f
                      '"invalid syntax"
                      g$t$8889$1l2agK))))
               (g$syntax-dispatch$7651$1l2agK
                 g$t$8889$1l2agK
                 '(_ any . each-any)))))
           g$x$8871$1l2agK)))))
   (g$define-condition-type-macro$7646$1l2agK
     g$define-condition-type-macro$11092$1l2agK
     (case-lambda
       ((g$x$9127$1l2agK)
        (letrec* ((g$mkname$9128$1l2agK
                    (case-lambda
                      ((g$name$9151$1l2agK g$suffix$9152$1l2agK)
                       (g$datum->syntax$7764$1l2agK
                         g$name$9151$1l2agK
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7765$1l2agK g$name$9151$1l2agK))
                             g$suffix$9152$1l2agK)))))))
          ((case-lambda
             ((g$t$9129$1l2agK)
              ((case-lambda
                 ((g$ls/false$9130$1l2agK)
                  (if (if g$ls/false$9130$1l2agK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9131$1l2agK
                                 g$name$9132$1l2agK
                                 g$super$9133$1l2agK
                                 g$constructor$9134$1l2agK
                                 g$predicate$9135$1l2agK
                                 g$field*$9136$1l2agK
                                 g$accessor*$9137$1l2agK)
                               (if (g$id?$7373$1l2agK g$name$9132$1l2agK)
                                 (if (g$id?$7373$1l2agK g$super$9133$1l2agK)
                                   (if (g$id?$7373$1l2agK
                                         g$constructor$9134$1l2agK)
                                     (if (g$id?$7373$1l2agK
                                           g$predicate$9135$1l2agK)
                                       (if (g$for-all$5503$1l2agK
                                             g$id?$7373$1l2agK
                                             g$field*$9136$1l2agK)
                                         (begin
                                           '#f
                                           (g$for-all$5503$1l2agK
                                             g$id?$7373$1l2agK
                                             g$accessor*$9137$1l2agK))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9130$1l2agK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9138$1l2agK
                           g$name$9139$1l2agK
                           g$super$9140$1l2agK
                           g$constructor$9141$1l2agK
                           g$predicate$9142$1l2agK
                           g$field*$9143$1l2agK
                           g$accessor*$9144$1l2agK)
                         ((case-lambda
                            ((g$aux-accessor*$9145$1l2agK)
                             (g$bless$7614$1l2agK
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9139$1l2agK
                                         g$constructor$9141$1l2agK
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9140$1l2agK)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9146$1l2agK
                                                       g$aux$9147$1l2agK)
                                                     (list
                                                       'immutable
                                                       g$field$9146$1l2agK
                                                       g$aux$9147$1l2agK)))
                                                  g$field*$9143$1l2agK
                                                  g$aux-accessor*$9145$1l2agK))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9142$1l2agK
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9139$1l2agK)))
                                     (map (case-lambda
                                            ((g$accessor$9148$1l2agK
                                               g$aux$9149$1l2agK)
                                             (list
                                               'define
                                               g$accessor$9148$1l2agK
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9139$1l2agK)
                                                 g$aux$9149$1l2agK))))
                                          g$accessor*$9144$1l2agK
                                          g$aux-accessor*$9145$1l2agK)))))))
                          (map (case-lambda ((g$x$9150$1l2agK) (gensym)))
                               g$accessor*$9144$1l2agK))))
                      g$ls/false$9130$1l2agK)
                    (g$syntax-violation$7762$1l2agK
                      '#f
                      '"invalid syntax"
                      g$t$9129$1l2agK))))
               (g$syntax-dispatch$7651$1l2agK
                 g$t$9129$1l2agK
                 '(any any any any any . #(each (any any)))))))
           g$x$9127$1l2agK)))))
   (g$incorrect-usage-macro$7647$1l2agK
     g$incorrect-usage-macro$11093$1l2agK
     (case-lambda
       ((g$e$9153$1l2agK)
        (g$syntax-violation$7762$1l2agK
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9153$1l2agK))))
   (g$parameterize-macro$7648$1l2agK
     g$parameterize-macro$11094$1l2agK
     (case-lambda
       ((g$e$9154$1l2agK)
        ((case-lambda
           ((g$t$9155$1l2agK)
            ((case-lambda
               ((g$ls/false$9156$1l2agK)
                (if g$ls/false$9156$1l2agK
                  (apply
                    (case-lambda
                      ((g$b$9157$1l2agK g$b*$9158$1l2agK)
                       (g$bless$7614$1l2agK
                         (cons
                           'begin
                           (cons g$b$9157$1l2agK g$b*$9158$1l2agK)))))
                    g$ls/false$9156$1l2agK)
                  ((case-lambda
                     ((g$t$9159$1l2agK)
                      ((case-lambda
                         ((g$ls/false$9160$1l2agK)
                          (if g$ls/false$9160$1l2agK
                            (apply
                              (case-lambda
                                ((g$olhs*$9161$1l2agK
                                   g$orhs*$9162$1l2agK
                                   g$b$9163$1l2agK
                                   g$b*$9164$1l2agK)
                                 ((case-lambda
                                    ((g$lhs*$9165$1l2agK g$rhs*$9166$1l2agK)
                                     (g$bless$7614$1l2agK
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9165$1l2agK
                                             g$rhs*$9166$1l2agK)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$9167$1l2agK
                                                               g$rhs$9168$1l2agK)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$9167$1l2agK)))
                                                               (list
                                                                 g$lhs$9167$1l2agK
                                                                 g$rhs$9168$1l2agK)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$9168$1l2agK
                                                                   '(t))))))
                                                          g$lhs*$9165$1l2agK
                                                          g$rhs*$9166$1l2agK)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9163$1l2agK
                                                         g$b*$9164$1l2agK)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9161$1l2agK
                                           g$orhs*$9162$1l2agK)))))
                                  (g$generate-temporaries$7752$1l2agK
                                    g$olhs*$9161$1l2agK)
                                  (g$generate-temporaries$7752$1l2agK
                                    g$orhs*$9162$1l2agK))))
                              g$ls/false$9160$1l2agK)
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"invalid syntax"
                              g$t$9159$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$9159$1l2agK
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9155$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$9155$1l2agK
               '(_ () any . each-any)))))
         g$e$9154$1l2agK))))
   (g$foreign-call-transformer$7649$1l2agK
     g$foreign-call-transformer$11095$1l2agK
     (case-lambda
       ((g$e$9169$1l2agK g$r$9170$1l2agK g$mr$9171$1l2agK)
        ((case-lambda
           ((g$t$9172$1l2agK)
            ((case-lambda
               ((g$ls/false$9173$1l2agK)
                (if g$ls/false$9173$1l2agK
                  (apply
                    (case-lambda
                      ((g$name$9174$1l2agK g$arg*$9175$1l2agK)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7669$1l2agK
                             g$name$9174$1l2agK
                             g$r$9170$1l2agK
                             g$mr$9171$1l2agK)
                           (g$chi-expr*$7667$1l2agK
                             g$arg*$9175$1l2agK
                             g$r$9170$1l2agK
                             g$mr$9171$1l2agK)))))
                    g$ls/false$9173$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$9172$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$9172$1l2agK
               '(_ any . each-any)))))
         g$e$9169$1l2agK))))
   (g$convert-pattern$7650$1l2agK
     g$convert-pattern$11096$1l2agK
     (case-lambda
       ((g$pattern$9176$1l2agK g$keys$9177$1l2agK)
        (letrec* ((g$cvt*$9178$1l2agK
                    (case-lambda
                      ((g$p*$9258$1l2agK g$n$9259$1l2agK g$ids$9260$1l2agK)
                       (if (null? g$p*$9258$1l2agK)
                         (values '() g$ids$9260$1l2agK)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9178$1l2agK
                                (cdr g$p*$9258$1l2agK)
                                g$n$9259$1l2agK
                                g$ids$9260$1l2agK)))
                           (case-lambda
                             ((g$y$9263$1l2agK g$ids$9264$1l2agK)
                              ((case-lambda
                                 ((g$ids$9265$1l2agK g$y$9266$1l2agK)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9179$1l2agK
                                         (car g$p*$9258$1l2agK)
                                         g$n$9259$1l2agK
                                         g$ids$9265$1l2agK)))
                                    (case-lambda
                                      ((g$x$9269$1l2agK g$ids$9270$1l2agK)
                                       ((case-lambda
                                          ((g$ids$9271$1l2agK g$x$9272$1l2agK)
                                           (values
                                             (cons
                                               g$x$9272$1l2agK
                                               g$y$9266$1l2agK)
                                             g$ids$9271$1l2agK)))
                                        g$ids$9270$1l2agK
                                        g$x$9269$1l2agK))))))
                               g$ids$9264$1l2agK
                               g$y$9263$1l2agK))))))))
                  (g$cvt$9179$1l2agK
                    (case-lambda
                      ((g$p$9180$1l2agK g$n$9181$1l2agK g$ids$9182$1l2agK)
                       ((case-lambda
                          ((g$t$9183$1l2agK)
                           ((case-lambda
                              ((g$ls/false$9184$1l2agK)
                               (if (if g$ls/false$9184$1l2agK
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9185$1l2agK)
                                            (g$id?$7373$1l2agK
                                              g$id$9185$1l2agK)))
                                         g$ls/false$9184$1l2agK))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9186$1l2agK)
                                      (if (g$bound-id-member?$7380$1l2agK
                                            g$p$9180$1l2agK
                                            g$keys$9177$1l2agK)
                                        (values
                                          (vector 'free-id g$p$9180$1l2agK)
                                          g$ids$9182$1l2agK)
                                        (if (g$free-id=?$7377$1l2agK
                                              g$p$9180$1l2agK
                                              (g$scheme-stx$7594$1l2agK '_))
                                          (values '_ g$ids$9182$1l2agK)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9180$1l2agK
                                                g$n$9181$1l2agK)
                                              g$ids$9182$1l2agK))))))
                                   g$ls/false$9184$1l2agK)
                                 ((case-lambda
                                    ((g$t$9187$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$9188$1l2agK)
                                         (if (if g$ls/false$9188$1l2agK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9189$1l2agK
                                                        g$dots$9190$1l2agK)
                                                      (g$ellipsis?$7652$1l2agK
                                                        g$dots$9190$1l2agK)))
                                                   g$ls/false$9188$1l2agK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9191$1l2agK
                                                  g$dots$9192$1l2agK)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9179$1l2agK
                                                       g$p$9191$1l2agK
                                                       (+ g$n$9181$1l2agK '1)
                                                       g$ids$9182$1l2agK)))
                                                  (case-lambda
                                                    ((g$p$9195$1l2agK
                                                       g$ids$9196$1l2agK)
                                                     ((case-lambda
                                                        ((g$ids$9197$1l2agK
                                                           g$p$9198$1l2agK)
                                                         (values
                                                           (if (eq? g$p$9198$1l2agK
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9198$1l2agK))
                                                           g$ids$9197$1l2agK)))
                                                      g$ids$9196$1l2agK
                                                      g$p$9195$1l2agK))))))
                                             g$ls/false$9188$1l2agK)
                                           ((case-lambda
                                              ((g$t$9199$1l2agK)
                                               ((case-lambda
                                                  ((g$ls/false$9200$1l2agK)
                                                   (if (if g$ls/false$9200$1l2agK
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9201$1l2agK
                                                                  g$dots$9202$1l2agK
                                                                  g$ys$9203$1l2agK
                                                                  g$z$9204$1l2agK)
                                                                (g$ellipsis?$7652$1l2agK
                                                                  g$dots$9202$1l2agK)))
                                                             g$ls/false$9200$1l2agK))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9205$1l2agK
                                                            g$dots$9206$1l2agK
                                                            g$ys$9207$1l2agK
                                                            g$z$9208$1l2agK)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9179$1l2agK
                                                                 g$z$9208$1l2agK
                                                                 g$n$9181$1l2agK
                                                                 g$ids$9182$1l2agK)))
                                                            (case-lambda
                                                              ((g$z$9211$1l2agK
                                                                 g$ids$9212$1l2agK)
                                                               ((case-lambda
                                                                  ((g$ids$9213$1l2agK
                                                                     g$z$9214$1l2agK)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9178$1l2agK
                                                                          g$ys$9207$1l2agK
                                                                          g$n$9181$1l2agK
                                                                          g$ids$9213$1l2agK)))
                                                                     (case-lambda
                                                                       ((g$ys$9217$1l2agK
                                                                          g$ids$9218$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$ids$9219$1l2agK
                                                                              g$ys$9220$1l2agK)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9179$1l2agK
                                                                                   g$x$9205$1l2agK
                                                                                   (+ g$n$9181$1l2agK
                                                                                      '1)
                                                                                   g$ids$9219$1l2agK)))
                                                                              (case-lambda
                                                                                ((g$x$9223$1l2agK
                                                                                   g$ids$9224$1l2agK)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9225$1l2agK
                                                                                       g$x$9226$1l2agK)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9226$1l2agK
                                                                                         (reverse
                                                                                           g$ys$9220$1l2agK)
                                                                                         g$z$9214$1l2agK)
                                                                                       g$ids$9225$1l2agK)))
                                                                                  g$ids$9224$1l2agK
                                                                                  g$x$9223$1l2agK))))))
                                                                         g$ids$9218$1l2agK
                                                                         g$ys$9217$1l2agK))))))
                                                                g$ids$9212$1l2agK
                                                                g$z$9211$1l2agK))))))
                                                       g$ls/false$9200$1l2agK)
                                                     ((case-lambda
                                                        ((g$t$9227$1l2agK)
                                                         ((case-lambda
                                                            ((g$ls/false$9228$1l2agK)
                                                             (if g$ls/false$9228$1l2agK
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9229$1l2agK
                                                                      g$y$9230$1l2agK)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9179$1l2agK
                                                                           g$y$9230$1l2agK
                                                                           g$n$9181$1l2agK
                                                                           g$ids$9182$1l2agK)))
                                                                      (case-lambda
                                                                        ((g$y$9233$1l2agK
                                                                           g$ids$9234$1l2agK)
                                                                         ((case-lambda
                                                                            ((g$ids$9235$1l2agK
                                                                               g$y$9236$1l2agK)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9179$1l2agK
                                                                                    g$x$9229$1l2agK
                                                                                    g$n$9181$1l2agK
                                                                                    g$ids$9235$1l2agK)))
                                                                               (case-lambda
                                                                                 ((g$x$9239$1l2agK
                                                                                    g$ids$9240$1l2agK)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9241$1l2agK
                                                                                        g$x$9242$1l2agK)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9242$1l2agK
                                                                                          g$y$9236$1l2agK)
                                                                                        g$ids$9241$1l2agK)))
                                                                                   g$ids$9240$1l2agK
                                                                                   g$x$9239$1l2agK))))))
                                                                          g$ids$9234$1l2agK
                                                                          g$y$9233$1l2agK))))))
                                                                 g$ls/false$9228$1l2agK)
                                                               ((case-lambda
                                                                  ((g$t$9243$1l2agK)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9244$1l2agK)
                                                                       (if g$ls/false$9244$1l2agK
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9182$1l2agK)))
                                                                           g$ls/false$9244$1l2agK)
                                                                         ((case-lambda
                                                                            ((g$t$9245$1l2agK)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9246$1l2agK)
                                                                                 (if (if g$ls/false$9246$1l2agK
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9247$1l2agK)
                                                                                              (not (g$stx?$7345$1l2agK
                                                                                                     g$p$9247$1l2agK))))
                                                                                           g$ls/false$9246$1l2agK))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9248$1l2agK)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9179$1l2agK
                                                                                               g$p$9248$1l2agK
                                                                                               g$n$9181$1l2agK
                                                                                               g$ids$9182$1l2agK)))
                                                                                          (case-lambda
                                                                                            ((g$p$9251$1l2agK
                                                                                               g$ids$9252$1l2agK)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9253$1l2agK
                                                                                                   g$p$9254$1l2agK)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9254$1l2agK)
                                                                                                   g$ids$9253$1l2agK)))
                                                                                              g$ids$9252$1l2agK
                                                                                              g$p$9251$1l2agK))))))
                                                                                     g$ls/false$9246$1l2agK)
                                                                                   ((case-lambda
                                                                                      ((g$t$9255$1l2agK)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9256$1l2agK)
                                                                                           (if g$ls/false$9256$1l2agK
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9257$1l2agK)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7384$1l2agK
                                                                                                        g$datum$9257$1l2agK))
                                                                                                    g$ids$9182$1l2agK)))
                                                                                               g$ls/false$9256$1l2agK)
                                                                                             (g$syntax-violation$7762$1l2agK
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9255$1l2agK))))
                                                                                        (g$syntax-dispatch$7651$1l2agK
                                                                                          g$t$9255$1l2agK
                                                                                          'any))))
                                                                                    g$t$9245$1l2agK))))
                                                                              (g$syntax-dispatch$7651$1l2agK
                                                                                g$t$9245$1l2agK
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9243$1l2agK))))
                                                                    (g$syntax-dispatch$7651$1l2agK
                                                                      g$t$9243$1l2agK
                                                                      '()))))
                                                                g$t$9227$1l2agK))))
                                                          (g$syntax-dispatch$7651$1l2agK
                                                            g$t$9227$1l2agK
                                                            '(any . any)))))
                                                      g$t$9199$1l2agK))))
                                                (g$syntax-dispatch$7651$1l2agK
                                                  g$t$9199$1l2agK
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9187$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$9187$1l2agK
                                        '(any any)))))
                                  g$t$9183$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$9183$1l2agK
                              'any))))
                        g$p$9180$1l2agK)))))
          (g$cvt$9179$1l2agK g$pattern$9176$1l2agK '0 '())))))
   (g$syntax-dispatch$7651$1l2agK
     g$syntax-dispatch$11097$1l2agK
     (case-lambda
       ((g$e$9273$1l2agK g$p$9274$1l2agK)
        (letrec* ((g$stx^$9275$1l2agK
                    (case-lambda
                      ((g$e$9383$1l2agK
                         g$m*$9384$1l2agK
                         g$s*$9385$1l2agK
                         g$ae*$9386$1l2agK)
                       (if (if (null? g$m*$9384$1l2agK)
                             (if (null? g$s*$9385$1l2agK)
                               (begin '#f (null? g$ae*$9386$1l2agK))
                               '#f)
                             '#f)
                         g$e$9383$1l2agK
                         (g$mkstx$7361$1l2agK
                           g$e$9383$1l2agK
                           g$m*$9384$1l2agK
                           g$s*$9385$1l2agK
                           g$ae*$9386$1l2agK)))))
                  (g$match-each$9276$1l2agK
                    (case-lambda
                      ((g$e$9367$1l2agK
                         g$p$9368$1l2agK
                         g$m*$9369$1l2agK
                         g$s*$9370$1l2agK
                         g$ae*$9371$1l2agK)
                       (if (pair? g$e$9367$1l2agK)
                         ((case-lambda
                            ((g$first$9372$1l2agK)
                             (if g$first$9372$1l2agK
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9373$1l2agK)
                                     (if g$rest$9373$1l2agK
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9372$1l2agK
                                           g$rest$9373$1l2agK))
                                       '#f)))
                                  (g$match-each$9276$1l2agK
                                    (cdr g$e$9367$1l2agK)
                                    g$p$9368$1l2agK
                                    g$m*$9369$1l2agK
                                    g$s*$9370$1l2agK
                                    g$ae*$9371$1l2agK)))
                               '#f)))
                          (g$match$9282$1l2agK
                            (car g$e$9367$1l2agK)
                            g$p$9368$1l2agK
                            g$m*$9369$1l2agK
                            g$s*$9370$1l2agK
                            g$ae*$9371$1l2agK
                            '()))
                         (if (null? g$e$9367$1l2agK)
                           '()
                           (if (g$stx?$7345$1l2agK g$e$9367$1l2agK)
                             (if (not (g$top-marked?$7316$1l2agK
                                        g$m*$9369$1l2agK))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7360$1l2agK
                                        g$m*$9369$1l2agK
                                        g$s*$9370$1l2agK
                                        g$ae*$9371$1l2agK
                                        g$e$9367$1l2agK)))
                                   (case-lambda
                                     ((g$m*$9377$1l2agK
                                        g$s*$9378$1l2agK
                                        g$ae*$9379$1l2agK)
                                      ((case-lambda
                                         ((g$ae*$9380$1l2agK
                                            g$s*$9381$1l2agK
                                            g$m*$9382$1l2agK)
                                          (g$match-each$9276$1l2agK
                                            (g$stx-expr$7347$1l2agK
                                              g$e$9367$1l2agK)
                                            g$p$9368$1l2agK
                                            g$m*$9382$1l2agK
                                            g$s*$9381$1l2agK
                                            g$ae*$9380$1l2agK)))
                                       g$ae*$9379$1l2agK
                                       g$s*$9378$1l2agK
                                       g$m*$9377$1l2agK)))))
                               '#f)
                             (if (annotation? g$e$9367$1l2agK)
                               (g$match-each$9276$1l2agK
                                 (annotation-expression g$e$9367$1l2agK)
                                 g$p$9368$1l2agK
                                 g$m*$9369$1l2agK
                                 g$s*$9370$1l2agK
                                 g$ae*$9371$1l2agK)
                               '#f)))))))
                  (g$match-each+$9277$1l2agK
                    (case-lambda
                      ((g$e$9335$1l2agK
                         g$x-pat$9336$1l2agK
                         g$y-pat$9337$1l2agK
                         g$z-pat$9338$1l2agK
                         g$m*$9339$1l2agK
                         g$s*$9340$1l2agK
                         g$ae*$9341$1l2agK
                         g$r$9342$1l2agK)
                       ((letrec ((g$f$9343$1l2agK
                                   (case-lambda
                                     ((g$e$9344$1l2agK
                                        g$m*$9345$1l2agK
                                        g$s*$9346$1l2agK
                                        g$ae*$9347$1l2agK)
                                      (if (pair? g$e$9344$1l2agK)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9343$1l2agK
                                               (cdr g$e$9344$1l2agK)
                                               g$m*$9345$1l2agK
                                               g$s*$9346$1l2agK
                                               g$ae*$9347$1l2agK)))
                                          (case-lambda
                                            ((g$xr*$9351$1l2agK
                                               g$y-pat$9352$1l2agK
                                               g$r$9353$1l2agK)
                                             ((case-lambda
                                                ((g$r$9354$1l2agK
                                                   g$y-pat$9355$1l2agK
                                                   g$xr*$9356$1l2agK)
                                                 (if g$r$9354$1l2agK
                                                   (if (null?
                                                         g$y-pat$9355$1l2agK)
                                                     ((case-lambda
                                                        ((g$xr$9357$1l2agK)
                                                         (if g$xr$9357$1l2agK
                                                           (values
                                                             (cons
                                                               g$xr$9357$1l2agK
                                                               g$xr*$9356$1l2agK)
                                                             g$y-pat$9355$1l2agK
                                                             g$r$9354$1l2agK)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9282$1l2agK
                                                        (car g$e$9344$1l2agK)
                                                        g$x-pat$9336$1l2agK
                                                        g$m*$9345$1l2agK
                                                        g$s*$9346$1l2agK
                                                        g$ae*$9347$1l2agK
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9355$1l2agK)
                                                       (g$match$9282$1l2agK
                                                         (car g$e$9344$1l2agK)
                                                         (car g$y-pat$9355$1l2agK)
                                                         g$m*$9345$1l2agK
                                                         g$s*$9346$1l2agK
                                                         g$ae*$9347$1l2agK
                                                         g$r$9354$1l2agK)))
                                                   (values '#f '#f '#f))))
                                              g$r$9353$1l2agK
                                              g$y-pat$9352$1l2agK
                                              g$xr*$9351$1l2agK))))
                                        (if (g$stx?$7345$1l2agK g$e$9344$1l2agK)
                                          (if (g$top-marked?$7316$1l2agK
                                                g$m*$9345$1l2agK)
                                            (values
                                              '()
                                              g$y-pat$9337$1l2agK
                                              (g$match$9282$1l2agK
                                                g$e$9344$1l2agK
                                                g$z-pat$9338$1l2agK
                                                g$m*$9345$1l2agK
                                                g$s*$9346$1l2agK
                                                g$ae*$9347$1l2agK
                                                g$r$9342$1l2agK))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7360$1l2agK
                                                   g$m*$9345$1l2agK
                                                   g$s*$9346$1l2agK
                                                   g$ae*$9347$1l2agK
                                                   g$e$9344$1l2agK)))
                                              (case-lambda
                                                ((g$m*$9361$1l2agK
                                                   g$s*$9362$1l2agK
                                                   g$ae*$9363$1l2agK)
                                                 ((case-lambda
                                                    ((g$ae*$9364$1l2agK
                                                       g$s*$9365$1l2agK
                                                       g$m*$9366$1l2agK)
                                                     (g$f$9343$1l2agK
                                                       (g$stx-expr$7347$1l2agK
                                                         g$e$9344$1l2agK)
                                                       g$m*$9366$1l2agK
                                                       g$s*$9365$1l2agK
                                                       g$ae*$9364$1l2agK)))
                                                  g$ae*$9363$1l2agK
                                                  g$s*$9362$1l2agK
                                                  g$m*$9361$1l2agK)))))
                                          (if (annotation? g$e$9344$1l2agK)
                                            (g$f$9343$1l2agK
                                              (annotation-expression
                                                g$e$9344$1l2agK)
                                              g$m*$9345$1l2agK
                                              g$s*$9346$1l2agK
                                              g$ae*$9347$1l2agK)
                                            (values
                                              '()
                                              g$y-pat$9337$1l2agK
                                              (g$match$9282$1l2agK
                                                g$e$9344$1l2agK
                                                g$z-pat$9338$1l2agK
                                                g$m*$9345$1l2agK
                                                g$s*$9346$1l2agK
                                                g$ae*$9347$1l2agK
                                                g$r$9342$1l2agK)))))))))
                          g$f$9343$1l2agK)
                        g$e$9335$1l2agK
                        g$m*$9339$1l2agK
                        g$s*$9340$1l2agK
                        g$ae*$9341$1l2agK))))
                  (g$match-each-any$9278$1l2agK
                    (case-lambda
                      ((g$e$9321$1l2agK
                         g$m*$9322$1l2agK
                         g$s*$9323$1l2agK
                         g$ae*$9324$1l2agK)
                       (if (pair? g$e$9321$1l2agK)
                         ((case-lambda
                            ((g$l$9325$1l2agK)
                             (if g$l$9325$1l2agK
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9275$1l2agK
                                     (car g$e$9321$1l2agK)
                                     g$m*$9322$1l2agK
                                     g$s*$9323$1l2agK
                                     g$ae*$9324$1l2agK)
                                   g$l$9325$1l2agK))
                               '#f)))
                          (g$match-each-any$9278$1l2agK
                            (cdr g$e$9321$1l2agK)
                            g$m*$9322$1l2agK
                            g$s*$9323$1l2agK
                            g$ae*$9324$1l2agK))
                         (if (null? g$e$9321$1l2agK)
                           '()
                           (if (g$stx?$7345$1l2agK g$e$9321$1l2agK)
                             (if (not (g$top-marked?$7316$1l2agK
                                        g$m*$9322$1l2agK))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7360$1l2agK
                                        g$m*$9322$1l2agK
                                        g$s*$9323$1l2agK
                                        g$ae*$9324$1l2agK
                                        g$e$9321$1l2agK)))
                                   (case-lambda
                                     ((g$m*$9329$1l2agK
                                        g$s*$9330$1l2agK
                                        g$ae*$9331$1l2agK)
                                      ((case-lambda
                                         ((g$ae*$9332$1l2agK
                                            g$s*$9333$1l2agK
                                            g$m*$9334$1l2agK)
                                          (g$match-each-any$9278$1l2agK
                                            (g$stx-expr$7347$1l2agK
                                              g$e$9321$1l2agK)
                                            g$m*$9334$1l2agK
                                            g$s*$9333$1l2agK
                                            g$ae*$9332$1l2agK)))
                                       g$ae*$9331$1l2agK
                                       g$s*$9330$1l2agK
                                       g$m*$9329$1l2agK)))))
                               '#f)
                             (if (annotation? g$e$9321$1l2agK)
                               (g$match-each-any$9278$1l2agK
                                 (annotation-expression g$e$9321$1l2agK)
                                 g$m*$9322$1l2agK
                                 g$s*$9323$1l2agK
                                 g$ae*$9324$1l2agK)
                               '#f)))))))
                  (g$match-empty$9279$1l2agK
                    (case-lambda
                      ((g$p$9318$1l2agK g$r$9319$1l2agK)
                       (if (null? g$p$9318$1l2agK)
                         g$r$9319$1l2agK
                         (if (eq? g$p$9318$1l2agK '_)
                           g$r$9319$1l2agK
                           (if (eq? g$p$9318$1l2agK 'any)
                             (cons '() g$r$9319$1l2agK)
                             (if (pair? g$p$9318$1l2agK)
                               (g$match-empty$9279$1l2agK
                                 (car g$p$9318$1l2agK)
                                 (g$match-empty$9279$1l2agK
                                   (cdr g$p$9318$1l2agK)
                                   g$r$9319$1l2agK))
                               (if (eq? g$p$9318$1l2agK 'each-any)
                                 (cons '() g$r$9319$1l2agK)
                                 ((case-lambda
                                    ((g$t$9320$1l2agK)
                                     (if (memv g$t$9320$1l2agK '(each))
                                       (g$match-empty$9279$1l2agK
                                         (vector-ref g$p$9318$1l2agK '1)
                                         g$r$9319$1l2agK)
                                       (if (memv g$t$9320$1l2agK '(each+))
                                         (g$match-empty$9279$1l2agK
                                           (vector-ref g$p$9318$1l2agK '1)
                                           (g$match-empty$9279$1l2agK
                                             (reverse
                                               (vector-ref g$p$9318$1l2agK '2))
                                             (g$match-empty$9279$1l2agK
                                               (vector-ref g$p$9318$1l2agK '3)
                                               g$r$9319$1l2agK)))
                                         (if (memv
                                               g$t$9320$1l2agK
                                               '(free-id atom))
                                           g$r$9319$1l2agK
                                           (if (memv
                                                 g$t$9320$1l2agK
                                                 '(scheme-id atom))
                                             g$r$9319$1l2agK
                                             (if (memv
                                                   g$t$9320$1l2agK
                                                   '(vector))
                                               (g$match-empty$9279$1l2agK
                                                 (vector-ref g$p$9318$1l2agK '1)
                                                 g$r$9319$1l2agK)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9318$1l2agK))))))))
                                  (vector-ref g$p$9318$1l2agK '0))))))))))
                  (g$combine$9280$1l2agK
                    (case-lambda
                      ((g$r*$9316$1l2agK g$r$9317$1l2agK)
                       (if (null? (car g$r*$9316$1l2agK))
                         g$r$9317$1l2agK
                         (cons
                           (map car g$r*$9316$1l2agK)
                           (g$combine$9280$1l2agK
                             (map cdr g$r*$9316$1l2agK)
                             g$r$9317$1l2agK))))))
                  (g$match*$9281$1l2agK
                    (case-lambda
                      ((g$e$9298$1l2agK
                         g$p$9299$1l2agK
                         g$m*$9300$1l2agK
                         g$s*$9301$1l2agK
                         g$ae*$9302$1l2agK
                         g$r$9303$1l2agK)
                       (if (null? g$p$9299$1l2agK)
                         (if (null? g$e$9298$1l2agK)
                           (begin '#f g$r$9303$1l2agK)
                           '#f)
                         (if (pair? g$p$9299$1l2agK)
                           (if (pair? g$e$9298$1l2agK)
                             (begin
                               '#f
                               (g$match$9282$1l2agK
                                 (car g$e$9298$1l2agK)
                                 (car g$p$9299$1l2agK)
                                 g$m*$9300$1l2agK
                                 g$s*$9301$1l2agK
                                 g$ae*$9302$1l2agK
                                 (g$match$9282$1l2agK
                                   (cdr g$e$9298$1l2agK)
                                   (cdr g$p$9299$1l2agK)
                                   g$m*$9300$1l2agK
                                   g$s*$9301$1l2agK
                                   g$ae*$9302$1l2agK
                                   g$r$9303$1l2agK)))
                             '#f)
                           (if (eq? g$p$9299$1l2agK 'each-any)
                             ((case-lambda
                                ((g$l$9304$1l2agK)
                                 (if g$l$9304$1l2agK
                                   (begin
                                     '#f
                                     (cons g$l$9304$1l2agK g$r$9303$1l2agK))
                                   '#f)))
                              (g$match-each-any$9278$1l2agK
                                g$e$9298$1l2agK
                                g$m*$9300$1l2agK
                                g$s*$9301$1l2agK
                                g$ae*$9302$1l2agK))
                             ((case-lambda
                                ((g$t$9305$1l2agK)
                                 (if (memv g$t$9305$1l2agK '(each))
                                   (if (null? g$e$9298$1l2agK)
                                     (g$match-empty$9279$1l2agK
                                       (vector-ref g$p$9299$1l2agK '1)
                                       g$r$9303$1l2agK)
                                     ((case-lambda
                                        ((g$r*$9306$1l2agK)
                                         (if g$r*$9306$1l2agK
                                           (begin
                                             '#f
                                             (g$combine$9280$1l2agK
                                               g$r*$9306$1l2agK
                                               g$r$9303$1l2agK))
                                           '#f)))
                                      (g$match-each$9276$1l2agK
                                        g$e$9298$1l2agK
                                        (vector-ref g$p$9299$1l2agK '1)
                                        g$m*$9300$1l2agK
                                        g$s*$9301$1l2agK
                                        g$ae*$9302$1l2agK)))
                                   (if (memv g$t$9305$1l2agK '(free-id))
                                     (if (symbol? g$e$9298$1l2agK)
                                       (if (g$top-marked?$7316$1l2agK
                                             g$m*$9300$1l2agK)
                                         (if (g$free-id=?$7377$1l2agK
                                               (g$stx^$9275$1l2agK
                                                 g$e$9298$1l2agK
                                                 g$m*$9300$1l2agK
                                                 g$s*$9301$1l2agK
                                                 g$ae*$9302$1l2agK)
                                               (vector-ref g$p$9299$1l2agK '1))
                                           (begin '#f g$r$9303$1l2agK)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (memv g$t$9305$1l2agK '(scheme-id))
                                       (if (symbol? g$e$9298$1l2agK)
                                         (if (g$top-marked?$7316$1l2agK
                                               g$m*$9300$1l2agK)
                                           (if (g$free-id=?$7377$1l2agK
                                                 (g$stx^$9275$1l2agK
                                                   g$e$9298$1l2agK
                                                   g$m*$9300$1l2agK
                                                   g$s*$9301$1l2agK
                                                   g$ae*$9302$1l2agK)
                                                 (g$scheme-stx$7594$1l2agK
                                                   (vector-ref
                                                     g$p$9299$1l2agK
                                                     '1)))
                                             (begin '#f g$r$9303$1l2agK)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (memv g$t$9305$1l2agK '(each+))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9277$1l2agK
                                                g$e$9298$1l2agK
                                                (vector-ref g$p$9299$1l2agK '1)
                                                (vector-ref g$p$9299$1l2agK '2)
                                                (vector-ref g$p$9299$1l2agK '3)
                                                g$m*$9300$1l2agK
                                                g$s*$9301$1l2agK
                                                g$ae*$9302$1l2agK
                                                g$r$9303$1l2agK)))
                                           (case-lambda
                                             ((g$xr*$9310$1l2agK
                                                g$y-pat$9311$1l2agK
                                                g$r$9312$1l2agK)
                                              ((case-lambda
                                                 ((g$r$9313$1l2agK
                                                    g$y-pat$9314$1l2agK
                                                    g$xr*$9315$1l2agK)
                                                  (if g$r$9313$1l2agK
                                                    (if (null?
                                                          g$y-pat$9314$1l2agK)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9315$1l2agK)
                                                          (g$match-empty$9279$1l2agK
                                                            (vector-ref
                                                              g$p$9299$1l2agK
                                                              '1)
                                                            g$r$9313$1l2agK)
                                                          (g$combine$9280$1l2agK
                                                            g$xr*$9315$1l2agK
                                                            g$r$9313$1l2agK)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9312$1l2agK
                                               g$y-pat$9311$1l2agK
                                               g$xr*$9310$1l2agK))))
                                         (if (memv g$t$9305$1l2agK '(atom))
                                           (if (equal?
                                                 (vector-ref g$p$9299$1l2agK '1)
                                                 (g$strip$7383$1l2agK
                                                   g$e$9298$1l2agK
                                                   g$m*$9300$1l2agK))
                                             (begin '#f g$r$9303$1l2agK)
                                             '#f)
                                           (if (memv g$t$9305$1l2agK '(vector))
                                             (if (vector? g$e$9298$1l2agK)
                                               (begin
                                                 '#f
                                                 (g$match$9282$1l2agK
                                                   (vector->list
                                                     g$e$9298$1l2agK)
                                                   (vector-ref
                                                     g$p$9299$1l2agK
                                                     '1)
                                                   g$m*$9300$1l2agK
                                                   g$s*$9301$1l2agK
                                                   g$ae*$9302$1l2agK
                                                   g$r$9303$1l2agK))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9299$1l2agK)))))))))
                              (vector-ref g$p$9299$1l2agK '0))))))))
                  (g$match$9282$1l2agK
                    (case-lambda
                      ((g$e$9283$1l2agK
                         g$p$9284$1l2agK
                         g$m*$9285$1l2agK
                         g$s*$9286$1l2agK
                         g$ae*$9287$1l2agK
                         g$r$9288$1l2agK)
                       (if (not g$r$9288$1l2agK)
                         '#f
                         (if (eq? g$p$9284$1l2agK '_)
                           g$r$9288$1l2agK
                           (if (eq? g$p$9284$1l2agK 'any)
                             (cons
                               (g$stx^$9275$1l2agK
                                 g$e$9283$1l2agK
                                 g$m*$9285$1l2agK
                                 g$s*$9286$1l2agK
                                 g$ae*$9287$1l2agK)
                               g$r$9288$1l2agK)
                             (if (g$stx?$7345$1l2agK g$e$9283$1l2agK)
                               (if (not (g$top-marked?$7316$1l2agK
                                          g$m*$9285$1l2agK))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7360$1l2agK
                                          g$m*$9285$1l2agK
                                          g$s*$9286$1l2agK
                                          g$ae*$9287$1l2agK
                                          g$e$9283$1l2agK)))
                                     (case-lambda
                                       ((g$m*$9292$1l2agK
                                          g$s*$9293$1l2agK
                                          g$ae*$9294$1l2agK)
                                        ((case-lambda
                                           ((g$ae*$9295$1l2agK
                                              g$s*$9296$1l2agK
                                              g$m*$9297$1l2agK)
                                            (g$match$9282$1l2agK
                                              (g$stx-expr$7347$1l2agK
                                                g$e$9283$1l2agK)
                                              g$p$9284$1l2agK
                                              g$m*$9297$1l2agK
                                              g$s*$9296$1l2agK
                                              g$ae*$9295$1l2agK
                                              g$r$9288$1l2agK)))
                                         g$ae*$9294$1l2agK
                                         g$s*$9293$1l2agK
                                         g$m*$9292$1l2agK)))))
                                 '#f)
                               (if (annotation? g$e$9283$1l2agK)
                                 (g$match$9282$1l2agK
                                   (annotation-expression g$e$9283$1l2agK)
                                   g$p$9284$1l2agK
                                   g$m*$9285$1l2agK
                                   g$s*$9286$1l2agK
                                   g$ae*$9287$1l2agK
                                   g$r$9288$1l2agK)
                                 (g$match*$9281$1l2agK
                                   g$e$9283$1l2agK
                                   g$p$9284$1l2agK
                                   g$m*$9285$1l2agK
                                   g$s*$9286$1l2agK
                                   g$ae*$9287$1l2agK
                                   g$r$9288$1l2agK))))))))))
          (g$match$9282$1l2agK
            g$e$9273$1l2agK
            g$p$9274$1l2agK
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$7652$1l2agK
     g$ellipsis?$11098$1l2agK
     (case-lambda
       ((g$x$9387$1l2agK)
        (if (g$id?$7373$1l2agK g$x$9387$1l2agK)
          (begin
            '#f
            (g$free-id=?$7377$1l2agK
              g$x$9387$1l2agK
              (g$scheme-stx$7594$1l2agK '...)))
          '#f))))
   (g$underscore?$7653$1l2agK
     g$underscore?$11099$1l2agK
     (case-lambda
       ((g$x$9388$1l2agK)
        (if (g$id?$7373$1l2agK g$x$9388$1l2agK)
          (begin
            '#f
            (g$free-id=?$7377$1l2agK
              g$x$9388$1l2agK
              (g$scheme-stx$7594$1l2agK '_)))
          '#f))))
   (g$verify-literals$7654$1l2agK
     g$verify-literals$11100$1l2agK
     (case-lambda
       ((g$lits$9389$1l2agK g$expr$9390$1l2agK)
        (for-each
          (case-lambda
            ((g$x$9391$1l2agK)
             (if ((case-lambda
                    ((g$t$9392$1l2agK)
                     (if g$t$9392$1l2agK
                       g$t$9392$1l2agK
                       ((case-lambda
                          ((g$t$9393$1l2agK)
                           (if g$t$9393$1l2agK
                             g$t$9393$1l2agK
                             (begin
                               '#f
                               (g$underscore?$7653$1l2agK g$x$9391$1l2agK)))))
                        (g$ellipsis?$7652$1l2agK g$x$9391$1l2agK)))))
                  (not (g$id?$7373$1l2agK g$x$9391$1l2agK)))
               (g$syntax-violation$7762$1l2agK
                 '#f
                 '"invalid literal"
                 g$expr$9390$1l2agK
                 g$x$9391$1l2agK)
               (void))))
          g$lits$9389$1l2agK))))
   (g$syntax-case-transformer$7655$1l2agK
     g$syntax-case-transformer$11101$1l2agK
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9394$1l2agK
                     (case-lambda
                       ((g$pvars$9451$1l2agK
                          g$expr$9452$1l2agK
                          g$y$9453$1l2agK
                          g$r$9454$1l2agK
                          g$mr$9455$1l2agK)
                        ((case-lambda
                           ((g$ids$9456$1l2agK g$levels$9457$1l2agK)
                            ((case-lambda
                               ((g$labels$9458$1l2agK g$new-vars$9459$1l2agK)
                                ((case-lambda
                                   ((g$body$9460$1l2agK)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7304$1l2agK
                                        '#f
                                        g$new-vars$9459$1l2agK
                                        g$body$9460$1l2agK)
                                      g$y$9453$1l2agK)))
                                 (g$chi-expr$7669$1l2agK
                                   (g$add-subst$7363$1l2agK
                                     (g$make-full-rib$7341$1l2agK
                                       g$ids$9456$1l2agK
                                       g$labels$9458$1l2agK)
                                     g$expr$9452$1l2agK)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9461$1l2agK
                                               g$var$9462$1l2agK
                                               g$level$9463$1l2agK)
                                             (cons
                                               g$label$9461$1l2agK
                                               (g$make-binding$7389$1l2agK
                                                 'syntax
                                                 (cons
                                                   g$var$9462$1l2agK
                                                   g$level$9463$1l2agK)))))
                                          g$labels$9458$1l2agK
                                          g$new-vars$9459$1l2agK
                                          (map cdr g$pvars$9451$1l2agK))
                                     g$r$9454$1l2agK)
                                   g$mr$9455$1l2agK))))
                             (map g$gen-label$7319$1l2agK g$ids$9456$1l2agK)
                             (map g$gen-lexical$7317$1l2agK
                                  g$ids$9456$1l2agK))))
                         (map car g$pvars$9451$1l2agK)
                         (map cdr g$pvars$9451$1l2agK)))))
                   (g$invalid-ids-error$9395$1l2agK
                     (case-lambda
                       ((g$id*$9445$1l2agK g$e$9446$1l2agK g$class$9447$1l2agK)
                        ((letrec ((g$find$9448$1l2agK
                                    (case-lambda
                                      ((g$id*$9449$1l2agK g$ok*$9450$1l2agK)
                                       (if (null? g$id*$9449$1l2agK)
                                         (g$syntax-violation$7762$1l2agK
                                           '#f
                                           '"invalid syntax"
                                           g$e$9446$1l2agK)
                                         (if (g$id?$7373$1l2agK
                                               (car g$id*$9449$1l2agK))
                                           (if (g$bound-id-member?$7380$1l2agK
                                                 (car g$id*$9449$1l2agK)
                                                 g$ok*$9450$1l2agK)
                                             (g$syntax-error$7759$1l2agK
                                               (car g$id*$9449$1l2agK)
                                               '"duplicate "
                                               g$class$9447$1l2agK)
                                             (g$find$9448$1l2agK
                                               (cdr g$id*$9449$1l2agK)
                                               (cons
                                                 (car g$id*$9449$1l2agK)
                                                 g$ok*$9450$1l2agK)))
                                           (g$syntax-error$7759$1l2agK
                                             (car g$id*$9449$1l2agK)
                                             '"invalid "
                                             g$class$9447$1l2agK)))))))
                           g$find$9448$1l2agK)
                         g$id*$9445$1l2agK
                         '()))))
                   (g$gen-clause$9396$1l2agK
                     (case-lambda
                       ((g$x$9425$1l2agK
                          g$keys$9426$1l2agK
                          g$clauses$9427$1l2agK
                          g$r$9428$1l2agK
                          g$mr$9429$1l2agK
                          g$pat$9430$1l2agK
                          g$fender$9431$1l2agK
                          g$expr$9432$1l2agK)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7650$1l2agK
                               g$pat$9430$1l2agK
                               g$keys$9426$1l2agK)))
                          (case-lambda
                            ((g$p$9435$1l2agK g$pvars$9436$1l2agK)
                             ((case-lambda
                                ((g$pvars$9437$1l2agK g$p$9438$1l2agK)
                                 (if (not (g$distinct-bound-ids?$7379$1l2agK
                                            (map car g$pvars$9437$1l2agK)))
                                   (g$invalid-ids-error$9395$1l2agK
                                     (map car g$pvars$9437$1l2agK)
                                     g$pat$9430$1l2agK
                                     '"pattern variable")
                                   (if (not (g$for-all$5503$1l2agK
                                              (case-lambda
                                                ((g$x$9439$1l2agK)
                                                 (not (g$ellipsis?$7652$1l2agK
                                                        (car g$x$9439$1l2agK)))))
                                              g$pvars$9437$1l2agK))
                                     (g$syntax-violation$7762$1l2agK
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9430$1l2agK)
                                     ((case-lambda
                                        ((g$y$9440$1l2agK)
                                         ((case-lambda
                                            ((g$test$9441$1l2agK)
                                             ((case-lambda
                                                ((g$conseq$9442$1l2agK)
                                                 ((case-lambda
                                                    ((g$altern$9443$1l2agK)
                                                     (list
                                                       (g$build-lambda$7304$1l2agK
                                                         '#f
                                                         (list g$y$9440$1l2agK)
                                                         (list
                                                           'if
                                                           g$test$9441$1l2agK
                                                           g$conseq$9442$1l2agK
                                                           g$altern$9443$1l2agK))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9425$1l2agK
                                                         (list
                                                           'quote
                                                           g$p$9438$1l2agK)))))
                                                  (g$gen-syntax-case$9397$1l2agK
                                                    g$x$9425$1l2agK
                                                    g$keys$9426$1l2agK
                                                    g$clauses$9427$1l2agK
                                                    g$r$9428$1l2agK
                                                    g$mr$9429$1l2agK))))
                                              (g$build-dispatch-call$9394$1l2agK
                                                g$pvars$9437$1l2agK
                                                g$expr$9432$1l2agK
                                                g$y$9440$1l2agK
                                                g$r$9428$1l2agK
                                                g$mr$9429$1l2agK))))
                                          (if (eq? g$fender$9431$1l2agK '#t)
                                            g$y$9440$1l2agK
                                            ((case-lambda
                                               ((g$call$9444$1l2agK)
                                                (list
                                                  'if
                                                  g$y$9440$1l2agK
                                                  g$call$9444$1l2agK
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9394$1l2agK
                                               g$pvars$9437$1l2agK
                                               g$fender$9431$1l2agK
                                               g$y$9440$1l2agK
                                               g$r$9428$1l2agK
                                               g$mr$9429$1l2agK))))))
                                      (g$gen-lexical$7317$1l2agK 'tmp))))))
                              g$pvars$9436$1l2agK
                              g$p$9435$1l2agK)))))))
                   (g$gen-syntax-case$9397$1l2agK
                     (case-lambda
                       ((g$x$9408$1l2agK
                          g$keys$9409$1l2agK
                          g$clauses$9410$1l2agK
                          g$r$9411$1l2agK
                          g$mr$9412$1l2agK)
                        (if (null? g$clauses$9410$1l2agK)
                          (list '(primitive syntax-error) g$x$9408$1l2agK)
                          ((case-lambda
                             ((g$t$9413$1l2agK)
                              ((case-lambda
                                 ((g$ls/false$9414$1l2agK)
                                  (if g$ls/false$9414$1l2agK
                                    (apply
                                      (case-lambda
                                        ((g$pat$9415$1l2agK g$expr$9416$1l2agK)
                                         (if (if (g$id?$7373$1l2agK
                                                   g$pat$9415$1l2agK)
                                               (if (not (g$bound-id-member?$7380$1l2agK
                                                          g$pat$9415$1l2agK
                                                          g$keys$9409$1l2agK))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7652$1l2agK
                                                          g$pat$9415$1l2agK)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7377$1l2agK
                                                 g$pat$9415$1l2agK
                                                 (g$scheme-stx$7594$1l2agK '_))
                                             (g$chi-expr$7669$1l2agK
                                               g$expr$9416$1l2agK
                                               g$r$9411$1l2agK
                                               g$mr$9412$1l2agK)
                                             ((case-lambda
                                                ((g$lab$9417$1l2agK
                                                   g$lex$9418$1l2agK)
                                                 ((case-lambda
                                                    ((g$body$9419$1l2agK)
                                                     (list
                                                       (g$build-lambda$7304$1l2agK
                                                         '#f
                                                         (list
                                                           g$lex$9418$1l2agK)
                                                         g$body$9419$1l2agK)
                                                       g$x$9408$1l2agK)))
                                                  (g$chi-expr$7669$1l2agK
                                                    (g$add-subst$7363$1l2agK
                                                      (g$make-full-rib$7341$1l2agK
                                                        (list g$pat$9415$1l2agK)
                                                        (list
                                                          g$lab$9417$1l2agK))
                                                      g$expr$9416$1l2agK)
                                                    (cons
                                                      (cons
                                                        g$lab$9417$1l2agK
                                                        (g$make-binding$7389$1l2agK
                                                          'syntax
                                                          (cons
                                                            g$lex$9418$1l2agK
                                                            '0)))
                                                      g$r$9411$1l2agK)
                                                    g$mr$9412$1l2agK))))
                                              (g$gen-label$7319$1l2agK
                                                g$pat$9415$1l2agK)
                                              (g$gen-lexical$7317$1l2agK
                                                g$pat$9415$1l2agK)))
                                           (g$gen-clause$9396$1l2agK
                                             g$x$9408$1l2agK
                                             g$keys$9409$1l2agK
                                             (cdr g$clauses$9410$1l2agK)
                                             g$r$9411$1l2agK
                                             g$mr$9412$1l2agK
                                             g$pat$9415$1l2agK
                                             '#t
                                             g$expr$9416$1l2agK))))
                                      g$ls/false$9414$1l2agK)
                                    ((case-lambda
                                       ((g$t$9420$1l2agK)
                                        ((case-lambda
                                           ((g$ls/false$9421$1l2agK)
                                            (if g$ls/false$9421$1l2agK
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9422$1l2agK
                                                     g$fender$9423$1l2agK
                                                     g$expr$9424$1l2agK)
                                                   (g$gen-clause$9396$1l2agK
                                                     g$x$9408$1l2agK
                                                     g$keys$9409$1l2agK
                                                     (cdr g$clauses$9410$1l2agK)
                                                     g$r$9411$1l2agK
                                                     g$mr$9412$1l2agK
                                                     g$pat$9422$1l2agK
                                                     g$fender$9423$1l2agK
                                                     g$expr$9424$1l2agK)))
                                                g$ls/false$9421$1l2agK)
                                              (g$syntax-violation$7762$1l2agK
                                                '#f
                                                '"invalid syntax"
                                                g$t$9420$1l2agK))))
                                         (g$syntax-dispatch$7651$1l2agK
                                           g$t$9420$1l2agK
                                           '(any any any)))))
                                     g$t$9413$1l2agK))))
                               (g$syntax-dispatch$7651$1l2agK
                                 g$t$9413$1l2agK
                                 '(any any)))))
                           (car g$clauses$9410$1l2agK)))))))
           (case-lambda
             ((g$e$9398$1l2agK g$r$9399$1l2agK g$mr$9400$1l2agK)
              ((case-lambda
                 ((g$t$9401$1l2agK)
                  ((case-lambda
                     ((g$ls/false$9402$1l2agK)
                      (if g$ls/false$9402$1l2agK
                        (apply
                          (case-lambda
                            ((g$expr$9403$1l2agK
                               g$keys$9404$1l2agK
                               g$clauses$9405$1l2agK)
                             (begin
                               (g$verify-literals$7654$1l2agK
                                 g$keys$9404$1l2agK
                                 g$e$9398$1l2agK)
                               ((case-lambda
                                  ((g$x$9406$1l2agK)
                                   ((case-lambda
                                      ((g$body$9407$1l2agK)
                                       (list
                                         (g$build-lambda$7304$1l2agK
                                           '#f
                                           (list g$x$9406$1l2agK)
                                           g$body$9407$1l2agK)
                                         (g$chi-expr$7669$1l2agK
                                           g$expr$9403$1l2agK
                                           g$r$9399$1l2agK
                                           g$mr$9400$1l2agK))))
                                    (g$gen-syntax-case$9397$1l2agK
                                      g$x$9406$1l2agK
                                      g$keys$9404$1l2agK
                                      g$clauses$9405$1l2agK
                                      g$r$9399$1l2agK
                                      g$mr$9400$1l2agK))))
                                (g$gen-lexical$7317$1l2agK 'tmp)))))
                          g$ls/false$9402$1l2agK)
                        (g$syntax-violation$7762$1l2agK
                          '#f
                          '"invalid syntax"
                          g$t$9401$1l2agK))))
                   (g$syntax-dispatch$7651$1l2agK
                     g$t$9401$1l2agK
                     '(_ any each-any . each-any)))))
               g$e$9398$1l2agK))))))))
   (g$ellipsis-map$7656$1l2agK
     g$ellipsis-map$11102$1l2agK
     (case-lambda
       ((g$proc$9464$1l2agK g$ls$9465$1l2agK . g$ls*$9466$1l2agK)
        (letrec* ((g$who$9467$1l2agK '...))
          (begin
            (if (not (list? g$ls$9465$1l2agK))
              (assertion-violation
                g$who$9467$1l2agK
                '"not a list"
                g$ls$9465$1l2agK)
              (void))
            (if (not (null? g$ls*$9466$1l2agK))
              ((case-lambda
                 ((g$n$9468$1l2agK)
                  (for-each
                    (case-lambda
                      ((g$x$9469$1l2agK)
                       (begin
                         (if (not (list? g$x$9469$1l2agK))
                           (assertion-violation
                             g$who$9467$1l2agK
                             '"not a list"
                             g$x$9469$1l2agK)
                           (void))
                         (if (not (= (length g$x$9469$1l2agK) g$n$9468$1l2agK))
                           (assertion-violation
                             g$who$9467$1l2agK
                             '"length mismatch"
                             g$ls$9465$1l2agK
                             g$x$9469$1l2agK)
                           (void)))))
                    g$ls*$9466$1l2agK)))
               (length g$ls$9465$1l2agK))
              (void))
            (apply
              map
              g$proc$9464$1l2agK
              g$ls$9465$1l2agK
              g$ls*$9466$1l2agK))))))
   (g$syntax-transformer$7657$1l2agK
     g$syntax-transformer$11103$1l2agK
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9470$1l2agK
                     (case-lambda
                       ((g$src$9530$1l2agK
                          g$e$9531$1l2agK
                          g$r$9532$1l2agK
                          g$maps$9533$1l2agK
                          g$ellipsis?$9534$1l2agK
                          g$vec?$9535$1l2agK)
                        ((case-lambda
                           ((g$t$9536$1l2agK)
                            ((case-lambda
                               ((g$ls/false$9537$1l2agK)
                                (if (if g$ls/false$9537$1l2agK
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9538$1l2agK)
                                             (g$ellipsis?$9534$1l2agK
                                               g$dots$9538$1l2agK)))
                                          g$ls/false$9537$1l2agK))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9539$1l2agK)
                                       (g$syntax-violation$7762$1l2agK
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9530$1l2agK)))
                                    g$ls/false$9537$1l2agK)
                                  ((case-lambda
                                     ((g$t$9540$1l2agK)
                                      ((case-lambda
                                         ((g$ls/false$9541$1l2agK)
                                          (if (if g$ls/false$9541$1l2agK
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9542$1l2agK)
                                                       (g$id?$7373$1l2agK
                                                         g$id$9542$1l2agK)))
                                                    g$ls/false$9541$1l2agK))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9543$1l2agK)
                                                 ((case-lambda
                                                    ((g$label$9544$1l2agK)
                                                     ((case-lambda
                                                        ((g$b$9545$1l2agK)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7390$1l2agK
                                                                        g$b$9545$1l2agK)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9548$1l2agK)
                                                                        (g$gen-ref$9471$1l2agK
                                                                          g$src$9530$1l2agK
                                                                          (car g$var.lev$9548$1l2agK)
                                                                          (cdr g$var.lev$9548$1l2agK)
                                                                          g$maps$9533$1l2agK)))
                                                                     (g$binding-value$7391$1l2agK
                                                                       g$b$9545$1l2agK))))
                                                                 (case-lambda
                                                                   ((g$var$9549$1l2agK
                                                                      g$maps$9550$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$maps$9551$1l2agK
                                                                          g$var$9552$1l2agK)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9552$1l2agK)
                                                                          g$maps$9551$1l2agK)))
                                                                     g$maps$9550$1l2agK
                                                                     g$var$9549$1l2agK))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9531$1l2agK)
                                                                 g$maps$9533$1l2agK)))))))
                                                      (g$label->binding$7388$1l2agK
                                                        g$label$9544$1l2agK
                                                        g$r$9532$1l2agK))))
                                                  (g$id->label$7386$1l2agK
                                                    g$e$9531$1l2agK))))
                                              g$ls/false$9541$1l2agK)
                                            ((case-lambda
                                               ((g$t$9553$1l2agK)
                                                ((case-lambda
                                                   ((g$ls/false$9554$1l2agK)
                                                    (if (if g$ls/false$9554$1l2agK
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9555$1l2agK
                                                                   g$e$9556$1l2agK)
                                                                 (g$ellipsis?$9534$1l2agK
                                                                   g$dots$9555$1l2agK)))
                                                              g$ls/false$9554$1l2agK))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9557$1l2agK
                                                             g$e$9558$1l2agK)
                                                           (if g$vec?$9535$1l2agK
                                                             (g$syntax-violation$7762$1l2agK
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9530$1l2agK)
                                                             (g$gen-syntax$9470$1l2agK
                                                               g$src$9530$1l2agK
                                                               g$e$9558$1l2agK
                                                               g$r$9532$1l2agK
                                                               g$maps$9533$1l2agK
                                                               (case-lambda
                                                                 ((g$x$9559$1l2agK)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9554$1l2agK)
                                                      ((case-lambda
                                                         ((g$t$9560$1l2agK)
                                                          ((case-lambda
                                                             ((g$ls/false$9561$1l2agK)
                                                              (if (if g$ls/false$9561$1l2agK
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9562$1l2agK
                                                                             g$dots$9563$1l2agK
                                                                             g$y$9564$1l2agK)
                                                                           (g$ellipsis?$9534$1l2agK
                                                                             g$dots$9563$1l2agK)))
                                                                        g$ls/false$9561$1l2agK))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9565$1l2agK
                                                                       g$dots$9566$1l2agK
                                                                       g$y$9567$1l2agK)
                                                                     ((letrec ((g$f$9568$1l2agK
                                                                                 (case-lambda
                                                                                   ((g$y$9569$1l2agK
                                                                                      g$k$9570$1l2agK)
                                                                                    ((case-lambda
                                                                                       ((g$t$9571$1l2agK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9572$1l2agK)
                                                                                            (if g$ls/false$9572$1l2agK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9570$1l2agK
                                                                                                     g$maps$9533$1l2agK)))
                                                                                                g$ls/false$9572$1l2agK)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9573$1l2agK)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9574$1l2agK)
                                                                                                      (if (if g$ls/false$9574$1l2agK
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9575$1l2agK
                                                                                                                     g$y$9576$1l2agK)
                                                                                                                   (g$ellipsis?$9534$1l2agK
                                                                                                                     g$dots$9575$1l2agK)))
                                                                                                                g$ls/false$9574$1l2agK))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9577$1l2agK
                                                                                                               g$y$9578$1l2agK)
                                                                                                             (g$f$9568$1l2agK
                                                                                                               g$y$9578$1l2agK
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9579$1l2agK)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9570$1l2agK
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9579$1l2agK))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9582$1l2agK
                                                                                                                         g$maps$9583$1l2agK)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9584$1l2agK
                                                                                                                             g$x$9585$1l2agK)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9584$1l2agK))
                                                                                                                             (g$syntax-violation$7762$1l2agK
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9530$1l2agK)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9473$1l2agK
                                                                                                                                 g$x$9585$1l2agK
                                                                                                                                 (car g$maps$9584$1l2agK))
                                                                                                                               (cdr g$maps$9584$1l2agK)))))
                                                                                                                        g$maps$9583$1l2agK
                                                                                                                        g$x$9582$1l2agK)))))))))
                                                                                                          g$ls/false$9574$1l2agK)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9586$1l2agK)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9587$1l2agK)
                                                                                                                (if g$ls/false$9587$1l2agK
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9470$1l2agK
                                                                                                                              g$src$9530$1l2agK
                                                                                                                              g$y$9569$1l2agK
                                                                                                                              g$r$9532$1l2agK
                                                                                                                              g$maps$9533$1l2agK
                                                                                                                              g$ellipsis?$9534$1l2agK
                                                                                                                              g$vec?$9535$1l2agK)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9590$1l2agK
                                                                                                                              g$maps$9591$1l2agK)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9592$1l2agK
                                                                                                                                  g$y$9593$1l2agK)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9570$1l2agK
                                                                                                                                       g$maps$9592$1l2agK)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9596$1l2agK
                                                                                                                                       g$maps$9597$1l2agK)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9598$1l2agK
                                                                                                                                           g$x$9599$1l2agK)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9472$1l2agK
                                                                                                                                             g$x$9599$1l2agK
                                                                                                                                             g$y$9593$1l2agK)
                                                                                                                                           g$maps$9598$1l2agK)))
                                                                                                                                      g$maps$9597$1l2agK
                                                                                                                                      g$x$9596$1l2agK))))))
                                                                                                                             g$maps$9591$1l2agK
                                                                                                                             g$y$9590$1l2agK))))))
                                                                                                                    g$ls/false$9587$1l2agK)
                                                                                                                  (g$syntax-violation$7762$1l2agK
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9586$1l2agK))))
                                                                                                             (g$syntax-dispatch$7651$1l2agK
                                                                                                               g$t$9586$1l2agK
                                                                                                               '_))))
                                                                                                         g$t$9573$1l2agK))))
                                                                                                   (g$syntax-dispatch$7651$1l2agK
                                                                                                     g$t$9573$1l2agK
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9571$1l2agK))))
                                                                                         (g$syntax-dispatch$7651$1l2agK
                                                                                           g$t$9571$1l2agK
                                                                                           '()))))
                                                                                     g$y$9569$1l2agK)))))
                                                                        g$f$9568$1l2agK)
                                                                      g$y$9567$1l2agK
                                                                      (case-lambda
                                                                        ((g$maps$9600$1l2agK)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9470$1l2agK
                                                                                g$src$9530$1l2agK
                                                                                g$x$9565$1l2agK
                                                                                g$r$9532$1l2agK
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9600$1l2agK)
                                                                                g$ellipsis?$9534$1l2agK
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9603$1l2agK
                                                                                g$maps$9604$1l2agK)
                                                                              ((case-lambda
                                                                                 ((g$maps$9605$1l2agK
                                                                                    g$x$9606$1l2agK)
                                                                                  (if (null?
                                                                                        (car g$maps$9605$1l2agK))
                                                                                    (g$syntax-violation$7762$1l2agK
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9530$1l2agK)
                                                                                    (values
                                                                                      (g$gen-map$9474$1l2agK
                                                                                        g$x$9606$1l2agK
                                                                                        (car g$maps$9605$1l2agK))
                                                                                      (cdr g$maps$9605$1l2agK)))))
                                                                               g$maps$9604$1l2agK
                                                                               g$x$9603$1l2agK)))))))))
                                                                  g$ls/false$9561$1l2agK)
                                                                ((case-lambda
                                                                   ((g$t$9607$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9608$1l2agK)
                                                                        (if g$ls/false$9608$1l2agK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9609$1l2agK
                                                                                 g$y$9610$1l2agK)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9470$1l2agK
                                                                                      g$src$9530$1l2agK
                                                                                      g$x$9609$1l2agK
                                                                                      g$r$9532$1l2agK
                                                                                      g$maps$9533$1l2agK
                                                                                      g$ellipsis?$9534$1l2agK
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9613$1l2agK
                                                                                      g$maps$9614$1l2agK)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9615$1l2agK
                                                                                          g$xnew$9616$1l2agK)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9470$1l2agK
                                                                                               g$src$9530$1l2agK
                                                                                               g$y$9610$1l2agK
                                                                                               g$r$9532$1l2agK
                                                                                               g$maps$9615$1l2agK
                                                                                               g$ellipsis?$9534$1l2agK
                                                                                               g$vec?$9535$1l2agK)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9619$1l2agK
                                                                                               g$maps$9620$1l2agK)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9621$1l2agK
                                                                                                   g$ynew$9622$1l2agK)
                                                                                                 (values
                                                                                                   (g$gen-cons$9475$1l2agK
                                                                                                     g$e$9531$1l2agK
                                                                                                     g$x$9609$1l2agK
                                                                                                     g$y$9610$1l2agK
                                                                                                     g$xnew$9616$1l2agK
                                                                                                     g$ynew$9622$1l2agK)
                                                                                                   g$maps$9621$1l2agK)))
                                                                                              g$maps$9620$1l2agK
                                                                                              g$ynew$9619$1l2agK))))))
                                                                                     g$maps$9614$1l2agK
                                                                                     g$xnew$9613$1l2agK))))))
                                                                            g$ls/false$9608$1l2agK)
                                                                          ((case-lambda
                                                                             ((g$t$9623$1l2agK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9624$1l2agK)
                                                                                  (if g$ls/false$9624$1l2agK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9625$1l2agK)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9470$1l2agK
                                                                                                g$src$9530$1l2agK
                                                                                                g$ls$9625$1l2agK
                                                                                                g$r$9532$1l2agK
                                                                                                g$maps$9533$1l2agK
                                                                                                g$ellipsis?$9534$1l2agK
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9628$1l2agK
                                                                                                g$maps$9629$1l2agK)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9630$1l2agK
                                                                                                    g$lsnew$9631$1l2agK)
                                                                                                  (values
                                                                                                    (g$gen-vector$9476$1l2agK
                                                                                                      g$e$9531$1l2agK
                                                                                                      g$ls$9625$1l2agK
                                                                                                      g$lsnew$9631$1l2agK)
                                                                                                    g$maps$9630$1l2agK)))
                                                                                               g$maps$9629$1l2agK
                                                                                               g$lsnew$9628$1l2agK))))))
                                                                                      g$ls/false$9624$1l2agK)
                                                                                    ((case-lambda
                                                                                       ((g$t$9632$1l2agK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9633$1l2agK)
                                                                                            (if g$ls/false$9633$1l2agK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9531$1l2agK)
                                                                                                     g$maps$9533$1l2agK)))
                                                                                                g$ls/false$9633$1l2agK)
                                                                                              (g$syntax-violation$7762$1l2agK
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9632$1l2agK))))
                                                                                         (g$syntax-dispatch$7651$1l2agK
                                                                                           g$t$9632$1l2agK
                                                                                           '_))))
                                                                                     g$t$9623$1l2agK))))
                                                                               (g$syntax-dispatch$7651$1l2agK
                                                                                 g$t$9623$1l2agK
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9607$1l2agK))))
                                                                     (g$syntax-dispatch$7651$1l2agK
                                                                       g$t$9607$1l2agK
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9560$1l2agK))))
                                                           (g$syntax-dispatch$7651$1l2agK
                                                             g$t$9560$1l2agK
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9553$1l2agK))))
                                                 (g$syntax-dispatch$7651$1l2agK
                                                   g$t$9553$1l2agK
                                                   '(any any)))))
                                             g$t$9540$1l2agK))))
                                       (g$syntax-dispatch$7651$1l2agK
                                         g$t$9540$1l2agK
                                         'any))))
                                   g$t$9536$1l2agK))))
                             (g$syntax-dispatch$7651$1l2agK
                               g$t$9536$1l2agK
                               'any))))
                         g$e$9531$1l2agK))))
                   (g$gen-ref$9471$1l2agK
                     (case-lambda
                       ((g$src$9517$1l2agK
                          g$var$9518$1l2agK
                          g$level$9519$1l2agK
                          g$maps$9520$1l2agK)
                        (if (= g$level$9519$1l2agK '0)
                          (values g$var$9518$1l2agK g$maps$9520$1l2agK)
                          (if (null? g$maps$9520$1l2agK)
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9517$1l2agK)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9471$1l2agK
                                   g$src$9517$1l2agK
                                   g$var$9518$1l2agK
                                   (- g$level$9519$1l2agK '1)
                                   (cdr g$maps$9520$1l2agK))))
                              (case-lambda
                                ((g$outer-var$9523$1l2agK
                                   g$outer-maps$9524$1l2agK)
                                 ((case-lambda
                                    ((g$outer-maps$9525$1l2agK
                                       g$outer-var$9526$1l2agK)
                                     ((case-lambda
                                        ((g$t$9527$1l2agK)
                                         (if g$t$9527$1l2agK
                                           ((case-lambda
                                              ((g$b$9528$1l2agK)
                                               (values
                                                 (cdr g$b$9528$1l2agK)
                                                 g$maps$9520$1l2agK)))
                                            g$t$9527$1l2agK)
                                           ((case-lambda
                                              ((g$inner-var$9529$1l2agK)
                                               (values
                                                 g$inner-var$9529$1l2agK
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9526$1l2agK
                                                       g$inner-var$9529$1l2agK)
                                                     (car g$maps$9520$1l2agK))
                                                   g$outer-maps$9525$1l2agK))))
                                            (g$gen-lexical$7317$1l2agK 'tmp)))))
                                      (assq
                                        g$outer-var$9526$1l2agK
                                        (car g$maps$9520$1l2agK)))))
                                  g$outer-maps$9524$1l2agK
                                  g$outer-var$9523$1l2agK)))))))))
                   (g$gen-append$9472$1l2agK
                     (case-lambda
                       ((g$x$9515$1l2agK g$y$9516$1l2agK)
                        (if (equal? g$y$9516$1l2agK ''())
                          g$x$9515$1l2agK
                          (list 'append g$x$9515$1l2agK g$y$9516$1l2agK)))))
                   (g$gen-mappend$9473$1l2agK
                     (case-lambda
                       ((g$e$9513$1l2agK g$map-env$9514$1l2agK)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9474$1l2agK
                            g$e$9513$1l2agK
                            g$map-env$9514$1l2agK)))))
                   (g$gen-map$9474$1l2agK
                     (case-lambda
                       ((g$e$9504$1l2agK g$map-env$9505$1l2agK)
                        ((case-lambda
                           ((g$formals$9506$1l2agK g$actuals$9507$1l2agK)
                            (if (eq? (car g$e$9504$1l2agK) 'ref)
                              (car g$actuals$9507$1l2agK)
                              (if (g$for-all$5503$1l2agK
                                    (case-lambda
                                      ((g$x$9508$1l2agK)
                                       (if (eq? (car g$x$9508$1l2agK) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$5022$1l2agK
                                               g$x$9508$1l2agK)
                                             g$formals$9506$1l2agK))
                                         '#f)))
                                    (cdr g$e$9504$1l2agK))
                                ((case-lambda
                                   ((g$args$9509$1l2agK)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9504$1l2agK))
                                        g$args$9509$1l2agK))))
                                 (map ((case-lambda
                                         ((g$r$9510$1l2agK)
                                          (case-lambda
                                            ((g$x$9511$1l2agK)
                                             (cdr (assq
                                                    (g$cadr$5022$1l2agK
                                                      g$x$9511$1l2agK)
                                                    g$r$9510$1l2agK))))))
                                       (map cons
                                            g$formals$9506$1l2agK
                                            g$actuals$9507$1l2agK))
                                      (cdr g$e$9504$1l2agK)))
                                (g$cons*$5505$1l2agK
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9506$1l2agK
                                    g$e$9504$1l2agK)
                                  g$actuals$9507$1l2agK)))))
                         (map cdr g$map-env$9505$1l2agK)
                         (map (case-lambda
                                ((g$x$9512$1l2agK)
                                 (list 'ref (car g$x$9512$1l2agK))))
                              g$map-env$9505$1l2agK)))))
                   (g$gen-cons$9475$1l2agK
                     (case-lambda
                       ((g$e$9496$1l2agK
                          g$x$9497$1l2agK
                          g$y$9498$1l2agK
                          g$xnew$9499$1l2agK
                          g$ynew$9500$1l2agK)
                        ((case-lambda
                           ((g$t$9501$1l2agK)
                            (if (memv g$t$9501$1l2agK '(quote))
                              (if (eq? (car g$xnew$9499$1l2agK) 'quote)
                                ((case-lambda
                                   ((g$xnew$9502$1l2agK g$ynew$9503$1l2agK)
                                    (if (if (eq? g$xnew$9502$1l2agK
                                                 g$x$9497$1l2agK)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9503$1l2agK
                                                 g$y$9498$1l2agK))
                                          '#f)
                                      (list 'quote g$e$9496$1l2agK)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9502$1l2agK
                                          g$ynew$9503$1l2agK)))))
                                 (g$cadr$5022$1l2agK g$xnew$9499$1l2agK)
                                 (g$cadr$5022$1l2agK g$ynew$9500$1l2agK))
                                (if (null?
                                      (g$cadr$5022$1l2agK g$ynew$9500$1l2agK))
                                  (list 'list g$xnew$9499$1l2agK)
                                  (list
                                    'cons
                                    g$xnew$9499$1l2agK
                                    g$ynew$9500$1l2agK)))
                              (if (memv g$t$9501$1l2agK '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9499$1l2agK
                                    (cdr g$ynew$9500$1l2agK)))
                                (list
                                  'cons
                                  g$xnew$9499$1l2agK
                                  g$ynew$9500$1l2agK)))))
                         (car g$ynew$9500$1l2agK)))))
                   (g$gen-vector$9476$1l2agK
                     (case-lambda
                       ((g$e$9493$1l2agK g$ls$9494$1l2agK g$lsnew$9495$1l2agK)
                        (if (eq? (car g$lsnew$9495$1l2agK) 'quote)
                          (if (eq? (g$cadr$5022$1l2agK g$lsnew$9495$1l2agK)
                                   g$ls$9494$1l2agK)
                            (list 'quote g$e$9493$1l2agK)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5022$1l2agK g$lsnew$9495$1l2agK))))
                          (if (eq? (car g$lsnew$9495$1l2agK) 'list)
                            (cons 'vector (cdr g$lsnew$9495$1l2agK))
                            (list 'list->vector g$lsnew$9495$1l2agK))))))
                   (g$regen$9477$1l2agK
                     (case-lambda
                       ((g$x$9490$1l2agK)
                        ((case-lambda
                           ((g$t$9491$1l2agK)
                            (if (memv g$t$9491$1l2agK '(ref))
                              (g$cadr$5022$1l2agK g$x$9490$1l2agK)
                              (if (memv g$t$9491$1l2agK '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5022$1l2agK g$x$9490$1l2agK))
                                (if (memv g$t$9491$1l2agK '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5022$1l2agK g$x$9490$1l2agK))
                                  (if (memv g$t$9491$1l2agK '(lambda))
                                    (g$build-lambda$7304$1l2agK
                                      '#f
                                      (g$cadr$5022$1l2agK g$x$9490$1l2agK)
                                      (g$regen$9477$1l2agK
                                        (g$caddr$5028$1l2agK g$x$9490$1l2agK)))
                                    (if (memv g$t$9491$1l2agK '(map))
                                      ((case-lambda
                                         ((g$ls$9492$1l2agK)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9492$1l2agK)))
                                       (map g$regen$9477$1l2agK
                                            (cdr g$x$9490$1l2agK)))
                                      (cons
                                        (list 'primitive (car g$x$9490$1l2agK))
                                        (map g$regen$9477$1l2agK
                                             (cdr g$x$9490$1l2agK))))))))))
                         (car g$x$9490$1l2agK))))))
           (case-lambda
             ((g$e$9478$1l2agK g$r$9479$1l2agK g$mr$9480$1l2agK)
              ((case-lambda
                 ((g$t$9481$1l2agK)
                  ((case-lambda
                     ((g$ls/false$9482$1l2agK)
                      (if g$ls/false$9482$1l2agK
                        (apply
                          (case-lambda
                            ((g$x$9483$1l2agK)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9470$1l2agK
                                    g$e$9478$1l2agK
                                    g$x$9483$1l2agK
                                    g$r$9479$1l2agK
                                    '()
                                    g$ellipsis?$7652$1l2agK
                                    '#f)))
                               (case-lambda
                                 ((g$e$9486$1l2agK g$maps$9487$1l2agK)
                                  ((case-lambda
                                     ((g$maps$9488$1l2agK g$e$9489$1l2agK)
                                      (g$regen$9477$1l2agK g$e$9489$1l2agK)))
                                   g$maps$9487$1l2agK
                                   g$e$9486$1l2agK))))))
                          g$ls/false$9482$1l2agK)
                        (g$syntax-violation$7762$1l2agK
                          '#f
                          '"invalid syntax"
                          g$t$9481$1l2agK))))
                   (g$syntax-dispatch$7651$1l2agK g$t$9481$1l2agK '(_ any)))))
               g$e$9478$1l2agK))))))))
   (g$core-macro-transformer$7658$1l2agK
     g$core-macro-transformer$11104$1l2agK
     (case-lambda
       ((g$name$9634$1l2agK)
        ((case-lambda
           ((g$t$9635$1l2agK)
            (if (memv g$t$9635$1l2agK '(quote))
              g$quote-transformer$7611$1l2agK
              (if (memv g$t$9635$1l2agK '(lambda))
                g$lambda-transformer$7613$1l2agK
                (if (memv g$t$9635$1l2agK '(case-lambda))
                  g$case-lambda-transformer$7612$1l2agK
                  (if (memv g$t$9635$1l2agK '(letrec))
                    g$letrec-transformer$7601$1l2agK
                    (if (memv g$t$9635$1l2agK '(letrec*))
                      g$letrec*-transformer$7602$1l2agK
                      (if (memv g$t$9635$1l2agK '(if))
                        g$if-transformer$7609$1l2agK
                        (if (memv g$t$9635$1l2agK '(foreign-call))
                          g$foreign-call-transformer$7649$1l2agK
                          (if (memv g$t$9635$1l2agK '(syntax-case))
                            g$syntax-case-transformer$7655$1l2agK
                            (if (memv g$t$9635$1l2agK '(syntax))
                              g$syntax-transformer$7657$1l2agK
                              (if (memv g$t$9635$1l2agK '(type-descriptor))
                                g$type-descriptor-transformer$7604$1l2agK
                                (if (memv
                                      g$t$9635$1l2agK
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7605$1l2agK
                                  (if (memv
                                        g$t$9635$1l2agK
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7606$1l2agK
                                    (if (memv
                                          g$t$9635$1l2agK
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7603$1l2agK
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9634$1l2agK))))))))))))))))
         g$name$9634$1l2agK))))
   (g$file-options-macro$7659$1l2agK
     g$file-options-macro$11105$1l2agK
     (case-lambda
       ((g$x$9636$1l2agK)
        (letrec* ((g$valid-option?$9637$1l2agK
                    (case-lambda
                      ((g$x$9642$1l2agK)
                       (if (g$id?$7373$1l2agK g$x$9642$1l2agK)
                         (begin
                           '#f
                           (memq
                             (g$id->sym$7374$1l2agK g$x$9642$1l2agK)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$9638$1l2agK)
              ((case-lambda
                 ((g$ls/false$9639$1l2agK)
                  (if (if g$ls/false$9639$1l2agK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$9640$1l2agK)
                               (if (g$for-all$5503$1l2agK
                                     g$valid-option?$9637$1l2agK
                                     g$opt*$9640$1l2agK)
                                 (begin
                                   '#f
                                   (g$file-options-spec$6642$1l2agK
                                     (map g$id->sym$7374$1l2agK
                                          g$opt*$9640$1l2agK)))
                                 '#f)))
                            g$ls/false$9639$1l2agK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$9641$1l2agK)
                         (g$bless$7614$1l2agK
                           (list
                             'quote
                             (g$file-options-spec$6642$1l2agK
                               (map g$id->sym$7374$1l2agK
                                    g$opt*$9641$1l2agK))))))
                      g$ls/false$9639$1l2agK)
                    (g$syntax-violation$7762$1l2agK
                      '#f
                      '"invalid syntax"
                      g$t$9638$1l2agK))))
               (g$syntax-dispatch$7651$1l2agK
                 g$t$9638$1l2agK
                 '(_ . each-any)))))
           g$x$9636$1l2agK)))))
   (g$symbol-macro$7660$1l2agK
     g$symbol-macro$11106$1l2agK
     (case-lambda
       ((g$x$9643$1l2agK g$set$9644$1l2agK)
        ((case-lambda
           ((g$t$9645$1l2agK)
            ((case-lambda
               ((g$ls/false$9646$1l2agK)
                (if (if g$ls/false$9646$1l2agK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9647$1l2agK)
                             (if (g$id?$7373$1l2agK g$name$9647$1l2agK)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7374$1l2agK g$name$9647$1l2agK)
                                   g$set$9644$1l2agK))
                               '#f)))
                          g$ls/false$9646$1l2agK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9648$1l2agK)
                       (g$bless$7614$1l2agK (list 'quote g$name$9648$1l2agK))))
                    g$ls/false$9646$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$9645$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$9645$1l2agK '(_ any)))))
         g$x$9643$1l2agK))))
   (g$macro-transformer$7661$1l2agK
     g$macro-transformer$11107$1l2agK
     (case-lambda
       ((g$x$9649$1l2agK)
        (if (procedure? g$x$9649$1l2agK)
          g$x$9649$1l2agK
          (if (symbol? g$x$9649$1l2agK)
            ((case-lambda
               ((g$t$9650$1l2agK)
                (if (memv g$t$9650$1l2agK '(define-record-type))
                  g$define-record-type-macro$7645$1l2agK
                  (if (memv g$t$9650$1l2agK '(define-struct))
                    g$define-struct-macro$7644$1l2agK
                    (if (memv g$t$9650$1l2agK '(include))
                      g$include-macro$7639$1l2agK
                      (if (memv g$t$9650$1l2agK '(cond))
                        g$cond-macro$7637$1l2agK
                        (if (memv g$t$9650$1l2agK '(let))
                          g$let-macro$7617$1l2agK
                          (if (memv g$t$9650$1l2agK '(do))
                            g$do-macro$7633$1l2agK
                            (if (memv g$t$9650$1l2agK '(or))
                              g$or-macro$7635$1l2agK
                              (if (memv g$t$9650$1l2agK '(and))
                                g$and-macro$7636$1l2agK
                                (if (memv g$t$9650$1l2agK '(let*))
                                  g$let*-macro$7634$1l2agK
                                  (if (memv g$t$9650$1l2agK '(let-values))
                                    g$let-values-macro$7618$1l2agK
                                    (if (memv g$t$9650$1l2agK '(let*-values))
                                      g$let*-values-macro$7619$1l2agK
                                      (if (memv g$t$9650$1l2agK '(syntax-rules))
                                        g$syntax-rules-macro$7641$1l2agK
                                        (if (memv g$t$9650$1l2agK '(quasiquote))
                                          g$quasiquote-macro$7642$1l2agK
                                          (if (memv
                                                g$t$9650$1l2agK
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7643$1l2agK
                                            (if (memv
                                                  g$t$9650$1l2agK
                                                  '(with-syntax))
                                              g$with-syntax-macro$7615$1l2agK
                                              (if (memv g$t$9650$1l2agK '(when))
                                                g$when-macro$7607$1l2agK
                                                (if (memv
                                                      g$t$9650$1l2agK
                                                      '(unless))
                                                  g$unless-macro$7608$1l2agK
                                                  (if (memv
                                                        g$t$9650$1l2agK
                                                        '(case))
                                                    g$case-macro$7610$1l2agK
                                                    (if (memv
                                                          g$t$9650$1l2agK
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7632$1l2agK
                                                      (if (memv
                                                            g$t$9650$1l2agK
                                                            '(time))
                                                        g$time-macro$7628$1l2agK
                                                        (if (memv
                                                              g$t$9650$1l2agK
                                                              '(delay))
                                                          g$delay-macro$7629$1l2agK
                                                          (if (memv
                                                                g$t$9650$1l2agK
                                                                '(assert))
                                                            g$assert-macro$7630$1l2agK
                                                            (if (memv
                                                                  g$t$9650$1l2agK
                                                                  '(endianness))
                                                              g$endianness-macro$7631$1l2agK
                                                              (if (memv
                                                                    g$t$9650$1l2agK
                                                                    '(guard))
                                                                g$guard-macro$7626$1l2agK
                                                                (if (memv
                                                                      g$t$9650$1l2agK
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7627$1l2agK
                                                                  (if (memv
                                                                        g$t$9650$1l2agK
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7620$1l2agK
                                                                    (if (memv
                                                                          g$t$9650$1l2agK
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7621$1l2agK
                                                                      (if (memv
                                                                            g$t$9650$1l2agK
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7622$1l2agK
                                                                        (if (memv
                                                                              g$t$9650$1l2agK
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7624$1l2agK
                                                                          (if (memv
                                                                                g$t$9650$1l2agK
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7625$1l2agK
                                                                            (if (memv
                                                                                  g$t$9650$1l2agK
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7646$1l2agK
                                                                              (if (memv
                                                                                    g$t$9650$1l2agK
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7648$1l2agK
                                                                                (if (memv
                                                                                      g$t$9650$1l2agK
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7640$1l2agK
                                                                                  (if (memv
                                                                                        g$t$9650$1l2agK
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$9651$1l2agK)
                                                                                       (g$symbol-macro$7660$1l2agK
                                                                                         g$x$9651$1l2agK
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (memv
                                                                                          g$t$9650$1l2agK
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$9652$1l2agK)
                                                                                         (g$symbol-macro$7660$1l2agK
                                                                                           g$x$9652$1l2agK
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (memv
                                                                                            g$t$9650$1l2agK
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$9653$1l2agK)
                                                                                           (g$symbol-macro$7660$1l2agK
                                                                                             g$x$9653$1l2agK
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (memv
                                                                                              g$t$9650$1l2agK
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7659$1l2agK
                                                                                          (if (memv
                                                                                                g$t$9650$1l2agK
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7647$1l2agK
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$9649$1l2agK)))))))))))))))))))))))))))))))))))))))))
             g$x$9649$1l2agK)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9649$1l2agK))))))
   (g$local-macro-transformer$7662$1l2agK
     g$local-macro-transformer$11108$1l2agK
     (case-lambda ((g$x$9654$1l2agK) (car g$x$9654$1l2agK))))
   (g$do-macro-call$7663$1l2agK
     g$do-macro-call$11109$1l2agK
     (case-lambda
       ((g$transformer$9655$1l2agK g$expr$9656$1l2agK)
        ((case-lambda
           ((g$out$9657$1l2agK)
            (begin
              ((letrec ((g$f$9658$1l2agK
                          (case-lambda
                            ((g$x$9659$1l2agK)
                             (if (not (g$stx?$7345$1l2agK g$x$9659$1l2agK))
                               (if (pair? g$x$9659$1l2agK)
                                 (begin
                                   (g$f$9658$1l2agK (car g$x$9659$1l2agK))
                                   (g$f$9658$1l2agK (cdr g$x$9659$1l2agK)))
                                 (if (vector? g$x$9659$1l2agK)
                                   (vector-for-each
                                     g$f$9658$1l2agK
                                     g$x$9659$1l2agK)
                                   (if (symbol? g$x$9659$1l2agK)
                                     (g$syntax-violation$7762$1l2agK
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9656$1l2agK
                                       g$x$9659$1l2agK)
                                     (void))))
                               (void))))))
                 g$f$9658$1l2agK)
               g$out$9657$1l2agK)
              (g$add-mark$7362$1l2agK
                (g$gen-mark$7357$1l2agK)
                g$out$9657$1l2agK
                g$expr$9656$1l2agK))))
         (g$transformer$9655$1l2agK
           (g$add-mark$7362$1l2agK
             g$anti-mark$7358$1l2agK
             g$expr$9656$1l2agK
             '#f))))))
   (g$chi-macro$7664$1l2agK
     g$chi-macro$11110$1l2agK
     (case-lambda
       ((g$p$9660$1l2agK g$e$9661$1l2agK)
        (g$do-macro-call$7663$1l2agK
          (g$macro-transformer$7661$1l2agK g$p$9660$1l2agK)
          g$e$9661$1l2agK))))
   (g$chi-local-macro$7665$1l2agK
     g$chi-local-macro$11111$1l2agK
     (case-lambda
       ((g$p$9662$1l2agK g$e$9663$1l2agK)
        (g$do-macro-call$7663$1l2agK
          (g$local-macro-transformer$7662$1l2agK g$p$9662$1l2agK)
          g$e$9663$1l2agK))))
   (g$chi-global-macro$7666$1l2agK
     g$chi-global-macro$11112$1l2agK
     (case-lambda
       ((g$p$9664$1l2agK g$e$9665$1l2agK)
        ((case-lambda
           ((g$lib$9666$1l2agK g$loc$9667$1l2agK)
            (begin
              (g$visit-library$7189$1l2agK g$lib$9666$1l2agK)
              ((case-lambda
                 ((g$x$9668$1l2agK)
                  ((case-lambda
                     ((g$transformer$9669$1l2agK)
                      (g$do-macro-call$7663$1l2agK
                        g$transformer$9669$1l2agK
                        g$e$9665$1l2agK)))
                   (if (procedure? g$x$9668$1l2agK)
                     g$x$9668$1l2agK
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9668$1l2agK)))))
               (symbol-value g$loc$9667$1l2agK)))))
         (car g$p$9664$1l2agK)
         (cdr g$p$9664$1l2agK)))))
   (g$chi-expr*$7667$1l2agK
     g$chi-expr*$11113$1l2agK
     (case-lambda
       ((g$e*$9670$1l2agK g$r$9671$1l2agK g$mr$9672$1l2agK)
        (if (null? g$e*$9670$1l2agK)
          '()
          ((case-lambda
             ((g$e$9673$1l2agK)
              (cons
                g$e$9673$1l2agK
                (g$chi-expr*$7667$1l2agK
                  (cdr g$e*$9670$1l2agK)
                  g$r$9671$1l2agK
                  g$mr$9672$1l2agK))))
           (g$chi-expr$7669$1l2agK
             (car g$e*$9670$1l2agK)
             g$r$9671$1l2agK
             g$mr$9672$1l2agK))))))
   (g$chi-application$7668$1l2agK
     g$chi-application$11114$1l2agK
     (case-lambda
       ((g$e$9674$1l2agK g$r$9675$1l2agK g$mr$9676$1l2agK)
        ((case-lambda
           ((g$t$9677$1l2agK)
            ((case-lambda
               ((g$ls/false$9678$1l2agK)
                (if g$ls/false$9678$1l2agK
                  (apply
                    (case-lambda
                      ((g$rator$9679$1l2agK g$rands$9680$1l2agK)
                       ((case-lambda
                          ((g$rator$9681$1l2agK)
                           (cons
                             g$rator$9681$1l2agK
                             (g$chi-expr*$7667$1l2agK
                               g$rands$9680$1l2agK
                               g$r$9675$1l2agK
                               g$mr$9676$1l2agK))))
                        (g$chi-expr$7669$1l2agK
                          g$rator$9679$1l2agK
                          g$r$9675$1l2agK
                          g$mr$9676$1l2agK))))
                    g$ls/false$9678$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$9677$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$9677$1l2agK
               '(any . each-any)))))
         g$e$9674$1l2agK))))
   (g$chi-expr$7669$1l2agK
     g$chi-expr$11115$1l2agK
     (case-lambda
       ((g$e$9682$1l2agK g$r$9683$1l2agK g$mr$9684$1l2agK)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7393$1l2agK g$e$9682$1l2agK g$r$9683$1l2agK)))
          (case-lambda
            ((g$type$9688$1l2agK g$value$9689$1l2agK g$kwd$9690$1l2agK)
             ((case-lambda
                ((g$kwd$9691$1l2agK g$value$9692$1l2agK g$type$9693$1l2agK)
                 ((case-lambda
                    ((g$t$9694$1l2agK)
                     (if (memv g$t$9694$1l2agK '(core-macro))
                       ((case-lambda
                          ((g$transformer$9695$1l2agK)
                           (g$transformer$9695$1l2agK
                             g$e$9682$1l2agK
                             g$r$9683$1l2agK
                             g$mr$9684$1l2agK)))
                        (g$core-macro-transformer$7658$1l2agK
                          g$value$9692$1l2agK))
                       (if (memv g$t$9694$1l2agK '(global))
                         ((case-lambda
                            ((g$lib$9696$1l2agK)
                             ((case-lambda
                                ((g$loc$9697$1l2agK)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7703$1l2agK)
                                        g$lib$9696$1l2agK)
                                       g$loc$9697$1l2agK))))))
                              (cdr g$value$9692$1l2agK))))
                          (car g$value$9692$1l2agK))
                         (if (memv g$t$9694$1l2agK '(core-prim))
                           ((case-lambda
                              ((g$name$9698$1l2agK)
                               (list 'primitive g$name$9698$1l2agK)))
                            g$value$9692$1l2agK)
                           (if (memv g$t$9694$1l2agK '(call))
                             (g$chi-application$7668$1l2agK
                               g$e$9682$1l2agK
                               g$r$9683$1l2agK
                               g$mr$9684$1l2agK)
                             (if (memv g$t$9694$1l2agK '(lexical))
                               ((case-lambda
                                  ((g$lex$9699$1l2agK) g$lex$9699$1l2agK))
                                (g$lexical-var$7595$1l2agK g$value$9692$1l2agK))
                               (if (memv
                                     g$t$9694$1l2agK
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7669$1l2agK
                                   (g$chi-global-macro$7666$1l2agK
                                     g$value$9692$1l2agK
                                     g$e$9682$1l2agK)
                                   g$r$9683$1l2agK
                                   g$mr$9684$1l2agK)
                                 (if (memv
                                       g$t$9694$1l2agK
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7669$1l2agK
                                     (g$chi-local-macro$7665$1l2agK
                                       g$value$9692$1l2agK
                                       g$e$9682$1l2agK)
                                     g$r$9683$1l2agK
                                     g$mr$9684$1l2agK)
                                   (if (memv g$t$9694$1l2agK '(macro macro!))
                                     (g$chi-expr$7669$1l2agK
                                       (g$chi-macro$7664$1l2agK
                                         g$value$9692$1l2agK
                                         g$e$9682$1l2agK)
                                       g$r$9683$1l2agK
                                       g$mr$9684$1l2agK)
                                     (if (memv g$t$9694$1l2agK '(constant))
                                       ((case-lambda
                                          ((g$datum$9700$1l2agK)
                                           (list 'quote g$datum$9700$1l2agK)))
                                        g$value$9692$1l2agK)
                                       (if (memv g$t$9694$1l2agK '(set!))
                                         (g$chi-set!$7670$1l2agK
                                           g$e$9682$1l2agK
                                           g$r$9683$1l2agK
                                           g$mr$9684$1l2agK)
                                         (if (memv g$t$9694$1l2agK '(begin))
                                           ((case-lambda
                                              ((g$t$9701$1l2agK)
                                               ((case-lambda
                                                  ((g$ls/false$9702$1l2agK)
                                                   (if g$ls/false$9702$1l2agK
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9703$1l2agK
                                                            g$x*$9704$1l2agK)
                                                          (g$build-sequence$7307$1l2agK
                                                            '#f
                                                            (g$chi-expr*$7667$1l2agK
                                                              (cons
                                                                g$x$9703$1l2agK
                                                                g$x*$9704$1l2agK)
                                                              g$r$9683$1l2agK
                                                              g$mr$9684$1l2agK))))
                                                       g$ls/false$9702$1l2agK)
                                                     (g$syntax-violation$7762$1l2agK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9701$1l2agK))))
                                                (g$syntax-dispatch$7651$1l2agK
                                                  g$t$9701$1l2agK
                                                  '(_ any . each-any)))))
                                            g$e$9682$1l2agK)
                                           (if (memv
                                                 g$t$9694$1l2agK
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9705$1l2agK)
                                                 ((case-lambda
                                                    ((g$ls/false$9706$1l2agK)
                                                     (if (if g$ls/false$9706$1l2agK
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9707$1l2agK
                                                                    g$xrhs*$9708$1l2agK
                                                                    g$xbody$9709$1l2agK
                                                                    g$xbody*$9710$1l2agK)
                                                                  (if (not (g$valid-bound-ids?$7378$1l2agK
                                                                             g$xlhs*$9707$1l2agK))
                                                                    (g$syntax-violation$7762$1l2agK
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9682$1l2agK)
                                                                    (void))))
                                                               g$ls/false$9706$1l2agK))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9711$1l2agK
                                                              g$xrhs*$9712$1l2agK
                                                              g$xbody$9713$1l2agK
                                                              g$xbody*$9714$1l2agK)
                                                            ((case-lambda
                                                               ((g$xlab*$9715$1l2agK)
                                                                ((case-lambda
                                                                   ((g$xrib$9716$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$xb*$9717$1l2agK)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7307$1l2agK
                                                                              '#f
                                                                              (g$chi-expr*$7667$1l2agK
                                                                                (map (case-lambda
                                                                                       ((g$x$9718$1l2agK)
                                                                                        (g$add-subst$7363$1l2agK
                                                                                          g$xrib$9716$1l2agK
                                                                                          g$x$9718$1l2agK)))
                                                                                     (cons
                                                                                       g$xbody$9713$1l2agK
                                                                                       g$xbody*$9714$1l2agK))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9715$1l2agK
                                                                                       g$xb*$9717$1l2agK)
                                                                                  g$r$9683$1l2agK)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9715$1l2agK
                                                                                       g$xb*$9717$1l2agK)
                                                                                  g$mr$9684$1l2agK))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9719$1l2agK)
                                                                             (g$make-eval-transformer$7405$1l2agK
                                                                               (g$expand-transformer$7696$1l2agK
                                                                                 (if (eq? g$type$9693$1l2agK
                                                                                          'let-syntax)
                                                                                   g$x$9719$1l2agK
                                                                                   (g$add-subst$7363$1l2agK
                                                                                     g$xrib$9716$1l2agK
                                                                                     g$x$9719$1l2agK))
                                                                                 g$mr$9684$1l2agK))))
                                                                          g$xrhs*$9712$1l2agK))))
                                                                 (g$make-full-rib$7341$1l2agK
                                                                   g$xlhs*$9711$1l2agK
                                                                   g$xlab*$9715$1l2agK))))
                                                             (map g$gen-label$7319$1l2agK
                                                                  g$xlhs*$9711$1l2agK))))
                                                         g$ls/false$9706$1l2agK)
                                                       (g$syntax-violation$7762$1l2agK
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9705$1l2agK))))
                                                  (g$syntax-dispatch$7651$1l2agK
                                                    g$t$9705$1l2agK
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9682$1l2agK)
                                             (if (memv
                                                   g$t$9694$1l2agK
                                                   '(displaced-lexical))
                                               (g$syntax-violation$7762$1l2agK
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9682$1l2agK)
                                               (if (memv
                                                     g$t$9694$1l2agK
                                                     '(syntax))
                                                 (g$syntax-violation$7762$1l2agK
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9682$1l2agK)
                                                 (if (memv
                                                       g$t$9694$1l2agK
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7762$1l2agK
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9720$1l2agK)
                                                           (if (memv
                                                                 g$t$9720$1l2agK
                                                                 '(define))
                                                             '"a definition"
                                                             (if (memv
                                                                   g$t$9720$1l2agK
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (memv
                                                                     g$t$9720$1l2agK
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (memv
                                                                       g$t$9720$1l2agK
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (memv
                                                                         g$t$9720$1l2agK
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9693$1l2agK)
                                                       '" was found where an expression was expected")
                                                     g$e$9682$1l2agK)
                                                   (if (memv
                                                         g$t$9694$1l2agK
                                                         '(mutable))
                                                     (g$syntax-violation$7762$1l2agK
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9682$1l2agK)
                                                     (g$syntax-violation$7762$1l2agK
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9682$1l2agK)))))))))))))))))))
                  g$type$9693$1l2agK)))
              g$kwd$9690$1l2agK
              g$value$9689$1l2agK
              g$type$9688$1l2agK)))))))
   (g$chi-set!$7670$1l2agK
     g$chi-set!$11116$1l2agK
     (case-lambda
       ((g$e$9721$1l2agK g$r$9722$1l2agK g$mr$9723$1l2agK)
        ((case-lambda
           ((g$t$9724$1l2agK)
            ((case-lambda
               ((g$ls/false$9725$1l2agK)
                (if (if g$ls/false$9725$1l2agK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9726$1l2agK g$v$9727$1l2agK)
                             (g$id?$7373$1l2agK g$x$9726$1l2agK)))
                          g$ls/false$9725$1l2agK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9728$1l2agK g$v$9729$1l2agK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7393$1l2agK
                              g$x$9728$1l2agK
                              g$r$9722$1l2agK)))
                         (case-lambda
                           ((g$type$9733$1l2agK
                              g$value$9734$1l2agK
                              g$kwd$9735$1l2agK)
                            ((case-lambda
                               ((g$kwd$9736$1l2agK
                                  g$value$9737$1l2agK
                                  g$type$9738$1l2agK)
                                ((case-lambda
                                   ((g$t$9739$1l2agK)
                                    (if (memv g$t$9739$1l2agK '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7597$1l2agK
                                          g$value$9737$1l2agK
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7595$1l2agK
                                            g$value$9737$1l2agK)
                                          (g$chi-expr$7669$1l2agK
                                            g$v$9729$1l2agK
                                            g$r$9722$1l2agK
                                            g$mr$9723$1l2agK)))
                                      (if (memv g$t$9739$1l2agK '(core-prim))
                                        (g$syntax-violation$7762$1l2agK
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9721$1l2agK)
                                        (if (memv g$t$9739$1l2agK '(global))
                                          (g$syntax-violation$7762$1l2agK
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9721$1l2agK)
                                          (if (memv
                                                g$t$9739$1l2agK
                                                '(global-macro!))
                                            (g$chi-expr$7669$1l2agK
                                              (g$chi-global-macro$7666$1l2agK
                                                g$value$9737$1l2agK
                                                g$e$9721$1l2agK)
                                              g$r$9722$1l2agK
                                              g$mr$9723$1l2agK)
                                            (if (memv
                                                  g$t$9739$1l2agK
                                                  '(local-macro!))
                                              (g$chi-expr$7669$1l2agK
                                                (g$chi-local-macro$7665$1l2agK
                                                  g$value$9737$1l2agK
                                                  g$e$9721$1l2agK)
                                                g$r$9722$1l2agK
                                                g$mr$9723$1l2agK)
                                              (if (memv
                                                    g$t$9739$1l2agK
                                                    '(mutable))
                                                (g$syntax-violation$7762$1l2agK
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9721$1l2agK)
                                                (g$syntax-violation$7762$1l2agK
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9721$1l2agK)))))))))
                                 g$type$9738$1l2agK)))
                             g$kwd$9735$1l2agK
                             g$value$9734$1l2agK
                             g$type$9733$1l2agK))))))
                    g$ls/false$9725$1l2agK)
                  (g$syntax-violation$7762$1l2agK
                    '#f
                    '"invalid syntax"
                    g$t$9724$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$9724$1l2agK '(_ any any)))))
         g$e$9721$1l2agK))))
   (g$verify-formals$7671$1l2agK
     g$verify-formals$11117$1l2agK
     (case-lambda
       ((g$fmls$9740$1l2agK g$stx$9741$1l2agK)
        ((case-lambda
           ((g$t$9742$1l2agK)
            ((case-lambda
               ((g$ls/false$9743$1l2agK)
                (if g$ls/false$9743$1l2agK
                  (apply
                    (case-lambda
                      ((g$x*$9744$1l2agK)
                       (if (not (g$valid-bound-ids?$7378$1l2agK
                                  g$x*$9744$1l2agK))
                         (g$invalid-fmls-error$7616$1l2agK
                           g$stx$9741$1l2agK
                           g$fmls$9740$1l2agK)
                         (void))))
                    g$ls/false$9743$1l2agK)
                  ((case-lambda
                     ((g$t$9745$1l2agK)
                      ((case-lambda
                         ((g$ls/false$9746$1l2agK)
                          (if g$ls/false$9746$1l2agK
                            (apply
                              (case-lambda
                                ((g$x*$9747$1l2agK g$x$9748$1l2agK)
                                 (if (not (g$valid-bound-ids?$7378$1l2agK
                                            (cons
                                              g$x$9748$1l2agK
                                              g$x*$9747$1l2agK)))
                                   (g$invalid-fmls-error$7616$1l2agK
                                     g$stx$9741$1l2agK
                                     g$fmls$9740$1l2agK)
                                   (void))))
                              g$ls/false$9746$1l2agK)
                            ((case-lambda
                               ((g$t$9749$1l2agK)
                                ((case-lambda
                                   ((g$ls/false$9750$1l2agK)
                                    (if g$ls/false$9750$1l2agK
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9741$1l2agK)))
                                        g$ls/false$9750$1l2agK)
                                      (g$syntax-violation$7762$1l2agK
                                        '#f
                                        '"invalid syntax"
                                        g$t$9749$1l2agK))))
                                 (g$syntax-dispatch$7651$1l2agK
                                   g$t$9749$1l2agK
                                   '_))))
                             g$t$9745$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$9745$1l2agK
                         '#(each+ any () any)))))
                   g$t$9742$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$9742$1l2agK 'each-any))))
         g$fmls$9740$1l2agK))))
   (g$chi-lambda-clause$7672$1l2agK
     g$chi-lambda-clause$11118$1l2agK
     (case-lambda
       ((g$stx$9751$1l2agK
          g$fmls$9752$1l2agK
          g$body*$9753$1l2agK
          g$r$9754$1l2agK
          g$mr$9755$1l2agK)
        ((case-lambda
           ((g$t$9756$1l2agK)
            ((case-lambda
               ((g$ls/false$9757$1l2agK)
                (if g$ls/false$9757$1l2agK
                  (apply
                    (case-lambda
                      ((g$x*$9758$1l2agK)
                       (begin
                         (g$verify-formals$7671$1l2agK
                           g$fmls$9752$1l2agK
                           g$stx$9751$1l2agK)
                         ((case-lambda
                            ((g$lex*$9759$1l2agK g$lab*$9760$1l2agK)
                             (values
                               g$lex*$9759$1l2agK
                               (g$chi-internal$7680$1l2agK
                                 (g$add-subst$7363$1l2agK
                                   (g$make-full-rib$7341$1l2agK
                                     g$x*$9758$1l2agK
                                     g$lab*$9760$1l2agK)
                                   g$body*$9753$1l2agK)
                                 (g$add-lexicals$7599$1l2agK
                                   g$lab*$9760$1l2agK
                                   g$lex*$9759$1l2agK
                                   g$r$9754$1l2agK)
                                 g$mr$9755$1l2agK))))
                          (map g$gen-lexical$7317$1l2agK g$x*$9758$1l2agK)
                          (map g$gen-label$7319$1l2agK g$x*$9758$1l2agK)))))
                    g$ls/false$9757$1l2agK)
                  ((case-lambda
                     ((g$t$9761$1l2agK)
                      ((case-lambda
                         ((g$ls/false$9762$1l2agK)
                          (if g$ls/false$9762$1l2agK
                            (apply
                              (case-lambda
                                ((g$x*$9763$1l2agK g$x$9764$1l2agK)
                                 (begin
                                   (g$verify-formals$7671$1l2agK
                                     g$fmls$9752$1l2agK
                                     g$stx$9751$1l2agK)
                                   ((case-lambda
                                      ((g$lex*$9765$1l2agK
                                         g$lab*$9766$1l2agK
                                         g$lex$9767$1l2agK
                                         g$lab$9768$1l2agK)
                                       (values
                                         (append
                                           g$lex*$9765$1l2agK
                                           g$lex$9767$1l2agK)
                                         (g$chi-internal$7680$1l2agK
                                           (g$add-subst$7363$1l2agK
                                             (g$make-full-rib$7341$1l2agK
                                               (cons
                                                 g$x$9764$1l2agK
                                                 g$x*$9763$1l2agK)
                                               (cons
                                                 g$lab$9768$1l2agK
                                                 g$lab*$9766$1l2agK))
                                             g$body*$9753$1l2agK)
                                           (g$add-lexicals$7599$1l2agK
                                             (cons
                                               g$lab$9768$1l2agK
                                               g$lab*$9766$1l2agK)
                                             (cons
                                               g$lex$9767$1l2agK
                                               g$lex*$9765$1l2agK)
                                             g$r$9754$1l2agK)
                                           g$mr$9755$1l2agK))))
                                    (map g$gen-lexical$7317$1l2agK
                                         g$x*$9763$1l2agK)
                                    (map g$gen-label$7319$1l2agK
                                         g$x*$9763$1l2agK)
                                    (g$gen-lexical$7317$1l2agK g$x$9764$1l2agK)
                                    (g$gen-label$7319$1l2agK
                                      g$x$9764$1l2agK)))))
                              g$ls/false$9762$1l2agK)
                            ((case-lambda
                               ((g$t$9769$1l2agK)
                                ((case-lambda
                                   ((g$ls/false$9770$1l2agK)
                                    (if g$ls/false$9770$1l2agK
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7762$1l2agK
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9752$1l2agK)))
                                        g$ls/false$9770$1l2agK)
                                      (g$syntax-violation$7762$1l2agK
                                        '#f
                                        '"invalid syntax"
                                        g$t$9769$1l2agK))))
                                 (g$syntax-dispatch$7651$1l2agK
                                   g$t$9769$1l2agK
                                   '_))))
                             g$t$9761$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$9761$1l2agK
                         '#(each+ any () any)))))
                   g$t$9756$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$9756$1l2agK 'each-any))))
         g$fmls$9752$1l2agK))))
   (g$chi-lambda-clause*$7673$1l2agK
     g$chi-lambda-clause*$11119$1l2agK
     (case-lambda
       ((g$stx$9771$1l2agK
          g$fmls*$9772$1l2agK
          g$body**$9773$1l2agK
          g$r$9774$1l2agK
          g$mr$9775$1l2agK)
        (if (null? g$fmls*$9772$1l2agK)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7672$1l2agK
                 g$stx$9771$1l2agK
                 (car g$fmls*$9772$1l2agK)
                 (car g$body**$9773$1l2agK)
                 g$r$9774$1l2agK
                 g$mr$9775$1l2agK)))
            (case-lambda
              ((g$a$9778$1l2agK g$b$9779$1l2agK)
               ((case-lambda
                  ((g$b$9780$1l2agK g$a$9781$1l2agK)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7673$1l2agK
                          g$stx$9771$1l2agK
                          (cdr g$fmls*$9772$1l2agK)
                          (cdr g$body**$9773$1l2agK)
                          g$r$9774$1l2agK
                          g$mr$9775$1l2agK)))
                     (case-lambda
                       ((g$a*$9784$1l2agK g$b*$9785$1l2agK)
                        ((case-lambda
                           ((g$b*$9786$1l2agK g$a*$9787$1l2agK)
                            (values
                              (cons g$a$9781$1l2agK g$a*$9787$1l2agK)
                              (cons g$b$9780$1l2agK g$b*$9786$1l2agK))))
                         g$b*$9785$1l2agK
                         g$a*$9784$1l2agK))))))
                g$b$9779$1l2agK
                g$a$9778$1l2agK))))))))
   (g$chi-defun$7674$1l2agK
     g$chi-defun$11120$1l2agK
     (case-lambda
       ((g$x$9788$1l2agK g$r$9789$1l2agK g$mr$9790$1l2agK)
        ((case-lambda
           ((g$fmls$9791$1l2agK g$body*$9792$1l2agK)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7672$1l2agK
                   g$fmls$9791$1l2agK
                   g$fmls$9791$1l2agK
                   g$body*$9792$1l2agK
                   g$r$9789$1l2agK
                   g$mr$9790$1l2agK)))
              (case-lambda
                ((g$fmls$9795$1l2agK g$body$9796$1l2agK)
                 ((case-lambda
                    ((g$body$9797$1l2agK g$fmls$9798$1l2agK)
                     (g$build-lambda$7304$1l2agK
                       '#f
                       g$fmls$9798$1l2agK
                       g$body$9797$1l2agK)))
                  g$body$9796$1l2agK
                  g$fmls$9795$1l2agK))))))
         (car g$x$9788$1l2agK)
         (cdr g$x$9788$1l2agK)))))
   (g$chi-rhs$7675$1l2agK
     g$chi-rhs$11121$1l2agK
     (case-lambda
       ((g$rhs$9799$1l2agK g$r$9800$1l2agK g$mr$9801$1l2agK)
        ((case-lambda
           ((g$t$9802$1l2agK)
            (if (memv g$t$9802$1l2agK '(defun))
              (g$chi-defun$7674$1l2agK
                (cdr g$rhs$9799$1l2agK)
                g$r$9800$1l2agK
                g$mr$9801$1l2agK)
              (if (memv g$t$9802$1l2agK '(expr))
                ((case-lambda
                   ((g$expr$9803$1l2agK)
                    (g$chi-expr$7669$1l2agK
                      g$expr$9803$1l2agK
                      g$r$9800$1l2agK
                      g$mr$9801$1l2agK)))
                 (cdr g$rhs$9799$1l2agK))
                (if (memv g$t$9802$1l2agK '(top-expr))
                  ((case-lambda
                     ((g$expr$9804$1l2agK)
                      (g$build-sequence$7307$1l2agK
                        '#f
                        (list
                          (g$chi-expr$7669$1l2agK
                            g$expr$9804$1l2agK
                            g$r$9800$1l2agK
                            g$mr$9801$1l2agK)
                          (g$build-void$7308$1l2agK)))))
                   (cdr g$rhs$9799$1l2agK))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9799$1l2agK))))))
         (car g$rhs$9799$1l2agK)))))
   (g$expand-interaction-rhs*/init*$7676$1l2agK
     g$expand-interaction-rhs*/init*$11122$1l2agK
     (case-lambda
       ((g$lhs*$9805$1l2agK
          g$rhs*$9806$1l2agK
          g$init*$9807$1l2agK
          g$r$9808$1l2agK
          g$mr$9809$1l2agK)
        ((letrec ((g$f$9810$1l2agK
                    (case-lambda
                      ((g$lhs*$9811$1l2agK g$rhs*$9812$1l2agK)
                       (if (null? g$lhs*$9811$1l2agK)
                         (map (case-lambda
                                ((g$x$9813$1l2agK)
                                 (g$chi-expr$7669$1l2agK
                                   g$x$9813$1l2agK
                                   g$r$9808$1l2agK
                                   g$mr$9809$1l2agK)))
                              g$init*$9807$1l2agK)
                         ((case-lambda
                            ((g$lhs$9814$1l2agK g$rhs$9815$1l2agK)
                             ((case-lambda
                                ((g$t$9816$1l2agK)
                                 (if (memv g$t$9816$1l2agK '(defun))
                                   ((case-lambda
                                      ((g$rhs$9817$1l2agK)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9814$1l2agK
                                           g$rhs$9817$1l2agK)
                                         (g$f$9810$1l2agK
                                           (cdr g$lhs*$9811$1l2agK)
                                           (cdr g$rhs*$9812$1l2agK)))))
                                    (g$chi-defun$7674$1l2agK
                                      (cdr g$rhs$9815$1l2agK)
                                      g$r$9808$1l2agK
                                      g$mr$9809$1l2agK))
                                   (if (memv g$t$9816$1l2agK '(expr))
                                     ((case-lambda
                                        ((g$rhs$9818$1l2agK)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9814$1l2agK
                                             g$rhs$9818$1l2agK)
                                           (g$f$9810$1l2agK
                                             (cdr g$lhs*$9811$1l2agK)
                                             (cdr g$rhs*$9812$1l2agK)))))
                                      (g$chi-expr$7669$1l2agK
                                        (cdr g$rhs$9815$1l2agK)
                                        g$r$9808$1l2agK
                                        g$mr$9809$1l2agK))
                                     (if (memv g$t$9816$1l2agK '(top-expr))
                                       ((case-lambda
                                          ((g$e$9819$1l2agK)
                                           (cons
                                             g$e$9819$1l2agK
                                             (g$f$9810$1l2agK
                                               (cdr g$lhs*$9811$1l2agK)
                                               (cdr g$rhs*$9812$1l2agK)))))
                                        (g$chi-expr$7669$1l2agK
                                          (cdr g$rhs$9815$1l2agK)
                                          g$r$9808$1l2agK
                                          g$mr$9809$1l2agK))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9815$1l2agK))))))
                              (car g$rhs$9815$1l2agK))))
                          (car g$lhs*$9811$1l2agK)
                          (car g$rhs*$9812$1l2agK)))))))
           g$f$9810$1l2agK)
         g$lhs*$9805$1l2agK
         g$rhs*$9806$1l2agK))))
   (g$chi-rhs*$7677$1l2agK
     g$chi-rhs*$11123$1l2agK
     (case-lambda
       ((g$rhs*$9820$1l2agK g$r$9821$1l2agK g$mr$9822$1l2agK)
        ((letrec ((g$f$9823$1l2agK
                    (case-lambda
                      ((g$ls$9824$1l2agK)
                       (if (null? g$ls$9824$1l2agK)
                         '()
                         ((case-lambda
                            ((g$a$9825$1l2agK)
                             (cons
                               g$a$9825$1l2agK
                               (g$f$9823$1l2agK (cdr g$ls$9824$1l2agK)))))
                          (g$chi-rhs$7675$1l2agK
                            (car g$ls$9824$1l2agK)
                            g$r$9821$1l2agK
                            g$mr$9822$1l2agK)))))))
           g$f$9823$1l2agK)
         g$rhs*$9820$1l2agK))))
   (g$find-bound=?$7678$1l2agK
     g$find-bound=?$11124$1l2agK
     (case-lambda
       ((g$x$9826$1l2agK g$lhs*$9827$1l2agK g$rhs*$9828$1l2agK)
        (if (null? g$lhs*$9827$1l2agK)
          '#f
          (if (g$bound-id=?$7376$1l2agK
                g$x$9826$1l2agK
                (car g$lhs*$9827$1l2agK))
            (car g$rhs*$9828$1l2agK)
            (g$find-bound=?$7678$1l2agK
              g$x$9826$1l2agK
              (cdr g$lhs*$9827$1l2agK)
              (cdr g$rhs*$9828$1l2agK)))))))
   (g$find-dups$7679$1l2agK
     g$find-dups$11125$1l2agK
     (case-lambda
       ((g$ls$9829$1l2agK)
        ((letrec ((g$f$9830$1l2agK
                    (case-lambda
                      ((g$ls$9831$1l2agK g$dups$9832$1l2agK)
                       (if (null? g$ls$9831$1l2agK)
                         g$dups$9832$1l2agK
                         ((case-lambda
                            ((g$t$9833$1l2agK)
                             (if g$t$9833$1l2agK
                               ((case-lambda
                                  ((g$x$9834$1l2agK)
                                   (g$f$9830$1l2agK
                                     (cdr g$ls$9831$1l2agK)
                                     (cons
                                       (list
                                         (car g$ls$9831$1l2agK)
                                         g$x$9834$1l2agK)
                                       g$dups$9832$1l2agK))))
                                g$t$9833$1l2agK)
                               (g$f$9830$1l2agK
                                 (cdr g$ls$9831$1l2agK)
                                 g$dups$9832$1l2agK))))
                          (g$find-bound=?$7678$1l2agK
                            (car g$ls$9831$1l2agK)
                            (cdr g$ls$9831$1l2agK)
                            (cdr g$ls$9831$1l2agK))))))))
           g$f$9830$1l2agK)
         g$ls$9829$1l2agK
         '()))))
   (g$chi-internal$7680$1l2agK
     g$chi-internal$11126$1l2agK
     (case-lambda
       ((g$e*$9835$1l2agK g$r$9836$1l2agK g$mr$9837$1l2agK)
        ((case-lambda
           ((g$rib$9838$1l2agK)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7695$1l2agK
                   (map (case-lambda
                          ((g$x$9846$1l2agK)
                           (g$add-subst$7363$1l2agK
                             g$rib$9838$1l2agK
                             g$x$9846$1l2agK)))
                        (g$syntax->list$7372$1l2agK g$e*$9835$1l2agK))
                   g$r$9836$1l2agK
                   g$mr$9837$1l2agK
                   '()
                   '()
                   '()
                   '()
                   g$rib$9838$1l2agK
                   '#f)))
              (case-lambda
                ((g$e*$9847$1l2agK
                   g$r$9848$1l2agK
                   g$mr$9849$1l2agK
                   g$lex*$9850$1l2agK
                   g$rhs*$9851$1l2agK
                   g$mod**$9852$1l2agK
                   g$kwd*$9853$1l2agK)
                 ((case-lambda
                    ((g$kwd*$9854$1l2agK
                       g$mod**$9855$1l2agK
                       g$rhs*$9856$1l2agK
                       g$lex*$9857$1l2agK
                       g$mr$9858$1l2agK
                       g$r$9859$1l2agK
                       g$e*$9860$1l2agK)
                     (begin
                       (if (null? g$e*$9860$1l2agK)
                         (g$syntax-violation$7762$1l2agK
                           '#f
                           '"no expression in body"
                           g$e*$9860$1l2agK)
                         (void))
                       ((case-lambda
                          ((g$init*$9861$1l2agK)
                           ((case-lambda
                              ((g$rhs*$9862$1l2agK)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7310$1l2agK
                                     '#f
                                     (reverse g$lex*$9857$1l2agK)
                                     (reverse g$rhs*$9862$1l2agK)
                                     (g$build-sequence$7307$1l2agK
                                       '#f
                                       g$init*$9861$1l2agK)))))))
                            (g$chi-rhs*$7677$1l2agK
                              g$rhs*$9856$1l2agK
                              g$r$9859$1l2agK
                              g$mr$9858$1l2agK))))
                        (g$chi-expr*$7667$1l2agK
                          (append
                            (apply append (reverse g$mod**$9855$1l2agK))
                            g$e*$9860$1l2agK)
                          g$r$9859$1l2agK
                          g$mr$9858$1l2agK)))))
                  g$kwd*$9853$1l2agK
                  g$mod**$9852$1l2agK
                  g$rhs*$9851$1l2agK
                  g$lex*$9850$1l2agK
                  g$mr$9849$1l2agK
                  g$r$9848$1l2agK
                  g$e*$9847$1l2agK))))))
         (g$make-empty-rib$7336$1l2agK)))))
   (g$parse-module$7681$1l2agK
     g$parse-module$11127$1l2agK
     (case-lambda
       ((g$e$9863$1l2agK)
        ((case-lambda
           ((g$t$9864$1l2agK)
            ((case-lambda
               ((g$ls/false$9865$1l2agK)
                (if g$ls/false$9865$1l2agK
                  (apply
                    (case-lambda
                      ((g$export*$9866$1l2agK g$b*$9867$1l2agK)
                       (begin
                         (if (not (g$for-all$5503$1l2agK
                                    g$id?$7373$1l2agK
                                    g$export*$9866$1l2agK))
                           (g$syntax-violation$7762$1l2agK
                             '#f
                             '"module exports must be identifiers"
                             g$e$9863$1l2agK)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$9866$1l2agK)
                           g$b*$9867$1l2agK))))
                    g$ls/false$9865$1l2agK)
                  ((case-lambda
                     ((g$t$9868$1l2agK)
                      ((case-lambda
                         ((g$ls/false$9869$1l2agK)
                          (if g$ls/false$9869$1l2agK
                            (apply
                              (case-lambda
                                ((g$name$9870$1l2agK
                                   g$export*$9871$1l2agK
                                   g$b*$9872$1l2agK)
                                 (begin
                                   (if (not (g$id?$7373$1l2agK
                                              g$name$9870$1l2agK))
                                     (g$syntax-violation$7762$1l2agK
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9863$1l2agK)
                                     (void))
                                   (if (not (g$for-all$5503$1l2agK
                                              g$id?$7373$1l2agK
                                              g$export*$9871$1l2agK))
                                     (g$syntax-violation$7762$1l2agK
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9863$1l2agK)
                                     (void))
                                   (values
                                     g$name$9870$1l2agK
                                     (list->vector g$export*$9871$1l2agK)
                                     g$b*$9872$1l2agK))))
                              g$ls/false$9869$1l2agK)
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"invalid syntax"
                              g$t$9868$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$9868$1l2agK
                         '(_ any each-any . each-any)))))
                   g$t$9864$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$9864$1l2agK
               '(_ each-any . each-any)))))
         g$e$9863$1l2agK))))
   (g$8871$7682$1l2agK
     g$8871$11128$1l2agK
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8874$1l2agK
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8873$7683$1l2agK g$8873$11129$1l2agK '#f)
   (g$8872$7684$1l2agK
     g$8872$11130$1l2agK
     (make-record-constructor-descriptor
       g$8871$7682$1l2agK
       '#f
       g$8873$7683$1l2agK))
   (g$module-interface?$7685$1l2agK
     g$module-interface?$11131$1l2agK
     (record-predicate g$8871$7682$1l2agK))
   (g$make-module-interface$7686$1l2agK
     g$make-module-interface$11132$1l2agK
     (record-constructor g$8872$7684$1l2agK))
   (g$module-interface-first-mark$7687$1l2agK
     g$module-interface-first-mark$11133$1l2agK
     (record-accessor g$8871$7682$1l2agK '0))
   (g$module-interface-exp-id-vec$7688$1l2agK
     g$module-interface-exp-id-vec$11134$1l2agK
     (record-accessor g$8871$7682$1l2agK '1))
   (g$module-interface-exp-lab-vec$7689$1l2agK
     g$module-interface-exp-lab-vec$11135$1l2agK
     (record-accessor g$8871$7682$1l2agK '2))
   (g$set-module-interface-first-mark!$7690$1l2agK
     g$set-module-interface-first-mark!$11136$1l2agK
     (record-mutator g$8871$7682$1l2agK '0))
   (g$set-module-interface-exp-id-vec!$7691$1l2agK
     g$set-module-interface-exp-id-vec!$11137$1l2agK
     (record-mutator g$8871$7682$1l2agK '1))
   (g$set-module-interface-exp-lab-vec!$7692$1l2agK
     g$set-module-interface-exp-lab-vec!$11138$1l2agK
     (record-mutator g$8871$7682$1l2agK '2))
   (g$module-interface-exp-id*$7693$1l2agK
     g$module-interface-exp-id*$11139$1l2agK
     (case-lambda
       ((g$iface$9873$1l2agK g$id$9874$1l2agK)
        (letrec* ((g$diff-marks$9875$1l2agK
                    (case-lambda
                      ((g$ls$9879$1l2agK g$x$9880$1l2agK)
                       (begin
                         (if (null? g$ls$9879$1l2agK)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9881$1l2agK)
                             (if (eq? g$a$9881$1l2agK g$x$9880$1l2agK)
                               '()
                               (cons
                                 g$a$9881$1l2agK
                                 (g$diff-marks$9875$1l2agK
                                   (cdr g$ls$9879$1l2agK)
                                   g$x$9880$1l2agK)))))
                          (car g$ls$9879$1l2agK)))))))
          ((case-lambda
             ((g$diff$9876$1l2agK g$id-vec$9877$1l2agK)
              (if (null? g$diff$9876$1l2agK)
                g$id-vec$9877$1l2agK
                (vector-map
                  (case-lambda
                    ((g$x$9878$1l2agK)
                     (g$make-stx$7346$1l2agK
                       (g$stx-expr$7347$1l2agK g$x$9878$1l2agK)
                       (append
                         g$diff$9876$1l2agK
                         (g$stx-mark*$7348$1l2agK g$x$9878$1l2agK))
                       '()
                       '())))
                  g$id-vec$9877$1l2agK))))
           (g$diff-marks$9875$1l2agK
             (g$stx-mark*$7348$1l2agK g$id$9874$1l2agK)
             (g$module-interface-first-mark$7687$1l2agK g$iface$9873$1l2agK))
           (g$module-interface-exp-id-vec$7688$1l2agK g$iface$9873$1l2agK))))))
   (g$chi-internal-module$7694$1l2agK
     g$chi-internal-module$11140$1l2agK
     (case-lambda
       ((g$e$9882$1l2agK
          g$r$9883$1l2agK
          g$mr$9884$1l2agK
          g$lex*$9885$1l2agK
          g$rhs*$9886$1l2agK
          g$mod**$9887$1l2agK
          g$kwd*$9888$1l2agK)
        (call-with-values
          (case-lambda (() (g$parse-module$7681$1l2agK g$e$9882$1l2agK)))
          (case-lambda
            ((g$name$9892$1l2agK g$exp-id*$9893$1l2agK g$e*$9894$1l2agK)
             ((case-lambda
                ((g$e*$9895$1l2agK g$exp-id*$9896$1l2agK g$name$9897$1l2agK)
                 ((case-lambda
                    ((g$rib$9898$1l2agK)
                     ((case-lambda
                        ((g$e*$9899$1l2agK)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7695$1l2agK
                                    g$e*$9899$1l2agK
                                    g$r$9883$1l2agK
                                    g$mr$9884$1l2agK
                                    g$lex*$9885$1l2agK
                                    g$rhs*$9886$1l2agK
                                    g$mod**$9887$1l2agK
                                    g$kwd*$9888$1l2agK
                                    g$rib$9898$1l2agK
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9907$1l2agK
                                    g$r$9908$1l2agK
                                    g$mr$9909$1l2agK
                                    g$lex*$9910$1l2agK
                                    g$rhs*$9911$1l2agK
                                    g$mod**$9912$1l2agK
                                    g$kwd*$9913$1l2agK)
                                  ((case-lambda
                                     ((g$kwd*$9914$1l2agK
                                        g$mod**$9915$1l2agK
                                        g$rhs*$9916$1l2agK
                                        g$lex*$9917$1l2agK
                                        g$mr$9918$1l2agK
                                        g$r$9919$1l2agK
                                        g$e*$9920$1l2agK)
                                      ((case-lambda
                                         ((g$exp-lab*$9921$1l2agK
                                            g$mod**$9922$1l2agK)
                                          (if (not g$name$9897$1l2agK)
                                            (values
                                              g$lex*$9917$1l2agK
                                              g$rhs*$9916$1l2agK
                                              g$exp-id*$9896$1l2agK
                                              g$exp-lab*$9921$1l2agK
                                              g$r$9919$1l2agK
                                              g$mr$9918$1l2agK
                                              g$mod**$9922$1l2agK
                                              g$kwd*$9914$1l2agK)
                                            ((case-lambda
                                               ((g$lab$9923$1l2agK
                                                  g$iface$9924$1l2agK)
                                                (values
                                                  g$lex*$9917$1l2agK
                                                  g$rhs*$9916$1l2agK
                                                  (vector g$name$9897$1l2agK)
                                                  (vector g$lab$9923$1l2agK)
                                                  (cons
                                                    (cons
                                                      g$lab$9923$1l2agK
                                                      (cons
                                                        '$module
                                                        g$iface$9924$1l2agK))
                                                    g$r$9919$1l2agK)
                                                  (cons
                                                    (cons
                                                      g$lab$9923$1l2agK
                                                      (cons
                                                        '$module
                                                        g$iface$9924$1l2agK))
                                                    g$mr$9918$1l2agK)
                                                  g$mod**$9922$1l2agK
                                                  g$kwd*$9914$1l2agK)))
                                             (g$gen-label$7319$1l2agK 'module)
                                             (g$make-module-interface$7686$1l2agK
                                               (car (g$stx-mark*$7348$1l2agK
                                                      g$name$9897$1l2agK))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9925$1l2agK)
                                                    (g$make-stx$7346$1l2agK
                                                      (g$stx-expr$7347$1l2agK
                                                        g$x$9925$1l2agK)
                                                      (g$stx-mark*$7348$1l2agK
                                                        g$x$9925$1l2agK)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9896$1l2agK)
                                               g$exp-lab*$9921$1l2agK)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9926$1l2agK)
                                            ((case-lambda
                                               ((g$t$9927$1l2agK)
                                                (if g$t$9927$1l2agK
                                                  g$t$9927$1l2agK
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7762$1l2agK
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9926$1l2agK)))))
                                             (g$id->label$7386$1l2agK
                                               (g$make-stx$7346$1l2agK
                                                 (g$id->sym$7374$1l2agK
                                                   g$x$9926$1l2agK)
                                                 (g$stx-mark*$7348$1l2agK
                                                   g$x$9926$1l2agK)
                                                 (list g$rib$9898$1l2agK)
                                                 '())))))
                                         g$exp-id*$9896$1l2agK)
                                       (cons
                                         g$e*$9920$1l2agK
                                         g$mod**$9915$1l2agK))))
                                   g$kwd*$9913$1l2agK
                                   g$mod**$9912$1l2agK
                                   g$rhs*$9911$1l2agK
                                   g$lex*$9910$1l2agK
                                   g$mr$9909$1l2agK
                                   g$r$9908$1l2agK
                                   g$e*$9907$1l2agK)))))))))
                      (map (case-lambda
                             ((g$x$9928$1l2agK)
                              (g$add-subst$7363$1l2agK
                                g$rib$9898$1l2agK
                                g$x$9928$1l2agK)))
                           (g$syntax->list$7372$1l2agK g$e*$9895$1l2agK)))))
                  (g$make-empty-rib$7336$1l2agK))))
              g$e*$9894$1l2agK
              g$exp-id*$9893$1l2agK
              g$name$9892$1l2agK)))))))
   (g$chi-body*$7695$1l2agK
     g$chi-body*$11141$1l2agK
     (case-lambda
       ((g$e*$9929$1l2agK
          g$r$9930$1l2agK
          g$mr$9931$1l2agK
          g$lex*$9932$1l2agK
          g$rhs*$9933$1l2agK
          g$mod**$9934$1l2agK
          g$kwd*$9935$1l2agK
          g$rib$9936$1l2agK
          g$top?$9937$1l2agK)
        (if (null? g$e*$9929$1l2agK)
          (values
            g$e*$9929$1l2agK
            g$r$9930$1l2agK
            g$mr$9931$1l2agK
            g$lex*$9932$1l2agK
            g$rhs*$9933$1l2agK
            g$mod**$9934$1l2agK
            g$kwd*$9935$1l2agK)
          ((case-lambda
             ((g$e$9938$1l2agK)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7393$1l2agK g$e$9938$1l2agK g$r$9930$1l2agK)))
                (case-lambda
                  ((g$type$9942$1l2agK g$value$9943$1l2agK g$kwd$9944$1l2agK)
                   ((case-lambda
                      ((g$kwd$9945$1l2agK
                         g$value$9946$1l2agK
                         g$type$9947$1l2agK)
                       ((case-lambda
                          ((g$kwd*$9948$1l2agK)
                           ((case-lambda
                              ((g$t$9949$1l2agK)
                               (if (memv g$t$9949$1l2agK '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7591$1l2agK
                                        g$e$9938$1l2agK)))
                                   (case-lambda
                                     ((g$id$9952$1l2agK g$rhs$9953$1l2agK)
                                      ((case-lambda
                                         ((g$rhs$9954$1l2agK g$id$9955$1l2agK)
                                          (begin
                                            (if (g$bound-id-member?$7380$1l2agK
                                                  g$id$9955$1l2agK
                                                  g$kwd*$9948$1l2agK)
                                              (g$syntax-violation$7762$1l2agK
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9938$1l2agK)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7321$1l2agK
                                                   g$id$9955$1l2agK
                                                   g$rib$9936$1l2agK)))
                                              (case-lambda
                                                ((g$lab$9958$1l2agK
                                                   g$lex$9959$1l2agK)
                                                 ((case-lambda
                                                    ((g$lex$9960$1l2agK
                                                       g$lab$9961$1l2agK)
                                                     (begin
                                                       (g$extend-rib!$7337$1l2agK
                                                         g$rib$9936$1l2agK
                                                         g$id$9955$1l2agK
                                                         g$lab$9961$1l2agK)
                                                       (g$chi-body*$7695$1l2agK
                                                         (cdr g$e*$9929$1l2agK)
                                                         (g$add-lexical$7598$1l2agK
                                                           g$lab$9961$1l2agK
                                                           g$lex$9960$1l2agK
                                                           g$r$9930$1l2agK)
                                                         g$mr$9931$1l2agK
                                                         (cons
                                                           g$lex$9960$1l2agK
                                                           g$lex*$9932$1l2agK)
                                                         (cons
                                                           g$rhs$9954$1l2agK
                                                           g$rhs*$9933$1l2agK)
                                                         g$mod**$9934$1l2agK
                                                         g$kwd*$9948$1l2agK
                                                         g$rib$9936$1l2agK
                                                         g$top?$9937$1l2agK))))
                                                  g$lex$9959$1l2agK
                                                  g$lab$9958$1l2agK)))))))
                                       g$rhs$9953$1l2agK
                                       g$id$9952$1l2agK))))
                                 (if (memv g$t$9949$1l2agK '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7592$1l2agK
                                          g$e$9938$1l2agK)))
                                     (case-lambda
                                       ((g$id$9964$1l2agK g$rhs$9965$1l2agK)
                                        ((case-lambda
                                           ((g$rhs$9966$1l2agK g$id$9967$1l2agK)
                                            (begin
                                              (if (g$bound-id-member?$7380$1l2agK
                                                    g$id$9967$1l2agK
                                                    g$kwd*$9948$1l2agK)
                                                (g$syntax-violation$7762$1l2agK
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9938$1l2agK)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9968$1l2agK
                                                    g$expanded-rhs$9969$1l2agK)
                                                  (begin
                                                    (g$extend-rib!$7337$1l2agK
                                                      g$rib$9936$1l2agK
                                                      g$id$9967$1l2agK
                                                      g$lab$9968$1l2agK)
                                                    ((case-lambda
                                                       ((g$b$9970$1l2agK)
                                                        (g$chi-body*$7695$1l2agK
                                                          (cdr g$e*$9929$1l2agK)
                                                          (cons
                                                            (cons
                                                              g$lab$9968$1l2agK
                                                              g$b$9970$1l2agK)
                                                            g$r$9930$1l2agK)
                                                          (cons
                                                            (cons
                                                              g$lab$9968$1l2agK
                                                              g$b$9970$1l2agK)
                                                            g$mr$9931$1l2agK)
                                                          g$lex*$9932$1l2agK
                                                          g$rhs*$9933$1l2agK
                                                          g$mod**$9934$1l2agK
                                                          g$kwd*$9948$1l2agK
                                                          g$rib$9936$1l2agK
                                                          g$top?$9937$1l2agK)))
                                                     (g$make-eval-transformer$7405$1l2agK
                                                       g$expanded-rhs$9969$1l2agK)))))
                                               (g$gen-define-label$7322$1l2agK
                                                 g$id$9967$1l2agK
                                                 g$rib$9936$1l2agK)
                                               (g$expand-transformer$7696$1l2agK
                                                 g$rhs$9966$1l2agK
                                                 g$mr$9931$1l2agK)))))
                                         g$rhs$9965$1l2agK
                                         g$id$9964$1l2agK))))
                                   (if (memv
                                         g$t$9949$1l2agK
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9971$1l2agK)
                                         ((case-lambda
                                            ((g$ls/false$9972$1l2agK)
                                             (if (if g$ls/false$9972$1l2agK
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9973$1l2agK
                                                            g$xrhs*$9974$1l2agK
                                                            g$xbody*$9975$1l2agK)
                                                          (if (not (g$valid-bound-ids?$7378$1l2agK
                                                                     g$xlhs*$9973$1l2agK))
                                                            (g$syntax-violation$7762$1l2agK
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9938$1l2agK)
                                                            (void))))
                                                       g$ls/false$9972$1l2agK))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9976$1l2agK
                                                      g$xrhs*$9977$1l2agK
                                                      g$xbody*$9978$1l2agK)
                                                    ((case-lambda
                                                       ((g$xlab*$9979$1l2agK)
                                                        ((case-lambda
                                                           ((g$xrib$9980$1l2agK)
                                                            ((case-lambda
                                                               ((g$xb*$9981$1l2agK)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7695$1l2agK
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9982$1l2agK)
                                                                                (g$add-subst$7363$1l2agK
                                                                                  g$xrib$9980$1l2agK
                                                                                  g$x$9982$1l2agK)))
                                                                             g$xbody*$9978$1l2agK)
                                                                        (cdr g$e*$9929$1l2agK))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9979$1l2agK
                                                                             g$xb*$9981$1l2agK)
                                                                        g$r$9930$1l2agK)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9979$1l2agK
                                                                             g$xb*$9981$1l2agK)
                                                                        g$mr$9931$1l2agK)
                                                                      g$lex*$9932$1l2agK
                                                                      g$rhs*$9933$1l2agK
                                                                      g$mod**$9934$1l2agK
                                                                      g$kwd*$9948$1l2agK
                                                                      g$rib$9936$1l2agK
                                                                      g$top?$9937$1l2agK))))))
                                                             (map (case-lambda
                                                                    ((g$x$9983$1l2agK)
                                                                     (g$make-eval-transformer$7405$1l2agK
                                                                       (g$expand-transformer$7696$1l2agK
                                                                         (if (eq? g$type$9947$1l2agK
                                                                                  'let-syntax)
                                                                           g$x$9983$1l2agK
                                                                           (g$add-subst$7363$1l2agK
                                                                             g$xrib$9980$1l2agK
                                                                             g$x$9983$1l2agK))
                                                                         g$mr$9931$1l2agK))))
                                                                  g$xrhs*$9977$1l2agK))))
                                                         (g$make-full-rib$7341$1l2agK
                                                           g$xlhs*$9976$1l2agK
                                                           g$xlab*$9979$1l2agK))))
                                                     (map g$gen-label$7319$1l2agK
                                                          g$xlhs*$9976$1l2agK))))
                                                 g$ls/false$9972$1l2agK)
                                               (g$syntax-violation$7762$1l2agK
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9971$1l2agK))))
                                          (g$syntax-dispatch$7651$1l2agK
                                            g$t$9971$1l2agK
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9938$1l2agK)
                                     (if (memv g$t$9949$1l2agK '(begin))
                                       ((case-lambda
                                          ((g$t$9984$1l2agK)
                                           ((case-lambda
                                              ((g$ls/false$9985$1l2agK)
                                               (if g$ls/false$9985$1l2agK
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9986$1l2agK)
                                                      (g$chi-body*$7695$1l2agK
                                                        (append
                                                          g$x*$9986$1l2agK
                                                          (cdr g$e*$9929$1l2agK))
                                                        g$r$9930$1l2agK
                                                        g$mr$9931$1l2agK
                                                        g$lex*$9932$1l2agK
                                                        g$rhs*$9933$1l2agK
                                                        g$mod**$9934$1l2agK
                                                        g$kwd*$9948$1l2agK
                                                        g$rib$9936$1l2agK
                                                        g$top?$9937$1l2agK)))
                                                   g$ls/false$9985$1l2agK)
                                                 (g$syntax-violation$7762$1l2agK
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9984$1l2agK))))
                                            (g$syntax-dispatch$7651$1l2agK
                                              g$t$9984$1l2agK
                                              '(_ . each-any)))))
                                        g$e$9938$1l2agK)
                                       (if (memv
                                             g$t$9949$1l2agK
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7695$1l2agK
                                           (cons
                                             (g$add-subst$7363$1l2agK
                                               g$rib$9936$1l2agK
                                               (g$chi-global-macro$7666$1l2agK
                                                 g$value$9946$1l2agK
                                                 g$e$9938$1l2agK))
                                             (cdr g$e*$9929$1l2agK))
                                           g$r$9930$1l2agK
                                           g$mr$9931$1l2agK
                                           g$lex*$9932$1l2agK
                                           g$rhs*$9933$1l2agK
                                           g$mod**$9934$1l2agK
                                           g$kwd*$9948$1l2agK
                                           g$rib$9936$1l2agK
                                           g$top?$9937$1l2agK)
                                         (if (memv
                                               g$t$9949$1l2agK
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7695$1l2agK
                                             (cons
                                               (g$add-subst$7363$1l2agK
                                                 g$rib$9936$1l2agK
                                                 (g$chi-local-macro$7665$1l2agK
                                                   g$value$9946$1l2agK
                                                   g$e$9938$1l2agK))
                                               (cdr g$e*$9929$1l2agK))
                                             g$r$9930$1l2agK
                                             g$mr$9931$1l2agK
                                             g$lex*$9932$1l2agK
                                             g$rhs*$9933$1l2agK
                                             g$mod**$9934$1l2agK
                                             g$kwd*$9948$1l2agK
                                             g$rib$9936$1l2agK
                                             g$top?$9937$1l2agK)
                                           (if (memv
                                                 g$t$9949$1l2agK
                                                 '(macro macro!))
                                             (g$chi-body*$7695$1l2agK
                                               (cons
                                                 (g$add-subst$7363$1l2agK
                                                   g$rib$9936$1l2agK
                                                   (g$chi-macro$7664$1l2agK
                                                     g$value$9946$1l2agK
                                                     g$e$9938$1l2agK))
                                                 (cdr g$e*$9929$1l2agK))
                                               g$r$9930$1l2agK
                                               g$mr$9931$1l2agK
                                               g$lex*$9932$1l2agK
                                               g$rhs*$9933$1l2agK
                                               g$mod**$9934$1l2agK
                                               g$kwd*$9948$1l2agK
                                               g$rib$9936$1l2agK
                                               g$top?$9937$1l2agK)
                                             (if (memv
                                                   g$t$9949$1l2agK
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7694$1l2agK
                                                      g$e$9938$1l2agK
                                                      g$r$9930$1l2agK
                                                      g$mr$9931$1l2agK
                                                      g$lex*$9932$1l2agK
                                                      g$rhs*$9933$1l2agK
                                                      g$mod**$9934$1l2agK
                                                      g$kwd*$9948$1l2agK)))
                                                 (case-lambda
                                                   ((g$lex*$9995$1l2agK
                                                      g$rhs*$9996$1l2agK
                                                      g$m-exp-id*$9997$1l2agK
                                                      g$m-exp-lab*$9998$1l2agK
                                                      g$r$9999$1l2agK
                                                      g$mr$10000$1l2agK
                                                      g$mod**$10001$1l2agK
                                                      g$kwd*$10002$1l2agK)
                                                    ((case-lambda
                                                       ((g$kwd*$10003$1l2agK
                                                          g$mod**$10004$1l2agK
                                                          g$mr$10005$1l2agK
                                                          g$r$10006$1l2agK
                                                          g$m-exp-lab*$10007$1l2agK
                                                          g$m-exp-id*$10008$1l2agK
                                                          g$rhs*$10009$1l2agK
                                                          g$lex*$10010$1l2agK)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10011$1l2agK
                                                                 g$lab$10012$1l2agK)
                                                               (g$extend-rib!$7337$1l2agK
                                                                 g$rib$9936$1l2agK
                                                                 g$id$10011$1l2agK
                                                                 g$lab$10012$1l2agK)))
                                                            g$m-exp-id*$10008$1l2agK
                                                            g$m-exp-lab*$10007$1l2agK)
                                                          (g$chi-body*$7695$1l2agK
                                                            (cdr g$e*$9929$1l2agK)
                                                            g$r$10006$1l2agK
                                                            g$mr$10005$1l2agK
                                                            g$lex*$10010$1l2agK
                                                            g$rhs*$10009$1l2agK
                                                            g$mod**$10004$1l2agK
                                                            g$kwd*$10003$1l2agK
                                                            g$rib$9936$1l2agK
                                                            g$top?$9937$1l2agK))))
                                                     g$kwd*$10002$1l2agK
                                                     g$mod**$10001$1l2agK
                                                     g$mr$10000$1l2agK
                                                     g$r$9999$1l2agK
                                                     g$m-exp-lab*$9998$1l2agK
                                                     g$m-exp-id*$9997$1l2agK
                                                     g$rhs*$9996$1l2agK
                                                     g$lex*$9995$1l2agK))))
                                               (if (memv
                                                     g$t$9949$1l2agK
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$7746$1l2agK
                                                     (g$stx->datum$7384$1l2agK
                                                       g$e$9938$1l2agK))
                                                   (g$chi-body*$7695$1l2agK
                                                     (cdr g$e*$9929$1l2agK)
                                                     g$r$9930$1l2agK
                                                     g$mr$9931$1l2agK
                                                     g$lex*$9932$1l2agK
                                                     g$rhs*$9933$1l2agK
                                                     g$mod**$9934$1l2agK
                                                     g$kwd*$9948$1l2agK
                                                     g$rib$9936$1l2agK
                                                     g$top?$9937$1l2agK))
                                                 (if (memv
                                                       g$t$9949$1l2agK
                                                       '(import))
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10013$1l2agK
                                                                     (case-lambda
                                                                       ((g$e$10055$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$t$10056$1l2agK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10057$1l2agK)
                                                                                (if (if g$ls/false$10057$1l2agK
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10058$1l2agK)
                                                                                             (g$id?$7373$1l2agK
                                                                                               g$id$10058$1l2agK)))
                                                                                          g$ls/false$10057$1l2agK))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10059$1l2agK)
                                                                                       '#t))
                                                                                    g$ls/false$10057$1l2agK)
                                                                                  ((case-lambda
                                                                                     ((g$t$10060$1l2agK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10061$1l2agK)
                                                                                          (if g$ls/false$10061$1l2agK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10062$1l2agK)
                                                                                                 '#f))
                                                                                              g$ls/false$10061$1l2agK)
                                                                                            ((case-lambda
                                                                                               ((g$t$10063$1l2agK)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10064$1l2agK)
                                                                                                    (if g$ls/false$10064$1l2agK
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7762$1l2agK
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10055$1l2agK)))
                                                                                                        g$ls/false$10064$1l2agK)
                                                                                                      (g$syntax-violation$7762$1l2agK
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10063$1l2agK))))
                                                                                                 (g$syntax-dispatch$7651$1l2agK
                                                                                                   g$t$10063$1l2agK
                                                                                                   '_))))
                                                                                             g$t$10060$1l2agK))))
                                                                                       (g$syntax-dispatch$7651$1l2agK
                                                                                         g$t$10060$1l2agK
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10056$1l2agK))))
                                                                             (g$syntax-dispatch$7651$1l2agK
                                                                               g$t$10056$1l2agK
                                                                               '(_ any)))))
                                                                         g$e$10055$1l2agK))))
                                                                   (g$module-import$10014$1l2agK
                                                                     (case-lambda
                                                                       ((g$e$10038$1l2agK
                                                                          g$r$10039$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$t$10040$1l2agK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10041$1l2agK)
                                                                                (if (if g$ls/false$10041$1l2agK
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10042$1l2agK)
                                                                                             (g$id?$7373$1l2agK
                                                                                               g$id$10042$1l2agK)))
                                                                                          g$ls/false$10041$1l2agK))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10043$1l2agK)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7393$1l2agK
                                                                                              g$id$10043$1l2agK
                                                                                              g$r$10039$1l2agK)))
                                                                                         (case-lambda
                                                                                           ((g$type$10047$1l2agK
                                                                                              g$value$10048$1l2agK
                                                                                              g$kwd$10049$1l2agK)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10050$1l2agK
                                                                                                  g$value$10051$1l2agK
                                                                                                  g$type$10052$1l2agK)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10053$1l2agK)
                                                                                                    (if (memv
                                                                                                          g$t$10053$1l2agK
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10054$1l2agK)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7693$1l2agK
                                                                                                              g$iface$10054$1l2agK
                                                                                                              g$id$10043$1l2agK)
                                                                                                            (g$module-interface-exp-lab-vec$7689$1l2agK
                                                                                                              g$iface$10054$1l2agK))))
                                                                                                       g$value$10051$1l2agK)
                                                                                                      (g$syntax-violation$7762$1l2agK
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10038$1l2agK))))
                                                                                                 g$type$10052$1l2agK)))
                                                                                             g$kwd$10049$1l2agK
                                                                                             g$value$10048$1l2agK
                                                                                             g$type$10047$1l2agK))))))
                                                                                    g$ls/false$10041$1l2agK)
                                                                                  (g$syntax-violation$7762$1l2agK
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10040$1l2agK))))
                                                                             (g$syntax-dispatch$7651$1l2agK
                                                                               g$t$10040$1l2agK
                                                                               '(_ any)))))
                                                                         g$e$10038$1l2agK))))
                                                                   (g$library-import$10015$1l2agK
                                                                     (case-lambda
                                                                       ((g$e$10024$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$t$10025$1l2agK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10026$1l2agK)
                                                                                (if g$ls/false$10026$1l2agK
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10027$1l2agK
                                                                                         g$imp*$10028$1l2agK)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7700$1l2agK
                                                                                              (g$syntax->datum$7765$1l2agK
                                                                                                g$imp*$10028$1l2agK))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10031$1l2agK
                                                                                              g$subst-labels$10032$1l2agK)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10033$1l2agK
                                                                                                  g$subst-names$10034$1l2agK)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10035$1l2agK)
                                                                                                       (g$datum->stx$7356$1l2agK
                                                                                                         g$ctxt$10027$1l2agK
                                                                                                         g$name$10035$1l2agK)))
                                                                                                    g$subst-names$10034$1l2agK)
                                                                                                  g$subst-labels$10033$1l2agK)))
                                                                                             g$subst-labels$10032$1l2agK
                                                                                             g$subst-names$10031$1l2agK))))))
                                                                                    g$ls/false$10026$1l2agK)
                                                                                  ((case-lambda
                                                                                     ((g$t$10036$1l2agK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10037$1l2agK)
                                                                                          (if g$ls/false$10037$1l2agK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7762$1l2agK
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10024$1l2agK)))
                                                                                              g$ls/false$10037$1l2agK)
                                                                                            (g$syntax-violation$7762$1l2agK
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10036$1l2agK))))
                                                                                       (g$syntax-dispatch$7651$1l2agK
                                                                                         g$t$10036$1l2agK
                                                                                         '_))))
                                                                                   g$t$10025$1l2agK))))
                                                                             (g$syntax-dispatch$7651$1l2agK
                                                                               g$t$10025$1l2agK
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10024$1l2agK)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$10013$1l2agK
                                                                      g$e$9938$1l2agK)
                                                                  (g$module-import$10014$1l2agK
                                                                    g$e$9938$1l2agK
                                                                    g$r$9930$1l2agK)
                                                                  (g$library-import$10015$1l2agK
                                                                    g$e$9938$1l2agK))))
                                                             (case-lambda
                                                               ((g$id*$10018$1l2agK
                                                                  g$lab*$10019$1l2agK)
                                                                ((case-lambda
                                                                   ((g$lab*$10020$1l2agK
                                                                      g$id*$10021$1l2agK)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$10022$1l2agK
                                                                           g$lab$10023$1l2agK)
                                                                         (g$extend-rib!$7337$1l2agK
                                                                           g$rib$9936$1l2agK
                                                                           g$id$10022$1l2agK
                                                                           g$lab$10023$1l2agK)))
                                                                      g$id*$10021$1l2agK
                                                                      g$lab*$10020$1l2agK)))
                                                                 g$lab*$10019$1l2agK
                                                                 g$id*$10018$1l2agK))))))))
                                                     (g$chi-body*$7695$1l2agK
                                                       (cdr g$e*$9929$1l2agK)
                                                       g$r$9930$1l2agK
                                                       g$mr$9931$1l2agK
                                                       g$lex*$9932$1l2agK
                                                       g$rhs*$9933$1l2agK
                                                       g$mod**$9934$1l2agK
                                                       g$kwd*$9948$1l2agK
                                                       g$rib$9936$1l2agK
                                                       g$top?$9937$1l2agK))
                                                   (if g$top?$9937$1l2agK
                                                     (g$chi-body*$7695$1l2agK
                                                       (cdr g$e*$9929$1l2agK)
                                                       g$r$9930$1l2agK
                                                       g$mr$9931$1l2agK
                                                       (cons
                                                         (g$gen-lexical$7317$1l2agK
                                                           'dummy)
                                                         g$lex*$9932$1l2agK)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$9938$1l2agK)
                                                         g$rhs*$9933$1l2agK)
                                                       g$mod**$9934$1l2agK
                                                       g$kwd*$9948$1l2agK
                                                       g$rib$9936$1l2agK
                                                       g$top?$9937$1l2agK)
                                                     (values
                                                       g$e*$9929$1l2agK
                                                       g$r$9930$1l2agK
                                                       g$mr$9931$1l2agK
                                                       g$lex*$9932$1l2agK
                                                       g$rhs*$9933$1l2agK
                                                       g$mod**$9934$1l2agK
                                                       g$kwd*$9948$1l2agK))))))))))))))
                            g$type$9947$1l2agK)))
                        (if (g$id?$7373$1l2agK g$kwd$9945$1l2agK)
                          (cons g$kwd$9945$1l2agK g$kwd*$9935$1l2agK)
                          g$kwd*$9935$1l2agK))))
                    g$kwd$9944$1l2agK
                    g$value$9943$1l2agK
                    g$type$9942$1l2agK))))))
           (car g$e*$9929$1l2agK))))))
   (g$expand-transformer$7696$1l2agK
     g$expand-transformer$11142$1l2agK
     (case-lambda
       ((g$expr$10065$1l2agK g$r$10066$1l2agK)
        ((case-lambda
           ((g$rtc$10067$1l2agK)
            ((case-lambda
               ((g$expanded-rhs$10068$1l2agK)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$10069$1l2agK)
                        (case-lambda
                          ((g$x$10070$1l2agK)
                           (begin
                             (g$invoke-library$7188$1l2agK g$x$10070$1l2agK)
                             (g$mark-visit$10069$1l2agK g$x$10070$1l2agK))))))
                     (g$vis-collector$7704$1l2agK))
                    (g$rtc$10067$1l2agK))
                  g$expanded-rhs$10068$1l2agK)))
             ((case-lambda
                ((g$inv-collector$10075$1l2agK
                   g$vis-collector$10076$1l2agK
                   g$inv-collector$10077$1l2agK
                   g$vis-collector$10078$1l2agK)
                 ((case-lambda
                    ((g$swap$10079$1l2agK)
                     (dynamic-wind
                       g$swap$10079$1l2agK
                       (case-lambda
                         (()
                          (g$chi-expr$7669$1l2agK
                            g$expr$10065$1l2agK
                            g$r$10066$1l2agK
                            g$r$10066$1l2agK)))
                       g$swap$10079$1l2agK)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10080$1l2agK)
                           (begin
                             (g$inv-collector$10075$1l2agK
                               g$inv-collector$10077$1l2agK)
                             (set! g$inv-collector$10077$1l2agK
                               g$t$10080$1l2agK))))
                        (g$inv-collector$10075$1l2agK))
                       ((case-lambda
                          ((g$t$10081$1l2agK)
                           (begin
                             (g$vis-collector$10076$1l2agK
                               g$vis-collector$10078$1l2agK)
                             (set! g$vis-collector$10078$1l2agK
                               g$t$10081$1l2agK))))
                        (g$vis-collector$10076$1l2agK))))))))
              g$inv-collector$7703$1l2agK
              g$vis-collector$7704$1l2agK
              g$rtc$10067$1l2agK
              (case-lambda ((g$x$10082$1l2agK) (values)))))))
         (g$make-collector$7702$1l2agK)))))
   (g$parse-exports$7697$1l2agK
     g$parse-exports$11143$1l2agK
     (case-lambda
       ((g$exp*$10083$1l2agK)
        (letrec* ((g$idsyn?$10084$1l2agK
                    (case-lambda
                      ((g$x$10099$1l2agK)
                       (symbol?
                         (g$syntax->datum$7765$1l2agK g$x$10099$1l2agK))))))
          ((letrec ((g$f$10085$1l2agK
                      (case-lambda
                        ((g$exp*$10086$1l2agK
                           g$int*$10087$1l2agK
                           g$ext*$10088$1l2agK)
                         (if (null? g$exp*$10086$1l2agK)
                           (begin
                             ((case-lambda
                                ((g$id*$10089$1l2agK)
                                 (if (not (g$valid-bound-ids?$7378$1l2agK
                                            g$id*$10089$1l2agK))
                                   (g$syntax-violation$7762$1l2agK
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7679$1l2agK
                                       g$id*$10089$1l2agK))
                                   (void))))
                              (map (case-lambda
                                     ((g$x$10090$1l2agK)
                                      (g$make-stx$7346$1l2agK
                                        g$x$10090$1l2agK
                                        g$top-mark*$7315$1l2agK
                                        '()
                                        '())))
                                   g$ext*$10088$1l2agK))
                             (values
                               (map g$syntax->datum$7765$1l2agK
                                    g$int*$10087$1l2agK)
                               (map g$syntax->datum$7765$1l2agK
                                    g$ext*$10088$1l2agK)))
                           ((case-lambda
                              ((g$t$10091$1l2agK)
                               ((case-lambda
                                  ((g$ls/false$10092$1l2agK)
                                   (if g$ls/false$10092$1l2agK
                                     (apply
                                       (case-lambda
                                         ((g$rename$10093$1l2agK
                                            g$i*$10094$1l2agK
                                            g$e*$10095$1l2agK)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$7765$1l2agK
                                                                g$rename$10093$1l2agK)
                                                              'rename)
                                                       (if (g$for-all$5503$1l2agK
                                                             g$idsyn?$10084$1l2agK
                                                             g$i*$10094$1l2agK)
                                                         (begin
                                                           '#f
                                                           (g$for-all$5503$1l2agK
                                                             g$idsyn?$10084$1l2agK
                                                             g$e*$10095$1l2agK))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$7762$1l2agK
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$10086$1l2agK))
                                              (void))
                                            (g$f$10085$1l2agK
                                              (cdr g$exp*$10086$1l2agK)
                                              (append
                                                g$i*$10094$1l2agK
                                                g$int*$10087$1l2agK)
                                              (append
                                                g$e*$10095$1l2agK
                                                g$ext*$10088$1l2agK)))))
                                       g$ls/false$10092$1l2agK)
                                     ((case-lambda
                                        ((g$t$10096$1l2agK)
                                         ((case-lambda
                                            ((g$ls/false$10097$1l2agK)
                                             (if g$ls/false$10097$1l2agK
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$10098$1l2agK)
                                                    (begin
                                                      (if (not (g$idsyn?$10084$1l2agK
                                                                 g$ie$10098$1l2agK))
                                                        (g$syntax-violation$7762$1l2agK
                                                          'export
                                                          '"invalid export"
                                                          g$ie$10098$1l2agK)
                                                        (void))
                                                      (g$f$10085$1l2agK
                                                        (cdr g$exp*$10086$1l2agK)
                                                        (cons
                                                          g$ie$10098$1l2agK
                                                          g$int*$10087$1l2agK)
                                                        (cons
                                                          g$ie$10098$1l2agK
                                                          g$ext*$10088$1l2agK)))))
                                                 g$ls/false$10097$1l2agK)
                                               (g$syntax-violation$7762$1l2agK
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10096$1l2agK))))
                                          (g$syntax-dispatch$7651$1l2agK
                                            g$t$10096$1l2agK
                                            'any))))
                                      g$t$10091$1l2agK))))
                                (g$syntax-dispatch$7651$1l2agK
                                  g$t$10091$1l2agK
                                  '(any . #(each (any any)))))))
                            (car g$exp*$10086$1l2agK)))))))
             g$f$10085$1l2agK)
           g$exp*$10083$1l2agK
           '()
           '())))))
   (g$parse-library-name$7698$1l2agK
     g$parse-library-name$11144$1l2agK
     (case-lambda
       ((g$spec$10100$1l2agK)
        (letrec* ((g$parse$10101$1l2agK
                    (case-lambda
                      ((g$x$10108$1l2agK)
                       ((case-lambda
                          ((g$t$10109$1l2agK)
                           ((case-lambda
                              ((g$ls/false$10110$1l2agK)
                               (if (if g$ls/false$10110$1l2agK
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10111$1l2agK)
                                            (g$for-all$5503$1l2agK
                                              (case-lambda
                                                ((g$x$10112$1l2agK)
                                                 ((case-lambda
                                                    ((g$x$10113$1l2agK)
                                                     (if (integer?
                                                           g$x$10113$1l2agK)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10113$1l2agK))
                                                       '#f)))
                                                  (g$syntax->datum$7765$1l2agK
                                                    g$x$10112$1l2agK))))
                                              g$v*$10111$1l2agK)))
                                         g$ls/false$10110$1l2agK))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10114$1l2agK)
                                      (values
                                        '()
                                        (map g$syntax->datum$7765$1l2agK
                                             g$v*$10114$1l2agK))))
                                   g$ls/false$10110$1l2agK)
                                 ((case-lambda
                                    ((g$t$10115$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$10116$1l2agK)
                                         (if (if g$ls/false$10116$1l2agK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10117$1l2agK
                                                        g$rest$10118$1l2agK)
                                                      (symbol?
                                                        (g$syntax->datum$7765$1l2agK
                                                          g$x$10117$1l2agK))))
                                                   g$ls/false$10116$1l2agK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10119$1l2agK
                                                  g$rest$10120$1l2agK)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10101$1l2agK
                                                       g$rest$10120$1l2agK)))
                                                  (case-lambda
                                                    ((g$x*$10123$1l2agK
                                                       g$v*$10124$1l2agK)
                                                     ((case-lambda
                                                        ((g$v*$10125$1l2agK
                                                           g$x*$10126$1l2agK)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7765$1l2agK
                                                               g$x$10119$1l2agK)
                                                             g$x*$10126$1l2agK)
                                                           g$v*$10125$1l2agK)))
                                                      g$v*$10124$1l2agK
                                                      g$x*$10123$1l2agK))))))
                                             g$ls/false$10116$1l2agK)
                                           ((case-lambda
                                              ((g$t$10127$1l2agK)
                                               ((case-lambda
                                                  ((g$ls/false$10128$1l2agK)
                                                   (if g$ls/false$10128$1l2agK
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10128$1l2agK)
                                                     ((case-lambda
                                                        ((g$t$10129$1l2agK)
                                                         ((case-lambda
                                                            ((g$ls/false$10130$1l2agK)
                                                             (if g$ls/false$10130$1l2agK
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7762$1l2agK
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10100$1l2agK)))
                                                                 g$ls/false$10130$1l2agK)
                                                               (g$syntax-violation$7762$1l2agK
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10129$1l2agK))))
                                                          (g$syntax-dispatch$7651$1l2agK
                                                            g$t$10129$1l2agK
                                                            '_))))
                                                      g$t$10127$1l2agK))))
                                                (g$syntax-dispatch$7651$1l2agK
                                                  g$t$10127$1l2agK
                                                  '()))))
                                            g$t$10115$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$10115$1l2agK
                                        '(any . any)))))
                                  g$t$10109$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$10109$1l2agK
                              '(each-any)))))
                        g$x$10108$1l2agK)))))
          (call-with-values
            (case-lambda (() (g$parse$10101$1l2agK g$spec$10100$1l2agK)))
            (case-lambda
              ((g$name*$10104$1l2agK g$ver*$10105$1l2agK)
               ((case-lambda
                  ((g$ver*$10106$1l2agK g$name*$10107$1l2agK)
                   (begin
                     (if (null? g$name*$10107$1l2agK)
                       (g$syntax-violation$7762$1l2agK
                         '#f
                         '"empty library name"
                         g$spec$10100$1l2agK)
                       (void))
                     (values g$name*$10107$1l2agK g$ver*$10106$1l2agK))))
                g$ver*$10105$1l2agK
                g$name*$10104$1l2agK))))))))
   (g$parse-library$7699$1l2agK
     g$parse-library$11145$1l2agK
     (case-lambda
       ((g$e$10131$1l2agK)
        ((case-lambda
           ((g$t$10132$1l2agK)
            ((case-lambda
               ((g$ls/false$10133$1l2agK)
                (if (if g$ls/false$10133$1l2agK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10134$1l2agK
                               g$name*$10135$1l2agK
                               g$export$10136$1l2agK
                               g$exp*$10137$1l2agK
                               g$import$10138$1l2agK
                               g$imp*$10139$1l2agK
                               g$b*$10140$1l2agK)
                             (if (eq? (g$syntax->datum$7765$1l2agK
                                        g$export$10136$1l2agK)
                                      'export)
                               (if (eq? (g$syntax->datum$7765$1l2agK
                                          g$import$10138$1l2agK)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7765$1l2agK
                                          g$library$10134$1l2agK)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10133$1l2agK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10141$1l2agK
                         g$name*$10142$1l2agK
                         g$export$10143$1l2agK
                         g$exp*$10144$1l2agK
                         g$import$10145$1l2agK
                         g$imp*$10146$1l2agK
                         g$b*$10147$1l2agK)
                       (values
                         g$name*$10142$1l2agK
                         g$exp*$10144$1l2agK
                         g$imp*$10146$1l2agK
                         g$b*$10147$1l2agK)))
                    g$ls/false$10133$1l2agK)
                  ((case-lambda
                     ((g$t$10148$1l2agK)
                      ((case-lambda
                         ((g$ls/false$10149$1l2agK)
                          (if g$ls/false$10149$1l2agK
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7762$1l2agK
                                   '#f
                                   '"malformed library"
                                   g$e$10131$1l2agK)))
                              g$ls/false$10149$1l2agK)
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"invalid syntax"
                              g$t$10148$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK g$t$10148$1l2agK '_))))
                   g$t$10132$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$10132$1l2agK
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10131$1l2agK))))
   (g$parse-import-spec*$7700$1l2agK
     g$parse-import-spec*$11146$1l2agK
     (case-lambda
       ((g$imp*$10150$1l2agK)
        (letrec* ((g$idsyn?$10151$1l2agK
                    (case-lambda
                      ((g$x$10411$1l2agK)
                       (symbol?
                         (g$syntax->datum$7765$1l2agK g$x$10411$1l2agK)))))
                  (g$dup-error$10152$1l2agK
                    (case-lambda
                      ((g$name$10410$1l2agK)
                       (g$syntax-violation$7762$1l2agK
                         'import
                         '"two imports with different bindings"
                         g$name$10410$1l2agK))))
                  (g$merge-substs$10153$1l2agK
                    (case-lambda
                      ((g$s$10401$1l2agK g$subst$10402$1l2agK)
                       (letrec* ((g$insert-to-subst$10403$1l2agK
                                   (case-lambda
                                     ((g$a$10404$1l2agK g$subst$10405$1l2agK)
                                      ((case-lambda
                                         ((g$name$10406$1l2agK
                                            g$label$10407$1l2agK)
                                          ((case-lambda
                                             ((g$t$10408$1l2agK)
                                              (if g$t$10408$1l2agK
                                                ((case-lambda
                                                   ((g$x$10409$1l2agK)
                                                    (if (eq? (cdr g$x$10409$1l2agK)
                                                             g$label$10407$1l2agK)
                                                      g$subst$10405$1l2agK
                                                      (g$dup-error$10152$1l2agK
                                                        g$name$10406$1l2agK))))
                                                 g$t$10408$1l2agK)
                                                (cons
                                                  g$a$10404$1l2agK
                                                  g$subst$10405$1l2agK))))
                                           (assq
                                             g$name$10406$1l2agK
                                             g$subst$10405$1l2agK))))
                                       (car g$a$10404$1l2agK)
                                       (cdr g$a$10404$1l2agK))))))
                         (if (null? g$s$10401$1l2agK)
                           g$subst$10402$1l2agK
                           (g$insert-to-subst$10403$1l2agK
                             (car g$s$10401$1l2agK)
                             (g$merge-substs$10153$1l2agK
                               (cdr g$s$10401$1l2agK)
                               g$subst$10402$1l2agK)))))))
                  (g$exclude*$10154$1l2agK
                    (case-lambda
                      ((g$sym*$10377$1l2agK g$subst$10378$1l2agK)
                       (letrec* ((g$exclude$10379$1l2agK
                                   (case-lambda
                                     ((g$sym$10392$1l2agK g$subst$10393$1l2agK)
                                      (if (null? g$subst$10393$1l2agK)
                                        (g$syntax-violation$7762$1l2agK
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10392$1l2agK)
                                        (if (eq? g$sym$10392$1l2agK
                                                 (g$caar$5021$1l2agK
                                                   g$subst$10393$1l2agK))
                                          (values
                                            (g$cdar$5023$1l2agK
                                              g$subst$10393$1l2agK)
                                            (cdr g$subst$10393$1l2agK))
                                          ((case-lambda
                                             ((g$a$10394$1l2agK)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10379$1l2agK
                                                     g$sym$10392$1l2agK
                                                     (cdr g$subst$10393$1l2agK))))
                                                (case-lambda
                                                  ((g$old$10397$1l2agK
                                                     g$subst$10398$1l2agK)
                                                   ((case-lambda
                                                      ((g$subst$10399$1l2agK
                                                         g$old$10400$1l2agK)
                                                       (values
                                                         g$old$10400$1l2agK
                                                         (cons
                                                           g$a$10394$1l2agK
                                                           g$subst$10399$1l2agK))))
                                                    g$subst$10398$1l2agK
                                                    g$old$10397$1l2agK))))))
                                           (car g$subst$10393$1l2agK))))))))
                         (if (null? g$sym*$10377$1l2agK)
                           (values '() g$subst$10378$1l2agK)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10379$1l2agK
                                  (car g$sym*$10377$1l2agK)
                                  g$subst$10378$1l2agK)))
                             (case-lambda
                               ((g$old$10382$1l2agK g$subst$10383$1l2agK)
                                ((case-lambda
                                   ((g$subst$10384$1l2agK g$old$10385$1l2agK)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10154$1l2agK
                                           (cdr g$sym*$10377$1l2agK)
                                           g$subst$10384$1l2agK)))
                                      (case-lambda
                                        ((g$old*$10388$1l2agK
                                           g$subst$10389$1l2agK)
                                         ((case-lambda
                                            ((g$subst$10390$1l2agK
                                               g$old*$10391$1l2agK)
                                             (values
                                               (cons
                                                 g$old$10385$1l2agK
                                                 g$old*$10391$1l2agK)
                                               g$subst$10390$1l2agK)))
                                          g$subst$10389$1l2agK
                                          g$old*$10388$1l2agK))))))
                                 g$subst$10383$1l2agK
                                 g$old$10382$1l2agK)))))))))
                  (g$find*$10155$1l2agK
                    (case-lambda
                      ((g$sym*$10373$1l2agK g$subst$10374$1l2agK)
                       (map (case-lambda
                              ((g$x$10375$1l2agK)
                               ((case-lambda
                                  ((g$t$10376$1l2agK)
                                   (if g$t$10376$1l2agK
                                     (cdr g$t$10376$1l2agK)
                                     (g$syntax-violation$7762$1l2agK
                                       'import
                                       '"cannot find identifier"
                                       g$x$10375$1l2agK))))
                                (assq g$x$10375$1l2agK g$subst$10374$1l2agK))))
                            g$sym*$10373$1l2agK))))
                  (g$rem*$10156$1l2agK
                    (case-lambda
                      ((g$sym*$10369$1l2agK g$subst$10370$1l2agK)
                       ((letrec ((g$f$10371$1l2agK
                                   (case-lambda
                                     ((g$subst$10372$1l2agK)
                                      (if (null? g$subst$10372$1l2agK)
                                        '()
                                        (if (memq
                                              (g$caar$5021$1l2agK
                                                g$subst$10372$1l2agK)
                                              g$sym*$10369$1l2agK)
                                          (g$f$10371$1l2agK
                                            (cdr g$subst$10372$1l2agK))
                                          (cons
                                            (car g$subst$10372$1l2agK)
                                            (g$f$10371$1l2agK
                                              (cdr g$subst$10372$1l2agK)))))))))
                          g$f$10371$1l2agK)
                        g$subst$10370$1l2agK))))
                  (g$remove-dups$10157$1l2agK
                    (case-lambda
                      ((g$ls$10368$1l2agK)
                       (if (null? g$ls$10368$1l2agK)
                         '()
                         (if (memq
                               (car g$ls$10368$1l2agK)
                               (cdr g$ls$10368$1l2agK))
                           (g$remove-dups$10157$1l2agK (cdr g$ls$10368$1l2agK))
                           (cons
                             (car g$ls$10368$1l2agK)
                             (g$remove-dups$10157$1l2agK
                               (cdr g$ls$10368$1l2agK))))))))
                  (g$parse-library-name$10158$1l2agK
                    (case-lambda
                      ((g$spec$10252$1l2agK)
                       (letrec* ((g$subversion?$10253$1l2agK
                                   (case-lambda
                                     ((g$x$10366$1l2agK)
                                      ((case-lambda
                                         ((g$x$10367$1l2agK)
                                          (if (integer? g$x$10367$1l2agK)
                                            (if (exact? g$x$10367$1l2agK)
                                              (begin
                                                '#f
                                                (>= g$x$10367$1l2agK '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$7765$1l2agK
                                         g$x$10366$1l2agK)))))
                                 (g$subversion-pred$10254$1l2agK
                                   (case-lambda
                                     ((g$x*$10318$1l2agK)
                                      ((case-lambda
                                         ((g$t$10319$1l2agK)
                                          ((case-lambda
                                             ((g$ls/false$10320$1l2agK)
                                              (if (if g$ls/false$10320$1l2agK
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10321$1l2agK)
                                                           (g$subversion?$10253$1l2agK
                                                             g$n$10321$1l2agK)))
                                                        g$ls/false$10320$1l2agK))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10322$1l2agK)
                                                     (case-lambda
                                                       ((g$x$10323$1l2agK)
                                                        (= g$x$10323$1l2agK
                                                           (g$syntax->datum$7765$1l2agK
                                                             g$n$10322$1l2agK))))))
                                                  g$ls/false$10320$1l2agK)
                                                ((case-lambda
                                                   ((g$t$10324$1l2agK)
                                                    ((case-lambda
                                                       ((g$ls/false$10325$1l2agK)
                                                        (if (if g$ls/false$10325$1l2agK
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10326$1l2agK
                                                                       g$sub*$10327$1l2agK)
                                                                     (eq? (g$syntax->datum$7765$1l2agK
                                                                            g$p?$10326$1l2agK)
                                                                          'and)))
                                                                  g$ls/false$10325$1l2agK))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10328$1l2agK
                                                                 g$sub*$10329$1l2agK)
                                                               ((case-lambda
                                                                  ((g$p*$10330$1l2agK)
                                                                   (case-lambda
                                                                     ((g$x$10331$1l2agK)
                                                                      (g$for-all$5503$1l2agK
                                                                        (case-lambda
                                                                          ((g$p$10332$1l2agK)
                                                                           (g$p$10332$1l2agK
                                                                             g$x$10331$1l2agK)))
                                                                        g$p*$10330$1l2agK)))))
                                                                (map g$subversion-pred$10254$1l2agK
                                                                     g$sub*$10329$1l2agK))))
                                                            g$ls/false$10325$1l2agK)
                                                          ((case-lambda
                                                             ((g$t$10333$1l2agK)
                                                              ((case-lambda
                                                                 ((g$ls/false$10334$1l2agK)
                                                                  (if (if g$ls/false$10334$1l2agK
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10335$1l2agK
                                                                                 g$sub*$10336$1l2agK)
                                                                               (eq? (g$syntax->datum$7765$1l2agK
                                                                                      g$p?$10335$1l2agK)
                                                                                    'or)))
                                                                            g$ls/false$10334$1l2agK))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10337$1l2agK
                                                                           g$sub*$10338$1l2agK)
                                                                         ((case-lambda
                                                                            ((g$p*$10339$1l2agK)
                                                                             (case-lambda
                                                                               ((g$x$10340$1l2agK)
                                                                                (g$exists$5504$1l2agK
                                                                                  (case-lambda
                                                                                    ((g$p$10341$1l2agK)
                                                                                     (g$p$10341$1l2agK
                                                                                       g$x$10340$1l2agK)))
                                                                                  g$p*$10339$1l2agK)))))
                                                                          (map g$subversion-pred$10254$1l2agK
                                                                               g$sub*$10338$1l2agK))))
                                                                      g$ls/false$10334$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$t$10342$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10343$1l2agK)
                                                                            (if (if g$ls/false$10343$1l2agK
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10344$1l2agK
                                                                                           g$sub$10345$1l2agK)
                                                                                         (eq? (g$syntax->datum$7765$1l2agK
                                                                                                g$p?$10344$1l2agK)
                                                                                              'not)))
                                                                                      g$ls/false$10343$1l2agK))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10346$1l2agK
                                                                                     g$sub$10347$1l2agK)
                                                                                   ((case-lambda
                                                                                      ((g$p$10348$1l2agK)
                                                                                       (case-lambda
                                                                                         ((g$x$10349$1l2agK)
                                                                                          (not (g$p$10348$1l2agK
                                                                                                 g$x$10349$1l2agK))))))
                                                                                    (g$subversion-pred$10254$1l2agK
                                                                                      g$sub$10347$1l2agK))))
                                                                                g$ls/false$10343$1l2agK)
                                                                              ((case-lambda
                                                                                 ((g$t$10350$1l2agK)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10351$1l2agK)
                                                                                      (if (if g$ls/false$10351$1l2agK
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10352$1l2agK
                                                                                                     g$n$10353$1l2agK)
                                                                                                   (if (eq? (g$syntax->datum$7765$1l2agK
                                                                                                              g$p?$10352$1l2agK)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10253$1l2agK
                                                                                                         g$n$10353$1l2agK))
                                                                                                     '#f)))
                                                                                                g$ls/false$10351$1l2agK))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10354$1l2agK
                                                                                               g$n$10355$1l2agK)
                                                                                             (case-lambda
                                                                                               ((g$x$10356$1l2agK)
                                                                                                (<= g$x$10356$1l2agK
                                                                                                    (g$syntax->datum$7765$1l2agK
                                                                                                      g$n$10355$1l2agK))))))
                                                                                          g$ls/false$10351$1l2agK)
                                                                                        ((case-lambda
                                                                                           ((g$t$10357$1l2agK)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10358$1l2agK)
                                                                                                (if (if g$ls/false$10358$1l2agK
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10359$1l2agK
                                                                                                               g$n$10360$1l2agK)
                                                                                                             (if (eq? (g$syntax->datum$7765$1l2agK
                                                                                                                        g$p?$10359$1l2agK)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10253$1l2agK
                                                                                                                   g$n$10360$1l2agK))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10358$1l2agK))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10361$1l2agK
                                                                                                         g$n$10362$1l2agK)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10363$1l2agK)
                                                                                                          (>= g$x$10363$1l2agK
                                                                                                              (g$syntax->datum$7765$1l2agK
                                                                                                                g$n$10362$1l2agK))))))
                                                                                                    g$ls/false$10358$1l2agK)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10364$1l2agK)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10365$1l2agK)
                                                                                                          (if g$ls/false$10365$1l2agK
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7762$1l2agK
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10252$1l2agK
                                                                                                                   g$x*$10318$1l2agK)))
                                                                                                              g$ls/false$10365$1l2agK)
                                                                                                            (g$syntax-violation$7762$1l2agK
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10364$1l2agK))))
                                                                                                       (g$syntax-dispatch$7651$1l2agK
                                                                                                         g$t$10364$1l2agK
                                                                                                         '_))))
                                                                                                   g$t$10357$1l2agK))))
                                                                                             (g$syntax-dispatch$7651$1l2agK
                                                                                               g$t$10357$1l2agK
                                                                                               '(any any)))))
                                                                                         g$t$10350$1l2agK))))
                                                                                   (g$syntax-dispatch$7651$1l2agK
                                                                                     g$t$10350$1l2agK
                                                                                     '(any any)))))
                                                                               g$t$10342$1l2agK))))
                                                                         (g$syntax-dispatch$7651$1l2agK
                                                                           g$t$10342$1l2agK
                                                                           '(any any)))))
                                                                     g$t$10333$1l2agK))))
                                                               (g$syntax-dispatch$7651$1l2agK
                                                                 g$t$10333$1l2agK
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10324$1l2agK))))
                                                     (g$syntax-dispatch$7651$1l2agK
                                                       g$t$10324$1l2agK
                                                       '(any . each-any)))))
                                                 g$t$10319$1l2agK))))
                                           (g$syntax-dispatch$7651$1l2agK
                                             g$t$10319$1l2agK
                                             'any))))
                                       g$x*$10318$1l2agK))))
                                 (g$version-pred$10255$1l2agK
                                   (case-lambda
                                     ((g$x*$10278$1l2agK)
                                      ((case-lambda
                                         ((g$t$10279$1l2agK)
                                          ((case-lambda
                                             ((g$ls/false$10280$1l2agK)
                                              (if g$ls/false$10280$1l2agK
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10281$1l2agK)
                                                        '#t))))
                                                  g$ls/false$10280$1l2agK)
                                                ((case-lambda
                                                   ((g$t$10282$1l2agK)
                                                    ((case-lambda
                                                       ((g$ls/false$10283$1l2agK)
                                                        (if (if g$ls/false$10283$1l2agK
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10284$1l2agK
                                                                       g$ver*$10285$1l2agK)
                                                                     (eq? (g$syntax->datum$7765$1l2agK
                                                                            g$c$10284$1l2agK)
                                                                          'and)))
                                                                  g$ls/false$10283$1l2agK))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10286$1l2agK
                                                                 g$ver*$10287$1l2agK)
                                                               ((case-lambda
                                                                  ((g$p*$10288$1l2agK)
                                                                   (case-lambda
                                                                     ((g$x$10289$1l2agK)
                                                                      (g$for-all$5503$1l2agK
                                                                        (case-lambda
                                                                          ((g$p$10290$1l2agK)
                                                                           (g$p$10290$1l2agK
                                                                             g$x$10289$1l2agK)))
                                                                        g$p*$10288$1l2agK)))))
                                                                (map g$version-pred$10255$1l2agK
                                                                     g$ver*$10287$1l2agK))))
                                                            g$ls/false$10283$1l2agK)
                                                          ((case-lambda
                                                             ((g$t$10291$1l2agK)
                                                              ((case-lambda
                                                                 ((g$ls/false$10292$1l2agK)
                                                                  (if (if g$ls/false$10292$1l2agK
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10293$1l2agK
                                                                                 g$ver*$10294$1l2agK)
                                                                               (eq? (g$syntax->datum$7765$1l2agK
                                                                                      g$c$10293$1l2agK)
                                                                                    'or)))
                                                                            g$ls/false$10292$1l2agK))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10295$1l2agK
                                                                           g$ver*$10296$1l2agK)
                                                                         ((case-lambda
                                                                            ((g$p*$10297$1l2agK)
                                                                             (case-lambda
                                                                               ((g$x$10298$1l2agK)
                                                                                (g$exists$5504$1l2agK
                                                                                  (case-lambda
                                                                                    ((g$p$10299$1l2agK)
                                                                                     (g$p$10299$1l2agK
                                                                                       g$x$10298$1l2agK)))
                                                                                  g$p*$10297$1l2agK)))))
                                                                          (map g$version-pred$10255$1l2agK
                                                                               g$ver*$10296$1l2agK))))
                                                                      g$ls/false$10292$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$t$10300$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10301$1l2agK)
                                                                            (if (if g$ls/false$10301$1l2agK
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10302$1l2agK
                                                                                           g$ver$10303$1l2agK)
                                                                                         (eq? (g$syntax->datum$7765$1l2agK
                                                                                                g$c$10302$1l2agK)
                                                                                              'not)))
                                                                                      g$ls/false$10301$1l2agK))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10304$1l2agK
                                                                                     g$ver$10305$1l2agK)
                                                                                   ((case-lambda
                                                                                      ((g$p$10306$1l2agK)
                                                                                       (case-lambda
                                                                                         ((g$x$10307$1l2agK)
                                                                                          (not (g$p$10306$1l2agK
                                                                                                 g$x$10307$1l2agK))))))
                                                                                    (g$version-pred$10255$1l2agK
                                                                                      g$ver$10305$1l2agK))))
                                                                                g$ls/false$10301$1l2agK)
                                                                              ((case-lambda
                                                                                 ((g$t$10308$1l2agK)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10309$1l2agK)
                                                                                      (if g$ls/false$10309$1l2agK
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10310$1l2agK)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10311$1l2agK)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10312$1l2agK)
                                                                                                    ((letrec ((g$f$10313$1l2agK
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10314$1l2agK
                                                                                                                     g$x$10315$1l2agK)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10314$1l2agK)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10315$1l2agK)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10314$1l2agK)
                                                                                                                            (car g$x$10315$1l2agK))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10313$1l2agK
                                                                                                                             (cdr g$p*$10314$1l2agK)
                                                                                                                             (cdr g$x$10315$1l2agK)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10313$1l2agK)
                                                                                                     g$p*$10311$1l2agK
                                                                                                     g$x$10312$1l2agK)))))
                                                                                              (map g$subversion-pred$10254$1l2agK
                                                                                                   g$sub*$10310$1l2agK))))
                                                                                          g$ls/false$10309$1l2agK)
                                                                                        ((case-lambda
                                                                                           ((g$t$10316$1l2agK)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10317$1l2agK)
                                                                                                (if g$ls/false$10317$1l2agK
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7762$1l2agK
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10252$1l2agK
                                                                                                         g$x*$10278$1l2agK)))
                                                                                                    g$ls/false$10317$1l2agK)
                                                                                                  (g$syntax-violation$7762$1l2agK
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10316$1l2agK))))
                                                                                             (g$syntax-dispatch$7651$1l2agK
                                                                                               g$t$10316$1l2agK
                                                                                               '_))))
                                                                                         g$t$10308$1l2agK))))
                                                                                   (g$syntax-dispatch$7651$1l2agK
                                                                                     g$t$10308$1l2agK
                                                                                     'each-any))))
                                                                               g$t$10300$1l2agK))))
                                                                         (g$syntax-dispatch$7651$1l2agK
                                                                           g$t$10300$1l2agK
                                                                           '(any any)))))
                                                                     g$t$10291$1l2agK))))
                                                               (g$syntax-dispatch$7651$1l2agK
                                                                 g$t$10291$1l2agK
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10282$1l2agK))))
                                                     (g$syntax-dispatch$7651$1l2agK
                                                       g$t$10282$1l2agK
                                                       '(any . each-any)))))
                                                 g$t$10279$1l2agK))))
                                           (g$syntax-dispatch$7651$1l2agK
                                             g$t$10279$1l2agK
                                             '()))))
                                       g$x*$10278$1l2agK)))))
                         ((letrec ((g$f$10256$1l2agK
                                     (case-lambda
                                       ((g$x$10257$1l2agK)
                                        ((case-lambda
                                           ((g$t$10258$1l2agK)
                                            ((case-lambda
                                               ((g$ls/false$10259$1l2agK)
                                                (if g$ls/false$10259$1l2agK
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10260$1l2agK)
                                                       (values
                                                         '()
                                                         (g$version-pred$10255$1l2agK
                                                           g$version-spec*$10260$1l2agK))))
                                                    g$ls/false$10259$1l2agK)
                                                  ((case-lambda
                                                     ((g$t$10261$1l2agK)
                                                      ((case-lambda
                                                         ((g$ls/false$10262$1l2agK)
                                                          (if (if g$ls/false$10262$1l2agK
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10263$1l2agK
                                                                         g$x*$10264$1l2agK)
                                                                       (g$idsyn?$10151$1l2agK
                                                                         g$x$10263$1l2agK)))
                                                                    g$ls/false$10262$1l2agK))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10265$1l2agK
                                                                   g$x*$10266$1l2agK)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10256$1l2agK
                                                                        g$x*$10266$1l2agK)))
                                                                   (case-lambda
                                                                     ((g$name$10269$1l2agK
                                                                        g$pred$10270$1l2agK)
                                                                      ((case-lambda
                                                                         ((g$pred$10271$1l2agK
                                                                            g$name$10272$1l2agK)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7765$1l2agK
                                                                                g$x$10265$1l2agK)
                                                                              g$name$10272$1l2agK)
                                                                            g$pred$10271$1l2agK)))
                                                                       g$pred$10270$1l2agK
                                                                       g$name$10269$1l2agK))))))
                                                              g$ls/false$10262$1l2agK)
                                                            ((case-lambda
                                                               ((g$t$10273$1l2agK)
                                                                ((case-lambda
                                                                   ((g$ls/false$10274$1l2agK)
                                                                    (if g$ls/false$10274$1l2agK
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10275$1l2agK)
                                                                                '#t)))))
                                                                        g$ls/false$10274$1l2agK)
                                                                      ((case-lambda
                                                                         ((g$t$10276$1l2agK)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10277$1l2agK)
                                                                              (if g$ls/false$10277$1l2agK
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7762$1l2agK
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10252$1l2agK)))
                                                                                  g$ls/false$10277$1l2agK)
                                                                                (g$syntax-violation$7762$1l2agK
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10276$1l2agK))))
                                                                           (g$syntax-dispatch$7651$1l2agK
                                                                             g$t$10276$1l2agK
                                                                             '_))))
                                                                       g$t$10273$1l2agK))))
                                                                 (g$syntax-dispatch$7651$1l2agK
                                                                   g$t$10273$1l2agK
                                                                   '()))))
                                                             g$t$10261$1l2agK))))
                                                       (g$syntax-dispatch$7651$1l2agK
                                                         g$t$10261$1l2agK
                                                         '(any . any)))))
                                                   g$t$10258$1l2agK))))
                                             (g$syntax-dispatch$7651$1l2agK
                                               g$t$10258$1l2agK
                                               '(each-any)))))
                                         g$x$10257$1l2agK)))))
                            g$f$10256$1l2agK)
                          g$spec$10252$1l2agK)))))
                  (g$import-library$10159$1l2agK
                    (case-lambda
                      ((g$spec*$10244$1l2agK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10158$1l2agK
                              g$spec*$10244$1l2agK)))
                         (case-lambda
                           ((g$name$10247$1l2agK g$pred$10248$1l2agK)
                            ((case-lambda
                               ((g$pred$10249$1l2agK g$name$10250$1l2agK)
                                (begin
                                  (if (null? g$name$10250$1l2agK)
                                    (g$syntax-violation$7762$1l2agK
                                      'import
                                      '"empty library name"
                                      g$spec*$10244$1l2agK)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10251$1l2agK)
                                      (begin
                                        (if (not g$lib$10251$1l2agK)
                                          (g$syntax-violation$7762$1l2agK
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10250$1l2agK)
                                          (void))
                                        (if (not (g$pred$10249$1l2agK
                                                   (g$library-version$7141$1l2agK
                                                     g$lib$10251$1l2agK)))
                                          (g$syntax-violation$7762$1l2agK
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10244$1l2agK
                                            g$lib$10251$1l2agK)
                                          (void))
                                        ((g$imp-collector$7705$1l2agK)
                                         g$lib$10251$1l2agK)
                                        (g$library-subst$7145$1l2agK
                                          g$lib$10251$1l2agK))))
                                   (g$find-library-by-name$7181$1l2agK
                                     g$name$10250$1l2agK)))))
                             g$pred$10248$1l2agK
                             g$name$10247$1l2agK)))))))
                  (g$get-import$10160$1l2agK
                    (case-lambda
                      ((g$spec$10173$1l2agK)
                       ((case-lambda
                          ((g$t$10174$1l2agK)
                           ((case-lambda
                              ((g$ls/false$10175$1l2agK)
                               (if (if g$ls/false$10175$1l2agK
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10176$1l2agK g$x*$10177$1l2agK)
                                            (not (memq
                                                   (g$syntax->datum$7765$1l2agK
                                                     g$x$10176$1l2agK)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10175$1l2agK))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10178$1l2agK g$x*$10179$1l2agK)
                                      (g$import-library$10159$1l2agK
                                        (cons
                                          g$x$10178$1l2agK
                                          g$x*$10179$1l2agK))))
                                   g$ls/false$10175$1l2agK)
                                 ((case-lambda
                                    ((g$t$10180$1l2agK)
                                     ((case-lambda
                                        ((g$ls/false$10181$1l2agK)
                                         (if (if g$ls/false$10181$1l2agK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10182$1l2agK
                                                        g$isp$10183$1l2agK
                                                        g$old*$10184$1l2agK
                                                        g$new*$10185$1l2agK)
                                                      (if (eq? (g$syntax->datum$7765$1l2agK
                                                                 g$rename$10182$1l2agK)
                                                               'rename)
                                                        (if (g$for-all$5503$1l2agK
                                                              g$idsyn?$10151$1l2agK
                                                              g$old*$10184$1l2agK)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5503$1l2agK
                                                              g$idsyn?$10151$1l2agK
                                                              g$new*$10185$1l2agK))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10181$1l2agK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10186$1l2agK
                                                  g$isp$10187$1l2agK
                                                  g$old*$10188$1l2agK
                                                  g$new*$10189$1l2agK)
                                                ((case-lambda
                                                   ((g$subst$10190$1l2agK
                                                      g$old*$10191$1l2agK
                                                      g$new*$10192$1l2agK)
                                                    ((case-lambda
                                                       ((g$old-label*$10193$1l2agK)
                                                        ((case-lambda
                                                           ((g$subst$10194$1l2agK)
                                                            (g$merge-substs$10153$1l2agK
                                                              (map cons
                                                                   g$new*$10192$1l2agK
                                                                   g$old-label*$10193$1l2agK)
                                                              g$subst$10194$1l2agK)))
                                                         (g$rem*$10156$1l2agK
                                                           g$old*$10191$1l2agK
                                                           g$subst$10190$1l2agK))))
                                                     (g$find*$10155$1l2agK
                                                       g$old*$10191$1l2agK
                                                       g$subst$10190$1l2agK))))
                                                 (g$get-import$10160$1l2agK
                                                   g$isp$10187$1l2agK)
                                                 (map g$syntax->datum$7765$1l2agK
                                                      g$old*$10188$1l2agK)
                                                 (map g$syntax->datum$7765$1l2agK
                                                      g$new*$10189$1l2agK))))
                                             g$ls/false$10181$1l2agK)
                                           ((case-lambda
                                              ((g$t$10195$1l2agK)
                                               ((case-lambda
                                                  ((g$ls/false$10196$1l2agK)
                                                   (if (if g$ls/false$10196$1l2agK
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10197$1l2agK
                                                                  g$isp$10198$1l2agK
                                                                  g$sym*$10199$1l2agK)
                                                                (if (eq? (g$syntax->datum$7765$1l2agK
                                                                           g$except$10197$1l2agK)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5503$1l2agK
                                                                      g$idsyn?$10151$1l2agK
                                                                      g$sym*$10199$1l2agK))
                                                                  '#f)))
                                                             g$ls/false$10196$1l2agK))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10200$1l2agK
                                                            g$isp$10201$1l2agK
                                                            g$sym*$10202$1l2agK)
                                                          ((case-lambda
                                                             ((g$subst$10203$1l2agK)
                                                              (g$rem*$10156$1l2agK
                                                                (map g$syntax->datum$7765$1l2agK
                                                                     g$sym*$10202$1l2agK)
                                                                g$subst$10203$1l2agK)))
                                                           (g$get-import$10160$1l2agK
                                                             g$isp$10201$1l2agK))))
                                                       g$ls/false$10196$1l2agK)
                                                     ((case-lambda
                                                        ((g$t$10204$1l2agK)
                                                         ((case-lambda
                                                            ((g$ls/false$10205$1l2agK)
                                                             (if (if g$ls/false$10205$1l2agK
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10206$1l2agK
                                                                            g$isp$10207$1l2agK
                                                                            g$sym*$10208$1l2agK)
                                                                          (if (eq? (g$syntax->datum$7765$1l2agK
                                                                                     g$only$10206$1l2agK)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5503$1l2agK
                                                                                g$idsyn?$10151$1l2agK
                                                                                g$sym*$10208$1l2agK))
                                                                            '#f)))
                                                                       g$ls/false$10205$1l2agK))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10209$1l2agK
                                                                      g$isp$10210$1l2agK
                                                                      g$sym*$10211$1l2agK)
                                                                    ((case-lambda
                                                                       ((g$subst$10212$1l2agK
                                                                          g$sym*$10213$1l2agK)
                                                                        ((case-lambda
                                                                           ((g$sym*$10214$1l2agK)
                                                                            ((case-lambda
                                                                               ((g$lab*$10215$1l2agK)
                                                                                (map cons
                                                                                     g$sym*$10214$1l2agK
                                                                                     g$lab*$10215$1l2agK)))
                                                                             (g$find*$10155$1l2agK
                                                                               g$sym*$10214$1l2agK
                                                                               g$subst$10212$1l2agK))))
                                                                         (g$remove-dups$10157$1l2agK
                                                                           g$sym*$10213$1l2agK))))
                                                                     (g$get-import$10160$1l2agK
                                                                       g$isp$10210$1l2agK)
                                                                     (map g$syntax->datum$7765$1l2agK
                                                                          g$sym*$10211$1l2agK))))
                                                                 g$ls/false$10205$1l2agK)
                                                               ((case-lambda
                                                                  ((g$t$10216$1l2agK)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10217$1l2agK)
                                                                       (if (if g$ls/false$10217$1l2agK
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10218$1l2agK
                                                                                      g$isp$10219$1l2agK
                                                                                      g$p$10220$1l2agK)
                                                                                    (if (eq? (g$syntax->datum$7765$1l2agK
                                                                                               g$prefix$10218$1l2agK)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10151$1l2agK
                                                                                          g$p$10220$1l2agK))
                                                                                      '#f)))
                                                                                 g$ls/false$10217$1l2agK))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10221$1l2agK
                                                                                g$isp$10222$1l2agK
                                                                                g$p$10223$1l2agK)
                                                                              ((case-lambda
                                                                                 ((g$subst$10224$1l2agK
                                                                                    g$prefix$10225$1l2agK)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10226$1l2agK)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10225$1l2agK
                                                                                                (symbol->string
                                                                                                  (car g$x$10226$1l2agK))))
                                                                                            (cdr g$x$10226$1l2agK))))
                                                                                       g$subst$10224$1l2agK)))
                                                                               (g$get-import$10160$1l2agK
                                                                                 g$isp$10222$1l2agK)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7765$1l2agK
                                                                                   g$p$10223$1l2agK)))))
                                                                           g$ls/false$10217$1l2agK)
                                                                         ((case-lambda
                                                                            ((g$t$10227$1l2agK)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10228$1l2agK)
                                                                                 (if (if g$ls/false$10228$1l2agK
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10229$1l2agK
                                                                                                g$spec*$10230$1l2agK)
                                                                                              (eq? (g$syntax->datum$7765$1l2agK
                                                                                                     g$library$10229$1l2agK)
                                                                                                   'library)))
                                                                                           g$ls/false$10228$1l2agK))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10231$1l2agK
                                                                                          g$spec*$10232$1l2agK)
                                                                                        (g$import-library$10159$1l2agK
                                                                                          g$spec*$10232$1l2agK)))
                                                                                     g$ls/false$10228$1l2agK)
                                                                                   ((case-lambda
                                                                                      ((g$t$10233$1l2agK)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10234$1l2agK)
                                                                                           (if (if g$ls/false$10234$1l2agK
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10235$1l2agK
                                                                                                          g$isp$10236$1l2agK
                                                                                                          g$rest$10237$1l2agK)
                                                                                                        (eq? (g$syntax->datum$7765$1l2agK
                                                                                                               g$for$10235$1l2agK)
                                                                                                             'for)))
                                                                                                     g$ls/false$10234$1l2agK))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10238$1l2agK
                                                                                                    g$isp$10239$1l2agK
                                                                                                    g$rest$10240$1l2agK)
                                                                                                  (g$get-import$10160$1l2agK
                                                                                                    g$isp$10239$1l2agK)))
                                                                                               g$ls/false$10234$1l2agK)
                                                                                             ((case-lambda
                                                                                                ((g$t$10241$1l2agK)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10242$1l2agK)
                                                                                                     (if g$ls/false$10242$1l2agK
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10243$1l2agK)
                                                                                                            (g$syntax-violation$7762$1l2agK
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10243$1l2agK)))
                                                                                                         g$ls/false$10242$1l2agK)
                                                                                                       (g$syntax-violation$7762$1l2agK
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10241$1l2agK))))
                                                                                                  (g$syntax-dispatch$7651$1l2agK
                                                                                                    g$t$10241$1l2agK
                                                                                                    'any))))
                                                                                              g$t$10233$1l2agK))))
                                                                                        (g$syntax-dispatch$7651$1l2agK
                                                                                          g$t$10233$1l2agK
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10227$1l2agK))))
                                                                              (g$syntax-dispatch$7651$1l2agK
                                                                                g$t$10227$1l2agK
                                                                                '(any each-any)))))
                                                                          g$t$10216$1l2agK))))
                                                                    (g$syntax-dispatch$7651$1l2agK
                                                                      g$t$10216$1l2agK
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10204$1l2agK))))
                                                          (g$syntax-dispatch$7651$1l2agK
                                                            g$t$10204$1l2agK
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10195$1l2agK))))
                                                (g$syntax-dispatch$7651$1l2agK
                                                  g$t$10195$1l2agK
                                                  '(any any . each-any)))))
                                            g$t$10180$1l2agK))))
                                      (g$syntax-dispatch$7651$1l2agK
                                        g$t$10180$1l2agK
                                        '(any any . #(each (any any)))))))
                                  g$t$10174$1l2agK))))
                            (g$syntax-dispatch$7651$1l2agK
                              g$t$10174$1l2agK
                              '(any . each-any)))))
                        g$spec$10173$1l2agK))))
                  (g$add-imports!$10161$1l2agK
                    (case-lambda
                      ((g$imp$10165$1l2agK g$h$10166$1l2agK)
                       ((case-lambda
                          ((g$subst$10167$1l2agK)
                           (for-each
                             (case-lambda
                               ((g$x$10168$1l2agK)
                                ((case-lambda
                                   ((g$name$10169$1l2agK g$label$10170$1l2agK)
                                    ((case-lambda
                                       ((g$t$10171$1l2agK)
                                        (if g$t$10171$1l2agK
                                          ((case-lambda
                                             ((g$l$10172$1l2agK)
                                              (if (not (eq? g$l$10172$1l2agK
                                                            g$label$10170$1l2agK))
                                                (g$dup-error$10152$1l2agK
                                                  g$name$10169$1l2agK)
                                                (void))))
                                           g$t$10171$1l2agK)
                                          (g$hashtable-set!$5300$1l2agK
                                            g$h$10166$1l2agK
                                            g$name$10169$1l2agK
                                            g$label$10170$1l2agK))))
                                     (g$hashtable-ref$5299$1l2agK
                                       g$h$10166$1l2agK
                                       g$name$10169$1l2agK
                                       '#f))))
                                 (car g$x$10168$1l2agK)
                                 (cdr g$x$10168$1l2agK))))
                             g$subst$10167$1l2agK)))
                        (g$get-import$10160$1l2agK g$imp$10165$1l2agK))))))
          ((letrec ((g$f$10162$1l2agK
                      (case-lambda
                        ((g$imp*$10163$1l2agK g$h$10164$1l2agK)
                         (if (null? g$imp*$10163$1l2agK)
                           (hashtable-entries g$h$10164$1l2agK)
                           (begin
                             (g$add-imports!$10161$1l2agK
                               (car g$imp*$10163$1l2agK)
                               g$h$10164$1l2agK)
                             (g$f$10162$1l2agK
                               (cdr g$imp*$10163$1l2agK)
                               g$h$10164$1l2agK)))))))
             g$f$10162$1l2agK)
           g$imp*$10150$1l2agK
           (g$make-eq-hashtable$5296$1l2agK))))))
   (g$make-top-rib$7701$1l2agK
     g$make-top-rib$11147$1l2agK
     (case-lambda
       ((g$names$10412$1l2agK g$labels$10413$1l2agK)
        ((case-lambda
           ((g$rib$10414$1l2agK)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10415$1l2agK g$label$10416$1l2agK)
                   (begin
                     (if (not (symbol? g$name$10415$1l2agK))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10415$1l2agK)
                       (void))
                     (g$extend-rib!$7337$1l2agK
                       g$rib$10414$1l2agK
                       (g$make-stx$7346$1l2agK
                         g$name$10415$1l2agK
                         g$top-mark*$7315$1l2agK
                         '()
                         '())
                       g$label$10416$1l2agK))))
                g$names$10412$1l2agK
                g$labels$10413$1l2agK)
              g$rib$10414$1l2agK)))
         (g$make-empty-rib$7336$1l2agK)))))
   (g$make-collector$7702$1l2agK
     g$make-collector$11148$1l2agK
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10417$1l2agK)
            (case-lambda
              (() g$ls$10417$1l2agK)
              ((g$x$10418$1l2agK)
               (set! g$ls$10417$1l2agK
                 (g$set-cons$7312$1l2agK
                   g$x$10418$1l2agK
                   g$ls$10417$1l2agK))))))
         '()))))
   (g$inv-collector$7703$1l2agK
     g$inv-collector$11149$1l2agK
     (g$make-parameter$6640$1l2agK
       (case-lambda
         (g$args$10419$1l2agK
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10420$1l2agK)
          (begin
            (if (not (procedure? g$x$10420$1l2agK))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10420$1l2agK)
              (void))
            g$x$10420$1l2agK)))))
   (g$vis-collector$7704$1l2agK
     g$vis-collector$11150$1l2agK
     (g$make-parameter$6640$1l2agK
       (case-lambda
         (g$args$10421$1l2agK
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10422$1l2agK)
          (begin
            (if (not (procedure? g$x$10422$1l2agK))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10422$1l2agK)
              (void))
            g$x$10422$1l2agK)))))
   (g$imp-collector$7705$1l2agK
     g$imp-collector$11151$1l2agK
     (g$make-parameter$6640$1l2agK
       (case-lambda
         (g$args$10423$1l2agK
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10424$1l2agK)
          (begin
            (if (not (procedure? g$x$10424$1l2agK))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10424$1l2agK)
              (void))
            g$x$10424$1l2agK)))))
   (g$chi-library-internal$7706$1l2agK
     g$chi-library-internal$11152$1l2agK
     (case-lambda
       ((g$e*$10425$1l2agK g$rib$10426$1l2agK g$top?$10427$1l2agK)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7695$1l2agK
               g$e*$10425$1l2agK
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10426$1l2agK
               g$top?$10427$1l2agK)))
          (case-lambda
            ((g$e*$10435$1l2agK
               g$r$10436$1l2agK
               g$mr$10437$1l2agK
               g$lex*$10438$1l2agK
               g$rhs*$10439$1l2agK
               g$mod**$10440$1l2agK
               g$_kwd*$10441$1l2agK)
             ((case-lambda
                ((g$_kwd*$10442$1l2agK
                   g$mod**$10443$1l2agK
                   g$rhs*$10444$1l2agK
                   g$lex*$10445$1l2agK
                   g$mr$10446$1l2agK
                   g$r$10447$1l2agK
                   g$e*$10448$1l2agK)
                 (values
                   (append
                     (apply append (reverse g$mod**$10443$1l2agK))
                     g$e*$10448$1l2agK)
                   g$r$10447$1l2agK
                   g$mr$10446$1l2agK
                   (reverse g$lex*$10445$1l2agK)
                   (reverse g$rhs*$10444$1l2agK))))
              g$_kwd*$10441$1l2agK
              g$mod**$10440$1l2agK
              g$rhs*$10439$1l2agK
              g$lex*$10438$1l2agK
              g$mr$10437$1l2agK
              g$r$10436$1l2agK
              g$e*$10435$1l2agK)))))))
   (g$chi-interaction-expr$7707$1l2agK
     g$chi-interaction-expr$11153$1l2agK
     (case-lambda
       ((g$e$10449$1l2agK g$rib$10450$1l2agK g$r$10451$1l2agK)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7695$1l2agK
               (list g$e$10449$1l2agK)
               g$r$10451$1l2agK
               g$r$10451$1l2agK
               '()
               '()
               '()
               '()
               g$rib$10450$1l2agK
               '#t)))
          (case-lambda
            ((g$e*$10459$1l2agK
               g$r$10460$1l2agK
               g$mr$10461$1l2agK
               g$lex*$10462$1l2agK
               g$rhs*$10463$1l2agK
               g$mod**$10464$1l2agK
               g$_kwd*$10465$1l2agK)
             ((case-lambda
                ((g$_kwd*$10466$1l2agK
                   g$mod**$10467$1l2agK
                   g$rhs*$10468$1l2agK
                   g$lex*$10469$1l2agK
                   g$mr$10470$1l2agK
                   g$r$10471$1l2agK
                   g$e*$10472$1l2agK)
                 ((case-lambda
                    ((g$e*$10473$1l2agK)
                     ((case-lambda
                        ((g$e$10474$1l2agK)
                         (values g$e$10474$1l2agK g$r$10471$1l2agK)))
                      (if (null? g$e*$10473$1l2agK)
                        (g$build-void$7308$1l2agK)
                        (if (null? (cdr g$e*$10473$1l2agK))
                          (car g$e*$10473$1l2agK)
                          (g$build-sequence$7307$1l2agK
                            '#f
                            g$e*$10473$1l2agK))))))
                  (g$expand-interaction-rhs*/init*$7676$1l2agK
                    (reverse g$lex*$10469$1l2agK)
                    (reverse g$rhs*$10468$1l2agK)
                    (append
                      (apply append (reverse g$mod**$10467$1l2agK))
                      g$e*$10472$1l2agK)
                    g$r$10471$1l2agK
                    g$mr$10470$1l2agK))))
              g$_kwd*$10465$1l2agK
              g$mod**$10464$1l2agK
              g$rhs*$10463$1l2agK
              g$lex*$10462$1l2agK
              g$mr$10461$1l2agK
              g$r$10460$1l2agK
              g$e*$10459$1l2agK)))))))
   (g$library-body-expander$7708$1l2agK
     g$library-body-expander$11154$1l2agK
     (case-lambda
       ((g$name$10475$1l2agK
          g$exp*$10476$1l2agK
          g$imp*$10477$1l2agK
          g$b*$10478$1l2agK
          g$top?$10479$1l2agK)
        (letrec* ((g$itc$10480$1l2agK (g$make-collector$7702$1l2agK)))
          ((case-lambda
             ((g$imp-collector$10485$1l2agK
                g$top-level-context$10486$1l2agK
                g$imp-collector$10487$1l2agK
                g$top-level-context$10488$1l2agK)
              ((case-lambda
                 ((g$swap$10489$1l2agK)
                  (dynamic-wind
                    g$swap$10489$1l2agK
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-exports$7697$1l2agK g$exp*$10476$1l2agK)))
                         (case-lambda
                           ((g$exp-int*$10492$1l2agK g$exp-ext*$10493$1l2agK)
                            ((case-lambda
                               ((g$exp-ext*$10494$1l2agK
                                  g$exp-int*$10495$1l2agK)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7700$1l2agK
                                       g$imp*$10477$1l2agK)))
                                  (case-lambda
                                    ((g$subst-names$10498$1l2agK
                                       g$subst-labels$10499$1l2agK)
                                     ((case-lambda
                                        ((g$subst-labels$10500$1l2agK
                                           g$subst-names$10501$1l2agK)
                                         ((case-lambda
                                            ((g$rib$10502$1l2agK)
                                             ((case-lambda
                                                ((g$b*$10503$1l2agK
                                                   g$rtc$10504$1l2agK
                                                   g$vtc$10505$1l2agK)
                                                 ((case-lambda
                                                    ((g$inv-collector$10510$1l2agK
                                                       g$vis-collector$10511$1l2agK
                                                       g$inv-collector$10512$1l2agK
                                                       g$vis-collector$10513$1l2agK)
                                                     ((case-lambda
                                                        ((g$swap$10514$1l2agK)
                                                         (dynamic-wind
                                                           g$swap$10514$1l2agK
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7706$1l2agK
                                                                     g$b*$10503$1l2agK
                                                                     g$rib$10502$1l2agK
                                                                     g$top?$10479$1l2agK)))
                                                                (case-lambda
                                                                  ((g$init*$10520$1l2agK
                                                                     g$r$10521$1l2agK
                                                                     g$mr$10522$1l2agK
                                                                     g$lex*$10523$1l2agK
                                                                     g$rhs*$10524$1l2agK)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10525$1l2agK
                                                                         g$lex*$10526$1l2agK
                                                                         g$mr$10527$1l2agK
                                                                         g$r$10528$1l2agK
                                                                         g$init*$10529$1l2agK)
                                                                       (begin
                                                                         (g$seal-rib!$7339$1l2agK
                                                                           g$rib$10502$1l2agK)
                                                                         ((case-lambda
                                                                            ((g$init*$10530$1l2agK)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10531$1l2agK)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7340$1l2agK
                                                                                         g$rib$10502$1l2agK)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10532$1l2agK
                                                                                             g$export-subst$10533$1l2agK)
                                                                                           (letrec* ((g$errstr$10534$1l2agK
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7751$1l2agK
                                                                                                    g$lex*$10526$1l2agK
                                                                                                    g$loc*$10532$1l2agK
                                                                                                    g$r$10528$1l2agK)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10538$1l2agK
                                                                                                    g$global*$10539$1l2agK
                                                                                                    g$macro*$10540$1l2agK)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10541$1l2agK
                                                                                                        g$global*$10542$1l2agK
                                                                                                        g$export-env$10543$1l2agK)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10544$1l2agK)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10545$1l2agK
                                                                                                                   g$label$10546$1l2agK)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10547$1l2agK)
                                                                                                                     (if g$p$10547$1l2agK
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10548$1l2agK)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10549$1l2agK)
                                                                                                                               (if (eq? g$type$10549$1l2agK
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7762$1l2agK
                                                                                                                                   'export
                                                                                                                                   g$errstr$10534$1l2agK
                                                                                                                                   g$name$10545$1l2agK)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10548$1l2agK))))
                                                                                                                        (cdr g$p$10547$1l2agK))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10546$1l2agK
                                                                                                                    g$export-env$10543$1l2agK))))
                                                                                                              (car g$s$10544$1l2agK)
                                                                                                              (cdr g$s$10544$1l2agK))))
                                                                                                          g$export-subst$10533$1l2agK)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10550$1l2agK
                                                                                                              g$invoke-definitions$10551$1l2agK)
                                                                                                            (values
                                                                                                              (g$itc$10480$1l2agK)
                                                                                                              (g$rtc$10504$1l2agK)
                                                                                                              (g$vtc$10505$1l2agK)
                                                                                                              (g$build-sequence$7307$1l2agK
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10551$1l2agK
                                                                                                                  (list
                                                                                                                    g$invoke-body$10550$1l2agK)))
                                                                                                              g$macro*$10541$1l2agK
                                                                                                              g$export-subst$10533$1l2agK
                                                                                                              g$export-env$10543$1l2agK)))
                                                                                                         (g$build-library-letrec*$7311$1l2agK
                                                                                                           '#f
                                                                                                           g$name$10475$1l2agK
                                                                                                           g$lex*$10526$1l2agK
                                                                                                           g$loc*$10532$1l2agK
                                                                                                           g$rhs*$10531$1l2agK
                                                                                                           (if (null?
                                                                                                                 g$init*$10530$1l2agK)
                                                                                                             (g$build-void$7308$1l2agK)
                                                                                                             (g$build-sequence$7307$1l2agK
                                                                                                               '#f
                                                                                                               g$init*$10530$1l2agK)))
                                                                                                         (map g$build-global-define$7303$1l2agK
                                                                                                              (map cdr
                                                                                                                   g$global*$10542$1l2agK))))))
                                                                                                   g$macro*$10540$1l2agK
                                                                                                   g$global*$10539$1l2agK
                                                                                                   g$export-env$10538$1l2agK)))))))
                                                                                        (map g$gen-global$7318$1l2agK
                                                                                             g$lex*$10526$1l2agK)
                                                                                        (g$make-export-subst$7750$1l2agK
                                                                                          g$exp-int*$10495$1l2agK
                                                                                          g$exp-ext*$10494$1l2agK
                                                                                          g$rib$10502$1l2agK))))))))
                                                                              (g$chi-rhs*$7677$1l2agK
                                                                                g$rhs*$10525$1l2agK
                                                                                g$r$10528$1l2agK
                                                                                g$mr$10527$1l2agK))))
                                                                          (g$chi-expr*$7667$1l2agK
                                                                            g$init*$10529$1l2agK
                                                                            g$r$10528$1l2agK
                                                                            g$mr$10527$1l2agK)))))
                                                                    g$rhs*$10524$1l2agK
                                                                    g$lex*$10523$1l2agK
                                                                    g$mr$10522$1l2agK
                                                                    g$r$10521$1l2agK
                                                                    g$init*$10520$1l2agK))))))
                                                           g$swap$10514$1l2agK)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10552$1l2agK)
                                                               (begin
                                                                 (g$inv-collector$10510$1l2agK
                                                                   g$inv-collector$10512$1l2agK)
                                                                 (set! g$inv-collector$10512$1l2agK
                                                                   g$t$10552$1l2agK))))
                                                            (g$inv-collector$10510$1l2agK))
                                                           ((case-lambda
                                                              ((g$t$10553$1l2agK)
                                                               (begin
                                                                 (g$vis-collector$10511$1l2agK
                                                                   g$vis-collector$10513$1l2agK)
                                                                 (set! g$vis-collector$10513$1l2agK
                                                                   g$t$10553$1l2agK))))
                                                            (g$vis-collector$10511$1l2agK))))))))
                                                  g$inv-collector$7703$1l2agK
                                                  g$vis-collector$7704$1l2agK
                                                  g$rtc$10504$1l2agK
                                                  g$vtc$10505$1l2agK)))
                                              (map (case-lambda
                                                     ((g$x$10554$1l2agK)
                                                      (g$make-stx$7346$1l2agK
                                                        g$x$10554$1l2agK
                                                        g$top-mark*$7315$1l2agK
                                                        (list
                                                          g$rib$10502$1l2agK)
                                                        '())))
                                                   g$b*$10478$1l2agK)
                                              (g$make-collector$7702$1l2agK)
                                              (g$make-collector$7702$1l2agK))))
                                          (g$make-top-rib$7701$1l2agK
                                            g$subst-names$10501$1l2agK
                                            g$subst-labels$10500$1l2agK))))
                                      g$subst-labels$10499$1l2agK
                                      g$subst-names$10498$1l2agK))))))
                             g$exp-ext*$10493$1l2agK
                             g$exp-int*$10492$1l2agK))))))
                    g$swap$10489$1l2agK)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10555$1l2agK)
                        (begin
                          (g$imp-collector$10485$1l2agK
                            g$imp-collector$10487$1l2agK)
                          (set! g$imp-collector$10487$1l2agK
                            g$t$10555$1l2agK))))
                     (g$imp-collector$10485$1l2agK))
                    ((case-lambda
                       ((g$t$10556$1l2agK)
                        (begin
                          (g$top-level-context$10486$1l2agK
                            g$top-level-context$10488$1l2agK)
                          (set! g$top-level-context$10488$1l2agK
                            g$t$10556$1l2agK))))
                     (g$top-level-context$10486$1l2agK))))))))
           g$imp-collector$7705$1l2agK
           g$top-level-context$7769$1l2agK
           g$itc$10480$1l2agK
           '#f)))))
   (g$core-library-expander$7709$1l2agK
     g$core-library-expander$11155$1l2agK
     (case-lambda
       ((g$e$10557$1l2agK g$verify-name$10558$1l2agK)
        (call-with-values
          (case-lambda (() (g$parse-library$7699$1l2agK g$e$10557$1l2agK)))
          (case-lambda
            ((g$name*$10563$1l2agK
               g$exp*$10564$1l2agK
               g$imp*$10565$1l2agK
               g$b*$10566$1l2agK)
             ((case-lambda
                ((g$b*$10567$1l2agK
                   g$imp*$10568$1l2agK
                   g$exp*$10569$1l2agK
                   g$name*$10570$1l2agK)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$7698$1l2agK g$name*$10570$1l2agK)))
                   (case-lambda
                     ((g$name$10573$1l2agK g$ver$10574$1l2agK)
                      ((case-lambda
                         ((g$ver$10575$1l2agK g$name$10576$1l2agK)
                          (begin
                            (g$verify-name$10558$1l2agK g$name$10576$1l2agK)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7708$1l2agK
                                   g$name$10576$1l2agK
                                   g$exp*$10569$1l2agK
                                   g$imp*$10568$1l2agK
                                   g$b*$10567$1l2agK
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10584$1l2agK
                                   g$invoke-req*$10585$1l2agK
                                   g$visit-req*$10586$1l2agK
                                   g$invoke-code$10587$1l2agK
                                   g$visit-code$10588$1l2agK
                                   g$export-subst$10589$1l2agK
                                   g$export-env$10590$1l2agK)
                                 ((case-lambda
                                    ((g$export-env$10591$1l2agK
                                       g$export-subst$10592$1l2agK
                                       g$visit-code$10593$1l2agK
                                       g$invoke-code$10594$1l2agK
                                       g$visit-req*$10595$1l2agK
                                       g$invoke-req*$10596$1l2agK
                                       g$imp*$10597$1l2agK)
                                     (values
                                       g$name$10576$1l2agK
                                       g$ver$10575$1l2agK
                                       g$imp*$10597$1l2agK
                                       g$invoke-req*$10596$1l2agK
                                       g$visit-req*$10595$1l2agK
                                       g$invoke-code$10594$1l2agK
                                       g$visit-code$10593$1l2agK
                                       g$export-subst$10592$1l2agK
                                       g$export-env$10591$1l2agK)))
                                  g$export-env$10590$1l2agK
                                  g$export-subst$10589$1l2agK
                                  g$visit-code$10588$1l2agK
                                  g$invoke-code$10587$1l2agK
                                  g$visit-req*$10586$1l2agK
                                  g$invoke-req*$10585$1l2agK
                                  g$imp*$10584$1l2agK)))))))
                       g$ver$10574$1l2agK
                       g$name$10573$1l2agK))))))
              g$b*$10566$1l2agK
              g$imp*$10565$1l2agK
              g$exp*$10564$1l2agK
              g$name*$10563$1l2agK)))))))
   (g$parse-top-level-program$7710$1l2agK
     g$parse-top-level-program$11156$1l2agK
     (case-lambda
       ((g$e*$10598$1l2agK)
        ((case-lambda
           ((g$t$10599$1l2agK)
            ((case-lambda
               ((g$ls/false$10600$1l2agK)
                (if (if g$ls/false$10600$1l2agK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10601$1l2agK
                               g$imp*$10602$1l2agK
                               g$b*$10603$1l2agK)
                             (eq? (g$syntax->datum$7765$1l2agK
                                    g$import$10601$1l2agK)
                                  'import)))
                          g$ls/false$10600$1l2agK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10604$1l2agK
                         g$imp*$10605$1l2agK
                         g$b*$10606$1l2agK)
                       (values g$imp*$10605$1l2agK g$b*$10606$1l2agK)))
                    g$ls/false$10600$1l2agK)
                  ((case-lambda
                     ((g$t$10607$1l2agK)
                      ((case-lambda
                         ((g$ls/false$10608$1l2agK)
                          (if (if g$ls/false$10608$1l2agK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10609$1l2agK
                                         g$x$10610$1l2agK
                                         g$y$10611$1l2agK)
                                       (eq? (g$syntax->datum$7765$1l2agK
                                              g$import$10609$1l2agK)
                                            'import)))
                                    g$ls/false$10608$1l2agK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10612$1l2agK
                                   g$x$10613$1l2agK
                                   g$y$10614$1l2agK)
                                 (g$syntax-violation$7762$1l2agK
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7370$1l2agK
                                     g$e*$10598$1l2agK))))
                              g$ls/false$10608$1l2agK)
                            ((case-lambda
                               ((g$t$10615$1l2agK)
                                ((case-lambda
                                   ((g$ls/false$10616$1l2agK)
                                    (if g$ls/false$10616$1l2agK
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10616$1l2agK)
                                      (g$syntax-violation$7762$1l2agK
                                        '#f
                                        '"invalid syntax"
                                        g$t$10615$1l2agK))))
                                 (g$syntax-dispatch$7651$1l2agK
                                   g$t$10615$1l2agK
                                   '_))))
                             g$t$10607$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK
                         g$t$10607$1l2agK
                         '((any . any) . any)))))
                   g$t$10599$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK
               g$t$10599$1l2agK
               '((any . each-any) . each-any)))))
         g$e*$10598$1l2agK))))
   (g$top-level-expander$7711$1l2agK
     g$top-level-expander$11157$1l2agK
     (case-lambda
       ((g$e*$10617$1l2agK)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7710$1l2agK g$e*$10617$1l2agK)))
          (case-lambda
            ((g$imp*$10620$1l2agK g$b*$10621$1l2agK)
             ((case-lambda
                ((g$b*$10622$1l2agK g$imp*$10623$1l2agK)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7708$1l2agK
                        '()
                        '()
                        g$imp*$10623$1l2agK
                        g$b*$10622$1l2agK
                        '#t)))
                   (case-lambda
                     ((g$imp*$10631$1l2agK
                        g$invoke-req*$10632$1l2agK
                        g$visit-req*$10633$1l2agK
                        g$invoke-code$10634$1l2agK
                        g$visit-code$10635$1l2agK
                        g$export-subst$10636$1l2agK
                        g$export-env$10637$1l2agK)
                      ((case-lambda
                         ((g$export-env$10638$1l2agK
                            g$export-subst$10639$1l2agK
                            g$visit-code$10640$1l2agK
                            g$invoke-code$10641$1l2agK
                            g$visit-req*$10642$1l2agK
                            g$invoke-req*$10643$1l2agK
                            g$imp*$10644$1l2agK)
                          (values
                            g$invoke-req*$10643$1l2agK
                            g$invoke-code$10641$1l2agK)))
                       g$export-env$10637$1l2agK
                       g$export-subst$10636$1l2agK
                       g$visit-code$10635$1l2agK
                       g$invoke-code$10634$1l2agK
                       g$visit-req*$10633$1l2agK
                       g$invoke-req*$10632$1l2agK
                       g$imp*$10631$1l2agK))))))
              g$b*$10621$1l2agK
              g$imp*$10620$1l2agK)))))))
   (g$8908$7712$1l2agK
     g$8908$11158$1l2agK
     (make-record-type-descriptor
       'env
       '#f
       'g$8911$1l2agK
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8910$7713$1l2agK g$8910$11159$1l2agK '#f)
   (g$8909$7714$1l2agK
     g$8909$11160$1l2agK
     (make-record-constructor-descriptor
       g$8908$7712$1l2agK
       '#f
       g$8910$7713$1l2agK))
   (g$env?$7715$1l2agK
     g$env?$11161$1l2agK
     (record-predicate g$8908$7712$1l2agK))
   (g$make-env$7716$1l2agK
     g$make-env$11162$1l2agK
     (record-constructor g$8909$7714$1l2agK))
   (g$env-names$7717$1l2agK
     g$env-names$11163$1l2agK
     (record-accessor g$8908$7712$1l2agK '0))
   (g$env-labels$7718$1l2agK
     g$env-labels$11164$1l2agK
     (record-accessor g$8908$7712$1l2agK '1))
   (g$env-itc$7719$1l2agK
     g$env-itc$11165$1l2agK
     (record-accessor g$8908$7712$1l2agK '2))
   (g$set-env-names!$7720$1l2agK
     g$set-env-names!$11166$1l2agK
     (record-mutator g$8908$7712$1l2agK '0))
   (g$set-env-labels!$7721$1l2agK
     g$set-env-labels!$11167$1l2agK
     (record-mutator g$8908$7712$1l2agK '1))
   (g$set-env-itc!$7722$1l2agK
     g$set-env-itc!$11168$1l2agK
     (record-mutator g$8908$7712$1l2agK '2))
   (g$rp$7723$1l2agK
     g$rp$11169$1l2agK
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10645$1l2agK g$p$10646$1l2agK)
          (display '"#<environment>" g$p$10646$1l2agK)))))
   (g$8927$7724$1l2agK
     g$8927$11170$1l2agK
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8930$1l2agK
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8929$7725$1l2agK g$8929$11171$1l2agK '#f)
   (g$8928$7726$1l2agK
     g$8928$11172$1l2agK
     (make-record-constructor-descriptor
       g$8927$7724$1l2agK
       '#f
       g$8929$7725$1l2agK))
   (g$interaction-env?$7727$1l2agK
     g$interaction-env?$11173$1l2agK
     (record-predicate g$8927$7724$1l2agK))
   (g$make-interaction-env$7728$1l2agK
     g$make-interaction-env$11174$1l2agK
     (record-constructor g$8928$7726$1l2agK))
   (g$interaction-env-rib$7729$1l2agK
     g$interaction-env-rib$11175$1l2agK
     (record-accessor g$8927$7724$1l2agK '0))
   (g$interaction-env-r$7730$1l2agK
     g$interaction-env-r$11176$1l2agK
     (record-accessor g$8927$7724$1l2agK '1))
   (g$interaction-env-locs$7731$1l2agK
     g$interaction-env-locs$11177$1l2agK
     (record-accessor g$8927$7724$1l2agK '2))
   (g$set-interaction-env-rib!$7732$1l2agK
     g$set-interaction-env-rib!$11178$1l2agK
     (record-mutator g$8927$7724$1l2agK '0))
   (g$set-interaction-env-r!$7733$1l2agK
     g$set-interaction-env-r!$11179$1l2agK
     (record-mutator g$8927$7724$1l2agK '1))
   (g$set-interaction-env-locs!$7734$1l2agK
     g$set-interaction-env-locs!$11180$1l2agK
     (record-mutator g$8927$7724$1l2agK '2))
   (g$rp$7735$1l2agK
     g$rp$11181$1l2agK
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10647$1l2agK g$p$10648$1l2agK)
          (display '"#<environment>" g$p$10648$1l2agK)))))
   (g$interaction-environment-symbols$7736$1l2agK
     g$interaction-environment-symbols$11182$1l2agK
     (case-lambda
       (()
        (map (case-lambda ((g$x$10649$1l2agK) g$x$10649$1l2agK))
             (g$rib-sym*$7328$1l2agK
               (g$interaction-env-rib$7729$1l2agK
                 (g$interaction-environment$7768$1l2agK)))))))
   (g$environment-symbols$7737$1l2agK
     g$environment-symbols$11183$1l2agK
     (case-lambda
       ((g$e$10650$1l2agK)
        (vector->list (g$env-names$7717$1l2agK g$e$10650$1l2agK)))))
   (g$environment-bindings$7738$1l2agK
     g$environment-bindings$11184$1l2agK
     (case-lambda
       ((g$e$10651$1l2agK)
        (vector->list
          (vector-map
            (case-lambda
              ((g$name$10652$1l2agK g$label$10653$1l2agK)
               (g$parse-binding$7739$1l2agK
                 (cons
                   g$name$10652$1l2agK
                   (g$imported-label->binding$7187$1l2agK
                     g$label$10653$1l2agK)))))
            (g$env-names$7717$1l2agK g$e$10651$1l2agK)
            (g$env-labels$7718$1l2agK g$e$10651$1l2agK))))))
   (g$parse-binding$7739$1l2agK
     g$parse-binding$11185$1l2agK
     (case-lambda
       ((g$b$10654$1l2agK)
        (cons
          (car g$b$10654$1l2agK)
          ((case-lambda
             ((g$t$10655$1l2agK)
              (if (memv g$t$10655$1l2agK '(core-prim global))
                'procedure
                (if (memv g$t$10655$1l2agK '(core-macro macro global-macro))
                  'syntax
                  (if (memv g$t$10655$1l2agK '($core-rtd))
                    'record
                    (if (eq? (car g$b$10654$1l2agK)
                             (g$cadr$5022$1l2agK g$b$10654$1l2agK))
                      'syntax
                      'unknown))))))
           (g$cadr$5022$1l2agK g$b$10654$1l2agK))))))
   (g$environment?$7740$1l2agK
     g$environment?$11186$1l2agK
     (case-lambda
       ((g$x$10656$1l2agK)
        ((case-lambda
           ((g$t$10657$1l2agK)
            (if g$t$10657$1l2agK
              g$t$10657$1l2agK
              (begin '#f (g$interaction-env?$7727$1l2agK g$x$10656$1l2agK)))))
         (g$env?$7715$1l2agK g$x$10656$1l2agK)))))
   (g$environment$7741$1l2agK
     g$environment$11187$1l2agK
     (case-lambda
       (g$imp*$10658$1l2agK
        ((case-lambda
           ((g$itc$10659$1l2agK)
            ((case-lambda
               ((g$imp-collector$10662$1l2agK g$imp-collector$10663$1l2agK)
                ((case-lambda
                   ((g$swap$10664$1l2agK)
                    (dynamic-wind
                      g$swap$10664$1l2agK
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7700$1l2agK
                                g$imp*$10658$1l2agK)))
                           (case-lambda
                             ((g$subst-names$10667$1l2agK
                                g$subst-labels$10668$1l2agK)
                              ((case-lambda
                                 ((g$subst-labels$10669$1l2agK
                                    g$subst-names$10670$1l2agK)
                                  (g$make-env$7716$1l2agK
                                    g$subst-names$10670$1l2agK
                                    g$subst-labels$10669$1l2agK
                                    g$itc$10659$1l2agK)))
                               g$subst-labels$10668$1l2agK
                               g$subst-names$10667$1l2agK))))))
                      g$swap$10664$1l2agK)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10671$1l2agK)
                        (begin
                          (g$imp-collector$10662$1l2agK
                            g$imp-collector$10663$1l2agK)
                          (set! g$imp-collector$10663$1l2agK
                            g$t$10671$1l2agK))))
                     (g$imp-collector$10662$1l2agK)))))))
             g$imp-collector$7705$1l2agK
             g$itc$10659$1l2agK)))
         (g$make-collector$7702$1l2agK)))))
   (g$null-environment$7742$1l2agK
     g$null-environment$11188$1l2agK
     (case-lambda
       ((g$n$10672$1l2agK)
        (begin
          (if (not (eqv? g$n$10672$1l2agK '5))
            (assertion-violation 'null-environment '"not 5" g$n$10672$1l2agK)
            (void))
          (g$environment$7741$1l2agK '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7743$1l2agK
     g$scheme-report-environment$11189$1l2agK
     (case-lambda
       ((g$n$10673$1l2agK)
        (begin
          (if (not (eqv? g$n$10673$1l2agK '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10673$1l2agK)
            (void))
          (g$environment$7741$1l2agK '(psyntax scheme-report-environment-5))))))
   (g$expand$7744$1l2agK
     g$expand$11190$1l2agK
     (case-lambda
       ((g$x$10674$1l2agK g$env$10675$1l2agK)
        (if (g$env?$7715$1l2agK g$env$10675$1l2agK)
          ((case-lambda
             ((g$rib$10676$1l2agK)
              ((case-lambda
                 ((g$x$10677$1l2agK
                    g$itc$10678$1l2agK
                    g$rtc$10679$1l2agK
                    g$vtc$10680$1l2agK)
                  ((case-lambda
                     ((g$x$10681$1l2agK)
                      (begin
                        (g$seal-rib!$7339$1l2agK g$rib$10676$1l2agK)
                        (values g$x$10681$1l2agK (g$rtc$10679$1l2agK)))))
                   ((case-lambda
                      ((g$inv-collector$10688$1l2agK
                         g$vis-collector$10689$1l2agK
                         g$imp-collector$10690$1l2agK
                         g$inv-collector$10691$1l2agK
                         g$vis-collector$10692$1l2agK
                         g$imp-collector$10693$1l2agK)
                       ((case-lambda
                          ((g$swap$10694$1l2agK)
                           (dynamic-wind
                             g$swap$10694$1l2agK
                             (case-lambda
                               (()
                                (g$chi-expr$7669$1l2agK
                                  g$x$10677$1l2agK
                                  '()
                                  '())))
                             g$swap$10694$1l2agK)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10695$1l2agK)
                                 (begin
                                   (g$inv-collector$10688$1l2agK
                                     g$inv-collector$10691$1l2agK)
                                   (set! g$inv-collector$10691$1l2agK
                                     g$t$10695$1l2agK))))
                              (g$inv-collector$10688$1l2agK))
                             ((case-lambda
                                ((g$t$10696$1l2agK)
                                 (begin
                                   (g$vis-collector$10689$1l2agK
                                     g$vis-collector$10692$1l2agK)
                                   (set! g$vis-collector$10692$1l2agK
                                     g$t$10696$1l2agK))))
                              (g$vis-collector$10689$1l2agK))
                             ((case-lambda
                                ((g$t$10697$1l2agK)
                                 (begin
                                   (g$imp-collector$10690$1l2agK
                                     g$imp-collector$10693$1l2agK)
                                   (set! g$imp-collector$10693$1l2agK
                                     g$t$10697$1l2agK))))
                              (g$imp-collector$10690$1l2agK))))))))
                    g$inv-collector$7703$1l2agK
                    g$vis-collector$7704$1l2agK
                    g$imp-collector$7705$1l2agK
                    g$rtc$10679$1l2agK
                    g$vtc$10680$1l2agK
                    g$itc$10678$1l2agK))))
               (g$make-stx$7346$1l2agK
                 g$x$10674$1l2agK
                 g$top-mark*$7315$1l2agK
                 (list g$rib$10676$1l2agK)
                 '())
               (g$env-itc$7719$1l2agK g$env$10675$1l2agK)
               (g$make-collector$7702$1l2agK)
               (g$make-collector$7702$1l2agK))))
           (g$make-top-rib$7701$1l2agK
             (g$env-names$7717$1l2agK g$env$10675$1l2agK)
             (g$env-labels$7718$1l2agK g$env$10675$1l2agK)))
          (if (g$interaction-env?$7727$1l2agK g$env$10675$1l2agK)
            ((case-lambda
               ((g$rib$10698$1l2agK g$r$10699$1l2agK g$rtc$10700$1l2agK)
                ((case-lambda
                   ((g$x$10701$1l2agK)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10712$1l2agK
                               g$inv-collector$10713$1l2agK
                               g$vis-collector$10714$1l2agK
                               g$imp-collector$10715$1l2agK
                               g$top-level-context$10716$1l2agK
                               g$inv-collector$10717$1l2agK
                               g$vis-collector$10718$1l2agK
                               g$imp-collector$10719$1l2agK)
                             ((case-lambda
                                ((g$swap$10720$1l2agK)
                                 (dynamic-wind
                                   g$swap$10720$1l2agK
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7707$1l2agK
                                        g$x$10701$1l2agK
                                        g$rib$10698$1l2agK
                                        g$r$10699$1l2agK)))
                                   g$swap$10720$1l2agK)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10721$1l2agK)
                                       (begin
                                         (g$top-level-context$10712$1l2agK
                                           g$top-level-context$10716$1l2agK)
                                         (set! g$top-level-context$10716$1l2agK
                                           g$t$10721$1l2agK))))
                                    (g$top-level-context$10712$1l2agK))
                                   ((case-lambda
                                      ((g$t$10722$1l2agK)
                                       (begin
                                         (g$inv-collector$10713$1l2agK
                                           g$inv-collector$10717$1l2agK)
                                         (set! g$inv-collector$10717$1l2agK
                                           g$t$10722$1l2agK))))
                                    (g$inv-collector$10713$1l2agK))
                                   ((case-lambda
                                      ((g$t$10723$1l2agK)
                                       (begin
                                         (g$vis-collector$10714$1l2agK
                                           g$vis-collector$10718$1l2agK)
                                         (set! g$vis-collector$10718$1l2agK
                                           g$t$10723$1l2agK))))
                                    (g$vis-collector$10714$1l2agK))
                                   ((case-lambda
                                      ((g$t$10724$1l2agK)
                                       (begin
                                         (g$imp-collector$10715$1l2agK
                                           g$imp-collector$10719$1l2agK)
                                         (set! g$imp-collector$10719$1l2agK
                                           g$t$10724$1l2agK))))
                                    (g$imp-collector$10715$1l2agK))))))))
                          g$top-level-context$7769$1l2agK
                          g$inv-collector$7703$1l2agK
                          g$vis-collector$7704$1l2agK
                          g$imp-collector$7705$1l2agK
                          g$env$10675$1l2agK
                          g$rtc$10700$1l2agK
                          (g$make-collector$7702$1l2agK)
                          (g$make-collector$7702$1l2agK))))
                      (case-lambda
                        ((g$e$10725$1l2agK g$r^$10726$1l2agK)
                         ((case-lambda
                            ((g$r^$10727$1l2agK g$e$10728$1l2agK)
                             (begin
                               (g$set-interaction-env-r!$7733$1l2agK
                                 g$env$10675$1l2agK
                                 g$r^$10727$1l2agK)
                               (values g$e$10728$1l2agK (g$rtc$10700$1l2agK)))))
                          g$r^$10726$1l2agK
                          g$e$10725$1l2agK))))))
                 (g$make-stx$7346$1l2agK
                   g$x$10674$1l2agK
                   g$top-mark*$7315$1l2agK
                   (list g$rib$10698$1l2agK)
                   '()))))
             (g$interaction-env-rib$7729$1l2agK g$env$10675$1l2agK)
             (g$interaction-env-r$7730$1l2agK g$env$10675$1l2agK)
             (g$make-collector$7702$1l2agK))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10675$1l2agK))))))
   (g$eval$7745$1l2agK
     g$eval$11191$1l2agK
     (case-lambda
       ((g$x$10729$1l2agK g$env$10730$1l2agK)
        (begin
          (if (not (g$environment?$7740$1l2agK g$env$10730$1l2agK))
            (error 'eval '"not an environment" g$env$10730$1l2agK)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$7744$1l2agK g$x$10729$1l2agK g$env$10730$1l2agK)))
            (case-lambda
              ((g$x$10733$1l2agK g$invoke-req*$10734$1l2agK)
               ((case-lambda
                  ((g$invoke-req*$10735$1l2agK g$x$10736$1l2agK)
                   (begin
                     (for-each
                       g$invoke-library$7188$1l2agK
                       g$invoke-req*$10735$1l2agK)
                     (eval-core
                       (g$expanded->core$6887$1l2agK g$x$10736$1l2agK)))))
                g$invoke-req*$10734$1l2agK
                g$x$10733$1l2agK))))))))
   (g$library-expander$7746$1l2agK
     g$library-expander$11192$1l2agK
     (case-lambda
       ((g$x$10737$1l2agK g$filename$10738$1l2agK g$verify-name$10739$1l2agK)
        (letrec* ((g$build-visit-code$10740$1l2agK
                    (case-lambda
                      ((g$macro*$10783$1l2agK)
                       (if (null? g$macro*$10783$1l2agK)
                         (g$build-void$7308$1l2agK)
                         (g$build-sequence$7307$1l2agK
                           '#f
                           (map (case-lambda
                                  ((g$x$10784$1l2agK)
                                   ((case-lambda
                                      ((g$loc$10785$1l2agK g$src$10786$1l2agK)
                                       (list
                                         'set!
                                         g$loc$10785$1l2agK
                                         g$src$10786$1l2agK)))
                                    (car g$x$10784$1l2agK)
                                    (g$cddr$5024$1l2agK g$x$10784$1l2agK))))
                                g$macro*$10783$1l2agK))))))
                  (g$visit!$10741$1l2agK
                    (case-lambda
                      ((g$macro*$10779$1l2agK)
                       (for-each
                         (case-lambda
                           ((g$x$10780$1l2agK)
                            ((case-lambda
                               ((g$loc$10781$1l2agK g$proc$10782$1l2agK)
                                (set-symbol-value!
                                  g$loc$10781$1l2agK
                                  g$proc$10782$1l2agK)))
                             (car g$x$10780$1l2agK)
                             (g$cadr$5022$1l2agK g$x$10780$1l2agK))))
                         g$macro*$10779$1l2agK)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7709$1l2agK
                 g$x$10737$1l2agK
                 g$verify-name$10739$1l2agK)))
            (case-lambda
              ((g$name$10751$1l2agK
                 g$ver$10752$1l2agK
                 g$imp*$10753$1l2agK
                 g$inv*$10754$1l2agK
                 g$vis*$10755$1l2agK
                 g$invoke-code$10756$1l2agK
                 g$macro*$10757$1l2agK
                 g$export-subst$10758$1l2agK
                 g$export-env$10759$1l2agK)
               ((case-lambda
                  ((g$export-env$10760$1l2agK
                     g$export-subst$10761$1l2agK
                     g$macro*$10762$1l2agK
                     g$invoke-code$10763$1l2agK
                     g$vis*$10764$1l2agK
                     g$inv*$10765$1l2agK
                     g$imp*$10766$1l2agK
                     g$ver$10767$1l2agK
                     g$name$10768$1l2agK)
                   ((case-lambda
                      ((g$id$10769$1l2agK
                         g$name$10770$1l2agK
                         g$ver$10771$1l2agK
                         g$imp*$10772$1l2agK
                         g$vis*$10773$1l2agK
                         g$inv*$10774$1l2agK
                         g$visit-proc$10775$1l2agK
                         g$invoke-proc$10776$1l2agK
                         g$visit-code$10777$1l2agK
                         g$invoke-code$10778$1l2agK)
                       (begin
                         (g$install-library$7186$1l2agK
                           g$id$10769$1l2agK
                           g$name$10770$1l2agK
                           g$ver$10771$1l2agK
                           g$imp*$10772$1l2agK
                           g$vis*$10773$1l2agK
                           g$inv*$10774$1l2agK
                           g$export-subst$10761$1l2agK
                           g$export-env$10760$1l2agK
                           g$visit-proc$10775$1l2agK
                           g$invoke-proc$10776$1l2agK
                           g$visit-code$10777$1l2agK
                           g$invoke-code$10778$1l2agK
                           '#t
                           g$filename$10738$1l2agK)
                         (values
                           g$id$10769$1l2agK
                           g$name$10770$1l2agK
                           g$ver$10771$1l2agK
                           g$imp*$10772$1l2agK
                           g$vis*$10773$1l2agK
                           g$inv*$10774$1l2agK
                           g$invoke-code$10778$1l2agK
                           g$visit-code$10777$1l2agK
                           g$export-subst$10761$1l2agK
                           g$export-env$10760$1l2agK))))
                    (gensym)
                    g$name$10768$1l2agK
                    g$ver$10767$1l2agK
                    (map g$library-spec$7192$1l2agK g$imp*$10766$1l2agK)
                    (map g$library-spec$7192$1l2agK g$vis*$10764$1l2agK)
                    (map g$library-spec$7192$1l2agK g$inv*$10765$1l2agK)
                    (case-lambda
                      (() (g$visit!$10741$1l2agK g$macro*$10762$1l2agK)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6887$1l2agK
                           g$invoke-code$10763$1l2agK))))
                    (g$build-visit-code$10740$1l2agK g$macro*$10762$1l2agK)
                    g$invoke-code$10763$1l2agK)))
                g$export-env$10759$1l2agK
                g$export-subst$10758$1l2agK
                g$macro*$10757$1l2agK
                g$invoke-code$10756$1l2agK
                g$vis*$10755$1l2agK
                g$inv*$10754$1l2agK
                g$imp*$10753$1l2agK
                g$ver$10752$1l2agK
                g$name$10751$1l2agK))))))
       ((g$x$10787$1l2agK g$filename$10788$1l2agK)
        (g$library-expander$7746$1l2agK
          g$x$10787$1l2agK
          g$filename$10788$1l2agK
          (case-lambda ((g$x$10789$1l2agK) (values)))))
       ((g$x$10790$1l2agK)
        (g$library-expander$7746$1l2agK
          g$x$10790$1l2agK
          '#f
          (case-lambda ((g$x$10791$1l2agK) (values)))))))
   (g$boot-library-expand$7747$1l2agK
     g$boot-library-expand$11193$1l2agK
     (case-lambda
       ((g$x$10792$1l2agK)
        (call-with-values
          (case-lambda (() (g$library-expander$7746$1l2agK g$x$10792$1l2agK)))
          (case-lambda
            ((g$id$10803$1l2agK
               g$name$10804$1l2agK
               g$ver$10805$1l2agK
               g$imp*$10806$1l2agK
               g$vis*$10807$1l2agK
               g$inv*$10808$1l2agK
               g$invoke-code$10809$1l2agK
               g$visit-code$10810$1l2agK
               g$export-subst$10811$1l2agK
               g$export-env$10812$1l2agK)
             ((case-lambda
                ((g$export-env$10813$1l2agK
                   g$export-subst$10814$1l2agK
                   g$visit-code$10815$1l2agK
                   g$invoke-code$10816$1l2agK
                   g$inv*$10817$1l2agK
                   g$vis*$10818$1l2agK
                   g$imp*$10819$1l2agK
                   g$ver$10820$1l2agK
                   g$name$10821$1l2agK
                   g$id$10822$1l2agK)
                 (values
                   g$name$10821$1l2agK
                   g$invoke-code$10816$1l2agK
                   g$export-subst$10814$1l2agK
                   g$export-env$10813$1l2agK)))
              g$export-env$10812$1l2agK
              g$export-subst$10811$1l2agK
              g$visit-code$10810$1l2agK
              g$invoke-code$10809$1l2agK
              g$inv*$10808$1l2agK
              g$vis*$10807$1l2agK
              g$imp*$10806$1l2agK
              g$ver$10805$1l2agK
              g$name$10804$1l2agK
              g$id$10803$1l2agK)))))))
   (g$rev-map-append$7748$1l2agK
     g$rev-map-append$11194$1l2agK
     (case-lambda
       ((g$f$10823$1l2agK g$ls$10824$1l2agK g$ac$10825$1l2agK)
        (if (null? g$ls$10824$1l2agK)
          g$ac$10825$1l2agK
          (g$rev-map-append$7748$1l2agK
            g$f$10823$1l2agK
            (cdr g$ls$10824$1l2agK)
            (cons
              (g$f$10823$1l2agK (car g$ls$10824$1l2agK))
              g$ac$10825$1l2agK))))))
   (g$build-exports$7749$1l2agK
     g$build-exports$11195$1l2agK
     (case-lambda
       ((g$lex*+loc*$10826$1l2agK g$init*$10827$1l2agK)
        (g$build-sequence$7307$1l2agK
          '#f
          (cons
            (g$build-void$7308$1l2agK)
            (g$rev-map-append$7748$1l2agK
              (case-lambda
                ((g$x$10828$1l2agK)
                 (list 'set! (cdr g$x$10828$1l2agK) (car g$x$10828$1l2agK))))
              g$lex*+loc*$10826$1l2agK
              g$init*$10827$1l2agK))))))
   (g$make-export-subst$7750$1l2agK
     g$make-export-subst$11196$1l2agK
     (case-lambda
       ((g$int*$10829$1l2agK g$ext*$10830$1l2agK g$rib$10831$1l2agK)
        (map (case-lambda
               ((g$int$10832$1l2agK g$ext$10833$1l2agK)
                ((case-lambda
                   ((g$id$10834$1l2agK)
                    ((case-lambda
                       ((g$label$10835$1l2agK)
                        ((case-lambda
                           (()
                            (begin
                              (if (not g$label$10835$1l2agK)
                                (g$syntax-violation$7762$1l2agK
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$10834$1l2agK)
                                (void))
                              (cons
                                g$ext$10833$1l2agK
                                g$label$10835$1l2agK)))))))
                     (g$id->label$7386$1l2agK g$id$10834$1l2agK))))
                 (g$make-stx$7346$1l2agK
                   g$int$10832$1l2agK
                   g$top-mark*$7315$1l2agK
                   (list g$rib$10831$1l2agK)
                   '()))))
             g$int*$10829$1l2agK
             g$ext*$10830$1l2agK))))
   (g$make-export-env/macros$7751$1l2agK
     g$make-export-env/macros$11197$1l2agK
     (case-lambda
       ((g$lex*$10836$1l2agK g$loc*$10837$1l2agK g$r$10838$1l2agK)
        (letrec* ((g$lookup$10839$1l2agK
                    (case-lambda
                      ((g$x$10854$1l2agK)
                       ((letrec ((g$f$10855$1l2agK
                                   (case-lambda
                                     ((g$x$10856$1l2agK
                                        g$lex*$10857$1l2agK
                                        g$loc*$10858$1l2agK)
                                      (if (pair? g$lex*$10857$1l2agK)
                                        (if (eq? g$x$10856$1l2agK
                                                 (car g$lex*$10857$1l2agK))
                                          (car g$loc*$10858$1l2agK)
                                          (g$f$10855$1l2agK
                                            g$x$10856$1l2agK
                                            (cdr g$lex*$10857$1l2agK)
                                            (cdr g$loc*$10858$1l2agK)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10855$1l2agK)
                        g$x$10854$1l2agK
                        g$lex*$10836$1l2agK
                        g$loc*$10837$1l2agK)))))
          ((letrec ((g$f$10840$1l2agK
                      (case-lambda
                        ((g$r$10841$1l2agK
                           g$env$10842$1l2agK
                           g$global*$10843$1l2agK
                           g$macro*$10844$1l2agK)
                         (if (null? g$r$10841$1l2agK)
                           (values
                             g$env$10842$1l2agK
                             g$global*$10843$1l2agK
                             g$macro*$10844$1l2agK)
                           ((case-lambda
                              ((g$x$10845$1l2agK)
                               ((case-lambda
                                  ((g$label$10846$1l2agK g$b$10847$1l2agK)
                                   ((case-lambda
                                      ((g$t$10848$1l2agK)
                                       (if (memv g$t$10848$1l2agK '(lexical))
                                         ((case-lambda
                                            ((g$v$10849$1l2agK)
                                             ((case-lambda
                                                ((g$loc$10850$1l2agK
                                                   g$type$10851$1l2agK)
                                                 (g$f$10840$1l2agK
                                                   (cdr g$r$10841$1l2agK)
                                                   (cons
                                                     (g$cons*$5505$1l2agK
                                                       g$label$10846$1l2agK
                                                       g$type$10851$1l2agK
                                                       g$loc$10850$1l2agK)
                                                     g$env$10842$1l2agK)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7595$1l2agK
                                                         g$v$10849$1l2agK)
                                                       g$loc$10850$1l2agK)
                                                     g$global*$10843$1l2agK)
                                                   g$macro*$10844$1l2agK)))
                                              (g$lookup$10839$1l2agK
                                                (g$lexical-var$7595$1l2agK
                                                  g$v$10849$1l2agK))
                                              (if (g$lexical-mutable?$7596$1l2agK
                                                    g$v$10849$1l2agK)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7391$1l2agK
                                            g$b$10847$1l2agK))
                                         (if (memv
                                               g$t$10848$1l2agK
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$10852$1l2agK)
                                               (g$f$10840$1l2agK
                                                 (cdr g$r$10841$1l2agK)
                                                 (cons
                                                   (g$cons*$5505$1l2agK
                                                     g$label$10846$1l2agK
                                                     'global-macro
                                                     g$loc$10852$1l2agK)
                                                   g$env$10842$1l2agK)
                                                 g$global*$10843$1l2agK
                                                 (cons
                                                   (cons
                                                     g$loc$10852$1l2agK
                                                     (g$binding-value$7391$1l2agK
                                                       g$b$10847$1l2agK))
                                                   g$macro*$10844$1l2agK))))
                                            (gensym))
                                           (if (memv
                                                 g$t$10848$1l2agK
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$10853$1l2agK)
                                                 (g$f$10840$1l2agK
                                                   (cdr g$r$10841$1l2agK)
                                                   (cons
                                                     (g$cons*$5505$1l2agK
                                                       g$label$10846$1l2agK
                                                       'global-macro!
                                                       g$loc$10853$1l2agK)
                                                     g$env$10842$1l2agK)
                                                   g$global*$10843$1l2agK
                                                   (cons
                                                     (cons
                                                       g$loc$10853$1l2agK
                                                       (g$binding-value$7391$1l2agK
                                                         g$b$10847$1l2agK))
                                                     g$macro*$10844$1l2agK))))
                                              (gensym))
                                             (if (memv
                                                   g$t$10848$1l2agK
                                                   '($rtd $module))
                                               (g$f$10840$1l2agK
                                                 (cdr g$r$10841$1l2agK)
                                                 (cons
                                                   g$x$10845$1l2agK
                                                   g$env$10842$1l2agK)
                                                 g$global*$10843$1l2agK
                                                 g$macro*$10844$1l2agK)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7390$1l2agK
                                                   g$b$10847$1l2agK)
                                                 (g$binding-value$7391$1l2agK
                                                   g$b$10847$1l2agK))))))))
                                    (g$binding-type$7390$1l2agK
                                      g$b$10847$1l2agK))))
                                (car g$x$10845$1l2agK)
                                (cdr g$x$10845$1l2agK))))
                            (car g$r$10841$1l2agK)))))))
             g$f$10840$1l2agK)
           g$r$10838$1l2agK
           '()
           '()
           '())))))
   (g$generate-temporaries$7752$1l2agK
     g$generate-temporaries$11198$1l2agK
     (case-lambda
       ((g$ls$10859$1l2agK)
        ((case-lambda
           ((g$t$10860$1l2agK)
            ((case-lambda
               ((g$ls/false$10861$1l2agK)
                (if g$ls/false$10861$1l2agK
                  (apply
                    (case-lambda
                      ((g$ls$10862$1l2agK)
                       (map (case-lambda
                              ((g$x$10863$1l2agK)
                               (g$make-stx$7346$1l2agK
                                 ((case-lambda
                                    ((g$x$10864$1l2agK)
                                     (if ((case-lambda
                                            ((g$t$10865$1l2agK)
                                             (if g$t$10865$1l2agK
                                               g$t$10865$1l2agK
                                               (begin
                                                 '#f
                                                 (string? g$x$10864$1l2agK)))))
                                          (symbol? g$x$10864$1l2agK))
                                       (gensym g$x$10864$1l2agK)
                                       (gensym 't))))
                                  (g$syntax->datum$7765$1l2agK
                                    g$x$10863$1l2agK))
                                 g$top-mark*$7315$1l2agK
                                 '()
                                 '())))
                            g$ls$10862$1l2agK)))
                    g$ls/false$10861$1l2agK)
                  ((case-lambda
                     ((g$t$10866$1l2agK)
                      ((case-lambda
                         ((g$ls/false$10867$1l2agK)
                          (if g$ls/false$10867$1l2agK
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10867$1l2agK)
                            (g$syntax-violation$7762$1l2agK
                              '#f
                              '"invalid syntax"
                              g$t$10866$1l2agK))))
                       (g$syntax-dispatch$7651$1l2agK g$t$10866$1l2agK '_))))
                   g$t$10860$1l2agK))))
             (g$syntax-dispatch$7651$1l2agK g$t$10860$1l2agK 'each-any))))
         g$ls$10859$1l2agK))))
   (g$free-identifier=?$7753$1l2agK
     g$free-identifier=?$11199$1l2agK
     (case-lambda
       ((g$x$10868$1l2agK g$y$10869$1l2agK)
        (if (g$id?$7373$1l2agK g$x$10868$1l2agK)
          (if (g$id?$7373$1l2agK g$y$10869$1l2agK)
            (g$free-id=?$7377$1l2agK g$x$10868$1l2agK g$y$10869$1l2agK)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10869$1l2agK))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10868$1l2agK)))))
   (g$bound-identifier=?$7754$1l2agK
     g$bound-identifier=?$11200$1l2agK
     (case-lambda
       ((g$x$10870$1l2agK g$y$10871$1l2agK)
        (if (g$id?$7373$1l2agK g$x$10870$1l2agK)
          (if (g$id?$7373$1l2agK g$y$10871$1l2agK)
            (g$bound-id=?$7376$1l2agK g$x$10870$1l2agK g$y$10871$1l2agK)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10871$1l2agK))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10870$1l2agK)))))
   (g$make-source-condition$7755$1l2agK
     g$make-source-condition$11201$1l2agK
     (case-lambda
       ((g$x$10872$1l2agK)
        (letrec* ((g$11819$10873$1l2agK
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11822$1l2agK
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11821$10874$1l2agK '#f)
                  (g$11820$10875$1l2agK
                    (make-record-constructor-descriptor
                      g$11819$10873$1l2agK
                      &condition-rcd
                      g$11821$10874$1l2agK))
                  (g$11818$10876$1l2agK (record-predicate g$11819$10873$1l2agK))
                  (g$make-source-condition$10877$1l2agK
                    (record-constructor g$11820$10875$1l2agK))
                  (g$11816$10878$1l2agK
                    (record-accessor g$11819$10873$1l2agK '0))
                  (g$11817$10879$1l2agK
                    (record-accessor g$11819$10873$1l2agK '1))
                  (g$source-condition?$10880$1l2agK
                    (condition-predicate g$11819$10873$1l2agK))
                  (g$source-filename$10881$1l2agK
                    (condition-accessor
                      g$11819$10873$1l2agK
                      g$11816$10878$1l2agK))
                  (g$source-character$10882$1l2agK
                    (condition-accessor
                      g$11819$10873$1l2agK
                      g$11817$10879$1l2agK)))
          (if (pair? g$x$10872$1l2agK)
            (g$make-source-condition$10877$1l2agK
              (car g$x$10872$1l2agK)
              (cdr g$x$10872$1l2agK))
            (condition))))))
   (g$extract-position-condition$7756$1l2agK
     g$extract-position-condition$11202$1l2agK
     (case-lambda
       ((g$x$10883$1l2agK)
        (g$make-source-condition$7755$1l2agK
          (g$expression-position$7757$1l2agK g$x$10883$1l2agK)))))
   (g$expression-position$7757$1l2agK
     g$expression-position$11203$1l2agK
     (case-lambda
       ((g$x$10884$1l2agK)
        (if (g$stx?$7345$1l2agK g$x$10884$1l2agK)
          (begin
            '#f
            ((case-lambda
               ((g$x$10885$1l2agK)
                (if (annotation? g$x$10885$1l2agK)
                  (begin '#f (annotation-source g$x$10885$1l2agK))
                  '#f)))
             (g$stx-expr$7347$1l2agK g$x$10884$1l2agK)))
          '#f))))
   (g$assertion-error$7758$1l2agK
     g$assertion-error$11204$1l2agK
     (case-lambda
       ((g$expr$10886$1l2agK g$pos$10887$1l2agK)
        (raise
          (condition
            (g$make-assertion-violation$5789$1l2agK)
            (g$make-who-condition$5803$1l2agK 'assert)
            (g$make-message-condition$5757$1l2agK '"assertion failed")
            (g$make-irritants-condition$5795$1l2agK (list g$expr$10886$1l2agK))
            (g$make-source-condition$7755$1l2agK g$pos$10887$1l2agK))))))
   (g$syntax-error$7759$1l2agK
     g$syntax-error$11205$1l2agK
     (case-lambda
       ((g$x$10888$1l2agK . g$args$10889$1l2agK)
        (begin
          (if (not (g$for-all$5503$1l2agK string? g$args$10889$1l2agK))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10889$1l2agK)
            (void))
          (raise
            (condition
              (g$make-message-condition$5757$1l2agK
                (if (null? g$args$10889$1l2agK)
                  '"invalid syntax"
                  (apply string-append g$args$10889$1l2agK)))
              (g$make-syntax-violation$5829$1l2agK
                (g$syntax->datum$7765$1l2agK g$x$10888$1l2agK)
                '#f)
              (g$extract-position-condition$7756$1l2agK g$x$10888$1l2agK)
              (g$extract-trace$7760$1l2agK g$x$10888$1l2agK)))))))
   (g$extract-trace$7760$1l2agK
     g$extract-trace$11206$1l2agK
     (case-lambda
       ((g$x$10890$1l2agK)
        (letrec* ((g$11846$10891$1l2agK
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11849$1l2agK
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11848$10892$1l2agK '#f)
                  (g$11847$10893$1l2agK
                    (make-record-constructor-descriptor
                      g$11846$10891$1l2agK
                      &condition-rcd
                      g$11848$10892$1l2agK))
                  (g$11845$10894$1l2agK (record-predicate g$11846$10891$1l2agK))
                  (g$make-trace$10895$1l2agK
                    (record-constructor g$11847$10893$1l2agK))
                  (g$11844$10896$1l2agK
                    (record-accessor g$11846$10891$1l2agK '0))
                  (g$trace?$10897$1l2agK
                    (condition-predicate g$11846$10891$1l2agK))
                  (g$trace-form$10898$1l2agK
                    (condition-accessor
                      g$11846$10891$1l2agK
                      g$11844$10896$1l2agK)))
          ((letrec ((g$f$10899$1l2agK
                      (case-lambda
                        ((g$x$10900$1l2agK)
                         (if (g$stx?$7345$1l2agK g$x$10900$1l2agK)
                           (apply
                             condition
                             (g$make-trace$10895$1l2agK g$x$10900$1l2agK)
                             (map g$f$10899$1l2agK
                                  (g$stx-ae*$7350$1l2agK g$x$10900$1l2agK)))
                           (if (annotation? g$x$10900$1l2agK)
                             (g$make-trace$10895$1l2agK
                               (g$make-stx$7346$1l2agK
                                 g$x$10900$1l2agK
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10899$1l2agK)
           g$x$10890$1l2agK)))))
   (g$syntax-violation*$7761$1l2agK
     g$syntax-violation*$11207$1l2agK
     (case-lambda
       ((g$who$10901$1l2agK
          g$msg$10902$1l2agK
          g$form$10903$1l2agK
          g$condition-object$10904$1l2agK)
        (begin
          (if (not (string? g$msg$10902$1l2agK))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10902$1l2agK)
            (void))
          ((case-lambda
             ((g$who$10905$1l2agK)
              (raise
                (condition
                  (if g$who$10905$1l2agK
                    (g$make-who-condition$5803$1l2agK g$who$10905$1l2agK)
                    (condition))
                  (g$make-message-condition$5757$1l2agK g$msg$10902$1l2agK)
                  g$condition-object$10904$1l2agK
                  (g$extract-position-condition$7756$1l2agK g$form$10903$1l2agK)
                  (g$extract-trace$7760$1l2agK g$form$10903$1l2agK)))))
           (if ((case-lambda
                  ((g$t$10906$1l2agK)
                   (if g$t$10906$1l2agK
                     g$t$10906$1l2agK
                     (begin '#f (symbol? g$who$10901$1l2agK)))))
                (string? g$who$10901$1l2agK))
             g$who$10901$1l2agK
             (if (not g$who$10901$1l2agK)
               ((case-lambda
                  ((g$t$10907$1l2agK)
                   ((case-lambda
                      ((g$ls/false$10908$1l2agK)
                       (if (if g$ls/false$10908$1l2agK
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10909$1l2agK)
                                    (g$id?$7373$1l2agK g$id$10909$1l2agK)))
                                 g$ls/false$10908$1l2agK))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10910$1l2agK)
                              (g$syntax->datum$7765$1l2agK g$id$10910$1l2agK)))
                           g$ls/false$10908$1l2agK)
                         ((case-lambda
                            ((g$t$10911$1l2agK)
                             ((case-lambda
                                ((g$ls/false$10912$1l2agK)
                                 (if (if g$ls/false$10912$1l2agK
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10913$1l2agK
                                                g$rest$10914$1l2agK)
                                              (g$id?$7373$1l2agK
                                                g$id$10913$1l2agK)))
                                           g$ls/false$10912$1l2agK))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10915$1l2agK g$rest$10916$1l2agK)
                                        (g$syntax->datum$7765$1l2agK
                                          g$id$10915$1l2agK)))
                                     g$ls/false$10912$1l2agK)
                                   ((case-lambda
                                      ((g$t$10917$1l2agK)
                                       ((case-lambda
                                          ((g$ls/false$10918$1l2agK)
                                           (if g$ls/false$10918$1l2agK
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10918$1l2agK)
                                             (g$syntax-violation$7762$1l2agK
                                               '#f
                                               '"invalid syntax"
                                               g$t$10917$1l2agK))))
                                        (g$syntax-dispatch$7651$1l2agK
                                          g$t$10917$1l2agK
                                          '_))))
                                    g$t$10911$1l2agK))))
                              (g$syntax-dispatch$7651$1l2agK
                                g$t$10911$1l2agK
                                '(any . any)))))
                          g$t$10907$1l2agK))))
                    (g$syntax-dispatch$7651$1l2agK g$t$10907$1l2agK 'any))))
                g$form$10903$1l2agK)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10901$1l2agK))))))))
   (g$syntax-violation$7762$1l2agK
     g$syntax-violation$11208$1l2agK
     (case-lambda
       ((g$who$10919$1l2agK g$msg$10920$1l2agK g$form$10921$1l2agK)
        (g$syntax-violation$7762$1l2agK
          g$who$10919$1l2agK
          g$msg$10920$1l2agK
          g$form$10921$1l2agK
          '#f))
       ((g$who$10922$1l2agK
          g$msg$10923$1l2agK
          g$form$10924$1l2agK
          g$subform$10925$1l2agK)
        (g$syntax-violation*$7761$1l2agK
          g$who$10922$1l2agK
          g$msg$10923$1l2agK
          g$form$10924$1l2agK
          (g$make-syntax-violation$5829$1l2agK
            (g$syntax->datum$7765$1l2agK g$form$10924$1l2agK)
            (g$syntax->datum$7765$1l2agK g$subform$10925$1l2agK))))))
   (g$identifier?$7763$1l2agK
     g$identifier?$11209$1l2agK
     (case-lambda ((g$x$10926$1l2agK) (g$id?$7373$1l2agK g$x$10926$1l2agK))))
   (g$datum->syntax$7764$1l2agK
     g$datum->syntax$11210$1l2agK
     (case-lambda
       ((g$id$10927$1l2agK g$datum$10928$1l2agK)
        (if (g$id?$7373$1l2agK g$id$10927$1l2agK)
          (g$datum->stx$7356$1l2agK g$id$10927$1l2agK g$datum$10928$1l2agK)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10927$1l2agK)))))
   (g$syntax->datum$7765$1l2agK
     g$syntax->datum$11211$1l2agK
     (case-lambda
       ((g$x$10929$1l2agK) (g$stx->datum$7384$1l2agK g$x$10929$1l2agK))))
   (g$compile-r6rs-top-level$7766$1l2agK
     g$compile-r6rs-top-level$11212$1l2agK
     (case-lambda
       ((g$x*$10930$1l2agK)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7711$1l2agK g$x*$10930$1l2agK)))
          (case-lambda
            ((g$lib*$10933$1l2agK g$invoke-code$10934$1l2agK)
             ((case-lambda
                ((g$invoke-code$10935$1l2agK g$lib*$10936$1l2agK)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$7188$1l2agK
                        g$lib*$10936$1l2agK)
                      (eval-core
                        (g$expanded->core$6887$1l2agK
                          g$invoke-code$10935$1l2agK)))))))
              g$invoke-code$10934$1l2agK
              g$lib*$10933$1l2agK)))))))
   (g$pre-compile-r6rs-top-level$7767$1l2agK
     g$pre-compile-r6rs-top-level$11213$1l2agK
     (case-lambda
       ((g$x*$10937$1l2agK)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7711$1l2agK g$x*$10937$1l2agK)))
          (case-lambda
            ((g$lib*$10940$1l2agK g$invoke-code$10941$1l2agK)
             ((case-lambda
                ((g$invoke-code$10942$1l2agK g$lib*$10943$1l2agK)
                 (begin
                   (for-each g$invoke-library$7188$1l2agK g$lib*$10943$1l2agK)
                   (compile-core
                     (g$expanded->core$6887$1l2agK
                       g$invoke-code$10942$1l2agK)))))
              g$invoke-code$10941$1l2agK
              g$lib*$10940$1l2agK)))))))
   (g$interaction-environment$7768$1l2agK
     g$interaction-environment$11214$1l2agK
     ((case-lambda
        ((g$the-env$10944$1l2agK)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10945$1l2agK)
                (if g$t$10945$1l2agK
                  g$t$10945$1l2agK
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10946$1l2agK g$rib$10947$1l2agK)
                        (begin
                          ((case-lambda
                             ((g$subst$10948$1l2agK)
                              (begin
                                (g$set-rib-sym*!$7332$1l2agK
                                  g$rib$10947$1l2agK
                                  (map car g$subst$10948$1l2agK))
                                (g$set-rib-mark**!$7333$1l2agK
                                  g$rib$10947$1l2agK
                                  (map (case-lambda
                                         ((g$x$10949$1l2agK)
                                          g$top-mark*$7315$1l2agK))
                                       g$subst$10948$1l2agK))
                                (g$set-rib-label*!$7334$1l2agK
                                  g$rib$10947$1l2agK
                                  (map cdr g$subst$10948$1l2agK)))))
                           (g$library-subst$7145$1l2agK g$lib$10946$1l2agK))
                          ((case-lambda
                             ((g$env$10950$1l2agK)
                              (begin
                                (set! g$the-env$10944$1l2agK g$env$10950$1l2agK)
                                g$env$10950$1l2agK)))
                           (g$make-interaction-env$7728$1l2agK
                             g$rib$10947$1l2agK
                             '()
                             '())))))
                     (g$find-library-by-name$7181$1l2agK '(ironscheme))
                     (g$make-empty-rib$7336$1l2agK))))))
             g$the-env$10944$1l2agK)))))
      '#f))
   (g$top-level-context$7769$1l2agK
     g$top-level-context$11215$1l2agK
     (g$make-parameter$6640$1l2agK '#f)))
  (g$current-library-expander$7178$1l2agK g$library-expander$7746$1l2agK))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6884$1l2agK
      (case-lambda
        ((g$x$11268$1l2agK)
         ((case-lambda
            ((g$t$11269$1l2agK)
             (if g$t$11269$1l2agK (cdr g$t$11269$1l2agK) '#f)))
          (assq
            g$x$11268$1l2agK
            '((ellipsis-map . g$ellipsis-map$11102$1l2agK)
              (ironscheme-build . g$ironscheme-build$11261$1l2agK)
              (syntax-error . g$syntax-error$11205$1l2agK)
              (syntax-dispatch . g$syntax-dispatch$11097$1l2agK)
              (compile-system-libraries
                .
                g$compile-system-libraries$11263$1l2agK)
              (compile->closure . g$compile->closure$11265$1l2agK)
              (compile . g$compile$11264$1l2agK)
              (load . g$load$11260$1l2agK)
              (interaction-environment . g$interaction-environment$11214$1l2agK)
              (string-ci>? . g$string-ci>?$6042$1l2agK)
              (string-ci>=? . g$string-ci>=?$6044$1l2agK)
              (string-ci=? . g$string-ci=?$6040$1l2agK)
              (string-ci<? . g$string-ci<?$6041$1l2agK)
              (string-ci<=? . g$string-ci<=?$6043$1l2agK)
              (char-ci>? . g$char-ci>?$6047$1l2agK)
              (char-ci>=? . g$char-ci>=?$6049$1l2agK)
              (char-ci=? . g$char-ci=?$6045$1l2agK)
              (char-ci<? . g$char-ci<?$6046$1l2agK)
              (char-ci<=? . g$char-ci<=?$6048$1l2agK)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11035$1l2agK)
              (variable-transformer? . g$variable-transformer?$11034$1l2agK)
              (make-variable-transformer
                .
                g$make-variable-transformer$11033$1l2agK)
              (identifier? . g$identifier?$11209$1l2agK)
              (generate-temporaries . g$generate-temporaries$11198$1l2agK)
              (free-identifier=? . g$free-identifier=?$11199$1l2agK)
              (syntax->datum . g$syntax->datum$11211$1l2agK)
              (datum->syntax . g$datum->syntax$11210$1l2agK)
              (bound-identifier=? . g$bound-identifier=?$11200$1l2agK)
              (delete-file . g$delete-file$5375$1l2agK)
              (file-exists? . g$file-exists?$5374$1l2agK)
              (list-sort . g$list-sort$5900$1l2agK)
              (make-eqv-hashtable . g$make-eqv-hashtable$5297$1l2agK)
              (make-eq-hashtable . g$make-eq-hashtable$5296$1l2agK)
              (hashtable-update! . g$hashtable-update!$5303$1l2agK)
              (hashtable-size . g$hashtable-size$5298$1l2agK)
              (hashtable-set! . g$hashtable-set!$5300$1l2agK)
              (hashtable-ref . g$hashtable-ref$5299$1l2agK)
              (hashtable-delete! . g$hashtable-delete!$5301$1l2agK)
              (hashtable-contains? . g$hashtable-contains?$5302$1l2agK)
              (hashtable-clear! . g$hashtable-clear!$5304$1l2agK)
              (call-with-output-file . g$call-with-output-file$6389$1l2agK)
              (call-with-input-file . g$call-with-input-file$6388$1l2agK)
              (with-output-to-file . g$with-output-to-file$6387$1l2agK)
              (with-input-from-file . g$with-input-from-file$6386$1l2agK)
              (port? . g$port?$6353$1l2agK)
              (open-string-output-port . g$open-string-output-port$6352$1l2agK)
              (make-i/o-write-error . g$make-i/o-write-error$6278$1l2agK)
              (make-i/o-read-error . g$make-i/o-read-error$6272$1l2agK)
              (make-i/o-port-error . g$make-i/o-port-error$6324$1l2agK)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6284$1l2agK)
              (make-i/o-filename-error . g$make-i/o-filename-error$6292$1l2agK)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6300$1l2agK)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6306$1l2agK)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6318$1l2agK)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6312$1l2agK)
              (make-i/o-error . g$make-i/o-error$6266$1l2agK)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6338$1l2agK)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6332$1l2agK)
              (i/o-write-error? . g$i/o-write-error?$6279$1l2agK)
              (i/o-read-error? . g$i/o-read-error?$6273$1l2agK)
              (i/o-port-error? . g$i/o-port-error?$6326$1l2agK)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6286$1l2agK)
              (i/o-error-position . g$i/o-error-position$6287$1l2agK)
              (i/o-filename-error? . g$i/o-filename-error?$6294$1l2agK)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6301$1l2agK)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6307$1l2agK)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6319$1l2agK)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6313$1l2agK)
              (i/o-error? . g$i/o-error?$6267$1l2agK)
              (i/o-error-port . g$i/o-error-port$6327$1l2agK)
              (i/o-error-filename . g$i/o-error-filename$6295$1l2agK)
              (i/o-encoding-error? . g$i/o-encoding-error?$6340$1l2agK)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6341$1l2agK)
              (i/o-decoding-error? . g$i/o-decoding-error?$6333$1l2agK)
              (scheme-report-environment
                .
                g$scheme-report-environment$11189$1l2agK)
              (quotient . g$quotient$5867$1l2agK)
              (null-environment . g$null-environment$11188$1l2agK)
              (remainder . g$remainder$5868$1l2agK)
              (modulo . g$modulo$5869$1l2agK)
              (force . g$force$5871$1l2agK)
              (command-line . g$command-line$11257$1l2agK)
              (remove . g$remove$5508$1l2agK)
              (remv . g$remv$5509$1l2agK)
              (remp . g$remp$5494$1l2agK)
              (remq . g$remq$5510$1l2agK)
              (partition . g$partition$5493$1l2agK)
              (memp . g$memp$5500$1l2agK)
              (member . g$member$5499$1l2agK)
              (exists . g$exists$5504$1l2agK)
              (for-all . g$for-all$5503$1l2agK)
              (fold-right . g$fold-right$5507$1l2agK)
              (fold-left . g$fold-left$5506$1l2agK)
              (find . g$find$5492$1l2agK)
              (filter . g$filter$5495$1l2agK)
              (cons* . g$cons*$5505$1l2agK)
              (assv . g$assv$5496$1l2agK)
              (assp . g$assp$5498$1l2agK)
              (assoc . g$assoc$5497$1l2agK)
              (eval . g$eval$11191$1l2agK)
              (environment . g$environment$11187$1l2agK)
              (make-enumeration . g$make-enumeration$6517$1l2agK)
              (enum-set=? . g$enum-set=?$6524$1l2agK)
              (enum-set-universe . g$enum-set-universe$6518$1l2agK)
              (enum-set-union . g$enum-set-union$6525$1l2agK)
              (enum-set-subset? . g$enum-set-subset?$6523$1l2agK)
              (enum-set-projection . g$enum-set-projection$6529$1l2agK)
              (enum-set-member? . g$enum-set-member?$6522$1l2agK)
              (enum-set-intersection . g$enum-set-intersection$6526$1l2agK)
              (enum-set-indexer . g$enum-set-indexer$6519$1l2agK)
              (enum-set-difference . g$enum-set-difference$6527$1l2agK)
              (enum-set-constructor . g$enum-set-constructor$6520$1l2agK)
              (enum-set-complement . g$enum-set-complement$6528$1l2agK)
              (enum-set->list . g$enum-set->list$6521$1l2agK)
              (who-condition? . g$who-condition?$5805$1l2agK)
              (warning? . g$warning?$5766$1l2agK)
              (violation? . g$violation?$5784$1l2agK)
              (undefined-violation? . g$undefined-violation?$5840$1l2agK)
              (syntax-violation? . g$syntax-violation?$5832$1l2agK)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$5834$1l2agK)
              (syntax-violation-form . g$syntax-violation-form$5833$1l2agK)
              (syntax-violation . g$syntax-violation$11208$1l2agK)
              (serious-condition? . g$serious-condition?$5772$1l2agK)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5812$1l2agK)
              (message-condition? . g$message-condition?$5759$1l2agK)
              (make-who-condition . g$make-who-condition$5803$1l2agK)
              (make-warning . g$make-warning$5765$1l2agK)
              (make-violation . g$make-violation$5783$1l2agK)
              (make-undefined-violation
                .
                g$make-undefined-violation$5839$1l2agK)
              (make-syntax-violation . g$make-syntax-violation$5829$1l2agK)
              (make-serious-condition . g$make-serious-condition$5771$1l2agK)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5811$1l2agK)
              (make-message-condition . g$make-message-condition$5757$1l2agK)
              (make-lexical-violation . g$make-lexical-violation$5823$1l2agK)
              (make-irritants-condition
                .
                g$make-irritants-condition$5795$1l2agK)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5817$1l2agK)
              (make-error . g$make-error$5777$1l2agK)
              (make-assertion-violation
                .
                g$make-assertion-violation$5789$1l2agK)
              (lexical-violation? . g$lexical-violation?$5824$1l2agK)
              (irritants-condition? . g$irritants-condition?$5797$1l2agK)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5818$1l2agK)
              (error? . g$error?$5778$1l2agK)
              (condition-who . g$condition-who$5806$1l2agK)
              (condition-message . g$condition-message$5760$1l2agK)
              (condition-irritants . g$condition-irritants$5798$1l2agK)
              (assertion-violation? . g$assertion-violation?$5790$1l2agK)
              (native-endianness . g$native-endianness$5622$1l2agK)
              (bytevector-u64-set! . g$bytevector-u64-set!$5643$1l2agK)
              (bytevector-u64-ref . g$bytevector-u64-ref$5639$1l2agK)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5645$1l2agK)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5641$1l2agK)
              (bytevector-u32-set! . g$bytevector-u32-set!$5635$1l2agK)
              (bytevector-u32-ref . g$bytevector-u32-ref$5631$1l2agK)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5637$1l2agK)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5633$1l2agK)
              (bytevector-u16-set! . g$bytevector-u16-set!$5627$1l2agK)
              (bytevector-u16-ref . g$bytevector-u16-ref$5623$1l2agK)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5629$1l2agK)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5625$1l2agK)
              (bytevector-s64-set! . g$bytevector-s64-set!$5644$1l2agK)
              (bytevector-s64-ref . g$bytevector-s64-ref$5640$1l2agK)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5646$1l2agK)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5642$1l2agK)
              (bytevector-s32-set! . g$bytevector-s32-set!$5636$1l2agK)
              (bytevector-s32-ref . g$bytevector-s32-ref$5632$1l2agK)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5638$1l2agK)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5634$1l2agK)
              (bytevector-s16-set! . g$bytevector-s16-set!$5628$1l2agK)
              (bytevector-s16-ref . g$bytevector-s16-ref$5624$1l2agK)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5630$1l2agK)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5626$1l2agK)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5649$1l2agK)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5647$1l2agK)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5650$1l2agK)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5648$1l2agK)
              (no-nans-violation? . g$no-nans-violation?$6181$1l2agK)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$6175$1l2agK)
              (make-no-nans-violation . g$make-no-nans-violation$6180$1l2agK)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6174$1l2agK)
              (fxrotate-bit-field . g$fxrotate-bit-field$6157$1l2agK)
              (fxif . g$fxif$6151$1l2agK)
              (fxcopy-bit-field . g$fxcopy-bit-field$6154$1l2agK)
              (fxcopy-bit . g$fxcopy-bit$6152$1l2agK)
              (fxbit-field . g$fxbit-field$6153$1l2agK)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$6156$1l2agK)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6155$1l2agK)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$6103$1l2agK)
              (bitwise-if . g$bitwise-if$6097$1l2agK)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6100$1l2agK)
              (bitwise-copy-bit . g$bitwise-copy-bit$6098$1l2agK)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6102$1l2agK)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6101$1l2agK)
              (symbol=? . g$symbol=?$5054$1l2agK)
              (string>? . g$string>?$5051$1l2agK)
              (string>=? . g$string>=?$5053$1l2agK)
              (string=? . g$string=?$5049$1l2agK)
              (string<? . g$string<?$5050$1l2agK)
              (string<=? . g$string<=?$5052$1l2agK)
              (rationalize . g$rationalize$5061$1l2agK)
              (char>? . g$char>?$5058$1l2agK)
              (char>=? . g$char>=?$5060$1l2agK)
              (char=? . g$char=?$5056$1l2agK)
              (char<? . g$char<?$5057$1l2agK)
              (char<=? . g$char<=?$5059$1l2agK)
              (cddddr . g$cddddr$5048$1l2agK)
              (cdddar . g$cdddar$5047$1l2agK)
              (cddadr . g$cddadr$5046$1l2agK)
              (cddaar . g$cddaar$5045$1l2agK)
              (cdaddr . g$cdaddr$5044$1l2agK)
              (cdadar . g$cdadar$5043$1l2agK)
              (cdaadr . g$cdaadr$5042$1l2agK)
              (cdaaar . g$cdaaar$5041$1l2agK)
              (cadddr . g$cadddr$5040$1l2agK)
              (caddar . g$caddar$5039$1l2agK)
              (cadadr . g$cadadr$5038$1l2agK)
              (cadaar . g$cadaar$5037$1l2agK)
              (caaddr . g$caaddr$5036$1l2agK)
              (caadar . g$caadar$5035$1l2agK)
              (caaadr . g$caaadr$5034$1l2agK)
              (caaaar . g$caaaar$5033$1l2agK)
              (cdddr . g$cdddr$5032$1l2agK)
              (cddar . g$cddar$5031$1l2agK)
              (cdadr . g$cdadr$5030$1l2agK)
              (cdaar . g$cdaar$5029$1l2agK)
              (caddr . g$caddr$5028$1l2agK)
              (cadar . g$cadar$5027$1l2agK)
              (caadr . g$caadr$5026$1l2agK)
              (caaar . g$caaar$5025$1l2agK)
              (cddr . g$cddr$5024$1l2agK)
              (cdar . g$cdar$5023$1l2agK)
              (cadr . g$cadr$5022$1l2agK)
              (caar . g$caar$5021$1l2agK)
              (boolean=? . g$boolean=?$5055$1l2agK)
              (enum-set? . g$enum?$6499$1l2agK)
              (make-promise . g$make-promise$5870$1l2agK)
              (load/args . g$load/args$11259$1l2agK)
              (printf . g$printf$6553$1l2agK)
              (fprintf . g$fprintf$6554$1l2agK)
              (format . g$format$6555$1l2agK)
              (trace-printer . g$trace-printer$11256$1l2agK)
              (make-traced-macro . g$make-traced-macro$6559$1l2agK)
              (assertion-error . g$assertion-error$11204$1l2agK)
              (make-parameter . g$make-parameter$6640$1l2agK)
              (environment-bindings . g$environment-bindings$11184$1l2agK)
              (environment-symbols . g$environment-symbols$11183$1l2agK)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11182$1l2agK)
              (library-path . g$library-path$7170$1l2agK)
              (library-extensions . g$library-extensions$7171$1l2agK)
              (installed-libraries . g$installed-libraries$7191$1l2agK)
              (expand . g$expand$11190$1l2agK)))))))
    (g$install-library$7186$1l2agK
      'g$12571$1l2agK
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12508$1l2agK)
        (cosh . g$12507$1l2agK)
        (sinh . g$12506$1l2agK)
        (make-guid . g$12505$1l2agK)
        (unspecified? . g$12504$1l2agK)
        (make-trace . g$12503$1l2agK)
        (make-list . g$12502$1l2agK)
        (last-pair . g$12501$1l2agK)
        (load-r5rs . g$12500$1l2agK)
        (license . g$12499$1l2agK)
        (stacktrace . g$12498$1l2agK)
        (ironscheme-build . g$11918$1l2agK)
        (set-symbol-value! . g$12484$1l2agK)
        (symbol-value . g$12483$1l2agK)
        (ungensym . g$12482$1l2agK)
        (gensym . g$12481$1l2agK)
        (void . g$12480$1l2agK)
        (compile-system-libraries . g$11920$1l2agK)
        (compile->closure . g$11922$1l2agK)
        (compile . g$11921$1l2agK)
        (load . g$11917$1l2agK)
        (interaction-environment . g$8978$1l2agK)
        (string-upcase . g$12476$1l2agK)
        (string-titlecase . g$12475$1l2agK)
        (string-normalize-nfkd . g$12474$1l2agK)
        (string-normalize-nfkc . g$12473$1l2agK)
        (string-normalize-nfd . g$12472$1l2agK)
        (string-normalize-nfc . g$12471$1l2agK)
        (string-foldcase . g$12470$1l2agK)
        (string-downcase . g$12469$1l2agK)
        (string-ci>? . g$7046$1l2agK)
        (string-ci>=? . g$7048$1l2agK)
        (string-ci=? . g$7044$1l2agK)
        (string-ci<? . g$7045$1l2agK)
        (string-ci<=? . g$7047$1l2agK)
        (char-whitespace? . g$12468$1l2agK)
        (char-upper-case? . g$12467$1l2agK)
        (char-title-case? . g$12466$1l2agK)
        (char-numeric? . g$12465$1l2agK)
        (char-lower-case? . g$12464$1l2agK)
        (char-general-category . g$12463$1l2agK)
        (char-upcase . g$12462$1l2agK)
        (char-titlecase . g$12461$1l2agK)
        (char-foldcase . g$12460$1l2agK)
        (char-downcase . g$12459$1l2agK)
        (char-ci>? . g$7097$1l2agK)
        (char-ci>=? . g$7099$1l2agK)
        (char-ci=? . g$7095$1l2agK)
        (char-ci<? . g$7096$1l2agK)
        (char-ci<=? . g$7098$1l2agK)
        (char-alphabetic? . g$12458$1l2agK)
        (variable-transformer-procedure . g$8577$1l2agK)
        (variable-transformer? . g$8576$1l2agK)
        (make-variable-transformer . g$8575$1l2agK)
        (identifier? . g$8973$1l2agK)
        (generate-temporaries . g$8962$1l2agK)
        (free-identifier=? . g$8963$1l2agK)
        (syntax->datum . g$8975$1l2agK)
        (datum->syntax . g$8974$1l2agK)
        (bound-identifier=? . g$8964$1l2agK)
        (record-type-descriptor? . g$12457$1l2agK)
        (record-predicate . g$12456$1l2agK)
        (record-mutator . g$12455$1l2agK)
        (record-constructor . g$12454$1l2agK)
        (record-accessor . g$12453$1l2agK)
        (make-record-type-descriptor . g$12452$1l2agK)
        (make-record-constructor-descriptor . g$12451$1l2agK)
        (record? . g$12450$1l2agK)
        (record-type-uid . g$12449$1l2agK)
        (record-type-sealed? . g$12448$1l2agK)
        (record-type-parent . g$12447$1l2agK)
        (record-type-opaque? . g$12446$1l2agK)
        (record-type-name . g$12445$1l2agK)
        (record-type-generative? . g$12444$1l2agK)
        (record-type-field-names . g$12443$1l2agK)
        (record-rtd . g$12442$1l2agK)
        (record-field-mutable? . g$12441$1l2agK)
        (delete-file . g$6407$1l2agK)
        (file-exists? . g$6406$1l2agK)
        (vector-sort! . g$12440$1l2agK)
        (vector-sort . g$12439$1l2agK)
        (list-sort . g$6920$1l2agK)
        (symbol-hash . g$12438$1l2agK)
        (string-ci-hash . g$12437$1l2agK)
        (string-hash . g$12436$1l2agK)
        (equal-hash . g$12435$1l2agK)
        (hashtable-equivalence-function . g$12434$1l2agK)
        (make-hashtable . g$12433$1l2agK)
        (hashtable-hash-function . g$12432$1l2agK)
        (make-eqv-hashtable . g$6374$1l2agK)
        (make-eq-hashtable . g$6373$1l2agK)
        (hashtable? . g$12431$1l2agK)
        (hashtable-update! . g$6380$1l2agK)
        (hashtable-size . g$6375$1l2agK)
        (hashtable-set! . g$6377$1l2agK)
        (hashtable-ref . g$6376$1l2agK)
        (hashtable-mutable? . g$12430$1l2agK)
        (hashtable-keys . g$12429$1l2agK)
        (hashtable-entries . g$12428$1l2agK)
        (hashtable-delete! . g$6378$1l2agK)
        (hashtable-copy . g$12427$1l2agK)
        (hashtable-contains? . g$6379$1l2agK)
        (hashtable-clear! . g$6381$1l2agK)
        (call-with-output-file . g$7516$1l2agK)
        (call-with-input-file . g$7515$1l2agK)
        (write-char . g$12426$1l2agK)
        (write . g$12425$1l2agK)
        (with-output-to-file . g$7514$1l2agK)
        (with-input-from-file . g$7513$1l2agK)
        (read-char . g$12424$1l2agK)
        (read . g$12423$1l2agK)
        (peek-char . g$12422$1l2agK)
        (open-output-file . g$12421$1l2agK)
        (open-input-file . g$12420$1l2agK)
        (newline . g$12419$1l2agK)
        (display . g$12418$1l2agK)
        (close-output-port . g$12417$1l2agK)
        (close-input-port . g$12416$1l2agK)
        (eof-object? . g$12415$1l2agK)
        (eof-object . g$12414$1l2agK)
        (current-error-port . g$12413$1l2agK)
        (current-output-port . g$12412$1l2agK)
        (current-input-port . g$12411$1l2agK)
        (output-port? . g$12410$1l2agK)
        (input-port? . g$12409$1l2agK)
        (utf-8-codec . g$12408$1l2agK)
        (utf-16-codec . g$12407$1l2agK)
        (transcoder-error-handling-mode . g$12406$1l2agK)
        (transcoder-eol-style . g$12405$1l2agK)
        (transcoder-codec . g$12404$1l2agK)
        (transcoded-port . g$12403$1l2agK)
        (textual-port? . g$12402$1l2agK)
        (string->bytevector . g$12401$1l2agK)
        (standard-output-port . g$12400$1l2agK)
        (standard-input-port . g$12399$1l2agK)
        (standard-error-port . g$12398$1l2agK)
        (set-port-position! . g$12397$1l2agK)
        (put-u8 . g$12396$1l2agK)
        (put-string . g$12395$1l2agK)
        (put-datum . g$12394$1l2agK)
        (put-char . g$12393$1l2agK)
        (put-bytevector . g$12392$1l2agK)
        (port? . g$7492$1l2agK)
        (port-transcoder . g$12391$1l2agK)
        (port-position . g$12390$1l2agK)
        (port-has-set-port-position!? . g$12389$1l2agK)
        (port-has-port-position? . g$12388$1l2agK)
        (port-eof? . g$12387$1l2agK)
        (output-port-buffer-mode . g$12386$1l2agK)
        (open-string-output-port . g$7491$1l2agK)
        (open-string-input-port . g$12385$1l2agK)
        (open-file-output-port . g$12384$1l2agK)
        (open-file-input/output-port . g$12383$1l2agK)
        (open-file-input-port . g$12382$1l2agK)
        (open-bytevector-output-port . g$12381$1l2agK)
        (open-bytevector-input-port . g$12380$1l2agK)
        (native-transcoder . g$12379$1l2agK)
        (native-eol-style . g$12378$1l2agK)
        (make-transcoder . g$12377$1l2agK)
        (latin-1-codec . g$12376$1l2agK)
        (make-i/o-write-error . g$7348$1l2agK)
        (make-i/o-read-error . g$7334$1l2agK)
        (make-i/o-port-error . g$7453$1l2agK)
        (make-i/o-invalid-position-error . g$7363$1l2agK)
        (make-i/o-filename-error . g$7380$1l2agK)
        (make-i/o-file-protection-error . g$7396$1l2agK)
        (make-i/o-file-is-read-only-error . g$7410$1l2agK)
        (make-i/o-file-does-not-exist-error . g$7438$1l2agK)
        (make-i/o-file-already-exists-error . g$7424$1l2agK)
        (make-i/o-error . g$7320$1l2agK)
        (make-i/o-encoding-error . g$7484$1l2agK)
        (make-i/o-decoding-error . g$7469$1l2agK)
        (make-custom-textual-output-port . g$12375$1l2agK)
        (make-custom-textual-input/output-port . g$12374$1l2agK)
        (make-custom-textual-input-port . g$12373$1l2agK)
        (make-custom-binary-output-port . g$12372$1l2agK)
        (make-custom-binary-input/output-port . g$12371$1l2agK)
        (make-custom-binary-input-port . g$12370$1l2agK)
        (make-bytevector . g$12369$1l2agK)
        (lookahead-u8 . g$12368$1l2agK)
        (lookahead-char . g$12367$1l2agK)
        (i/o-write-error? . g$7349$1l2agK)
        (i/o-read-error? . g$7335$1l2agK)
        (i/o-port-error? . g$7455$1l2agK)
        (i/o-invalid-position-error? . g$7365$1l2agK)
        (i/o-error-position . g$7366$1l2agK)
        (i/o-filename-error? . g$7382$1l2agK)
        (i/o-file-protection-error? . g$7397$1l2agK)
        (i/o-file-is-read-only-error? . g$7411$1l2agK)
        (i/o-file-does-not-exist-error? . g$7439$1l2agK)
        (i/o-file-already-exists-error? . g$7425$1l2agK)
        (i/o-error? . g$7321$1l2agK)
        (i/o-error-port . g$7456$1l2agK)
        (i/o-error-filename . g$7383$1l2agK)
        (i/o-encoding-error? . g$7486$1l2agK)
        (i/o-encoding-error-char . g$7487$1l2agK)
        (i/o-decoding-error? . g$7470$1l2agK)
        (get-u8 . g$12366$1l2agK)
        (get-string-n! . g$12365$1l2agK)
        (get-string-n . g$12364$1l2agK)
        (get-string-all . g$12363$1l2agK)
        (get-line . g$12362$1l2agK)
        (get-datum . g$12361$1l2agK)
        (get-char . g$12360$1l2agK)
        (get-bytevector-some . g$12359$1l2agK)
        (get-bytevector-n! . g$12358$1l2agK)
        (get-bytevector-n . g$12357$1l2agK)
        (get-bytevector-all . g$12356$1l2agK)
        (flush-output-port . g$12355$1l2agK)
        (close-port . g$12354$1l2agK)
        (call-with-string-output-port . g$12353$1l2agK)
        (call-with-port . g$12352$1l2agK)
        (call-with-bytevector-output-port . g$12351$1l2agK)
        (bytevector->string . g$12350$1l2agK)
        (buffer-mode? . g$12349$1l2agK)
        (binary-port? . g$12348$1l2agK)
        (scheme-report-environment . g$8953$1l2agK)
        (quotient . g$6900$1l2agK)
        (null-environment . g$8952$1l2agK)
        (remainder . g$6901$1l2agK)
        (modulo . g$6902$1l2agK)
        (inexact->exact . g$12347$1l2agK)
        (force . g$6904$1l2agK)
        (exact->inexact . g$12346$1l2agK)
        (exit . g$12345$1l2agK)
        (command-line . g$11914$1l2agK)
        (string-fill! . g$12344$1l2agK)
        (string-set! . g$12343$1l2agK)
        (set-cdr! . g$12342$1l2agK)
        (set-car! . g$12341$1l2agK)
        (remove . g$6487$1l2agK)
        (remv . g$6488$1l2agK)
        (remp . g$6473$1l2agK)
        (remq . g$6489$1l2agK)
        (partition . g$6472$1l2agK)
        (memv . g$12340$1l2agK)
        (memq . g$12339$1l2agK)
        (memp . g$6479$1l2agK)
        (member . g$6478$1l2agK)
        (exists . g$6483$1l2agK)
        (for-all . g$6482$1l2agK)
        (fold-right . g$6486$1l2agK)
        (fold-left . g$6485$1l2agK)
        (find . g$6471$1l2agK)
        (filter . g$6474$1l2agK)
        (cons* . g$6484$1l2agK)
        (assv . g$6475$1l2agK)
        (assq . g$12338$1l2agK)
        (assp . g$6477$1l2agK)
        (assoc . g$6476$1l2agK)
        (with-exception-handler . g$12337$1l2agK)
        (raise-continuable . g$12336$1l2agK)
        (raise . g$12335$1l2agK)
        (eval . g$8955$1l2agK)
        (environment . g$8951$1l2agK)
        (make-enumeration . g$7573$1l2agK)
        (enum-set=? . g$7580$1l2agK)
        (enum-set-universe . g$7574$1l2agK)
        (enum-set-union . g$7581$1l2agK)
        (enum-set-subset? . g$7579$1l2agK)
        (enum-set-projection . g$7585$1l2agK)
        (enum-set-member? . g$7578$1l2agK)
        (enum-set-intersection . g$7582$1l2agK)
        (enum-set-indexer . g$7575$1l2agK)
        (enum-set-difference . g$7583$1l2agK)
        (enum-set-constructor . g$7576$1l2agK)
        (enum-set-complement . g$7584$1l2agK)
        (enum-set->list . g$7577$1l2agK)
        (who-condition? . g$6811$1l2agK)
        (warning? . g$6722$1l2agK)
        (violation? . g$6764$1l2agK)
        (undefined-violation? . g$6888$1l2agK)
        (syntax-violation? . g$6872$1l2agK)
        (syntax-violation-subform . g$6874$1l2agK)
        (syntax-violation-form . g$6873$1l2agK)
        (syntax-violation . g$8972$1l2agK)
        (simple-conditions . g$12334$1l2agK)
        (serious-condition? . g$6736$1l2agK)
        (non-continuable-violation? . g$6826$1l2agK)
        (message-condition? . g$6707$1l2agK)
        (make-who-condition . g$6809$1l2agK)
        (make-warning . g$6721$1l2agK)
        (make-violation . g$6763$1l2agK)
        (make-undefined-violation . g$6887$1l2agK)
        (make-syntax-violation . g$6869$1l2agK)
        (make-serious-condition . g$6735$1l2agK)
        (make-non-continuable-violation . g$6825$1l2agK)
        (make-message-condition . g$6705$1l2agK)
        (make-lexical-violation . g$6853$1l2agK)
        (make-irritants-condition . g$6792$1l2agK)
        (make-implementation-restriction-violation . g$6839$1l2agK)
        (make-error . g$6749$1l2agK)
        (make-assertion-violation . g$6777$1l2agK)
        (lexical-violation? . g$6854$1l2agK)
        (irritants-condition? . g$6794$1l2agK)
        (implementation-restriction-violation? . g$6840$1l2agK)
        (error? . g$6750$1l2agK)
        (condition-who . g$6812$1l2agK)
        (condition-predicate . g$12333$1l2agK)
        (condition-message . g$6708$1l2agK)
        (condition-irritants . g$6795$1l2agK)
        (condition-accessor . g$12332$1l2agK)
        (condition . g$12331$1l2agK)
        (assertion-violation? . g$6778$1l2agK)
        (condition? . g$12330$1l2agK)
        (utf32->string . g$12329$1l2agK)
        (utf16->string . g$12328$1l2agK)
        (utf8->string . g$12327$1l2agK)
        (uint-list->bytevector . g$12326$1l2agK)
        (u8-list->bytevector . g$12325$1l2agK)
        (string->utf8 . g$12324$1l2agK)
        (string->utf32 . g$12323$1l2agK)
        (string->utf16 . g$12322$1l2agK)
        (sint-list->bytevector . g$12321$1l2agK)
        (native-endianness . g$6563$1l2agK)
        (bytevector? . g$12320$1l2agK)
        (bytevector=? . g$12319$1l2agK)
        (bytevector-uint-set! . g$12318$1l2agK)
        (bytevector-uint-ref . g$12317$1l2agK)
        (bytevector-u8-set! . g$12316$1l2agK)
        (bytevector-u8-ref . g$12315$1l2agK)
        (bytevector-u64-set! . g$6584$1l2agK)
        (bytevector-u64-ref . g$6580$1l2agK)
        (bytevector-u64-native-set! . g$6586$1l2agK)
        (bytevector-u64-native-ref . g$6582$1l2agK)
        (bytevector-u32-set! . g$6576$1l2agK)
        (bytevector-u32-ref . g$6572$1l2agK)
        (bytevector-u32-native-set! . g$6578$1l2agK)
        (bytevector-u32-native-ref . g$6574$1l2agK)
        (bytevector-u16-set! . g$6568$1l2agK)
        (bytevector-u16-ref . g$6564$1l2agK)
        (bytevector-u16-native-set! . g$6570$1l2agK)
        (bytevector-u16-native-ref . g$6566$1l2agK)
        (bytevector-sint-set! . g$12314$1l2agK)
        (bytevector-sint-ref . g$12313$1l2agK)
        (bytevector-s8-set! . g$12312$1l2agK)
        (bytevector-s8-ref . g$12311$1l2agK)
        (bytevector-s64-set! . g$6585$1l2agK)
        (bytevector-s64-ref . g$6581$1l2agK)
        (bytevector-s64-native-set! . g$6587$1l2agK)
        (bytevector-s64-native-ref . g$6583$1l2agK)
        (bytevector-s32-set! . g$6577$1l2agK)
        (bytevector-s32-ref . g$6573$1l2agK)
        (bytevector-s32-native-set! . g$6579$1l2agK)
        (bytevector-s32-native-ref . g$6575$1l2agK)
        (bytevector-s16-set! . g$6569$1l2agK)
        (bytevector-s16-ref . g$6565$1l2agK)
        (bytevector-s16-native-set! . g$6571$1l2agK)
        (bytevector-s16-native-ref . g$6567$1l2agK)
        (bytevector-length . g$12310$1l2agK)
        (bytevector-ieee-single-set! . g$12309$1l2agK)
        (bytevector-ieee-single-ref . g$12308$1l2agK)
        (bytevector-ieee-single-native-set! . g$6590$1l2agK)
        (bytevector-ieee-single-native-ref . g$6588$1l2agK)
        (bytevector-ieee-double-set! . g$12307$1l2agK)
        (bytevector-ieee-double-ref . g$12306$1l2agK)
        (bytevector-ieee-double-native-set! . g$6591$1l2agK)
        (bytevector-ieee-double-native-ref . g$6589$1l2agK)
        (bytevector-fill! . g$12305$1l2agK)
        (bytevector-copy! . g$12304$1l2agK)
        (bytevector-copy . g$12303$1l2agK)
        (bytevector->uint-list . g$12302$1l2agK)
        (bytevector->u8-list . g$12301$1l2agK)
        (bytevector->sint-list . g$12300$1l2agK)
        (no-nans-violation? . g$7306$1l2agK)
        (no-infinities-violation? . g$7292$1l2agK)
        (make-no-nans-violation . g$7305$1l2agK)
        (make-no-infinities-violation . g$7291$1l2agK)
        (real->flonum . g$12299$1l2agK)
        (flzero? . g$12298$1l2agK)
        (fltruncate . g$12297$1l2agK)
        (fltan . g$12296$1l2agK)
        (flsqrt . g$12295$1l2agK)
        (flsin . g$12294$1l2agK)
        (flround . g$12293$1l2agK)
        (flpositive? . g$12292$1l2agK)
        (flonum? . g$12291$1l2agK)
        (flodd? . g$12290$1l2agK)
        (flnumerator . g$12289$1l2agK)
        (flnegative? . g$12288$1l2agK)
        (flnan? . g$12287$1l2agK)
        (flmod0 . g$12286$1l2agK)
        (flmod . g$12285$1l2agK)
        (flmin . g$12284$1l2agK)
        (flmax . g$12283$1l2agK)
        (fllog . g$12282$1l2agK)
        (flinteger? . g$12281$1l2agK)
        (flinfinite? . g$12280$1l2agK)
        (flfloor . g$12279$1l2agK)
        (flfinite? . g$12278$1l2agK)
        (flexpt . g$12277$1l2agK)
        (flexp . g$12276$1l2agK)
        (fleven? . g$12275$1l2agK)
        (fldiv0-and-mod0 . g$12274$1l2agK)
        (fldiv0 . g$12273$1l2agK)
        (fldiv-and-mod . g$12272$1l2agK)
        (fldiv . g$12271$1l2agK)
        (fldenominator . g$12270$1l2agK)
        (flcos . g$12269$1l2agK)
        (flceiling . g$12268$1l2agK)
        (flatan . g$12267$1l2agK)
        (flasin . g$12266$1l2agK)
        (flacos . g$12265$1l2agK)
        (flabs . g$12264$1l2agK)
        (fl>? . g$12263$1l2agK)
        (fl>=? . g$12262$1l2agK)
        (fl=? . g$12261$1l2agK)
        (fl<? . g$12260$1l2agK)
        (fl<=? . g$12259$1l2agK)
        (fl/ . g$12258$1l2agK)
        (fl- . g$12257$1l2agK)
        (fl+ . g$12256$1l2agK)
        (fl* . g$12255$1l2agK)
        (fixnum->flonum . g$12254$1l2agK)
        (fxzero? . g$12253$1l2agK)
        (fxxor . g$12252$1l2agK)
        (fxrotate-bit-field . g$7237$1l2agK)
        (fxreverse-bit-field . g$12251$1l2agK)
        (fxpositive? . g$12250$1l2agK)
        (fxodd? . g$12249$1l2agK)
        (fxnot . g$12248$1l2agK)
        (fxnegative? . g$12247$1l2agK)
        (fxmod0 . g$12246$1l2agK)
        (fxmod . g$12245$1l2agK)
        (fxmin . g$12244$1l2agK)
        (fxmax . g$12243$1l2agK)
        (fxlength . g$12242$1l2agK)
        (fxior . g$12241$1l2agK)
        (fxif . g$7231$1l2agK)
        (fxfirst-bit-set . g$12240$1l2agK)
        (fxeven? . g$12239$1l2agK)
        (fxdiv0-and-mod0 . g$12238$1l2agK)
        (fxdiv0 . g$12237$1l2agK)
        (fxdiv-and-mod . g$12236$1l2agK)
        (fxdiv . g$12235$1l2agK)
        (fxcopy-bit-field . g$7234$1l2agK)
        (fxcopy-bit . g$7232$1l2agK)
        (fxbit-set? . g$12234$1l2agK)
        (fxbit-field . g$7233$1l2agK)
        (fxbit-count . g$12233$1l2agK)
        (fxarithmetic-shift-right . g$7236$1l2agK)
        (fxarithmetic-shift-left . g$7235$1l2agK)
        (fxarithmetic-shift . g$12232$1l2agK)
        (fxand . g$12231$1l2agK)
        (fx>? . g$12230$1l2agK)
        (fx>=? . g$12229$1l2agK)
        (fx=? . g$12228$1l2agK)
        (fx<? . g$12227$1l2agK)
        (fx<=? . g$12226$1l2agK)
        (fx-/carry . g$12225$1l2agK)
        (fx- . g$12224$1l2agK)
        (fx+/carry . g$12223$1l2agK)
        (fx+ . g$12222$1l2agK)
        (fx*/carry . g$12221$1l2agK)
        (fx* . g$12220$1l2agK)
        (greatest-fixnum . g$12219$1l2agK)
        (least-fixnum . g$12218$1l2agK)
        (fixnum-width . g$12217$1l2agK)
        (fixnum? . g$12216$1l2agK)
        (bitwise-rotate-bit-field . g$7189$1l2agK)
        (bitwise-reverse-bit-field . g$12215$1l2agK)
        (bitwise-length . g$12214$1l2agK)
        (bitwise-if . g$7183$1l2agK)
        (bitwise-first-bit-set . g$12213$1l2agK)
        (bitwise-copy-bit-field . g$7186$1l2agK)
        (bitwise-copy-bit . g$7184$1l2agK)
        (bitwise-bit-set? . g$12212$1l2agK)
        (bitwise-bit-field . g$12211$1l2agK)
        (bitwise-bit-count . g$12210$1l2agK)
        (bitwise-xor . g$12209$1l2agK)
        (bitwise-ior . g$12208$1l2agK)
        (bitwise-and . g$12207$1l2agK)
        (bitwise-not . g$12206$1l2agK)
        (bitwise-arithmetic-shift-right . g$7188$1l2agK)
        (bitwise-arithmetic-shift-left . g$7187$1l2agK)
        (bitwise-arithmetic-shift . g$12205$1l2agK)
        (zero? . g$12204$1l2agK)
        (vector? . g$12203$1l2agK)
        (vector-set! . g$12202$1l2agK)
        (vector-ref . g$12201$1l2agK)
        (vector-map . g$12200$1l2agK)
        (vector-length . g$12199$1l2agK)
        (vector-for-each . g$12198$1l2agK)
        (vector-fill! . g$12197$1l2agK)
        (vector->list . g$12196$1l2agK)
        (vector . g$12195$1l2agK)
        (values . g$12194$1l2agK)
        (truncate . g$12193$1l2agK)
        (tan . g$12192$1l2agK)
        (symbol? . g$12191$1l2agK)
        (symbol=? . g$5872$1l2agK)
        (symbol->string . g$12190$1l2agK)
        (substring . g$12189$1l2agK)
        (string? . g$12188$1l2agK)
        (string>? . g$5869$1l2agK)
        (string>=? . g$5871$1l2agK)
        (string=? . g$5867$1l2agK)
        (string<? . g$5868$1l2agK)
        (string<=? . g$5870$1l2agK)
        (string-ref . g$12187$1l2agK)
        (string-length . g$12186$1l2agK)
        (string-for-each . g$12185$1l2agK)
        (string-copy . g$12184$1l2agK)
        (string-append . g$12183$1l2agK)
        (string->symbol . g$12182$1l2agK)
        (string->number . g$12181$1l2agK)
        (string->list . g$12180$1l2agK)
        (string . g$12179$1l2agK)
        (sqrt . g$12178$1l2agK)
        (sin . g$12177$1l2agK)
        (round . g$12176$1l2agK)
        (reverse . g$12175$1l2agK)
        (real? . g$12174$1l2agK)
        (real-valued? . g$12173$1l2agK)
        (real-part . g$12172$1l2agK)
        (rationalize . g$5925$1l2agK)
        (rational? . g$12171$1l2agK)
        (rational-valued? . g$12170$1l2agK)
        (procedure? . g$12169$1l2agK)
        (positive? . g$12168$1l2agK)
        (pair? . g$12167$1l2agK)
        (odd? . g$12166$1l2agK)
        (numerator . g$12165$1l2agK)
        (number? . g$12164$1l2agK)
        (number->string . g$12163$1l2agK)
        (null? . g$12162$1l2agK)
        (not . g$12161$1l2agK)
        (negative? . g$12160$1l2agK)
        (nan? . g$12159$1l2agK)
        (min . g$12158$1l2agK)
        (max . g$12157$1l2agK)
        (map . g$12156$1l2agK)
        (make-vector . g$12155$1l2agK)
        (make-string . g$12154$1l2agK)
        (make-rectangular . g$12153$1l2agK)
        (make-polar . g$12152$1l2agK)
        (magnitude . g$12151$1l2agK)
        (log . g$12150$1l2agK)
        (list? . g$12149$1l2agK)
        (list-tail . g$12148$1l2agK)
        (list-ref . g$12147$1l2agK)
        (list->vector . g$12146$1l2agK)
        (list->string . g$12145$1l2agK)
        (list . g$12144$1l2agK)
        (length . g$12143$1l2agK)
        (lcm . g$12142$1l2agK)
        (integer? . g$12141$1l2agK)
        (integer-valued? . g$12140$1l2agK)
        (integer->char . g$12139$1l2agK)
        (infinite? . g$12138$1l2agK)
        (inexact? . g$12137$1l2agK)
        (inexact . g$12136$1l2agK)
        (imag-part . g$12135$1l2agK)
        (gcd . g$12134$1l2agK)
        (for-each . g$12133$1l2agK)
        (floor . g$12132$1l2agK)
        (finite? . g$12131$1l2agK)
        (expt . g$12130$1l2agK)
        (exp . g$12129$1l2agK)
        (exact? . g$12128$1l2agK)
        (exact-integer-sqrt . g$12127$1l2agK)
        (exact . g$12126$1l2agK)
        (even? . g$12125$1l2agK)
        (error . g$12124$1l2agK)
        (eqv? . g$12123$1l2agK)
        (equal? . g$12122$1l2agK)
        (eq? . g$12121$1l2agK)
        (dynamic-wind . g$12120$1l2agK)
        (div0-and-mod0 . g$12119$1l2agK)
        (mod0 . g$12118$1l2agK)
        (div0 . g$12117$1l2agK)
        (div-and-mod . g$12116$1l2agK)
        (mod . g$12115$1l2agK)
        (div . g$12114$1l2agK)
        (denominator . g$12113$1l2agK)
        (cos . g$12112$1l2agK)
        (cons . g$12111$1l2agK)
        (complex? . g$12110$1l2agK)
        (char? . g$12109$1l2agK)
        (char>? . g$5922$1l2agK)
        (char>=? . g$5924$1l2agK)
        (char=? . g$5920$1l2agK)
        (char<? . g$5921$1l2agK)
        (char<=? . g$5923$1l2agK)
        (char->integer . g$12108$1l2agK)
        (ceiling . g$12107$1l2agK)
        (call-with-values . g$12106$1l2agK)
        (call/cc . g$12105$1l2agK)
        (call-with-current-continuation . g$12104$1l2agK)
        (cddddr . g$5820$1l2agK)
        (cdddar . g$5819$1l2agK)
        (cddadr . g$5818$1l2agK)
        (cddaar . g$5817$1l2agK)
        (cdaddr . g$5816$1l2agK)
        (cdadar . g$5815$1l2agK)
        (cdaadr . g$5814$1l2agK)
        (cdaaar . g$5813$1l2agK)
        (cadddr . g$5812$1l2agK)
        (caddar . g$5811$1l2agK)
        (cadadr . g$5810$1l2agK)
        (cadaar . g$5809$1l2agK)
        (caaddr . g$5808$1l2agK)
        (caadar . g$5807$1l2agK)
        (caaadr . g$5806$1l2agK)
        (caaaar . g$5805$1l2agK)
        (cdddr . g$5804$1l2agK)
        (cddar . g$5803$1l2agK)
        (cdadr . g$5802$1l2agK)
        (cdaar . g$5801$1l2agK)
        (caddr . g$5800$1l2agK)
        (cadar . g$5799$1l2agK)
        (caadr . g$5798$1l2agK)
        (caaar . g$5797$1l2agK)
        (cddr . g$5796$1l2agK)
        (cdar . g$5795$1l2agK)
        (cadr . g$5794$1l2agK)
        (caar . g$5793$1l2agK)
        (cdr . g$12103$1l2agK)
        (car . g$12102$1l2agK)
        (boolean? . g$12101$1l2agK)
        (boolean=? . g$5873$1l2agK)
        (atan . g$12100$1l2agK)
        (assertion-violation . g$12099$1l2agK)
        (asin . g$12098$1l2agK)
        (apply . g$12097$1l2agK)
        (append . g$12096$1l2agK)
        (angle . g$12095$1l2agK)
        (acos . g$12094$1l2agK)
        (abs . g$12093$1l2agK)
        (/ . g$12092$1l2agK)
        (* . g$12091$1l2agK)
        (- . g$12090$1l2agK)
        (+ . g$12089$1l2agK)
        (>= . g$12088$1l2agK)
        (> . g$12087$1l2agK)
        (= . g$12086$1l2agK)
        (<= . g$12085$1l2agK)
        (< . g$12084$1l2agK)
        (deserialize-port . g$12079$1l2agK)
        (serialize-port . g$12078$1l2agK)
        (enum-set? . g$7549$1l2agK)
        (make-promise . g$6903$1l2agK)
        (load/args . g$11916$1l2agK)
        (printf . g$7657$1l2agK)
        (fprintf . g$7658$1l2agK)
        (format . g$7659$1l2agK)
        (get-arity . g$12077$1l2agK)
        (gc-collect . g$12076$1l2agK)
        (clr-type? . g$12075$1l2agK)
        (get-clr-type . g$12074$1l2agK)
        (vector-append . g$12072$1l2agK)
        (vector-filter . g$12071$1l2agK)
        (vector-reverse! . g$12070$1l2agK)
        (vector-contains? . g$12069$1l2agK)
        (vector-index-of . g$12068$1l2agK)
        (vector-copy . g$12067$1l2agK)
        (vector-binary-search . g$12066$1l2agK)
        (get-output-string . g$12065$1l2agK)
        (open-output-string . g$12064$1l2agK)
        (open-input-string . g$12063$1l2agK)
        (string-ci-compare . g$12062$1l2agK)
        (string-compare . g$12061$1l2agK)
        (string-format . g$12060$1l2agK)
        (trace-printer . g$11913$1l2agK)
        (make-traced-procedure . g$12059$1l2agK)
        (make-traced-macro . g$7679$1l2agK)
        (pmap . g$12058$1l2agK)
        (time-it . g$12057$1l2agK)
        (make-parameter . g$7684$1l2agK)
        (library-locator . g$12056$1l2agK)
        (get-library-paths . g$12055$1l2agK)
        (environment-bindings . g$8948$1l2agK)
        (environment-symbols . g$8947$1l2agK)
        (interaction-environment-symbols . g$8946$1l2agK)
        (library-path . g$8115$1l2agK)
        (library-extensions . g$8116$1l2agK)
        (installed-libraries . g$8136$1l2agK)
        (expand . g$8954$1l2agK)
        (&no-nans . g$12054$1l2agK)
        (&no-infinities . g$12053$1l2agK)
        (&i/o-encoding . g$12052$1l2agK)
        (&i/o-decoding . g$12051$1l2agK)
        (&i/o-port . g$12050$1l2agK)
        (&i/o-file-does-not-exist . g$12049$1l2agK)
        (&i/o-file-already-exists . g$12048$1l2agK)
        (&i/o-file-is-read-only . g$12047$1l2agK)
        (&i/o-file-protection . g$12046$1l2agK)
        (&i/o-filename . g$12045$1l2agK)
        (&i/o-invalid-position . g$12044$1l2agK)
        (&i/o-write . g$12043$1l2agK)
        (&i/o-read . g$12042$1l2agK)
        (&i/o . g$12041$1l2agK)
        (&non-continuable . g$12040$1l2agK)
        (&undefined . g$12039$1l2agK)
        (&syntax . g$12038$1l2agK)
        (&lexical . g$12037$1l2agK)
        (&implementation-restriction . g$12036$1l2agK)
        (&who . g$12034$1l2agK)
        (&irritants . g$12033$1l2agK)
        (&assertion . g$12032$1l2agK)
        (&violation . g$12031$1l2agK)
        (&error . g$12030$1l2agK)
        (&serious . g$12029$1l2agK)
        (&warning . g$12028$1l2agK)
        (&message . g$12027$1l2agK)
        (&condition . g$12026$1l2agK)
        (define-condition-type . g$12025$1l2agK)
        (define-enumeration . g$12024$1l2agK)
        (define-record-type . g$12023$1l2agK)
        (parent-rtd . g$12022$1l2agK)
        (nongenerative . g$12021$1l2agK)
        (opaque . g$12020$1l2agK)
        (sealed . g$12019$1l2agK)
        (protocol . g$12018$1l2agK)
        (parent . g$12017$1l2agK)
        (immutable . g$12016$1l2agK)
        (mutable . g$12015$1l2agK)
        (fields . g$12014$1l2agK)
        (error-handling-mode . g$12013$1l2agK)
        (file-options . g$12012$1l2agK)
        (buffer-mode . g$12011$1l2agK)
        (eol-style . g$12010$1l2agK)
        (guard . g$12009$1l2agK)
        (trace-letrec-syntax . g$12008$1l2agK)
        (trace-let-syntax . g$12007$1l2agK)
        (trace-define-syntax . g$12006$1l2agK)
        (trace-define . g$12005$1l2agK)
        (trace-lambda . g$12004$1l2agK)
        (unsyntax-splicing . g$12003$1l2agK)
        (unsyntax . g$12002$1l2agK)
        (unquote-splicing . g$12001$1l2agK)
        (unquote . g$12000$1l2agK)
        (_ . g$11999$1l2agK)
        (else . g$11998$1l2agK)
        (=> . g$11997$1l2agK)
        (... . g$11996$1l2agK)
        (assert . g$11995$1l2agK)
        (endianness . g$11994$1l2agK)
        (delay . g$11993$1l2agK)
        (time . g$11992$1l2agK)
        (or . g$11991$1l2agK)
        (and . g$11990$1l2agK)
        (do . g$11989$1l2agK)
        (cond . g$11988$1l2agK)
        (let* . g$11987$1l2agK)
        (let . g$11986$1l2agK)
        (identifier-syntax . g$11985$1l2agK)
        (with-syntax . g$11984$1l2agK)
        (quasisyntax . g$11983$1l2agK)
        (quasiquote . g$11982$1l2agK)
        (syntax-rules . g$11981$1l2agK)
        (include-into . g$11980$1l2agK)
        (include . g$11979$1l2agK)
        (let-values . g$11977$1l2agK)
        (let*-values . g$11976$1l2agK)
        (record-constructor-descriptor . g$11975$1l2agK)
        (record-type-descriptor . g$11974$1l2agK)
        (fluid-let-syntax . g$11973$1l2agK)
        (case . g$11972$1l2agK)
        (parameterize . g$11971$1l2agK)
        (unless . g$11970$1l2agK)
        (when . g$11969$1l2agK)
        (if . g$11968$1l2agK)
        (letrec* . g$11967$1l2agK)
        (letrec . g$11966$1l2agK)
        (case-lambda . g$11964$1l2agK)
        (lambda . g$11963$1l2agK)
        (syntax . g$11962$1l2agK)
        (syntax-case . g$11961$1l2agK)
        (quote . g$11960$1l2agK)
        (letrec-syntax . g$11958$1l2agK)
        (let-syntax . g$11957$1l2agK)
        (set! . g$11956$1l2agK)
        (import . g$11955$1l2agK)
        (library . g$11954$1l2agK)
        (begin . g$11953$1l2agK)
        (module . g$11952$1l2agK)
        (define-syntax . g$11951$1l2agK)
        (define . g$11950$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12572$1l2agK
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12055$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7186$1l2agK
      'g$12573$1l2agK
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12513$1l2agK)
        (annotation-source . g$12512$1l2agK)
        (annotation-expression . g$12511$1l2agK)
        (annotation? . g$12510$1l2agK)
        (read-annotated . g$12509$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7186$1l2agK
      'g$12574$1l2agK
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12479$1l2agK)
        (serialize-library . g$12478$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7186$1l2agK
      'g$12575$1l2agK
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8577$1l2agK)
        (variable-transformer? . g$8576$1l2agK)
        (eqv-hash . g$12082$1l2agK)
        (eq-hash . g$12081$1l2agK)
        (reverse! . g$12080$1l2agK)
        (format . g$7659$1l2agK)
        (get-command-line . g$12073$1l2agK)
        (make-traced-procedure . g$12059$1l2agK)
        (assertion-error . g$8968$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7186$1l2agK
      'g$12576$1l2agK
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12083$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12577$1l2agK
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12497$1l2agK)
        (clr-field-set!-internal . g$12496$1l2agK)
        (clr-field-get-internal . g$12495$1l2agK)
        (clr-cast-internal . g$12494$1l2agK)
        (clr-call-internal . g$12493$1l2agK)
        (clr-new-internal . g$12492$1l2agK)
        (clr-new-array-internal . g$12491$1l2agK)
        (clr-is-internal . g$12490$1l2agK)
        (clr-reference-internal . g$12489$1l2agK)
        (clr-using-internal . g$12488$1l2agK)
        (clr-clear-usings-internal . g$12487$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12578$1l2agK
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$12001$1l2agK)
        (unquote . g$12000$1l2agK)
        (else . g$11998$1l2agK)
        (=> . g$11997$1l2agK)
        (delay . g$11993$1l2agK)
        (or . g$11991$1l2agK)
        (and . g$11990$1l2agK)
        (do . g$11989$1l2agK)
        (cond . g$11988$1l2agK)
        (let* . g$11987$1l2agK)
        (let . g$11986$1l2agK)
        (quasiquote . g$11982$1l2agK)
        (syntax-rules . g$11981$1l2agK)
        (case . g$11972$1l2agK)
        (if . g$11968$1l2agK)
        (letrec . g$11966$1l2agK)
        (lambda . g$11963$1l2agK)
        (quote . g$11960$1l2agK)
        (letrec-syntax . g$11958$1l2agK)
        (let-syntax . g$11957$1l2agK)
        (set! . g$11956$1l2agK)
        (begin . g$11953$1l2agK)
        (define-syntax . g$11951$1l2agK)
        (define . g$11950$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7186$1l2agK
      'g$12579$1l2agK
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8978$1l2agK)
        (char-ready? . g$12477$1l2agK)
        (string-ci>? . g$7046$1l2agK)
        (string-ci>=? . g$7048$1l2agK)
        (string-ci=? . g$7044$1l2agK)
        (string-ci<? . g$7045$1l2agK)
        (string-ci<=? . g$7047$1l2agK)
        (char-whitespace? . g$12468$1l2agK)
        (char-upper-case? . g$12467$1l2agK)
        (char-numeric? . g$12465$1l2agK)
        (char-lower-case? . g$12464$1l2agK)
        (char-upcase . g$12462$1l2agK)
        (char-downcase . g$12459$1l2agK)
        (char-ci>? . g$7097$1l2agK)
        (char-ci>=? . g$7099$1l2agK)
        (char-ci=? . g$7095$1l2agK)
        (char-ci<? . g$7096$1l2agK)
        (char-ci<=? . g$7098$1l2agK)
        (char-alphabetic? . g$12458$1l2agK)
        (call-with-output-file . g$7516$1l2agK)
        (call-with-input-file . g$7515$1l2agK)
        (write-char . g$12426$1l2agK)
        (write . g$12425$1l2agK)
        (with-output-to-file . g$7514$1l2agK)
        (with-input-from-file . g$7513$1l2agK)
        (read-char . g$12424$1l2agK)
        (read . g$12423$1l2agK)
        (peek-char . g$12422$1l2agK)
        (open-output-file . g$12421$1l2agK)
        (open-input-file . g$12420$1l2agK)
        (newline . g$12419$1l2agK)
        (display . g$12418$1l2agK)
        (close-output-port . g$12417$1l2agK)
        (close-input-port . g$12416$1l2agK)
        (eof-object? . g$12415$1l2agK)
        (eof-object . g$12414$1l2agK)
        (current-error-port . g$12413$1l2agK)
        (current-output-port . g$12412$1l2agK)
        (current-input-port . g$12411$1l2agK)
        (output-port? . g$12410$1l2agK)
        (input-port? . g$12409$1l2agK)
        (scheme-report-environment . g$8953$1l2agK)
        (quotient . g$6900$1l2agK)
        (null-environment . g$8952$1l2agK)
        (remainder . g$6901$1l2agK)
        (modulo . g$6902$1l2agK)
        (inexact->exact . g$12347$1l2agK)
        (force . g$6904$1l2agK)
        (exact->inexact . g$12346$1l2agK)
        (string-fill! . g$12344$1l2agK)
        (string-set! . g$12343$1l2agK)
        (set-cdr! . g$12342$1l2agK)
        (set-car! . g$12341$1l2agK)
        (memv . g$12340$1l2agK)
        (memq . g$12339$1l2agK)
        (member . g$6478$1l2agK)
        (assv . g$6475$1l2agK)
        (assq . g$12338$1l2agK)
        (assoc . g$6476$1l2agK)
        (eval . g$8955$1l2agK)
        (zero? . g$12204$1l2agK)
        (vector? . g$12203$1l2agK)
        (vector-set! . g$12202$1l2agK)
        (vector-ref . g$12201$1l2agK)
        (vector-length . g$12199$1l2agK)
        (vector-fill! . g$12197$1l2agK)
        (vector->list . g$12196$1l2agK)
        (vector . g$12195$1l2agK)
        (values . g$12194$1l2agK)
        (truncate . g$12193$1l2agK)
        (tan . g$12192$1l2agK)
        (symbol? . g$12191$1l2agK)
        (symbol->string . g$12190$1l2agK)
        (substring . g$12189$1l2agK)
        (string? . g$12188$1l2agK)
        (string>? . g$5869$1l2agK)
        (string>=? . g$5871$1l2agK)
        (string=? . g$5867$1l2agK)
        (string<? . g$5868$1l2agK)
        (string<=? . g$5870$1l2agK)
        (string-ref . g$12187$1l2agK)
        (string-length . g$12186$1l2agK)
        (string-copy . g$12184$1l2agK)
        (string-append . g$12183$1l2agK)
        (string->symbol . g$12182$1l2agK)
        (string->number . g$12181$1l2agK)
        (string->list . g$12180$1l2agK)
        (string . g$12179$1l2agK)
        (sqrt . g$12178$1l2agK)
        (sin . g$12177$1l2agK)
        (round . g$12176$1l2agK)
        (reverse . g$12175$1l2agK)
        (real? . g$12174$1l2agK)
        (real-part . g$12172$1l2agK)
        (rationalize . g$5925$1l2agK)
        (rational? . g$12171$1l2agK)
        (procedure? . g$12169$1l2agK)
        (positive? . g$12168$1l2agK)
        (pair? . g$12167$1l2agK)
        (odd? . g$12166$1l2agK)
        (numerator . g$12165$1l2agK)
        (number? . g$12164$1l2agK)
        (number->string . g$12163$1l2agK)
        (null? . g$12162$1l2agK)
        (not . g$12161$1l2agK)
        (negative? . g$12160$1l2agK)
        (min . g$12158$1l2agK)
        (max . g$12157$1l2agK)
        (map . g$12156$1l2agK)
        (make-vector . g$12155$1l2agK)
        (make-string . g$12154$1l2agK)
        (make-rectangular . g$12153$1l2agK)
        (make-polar . g$12152$1l2agK)
        (magnitude . g$12151$1l2agK)
        (log . g$12150$1l2agK)
        (list? . g$12149$1l2agK)
        (list-tail . g$12148$1l2agK)
        (list-ref . g$12147$1l2agK)
        (list->vector . g$12146$1l2agK)
        (list->string . g$12145$1l2agK)
        (list . g$12144$1l2agK)
        (length . g$12143$1l2agK)
        (lcm . g$12142$1l2agK)
        (integer? . g$12141$1l2agK)
        (integer->char . g$12139$1l2agK)
        (inexact? . g$12137$1l2agK)
        (imag-part . g$12135$1l2agK)
        (gcd . g$12134$1l2agK)
        (for-each . g$12133$1l2agK)
        (floor . g$12132$1l2agK)
        (expt . g$12130$1l2agK)
        (exp . g$12129$1l2agK)
        (exact? . g$12128$1l2agK)
        (even? . g$12125$1l2agK)
        (eqv? . g$12123$1l2agK)
        (equal? . g$12122$1l2agK)
        (eq? . g$12121$1l2agK)
        (dynamic-wind . g$12120$1l2agK)
        (denominator . g$12113$1l2agK)
        (cos . g$12112$1l2agK)
        (cons . g$12111$1l2agK)
        (complex? . g$12110$1l2agK)
        (char? . g$12109$1l2agK)
        (char>? . g$5922$1l2agK)
        (char>=? . g$5924$1l2agK)
        (char=? . g$5920$1l2agK)
        (char<? . g$5921$1l2agK)
        (char<=? . g$5923$1l2agK)
        (char->integer . g$12108$1l2agK)
        (ceiling . g$12107$1l2agK)
        (call-with-values . g$12106$1l2agK)
        (call-with-current-continuation . g$12104$1l2agK)
        (cddddr . g$5820$1l2agK)
        (cdddar . g$5819$1l2agK)
        (cddadr . g$5818$1l2agK)
        (cddaar . g$5817$1l2agK)
        (cdaddr . g$5816$1l2agK)
        (cdadar . g$5815$1l2agK)
        (cdaadr . g$5814$1l2agK)
        (cdaaar . g$5813$1l2agK)
        (cadddr . g$5812$1l2agK)
        (caddar . g$5811$1l2agK)
        (cadadr . g$5810$1l2agK)
        (cadaar . g$5809$1l2agK)
        (caaddr . g$5808$1l2agK)
        (caadar . g$5807$1l2agK)
        (caaadr . g$5806$1l2agK)
        (caaaar . g$5805$1l2agK)
        (cdddr . g$5804$1l2agK)
        (cddar . g$5803$1l2agK)
        (cdadr . g$5802$1l2agK)
        (cdaar . g$5801$1l2agK)
        (caddr . g$5800$1l2agK)
        (cadar . g$5799$1l2agK)
        (caadr . g$5798$1l2agK)
        (caaar . g$5797$1l2agK)
        (cddr . g$5796$1l2agK)
        (cdar . g$5795$1l2agK)
        (cadr . g$5794$1l2agK)
        (caar . g$5793$1l2agK)
        (cdr . g$12103$1l2agK)
        (car . g$12102$1l2agK)
        (boolean? . g$12101$1l2agK)
        (atan . g$12100$1l2agK)
        (asin . g$12098$1l2agK)
        (apply . g$12097$1l2agK)
        (append . g$12096$1l2agK)
        (angle . g$12095$1l2agK)
        (acos . g$12094$1l2agK)
        (abs . g$12093$1l2agK)
        (/ . g$12092$1l2agK)
        (* . g$12091$1l2agK)
        (- . g$12090$1l2agK)
        (+ . g$12089$1l2agK)
        (>= . g$12088$1l2agK)
        (> . g$12087$1l2agK)
        (= . g$12086$1l2agK)
        (<= . g$12085$1l2agK)
        (< . g$12084$1l2agK)
        (unquote-splicing . g$12001$1l2agK)
        (unquote . g$12000$1l2agK)
        (else . g$11998$1l2agK)
        (=> . g$11997$1l2agK)
        (... . g$11996$1l2agK)
        (delay . g$11993$1l2agK)
        (or . g$11991$1l2agK)
        (and . g$11990$1l2agK)
        (do . g$11989$1l2agK)
        (cond . g$11988$1l2agK)
        (let* . g$11987$1l2agK)
        (let . g$11986$1l2agK)
        (quasiquote . g$11982$1l2agK)
        (syntax-rules . g$11981$1l2agK)
        (case . g$11972$1l2agK)
        (if . g$11968$1l2agK)
        (letrec . g$11966$1l2agK)
        (lambda . g$11963$1l2agK)
        (quote . g$11960$1l2agK)
        (letrec-syntax . g$11958$1l2agK)
        (let-syntax . g$11957$1l2agK)
        (set! . g$11956$1l2agK)
        (begin . g$11953$1l2agK)
        (define-syntax . g$11951$1l2agK)
        (define . g$11950$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7186$1l2agK
      'g$12580$1l2agK
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12476$1l2agK)
        (string-titlecase . g$12475$1l2agK)
        (string-normalize-nfkd . g$12474$1l2agK)
        (string-normalize-nfkc . g$12473$1l2agK)
        (string-normalize-nfd . g$12472$1l2agK)
        (string-normalize-nfc . g$12471$1l2agK)
        (string-foldcase . g$12470$1l2agK)
        (string-downcase . g$12469$1l2agK)
        (string-ci>? . g$7046$1l2agK)
        (string-ci>=? . g$7048$1l2agK)
        (string-ci=? . g$7044$1l2agK)
        (string-ci<? . g$7045$1l2agK)
        (string-ci<=? . g$7047$1l2agK)
        (char-whitespace? . g$12468$1l2agK)
        (char-upper-case? . g$12467$1l2agK)
        (char-title-case? . g$12466$1l2agK)
        (char-numeric? . g$12465$1l2agK)
        (char-lower-case? . g$12464$1l2agK)
        (char-general-category . g$12463$1l2agK)
        (char-upcase . g$12462$1l2agK)
        (char-titlecase . g$12461$1l2agK)
        (char-foldcase . g$12460$1l2agK)
        (char-downcase . g$12459$1l2agK)
        (char-ci>? . g$7097$1l2agK)
        (char-ci>=? . g$7099$1l2agK)
        (char-ci=? . g$7095$1l2agK)
        (char-ci<? . g$7096$1l2agK)
        (char-ci<=? . g$7098$1l2agK)
        (char-alphabetic? . g$12458$1l2agK)
        (make-variable-transformer . g$8575$1l2agK)
        (identifier? . g$8973$1l2agK)
        (generate-temporaries . g$8962$1l2agK)
        (free-identifier=? . g$8963$1l2agK)
        (syntax->datum . g$8975$1l2agK)
        (datum->syntax . g$8974$1l2agK)
        (bound-identifier=? . g$8964$1l2agK)
        (record-type-descriptor? . g$12457$1l2agK)
        (record-predicate . g$12456$1l2agK)
        (record-mutator . g$12455$1l2agK)
        (record-constructor . g$12454$1l2agK)
        (record-accessor . g$12453$1l2agK)
        (make-record-type-descriptor . g$12452$1l2agK)
        (make-record-constructor-descriptor . g$12451$1l2agK)
        (record? . g$12450$1l2agK)
        (record-type-uid . g$12449$1l2agK)
        (record-type-sealed? . g$12448$1l2agK)
        (record-type-parent . g$12447$1l2agK)
        (record-type-opaque? . g$12446$1l2agK)
        (record-type-name . g$12445$1l2agK)
        (record-type-generative? . g$12444$1l2agK)
        (record-type-field-names . g$12443$1l2agK)
        (record-rtd . g$12442$1l2agK)
        (record-field-mutable? . g$12441$1l2agK)
        (delete-file . g$6407$1l2agK)
        (file-exists? . g$6406$1l2agK)
        (vector-sort! . g$12440$1l2agK)
        (vector-sort . g$12439$1l2agK)
        (list-sort . g$6920$1l2agK)
        (symbol-hash . g$12438$1l2agK)
        (string-ci-hash . g$12437$1l2agK)
        (string-hash . g$12436$1l2agK)
        (equal-hash . g$12435$1l2agK)
        (hashtable-equivalence-function . g$12434$1l2agK)
        (make-hashtable . g$12433$1l2agK)
        (hashtable-hash-function . g$12432$1l2agK)
        (make-eqv-hashtable . g$6374$1l2agK)
        (make-eq-hashtable . g$6373$1l2agK)
        (hashtable? . g$12431$1l2agK)
        (hashtable-update! . g$6380$1l2agK)
        (hashtable-size . g$6375$1l2agK)
        (hashtable-set! . g$6377$1l2agK)
        (hashtable-ref . g$6376$1l2agK)
        (hashtable-mutable? . g$12430$1l2agK)
        (hashtable-keys . g$12429$1l2agK)
        (hashtable-entries . g$12428$1l2agK)
        (hashtable-delete! . g$6378$1l2agK)
        (hashtable-copy . g$12427$1l2agK)
        (hashtable-contains? . g$6379$1l2agK)
        (hashtable-clear! . g$6381$1l2agK)
        (call-with-output-file . g$7516$1l2agK)
        (call-with-input-file . g$7515$1l2agK)
        (write-char . g$12426$1l2agK)
        (write . g$12425$1l2agK)
        (with-output-to-file . g$7514$1l2agK)
        (with-input-from-file . g$7513$1l2agK)
        (read-char . g$12424$1l2agK)
        (read . g$12423$1l2agK)
        (peek-char . g$12422$1l2agK)
        (open-output-file . g$12421$1l2agK)
        (open-input-file . g$12420$1l2agK)
        (newline . g$12419$1l2agK)
        (display . g$12418$1l2agK)
        (close-output-port . g$12417$1l2agK)
        (close-input-port . g$12416$1l2agK)
        (eof-object? . g$12415$1l2agK)
        (eof-object . g$12414$1l2agK)
        (current-error-port . g$12413$1l2agK)
        (current-output-port . g$12412$1l2agK)
        (current-input-port . g$12411$1l2agK)
        (output-port? . g$12410$1l2agK)
        (input-port? . g$12409$1l2agK)
        (utf-8-codec . g$12408$1l2agK)
        (utf-16-codec . g$12407$1l2agK)
        (transcoder-error-handling-mode . g$12406$1l2agK)
        (transcoder-eol-style . g$12405$1l2agK)
        (transcoder-codec . g$12404$1l2agK)
        (transcoded-port . g$12403$1l2agK)
        (textual-port? . g$12402$1l2agK)
        (string->bytevector . g$12401$1l2agK)
        (standard-output-port . g$12400$1l2agK)
        (standard-input-port . g$12399$1l2agK)
        (standard-error-port . g$12398$1l2agK)
        (set-port-position! . g$12397$1l2agK)
        (put-u8 . g$12396$1l2agK)
        (put-string . g$12395$1l2agK)
        (put-datum . g$12394$1l2agK)
        (put-char . g$12393$1l2agK)
        (put-bytevector . g$12392$1l2agK)
        (port? . g$7492$1l2agK)
        (port-transcoder . g$12391$1l2agK)
        (port-position . g$12390$1l2agK)
        (port-has-set-port-position!? . g$12389$1l2agK)
        (port-has-port-position? . g$12388$1l2agK)
        (port-eof? . g$12387$1l2agK)
        (output-port-buffer-mode . g$12386$1l2agK)
        (open-string-output-port . g$7491$1l2agK)
        (open-string-input-port . g$12385$1l2agK)
        (open-file-output-port . g$12384$1l2agK)
        (open-file-input/output-port . g$12383$1l2agK)
        (open-file-input-port . g$12382$1l2agK)
        (open-bytevector-output-port . g$12381$1l2agK)
        (open-bytevector-input-port . g$12380$1l2agK)
        (native-transcoder . g$12379$1l2agK)
        (native-eol-style . g$12378$1l2agK)
        (make-transcoder . g$12377$1l2agK)
        (latin-1-codec . g$12376$1l2agK)
        (make-i/o-write-error . g$7348$1l2agK)
        (make-i/o-read-error . g$7334$1l2agK)
        (make-i/o-port-error . g$7453$1l2agK)
        (make-i/o-invalid-position-error . g$7363$1l2agK)
        (make-i/o-filename-error . g$7380$1l2agK)
        (make-i/o-file-protection-error . g$7396$1l2agK)
        (make-i/o-file-is-read-only-error . g$7410$1l2agK)
        (make-i/o-file-does-not-exist-error . g$7438$1l2agK)
        (make-i/o-file-already-exists-error . g$7424$1l2agK)
        (make-i/o-error . g$7320$1l2agK)
        (make-i/o-encoding-error . g$7484$1l2agK)
        (make-i/o-decoding-error . g$7469$1l2agK)
        (make-custom-textual-output-port . g$12375$1l2agK)
        (make-custom-textual-input/output-port . g$12374$1l2agK)
        (make-custom-textual-input-port . g$12373$1l2agK)
        (make-custom-binary-output-port . g$12372$1l2agK)
        (make-custom-binary-input/output-port . g$12371$1l2agK)
        (make-custom-binary-input-port . g$12370$1l2agK)
        (make-bytevector . g$12369$1l2agK)
        (lookahead-u8 . g$12368$1l2agK)
        (lookahead-char . g$12367$1l2agK)
        (i/o-write-error? . g$7349$1l2agK)
        (i/o-read-error? . g$7335$1l2agK)
        (i/o-port-error? . g$7455$1l2agK)
        (i/o-invalid-position-error? . g$7365$1l2agK)
        (i/o-error-position . g$7366$1l2agK)
        (i/o-filename-error? . g$7382$1l2agK)
        (i/o-file-protection-error? . g$7397$1l2agK)
        (i/o-file-is-read-only-error? . g$7411$1l2agK)
        (i/o-file-does-not-exist-error? . g$7439$1l2agK)
        (i/o-file-already-exists-error? . g$7425$1l2agK)
        (i/o-error? . g$7321$1l2agK)
        (i/o-error-port . g$7456$1l2agK)
        (i/o-error-filename . g$7383$1l2agK)
        (i/o-encoding-error? . g$7486$1l2agK)
        (i/o-encoding-error-char . g$7487$1l2agK)
        (i/o-decoding-error? . g$7470$1l2agK)
        (get-u8 . g$12366$1l2agK)
        (get-string-n! . g$12365$1l2agK)
        (get-string-n . g$12364$1l2agK)
        (get-string-all . g$12363$1l2agK)
        (get-line . g$12362$1l2agK)
        (get-datum . g$12361$1l2agK)
        (get-char . g$12360$1l2agK)
        (get-bytevector-some . g$12359$1l2agK)
        (get-bytevector-n! . g$12358$1l2agK)
        (get-bytevector-n . g$12357$1l2agK)
        (get-bytevector-all . g$12356$1l2agK)
        (flush-output-port . g$12355$1l2agK)
        (close-port . g$12354$1l2agK)
        (call-with-string-output-port . g$12353$1l2agK)
        (call-with-port . g$12352$1l2agK)
        (call-with-bytevector-output-port . g$12351$1l2agK)
        (bytevector->string . g$12350$1l2agK)
        (buffer-mode? . g$12349$1l2agK)
        (binary-port? . g$12348$1l2agK)
        (exit . g$12345$1l2agK)
        (command-line . g$11914$1l2agK)
        (remove . g$6487$1l2agK)
        (remv . g$6488$1l2agK)
        (remp . g$6473$1l2agK)
        (remq . g$6489$1l2agK)
        (partition . g$6472$1l2agK)
        (memv . g$12340$1l2agK)
        (memq . g$12339$1l2agK)
        (memp . g$6479$1l2agK)
        (member . g$6478$1l2agK)
        (exists . g$6483$1l2agK)
        (for-all . g$6482$1l2agK)
        (fold-right . g$6486$1l2agK)
        (fold-left . g$6485$1l2agK)
        (find . g$6471$1l2agK)
        (filter . g$6474$1l2agK)
        (cons* . g$6484$1l2agK)
        (assv . g$6475$1l2agK)
        (assq . g$12338$1l2agK)
        (assp . g$6477$1l2agK)
        (assoc . g$6476$1l2agK)
        (with-exception-handler . g$12337$1l2agK)
        (raise-continuable . g$12336$1l2agK)
        (raise . g$12335$1l2agK)
        (make-enumeration . g$7573$1l2agK)
        (enum-set=? . g$7580$1l2agK)
        (enum-set-universe . g$7574$1l2agK)
        (enum-set-union . g$7581$1l2agK)
        (enum-set-subset? . g$7579$1l2agK)
        (enum-set-projection . g$7585$1l2agK)
        (enum-set-member? . g$7578$1l2agK)
        (enum-set-intersection . g$7582$1l2agK)
        (enum-set-indexer . g$7575$1l2agK)
        (enum-set-difference . g$7583$1l2agK)
        (enum-set-constructor . g$7576$1l2agK)
        (enum-set-complement . g$7584$1l2agK)
        (enum-set->list . g$7577$1l2agK)
        (who-condition? . g$6811$1l2agK)
        (warning? . g$6722$1l2agK)
        (violation? . g$6764$1l2agK)
        (undefined-violation? . g$6888$1l2agK)
        (syntax-violation? . g$6872$1l2agK)
        (syntax-violation-subform . g$6874$1l2agK)
        (syntax-violation-form . g$6873$1l2agK)
        (syntax-violation . g$8972$1l2agK)
        (simple-conditions . g$12334$1l2agK)
        (serious-condition? . g$6736$1l2agK)
        (non-continuable-violation? . g$6826$1l2agK)
        (message-condition? . g$6707$1l2agK)
        (make-who-condition . g$6809$1l2agK)
        (make-warning . g$6721$1l2agK)
        (make-violation . g$6763$1l2agK)
        (make-undefined-violation . g$6887$1l2agK)
        (make-syntax-violation . g$6869$1l2agK)
        (make-serious-condition . g$6735$1l2agK)
        (make-non-continuable-violation . g$6825$1l2agK)
        (make-message-condition . g$6705$1l2agK)
        (make-lexical-violation . g$6853$1l2agK)
        (make-irritants-condition . g$6792$1l2agK)
        (make-implementation-restriction-violation . g$6839$1l2agK)
        (make-error . g$6749$1l2agK)
        (make-assertion-violation . g$6777$1l2agK)
        (lexical-violation? . g$6854$1l2agK)
        (irritants-condition? . g$6794$1l2agK)
        (implementation-restriction-violation? . g$6840$1l2agK)
        (error? . g$6750$1l2agK)
        (condition-who . g$6812$1l2agK)
        (condition-predicate . g$12333$1l2agK)
        (condition-message . g$6708$1l2agK)
        (condition-irritants . g$6795$1l2agK)
        (condition-accessor . g$12332$1l2agK)
        (condition . g$12331$1l2agK)
        (assertion-violation? . g$6778$1l2agK)
        (condition? . g$12330$1l2agK)
        (utf32->string . g$12329$1l2agK)
        (utf16->string . g$12328$1l2agK)
        (utf8->string . g$12327$1l2agK)
        (uint-list->bytevector . g$12326$1l2agK)
        (u8-list->bytevector . g$12325$1l2agK)
        (string->utf8 . g$12324$1l2agK)
        (string->utf32 . g$12323$1l2agK)
        (string->utf16 . g$12322$1l2agK)
        (sint-list->bytevector . g$12321$1l2agK)
        (native-endianness . g$6563$1l2agK)
        (bytevector? . g$12320$1l2agK)
        (bytevector=? . g$12319$1l2agK)
        (bytevector-uint-set! . g$12318$1l2agK)
        (bytevector-uint-ref . g$12317$1l2agK)
        (bytevector-u8-set! . g$12316$1l2agK)
        (bytevector-u8-ref . g$12315$1l2agK)
        (bytevector-u64-set! . g$6584$1l2agK)
        (bytevector-u64-ref . g$6580$1l2agK)
        (bytevector-u64-native-set! . g$6586$1l2agK)
        (bytevector-u64-native-ref . g$6582$1l2agK)
        (bytevector-u32-set! . g$6576$1l2agK)
        (bytevector-u32-ref . g$6572$1l2agK)
        (bytevector-u32-native-set! . g$6578$1l2agK)
        (bytevector-u32-native-ref . g$6574$1l2agK)
        (bytevector-u16-set! . g$6568$1l2agK)
        (bytevector-u16-ref . g$6564$1l2agK)
        (bytevector-u16-native-set! . g$6570$1l2agK)
        (bytevector-u16-native-ref . g$6566$1l2agK)
        (bytevector-sint-set! . g$12314$1l2agK)
        (bytevector-sint-ref . g$12313$1l2agK)
        (bytevector-s8-set! . g$12312$1l2agK)
        (bytevector-s8-ref . g$12311$1l2agK)
        (bytevector-s64-set! . g$6585$1l2agK)
        (bytevector-s64-ref . g$6581$1l2agK)
        (bytevector-s64-native-set! . g$6587$1l2agK)
        (bytevector-s64-native-ref . g$6583$1l2agK)
        (bytevector-s32-set! . g$6577$1l2agK)
        (bytevector-s32-ref . g$6573$1l2agK)
        (bytevector-s32-native-set! . g$6579$1l2agK)
        (bytevector-s32-native-ref . g$6575$1l2agK)
        (bytevector-s16-set! . g$6569$1l2agK)
        (bytevector-s16-ref . g$6565$1l2agK)
        (bytevector-s16-native-set! . g$6571$1l2agK)
        (bytevector-s16-native-ref . g$6567$1l2agK)
        (bytevector-length . g$12310$1l2agK)
        (bytevector-ieee-single-set! . g$12309$1l2agK)
        (bytevector-ieee-single-ref . g$12308$1l2agK)
        (bytevector-ieee-single-native-set! . g$6590$1l2agK)
        (bytevector-ieee-single-native-ref . g$6588$1l2agK)
        (bytevector-ieee-double-set! . g$12307$1l2agK)
        (bytevector-ieee-double-ref . g$12306$1l2agK)
        (bytevector-ieee-double-native-set! . g$6591$1l2agK)
        (bytevector-ieee-double-native-ref . g$6589$1l2agK)
        (bytevector-fill! . g$12305$1l2agK)
        (bytevector-copy! . g$12304$1l2agK)
        (bytevector-copy . g$12303$1l2agK)
        (bytevector->uint-list . g$12302$1l2agK)
        (bytevector->u8-list . g$12301$1l2agK)
        (bytevector->sint-list . g$12300$1l2agK)
        (no-nans-violation? . g$7306$1l2agK)
        (no-infinities-violation? . g$7292$1l2agK)
        (make-no-nans-violation . g$7305$1l2agK)
        (make-no-infinities-violation . g$7291$1l2agK)
        (real->flonum . g$12299$1l2agK)
        (flzero? . g$12298$1l2agK)
        (fltruncate . g$12297$1l2agK)
        (fltan . g$12296$1l2agK)
        (flsqrt . g$12295$1l2agK)
        (flsin . g$12294$1l2agK)
        (flround . g$12293$1l2agK)
        (flpositive? . g$12292$1l2agK)
        (flonum? . g$12291$1l2agK)
        (flodd? . g$12290$1l2agK)
        (flnumerator . g$12289$1l2agK)
        (flnegative? . g$12288$1l2agK)
        (flnan? . g$12287$1l2agK)
        (flmod0 . g$12286$1l2agK)
        (flmod . g$12285$1l2agK)
        (flmin . g$12284$1l2agK)
        (flmax . g$12283$1l2agK)
        (fllog . g$12282$1l2agK)
        (flinteger? . g$12281$1l2agK)
        (flinfinite? . g$12280$1l2agK)
        (flfloor . g$12279$1l2agK)
        (flfinite? . g$12278$1l2agK)
        (flexpt . g$12277$1l2agK)
        (flexp . g$12276$1l2agK)
        (fleven? . g$12275$1l2agK)
        (fldiv0-and-mod0 . g$12274$1l2agK)
        (fldiv0 . g$12273$1l2agK)
        (fldiv-and-mod . g$12272$1l2agK)
        (fldiv . g$12271$1l2agK)
        (fldenominator . g$12270$1l2agK)
        (flcos . g$12269$1l2agK)
        (flceiling . g$12268$1l2agK)
        (flatan . g$12267$1l2agK)
        (flasin . g$12266$1l2agK)
        (flacos . g$12265$1l2agK)
        (flabs . g$12264$1l2agK)
        (fl>? . g$12263$1l2agK)
        (fl>=? . g$12262$1l2agK)
        (fl=? . g$12261$1l2agK)
        (fl<? . g$12260$1l2agK)
        (fl<=? . g$12259$1l2agK)
        (fl/ . g$12258$1l2agK)
        (fl- . g$12257$1l2agK)
        (fl+ . g$12256$1l2agK)
        (fl* . g$12255$1l2agK)
        (fixnum->flonum . g$12254$1l2agK)
        (fxzero? . g$12253$1l2agK)
        (fxxor . g$12252$1l2agK)
        (fxrotate-bit-field . g$7237$1l2agK)
        (fxreverse-bit-field . g$12251$1l2agK)
        (fxpositive? . g$12250$1l2agK)
        (fxodd? . g$12249$1l2agK)
        (fxnot . g$12248$1l2agK)
        (fxnegative? . g$12247$1l2agK)
        (fxmod0 . g$12246$1l2agK)
        (fxmod . g$12245$1l2agK)
        (fxmin . g$12244$1l2agK)
        (fxmax . g$12243$1l2agK)
        (fxlength . g$12242$1l2agK)
        (fxior . g$12241$1l2agK)
        (fxif . g$7231$1l2agK)
        (fxfirst-bit-set . g$12240$1l2agK)
        (fxeven? . g$12239$1l2agK)
        (fxdiv0-and-mod0 . g$12238$1l2agK)
        (fxdiv0 . g$12237$1l2agK)
        (fxdiv-and-mod . g$12236$1l2agK)
        (fxdiv . g$12235$1l2agK)
        (fxcopy-bit-field . g$7234$1l2agK)
        (fxcopy-bit . g$7232$1l2agK)
        (fxbit-set? . g$12234$1l2agK)
        (fxbit-field . g$7233$1l2agK)
        (fxbit-count . g$12233$1l2agK)
        (fxarithmetic-shift-right . g$7236$1l2agK)
        (fxarithmetic-shift-left . g$7235$1l2agK)
        (fxarithmetic-shift . g$12232$1l2agK)
        (fxand . g$12231$1l2agK)
        (fx>? . g$12230$1l2agK)
        (fx>=? . g$12229$1l2agK)
        (fx=? . g$12228$1l2agK)
        (fx<? . g$12227$1l2agK)
        (fx<=? . g$12226$1l2agK)
        (fx-/carry . g$12225$1l2agK)
        (fx- . g$12224$1l2agK)
        (fx+/carry . g$12223$1l2agK)
        (fx+ . g$12222$1l2agK)
        (fx*/carry . g$12221$1l2agK)
        (fx* . g$12220$1l2agK)
        (greatest-fixnum . g$12219$1l2agK)
        (least-fixnum . g$12218$1l2agK)
        (fixnum-width . g$12217$1l2agK)
        (fixnum? . g$12216$1l2agK)
        (bitwise-rotate-bit-field . g$7189$1l2agK)
        (bitwise-reverse-bit-field . g$12215$1l2agK)
        (bitwise-length . g$12214$1l2agK)
        (bitwise-if . g$7183$1l2agK)
        (bitwise-first-bit-set . g$12213$1l2agK)
        (bitwise-copy-bit-field . g$7186$1l2agK)
        (bitwise-copy-bit . g$7184$1l2agK)
        (bitwise-bit-set? . g$12212$1l2agK)
        (bitwise-bit-field . g$12211$1l2agK)
        (bitwise-bit-count . g$12210$1l2agK)
        (bitwise-xor . g$12209$1l2agK)
        (bitwise-ior . g$12208$1l2agK)
        (bitwise-and . g$12207$1l2agK)
        (bitwise-not . g$12206$1l2agK)
        (bitwise-arithmetic-shift-right . g$7188$1l2agK)
        (bitwise-arithmetic-shift-left . g$7187$1l2agK)
        (bitwise-arithmetic-shift . g$12205$1l2agK)
        (zero? . g$12204$1l2agK)
        (vector? . g$12203$1l2agK)
        (vector-set! . g$12202$1l2agK)
        (vector-ref . g$12201$1l2agK)
        (vector-map . g$12200$1l2agK)
        (vector-length . g$12199$1l2agK)
        (vector-for-each . g$12198$1l2agK)
        (vector-fill! . g$12197$1l2agK)
        (vector->list . g$12196$1l2agK)
        (vector . g$12195$1l2agK)
        (values . g$12194$1l2agK)
        (truncate . g$12193$1l2agK)
        (tan . g$12192$1l2agK)
        (symbol? . g$12191$1l2agK)
        (symbol=? . g$5872$1l2agK)
        (symbol->string . g$12190$1l2agK)
        (substring . g$12189$1l2agK)
        (string? . g$12188$1l2agK)
        (string>? . g$5869$1l2agK)
        (string>=? . g$5871$1l2agK)
        (string=? . g$5867$1l2agK)
        (string<? . g$5868$1l2agK)
        (string<=? . g$5870$1l2agK)
        (string-ref . g$12187$1l2agK)
        (string-length . g$12186$1l2agK)
        (string-for-each . g$12185$1l2agK)
        (string-copy . g$12184$1l2agK)
        (string-append . g$12183$1l2agK)
        (string->symbol . g$12182$1l2agK)
        (string->number . g$12181$1l2agK)
        (string->list . g$12180$1l2agK)
        (string . g$12179$1l2agK)
        (sqrt . g$12178$1l2agK)
        (sin . g$12177$1l2agK)
        (round . g$12176$1l2agK)
        (reverse . g$12175$1l2agK)
        (real? . g$12174$1l2agK)
        (real-valued? . g$12173$1l2agK)
        (real-part . g$12172$1l2agK)
        (rationalize . g$5925$1l2agK)
        (rational? . g$12171$1l2agK)
        (rational-valued? . g$12170$1l2agK)
        (procedure? . g$12169$1l2agK)
        (positive? . g$12168$1l2agK)
        (pair? . g$12167$1l2agK)
        (odd? . g$12166$1l2agK)
        (numerator . g$12165$1l2agK)
        (number? . g$12164$1l2agK)
        (number->string . g$12163$1l2agK)
        (null? . g$12162$1l2agK)
        (not . g$12161$1l2agK)
        (negative? . g$12160$1l2agK)
        (nan? . g$12159$1l2agK)
        (min . g$12158$1l2agK)
        (max . g$12157$1l2agK)
        (map . g$12156$1l2agK)
        (make-vector . g$12155$1l2agK)
        (make-string . g$12154$1l2agK)
        (make-rectangular . g$12153$1l2agK)
        (make-polar . g$12152$1l2agK)
        (magnitude . g$12151$1l2agK)
        (log . g$12150$1l2agK)
        (list? . g$12149$1l2agK)
        (list-tail . g$12148$1l2agK)
        (list-ref . g$12147$1l2agK)
        (list->vector . g$12146$1l2agK)
        (list->string . g$12145$1l2agK)
        (list . g$12144$1l2agK)
        (length . g$12143$1l2agK)
        (lcm . g$12142$1l2agK)
        (integer? . g$12141$1l2agK)
        (integer-valued? . g$12140$1l2agK)
        (integer->char . g$12139$1l2agK)
        (infinite? . g$12138$1l2agK)
        (inexact? . g$12137$1l2agK)
        (inexact . g$12136$1l2agK)
        (imag-part . g$12135$1l2agK)
        (gcd . g$12134$1l2agK)
        (for-each . g$12133$1l2agK)
        (floor . g$12132$1l2agK)
        (finite? . g$12131$1l2agK)
        (expt . g$12130$1l2agK)
        (exp . g$12129$1l2agK)
        (exact? . g$12128$1l2agK)
        (exact-integer-sqrt . g$12127$1l2agK)
        (exact . g$12126$1l2agK)
        (even? . g$12125$1l2agK)
        (error . g$12124$1l2agK)
        (eqv? . g$12123$1l2agK)
        (equal? . g$12122$1l2agK)
        (eq? . g$12121$1l2agK)
        (dynamic-wind . g$12120$1l2agK)
        (div0-and-mod0 . g$12119$1l2agK)
        (mod0 . g$12118$1l2agK)
        (div0 . g$12117$1l2agK)
        (div-and-mod . g$12116$1l2agK)
        (mod . g$12115$1l2agK)
        (div . g$12114$1l2agK)
        (denominator . g$12113$1l2agK)
        (cos . g$12112$1l2agK)
        (cons . g$12111$1l2agK)
        (complex? . g$12110$1l2agK)
        (char? . g$12109$1l2agK)
        (char>? . g$5922$1l2agK)
        (char>=? . g$5924$1l2agK)
        (char=? . g$5920$1l2agK)
        (char<? . g$5921$1l2agK)
        (char<=? . g$5923$1l2agK)
        (char->integer . g$12108$1l2agK)
        (ceiling . g$12107$1l2agK)
        (call-with-values . g$12106$1l2agK)
        (call/cc . g$12105$1l2agK)
        (call-with-current-continuation . g$12104$1l2agK)
        (cddddr . g$5820$1l2agK)
        (cdddar . g$5819$1l2agK)
        (cddadr . g$5818$1l2agK)
        (cddaar . g$5817$1l2agK)
        (cdaddr . g$5816$1l2agK)
        (cdadar . g$5815$1l2agK)
        (cdaadr . g$5814$1l2agK)
        (cdaaar . g$5813$1l2agK)
        (cadddr . g$5812$1l2agK)
        (caddar . g$5811$1l2agK)
        (cadadr . g$5810$1l2agK)
        (cadaar . g$5809$1l2agK)
        (caaddr . g$5808$1l2agK)
        (caadar . g$5807$1l2agK)
        (caaadr . g$5806$1l2agK)
        (caaaar . g$5805$1l2agK)
        (cdddr . g$5804$1l2agK)
        (cddar . g$5803$1l2agK)
        (cdadr . g$5802$1l2agK)
        (cdaar . g$5801$1l2agK)
        (caddr . g$5800$1l2agK)
        (cadar . g$5799$1l2agK)
        (caadr . g$5798$1l2agK)
        (caaar . g$5797$1l2agK)
        (cddr . g$5796$1l2agK)
        (cdar . g$5795$1l2agK)
        (cadr . g$5794$1l2agK)
        (caar . g$5793$1l2agK)
        (cdr . g$12103$1l2agK)
        (car . g$12102$1l2agK)
        (boolean? . g$12101$1l2agK)
        (boolean=? . g$5873$1l2agK)
        (atan . g$12100$1l2agK)
        (assertion-violation . g$12099$1l2agK)
        (asin . g$12098$1l2agK)
        (apply . g$12097$1l2agK)
        (append . g$12096$1l2agK)
        (angle . g$12095$1l2agK)
        (acos . g$12094$1l2agK)
        (abs . g$12093$1l2agK)
        (/ . g$12092$1l2agK)
        (* . g$12091$1l2agK)
        (- . g$12090$1l2agK)
        (+ . g$12089$1l2agK)
        (>= . g$12088$1l2agK)
        (> . g$12087$1l2agK)
        (= . g$12086$1l2agK)
        (<= . g$12085$1l2agK)
        (< . g$12084$1l2agK)
        (&no-nans . g$12054$1l2agK)
        (&no-infinities . g$12053$1l2agK)
        (&i/o-encoding . g$12052$1l2agK)
        (&i/o-decoding . g$12051$1l2agK)
        (&i/o-port . g$12050$1l2agK)
        (&i/o-file-does-not-exist . g$12049$1l2agK)
        (&i/o-file-already-exists . g$12048$1l2agK)
        (&i/o-file-is-read-only . g$12047$1l2agK)
        (&i/o-file-protection . g$12046$1l2agK)
        (&i/o-filename . g$12045$1l2agK)
        (&i/o-invalid-position . g$12044$1l2agK)
        (&i/o-write . g$12043$1l2agK)
        (&i/o-read . g$12042$1l2agK)
        (&i/o . g$12041$1l2agK)
        (&non-continuable . g$12040$1l2agK)
        (&undefined . g$12039$1l2agK)
        (&syntax . g$12038$1l2agK)
        (&lexical . g$12037$1l2agK)
        (&implementation-restriction . g$12036$1l2agK)
        (&who . g$12034$1l2agK)
        (&irritants . g$12033$1l2agK)
        (&assertion . g$12032$1l2agK)
        (&violation . g$12031$1l2agK)
        (&error . g$12030$1l2agK)
        (&serious . g$12029$1l2agK)
        (&warning . g$12028$1l2agK)
        (&message . g$12027$1l2agK)
        (&condition . g$12026$1l2agK)
        (define-condition-type . g$12025$1l2agK)
        (define-enumeration . g$12024$1l2agK)
        (define-record-type . g$12023$1l2agK)
        (parent-rtd . g$12022$1l2agK)
        (nongenerative . g$12021$1l2agK)
        (opaque . g$12020$1l2agK)
        (sealed . g$12019$1l2agK)
        (protocol . g$12018$1l2agK)
        (parent . g$12017$1l2agK)
        (immutable . g$12016$1l2agK)
        (mutable . g$12015$1l2agK)
        (fields . g$12014$1l2agK)
        (error-handling-mode . g$12013$1l2agK)
        (file-options . g$12012$1l2agK)
        (buffer-mode . g$12011$1l2agK)
        (eol-style . g$12010$1l2agK)
        (guard . g$12009$1l2agK)
        (unsyntax-splicing . g$12003$1l2agK)
        (unsyntax . g$12002$1l2agK)
        (unquote-splicing . g$12001$1l2agK)
        (unquote . g$12000$1l2agK)
        (_ . g$11999$1l2agK)
        (else . g$11998$1l2agK)
        (=> . g$11997$1l2agK)
        (... . g$11996$1l2agK)
        (assert . g$11995$1l2agK)
        (endianness . g$11994$1l2agK)
        (or . g$11991$1l2agK)
        (and . g$11990$1l2agK)
        (do . g$11989$1l2agK)
        (cond . g$11988$1l2agK)
        (let* . g$11987$1l2agK)
        (let . g$11986$1l2agK)
        (identifier-syntax . g$11985$1l2agK)
        (with-syntax . g$11984$1l2agK)
        (quasisyntax . g$11983$1l2agK)
        (quasiquote . g$11982$1l2agK)
        (syntax-rules . g$11981$1l2agK)
        (let-values . g$11977$1l2agK)
        (let*-values . g$11976$1l2agK)
        (record-constructor-descriptor . g$11975$1l2agK)
        (record-type-descriptor . g$11974$1l2agK)
        (case . g$11972$1l2agK)
        (unless . g$11970$1l2agK)
        (when . g$11969$1l2agK)
        (if . g$11968$1l2agK)
        (letrec* . g$11967$1l2agK)
        (letrec . g$11966$1l2agK)
        (case-lambda . g$11964$1l2agK)
        (lambda . g$11963$1l2agK)
        (syntax . g$11962$1l2agK)
        (syntax-case . g$11961$1l2agK)
        (quote . g$11960$1l2agK)
        (letrec-syntax . g$11958$1l2agK)
        (let-syntax . g$11957$1l2agK)
        (set! . g$11956$1l2agK)
        (import . g$11955$1l2agK)
        (library . g$11954$1l2agK)
        (begin . g$11953$1l2agK)
        (define-syntax . g$11951$1l2agK)
        (define . g$11950$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12581$1l2agK
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8978$1l2agK)
        (scheme-report-environment . g$8953$1l2agK)
        (quotient . g$6900$1l2agK)
        (null-environment . g$8952$1l2agK)
        (remainder . g$6901$1l2agK)
        (modulo . g$6902$1l2agK)
        (inexact->exact . g$12347$1l2agK)
        (force . g$6904$1l2agK)
        (exact->inexact . g$12346$1l2agK)
        (delay . g$11993$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12582$1l2agK
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11989$1l2agK)
        (unless . g$11970$1l2agK)
        (when . g$11969$1l2agK)
        (case-lambda . g$11964$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12583$1l2agK
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8955$1l2agK) (environment . g$8951$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12584$1l2agK
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12342$1l2agK) (set-car! . g$12341$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12585$1l2agK
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12344$1l2agK) (string-set! . g$12343$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12586$1l2agK
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12345$1l2agK) (command-line . g$11914$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12587$1l2agK
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8575$1l2agK)
        (identifier? . g$8973$1l2agK)
        (generate-temporaries . g$8962$1l2agK)
        (free-identifier=? . g$8963$1l2agK)
        (syntax->datum . g$8975$1l2agK)
        (datum->syntax . g$8974$1l2agK)
        (bound-identifier=? . g$8964$1l2agK)
        (syntax-violation . g$8972$1l2agK)
        (unsyntax-splicing . g$12003$1l2agK)
        (unsyntax . g$12002$1l2agK)
        (_ . g$11999$1l2agK)
        (... . g$11996$1l2agK)
        (with-syntax . g$11984$1l2agK)
        (quasisyntax . g$11983$1l2agK)
        (syntax . g$11962$1l2agK)
        (syntax-case . g$11961$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12588$1l2agK
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6407$1l2agK)
        (file-exists? . g$6406$1l2agK)
        (make-i/o-write-error . g$7348$1l2agK)
        (make-i/o-read-error . g$7334$1l2agK)
        (make-i/o-port-error . g$7453$1l2agK)
        (make-i/o-invalid-position-error . g$7363$1l2agK)
        (make-i/o-filename-error . g$7380$1l2agK)
        (make-i/o-file-protection-error . g$7396$1l2agK)
        (make-i/o-file-is-read-only-error . g$7410$1l2agK)
        (make-i/o-file-does-not-exist-error . g$7438$1l2agK)
        (make-i/o-file-already-exists-error . g$7424$1l2agK)
        (make-i/o-error . g$7320$1l2agK)
        (i/o-write-error? . g$7349$1l2agK)
        (i/o-read-error? . g$7335$1l2agK)
        (i/o-port-error? . g$7455$1l2agK)
        (i/o-invalid-position-error? . g$7365$1l2agK)
        (i/o-error-position . g$7366$1l2agK)
        (i/o-filename-error? . g$7382$1l2agK)
        (i/o-file-protection-error? . g$7397$1l2agK)
        (i/o-file-is-read-only-error? . g$7411$1l2agK)
        (i/o-file-does-not-exist-error? . g$7439$1l2agK)
        (i/o-file-already-exists-error? . g$7425$1l2agK)
        (i/o-error? . g$7321$1l2agK)
        (i/o-error-port . g$7456$1l2agK)
        (i/o-error-filename . g$7383$1l2agK)
        (&i/o-port . g$12050$1l2agK)
        (&i/o-file-does-not-exist . g$12049$1l2agK)
        (&i/o-file-already-exists . g$12048$1l2agK)
        (&i/o-file-is-read-only . g$12047$1l2agK)
        (&i/o-file-protection . g$12046$1l2agK)
        (&i/o-filename . g$12045$1l2agK)
        (&i/o-invalid-position . g$12044$1l2agK)
        (&i/o-write . g$12043$1l2agK)
        (&i/o-read . g$12042$1l2agK)
        (&i/o . g$12041$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12589$1l2agK
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12440$1l2agK)
        (vector-sort . g$12439$1l2agK)
        (list-sort . g$6920$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12590$1l2agK
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12204$1l2agK)
        (vector? . g$12203$1l2agK)
        (vector-set! . g$12202$1l2agK)
        (vector-ref . g$12201$1l2agK)
        (vector-map . g$12200$1l2agK)
        (vector-length . g$12199$1l2agK)
        (vector-for-each . g$12198$1l2agK)
        (vector-fill! . g$12197$1l2agK)
        (vector->list . g$12196$1l2agK)
        (vector . g$12195$1l2agK)
        (values . g$12194$1l2agK)
        (truncate . g$12193$1l2agK)
        (tan . g$12192$1l2agK)
        (symbol? . g$12191$1l2agK)
        (symbol=? . g$5872$1l2agK)
        (symbol->string . g$12190$1l2agK)
        (substring . g$12189$1l2agK)
        (string? . g$12188$1l2agK)
        (string>? . g$5869$1l2agK)
        (string>=? . g$5871$1l2agK)
        (string=? . g$5867$1l2agK)
        (string<? . g$5868$1l2agK)
        (string<=? . g$5870$1l2agK)
        (string-ref . g$12187$1l2agK)
        (string-length . g$12186$1l2agK)
        (string-for-each . g$12185$1l2agK)
        (string-copy . g$12184$1l2agK)
        (string-append . g$12183$1l2agK)
        (string->symbol . g$12182$1l2agK)
        (string->number . g$12181$1l2agK)
        (string->list . g$12180$1l2agK)
        (string . g$12179$1l2agK)
        (sqrt . g$12178$1l2agK)
        (sin . g$12177$1l2agK)
        (round . g$12176$1l2agK)
        (reverse . g$12175$1l2agK)
        (real? . g$12174$1l2agK)
        (real-valued? . g$12173$1l2agK)
        (real-part . g$12172$1l2agK)
        (rationalize . g$5925$1l2agK)
        (rational? . g$12171$1l2agK)
        (rational-valued? . g$12170$1l2agK)
        (procedure? . g$12169$1l2agK)
        (positive? . g$12168$1l2agK)
        (pair? . g$12167$1l2agK)
        (odd? . g$12166$1l2agK)
        (numerator . g$12165$1l2agK)
        (number? . g$12164$1l2agK)
        (number->string . g$12163$1l2agK)
        (null? . g$12162$1l2agK)
        (not . g$12161$1l2agK)
        (negative? . g$12160$1l2agK)
        (nan? . g$12159$1l2agK)
        (min . g$12158$1l2agK)
        (max . g$12157$1l2agK)
        (map . g$12156$1l2agK)
        (make-vector . g$12155$1l2agK)
        (make-string . g$12154$1l2agK)
        (make-rectangular . g$12153$1l2agK)
        (make-polar . g$12152$1l2agK)
        (magnitude . g$12151$1l2agK)
        (log . g$12150$1l2agK)
        (list? . g$12149$1l2agK)
        (list-tail . g$12148$1l2agK)
        (list-ref . g$12147$1l2agK)
        (list->vector . g$12146$1l2agK)
        (list->string . g$12145$1l2agK)
        (list . g$12144$1l2agK)
        (length . g$12143$1l2agK)
        (lcm . g$12142$1l2agK)
        (integer? . g$12141$1l2agK)
        (integer-valued? . g$12140$1l2agK)
        (integer->char . g$12139$1l2agK)
        (infinite? . g$12138$1l2agK)
        (inexact? . g$12137$1l2agK)
        (inexact . g$12136$1l2agK)
        (imag-part . g$12135$1l2agK)
        (gcd . g$12134$1l2agK)
        (for-each . g$12133$1l2agK)
        (floor . g$12132$1l2agK)
        (finite? . g$12131$1l2agK)
        (expt . g$12130$1l2agK)
        (exp . g$12129$1l2agK)
        (exact? . g$12128$1l2agK)
        (exact-integer-sqrt . g$12127$1l2agK)
        (exact . g$12126$1l2agK)
        (even? . g$12125$1l2agK)
        (error . g$12124$1l2agK)
        (eqv? . g$12123$1l2agK)
        (equal? . g$12122$1l2agK)
        (eq? . g$12121$1l2agK)
        (dynamic-wind . g$12120$1l2agK)
        (div0-and-mod0 . g$12119$1l2agK)
        (mod0 . g$12118$1l2agK)
        (div0 . g$12117$1l2agK)
        (div-and-mod . g$12116$1l2agK)
        (mod . g$12115$1l2agK)
        (div . g$12114$1l2agK)
        (denominator . g$12113$1l2agK)
        (cos . g$12112$1l2agK)
        (cons . g$12111$1l2agK)
        (complex? . g$12110$1l2agK)
        (char? . g$12109$1l2agK)
        (char>? . g$5922$1l2agK)
        (char>=? . g$5924$1l2agK)
        (char=? . g$5920$1l2agK)
        (char<? . g$5921$1l2agK)
        (char<=? . g$5923$1l2agK)
        (char->integer . g$12108$1l2agK)
        (ceiling . g$12107$1l2agK)
        (call-with-values . g$12106$1l2agK)
        (call/cc . g$12105$1l2agK)
        (call-with-current-continuation . g$12104$1l2agK)
        (cddddr . g$5820$1l2agK)
        (cdddar . g$5819$1l2agK)
        (cddadr . g$5818$1l2agK)
        (cddaar . g$5817$1l2agK)
        (cdaddr . g$5816$1l2agK)
        (cdadar . g$5815$1l2agK)
        (cdaadr . g$5814$1l2agK)
        (cdaaar . g$5813$1l2agK)
        (cadddr . g$5812$1l2agK)
        (caddar . g$5811$1l2agK)
        (cadadr . g$5810$1l2agK)
        (cadaar . g$5809$1l2agK)
        (caaddr . g$5808$1l2agK)
        (caadar . g$5807$1l2agK)
        (caaadr . g$5806$1l2agK)
        (caaaar . g$5805$1l2agK)
        (cdddr . g$5804$1l2agK)
        (cddar . g$5803$1l2agK)
        (cdadr . g$5802$1l2agK)
        (cdaar . g$5801$1l2agK)
        (caddr . g$5800$1l2agK)
        (cadar . g$5799$1l2agK)
        (caadr . g$5798$1l2agK)
        (caaar . g$5797$1l2agK)
        (cddr . g$5796$1l2agK)
        (cdar . g$5795$1l2agK)
        (cadr . g$5794$1l2agK)
        (caar . g$5793$1l2agK)
        (cdr . g$12103$1l2agK)
        (car . g$12102$1l2agK)
        (boolean? . g$12101$1l2agK)
        (boolean=? . g$5873$1l2agK)
        (atan . g$12100$1l2agK)
        (assertion-violation . g$12099$1l2agK)
        (asin . g$12098$1l2agK)
        (apply . g$12097$1l2agK)
        (append . g$12096$1l2agK)
        (angle . g$12095$1l2agK)
        (acos . g$12094$1l2agK)
        (abs . g$12093$1l2agK)
        (/ . g$12092$1l2agK)
        (* . g$12091$1l2agK)
        (- . g$12090$1l2agK)
        (+ . g$12089$1l2agK)
        (>= . g$12088$1l2agK)
        (> . g$12087$1l2agK)
        (= . g$12086$1l2agK)
        (<= . g$12085$1l2agK)
        (< . g$12084$1l2agK)
        (unquote-splicing . g$12001$1l2agK)
        (unquote . g$12000$1l2agK)
        (_ . g$11999$1l2agK)
        (else . g$11998$1l2agK)
        (=> . g$11997$1l2agK)
        (... . g$11996$1l2agK)
        (assert . g$11995$1l2agK)
        (or . g$11991$1l2agK)
        (and . g$11990$1l2agK)
        (cond . g$11988$1l2agK)
        (let* . g$11987$1l2agK)
        (let . g$11986$1l2agK)
        (identifier-syntax . g$11985$1l2agK)
        (quasiquote . g$11982$1l2agK)
        (syntax-rules . g$11981$1l2agK)
        (let-values . g$11977$1l2agK)
        (let*-values . g$11976$1l2agK)
        (case . g$11972$1l2agK)
        (if . g$11968$1l2agK)
        (letrec* . g$11967$1l2agK)
        (letrec . g$11966$1l2agK)
        (lambda . g$11963$1l2agK)
        (quote . g$11960$1l2agK)
        (letrec-syntax . g$11958$1l2agK)
        (let-syntax . g$11957$1l2agK)
        (set! . g$11956$1l2agK)
        (begin . g$11953$1l2agK)
        (define-syntax . g$11951$1l2agK)
        (define . g$11950$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12591$1l2agK
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6487$1l2agK)
        (remv . g$6488$1l2agK)
        (remp . g$6473$1l2agK)
        (remq . g$6489$1l2agK)
        (partition . g$6472$1l2agK)
        (memv . g$12340$1l2agK)
        (memq . g$12339$1l2agK)
        (memp . g$6479$1l2agK)
        (member . g$6478$1l2agK)
        (exists . g$6483$1l2agK)
        (for-all . g$6482$1l2agK)
        (fold-right . g$6486$1l2agK)
        (fold-left . g$6485$1l2agK)
        (find . g$6471$1l2agK)
        (filter . g$6474$1l2agK)
        (cons* . g$6484$1l2agK)
        (assv . g$6475$1l2agK)
        (assq . g$12338$1l2agK)
        (assp . g$6477$1l2agK)
        (assoc . g$6476$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12592$1l2agK
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7516$1l2agK)
        (call-with-input-file . g$7515$1l2agK)
        (write-char . g$12426$1l2agK)
        (write . g$12425$1l2agK)
        (with-output-to-file . g$7514$1l2agK)
        (with-input-from-file . g$7513$1l2agK)
        (read-char . g$12424$1l2agK)
        (read . g$12423$1l2agK)
        (peek-char . g$12422$1l2agK)
        (open-output-file . g$12421$1l2agK)
        (open-input-file . g$12420$1l2agK)
        (newline . g$12419$1l2agK)
        (display . g$12418$1l2agK)
        (close-output-port . g$12417$1l2agK)
        (close-input-port . g$12416$1l2agK)
        (eof-object? . g$12415$1l2agK)
        (eof-object . g$12414$1l2agK)
        (current-error-port . g$12413$1l2agK)
        (current-output-port . g$12412$1l2agK)
        (current-input-port . g$12411$1l2agK)
        (output-port? . g$12410$1l2agK)
        (input-port? . g$12409$1l2agK)
        (make-i/o-write-error . g$7348$1l2agK)
        (make-i/o-read-error . g$7334$1l2agK)
        (make-i/o-port-error . g$7453$1l2agK)
        (make-i/o-invalid-position-error . g$7363$1l2agK)
        (make-i/o-filename-error . g$7380$1l2agK)
        (make-i/o-file-protection-error . g$7396$1l2agK)
        (make-i/o-file-is-read-only-error . g$7410$1l2agK)
        (make-i/o-file-does-not-exist-error . g$7438$1l2agK)
        (make-i/o-file-already-exists-error . g$7424$1l2agK)
        (make-i/o-error . g$7320$1l2agK)
        (i/o-write-error? . g$7349$1l2agK)
        (i/o-read-error? . g$7335$1l2agK)
        (i/o-port-error? . g$7455$1l2agK)
        (i/o-invalid-position-error? . g$7365$1l2agK)
        (i/o-error-position . g$7366$1l2agK)
        (i/o-filename-error? . g$7382$1l2agK)
        (i/o-file-protection-error? . g$7397$1l2agK)
        (i/o-file-is-read-only-error? . g$7411$1l2agK)
        (i/o-file-does-not-exist-error? . g$7439$1l2agK)
        (i/o-file-already-exists-error? . g$7425$1l2agK)
        (i/o-error? . g$7321$1l2agK)
        (i/o-error-port . g$7456$1l2agK)
        (i/o-error-filename . g$7383$1l2agK)
        (&i/o-port . g$12050$1l2agK)
        (&i/o-file-does-not-exist . g$12049$1l2agK)
        (&i/o-file-already-exists . g$12048$1l2agK)
        (&i/o-file-is-read-only . g$12047$1l2agK)
        (&i/o-file-protection . g$12046$1l2agK)
        (&i/o-filename . g$12045$1l2agK)
        (&i/o-invalid-position . g$12044$1l2agK)
        (&i/o-write . g$12043$1l2agK)
        (&i/o-read . g$12042$1l2agK)
        (&i/o . g$12041$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12593$1l2agK
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12369$1l2agK)
        (utf32->string . g$12329$1l2agK)
        (utf16->string . g$12328$1l2agK)
        (utf8->string . g$12327$1l2agK)
        (uint-list->bytevector . g$12326$1l2agK)
        (u8-list->bytevector . g$12325$1l2agK)
        (string->utf8 . g$12324$1l2agK)
        (string->utf32 . g$12323$1l2agK)
        (string->utf16 . g$12322$1l2agK)
        (sint-list->bytevector . g$12321$1l2agK)
        (native-endianness . g$6563$1l2agK)
        (bytevector? . g$12320$1l2agK)
        (bytevector=? . g$12319$1l2agK)
        (bytevector-uint-set! . g$12318$1l2agK)
        (bytevector-uint-ref . g$12317$1l2agK)
        (bytevector-u8-set! . g$12316$1l2agK)
        (bytevector-u8-ref . g$12315$1l2agK)
        (bytevector-u64-set! . g$6584$1l2agK)
        (bytevector-u64-ref . g$6580$1l2agK)
        (bytevector-u64-native-set! . g$6586$1l2agK)
        (bytevector-u64-native-ref . g$6582$1l2agK)
        (bytevector-u32-set! . g$6576$1l2agK)
        (bytevector-u32-ref . g$6572$1l2agK)
        (bytevector-u32-native-set! . g$6578$1l2agK)
        (bytevector-u32-native-ref . g$6574$1l2agK)
        (bytevector-u16-set! . g$6568$1l2agK)
        (bytevector-u16-ref . g$6564$1l2agK)
        (bytevector-u16-native-set! . g$6570$1l2agK)
        (bytevector-u16-native-ref . g$6566$1l2agK)
        (bytevector-sint-set! . g$12314$1l2agK)
        (bytevector-sint-ref . g$12313$1l2agK)
        (bytevector-s8-set! . g$12312$1l2agK)
        (bytevector-s8-ref . g$12311$1l2agK)
        (bytevector-s64-set! . g$6585$1l2agK)
        (bytevector-s64-ref . g$6581$1l2agK)
        (bytevector-s64-native-set! . g$6587$1l2agK)
        (bytevector-s64-native-ref . g$6583$1l2agK)
        (bytevector-s32-set! . g$6577$1l2agK)
        (bytevector-s32-ref . g$6573$1l2agK)
        (bytevector-s32-native-set! . g$6579$1l2agK)
        (bytevector-s32-native-ref . g$6575$1l2agK)
        (bytevector-s16-set! . g$6569$1l2agK)
        (bytevector-s16-ref . g$6565$1l2agK)
        (bytevector-s16-native-set! . g$6571$1l2agK)
        (bytevector-s16-native-ref . g$6567$1l2agK)
        (bytevector-length . g$12310$1l2agK)
        (bytevector-ieee-single-set! . g$12309$1l2agK)
        (bytevector-ieee-single-ref . g$12308$1l2agK)
        (bytevector-ieee-single-native-set! . g$6590$1l2agK)
        (bytevector-ieee-single-native-ref . g$6588$1l2agK)
        (bytevector-ieee-double-set! . g$12307$1l2agK)
        (bytevector-ieee-double-ref . g$12306$1l2agK)
        (bytevector-ieee-double-native-set! . g$6591$1l2agK)
        (bytevector-ieee-double-native-ref . g$6589$1l2agK)
        (bytevector-fill! . g$12305$1l2agK)
        (bytevector-copy! . g$12304$1l2agK)
        (bytevector-copy . g$12303$1l2agK)
        (bytevector->uint-list . g$12302$1l2agK)
        (bytevector->u8-list . g$12301$1l2agK)
        (bytevector->sint-list . g$12300$1l2agK)
        (endianness . g$11994$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12594$1l2agK
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12476$1l2agK)
        (string-titlecase . g$12475$1l2agK)
        (string-normalize-nfkd . g$12474$1l2agK)
        (string-normalize-nfkc . g$12473$1l2agK)
        (string-normalize-nfd . g$12472$1l2agK)
        (string-normalize-nfc . g$12471$1l2agK)
        (string-foldcase . g$12470$1l2agK)
        (string-downcase . g$12469$1l2agK)
        (string-ci>? . g$7046$1l2agK)
        (string-ci>=? . g$7048$1l2agK)
        (string-ci=? . g$7044$1l2agK)
        (string-ci<? . g$7045$1l2agK)
        (string-ci<=? . g$7047$1l2agK)
        (char-whitespace? . g$12468$1l2agK)
        (char-upper-case? . g$12467$1l2agK)
        (char-title-case? . g$12466$1l2agK)
        (char-numeric? . g$12465$1l2agK)
        (char-lower-case? . g$12464$1l2agK)
        (char-general-category . g$12463$1l2agK)
        (char-upcase . g$12462$1l2agK)
        (char-titlecase . g$12461$1l2agK)
        (char-foldcase . g$12460$1l2agK)
        (char-downcase . g$12459$1l2agK)
        (char-ci>? . g$7097$1l2agK)
        (char-ci>=? . g$7099$1l2agK)
        (char-ci=? . g$7095$1l2agK)
        (char-ci<? . g$7096$1l2agK)
        (char-ci<=? . g$7098$1l2agK)
        (char-alphabetic? . g$12458$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12595$1l2agK
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12337$1l2agK)
        (raise-continuable . g$12336$1l2agK)
        (raise . g$12335$1l2agK)
        (guard . g$12009$1l2agK)
        (else . g$11998$1l2agK)
        (=> . g$11997$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12596$1l2agK
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7189$1l2agK)
        (bitwise-reverse-bit-field . g$12215$1l2agK)
        (bitwise-length . g$12214$1l2agK)
        (bitwise-if . g$7183$1l2agK)
        (bitwise-first-bit-set . g$12213$1l2agK)
        (bitwise-copy-bit-field . g$7186$1l2agK)
        (bitwise-copy-bit . g$7184$1l2agK)
        (bitwise-bit-set? . g$12212$1l2agK)
        (bitwise-bit-field . g$12211$1l2agK)
        (bitwise-bit-count . g$12210$1l2agK)
        (bitwise-xor . g$12209$1l2agK)
        (bitwise-ior . g$12208$1l2agK)
        (bitwise-and . g$12207$1l2agK)
        (bitwise-not . g$12206$1l2agK)
        (bitwise-arithmetic-shift-right . g$7188$1l2agK)
        (bitwise-arithmetic-shift-left . g$7187$1l2agK)
        (bitwise-arithmetic-shift . g$12205$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12597$1l2agK
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12253$1l2agK)
        (fxxor . g$12252$1l2agK)
        (fxrotate-bit-field . g$7237$1l2agK)
        (fxreverse-bit-field . g$12251$1l2agK)
        (fxpositive? . g$12250$1l2agK)
        (fxodd? . g$12249$1l2agK)
        (fxnot . g$12248$1l2agK)
        (fxnegative? . g$12247$1l2agK)
        (fxmod0 . g$12246$1l2agK)
        (fxmod . g$12245$1l2agK)
        (fxmin . g$12244$1l2agK)
        (fxmax . g$12243$1l2agK)
        (fxlength . g$12242$1l2agK)
        (fxior . g$12241$1l2agK)
        (fxif . g$7231$1l2agK)
        (fxfirst-bit-set . g$12240$1l2agK)
        (fxeven? . g$12239$1l2agK)
        (fxdiv0-and-mod0 . g$12238$1l2agK)
        (fxdiv0 . g$12237$1l2agK)
        (fxdiv-and-mod . g$12236$1l2agK)
        (fxdiv . g$12235$1l2agK)
        (fxcopy-bit-field . g$7234$1l2agK)
        (fxcopy-bit . g$7232$1l2agK)
        (fxbit-set? . g$12234$1l2agK)
        (fxbit-field . g$7233$1l2agK)
        (fxbit-count . g$12233$1l2agK)
        (fxarithmetic-shift-right . g$7236$1l2agK)
        (fxarithmetic-shift-left . g$7235$1l2agK)
        (fxarithmetic-shift . g$12232$1l2agK)
        (fxand . g$12231$1l2agK)
        (fx>? . g$12230$1l2agK)
        (fx>=? . g$12229$1l2agK)
        (fx=? . g$12228$1l2agK)
        (fx<? . g$12227$1l2agK)
        (fx<=? . g$12226$1l2agK)
        (fx-/carry . g$12225$1l2agK)
        (fx- . g$12224$1l2agK)
        (fx+/carry . g$12223$1l2agK)
        (fx+ . g$12222$1l2agK)
        (fx*/carry . g$12221$1l2agK)
        (fx* . g$12220$1l2agK)
        (greatest-fixnum . g$12219$1l2agK)
        (least-fixnum . g$12218$1l2agK)
        (fixnum-width . g$12217$1l2agK)
        (fixnum? . g$12216$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12598$1l2agK
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7306$1l2agK)
        (no-infinities-violation? . g$7292$1l2agK)
        (make-no-nans-violation . g$7305$1l2agK)
        (make-no-infinities-violation . g$7291$1l2agK)
        (real->flonum . g$12299$1l2agK)
        (flzero? . g$12298$1l2agK)
        (fltruncate . g$12297$1l2agK)
        (fltan . g$12296$1l2agK)
        (flsqrt . g$12295$1l2agK)
        (flsin . g$12294$1l2agK)
        (flround . g$12293$1l2agK)
        (flpositive? . g$12292$1l2agK)
        (flonum? . g$12291$1l2agK)
        (flodd? . g$12290$1l2agK)
        (flnumerator . g$12289$1l2agK)
        (flnegative? . g$12288$1l2agK)
        (flnan? . g$12287$1l2agK)
        (flmod0 . g$12286$1l2agK)
        (flmod . g$12285$1l2agK)
        (flmin . g$12284$1l2agK)
        (flmax . g$12283$1l2agK)
        (fllog . g$12282$1l2agK)
        (flinteger? . g$12281$1l2agK)
        (flinfinite? . g$12280$1l2agK)
        (flfloor . g$12279$1l2agK)
        (flfinite? . g$12278$1l2agK)
        (flexpt . g$12277$1l2agK)
        (flexp . g$12276$1l2agK)
        (fleven? . g$12275$1l2agK)
        (fldiv0-and-mod0 . g$12274$1l2agK)
        (fldiv0 . g$12273$1l2agK)
        (fldiv-and-mod . g$12272$1l2agK)
        (fldiv . g$12271$1l2agK)
        (fldenominator . g$12270$1l2agK)
        (flcos . g$12269$1l2agK)
        (flceiling . g$12268$1l2agK)
        (flatan . g$12267$1l2agK)
        (flasin . g$12266$1l2agK)
        (flacos . g$12265$1l2agK)
        (flabs . g$12264$1l2agK)
        (fl>? . g$12263$1l2agK)
        (fl>=? . g$12262$1l2agK)
        (fl=? . g$12261$1l2agK)
        (fl<? . g$12260$1l2agK)
        (fl<=? . g$12259$1l2agK)
        (fl/ . g$12258$1l2agK)
        (fl- . g$12257$1l2agK)
        (fl+ . g$12256$1l2agK)
        (fl* . g$12255$1l2agK)
        (fixnum->flonum . g$12254$1l2agK)
        (&no-nans . g$12054$1l2agK)
        (&no-infinities . g$12053$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12599$1l2agK
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12438$1l2agK)
        (string-ci-hash . g$12437$1l2agK)
        (string-hash . g$12436$1l2agK)
        (equal-hash . g$12435$1l2agK)
        (hashtable-equivalence-function . g$12434$1l2agK)
        (make-hashtable . g$12433$1l2agK)
        (hashtable-hash-function . g$12432$1l2agK)
        (make-eqv-hashtable . g$6374$1l2agK)
        (make-eq-hashtable . g$6373$1l2agK)
        (hashtable? . g$12431$1l2agK)
        (hashtable-update! . g$6380$1l2agK)
        (hashtable-size . g$6375$1l2agK)
        (hashtable-set! . g$6377$1l2agK)
        (hashtable-ref . g$6376$1l2agK)
        (hashtable-mutable? . g$12430$1l2agK)
        (hashtable-keys . g$12429$1l2agK)
        (hashtable-entries . g$12428$1l2agK)
        (hashtable-delete! . g$6378$1l2agK)
        (hashtable-copy . g$12427$1l2agK)
        (hashtable-contains? . g$6379$1l2agK)
        (hashtable-clear! . g$6381$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12600$1l2agK
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12415$1l2agK)
        (eof-object . g$12414$1l2agK)
        (current-error-port . g$12413$1l2agK)
        (current-output-port . g$12412$1l2agK)
        (current-input-port . g$12411$1l2agK)
        (output-port? . g$12410$1l2agK)
        (input-port? . g$12409$1l2agK)
        (utf-8-codec . g$12408$1l2agK)
        (utf-16-codec . g$12407$1l2agK)
        (transcoder-error-handling-mode . g$12406$1l2agK)
        (transcoder-eol-style . g$12405$1l2agK)
        (transcoder-codec . g$12404$1l2agK)
        (transcoded-port . g$12403$1l2agK)
        (textual-port? . g$12402$1l2agK)
        (string->bytevector . g$12401$1l2agK)
        (standard-output-port . g$12400$1l2agK)
        (standard-input-port . g$12399$1l2agK)
        (standard-error-port . g$12398$1l2agK)
        (set-port-position! . g$12397$1l2agK)
        (put-u8 . g$12396$1l2agK)
        (put-string . g$12395$1l2agK)
        (put-datum . g$12394$1l2agK)
        (put-char . g$12393$1l2agK)
        (put-bytevector . g$12392$1l2agK)
        (port? . g$7492$1l2agK)
        (port-transcoder . g$12391$1l2agK)
        (port-position . g$12390$1l2agK)
        (port-has-set-port-position!? . g$12389$1l2agK)
        (port-has-port-position? . g$12388$1l2agK)
        (port-eof? . g$12387$1l2agK)
        (output-port-buffer-mode . g$12386$1l2agK)
        (open-string-output-port . g$7491$1l2agK)
        (open-string-input-port . g$12385$1l2agK)
        (open-file-output-port . g$12384$1l2agK)
        (open-file-input/output-port . g$12383$1l2agK)
        (open-file-input-port . g$12382$1l2agK)
        (open-bytevector-output-port . g$12381$1l2agK)
        (open-bytevector-input-port . g$12380$1l2agK)
        (native-transcoder . g$12379$1l2agK)
        (native-eol-style . g$12378$1l2agK)
        (make-transcoder . g$12377$1l2agK)
        (latin-1-codec . g$12376$1l2agK)
        (make-i/o-write-error . g$7348$1l2agK)
        (make-i/o-read-error . g$7334$1l2agK)
        (make-i/o-port-error . g$7453$1l2agK)
        (make-i/o-invalid-position-error . g$7363$1l2agK)
        (make-i/o-filename-error . g$7380$1l2agK)
        (make-i/o-file-protection-error . g$7396$1l2agK)
        (make-i/o-file-is-read-only-error . g$7410$1l2agK)
        (make-i/o-file-does-not-exist-error . g$7438$1l2agK)
        (make-i/o-file-already-exists-error . g$7424$1l2agK)
        (make-i/o-error . g$7320$1l2agK)
        (make-i/o-encoding-error . g$7484$1l2agK)
        (make-i/o-decoding-error . g$7469$1l2agK)
        (make-custom-textual-output-port . g$12375$1l2agK)
        (make-custom-textual-input/output-port . g$12374$1l2agK)
        (make-custom-textual-input-port . g$12373$1l2agK)
        (make-custom-binary-output-port . g$12372$1l2agK)
        (make-custom-binary-input/output-port . g$12371$1l2agK)
        (make-custom-binary-input-port . g$12370$1l2agK)
        (lookahead-u8 . g$12368$1l2agK)
        (lookahead-char . g$12367$1l2agK)
        (i/o-write-error? . g$7349$1l2agK)
        (i/o-read-error? . g$7335$1l2agK)
        (i/o-port-error? . g$7455$1l2agK)
        (i/o-invalid-position-error? . g$7365$1l2agK)
        (i/o-error-position . g$7366$1l2agK)
        (i/o-filename-error? . g$7382$1l2agK)
        (i/o-file-protection-error? . g$7397$1l2agK)
        (i/o-file-is-read-only-error? . g$7411$1l2agK)
        (i/o-file-does-not-exist-error? . g$7439$1l2agK)
        (i/o-file-already-exists-error? . g$7425$1l2agK)
        (i/o-error? . g$7321$1l2agK)
        (i/o-error-port . g$7456$1l2agK)
        (i/o-error-filename . g$7383$1l2agK)
        (i/o-encoding-error? . g$7486$1l2agK)
        (i/o-encoding-error-char . g$7487$1l2agK)
        (i/o-decoding-error? . g$7470$1l2agK)
        (get-u8 . g$12366$1l2agK)
        (get-string-n! . g$12365$1l2agK)
        (get-string-n . g$12364$1l2agK)
        (get-string-all . g$12363$1l2agK)
        (get-line . g$12362$1l2agK)
        (get-datum . g$12361$1l2agK)
        (get-char . g$12360$1l2agK)
        (get-bytevector-some . g$12359$1l2agK)
        (get-bytevector-n! . g$12358$1l2agK)
        (get-bytevector-n . g$12357$1l2agK)
        (get-bytevector-all . g$12356$1l2agK)
        (flush-output-port . g$12355$1l2agK)
        (close-port . g$12354$1l2agK)
        (call-with-string-output-port . g$12353$1l2agK)
        (call-with-port . g$12352$1l2agK)
        (call-with-bytevector-output-port . g$12351$1l2agK)
        (bytevector->string . g$12350$1l2agK)
        (buffer-mode? . g$12349$1l2agK)
        (binary-port? . g$12348$1l2agK)
        (&i/o-encoding . g$12052$1l2agK)
        (&i/o-decoding . g$12051$1l2agK)
        (&i/o-port . g$12050$1l2agK)
        (&i/o-file-does-not-exist . g$12049$1l2agK)
        (&i/o-file-already-exists . g$12048$1l2agK)
        (&i/o-file-is-read-only . g$12047$1l2agK)
        (&i/o-file-protection . g$12046$1l2agK)
        (&i/o-filename . g$12045$1l2agK)
        (&i/o-invalid-position . g$12044$1l2agK)
        (&i/o-write . g$12043$1l2agK)
        (&i/o-read . g$12042$1l2agK)
        (&i/o . g$12041$1l2agK)
        (error-handling-mode . g$12013$1l2agK)
        (file-options . g$12012$1l2agK)
        (buffer-mode . g$12011$1l2agK)
        (eol-style . g$12010$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12601$1l2agK
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7573$1l2agK)
        (enum-set=? . g$7580$1l2agK)
        (enum-set-universe . g$7574$1l2agK)
        (enum-set-union . g$7581$1l2agK)
        (enum-set-subset? . g$7579$1l2agK)
        (enum-set-projection . g$7585$1l2agK)
        (enum-set-member? . g$7578$1l2agK)
        (enum-set-intersection . g$7582$1l2agK)
        (enum-set-indexer . g$7575$1l2agK)
        (enum-set-difference . g$7583$1l2agK)
        (enum-set-constructor . g$7576$1l2agK)
        (enum-set-complement . g$7584$1l2agK)
        (enum-set->list . g$7577$1l2agK)
        (define-enumeration . g$12024$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12602$1l2agK
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6811$1l2agK)
        (warning? . g$6722$1l2agK)
        (violation? . g$6764$1l2agK)
        (undefined-violation? . g$6888$1l2agK)
        (syntax-violation? . g$6872$1l2agK)
        (syntax-violation-subform . g$6874$1l2agK)
        (syntax-violation-form . g$6873$1l2agK)
        (syntax-violation . g$8972$1l2agK)
        (simple-conditions . g$12334$1l2agK)
        (serious-condition? . g$6736$1l2agK)
        (non-continuable-violation? . g$6826$1l2agK)
        (message-condition? . g$6707$1l2agK)
        (make-who-condition . g$6809$1l2agK)
        (make-warning . g$6721$1l2agK)
        (make-violation . g$6763$1l2agK)
        (make-undefined-violation . g$6887$1l2agK)
        (make-syntax-violation . g$6869$1l2agK)
        (make-serious-condition . g$6735$1l2agK)
        (make-non-continuable-violation . g$6825$1l2agK)
        (make-message-condition . g$6705$1l2agK)
        (make-lexical-violation . g$6853$1l2agK)
        (make-irritants-condition . g$6792$1l2agK)
        (make-implementation-restriction-violation . g$6839$1l2agK)
        (make-error . g$6749$1l2agK)
        (make-assertion-violation . g$6777$1l2agK)
        (lexical-violation? . g$6854$1l2agK)
        (irritants-condition? . g$6794$1l2agK)
        (implementation-restriction-violation? . g$6840$1l2agK)
        (error? . g$6750$1l2agK)
        (condition-who . g$6812$1l2agK)
        (condition-predicate . g$12333$1l2agK)
        (condition-message . g$6708$1l2agK)
        (condition-irritants . g$6795$1l2agK)
        (condition-accessor . g$12332$1l2agK)
        (condition . g$12331$1l2agK)
        (assertion-violation? . g$6778$1l2agK)
        (condition? . g$12330$1l2agK)
        (&non-continuable . g$12040$1l2agK)
        (&undefined . g$12039$1l2agK)
        (&syntax . g$12038$1l2agK)
        (&lexical . g$12037$1l2agK)
        (&implementation-restriction . g$12036$1l2agK)
        (&who . g$12034$1l2agK)
        (&irritants . g$12033$1l2agK)
        (&assertion . g$12032$1l2agK)
        (&violation . g$12031$1l2agK)
        (&error . g$12030$1l2agK)
        (&serious . g$12029$1l2agK)
        (&warning . g$12028$1l2agK)
        (&message . g$12027$1l2agK)
        (&condition . g$12026$1l2agK)
        (define-condition-type . g$12025$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12603$1l2agK
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12450$1l2agK)
        (record-type-uid . g$12449$1l2agK)
        (record-type-sealed? . g$12448$1l2agK)
        (record-type-parent . g$12447$1l2agK)
        (record-type-opaque? . g$12446$1l2agK)
        (record-type-name . g$12445$1l2agK)
        (record-type-generative? . g$12444$1l2agK)
        (record-type-field-names . g$12443$1l2agK)
        (record-rtd . g$12442$1l2agK)
        (record-field-mutable? . g$12441$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12604$1l2agK
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12457$1l2agK)
        (record-predicate . g$12456$1l2agK)
        (record-mutator . g$12455$1l2agK)
        (record-constructor . g$12454$1l2agK)
        (record-accessor . g$12453$1l2agK)
        (make-record-type-descriptor . g$12452$1l2agK)
        (make-record-constructor-descriptor . g$12451$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12605$1l2agK
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12023$1l2agK)
        (parent-rtd . g$12022$1l2agK)
        (nongenerative . g$12021$1l2agK)
        (opaque . g$12020$1l2agK)
        (sealed . g$12019$1l2agK)
        (protocol . g$12018$1l2agK)
        (parent . g$12017$1l2agK)
        (immutable . g$12016$1l2agK)
        (mutable . g$12015$1l2agK)
        (fields . g$12014$1l2agK)
        (record-constructor-descriptor . g$11975$1l2agK)
        (record-type-descriptor . g$11974$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7186$1l2agK
      'g$12606$1l2agK
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8845$1l2agK)
        (&no-nans-rcd . g$12570$1l2agK)
        (&no-nans-rtd . g$12569$1l2agK)
        (&no-infinities-rcd . g$12568$1l2agK)
        (&no-infinities-rtd . g$12567$1l2agK)
        (&i/o-encoding-rcd . g$12566$1l2agK)
        (&i/o-encoding-rtd . g$12565$1l2agK)
        (&i/o-decoding-rcd . g$12564$1l2agK)
        (&i/o-decoding-rtd . g$12563$1l2agK)
        (&i/o-port-rcd . g$12562$1l2agK)
        (&i/o-port-rtd . g$12561$1l2agK)
        (&i/o-file-does-not-exist-rcd . g$12560$1l2agK)
        (&i/o-file-does-not-exist-rtd . g$12559$1l2agK)
        (&i/o-file-already-exists-rcd . g$12558$1l2agK)
        (&i/o-file-already-exists-rtd . g$12557$1l2agK)
        (&i/o-file-is-read-only-rcd . g$12556$1l2agK)
        (&i/o-file-is-read-only-rtd . g$12555$1l2agK)
        (&i/o-file-protection-rcd . g$12554$1l2agK)
        (&i/o-file-protection-rtd . g$12553$1l2agK)
        (&i/o-filename-rcd . g$12552$1l2agK)
        (&i/o-filename-rtd . g$12551$1l2agK)
        (&i/o-invalid-position-rcd . g$12550$1l2agK)
        (&i/o-invalid-position-rtd . g$12549$1l2agK)
        (&i/o-write-rcd . g$12548$1l2agK)
        (&i/o-write-rtd . g$12547$1l2agK)
        (&i/o-read-rcd . g$12546$1l2agK)
        (&i/o-read-rtd . g$12545$1l2agK)
        (&i/o-rcd . g$12544$1l2agK)
        (&i/o-rtd . g$12543$1l2agK)
        (&undefined-rcd . g$12542$1l2agK)
        (&undefined-rtd . g$12541$1l2agK)
        (&syntax-rcd . g$12540$1l2agK)
        (&syntax-rtd . g$12539$1l2agK)
        (&lexical-rcd . g$12538$1l2agK)
        (&lexical-rtd . g$12537$1l2agK)
        (&implementation-restriction-rcd . g$12536$1l2agK)
        (&implementation-restriction-rtd . g$12535$1l2agK)
        (&non-continuable-rcd . g$12534$1l2agK)
        (&non-continuable-rtd . g$12533$1l2agK)
        (&who-rcd . g$12532$1l2agK)
        (&who-rtd . g$12531$1l2agK)
        (&irritants-rcd . g$12530$1l2agK)
        (&irritants-rtd . g$12529$1l2agK)
        (&assertion-rcd . g$12528$1l2agK)
        (&assertion-rtd . g$12527$1l2agK)
        (&violation-rcd . g$12526$1l2agK)
        (&violation-rtd . g$12525$1l2agK)
        (&error-rcd . g$12524$1l2agK)
        (&error-rtd . g$12523$1l2agK)
        (&serious-rcd . g$12522$1l2agK)
        (&serious-rtd . g$12521$1l2agK)
        (&warning-rcd . g$12520$1l2agK)
        (&warning-rtd . g$12519$1l2agK)
        (&message-rcd . g$12518$1l2agK)
        (&message-rtd . g$12517$1l2agK)
        (&condition-rcd . g$12516$1l2agK)
        (&condition-rtd . g$12515$1l2agK)
        (library-letrec* . g$12514$1l2agK)
        (annotation-stripped . g$12513$1l2agK)
        (annotation-source . g$12512$1l2agK)
        (annotation-expression . g$12511$1l2agK)
        (annotation? . g$12510$1l2agK)
        (read-annotated . g$12509$1l2agK)
        (tanh . g$12508$1l2agK)
        (cosh . g$12507$1l2agK)
        (sinh . g$12506$1l2agK)
        (make-guid . g$12505$1l2agK)
        (unspecified? . g$12504$1l2agK)
        (make-trace . g$12503$1l2agK)
        (make-list . g$12502$1l2agK)
        (last-pair . g$12501$1l2agK)
        (load-r5rs . g$12500$1l2agK)
        (license . g$12499$1l2agK)
        (stacktrace . g$12498$1l2agK)
        (ironscheme-build . g$11918$1l2agK)
        (define-clr-class-internal . g$12497$1l2agK)
        (clr-field-set!-internal . g$12496$1l2agK)
        (clr-field-get-internal . g$12495$1l2agK)
        (clr-cast-internal . g$12494$1l2agK)
        (clr-call-internal . g$12493$1l2agK)
        (clr-new-internal . g$12492$1l2agK)
        (clr-new-array-internal . g$12491$1l2agK)
        (clr-is-internal . g$12490$1l2agK)
        (clr-reference-internal . g$12489$1l2agK)
        (clr-using-internal . g$12488$1l2agK)
        (clr-clear-usings-internal . g$12487$1l2agK)
        (syntax-error . g$8969$1l2agK)
        (syntax-dispatch . g$8840$1l2agK)
        (compile-core . g$12486$1l2agK)
        (eval-core . g$12485$1l2agK)
        (set-symbol-value! . g$12484$1l2agK)
        (symbol-value . g$12483$1l2agK)
        (ungensym . g$12482$1l2agK)
        (gensym . g$12481$1l2agK)
        (void . g$12480$1l2agK)
        (load-serialized-library . g$12479$1l2agK)
        (serialize-library . g$12478$1l2agK)
        (compile-system-libraries . g$11920$1l2agK)
        (compile->closure . g$11922$1l2agK)
        (compile . g$11921$1l2agK)
        (load . g$11917$1l2agK)
        (interaction-environment . g$8978$1l2agK)
        (char-ready? . g$12477$1l2agK)
        (string-upcase . g$12476$1l2agK)
        (string-titlecase . g$12475$1l2agK)
        (string-normalize-nfkd . g$12474$1l2agK)
        (string-normalize-nfkc . g$12473$1l2agK)
        (string-normalize-nfd . g$12472$1l2agK)
        (string-normalize-nfc . g$12471$1l2agK)
        (string-foldcase . g$12470$1l2agK)
        (string-downcase . g$12469$1l2agK)
        (string-ci>? . g$7046$1l2agK)
        (string-ci>=? . g$7048$1l2agK)
        (string-ci=? . g$7044$1l2agK)
        (string-ci<? . g$7045$1l2agK)
        (string-ci<=? . g$7047$1l2agK)
        (char-whitespace? . g$12468$1l2agK)
        (char-upper-case? . g$12467$1l2agK)
        (char-title-case? . g$12466$1l2agK)
        (char-numeric? . g$12465$1l2agK)
        (char-lower-case? . g$12464$1l2agK)
        (char-general-category . g$12463$1l2agK)
        (char-upcase . g$12462$1l2agK)
        (char-titlecase . g$12461$1l2agK)
        (char-foldcase . g$12460$1l2agK)
        (char-downcase . g$12459$1l2agK)
        (char-ci>? . g$7097$1l2agK)
        (char-ci>=? . g$7099$1l2agK)
        (char-ci=? . g$7095$1l2agK)
        (char-ci<? . g$7096$1l2agK)
        (char-ci<=? . g$7098$1l2agK)
        (char-alphabetic? . g$12458$1l2agK)
        (variable-transformer-procedure . g$8577$1l2agK)
        (variable-transformer? . g$8576$1l2agK)
        (make-variable-transformer . g$8575$1l2agK)
        (identifier? . g$8973$1l2agK)
        (generate-temporaries . g$8962$1l2agK)
        (free-identifier=? . g$8963$1l2agK)
        (syntax->datum . g$8975$1l2agK)
        (datum->syntax . g$8974$1l2agK)
        (bound-identifier=? . g$8964$1l2agK)
        (record-type-descriptor? . g$12457$1l2agK)
        (record-predicate . g$12456$1l2agK)
        (record-mutator . g$12455$1l2agK)
        (record-constructor . g$12454$1l2agK)
        (record-accessor . g$12453$1l2agK)
        (make-record-type-descriptor . g$12452$1l2agK)
        (make-record-constructor-descriptor . g$12451$1l2agK)
        (record? . g$12450$1l2agK)
        (record-type-uid . g$12449$1l2agK)
        (record-type-sealed? . g$12448$1l2agK)
        (record-type-parent . g$12447$1l2agK)
        (record-type-opaque? . g$12446$1l2agK)
        (record-type-name . g$12445$1l2agK)
        (record-type-generative? . g$12444$1l2agK)
        (record-type-field-names . g$12443$1l2agK)
        (record-rtd . g$12442$1l2agK)
        (record-field-mutable? . g$12441$1l2agK)
        (delete-file . g$6407$1l2agK)
        (file-exists? . g$6406$1l2agK)
        (vector-sort! . g$12440$1l2agK)
        (vector-sort . g$12439$1l2agK)
        (list-sort . g$6920$1l2agK)
        (symbol-hash . g$12438$1l2agK)
        (string-ci-hash . g$12437$1l2agK)
        (string-hash . g$12436$1l2agK)
        (equal-hash . g$12435$1l2agK)
        (hashtable-equivalence-function . g$12434$1l2agK)
        (make-hashtable . g$12433$1l2agK)
        (hashtable-hash-function . g$12432$1l2agK)
        (make-eqv-hashtable . g$6374$1l2agK)
        (make-eq-hashtable . g$6373$1l2agK)
        (hashtable? . g$12431$1l2agK)
        (hashtable-update! . g$6380$1l2agK)
        (hashtable-size . g$6375$1l2agK)
        (hashtable-set! . g$6377$1l2agK)
        (hashtable-ref . g$6376$1l2agK)
        (hashtable-mutable? . g$12430$1l2agK)
        (hashtable-keys . g$12429$1l2agK)
        (hashtable-entries . g$12428$1l2agK)
        (hashtable-delete! . g$6378$1l2agK)
        (hashtable-copy . g$12427$1l2agK)
        (hashtable-contains? . g$6379$1l2agK)
        (hashtable-clear! . g$6381$1l2agK)
        (call-with-output-file . g$7516$1l2agK)
        (call-with-input-file . g$7515$1l2agK)
        (write-char . g$12426$1l2agK)
        (write . g$12425$1l2agK)
        (with-output-to-file . g$7514$1l2agK)
        (with-input-from-file . g$7513$1l2agK)
        (read-char . g$12424$1l2agK)
        (read . g$12423$1l2agK)
        (peek-char . g$12422$1l2agK)
        (open-output-file . g$12421$1l2agK)
        (open-input-file . g$12420$1l2agK)
        (newline . g$12419$1l2agK)
        (display . g$12418$1l2agK)
        (close-output-port . g$12417$1l2agK)
        (close-input-port . g$12416$1l2agK)
        (eof-object? . g$12415$1l2agK)
        (eof-object . g$12414$1l2agK)
        (current-error-port . g$12413$1l2agK)
        (current-output-port . g$12412$1l2agK)
        (current-input-port . g$12411$1l2agK)
        (output-port? . g$12410$1l2agK)
        (input-port? . g$12409$1l2agK)
        (utf-8-codec . g$12408$1l2agK)
        (utf-16-codec . g$12407$1l2agK)
        (transcoder-error-handling-mode . g$12406$1l2agK)
        (transcoder-eol-style . g$12405$1l2agK)
        (transcoder-codec . g$12404$1l2agK)
        (transcoded-port . g$12403$1l2agK)
        (textual-port? . g$12402$1l2agK)
        (string->bytevector . g$12401$1l2agK)
        (standard-output-port . g$12400$1l2agK)
        (standard-input-port . g$12399$1l2agK)
        (standard-error-port . g$12398$1l2agK)
        (set-port-position! . g$12397$1l2agK)
        (put-u8 . g$12396$1l2agK)
        (put-string . g$12395$1l2agK)
        (put-datum . g$12394$1l2agK)
        (put-char . g$12393$1l2agK)
        (put-bytevector . g$12392$1l2agK)
        (port? . g$7492$1l2agK)
        (port-transcoder . g$12391$1l2agK)
        (port-position . g$12390$1l2agK)
        (port-has-set-port-position!? . g$12389$1l2agK)
        (port-has-port-position? . g$12388$1l2agK)
        (port-eof? . g$12387$1l2agK)
        (output-port-buffer-mode . g$12386$1l2agK)
        (open-string-output-port . g$7491$1l2agK)
        (open-string-input-port . g$12385$1l2agK)
        (open-file-output-port . g$12384$1l2agK)
        (open-file-input/output-port . g$12383$1l2agK)
        (open-file-input-port . g$12382$1l2agK)
        (open-bytevector-output-port . g$12381$1l2agK)
        (open-bytevector-input-port . g$12380$1l2agK)
        (native-transcoder . g$12379$1l2agK)
        (native-eol-style . g$12378$1l2agK)
        (make-transcoder . g$12377$1l2agK)
        (latin-1-codec . g$12376$1l2agK)
        (make-i/o-write-error . g$7348$1l2agK)
        (make-i/o-read-error . g$7334$1l2agK)
        (make-i/o-port-error . g$7453$1l2agK)
        (make-i/o-invalid-position-error . g$7363$1l2agK)
        (make-i/o-filename-error . g$7380$1l2agK)
        (make-i/o-file-protection-error . g$7396$1l2agK)
        (make-i/o-file-is-read-only-error . g$7410$1l2agK)
        (make-i/o-file-does-not-exist-error . g$7438$1l2agK)
        (make-i/o-file-already-exists-error . g$7424$1l2agK)
        (make-i/o-error . g$7320$1l2agK)
        (make-i/o-encoding-error . g$7484$1l2agK)
        (make-i/o-decoding-error . g$7469$1l2agK)
        (make-custom-textual-output-port . g$12375$1l2agK)
        (make-custom-textual-input/output-port . g$12374$1l2agK)
        (make-custom-textual-input-port . g$12373$1l2agK)
        (make-custom-binary-output-port . g$12372$1l2agK)
        (make-custom-binary-input/output-port . g$12371$1l2agK)
        (make-custom-binary-input-port . g$12370$1l2agK)
        (make-bytevector . g$12369$1l2agK)
        (lookahead-u8 . g$12368$1l2agK)
        (lookahead-char . g$12367$1l2agK)
        (i/o-write-error? . g$7349$1l2agK)
        (i/o-read-error? . g$7335$1l2agK)
        (i/o-port-error? . g$7455$1l2agK)
        (i/o-invalid-position-error? . g$7365$1l2agK)
        (i/o-error-position . g$7366$1l2agK)
        (i/o-filename-error? . g$7382$1l2agK)
        (i/o-file-protection-error? . g$7397$1l2agK)
        (i/o-file-is-read-only-error? . g$7411$1l2agK)
        (i/o-file-does-not-exist-error? . g$7439$1l2agK)
        (i/o-file-already-exists-error? . g$7425$1l2agK)
        (i/o-error? . g$7321$1l2agK)
        (i/o-error-port . g$7456$1l2agK)
        (i/o-error-filename . g$7383$1l2agK)
        (i/o-encoding-error? . g$7486$1l2agK)
        (i/o-encoding-error-char . g$7487$1l2agK)
        (i/o-decoding-error? . g$7470$1l2agK)
        (get-u8 . g$12366$1l2agK)
        (get-string-n! . g$12365$1l2agK)
        (get-string-n . g$12364$1l2agK)
        (get-string-all . g$12363$1l2agK)
        (get-line . g$12362$1l2agK)
        (get-datum . g$12361$1l2agK)
        (get-char . g$12360$1l2agK)
        (get-bytevector-some . g$12359$1l2agK)
        (get-bytevector-n! . g$12358$1l2agK)
        (get-bytevector-n . g$12357$1l2agK)
        (get-bytevector-all . g$12356$1l2agK)
        (flush-output-port . g$12355$1l2agK)
        (close-port . g$12354$1l2agK)
        (call-with-string-output-port . g$12353$1l2agK)
        (call-with-port . g$12352$1l2agK)
        (call-with-bytevector-output-port . g$12351$1l2agK)
        (bytevector->string . g$12350$1l2agK)
        (buffer-mode? . g$12349$1l2agK)
        (binary-port? . g$12348$1l2agK)
        (scheme-report-environment . g$8953$1l2agK)
        (quotient . g$6900$1l2agK)
        (null-environment . g$8952$1l2agK)
        (remainder . g$6901$1l2agK)
        (modulo . g$6902$1l2agK)
        (inexact->exact . g$12347$1l2agK)
        (force . g$6904$1l2agK)
        (exact->inexact . g$12346$1l2agK)
        (exit . g$12345$1l2agK)
        (command-line . g$11914$1l2agK)
        (string-fill! . g$12344$1l2agK)
        (string-set! . g$12343$1l2agK)
        (set-cdr! . g$12342$1l2agK)
        (set-car! . g$12341$1l2agK)
        (remove . g$6487$1l2agK)
        (remv . g$6488$1l2agK)
        (remp . g$6473$1l2agK)
        (remq . g$6489$1l2agK)
        (partition . g$6472$1l2agK)
        (memv . g$12340$1l2agK)
        (memq . g$12339$1l2agK)
        (memp . g$6479$1l2agK)
        (member . g$6478$1l2agK)
        (exists . g$6483$1l2agK)
        (for-all . g$6482$1l2agK)
        (fold-right . g$6486$1l2agK)
        (fold-left . g$6485$1l2agK)
        (find . g$6471$1l2agK)
        (filter . g$6474$1l2agK)
        (cons* . g$6484$1l2agK)
        (assv . g$6475$1l2agK)
        (assq . g$12338$1l2agK)
        (assp . g$6477$1l2agK)
        (assoc . g$6476$1l2agK)
        (with-exception-handler . g$12337$1l2agK)
        (raise-continuable . g$12336$1l2agK)
        (raise . g$12335$1l2agK)
        (eval . g$8955$1l2agK)
        (environment . g$8951$1l2agK)
        (make-enumeration . g$7573$1l2agK)
        (enum-set=? . g$7580$1l2agK)
        (enum-set-universe . g$7574$1l2agK)
        (enum-set-union . g$7581$1l2agK)
        (enum-set-subset? . g$7579$1l2agK)
        (enum-set-projection . g$7585$1l2agK)
        (enum-set-member? . g$7578$1l2agK)
        (enum-set-intersection . g$7582$1l2agK)
        (enum-set-indexer . g$7575$1l2agK)
        (enum-set-difference . g$7583$1l2agK)
        (enum-set-constructor . g$7576$1l2agK)
        (enum-set-complement . g$7584$1l2agK)
        (enum-set->list . g$7577$1l2agK)
        (who-condition? . g$6811$1l2agK)
        (warning? . g$6722$1l2agK)
        (violation? . g$6764$1l2agK)
        (undefined-violation? . g$6888$1l2agK)
        (syntax-violation? . g$6872$1l2agK)
        (syntax-violation-subform . g$6874$1l2agK)
        (syntax-violation-form . g$6873$1l2agK)
        (syntax-violation . g$8972$1l2agK)
        (simple-conditions . g$12334$1l2agK)
        (serious-condition? . g$6736$1l2agK)
        (non-continuable-violation? . g$6826$1l2agK)
        (message-condition? . g$6707$1l2agK)
        (make-who-condition . g$6809$1l2agK)
        (make-warning . g$6721$1l2agK)
        (make-violation . g$6763$1l2agK)
        (make-undefined-violation . g$6887$1l2agK)
        (make-syntax-violation . g$6869$1l2agK)
        (make-serious-condition . g$6735$1l2agK)
        (make-non-continuable-violation . g$6825$1l2agK)
        (make-message-condition . g$6705$1l2agK)
        (make-lexical-violation . g$6853$1l2agK)
        (make-irritants-condition . g$6792$1l2agK)
        (make-implementation-restriction-violation . g$6839$1l2agK)
        (make-error . g$6749$1l2agK)
        (make-assertion-violation . g$6777$1l2agK)
        (lexical-violation? . g$6854$1l2agK)
        (irritants-condition? . g$6794$1l2agK)
        (implementation-restriction-violation? . g$6840$1l2agK)
        (error? . g$6750$1l2agK)
        (condition-who . g$6812$1l2agK)
        (condition-predicate . g$12333$1l2agK)
        (condition-message . g$6708$1l2agK)
        (condition-irritants . g$6795$1l2agK)
        (condition-accessor . g$12332$1l2agK)
        (condition . g$12331$1l2agK)
        (assertion-violation? . g$6778$1l2agK)
        (condition? . g$12330$1l2agK)
        (utf32->string . g$12329$1l2agK)
        (utf16->string . g$12328$1l2agK)
        (utf8->string . g$12327$1l2agK)
        (uint-list->bytevector . g$12326$1l2agK)
        (u8-list->bytevector . g$12325$1l2agK)
        (string->utf8 . g$12324$1l2agK)
        (string->utf32 . g$12323$1l2agK)
        (string->utf16 . g$12322$1l2agK)
        (sint-list->bytevector . g$12321$1l2agK)
        (native-endianness . g$6563$1l2agK)
        (bytevector? . g$12320$1l2agK)
        (bytevector=? . g$12319$1l2agK)
        (bytevector-uint-set! . g$12318$1l2agK)
        (bytevector-uint-ref . g$12317$1l2agK)
        (bytevector-u8-set! . g$12316$1l2agK)
        (bytevector-u8-ref . g$12315$1l2agK)
        (bytevector-u64-set! . g$6584$1l2agK)
        (bytevector-u64-ref . g$6580$1l2agK)
        (bytevector-u64-native-set! . g$6586$1l2agK)
        (bytevector-u64-native-ref . g$6582$1l2agK)
        (bytevector-u32-set! . g$6576$1l2agK)
        (bytevector-u32-ref . g$6572$1l2agK)
        (bytevector-u32-native-set! . g$6578$1l2agK)
        (bytevector-u32-native-ref . g$6574$1l2agK)
        (bytevector-u16-set! . g$6568$1l2agK)
        (bytevector-u16-ref . g$6564$1l2agK)
        (bytevector-u16-native-set! . g$6570$1l2agK)
        (bytevector-u16-native-ref . g$6566$1l2agK)
        (bytevector-sint-set! . g$12314$1l2agK)
        (bytevector-sint-ref . g$12313$1l2agK)
        (bytevector-s8-set! . g$12312$1l2agK)
        (bytevector-s8-ref . g$12311$1l2agK)
        (bytevector-s64-set! . g$6585$1l2agK)
        (bytevector-s64-ref . g$6581$1l2agK)
        (bytevector-s64-native-set! . g$6587$1l2agK)
        (bytevector-s64-native-ref . g$6583$1l2agK)
        (bytevector-s32-set! . g$6577$1l2agK)
        (bytevector-s32-ref . g$6573$1l2agK)
        (bytevector-s32-native-set! . g$6579$1l2agK)
        (bytevector-s32-native-ref . g$6575$1l2agK)
        (bytevector-s16-set! . g$6569$1l2agK)
        (bytevector-s16-ref . g$6565$1l2agK)
        (bytevector-s16-native-set! . g$6571$1l2agK)
        (bytevector-s16-native-ref . g$6567$1l2agK)
        (bytevector-length . g$12310$1l2agK)
        (bytevector-ieee-single-set! . g$12309$1l2agK)
        (bytevector-ieee-single-ref . g$12308$1l2agK)
        (bytevector-ieee-single-native-set! . g$6590$1l2agK)
        (bytevector-ieee-single-native-ref . g$6588$1l2agK)
        (bytevector-ieee-double-set! . g$12307$1l2agK)
        (bytevector-ieee-double-ref . g$12306$1l2agK)
        (bytevector-ieee-double-native-set! . g$6591$1l2agK)
        (bytevector-ieee-double-native-ref . g$6589$1l2agK)
        (bytevector-fill! . g$12305$1l2agK)
        (bytevector-copy! . g$12304$1l2agK)
        (bytevector-copy . g$12303$1l2agK)
        (bytevector->uint-list . g$12302$1l2agK)
        (bytevector->u8-list . g$12301$1l2agK)
        (bytevector->sint-list . g$12300$1l2agK)
        (no-nans-violation? . g$7306$1l2agK)
        (no-infinities-violation? . g$7292$1l2agK)
        (make-no-nans-violation . g$7305$1l2agK)
        (make-no-infinities-violation . g$7291$1l2agK)
        (real->flonum . g$12299$1l2agK)
        (flzero? . g$12298$1l2agK)
        (fltruncate . g$12297$1l2agK)
        (fltan . g$12296$1l2agK)
        (flsqrt . g$12295$1l2agK)
        (flsin . g$12294$1l2agK)
        (flround . g$12293$1l2agK)
        (flpositive? . g$12292$1l2agK)
        (flonum? . g$12291$1l2agK)
        (flodd? . g$12290$1l2agK)
        (flnumerator . g$12289$1l2agK)
        (flnegative? . g$12288$1l2agK)
        (flnan? . g$12287$1l2agK)
        (flmod0 . g$12286$1l2agK)
        (flmod . g$12285$1l2agK)
        (flmin . g$12284$1l2agK)
        (flmax . g$12283$1l2agK)
        (fllog . g$12282$1l2agK)
        (flinteger? . g$12281$1l2agK)
        (flinfinite? . g$12280$1l2agK)
        (flfloor . g$12279$1l2agK)
        (flfinite? . g$12278$1l2agK)
        (flexpt . g$12277$1l2agK)
        (flexp . g$12276$1l2agK)
        (fleven? . g$12275$1l2agK)
        (fldiv0-and-mod0 . g$12274$1l2agK)
        (fldiv0 . g$12273$1l2agK)
        (fldiv-and-mod . g$12272$1l2agK)
        (fldiv . g$12271$1l2agK)
        (fldenominator . g$12270$1l2agK)
        (flcos . g$12269$1l2agK)
        (flceiling . g$12268$1l2agK)
        (flatan . g$12267$1l2agK)
        (flasin . g$12266$1l2agK)
        (flacos . g$12265$1l2agK)
        (flabs . g$12264$1l2agK)
        (fl>? . g$12263$1l2agK)
        (fl>=? . g$12262$1l2agK)
        (fl=? . g$12261$1l2agK)
        (fl<? . g$12260$1l2agK)
        (fl<=? . g$12259$1l2agK)
        (fl/ . g$12258$1l2agK)
        (fl- . g$12257$1l2agK)
        (fl+ . g$12256$1l2agK)
        (fl* . g$12255$1l2agK)
        (fixnum->flonum . g$12254$1l2agK)
        (fxzero? . g$12253$1l2agK)
        (fxxor . g$12252$1l2agK)
        (fxrotate-bit-field . g$7237$1l2agK)
        (fxreverse-bit-field . g$12251$1l2agK)
        (fxpositive? . g$12250$1l2agK)
        (fxodd? . g$12249$1l2agK)
        (fxnot . g$12248$1l2agK)
        (fxnegative? . g$12247$1l2agK)
        (fxmod0 . g$12246$1l2agK)
        (fxmod . g$12245$1l2agK)
        (fxmin . g$12244$1l2agK)
        (fxmax . g$12243$1l2agK)
        (fxlength . g$12242$1l2agK)
        (fxior . g$12241$1l2agK)
        (fxif . g$7231$1l2agK)
        (fxfirst-bit-set . g$12240$1l2agK)
        (fxeven? . g$12239$1l2agK)
        (fxdiv0-and-mod0 . g$12238$1l2agK)
        (fxdiv0 . g$12237$1l2agK)
        (fxdiv-and-mod . g$12236$1l2agK)
        (fxdiv . g$12235$1l2agK)
        (fxcopy-bit-field . g$7234$1l2agK)
        (fxcopy-bit . g$7232$1l2agK)
        (fxbit-set? . g$12234$1l2agK)
        (fxbit-field . g$7233$1l2agK)
        (fxbit-count . g$12233$1l2agK)
        (fxarithmetic-shift-right . g$7236$1l2agK)
        (fxarithmetic-shift-left . g$7235$1l2agK)
        (fxarithmetic-shift . g$12232$1l2agK)
        (fxand . g$12231$1l2agK)
        (fx>? . g$12230$1l2agK)
        (fx>=? . g$12229$1l2agK)
        (fx=? . g$12228$1l2agK)
        (fx<? . g$12227$1l2agK)
        (fx<=? . g$12226$1l2agK)
        (fx-/carry . g$12225$1l2agK)
        (fx- . g$12224$1l2agK)
        (fx+/carry . g$12223$1l2agK)
        (fx+ . g$12222$1l2agK)
        (fx*/carry . g$12221$1l2agK)
        (fx* . g$12220$1l2agK)
        (greatest-fixnum . g$12219$1l2agK)
        (least-fixnum . g$12218$1l2agK)
        (fixnum-width . g$12217$1l2agK)
        (fixnum? . g$12216$1l2agK)
        (bitwise-rotate-bit-field . g$7189$1l2agK)
        (bitwise-reverse-bit-field . g$12215$1l2agK)
        (bitwise-length . g$12214$1l2agK)
        (bitwise-if . g$7183$1l2agK)
        (bitwise-first-bit-set . g$12213$1l2agK)
        (bitwise-copy-bit-field . g$7186$1l2agK)
        (bitwise-copy-bit . g$7184$1l2agK)
        (bitwise-bit-set? . g$12212$1l2agK)
        (bitwise-bit-field . g$12211$1l2agK)
        (bitwise-bit-count . g$12210$1l2agK)
        (bitwise-xor . g$12209$1l2agK)
        (bitwise-ior . g$12208$1l2agK)
        (bitwise-and . g$12207$1l2agK)
        (bitwise-not . g$12206$1l2agK)
        (bitwise-arithmetic-shift-right . g$7188$1l2agK)
        (bitwise-arithmetic-shift-left . g$7187$1l2agK)
        (bitwise-arithmetic-shift . g$12205$1l2agK)
        (zero? . g$12204$1l2agK)
        (vector? . g$12203$1l2agK)
        (vector-set! . g$12202$1l2agK)
        (vector-ref . g$12201$1l2agK)
        (vector-map . g$12200$1l2agK)
        (vector-length . g$12199$1l2agK)
        (vector-for-each . g$12198$1l2agK)
        (vector-fill! . g$12197$1l2agK)
        (vector->list . g$12196$1l2agK)
        (vector . g$12195$1l2agK)
        (values . g$12194$1l2agK)
        (truncate . g$12193$1l2agK)
        (tan . g$12192$1l2agK)
        (symbol? . g$12191$1l2agK)
        (symbol=? . g$5872$1l2agK)
        (symbol->string . g$12190$1l2agK)
        (substring . g$12189$1l2agK)
        (string? . g$12188$1l2agK)
        (string>? . g$5869$1l2agK)
        (string>=? . g$5871$1l2agK)
        (string=? . g$5867$1l2agK)
        (string<? . g$5868$1l2agK)
        (string<=? . g$5870$1l2agK)
        (string-ref . g$12187$1l2agK)
        (string-length . g$12186$1l2agK)
        (string-for-each . g$12185$1l2agK)
        (string-copy . g$12184$1l2agK)
        (string-append . g$12183$1l2agK)
        (string->symbol . g$12182$1l2agK)
        (string->number . g$12181$1l2agK)
        (string->list . g$12180$1l2agK)
        (string . g$12179$1l2agK)
        (sqrt . g$12178$1l2agK)
        (sin . g$12177$1l2agK)
        (round . g$12176$1l2agK)
        (reverse . g$12175$1l2agK)
        (real? . g$12174$1l2agK)
        (real-valued? . g$12173$1l2agK)
        (real-part . g$12172$1l2agK)
        (rationalize . g$5925$1l2agK)
        (rational? . g$12171$1l2agK)
        (rational-valued? . g$12170$1l2agK)
        (procedure? . g$12169$1l2agK)
        (positive? . g$12168$1l2agK)
        (pair? . g$12167$1l2agK)
        (odd? . g$12166$1l2agK)
        (numerator . g$12165$1l2agK)
        (number? . g$12164$1l2agK)
        (number->string . g$12163$1l2agK)
        (null? . g$12162$1l2agK)
        (not . g$12161$1l2agK)
        (negative? . g$12160$1l2agK)
        (nan? . g$12159$1l2agK)
        (min . g$12158$1l2agK)
        (max . g$12157$1l2agK)
        (map . g$12156$1l2agK)
        (make-vector . g$12155$1l2agK)
        (make-string . g$12154$1l2agK)
        (make-rectangular . g$12153$1l2agK)
        (make-polar . g$12152$1l2agK)
        (magnitude . g$12151$1l2agK)
        (log . g$12150$1l2agK)
        (list? . g$12149$1l2agK)
        (list-tail . g$12148$1l2agK)
        (list-ref . g$12147$1l2agK)
        (list->vector . g$12146$1l2agK)
        (list->string . g$12145$1l2agK)
        (list . g$12144$1l2agK)
        (length . g$12143$1l2agK)
        (lcm . g$12142$1l2agK)
        (integer? . g$12141$1l2agK)
        (integer-valued? . g$12140$1l2agK)
        (integer->char . g$12139$1l2agK)
        (infinite? . g$12138$1l2agK)
        (inexact? . g$12137$1l2agK)
        (inexact . g$12136$1l2agK)
        (imag-part . g$12135$1l2agK)
        (gcd . g$12134$1l2agK)
        (for-each . g$12133$1l2agK)
        (floor . g$12132$1l2agK)
        (finite? . g$12131$1l2agK)
        (expt . g$12130$1l2agK)
        (exp . g$12129$1l2agK)
        (exact? . g$12128$1l2agK)
        (exact-integer-sqrt . g$12127$1l2agK)
        (exact . g$12126$1l2agK)
        (even? . g$12125$1l2agK)
        (error . g$12124$1l2agK)
        (eqv? . g$12123$1l2agK)
        (equal? . g$12122$1l2agK)
        (eq? . g$12121$1l2agK)
        (dynamic-wind . g$12120$1l2agK)
        (div0-and-mod0 . g$12119$1l2agK)
        (mod0 . g$12118$1l2agK)
        (div0 . g$12117$1l2agK)
        (div-and-mod . g$12116$1l2agK)
        (mod . g$12115$1l2agK)
        (div . g$12114$1l2agK)
        (denominator . g$12113$1l2agK)
        (cos . g$12112$1l2agK)
        (cons . g$12111$1l2agK)
        (complex? . g$12110$1l2agK)
        (char? . g$12109$1l2agK)
        (char>? . g$5922$1l2agK)
        (char>=? . g$5924$1l2agK)
        (char=? . g$5920$1l2agK)
        (char<? . g$5921$1l2agK)
        (char<=? . g$5923$1l2agK)
        (char->integer . g$12108$1l2agK)
        (ceiling . g$12107$1l2agK)
        (call-with-values . g$12106$1l2agK)
        (call/cc . g$12105$1l2agK)
        (call-with-current-continuation . g$12104$1l2agK)
        (cddddr . g$5820$1l2agK)
        (cdddar . g$5819$1l2agK)
        (cddadr . g$5818$1l2agK)
        (cddaar . g$5817$1l2agK)
        (cdaddr . g$5816$1l2agK)
        (cdadar . g$5815$1l2agK)
        (cdaadr . g$5814$1l2agK)
        (cdaaar . g$5813$1l2agK)
        (cadddr . g$5812$1l2agK)
        (caddar . g$5811$1l2agK)
        (cadadr . g$5810$1l2agK)
        (cadaar . g$5809$1l2agK)
        (caaddr . g$5808$1l2agK)
        (caadar . g$5807$1l2agK)
        (caaadr . g$5806$1l2agK)
        (caaaar . g$5805$1l2agK)
        (cdddr . g$5804$1l2agK)
        (cddar . g$5803$1l2agK)
        (cdadr . g$5802$1l2agK)
        (cdaar . g$5801$1l2agK)
        (caddr . g$5800$1l2agK)
        (cadar . g$5799$1l2agK)
        (caadr . g$5798$1l2agK)
        (caaar . g$5797$1l2agK)
        (cddr . g$5796$1l2agK)
        (cdar . g$5795$1l2agK)
        (cadr . g$5794$1l2agK)
        (caar . g$5793$1l2agK)
        (cdr . g$12103$1l2agK)
        (car . g$12102$1l2agK)
        (boolean? . g$12101$1l2agK)
        (boolean=? . g$5873$1l2agK)
        (atan . g$12100$1l2agK)
        (assertion-violation . g$12099$1l2agK)
        (asin . g$12098$1l2agK)
        (apply . g$12097$1l2agK)
        (append . g$12096$1l2agK)
        (angle . g$12095$1l2agK)
        (acos . g$12094$1l2agK)
        (abs . g$12093$1l2agK)
        (/ . g$12092$1l2agK)
        (* . g$12091$1l2agK)
        (- . g$12090$1l2agK)
        (+ . g$12089$1l2agK)
        (>= . g$12088$1l2agK)
        (> . g$12087$1l2agK)
        (= . g$12086$1l2agK)
        (<= . g$12085$1l2agK)
        (< . g$12084$1l2agK)
        (make-record-printer . g$12083$1l2agK)
        (eqv-hash . g$12082$1l2agK)
        (eq-hash . g$12081$1l2agK)
        (reverse! . g$12080$1l2agK)
        (deserialize-port . g$12079$1l2agK)
        (serialize-port . g$12078$1l2agK)
        (enum-set? . g$7549$1l2agK)
        (make-promise . g$6903$1l2agK)
        (load/args . g$11916$1l2agK)
        (printf . g$7657$1l2agK)
        (fprintf . g$7658$1l2agK)
        (format . g$7659$1l2agK)
        (get-arity . g$12077$1l2agK)
        (gc-collect . g$12076$1l2agK)
        (clr-type? . g$12075$1l2agK)
        (get-clr-type . g$12074$1l2agK)
        (get-command-line . g$12073$1l2agK)
        (vector-append . g$12072$1l2agK)
        (vector-filter . g$12071$1l2agK)
        (vector-reverse! . g$12070$1l2agK)
        (vector-contains? . g$12069$1l2agK)
        (vector-index-of . g$12068$1l2agK)
        (vector-copy . g$12067$1l2agK)
        (vector-binary-search . g$12066$1l2agK)
        (get-output-string . g$12065$1l2agK)
        (open-output-string . g$12064$1l2agK)
        (open-input-string . g$12063$1l2agK)
        (string-ci-compare . g$12062$1l2agK)
        (string-compare . g$12061$1l2agK)
        (string-format . g$12060$1l2agK)
        (trace-printer . g$11913$1l2agK)
        (make-traced-procedure . g$12059$1l2agK)
        (make-traced-macro . g$7679$1l2agK)
        (assertion-error . g$8968$1l2agK)
        (pmap . g$12058$1l2agK)
        (time-it . g$12057$1l2agK)
        (make-parameter . g$7684$1l2agK)
        (library-locator . g$12056$1l2agK)
        (get-library-paths . g$12055$1l2agK)
        (environment-bindings . g$8948$1l2agK)
        (environment-symbols . g$8947$1l2agK)
        (interaction-environment-symbols . g$8946$1l2agK)
        (library-path . g$8115$1l2agK)
        (library-extensions . g$8116$1l2agK)
        (installed-libraries . g$8136$1l2agK)
        (expand . g$8954$1l2agK)
        (&no-nans . g$12054$1l2agK)
        (&no-infinities . g$12053$1l2agK)
        (&i/o-encoding . g$12052$1l2agK)
        (&i/o-decoding . g$12051$1l2agK)
        (&i/o-port . g$12050$1l2agK)
        (&i/o-file-does-not-exist . g$12049$1l2agK)
        (&i/o-file-already-exists . g$12048$1l2agK)
        (&i/o-file-is-read-only . g$12047$1l2agK)
        (&i/o-file-protection . g$12046$1l2agK)
        (&i/o-filename . g$12045$1l2agK)
        (&i/o-invalid-position . g$12044$1l2agK)
        (&i/o-write . g$12043$1l2agK)
        (&i/o-read . g$12042$1l2agK)
        (&i/o . g$12041$1l2agK)
        (&non-continuable . g$12040$1l2agK)
        (&undefined . g$12039$1l2agK)
        (&syntax . g$12038$1l2agK)
        (&lexical . g$12037$1l2agK)
        (&implementation-restriction . g$12036$1l2agK)
        (&non . g$12035$1l2agK)
        (&who . g$12034$1l2agK)
        (&irritants . g$12033$1l2agK)
        (&assertion . g$12032$1l2agK)
        (&violation . g$12031$1l2agK)
        (&error . g$12030$1l2agK)
        (&serious . g$12029$1l2agK)
        (&warning . g$12028$1l2agK)
        (&message . g$12027$1l2agK)
        (&condition . g$12026$1l2agK)
        (define-condition-type . g$12025$1l2agK)
        (define-enumeration . g$12024$1l2agK)
        (define-record-type . g$12023$1l2agK)
        (parent-rtd . g$12022$1l2agK)
        (nongenerative . g$12021$1l2agK)
        (opaque . g$12020$1l2agK)
        (sealed . g$12019$1l2agK)
        (protocol . g$12018$1l2agK)
        (parent . g$12017$1l2agK)
        (immutable . g$12016$1l2agK)
        (mutable . g$12015$1l2agK)
        (fields . g$12014$1l2agK)
        (error-handling-mode . g$12013$1l2agK)
        (file-options . g$12012$1l2agK)
        (buffer-mode . g$12011$1l2agK)
        (eol-style . g$12010$1l2agK)
        (guard . g$12009$1l2agK)
        (trace-letrec-syntax . g$12008$1l2agK)
        (trace-let-syntax . g$12007$1l2agK)
        (trace-define-syntax . g$12006$1l2agK)
        (trace-define . g$12005$1l2agK)
        (trace-lambda . g$12004$1l2agK)
        (unsyntax-splicing . g$12003$1l2agK)
        (unsyntax . g$12002$1l2agK)
        (unquote-splicing . g$12001$1l2agK)
        (unquote . g$12000$1l2agK)
        (_ . g$11999$1l2agK)
        (else . g$11998$1l2agK)
        (=> . g$11997$1l2agK)
        (... . g$11996$1l2agK)
        (assert . g$11995$1l2agK)
        (endianness . g$11994$1l2agK)
        (delay . g$11993$1l2agK)
        (time . g$11992$1l2agK)
        (or . g$11991$1l2agK)
        (and . g$11990$1l2agK)
        (do . g$11989$1l2agK)
        (cond . g$11988$1l2agK)
        (let* . g$11987$1l2agK)
        (let . g$11986$1l2agK)
        (identifier-syntax . g$11985$1l2agK)
        (with-syntax . g$11984$1l2agK)
        (quasisyntax . g$11983$1l2agK)
        (quasiquote . g$11982$1l2agK)
        (syntax-rules . g$11981$1l2agK)
        (include-into . g$11980$1l2agK)
        (include . g$11979$1l2agK)
        (define-struct . g$11978$1l2agK)
        (let-values . g$11977$1l2agK)
        (let*-values . g$11976$1l2agK)
        (record-constructor-descriptor . g$11975$1l2agK)
        (record-type-descriptor . g$11974$1l2agK)
        (fluid-let-syntax . g$11973$1l2agK)
        (case . g$11972$1l2agK)
        (parameterize . g$11971$1l2agK)
        (unless . g$11970$1l2agK)
        (when . g$11969$1l2agK)
        (if . g$11968$1l2agK)
        (letrec* . g$11967$1l2agK)
        (letrec . g$11966$1l2agK)
        (type-descriptor . g$11965$1l2agK)
        (case-lambda . g$11964$1l2agK)
        (lambda . g$11963$1l2agK)
        (syntax . g$11962$1l2agK)
        (syntax-case . g$11961$1l2agK)
        (quote . g$11960$1l2agK)
        (foreign-call . g$11959$1l2agK)
        (letrec-syntax . g$11958$1l2agK)
        (let-syntax . g$11957$1l2agK)
        (set! . g$11956$1l2agK)
        (import . g$11955$1l2agK)
        (library . g$11954$1l2agK)
        (begin . g$11953$1l2agK)
        (module . g$11952$1l2agK)
        (define-syntax . g$11951$1l2agK)
        (define . g$11950$1l2agK))
      '((g$8845$1l2agK core-prim . ellipsis-map)
        (g$12570$1l2agK core-prim . &no-nans-rcd)
        (g$12569$1l2agK core-prim . &no-nans-rtd)
        (g$12568$1l2agK core-prim . &no-infinities-rcd)
        (g$12567$1l2agK core-prim . &no-infinities-rtd)
        (g$12566$1l2agK core-prim . &i/o-encoding-rcd)
        (g$12565$1l2agK core-prim . &i/o-encoding-rtd)
        (g$12564$1l2agK core-prim . &i/o-decoding-rcd)
        (g$12563$1l2agK core-prim . &i/o-decoding-rtd)
        (g$12562$1l2agK core-prim . &i/o-port-rcd)
        (g$12561$1l2agK core-prim . &i/o-port-rtd)
        (g$12560$1l2agK core-prim . &i/o-file-does-not-exist-rcd)
        (g$12559$1l2agK core-prim . &i/o-file-does-not-exist-rtd)
        (g$12558$1l2agK core-prim . &i/o-file-already-exists-rcd)
        (g$12557$1l2agK core-prim . &i/o-file-already-exists-rtd)
        (g$12556$1l2agK core-prim . &i/o-file-is-read-only-rcd)
        (g$12555$1l2agK core-prim . &i/o-file-is-read-only-rtd)
        (g$12554$1l2agK core-prim . &i/o-file-protection-rcd)
        (g$12553$1l2agK core-prim . &i/o-file-protection-rtd)
        (g$12552$1l2agK core-prim . &i/o-filename-rcd)
        (g$12551$1l2agK core-prim . &i/o-filename-rtd)
        (g$12550$1l2agK core-prim . &i/o-invalid-position-rcd)
        (g$12549$1l2agK core-prim . &i/o-invalid-position-rtd)
        (g$12548$1l2agK core-prim . &i/o-write-rcd)
        (g$12547$1l2agK core-prim . &i/o-write-rtd)
        (g$12546$1l2agK core-prim . &i/o-read-rcd)
        (g$12545$1l2agK core-prim . &i/o-read-rtd)
        (g$12544$1l2agK core-prim . &i/o-rcd)
        (g$12543$1l2agK core-prim . &i/o-rtd)
        (g$12542$1l2agK core-prim . &undefined-rcd)
        (g$12541$1l2agK core-prim . &undefined-rtd)
        (g$12540$1l2agK core-prim . &syntax-rcd)
        (g$12539$1l2agK core-prim . &syntax-rtd)
        (g$12538$1l2agK core-prim . &lexical-rcd)
        (g$12537$1l2agK core-prim . &lexical-rtd)
        (g$12536$1l2agK core-prim . &implementation-restriction-rcd)
        (g$12535$1l2agK core-prim . &implementation-restriction-rtd)
        (g$12534$1l2agK core-prim . &non-continuable-rcd)
        (g$12533$1l2agK core-prim . &non-continuable-rtd)
        (g$12532$1l2agK core-prim . &who-rcd)
        (g$12531$1l2agK core-prim . &who-rtd)
        (g$12530$1l2agK core-prim . &irritants-rcd)
        (g$12529$1l2agK core-prim . &irritants-rtd)
        (g$12528$1l2agK core-prim . &assertion-rcd)
        (g$12527$1l2agK core-prim . &assertion-rtd)
        (g$12526$1l2agK core-prim . &violation-rcd)
        (g$12525$1l2agK core-prim . &violation-rtd)
        (g$12524$1l2agK core-prim . &error-rcd)
        (g$12523$1l2agK core-prim . &error-rtd)
        (g$12522$1l2agK core-prim . &serious-rcd)
        (g$12521$1l2agK core-prim . &serious-rtd)
        (g$12520$1l2agK core-prim . &warning-rcd)
        (g$12519$1l2agK core-prim . &warning-rtd)
        (g$12518$1l2agK core-prim . &message-rcd)
        (g$12517$1l2agK core-prim . &message-rtd)
        (g$12516$1l2agK core-prim . &condition-rcd)
        (g$12515$1l2agK core-prim . &condition-rtd)
        (g$12514$1l2agK core-prim . library-letrec*)
        (g$12513$1l2agK core-prim . annotation-stripped)
        (g$12512$1l2agK core-prim . annotation-source)
        (g$12511$1l2agK core-prim . annotation-expression)
        (g$12510$1l2agK core-prim . annotation?)
        (g$12509$1l2agK core-prim . read-annotated)
        (g$12508$1l2agK core-prim . tanh)
        (g$12507$1l2agK core-prim . cosh)
        (g$12506$1l2agK core-prim . sinh)
        (g$12505$1l2agK core-prim . make-guid)
        (g$12504$1l2agK core-prim . unspecified?)
        (g$12503$1l2agK core-prim . make-trace)
        (g$12502$1l2agK core-prim . make-list)
        (g$12501$1l2agK core-prim . last-pair)
        (g$12500$1l2agK core-prim . load-r5rs)
        (g$12499$1l2agK core-prim . license)
        (g$12498$1l2agK core-prim . stacktrace)
        (g$11918$1l2agK core-prim . ironscheme-build)
        (g$12497$1l2agK core-prim . define-clr-class-internal)
        (g$12496$1l2agK core-prim . clr-field-set!-internal)
        (g$12495$1l2agK core-prim . clr-field-get-internal)
        (g$12494$1l2agK core-prim . clr-cast-internal)
        (g$12493$1l2agK core-prim . clr-call-internal)
        (g$12492$1l2agK core-prim . clr-new-internal)
        (g$12491$1l2agK core-prim . clr-new-array-internal)
        (g$12490$1l2agK core-prim . clr-is-internal)
        (g$12489$1l2agK core-prim . clr-reference-internal)
        (g$12488$1l2agK core-prim . clr-using-internal)
        (g$12487$1l2agK core-prim . clr-clear-usings-internal)
        (g$8969$1l2agK core-prim . syntax-error)
        (g$8840$1l2agK core-prim . syntax-dispatch)
        (g$12486$1l2agK core-prim . compile-core)
        (g$12485$1l2agK core-prim . eval-core)
        (g$12484$1l2agK core-prim . set-symbol-value!)
        (g$12483$1l2agK core-prim . symbol-value)
        (g$12482$1l2agK core-prim . ungensym)
        (g$12481$1l2agK core-prim . gensym)
        (g$12480$1l2agK core-prim . void)
        (g$12479$1l2agK core-prim . load-serialized-library)
        (g$12478$1l2agK core-prim . serialize-library)
        (g$11920$1l2agK core-prim . compile-system-libraries)
        (g$11922$1l2agK core-prim . compile->closure)
        (g$11921$1l2agK core-prim . compile)
        (g$11917$1l2agK core-prim . load)
        (g$8978$1l2agK core-prim . interaction-environment)
        (g$12477$1l2agK core-prim . char-ready?)
        (g$12476$1l2agK core-prim . string-upcase)
        (g$12475$1l2agK core-prim . string-titlecase)
        (g$12474$1l2agK core-prim . string-normalize-nfkd)
        (g$12473$1l2agK core-prim . string-normalize-nfkc)
        (g$12472$1l2agK core-prim . string-normalize-nfd)
        (g$12471$1l2agK core-prim . string-normalize-nfc)
        (g$12470$1l2agK core-prim . string-foldcase)
        (g$12469$1l2agK core-prim . string-downcase)
        (g$7046$1l2agK core-prim . string-ci>?)
        (g$7048$1l2agK core-prim . string-ci>=?)
        (g$7044$1l2agK core-prim . string-ci=?)
        (g$7045$1l2agK core-prim . string-ci<?)
        (g$7047$1l2agK core-prim . string-ci<=?)
        (g$12468$1l2agK core-prim . char-whitespace?)
        (g$12467$1l2agK core-prim . char-upper-case?)
        (g$12466$1l2agK core-prim . char-title-case?)
        (g$12465$1l2agK core-prim . char-numeric?)
        (g$12464$1l2agK core-prim . char-lower-case?)
        (g$12463$1l2agK core-prim . char-general-category)
        (g$12462$1l2agK core-prim . char-upcase)
        (g$12461$1l2agK core-prim . char-titlecase)
        (g$12460$1l2agK core-prim . char-foldcase)
        (g$12459$1l2agK core-prim . char-downcase)
        (g$7097$1l2agK core-prim . char-ci>?)
        (g$7099$1l2agK core-prim . char-ci>=?)
        (g$7095$1l2agK core-prim . char-ci=?)
        (g$7096$1l2agK core-prim . char-ci<?)
        (g$7098$1l2agK core-prim . char-ci<=?)
        (g$12458$1l2agK core-prim . char-alphabetic?)
        (g$8577$1l2agK core-prim . variable-transformer-procedure)
        (g$8576$1l2agK core-prim . variable-transformer?)
        (g$8575$1l2agK core-prim . make-variable-transformer)
        (g$8973$1l2agK core-prim . identifier?)
        (g$8962$1l2agK core-prim . generate-temporaries)
        (g$8963$1l2agK core-prim . free-identifier=?)
        (g$8975$1l2agK core-prim . syntax->datum)
        (g$8974$1l2agK core-prim . datum->syntax)
        (g$8964$1l2agK core-prim . bound-identifier=?)
        (g$12457$1l2agK core-prim . record-type-descriptor?)
        (g$12456$1l2agK core-prim . record-predicate)
        (g$12455$1l2agK core-prim . record-mutator)
        (g$12454$1l2agK core-prim . record-constructor)
        (g$12453$1l2agK core-prim . record-accessor)
        (g$12452$1l2agK core-prim . make-record-type-descriptor)
        (g$12451$1l2agK core-prim . make-record-constructor-descriptor)
        (g$12450$1l2agK core-prim . record?)
        (g$12449$1l2agK core-prim . record-type-uid)
        (g$12448$1l2agK core-prim . record-type-sealed?)
        (g$12447$1l2agK core-prim . record-type-parent)
        (g$12446$1l2agK core-prim . record-type-opaque?)
        (g$12445$1l2agK core-prim . record-type-name)
        (g$12444$1l2agK core-prim . record-type-generative?)
        (g$12443$1l2agK core-prim . record-type-field-names)
        (g$12442$1l2agK core-prim . record-rtd)
        (g$12441$1l2agK core-prim . record-field-mutable?)
        (g$6407$1l2agK core-prim . delete-file)
        (g$6406$1l2agK core-prim . file-exists?)
        (g$12440$1l2agK core-prim . vector-sort!)
        (g$12439$1l2agK core-prim . vector-sort)
        (g$6920$1l2agK core-prim . list-sort)
        (g$12438$1l2agK core-prim . symbol-hash)
        (g$12437$1l2agK core-prim . string-ci-hash)
        (g$12436$1l2agK core-prim . string-hash)
        (g$12435$1l2agK core-prim . equal-hash)
        (g$12434$1l2agK core-prim . hashtable-equivalence-function)
        (g$12433$1l2agK core-prim . make-hashtable)
        (g$12432$1l2agK core-prim . hashtable-hash-function)
        (g$6374$1l2agK core-prim . make-eqv-hashtable)
        (g$6373$1l2agK core-prim . make-eq-hashtable)
        (g$12431$1l2agK core-prim . hashtable?)
        (g$6380$1l2agK core-prim . hashtable-update!)
        (g$6375$1l2agK core-prim . hashtable-size)
        (g$6377$1l2agK core-prim . hashtable-set!)
        (g$6376$1l2agK core-prim . hashtable-ref)
        (g$12430$1l2agK core-prim . hashtable-mutable?)
        (g$12429$1l2agK core-prim . hashtable-keys)
        (g$12428$1l2agK core-prim . hashtable-entries)
        (g$6378$1l2agK core-prim . hashtable-delete!)
        (g$12427$1l2agK core-prim . hashtable-copy)
        (g$6379$1l2agK core-prim . hashtable-contains?)
        (g$6381$1l2agK core-prim . hashtable-clear!)
        (g$7516$1l2agK core-prim . call-with-output-file)
        (g$7515$1l2agK core-prim . call-with-input-file)
        (g$12426$1l2agK core-prim . write-char)
        (g$12425$1l2agK core-prim . write)
        (g$7514$1l2agK core-prim . with-output-to-file)
        (g$7513$1l2agK core-prim . with-input-from-file)
        (g$12424$1l2agK core-prim . read-char)
        (g$12423$1l2agK core-prim . read)
        (g$12422$1l2agK core-prim . peek-char)
        (g$12421$1l2agK core-prim . open-output-file)
        (g$12420$1l2agK core-prim . open-input-file)
        (g$12419$1l2agK core-prim . newline)
        (g$12418$1l2agK core-prim . display)
        (g$12417$1l2agK core-prim . close-output-port)
        (g$12416$1l2agK core-prim . close-input-port)
        (g$12415$1l2agK core-prim . eof-object?)
        (g$12414$1l2agK core-prim . eof-object)
        (g$12413$1l2agK core-prim . current-error-port)
        (g$12412$1l2agK core-prim . current-output-port)
        (g$12411$1l2agK core-prim . current-input-port)
        (g$12410$1l2agK core-prim . output-port?)
        (g$12409$1l2agK core-prim . input-port?)
        (g$12408$1l2agK core-prim . utf-8-codec)
        (g$12407$1l2agK core-prim . utf-16-codec)
        (g$12406$1l2agK core-prim . transcoder-error-handling-mode)
        (g$12405$1l2agK core-prim . transcoder-eol-style)
        (g$12404$1l2agK core-prim . transcoder-codec)
        (g$12403$1l2agK core-prim . transcoded-port)
        (g$12402$1l2agK core-prim . textual-port?)
        (g$12401$1l2agK core-prim . string->bytevector)
        (g$12400$1l2agK core-prim . standard-output-port)
        (g$12399$1l2agK core-prim . standard-input-port)
        (g$12398$1l2agK core-prim . standard-error-port)
        (g$12397$1l2agK core-prim . set-port-position!)
        (g$12396$1l2agK core-prim . put-u8)
        (g$12395$1l2agK core-prim . put-string)
        (g$12394$1l2agK core-prim . put-datum)
        (g$12393$1l2agK core-prim . put-char)
        (g$12392$1l2agK core-prim . put-bytevector)
        (g$7492$1l2agK core-prim . port?)
        (g$12391$1l2agK core-prim . port-transcoder)
        (g$12390$1l2agK core-prim . port-position)
        (g$12389$1l2agK core-prim . port-has-set-port-position!?)
        (g$12388$1l2agK core-prim . port-has-port-position?)
        (g$12387$1l2agK core-prim . port-eof?)
        (g$12386$1l2agK core-prim . output-port-buffer-mode)
        (g$7491$1l2agK core-prim . open-string-output-port)
        (g$12385$1l2agK core-prim . open-string-input-port)
        (g$12384$1l2agK core-prim . open-file-output-port)
        (g$12383$1l2agK core-prim . open-file-input/output-port)
        (g$12382$1l2agK core-prim . open-file-input-port)
        (g$12381$1l2agK core-prim . open-bytevector-output-port)
        (g$12380$1l2agK core-prim . open-bytevector-input-port)
        (g$12379$1l2agK core-prim . native-transcoder)
        (g$12378$1l2agK core-prim . native-eol-style)
        (g$12377$1l2agK core-prim . make-transcoder)
        (g$12376$1l2agK core-prim . latin-1-codec)
        (g$7348$1l2agK core-prim . make-i/o-write-error)
        (g$7334$1l2agK core-prim . make-i/o-read-error)
        (g$7453$1l2agK core-prim . make-i/o-port-error)
        (g$7363$1l2agK core-prim . make-i/o-invalid-position-error)
        (g$7380$1l2agK core-prim . make-i/o-filename-error)
        (g$7396$1l2agK core-prim . make-i/o-file-protection-error)
        (g$7410$1l2agK core-prim . make-i/o-file-is-read-only-error)
        (g$7438$1l2agK core-prim . make-i/o-file-does-not-exist-error)
        (g$7424$1l2agK core-prim . make-i/o-file-already-exists-error)
        (g$7320$1l2agK core-prim . make-i/o-error)
        (g$7484$1l2agK core-prim . make-i/o-encoding-error)
        (g$7469$1l2agK core-prim . make-i/o-decoding-error)
        (g$12375$1l2agK core-prim . make-custom-textual-output-port)
        (g$12374$1l2agK core-prim . make-custom-textual-input/output-port)
        (g$12373$1l2agK core-prim . make-custom-textual-input-port)
        (g$12372$1l2agK core-prim . make-custom-binary-output-port)
        (g$12371$1l2agK core-prim . make-custom-binary-input/output-port)
        (g$12370$1l2agK core-prim . make-custom-binary-input-port)
        (g$12369$1l2agK core-prim . make-bytevector)
        (g$12368$1l2agK core-prim . lookahead-u8)
        (g$12367$1l2agK core-prim . lookahead-char)
        (g$7349$1l2agK core-prim . i/o-write-error?)
        (g$7335$1l2agK core-prim . i/o-read-error?)
        (g$7455$1l2agK core-prim . i/o-port-error?)
        (g$7365$1l2agK core-prim . i/o-invalid-position-error?)
        (g$7366$1l2agK core-prim . i/o-error-position)
        (g$7382$1l2agK core-prim . i/o-filename-error?)
        (g$7397$1l2agK core-prim . i/o-file-protection-error?)
        (g$7411$1l2agK core-prim . i/o-file-is-read-only-error?)
        (g$7439$1l2agK core-prim . i/o-file-does-not-exist-error?)
        (g$7425$1l2agK core-prim . i/o-file-already-exists-error?)
        (g$7321$1l2agK core-prim . i/o-error?)
        (g$7456$1l2agK core-prim . i/o-error-port)
        (g$7383$1l2agK core-prim . i/o-error-filename)
        (g$7486$1l2agK core-prim . i/o-encoding-error?)
        (g$7487$1l2agK core-prim . i/o-encoding-error-char)
        (g$7470$1l2agK core-prim . i/o-decoding-error?)
        (g$12366$1l2agK core-prim . get-u8)
        (g$12365$1l2agK core-prim . get-string-n!)
        (g$12364$1l2agK core-prim . get-string-n)
        (g$12363$1l2agK core-prim . get-string-all)
        (g$12362$1l2agK core-prim . get-line)
        (g$12361$1l2agK core-prim . get-datum)
        (g$12360$1l2agK core-prim . get-char)
        (g$12359$1l2agK core-prim . get-bytevector-some)
        (g$12358$1l2agK core-prim . get-bytevector-n!)
        (g$12357$1l2agK core-prim . get-bytevector-n)
        (g$12356$1l2agK core-prim . get-bytevector-all)
        (g$12355$1l2agK core-prim . flush-output-port)
        (g$12354$1l2agK core-prim . close-port)
        (g$12353$1l2agK core-prim . call-with-string-output-port)
        (g$12352$1l2agK core-prim . call-with-port)
        (g$12351$1l2agK core-prim . call-with-bytevector-output-port)
        (g$12350$1l2agK core-prim . bytevector->string)
        (g$12349$1l2agK core-prim . buffer-mode?)
        (g$12348$1l2agK core-prim . binary-port?)
        (g$8953$1l2agK core-prim . scheme-report-environment)
        (g$6900$1l2agK core-prim . quotient)
        (g$8952$1l2agK core-prim . null-environment)
        (g$6901$1l2agK core-prim . remainder)
        (g$6902$1l2agK core-prim . modulo)
        (g$12347$1l2agK core-prim . inexact->exact)
        (g$6904$1l2agK core-prim . force)
        (g$12346$1l2agK core-prim . exact->inexact)
        (g$12345$1l2agK core-prim . exit)
        (g$11914$1l2agK core-prim . command-line)
        (g$12344$1l2agK core-prim . string-fill!)
        (g$12343$1l2agK core-prim . string-set!)
        (g$12342$1l2agK core-prim . set-cdr!)
        (g$12341$1l2agK core-prim . set-car!)
        (g$6487$1l2agK core-prim . remove)
        (g$6488$1l2agK core-prim . remv)
        (g$6473$1l2agK core-prim . remp)
        (g$6489$1l2agK core-prim . remq)
        (g$6472$1l2agK core-prim . partition)
        (g$12340$1l2agK core-prim . memv)
        (g$12339$1l2agK core-prim . memq)
        (g$6479$1l2agK core-prim . memp)
        (g$6478$1l2agK core-prim . member)
        (g$6483$1l2agK core-prim . exists)
        (g$6482$1l2agK core-prim . for-all)
        (g$6486$1l2agK core-prim . fold-right)
        (g$6485$1l2agK core-prim . fold-left)
        (g$6471$1l2agK core-prim . find)
        (g$6474$1l2agK core-prim . filter)
        (g$6484$1l2agK core-prim . cons*)
        (g$6475$1l2agK core-prim . assv)
        (g$12338$1l2agK core-prim . assq)
        (g$6477$1l2agK core-prim . assp)
        (g$6476$1l2agK core-prim . assoc)
        (g$12337$1l2agK core-prim . with-exception-handler)
        (g$12336$1l2agK core-prim . raise-continuable)
        (g$12335$1l2agK core-prim . raise)
        (g$8955$1l2agK core-prim . eval)
        (g$8951$1l2agK core-prim . environment)
        (g$7573$1l2agK core-prim . make-enumeration)
        (g$7580$1l2agK core-prim . enum-set=?)
        (g$7574$1l2agK core-prim . enum-set-universe)
        (g$7581$1l2agK core-prim . enum-set-union)
        (g$7579$1l2agK core-prim . enum-set-subset?)
        (g$7585$1l2agK core-prim . enum-set-projection)
        (g$7578$1l2agK core-prim . enum-set-member?)
        (g$7582$1l2agK core-prim . enum-set-intersection)
        (g$7575$1l2agK core-prim . enum-set-indexer)
        (g$7583$1l2agK core-prim . enum-set-difference)
        (g$7576$1l2agK core-prim . enum-set-constructor)
        (g$7584$1l2agK core-prim . enum-set-complement)
        (g$7577$1l2agK core-prim . enum-set->list)
        (g$6811$1l2agK core-prim . who-condition?)
        (g$6722$1l2agK core-prim . warning?)
        (g$6764$1l2agK core-prim . violation?)
        (g$6888$1l2agK core-prim . undefined-violation?)
        (g$6872$1l2agK core-prim . syntax-violation?)
        (g$6874$1l2agK core-prim . syntax-violation-subform)
        (g$6873$1l2agK core-prim . syntax-violation-form)
        (g$8972$1l2agK core-prim . syntax-violation)
        (g$12334$1l2agK core-prim . simple-conditions)
        (g$6736$1l2agK core-prim . serious-condition?)
        (g$6826$1l2agK core-prim . non-continuable-violation?)
        (g$6707$1l2agK core-prim . message-condition?)
        (g$6809$1l2agK core-prim . make-who-condition)
        (g$6721$1l2agK core-prim . make-warning)
        (g$6763$1l2agK core-prim . make-violation)
        (g$6887$1l2agK core-prim . make-undefined-violation)
        (g$6869$1l2agK core-prim . make-syntax-violation)
        (g$6735$1l2agK core-prim . make-serious-condition)
        (g$6825$1l2agK core-prim . make-non-continuable-violation)
        (g$6705$1l2agK core-prim . make-message-condition)
        (g$6853$1l2agK core-prim . make-lexical-violation)
        (g$6792$1l2agK core-prim . make-irritants-condition)
        (g$6839$1l2agK core-prim . make-implementation-restriction-violation)
        (g$6749$1l2agK core-prim . make-error)
        (g$6777$1l2agK core-prim . make-assertion-violation)
        (g$6854$1l2agK core-prim . lexical-violation?)
        (g$6794$1l2agK core-prim . irritants-condition?)
        (g$6840$1l2agK core-prim . implementation-restriction-violation?)
        (g$6750$1l2agK core-prim . error?)
        (g$6812$1l2agK core-prim . condition-who)
        (g$12333$1l2agK core-prim . condition-predicate)
        (g$6708$1l2agK core-prim . condition-message)
        (g$6795$1l2agK core-prim . condition-irritants)
        (g$12332$1l2agK core-prim . condition-accessor)
        (g$12331$1l2agK core-prim . condition)
        (g$6778$1l2agK core-prim . assertion-violation?)
        (g$12330$1l2agK core-prim . condition?)
        (g$12329$1l2agK core-prim . utf32->string)
        (g$12328$1l2agK core-prim . utf16->string)
        (g$12327$1l2agK core-prim . utf8->string)
        (g$12326$1l2agK core-prim . uint-list->bytevector)
        (g$12325$1l2agK core-prim . u8-list->bytevector)
        (g$12324$1l2agK core-prim . string->utf8)
        (g$12323$1l2agK core-prim . string->utf32)
        (g$12322$1l2agK core-prim . string->utf16)
        (g$12321$1l2agK core-prim . sint-list->bytevector)
        (g$6563$1l2agK core-prim . native-endianness)
        (g$12320$1l2agK core-prim . bytevector?)
        (g$12319$1l2agK core-prim . bytevector=?)
        (g$12318$1l2agK core-prim . bytevector-uint-set!)
        (g$12317$1l2agK core-prim . bytevector-uint-ref)
        (g$12316$1l2agK core-prim . bytevector-u8-set!)
        (g$12315$1l2agK core-prim . bytevector-u8-ref)
        (g$6584$1l2agK core-prim . bytevector-u64-set!)
        (g$6580$1l2agK core-prim . bytevector-u64-ref)
        (g$6586$1l2agK core-prim . bytevector-u64-native-set!)
        (g$6582$1l2agK core-prim . bytevector-u64-native-ref)
        (g$6576$1l2agK core-prim . bytevector-u32-set!)
        (g$6572$1l2agK core-prim . bytevector-u32-ref)
        (g$6578$1l2agK core-prim . bytevector-u32-native-set!)
        (g$6574$1l2agK core-prim . bytevector-u32-native-ref)
        (g$6568$1l2agK core-prim . bytevector-u16-set!)
        (g$6564$1l2agK core-prim . bytevector-u16-ref)
        (g$6570$1l2agK core-prim . bytevector-u16-native-set!)
        (g$6566$1l2agK core-prim . bytevector-u16-native-ref)
        (g$12314$1l2agK core-prim . bytevector-sint-set!)
        (g$12313$1l2agK core-prim . bytevector-sint-ref)
        (g$12312$1l2agK core-prim . bytevector-s8-set!)
        (g$12311$1l2agK core-prim . bytevector-s8-ref)
        (g$6585$1l2agK core-prim . bytevector-s64-set!)
        (g$6581$1l2agK core-prim . bytevector-s64-ref)
        (g$6587$1l2agK core-prim . bytevector-s64-native-set!)
        (g$6583$1l2agK core-prim . bytevector-s64-native-ref)
        (g$6577$1l2agK core-prim . bytevector-s32-set!)
        (g$6573$1l2agK core-prim . bytevector-s32-ref)
        (g$6579$1l2agK core-prim . bytevector-s32-native-set!)
        (g$6575$1l2agK core-prim . bytevector-s32-native-ref)
        (g$6569$1l2agK core-prim . bytevector-s16-set!)
        (g$6565$1l2agK core-prim . bytevector-s16-ref)
        (g$6571$1l2agK core-prim . bytevector-s16-native-set!)
        (g$6567$1l2agK core-prim . bytevector-s16-native-ref)
        (g$12310$1l2agK core-prim . bytevector-length)
        (g$12309$1l2agK core-prim . bytevector-ieee-single-set!)
        (g$12308$1l2agK core-prim . bytevector-ieee-single-ref)
        (g$6590$1l2agK core-prim . bytevector-ieee-single-native-set!)
        (g$6588$1l2agK core-prim . bytevector-ieee-single-native-ref)
        (g$12307$1l2agK core-prim . bytevector-ieee-double-set!)
        (g$12306$1l2agK core-prim . bytevector-ieee-double-ref)
        (g$6591$1l2agK core-prim . bytevector-ieee-double-native-set!)
        (g$6589$1l2agK core-prim . bytevector-ieee-double-native-ref)
        (g$12305$1l2agK core-prim . bytevector-fill!)
        (g$12304$1l2agK core-prim . bytevector-copy!)
        (g$12303$1l2agK core-prim . bytevector-copy)
        (g$12302$1l2agK core-prim . bytevector->uint-list)
        (g$12301$1l2agK core-prim . bytevector->u8-list)
        (g$12300$1l2agK core-prim . bytevector->sint-list)
        (g$7306$1l2agK core-prim . no-nans-violation?)
        (g$7292$1l2agK core-prim . no-infinities-violation?)
        (g$7305$1l2agK core-prim . make-no-nans-violation)
        (g$7291$1l2agK core-prim . make-no-infinities-violation)
        (g$12299$1l2agK core-prim . real->flonum)
        (g$12298$1l2agK core-prim . flzero?)
        (g$12297$1l2agK core-prim . fltruncate)
        (g$12296$1l2agK core-prim . fltan)
        (g$12295$1l2agK core-prim . flsqrt)
        (g$12294$1l2agK core-prim . flsin)
        (g$12293$1l2agK core-prim . flround)
        (g$12292$1l2agK core-prim . flpositive?)
        (g$12291$1l2agK core-prim . flonum?)
        (g$12290$1l2agK core-prim . flodd?)
        (g$12289$1l2agK core-prim . flnumerator)
        (g$12288$1l2agK core-prim . flnegative?)
        (g$12287$1l2agK core-prim . flnan?)
        (g$12286$1l2agK core-prim . flmod0)
        (g$12285$1l2agK core-prim . flmod)
        (g$12284$1l2agK core-prim . flmin)
        (g$12283$1l2agK core-prim . flmax)
        (g$12282$1l2agK core-prim . fllog)
        (g$12281$1l2agK core-prim . flinteger?)
        (g$12280$1l2agK core-prim . flinfinite?)
        (g$12279$1l2agK core-prim . flfloor)
        (g$12278$1l2agK core-prim . flfinite?)
        (g$12277$1l2agK core-prim . flexpt)
        (g$12276$1l2agK core-prim . flexp)
        (g$12275$1l2agK core-prim . fleven?)
        (g$12274$1l2agK core-prim . fldiv0-and-mod0)
        (g$12273$1l2agK core-prim . fldiv0)
        (g$12272$1l2agK core-prim . fldiv-and-mod)
        (g$12271$1l2agK core-prim . fldiv)
        (g$12270$1l2agK core-prim . fldenominator)
        (g$12269$1l2agK core-prim . flcos)
        (g$12268$1l2agK core-prim . flceiling)
        (g$12267$1l2agK core-prim . flatan)
        (g$12266$1l2agK core-prim . flasin)
        (g$12265$1l2agK core-prim . flacos)
        (g$12264$1l2agK core-prim . flabs)
        (g$12263$1l2agK core-prim . fl>?)
        (g$12262$1l2agK core-prim . fl>=?)
        (g$12261$1l2agK core-prim . fl=?)
        (g$12260$1l2agK core-prim . fl<?)
        (g$12259$1l2agK core-prim . fl<=?)
        (g$12258$1l2agK core-prim . fl/)
        (g$12257$1l2agK core-prim . fl-)
        (g$12256$1l2agK core-prim . fl+)
        (g$12255$1l2agK core-prim . fl*)
        (g$12254$1l2agK core-prim . fixnum->flonum)
        (g$12253$1l2agK core-prim . fxzero?)
        (g$12252$1l2agK core-prim . fxxor)
        (g$7237$1l2agK core-prim . fxrotate-bit-field)
        (g$12251$1l2agK core-prim . fxreverse-bit-field)
        (g$12250$1l2agK core-prim . fxpositive?)
        (g$12249$1l2agK core-prim . fxodd?)
        (g$12248$1l2agK core-prim . fxnot)
        (g$12247$1l2agK core-prim . fxnegative?)
        (g$12246$1l2agK core-prim . fxmod0)
        (g$12245$1l2agK core-prim . fxmod)
        (g$12244$1l2agK core-prim . fxmin)
        (g$12243$1l2agK core-prim . fxmax)
        (g$12242$1l2agK core-prim . fxlength)
        (g$12241$1l2agK core-prim . fxior)
        (g$7231$1l2agK core-prim . fxif)
        (g$12240$1l2agK core-prim . fxfirst-bit-set)
        (g$12239$1l2agK core-prim . fxeven?)
        (g$12238$1l2agK core-prim . fxdiv0-and-mod0)
        (g$12237$1l2agK core-prim . fxdiv0)
        (g$12236$1l2agK core-prim . fxdiv-and-mod)
        (g$12235$1l2agK core-prim . fxdiv)
        (g$7234$1l2agK core-prim . fxcopy-bit-field)
        (g$7232$1l2agK core-prim . fxcopy-bit)
        (g$12234$1l2agK core-prim . fxbit-set?)
        (g$7233$1l2agK core-prim . fxbit-field)
        (g$12233$1l2agK core-prim . fxbit-count)
        (g$7236$1l2agK core-prim . fxarithmetic-shift-right)
        (g$7235$1l2agK core-prim . fxarithmetic-shift-left)
        (g$12232$1l2agK core-prim . fxarithmetic-shift)
        (g$12231$1l2agK core-prim . fxand)
        (g$12230$1l2agK core-prim . fx>?)
        (g$12229$1l2agK core-prim . fx>=?)
        (g$12228$1l2agK core-prim . fx=?)
        (g$12227$1l2agK core-prim . fx<?)
        (g$12226$1l2agK core-prim . fx<=?)
        (g$12225$1l2agK core-prim . fx-/carry)
        (g$12224$1l2agK core-prim . fx-)
        (g$12223$1l2agK core-prim . fx+/carry)
        (g$12222$1l2agK core-prim . fx+)
        (g$12221$1l2agK core-prim . fx*/carry)
        (g$12220$1l2agK core-prim . fx*)
        (g$12219$1l2agK core-prim . greatest-fixnum)
        (g$12218$1l2agK core-prim . least-fixnum)
        (g$12217$1l2agK core-prim . fixnum-width)
        (g$12216$1l2agK core-prim . fixnum?)
        (g$7189$1l2agK core-prim . bitwise-rotate-bit-field)
        (g$12215$1l2agK core-prim . bitwise-reverse-bit-field)
        (g$12214$1l2agK core-prim . bitwise-length)
        (g$7183$1l2agK core-prim . bitwise-if)
        (g$12213$1l2agK core-prim . bitwise-first-bit-set)
        (g$7186$1l2agK core-prim . bitwise-copy-bit-field)
        (g$7184$1l2agK core-prim . bitwise-copy-bit)
        (g$12212$1l2agK core-prim . bitwise-bit-set?)
        (g$12211$1l2agK core-prim . bitwise-bit-field)
        (g$12210$1l2agK core-prim . bitwise-bit-count)
        (g$12209$1l2agK core-prim . bitwise-xor)
        (g$12208$1l2agK core-prim . bitwise-ior)
        (g$12207$1l2agK core-prim . bitwise-and)
        (g$12206$1l2agK core-prim . bitwise-not)
        (g$7188$1l2agK core-prim . bitwise-arithmetic-shift-right)
        (g$7187$1l2agK core-prim . bitwise-arithmetic-shift-left)
        (g$12205$1l2agK core-prim . bitwise-arithmetic-shift)
        (g$12204$1l2agK core-prim . zero?)
        (g$12203$1l2agK core-prim . vector?)
        (g$12202$1l2agK core-prim . vector-set!)
        (g$12201$1l2agK core-prim . vector-ref)
        (g$12200$1l2agK core-prim . vector-map)
        (g$12199$1l2agK core-prim . vector-length)
        (g$12198$1l2agK core-prim . vector-for-each)
        (g$12197$1l2agK core-prim . vector-fill!)
        (g$12196$1l2agK core-prim . vector->list)
        (g$12195$1l2agK core-prim . vector)
        (g$12194$1l2agK core-prim . values)
        (g$12193$1l2agK core-prim . truncate)
        (g$12192$1l2agK core-prim . tan)
        (g$12191$1l2agK core-prim . symbol?)
        (g$5872$1l2agK core-prim . symbol=?)
        (g$12190$1l2agK core-prim . symbol->string)
        (g$12189$1l2agK core-prim . substring)
        (g$12188$1l2agK core-prim . string?)
        (g$5869$1l2agK core-prim . string>?)
        (g$5871$1l2agK core-prim . string>=?)
        (g$5867$1l2agK core-prim . string=?)
        (g$5868$1l2agK core-prim . string<?)
        (g$5870$1l2agK core-prim . string<=?)
        (g$12187$1l2agK core-prim . string-ref)
        (g$12186$1l2agK core-prim . string-length)
        (g$12185$1l2agK core-prim . string-for-each)
        (g$12184$1l2agK core-prim . string-copy)
        (g$12183$1l2agK core-prim . string-append)
        (g$12182$1l2agK core-prim . string->symbol)
        (g$12181$1l2agK core-prim . string->number)
        (g$12180$1l2agK core-prim . string->list)
        (g$12179$1l2agK core-prim . string)
        (g$12178$1l2agK core-prim . sqrt)
        (g$12177$1l2agK core-prim . sin)
        (g$12176$1l2agK core-prim . round)
        (g$12175$1l2agK core-prim . reverse)
        (g$12174$1l2agK core-prim . real?)
        (g$12173$1l2agK core-prim . real-valued?)
        (g$12172$1l2agK core-prim . real-part)
        (g$5925$1l2agK core-prim . rationalize)
        (g$12171$1l2agK core-prim . rational?)
        (g$12170$1l2agK core-prim . rational-valued?)
        (g$12169$1l2agK core-prim . procedure?)
        (g$12168$1l2agK core-prim . positive?)
        (g$12167$1l2agK core-prim . pair?)
        (g$12166$1l2agK core-prim . odd?)
        (g$12165$1l2agK core-prim . numerator)
        (g$12164$1l2agK core-prim . number?)
        (g$12163$1l2agK core-prim . number->string)
        (g$12162$1l2agK core-prim . null?)
        (g$12161$1l2agK core-prim . not)
        (g$12160$1l2agK core-prim . negative?)
        (g$12159$1l2agK core-prim . nan?)
        (g$12158$1l2agK core-prim . min)
        (g$12157$1l2agK core-prim . max)
        (g$12156$1l2agK core-prim . map)
        (g$12155$1l2agK core-prim . make-vector)
        (g$12154$1l2agK core-prim . make-string)
        (g$12153$1l2agK core-prim . make-rectangular)
        (g$12152$1l2agK core-prim . make-polar)
        (g$12151$1l2agK core-prim . magnitude)
        (g$12150$1l2agK core-prim . log)
        (g$12149$1l2agK core-prim . list?)
        (g$12148$1l2agK core-prim . list-tail)
        (g$12147$1l2agK core-prim . list-ref)
        (g$12146$1l2agK core-prim . list->vector)
        (g$12145$1l2agK core-prim . list->string)
        (g$12144$1l2agK core-prim . list)
        (g$12143$1l2agK core-prim . length)
        (g$12142$1l2agK core-prim . lcm)
        (g$12141$1l2agK core-prim . integer?)
        (g$12140$1l2agK core-prim . integer-valued?)
        (g$12139$1l2agK core-prim . integer->char)
        (g$12138$1l2agK core-prim . infinite?)
        (g$12137$1l2agK core-prim . inexact?)
        (g$12136$1l2agK core-prim . inexact)
        (g$12135$1l2agK core-prim . imag-part)
        (g$12134$1l2agK core-prim . gcd)
        (g$12133$1l2agK core-prim . for-each)
        (g$12132$1l2agK core-prim . floor)
        (g$12131$1l2agK core-prim . finite?)
        (g$12130$1l2agK core-prim . expt)
        (g$12129$1l2agK core-prim . exp)
        (g$12128$1l2agK core-prim . exact?)
        (g$12127$1l2agK core-prim . exact-integer-sqrt)
        (g$12126$1l2agK core-prim . exact)
        (g$12125$1l2agK core-prim . even?)
        (g$12124$1l2agK core-prim . error)
        (g$12123$1l2agK core-prim . eqv?)
        (g$12122$1l2agK core-prim . equal?)
        (g$12121$1l2agK core-prim . eq?)
        (g$12120$1l2agK core-prim . dynamic-wind)
        (g$12119$1l2agK core-prim . div0-and-mod0)
        (g$12118$1l2agK core-prim . mod0)
        (g$12117$1l2agK core-prim . div0)
        (g$12116$1l2agK core-prim . div-and-mod)
        (g$12115$1l2agK core-prim . mod)
        (g$12114$1l2agK core-prim . div)
        (g$12113$1l2agK core-prim . denominator)
        (g$12112$1l2agK core-prim . cos)
        (g$12111$1l2agK core-prim . cons)
        (g$12110$1l2agK core-prim . complex?)
        (g$12109$1l2agK core-prim . char?)
        (g$5922$1l2agK core-prim . char>?)
        (g$5924$1l2agK core-prim . char>=?)
        (g$5920$1l2agK core-prim . char=?)
        (g$5921$1l2agK core-prim . char<?)
        (g$5923$1l2agK core-prim . char<=?)
        (g$12108$1l2agK core-prim . char->integer)
        (g$12107$1l2agK core-prim . ceiling)
        (g$12106$1l2agK core-prim . call-with-values)
        (g$12105$1l2agK core-prim . call/cc)
        (g$12104$1l2agK core-prim . call-with-current-continuation)
        (g$5820$1l2agK core-prim . cddddr)
        (g$5819$1l2agK core-prim . cdddar)
        (g$5818$1l2agK core-prim . cddadr)
        (g$5817$1l2agK core-prim . cddaar)
        (g$5816$1l2agK core-prim . cdaddr)
        (g$5815$1l2agK core-prim . cdadar)
        (g$5814$1l2agK core-prim . cdaadr)
        (g$5813$1l2agK core-prim . cdaaar)
        (g$5812$1l2agK core-prim . cadddr)
        (g$5811$1l2agK core-prim . caddar)
        (g$5810$1l2agK core-prim . cadadr)
        (g$5809$1l2agK core-prim . cadaar)
        (g$5808$1l2agK core-prim . caaddr)
        (g$5807$1l2agK core-prim . caadar)
        (g$5806$1l2agK core-prim . caaadr)
        (g$5805$1l2agK core-prim . caaaar)
        (g$5804$1l2agK core-prim . cdddr)
        (g$5803$1l2agK core-prim . cddar)
        (g$5802$1l2agK core-prim . cdadr)
        (g$5801$1l2agK core-prim . cdaar)
        (g$5800$1l2agK core-prim . caddr)
        (g$5799$1l2agK core-prim . cadar)
        (g$5798$1l2agK core-prim . caadr)
        (g$5797$1l2agK core-prim . caaar)
        (g$5796$1l2agK core-prim . cddr)
        (g$5795$1l2agK core-prim . cdar)
        (g$5794$1l2agK core-prim . cadr)
        (g$5793$1l2agK core-prim . caar)
        (g$12103$1l2agK core-prim . cdr)
        (g$12102$1l2agK core-prim . car)
        (g$12101$1l2agK core-prim . boolean?)
        (g$5873$1l2agK core-prim . boolean=?)
        (g$12100$1l2agK core-prim . atan)
        (g$12099$1l2agK core-prim . assertion-violation)
        (g$12098$1l2agK core-prim . asin)
        (g$12097$1l2agK core-prim . apply)
        (g$12096$1l2agK core-prim . append)
        (g$12095$1l2agK core-prim . angle)
        (g$12094$1l2agK core-prim . acos)
        (g$12093$1l2agK core-prim . abs)
        (g$12092$1l2agK core-prim . /)
        (g$12091$1l2agK core-prim . *)
        (g$12090$1l2agK core-prim . -)
        (g$12089$1l2agK core-prim . +)
        (g$12088$1l2agK core-prim . >=)
        (g$12087$1l2agK core-prim . >)
        (g$12086$1l2agK core-prim . =)
        (g$12085$1l2agK core-prim . <=)
        (g$12084$1l2agK core-prim . <)
        (g$12083$1l2agK core-prim . make-record-printer)
        (g$12082$1l2agK core-prim . eqv-hash)
        (g$12081$1l2agK core-prim . eq-hash)
        (g$12080$1l2agK core-prim . reverse!)
        (g$12079$1l2agK core-prim . deserialize-port)
        (g$12078$1l2agK core-prim . serialize-port)
        (g$7549$1l2agK core-prim . enum-set?)
        (g$6903$1l2agK core-prim . make-promise)
        (g$11916$1l2agK core-prim . load/args)
        (g$7657$1l2agK core-prim . printf)
        (g$7658$1l2agK core-prim . fprintf)
        (g$7659$1l2agK core-prim . format)
        (g$12077$1l2agK core-prim . get-arity)
        (g$12076$1l2agK core-prim . gc-collect)
        (g$12075$1l2agK core-prim . clr-type?)
        (g$12074$1l2agK core-prim . get-clr-type)
        (g$12073$1l2agK core-prim . get-command-line)
        (g$12072$1l2agK core-prim . vector-append)
        (g$12071$1l2agK core-prim . vector-filter)
        (g$12070$1l2agK core-prim . vector-reverse!)
        (g$12069$1l2agK core-prim . vector-contains?)
        (g$12068$1l2agK core-prim . vector-index-of)
        (g$12067$1l2agK core-prim . vector-copy)
        (g$12066$1l2agK core-prim . vector-binary-search)
        (g$12065$1l2agK core-prim . get-output-string)
        (g$12064$1l2agK core-prim . open-output-string)
        (g$12063$1l2agK core-prim . open-input-string)
        (g$12062$1l2agK core-prim . string-ci-compare)
        (g$12061$1l2agK core-prim . string-compare)
        (g$12060$1l2agK core-prim . string-format)
        (g$11913$1l2agK core-prim . trace-printer)
        (g$12059$1l2agK core-prim . make-traced-procedure)
        (g$7679$1l2agK core-prim . make-traced-macro)
        (g$8968$1l2agK core-prim . assertion-error)
        (g$12058$1l2agK core-prim . pmap)
        (g$12057$1l2agK core-prim . time-it)
        (g$7684$1l2agK core-prim . make-parameter)
        (g$12056$1l2agK core-prim . library-locator)
        (g$12055$1l2agK core-prim . get-library-paths)
        (g$8948$1l2agK core-prim . environment-bindings)
        (g$8947$1l2agK core-prim . environment-symbols)
        (g$8946$1l2agK core-prim . interaction-environment-symbols)
        (g$8115$1l2agK core-prim . library-path)
        (g$8116$1l2agK core-prim . library-extensions)
        (g$8136$1l2agK core-prim . installed-libraries)
        (g$8954$1l2agK core-prim . expand)
        (g$12054$1l2agK $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12053$1l2agK $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12052$1l2agK $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12051$1l2agK $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12050$1l2agK $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12049$1l2agK
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12048$1l2agK
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12047$1l2agK
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12046$1l2agK
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12045$1l2agK $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12044$1l2agK
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12043$1l2agK $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12042$1l2agK $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12041$1l2agK $core-rtd &i/o-rtd &i/o-rcd)
        (g$12040$1l2agK $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12039$1l2agK $core-rtd &undefined-rtd &undefined-rcd)
        (g$12038$1l2agK $core-rtd &syntax-rtd &syntax-rcd)
        (g$12037$1l2agK $core-rtd &lexical-rtd &lexical-rcd)
        (g$12036$1l2agK
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12035$1l2agK $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12034$1l2agK $core-rtd &who-rtd &who-rcd)
        (g$12033$1l2agK $core-rtd &irritants-rtd &irritants-rcd)
        (g$12032$1l2agK $core-rtd &assertion-rtd &assertion-rcd)
        (g$12031$1l2agK $core-rtd &violation-rtd &violation-rcd)
        (g$12030$1l2agK $core-rtd &error-rtd &error-rcd)
        (g$12029$1l2agK $core-rtd &serious-rtd &serious-rcd)
        (g$12028$1l2agK $core-rtd &warning-rtd &warning-rcd)
        (g$12027$1l2agK $core-rtd &message-rtd &message-rcd)
        (g$12026$1l2agK $core-rtd &condition-rtd &condition-rcd)
        (g$12025$1l2agK macro . define-condition-type)
        (g$12024$1l2agK macro . define-enumeration)
        (g$12023$1l2agK macro . define-record-type)
        (g$12022$1l2agK macro . parent-rtd)
        (g$12021$1l2agK macro . nongenerative)
        (g$12020$1l2agK macro . opaque)
        (g$12019$1l2agK macro . sealed)
        (g$12018$1l2agK macro . protocol)
        (g$12017$1l2agK macro . parent)
        (g$12016$1l2agK macro . immutable)
        (g$12015$1l2agK macro . mutable)
        (g$12014$1l2agK macro . fields)
        (g$12013$1l2agK macro . error-handling-mode)
        (g$12012$1l2agK macro . file-options)
        (g$12011$1l2agK macro . buffer-mode)
        (g$12010$1l2agK macro . eol-style)
        (g$12009$1l2agK macro . guard)
        (g$12008$1l2agK macro . trace-letrec-syntax)
        (g$12007$1l2agK macro . trace-let-syntax)
        (g$12006$1l2agK macro . trace-define-syntax)
        (g$12005$1l2agK macro . trace-define)
        (g$12004$1l2agK macro . trace-lambda)
        (g$12003$1l2agK macro . unsyntax-splicing)
        (g$12002$1l2agK macro . unsyntax)
        (g$12001$1l2agK macro . unquote-splicing)
        (g$12000$1l2agK macro . unquote)
        (g$11999$1l2agK macro . _)
        (g$11998$1l2agK macro . else)
        (g$11997$1l2agK macro . =>)
        (g$11996$1l2agK macro . ...)
        (g$11995$1l2agK macro . assert)
        (g$11994$1l2agK macro . endianness)
        (g$11993$1l2agK macro . delay)
        (g$11992$1l2agK macro . time)
        (g$11991$1l2agK macro . or)
        (g$11990$1l2agK macro . and)
        (g$11989$1l2agK macro . do)
        (g$11988$1l2agK macro . cond)
        (g$11987$1l2agK macro . let*)
        (g$11986$1l2agK macro . let)
        (g$11985$1l2agK macro . identifier-syntax)
        (g$11984$1l2agK macro . with-syntax)
        (g$11983$1l2agK macro . quasisyntax)
        (g$11982$1l2agK macro . quasiquote)
        (g$11981$1l2agK macro . syntax-rules)
        (g$11980$1l2agK macro . include-into)
        (g$11979$1l2agK macro . include)
        (g$11978$1l2agK macro . define-struct)
        (g$11977$1l2agK macro . let-values)
        (g$11976$1l2agK macro . let*-values)
        (g$11975$1l2agK core-macro . record-constructor-descriptor)
        (g$11974$1l2agK core-macro . record-type-descriptor)
        (g$11973$1l2agK core-macro . fluid-let-syntax)
        (g$11972$1l2agK macro . case)
        (g$11971$1l2agK macro . parameterize)
        (g$11970$1l2agK macro . unless)
        (g$11969$1l2agK macro . when)
        (g$11968$1l2agK core-macro . if)
        (g$11967$1l2agK core-macro . letrec*)
        (g$11966$1l2agK core-macro . letrec)
        (g$11965$1l2agK core-macro . type-descriptor)
        (g$11964$1l2agK core-macro . case-lambda)
        (g$11963$1l2agK core-macro . lambda)
        (g$11962$1l2agK core-macro . syntax)
        (g$11961$1l2agK core-macro . syntax-case)
        (g$11960$1l2agK core-macro . quote)
        (g$11959$1l2agK core-macro . foreign-call)
        (g$11958$1l2agK letrec-syntax)
        (g$11957$1l2agK let-syntax)
        (g$11956$1l2agK set!)
        (g$11955$1l2agK import)
        (g$11954$1l2agK library)
        (g$11953$1l2agK begin)
        (g$11952$1l2agK module)
        (g$11951$1l2agK define-syntax)
        (g$11950$1l2agK define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7186$1l2agK
      'g$12607$1l2agK
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12486$1l2agK)
        (eval-core . g$12485$1l2agK)
        (set-symbol-value! . g$12484$1l2agK)
        (symbol-value . g$12483$1l2agK)
        (gensym . g$12481$1l2agK)
        (void . g$12480$1l2agK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11216$1l2agK
     g$trace-printer$11256$1l2agK
     (g$make-parameter$6640$1l2agK write))
   (g$command-line$11217$1l2agK
     g$command-line$11257$1l2agK
     (g$make-parameter$6640$1l2agK (get-command-line)))
   (g$local-library-path$11218$1l2agK
     g$local-library-path$11258$1l2agK
     (case-lambda
       ((g$filename$11229$1l2agK)
        (cons
          (g$get-directory-name$5389$1l2agK g$filename$11229$1l2agK)
          (g$library-path$7170$1l2agK)))))
   (g$load/args$11219$1l2agK
     g$load/args$11259$1l2agK
     (case-lambda
       ((g$filename$11230$1l2agK . g$args$11231$1l2agK)
        (begin
          (apply
            g$load-r6rs-top-level$11226$1l2agK
            g$filename$11230$1l2agK
            'load
            g$args$11231$1l2agK)
          (void)))))
   (g$load$11220$1l2agK
     g$load$11260$1l2agK
     (case-lambda
       ((g$filename$11232$1l2agK)
        (begin
          (apply
            g$load-r6rs-top-level$11226$1l2agK
            g$filename$11232$1l2agK
            'load
            (cdr (g$command-line$11217$1l2agK)))
          (void)))))
   (g$ironscheme-build$11221$1l2agK
     g$ironscheme-build$11261$1l2agK
     (case-lambda (() (g$load$11220$1l2agK '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11222$1l2agK
     g$eval-top-level$11262$1l2agK
     (case-lambda
       ((g$x$11233$1l2agK)
        (g$eval$11191$1l2agK
          g$x$11233$1l2agK
          (g$interaction-environment$11214$1l2agK)))))
   (g$compile-system-libraries$11223$1l2agK
     g$compile-system-libraries$11263$1l2agK
     (case-lambda
       (()
        (g$eval-top-level$11222$1l2agK
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11224$1l2agK
     g$compile$11264$1l2agK
     (case-lambda
       ((g$filename$11234$1l2agK)
        (g$load-r6rs-top-level$11226$1l2agK g$filename$11234$1l2agK 'compile))))
   (g$compile->closure$11225$1l2agK
     g$compile->closure$11265$1l2agK
     (case-lambda
       ((g$filename$11235$1l2agK)
        (g$load-r6rs-top-level$11226$1l2agK g$filename$11235$1l2agK 'closure))))
   (g$load-r6rs-top-level$11226$1l2agK
     g$load-r6rs-top-level$11266$1l2agK
     (case-lambda
       ((g$filename$11236$1l2agK g$how$11237$1l2agK . g$args$11238$1l2agK)
        ((case-lambda
           ((g$library-path$11241$1l2agK g$library-path$11242$1l2agK)
            ((case-lambda
               ((g$swap$11243$1l2agK)
                (dynamic-wind
                  g$swap$11243$1l2agK
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11244$1l2agK)
                         ((case-lambda
                            ((g$t$11245$1l2agK)
                             (if (memv g$t$11245$1l2agK '(closure))
                               (g$pre-compile-r6rs-top-level$11213$1l2agK
                                 g$x*$11244$1l2agK)
                               (if (memv g$t$11245$1l2agK '(load))
                                 ((case-lambda
                                    ((g$command-line$11248$1l2agK
                                       g$command-line$11249$1l2agK)
                                     ((case-lambda
                                        ((g$swap$11250$1l2agK)
                                         (dynamic-wind
                                           g$swap$11250$1l2agK
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11212$1l2agK
                                                 g$x*$11244$1l2agK))))
                                           g$swap$11250$1l2agK)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11251$1l2agK)
                                             (begin
                                               (g$command-line$11248$1l2agK
                                                 g$command-line$11249$1l2agK)
                                               (set! g$command-line$11249$1l2agK
                                                 g$t$11251$1l2agK))))
                                          (g$command-line$11248$1l2agK)))))))
                                  g$command-line$11217$1l2agK
                                  (cons
                                    g$filename$11236$1l2agK
                                    (map (case-lambda
                                           ((g$x$11252$1l2agK)
                                            (g$format$6555$1l2agK
                                              '"~a"
                                              g$x$11252$1l2agK)))
                                         g$args$11238$1l2agK)))
                                 (if (memv g$t$11245$1l2agK '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11212$1l2agK
                                       g$x*$11244$1l2agK)
                                     (g$serialize-all$7174$1l2agK
                                       serialize-library
                                       g$compile-core-expr$6888$1l2agK))
                                   (if '#f '#f (void)))))))
                          g$how$11237$1l2agK)))
                      (g$with-input-from-file$6386$1l2agK
                        g$filename$11236$1l2agK
                        (case-lambda
                          (()
                           ((letrec ((g$f$11253$1l2agK
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11254$1l2agK)
                                              (if (eof-object? g$x$11254$1l2agK)
                                                '()
                                                (cons
                                                  g$x$11254$1l2agK
                                                  (g$f$11253$1l2agK)))))
                                           (read-annotated))))))
                              g$f$11253$1l2agK))))))))
                  g$swap$11243$1l2agK)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11255$1l2agK)
                    (begin
                      (g$library-path$11241$1l2agK g$library-path$11242$1l2agK)
                      (set! g$library-path$11242$1l2agK g$t$11255$1l2agK))))
                 (g$library-path$11241$1l2agK)))))))
         g$library-path$7170$1l2agK
         (g$local-library-path$11218$1l2agK g$filename$11236$1l2agK)))))
   (g$fo$11227$1l2agK
     g$fo$11267$1l2agK
     (g$make-enumeration$6517$1l2agK '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7175$1l2agK
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11228$1l2agK)
         (if (g$serious-condition?$5772$1l2agK g$ex$11228$1l2agK)
           (raise g$ex$11228$1l2agK)
           (begin (display g$ex$11228$1l2agK) (newline))))))
    (set-symbol-value! 'load g$load$11220$1l2agK)
    (set-symbol-value! 'compile g$compile$11224$1l2agK)
    (set-symbol-value! 'compile->closure g$compile->closure$11225$1l2agK)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11222$1l2agK)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11182$1l2agK)
    (set-symbol-value! 'expanded2core g$expanded->core$6887$1l2agK)
    (set-symbol-value! 'trace-printer g$trace-printer$11216$1l2agK)
    (g$file-options-constructor$6641$1l2agK
      (g$enum-set-constructor$6520$1l2agK g$fo$11227$1l2agK))
    (g$library-path$7170$1l2agK (get-library-paths))))

